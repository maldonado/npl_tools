//test out the optimizer:	WITHOUT_CLASSIFICATION	0.999996333202806	WITHOUT_CLASSIFICATION	3.6667971939890178E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101863	WITHOUT_CLASSIFICATION	1.8963898137365965E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101863	WITHOUT_CLASSIFICATION	1.8963898137365965E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101863	WITHOUT_CLASSIFICATION	1.8963898137365965E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101863	WITHOUT_CLASSIFICATION	1.8963898137365965E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101863	WITHOUT_CLASSIFICATION	1.8963898137365965E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101863	WITHOUT_CLASSIFICATION	1.8963898137365965E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101863	WITHOUT_CLASSIFICATION	1.8963898137365965E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999991300093233	WITHOUT_CLASSIFICATION	8.699906768096394E-7	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999991300093233	WITHOUT_CLASSIFICATION	8.699906768096394E-7	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9999812583256716	WITHOUT_CLASSIFICATION	1.8741674328296532E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999988206340872	WITHOUT_CLASSIFICATION	1.1793659128608204E-6	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999995572459721	WITHOUT_CLASSIFICATION	4.4275402793398656E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999914713138337	WITHOUT_CLASSIFICATION	8.528686166394512E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999914713138337	WITHOUT_CLASSIFICATION	8.528686166394512E-6	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999997250035199	WITHOUT_CLASSIFICATION	2.7499648006690396E-7	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999630679277	WITHOUT_CLASSIFICATION	3.693207217315217E-8	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999995596817547	WITHOUT_CLASSIFICATION	4.403182453790737E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999953723149673	WITHOUT_CLASSIFICATION	4.627685032774923E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999994549385229	WITHOUT_CLASSIFICATION	5.450614771446238E-7	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999994549385229	WITHOUT_CLASSIFICATION	5.450614771446238E-7	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999985416058637	WITHOUT_CLASSIFICATION	1.458394136282842E-6	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9999950689763427	WITHOUT_CLASSIFICATION	4.9310236573520096E-6	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999996844095802	WITHOUT_CLASSIFICATION	3.1559041982176994E-7	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999997527224658	WITHOUT_CLASSIFICATION	2.4727753420169234E-7	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999954173446	WITHOUT_CLASSIFICATION	4.5826553262437075E-9	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999943563118667	WITHOUT_CLASSIFICATION	5.6436881332363755E-6	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.999991458927464	WITHOUT_CLASSIFICATION	8.541072536023278E-6	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999889113378709	WITHOUT_CLASSIFICATION	1.1088662129080154E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999983096945823	WITHOUT_CLASSIFICATION	1.6903054177065114E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998180358559572	WITHOUT_CLASSIFICATION	1.8196414404286534E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999919849430162	WITHOUT_CLASSIFICATION	8.015056983880422E-6	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.999987333234605	WITHOUT_CLASSIFICATION	1.2666765395030267E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.999999891385535	WITHOUT_CLASSIFICATION	1.0861446489805481E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999840169513723	WITHOUT_CLASSIFICATION	1.5983048627720322E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999840169513723	WITHOUT_CLASSIFICATION	1.5983048627720322E-5	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999999883674645	WITHOUT_CLASSIFICATION	1.1632535552528258E-8	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999872286195722	WITHOUT_CLASSIFICATION	1.2771380427867851E-5	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999997957990217	WITHOUT_CLASSIFICATION	2.0420097837712468E-7	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999999948163765	WITHOUT_CLASSIFICATION	5.1836234916943285E-9	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9998931756057136	WITHOUT_CLASSIFICATION	1.0682439428650428E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9150981348986583	DOCUMENTATION	0.08490186510134169	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9150981348986583	DOCUMENTATION	0.08490186510134169	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999999646993573	WITHOUT_CLASSIFICATION	3.5300642821498455E-8	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999999381820561	WITHOUT_CLASSIFICATION	6.181794388582388E-8	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999999810909879	WITHOUT_CLASSIFICATION	1.8909012195898387E-8	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999992409976973	WITHOUT_CLASSIFICATION	7.590023027568794E-7	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999975204915871	WITHOUT_CLASSIFICATION	2.4795084129174597E-6	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976091107415	WITHOUT_CLASSIFICATION	2.3908892584425324E-6	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976749577653	WITHOUT_CLASSIFICATION	2.3250422346994585E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999960696030311	WITHOUT_CLASSIFICATION	3.930396968928765E-6	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999450985577085	WITHOUT_CLASSIFICATION	5.4901442291599695E-5	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999999804454149	WITHOUT_CLASSIFICATION	1.9554584987621393E-8	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999767151104861	WITHOUT_CLASSIFICATION	2.328488951394249E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999450985577085	WITHOUT_CLASSIFICATION	5.4901442291599695E-5	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999767151104861	WITHOUT_CLASSIFICATION	2.328488951394249E-5	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999963533164069	WITHOUT_CLASSIFICATION	3.6466835932172612E-6	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9999996196586832	WITHOUT_CLASSIFICATION	3.8034131680867865E-7	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999998735510903	WITHOUT_CLASSIFICATION	1.2644890963544942E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.999999964269439	WITHOUT_CLASSIFICATION	3.573056095681897E-8	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999992904024887	WITHOUT_CLASSIFICATION	7.095975113341699E-7	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999999425786543	WITHOUT_CLASSIFICATION	5.742134569142801E-8	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9999539232532445	WITHOUT_CLASSIFICATION	4.6076746755489595E-5	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999697718127118	WITHOUT_CLASSIFICATION	3.022818728808034E-5	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999999858782832	WITHOUT_CLASSIFICATION	1.4121716818056591E-8	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9999980144849495	WITHOUT_CLASSIFICATION	1.985515050594328E-6	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999993569672366	WITHOUT_CLASSIFICATION	6.430327633602143E-7	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.999996453812716	WITHOUT_CLASSIFICATION	3.5461872841267823E-6	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999892637776	WITHOUT_CLASSIFICATION	1.0736222428599729E-8	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.999999707804984	WITHOUT_CLASSIFICATION	2.9219501604893866E-7	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.999999980806201	WITHOUT_CLASSIFICATION	1.9193798985628546E-8	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999999565517946	WITHOUT_CLASSIFICATION	4.344820545529085E-8	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999997671083662	WITHOUT_CLASSIFICATION	2.3289163384629466E-7	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999999302526877	WITHOUT_CLASSIFICATION	6.974731221302102E-8	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.999999816580351	WITHOUT_CLASSIFICATION	1.8341964896311617E-7	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999996274531219	WITHOUT_CLASSIFICATION	3.7254687811664E-7	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999995713440094	WITHOUT_CLASSIFICATION	4.286559906227582E-7	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999998834478689	WITHOUT_CLASSIFICATION	1.1655213103724806E-7	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999994634448799	WITHOUT_CLASSIFICATION	5.365551201093803E-7	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999991063883082	WITHOUT_CLASSIFICATION	8.936116917281051E-7	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9999999750715235	WITHOUT_CLASSIFICATION	2.4928476532202966E-8	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999985443076438	WITHOUT_CLASSIFICATION	1.4556923562197435E-6	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999997455164974	WITHOUT_CLASSIFICATION	2.5448350255954047E-7	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9999998338685507	WITHOUT_CLASSIFICATION	1.6613144934802512E-7	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999998797248074	WITHOUT_CLASSIFICATION	1.2027519253581427E-7	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999997683931848	WITHOUT_CLASSIFICATION	2.3160681521032506E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999989322505385	WITHOUT_CLASSIFICATION	1.0677494614642866E-6	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999998603924313	WITHOUT_CLASSIFICATION	1.3960756882883186E-7	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999974160966799	WITHOUT_CLASSIFICATION	2.583903320020659E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999994497501663	WITHOUT_CLASSIFICATION	5.502498336429942E-7	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999997137484733	WITHOUT_CLASSIFICATION	2.862515267170917E-7	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999960421012725	WITHOUT_CLASSIFICATION	3.957898727512889E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999994497501663	WITHOUT_CLASSIFICATION	5.502498336429942E-7	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999999974328689	WITHOUT_CLASSIFICATION	2.567131113765245E-9	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999999933368399	WITHOUT_CLASSIFICATION	6.663160116778945E-9	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999975077226293	WITHOUT_CLASSIFICATION	2.492277370784299E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999985662791023	WITHOUT_CLASSIFICATION	1.4337208976361233E-6	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.9999996663966869	WITHOUT_CLASSIFICATION	3.336033131495488E-7	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999012118037882	WITHOUT_CLASSIFICATION	9.878819621182435E-5	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999012118037882	WITHOUT_CLASSIFICATION	9.878819621182435E-5	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999891305557272	WITHOUT_CLASSIFICATION	1.0869444272659686E-5	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999996982602378	WITHOUT_CLASSIFICATION	3.0173976219001213E-7	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9999917281285159	WITHOUT_CLASSIFICATION	8.271871484094578E-6	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999999548102925	WITHOUT_CLASSIFICATION	4.5189707587851684E-8	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.999999876256344	WITHOUT_CLASSIFICATION	1.23743656027999E-7	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999996260393598	WITHOUT_CLASSIFICATION	3.7396064027237984E-7	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999990552168888	WITHOUT_CLASSIFICATION	9.447831111681703E-7	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999991621804256	WITHOUT_CLASSIFICATION	8.378195742958082E-7	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999998252620368	WITHOUT_CLASSIFICATION	1.7473796314331616E-7	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999995196883446	WITHOUT_CLASSIFICATION	4.803116555646828E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999993488368647	WITHOUT_CLASSIFICATION	6.511631352970001E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999993488368647	WITHOUT_CLASSIFICATION	6.511631352970001E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999988736961185	WITHOUT_CLASSIFICATION	1.1263038815059297E-6	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999985152536182	WITHOUT_CLASSIFICATION	1.4847463818904541E-6	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9999993490237401	WITHOUT_CLASSIFICATION	6.509762597655424E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999993488368647	WITHOUT_CLASSIFICATION	6.511631352970001E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999988736961185	WITHOUT_CLASSIFICATION	1.1263038815059297E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999988736961185	WITHOUT_CLASSIFICATION	1.1263038815059297E-6	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999999251296608	WITHOUT_CLASSIFICATION	7.487033915201064E-8	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999995003504357	WITHOUT_CLASSIFICATION	4.99649564297836E-7	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999994829986052	WITHOUT_CLASSIFICATION	5.17001394801231E-7	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999998841223409	WITHOUT_CLASSIFICATION	1.158776591315154E-7	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999972394050567	WITHOUT_CLASSIFICATION	2.7605949432394764E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999972394050567	WITHOUT_CLASSIFICATION	2.7605949432394764E-6	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999977116779006	WITHOUT_CLASSIFICATION	2.288322099334759E-6	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999960975280481	WITHOUT_CLASSIFICATION	3.902471951949192E-6	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999993034880483	WITHOUT_CLASSIFICATION	6.965119516566505E-7	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999997863877856	WITHOUT_CLASSIFICATION	2.1361221444370204E-7	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999997863877856	WITHOUT_CLASSIFICATION	2.1361221444370204E-7	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999724188972207	WITHOUT_CLASSIFICATION	2.758110277925143E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999997770653233	WITHOUT_CLASSIFICATION	2.2293467685388017E-7	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.999998271274619	WITHOUT_CLASSIFICATION	1.7287253810435044E-6	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999999818866343	WITHOUT_CLASSIFICATION	1.8113365734578665E-8	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999985648100873	WITHOUT_CLASSIFICATION	1.435189912644401E-6	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999990028527512	WITHOUT_CLASSIFICATION	9.971472488251082E-7	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9999969607073395	WITHOUT_CLASSIFICATION	3.039292660683506E-6	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999995109125599	WITHOUT_CLASSIFICATION	4.890874400151978E-7	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9999987645430021	WITHOUT_CLASSIFICATION	1.235456997940518E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.999998271274619	WITHOUT_CLASSIFICATION	1.7287253810435044E-6	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9999479359298629	WITHOUT_CLASSIFICATION	5.206407013703182E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999943488817207	WITHOUT_CLASSIFICATION	5.65111827934449E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999943488817207	WITHOUT_CLASSIFICATION	5.65111827934449E-6	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999999668185	WITHOUT_CLASSIFICATION	3.31814999691079E-8	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999999628692103	WITHOUT_CLASSIFICATION	3.713078963970243E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999999702060363	WITHOUT_CLASSIFICATION	2.9793963729139593E-8	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9996844036271684	WITHOUT_CLASSIFICATION	3.155963728316311E-4	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9999946062756816	WITHOUT_CLASSIFICATION	5.39372431839338E-6	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9999719587194227	WITHOUT_CLASSIFICATION	2.804128057740965E-5	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.9999977591560243	WITHOUT_CLASSIFICATION	2.240843975720305E-6	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999997628946043	WITHOUT_CLASSIFICATION	2.371053956865781E-7	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999997763895254	WITHOUT_CLASSIFICATION	2.2361047466981748E-7	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999997763895254	WITHOUT_CLASSIFICATION	2.2361047466981748E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999811486193132	WITHOUT_CLASSIFICATION	1.885138068683187E-5	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.999996333202806	WITHOUT_CLASSIFICATION	3.6667971939890178E-6	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999994632145564	WITHOUT_CLASSIFICATION	5.367854436602999E-7	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101863	WITHOUT_CLASSIFICATION	1.8963898137365965E-6	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999959156747495	WITHOUT_CLASSIFICATION	4.084325250444374E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999991300093233	WITHOUT_CLASSIFICATION	8.699906768096394E-7	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999992979848972	WITHOUT_CLASSIFICATION	7.020151028668807E-7	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999990725420789	WITHOUT_CLASSIFICATION	9.274579210819855E-7	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999992363197064	WITHOUT_CLASSIFICATION	7.6368029341695E-7	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999997029078339	WITHOUT_CLASSIFICATION	2.9709216608813737E-7	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999997755574607	WITHOUT_CLASSIFICATION	2.2444253919167306E-7	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9999940342729043	WITHOUT_CLASSIFICATION	5.965727095646856E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999958532122367	WITHOUT_CLASSIFICATION	4.146787763273765E-6	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999992239490397	WITHOUT_CLASSIFICATION	7.760509602357613E-7	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999988206340872	WITHOUT_CLASSIFICATION	1.1793659128608204E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999988983969093	WITHOUT_CLASSIFICATION	1.1016030907547844E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999988983969093	WITHOUT_CLASSIFICATION	1.1016030907547844E-6	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9999996776561892	WITHOUT_CLASSIFICATION	3.223438108492296E-7	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9999836262017852	WITHOUT_CLASSIFICATION	1.6373798214835985E-5	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999999605934519	WITHOUT_CLASSIFICATION	3.940654809613217E-8	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999992864836018	WITHOUT_CLASSIFICATION	7.135163982443744E-7	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.999999228802927	WITHOUT_CLASSIFICATION	7.711970729479314E-7	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999996229383961	WITHOUT_CLASSIFICATION	3.7706160398284024E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999914713138337	WITHOUT_CLASSIFICATION	8.528686166394512E-6	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999997336814797	WITHOUT_CLASSIFICATION	2.6631852035527563E-7	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999936039016947	WITHOUT_CLASSIFICATION	6.396098305273039E-6	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999992930456287	WITHOUT_CLASSIFICATION	7.069543712176741E-7	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999997059719091	WITHOUT_CLASSIFICATION	2.9402809091645137E-7	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.999997879349698	WITHOUT_CLASSIFICATION	2.120650302075226E-6	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.9999983105933217	WITHOUT_CLASSIFICATION	1.6894066783025063E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999970925790542	WITHOUT_CLASSIFICATION	2.9074209457267733E-6	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999995719126714	WITHOUT_CLASSIFICATION	4.2808732867828176E-7	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999961640023504	WITHOUT_CLASSIFICATION	3.835997649578314E-6	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.999993330882257	WITHOUT_CLASSIFICATION	6.669117743058898E-6	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999994115094473	WITHOUT_CLASSIFICATION	5.884905527001406E-7	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.9999999096798913	WITHOUT_CLASSIFICATION	9.032010868477514E-8	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101863	WITHOUT_CLASSIFICATION	1.8963898137365965E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101863	WITHOUT_CLASSIFICATION	1.8963898137365965E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999991300093233	WITHOUT_CLASSIFICATION	8.699906768096394E-7	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999991300093233	WITHOUT_CLASSIFICATION	8.699906768096394E-7	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999958532122367	WITHOUT_CLASSIFICATION	4.146787763273765E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999988983969093	WITHOUT_CLASSIFICATION	1.1016030907547844E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999970925790542	WITHOUT_CLASSIFICATION	2.9074209457267733E-6	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999997250035199	WITHOUT_CLASSIFICATION	2.7499648006690396E-7	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999994126237115	WITHOUT_CLASSIFICATION	5.873762884400549E-7	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999987414584223	WITHOUT_CLASSIFICATION	1.258541577653221E-6	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999988897057804	WITHOUT_CLASSIFICATION	1.1102942196116582E-6	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999989795759986	WITHOUT_CLASSIFICATION	1.0204240014288605E-6	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999986579576656	WITHOUT_CLASSIFICATION	1.3420423343310784E-6	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9999974818943951	WITHOUT_CLASSIFICATION	2.5181056048431714E-6	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999972771461584	WITHOUT_CLASSIFICATION	2.7228538414726274E-6	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9999781939262185	WITHOUT_CLASSIFICATION	2.1806073781487404E-5	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999979669306582	WITHOUT_CLASSIFICATION	2.0330693417706303E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999935631964045	WITHOUT_CLASSIFICATION	6.436803595557145E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999935631964045	WITHOUT_CLASSIFICATION	6.436803595557145E-6	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999998996484728	WITHOUT_CLASSIFICATION	1.0035152712035164E-7	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999998797714277	WITHOUT_CLASSIFICATION	1.202285722257765E-7	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9999979075320203	WITHOUT_CLASSIFICATION	2.0924679797290682E-6	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999996598581956	WITHOUT_CLASSIFICATION	3.4014180438749757E-7	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999998323372477	WITHOUT_CLASSIFICATION	1.6766275236418172E-7	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999998968516868	WITHOUT_CLASSIFICATION	1.0314831325414737E-7	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999997878253889	WITHOUT_CLASSIFICATION	2.1217461113706136E-7	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999630679277	WITHOUT_CLASSIFICATION	3.693207217315217E-8	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999990210009299	WITHOUT_CLASSIFICATION	9.789990700627193E-7	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999991664820803	WITHOUT_CLASSIFICATION	8.335179196987842E-7	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999991664820803	WITHOUT_CLASSIFICATION	8.335179196987842E-7	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999994761531426	WITHOUT_CLASSIFICATION	5.238468575304225E-7	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999996172124077	WITHOUT_CLASSIFICATION	3.8278759226947305E-7	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999992650944	WITHOUT_CLASSIFICATION	7.349055999409003E-7	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999997069078491	WITHOUT_CLASSIFICATION	2.9309215082569026E-7	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999924785574659	WITHOUT_CLASSIFICATION	7.521442534089219E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999991300093233	WITHOUT_CLASSIFICATION	8.699906768096394E-7	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999958532122367	WITHOUT_CLASSIFICATION	4.146787763273765E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999988206340872	WITHOUT_CLASSIFICATION	1.1793659128608204E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999970925790542	WITHOUT_CLASSIFICATION	2.9074209457267733E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999970925790542	WITHOUT_CLASSIFICATION	2.9074209457267733E-6	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999668708783	WITHOUT_CLASSIFICATION	3.3129121620834765E-8	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999668708783	WITHOUT_CLASSIFICATION	3.3129121620834765E-8	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999997578224719	WITHOUT_CLASSIFICATION	2.421775281857109E-7	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999991462885746	WITHOUT_CLASSIFICATION	8.53711425586789E-7	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999991462885746	WITHOUT_CLASSIFICATION	8.53711425586789E-7	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999993699382191	WITHOUT_CLASSIFICATION	6.300617808140598E-7	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.9999990566365167	WITHOUT_CLASSIFICATION	9.433634833168906E-7	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999996460835548	WITHOUT_CLASSIFICATION	3.5391644515091613E-7	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999996963724778	WITHOUT_CLASSIFICATION	3.036275222438533E-7	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999999372295625	WITHOUT_CLASSIFICATION	6.277043745941727E-8	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999953723149673	WITHOUT_CLASSIFICATION	4.627685032774923E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999953723149673	WITHOUT_CLASSIFICATION	4.627685032774923E-6	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.9999984553797104	WITHOUT_CLASSIFICATION	1.5446202896016846E-6	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999952348878834	WITHOUT_CLASSIFICATION	4.765112116553199E-6	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.999998754435991	WITHOUT_CLASSIFICATION	1.245564008997928E-6	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999959012849989	WITHOUT_CLASSIFICATION	4.098715000971869E-6	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.999999087573416	WITHOUT_CLASSIFICATION	9.124265839208964E-7	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9999970579758638	WITHOUT_CLASSIFICATION	2.9420241361218714E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999994549385229	WITHOUT_CLASSIFICATION	5.450614771446238E-7	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999979377596273	WITHOUT_CLASSIFICATION	2.0622403727243994E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999979377596273	WITHOUT_CLASSIFICATION	2.0622403727243994E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999985416058637	WITHOUT_CLASSIFICATION	1.458394136282842E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999985416058637	WITHOUT_CLASSIFICATION	1.458394136282842E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999962594417605	WITHOUT_CLASSIFICATION	3.7405582395259694E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999962594417605	WITHOUT_CLASSIFICATION	3.7405582395259694E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999996751499572	WITHOUT_CLASSIFICATION	3.248500427944931E-7	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999996751499572	WITHOUT_CLASSIFICATION	3.248500427944931E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999953723149673	WITHOUT_CLASSIFICATION	4.627685032774923E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999994549385229	WITHOUT_CLASSIFICATION	5.450614771446238E-7	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999979377596273	WITHOUT_CLASSIFICATION	2.0622403727243994E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999979377596273	WITHOUT_CLASSIFICATION	2.0622403727243994E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999985416058637	WITHOUT_CLASSIFICATION	1.458394136282842E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999962594417605	WITHOUT_CLASSIFICATION	3.7405582395259694E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999962594417605	WITHOUT_CLASSIFICATION	3.7405582395259694E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999996751499572	WITHOUT_CLASSIFICATION	3.248500427944931E-7	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999992429430182	WITHOUT_CLASSIFICATION	7.570569817418045E-7	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9999803933429079	WITHOUT_CLASSIFICATION	1.9606657092084376E-5	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.9999852185262075	WITHOUT_CLASSIFICATION	1.4781473792579432E-5	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999994218763102	WITHOUT_CLASSIFICATION	5.781236897378184E-7	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999985737302278	WITHOUT_CLASSIFICATION	1.4262697722118381E-6	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999958528463794	WITHOUT_CLASSIFICATION	4.147153620621818E-6	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999978607502562	WITHOUT_CLASSIFICATION	2.13924974384905E-6	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9999999948059145	WITHOUT_CLASSIFICATION	5.194085456828459E-9	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999975942945266	WITHOUT_CLASSIFICATION	2.405705473369362E-6	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999999967790374	WITHOUT_CLASSIFICATION	3.220962632898258E-9	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999999243658023	WITHOUT_CLASSIFICATION	7.563419762189834E-8	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999999644876795	WITHOUT_CLASSIFICATION	3.5512320454666306E-8	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999891305557272	WITHOUT_CLASSIFICATION	1.0869444272659686E-5	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999958528463794	WITHOUT_CLASSIFICATION	4.147153620621818E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9999186457596037	WITHOUT_CLASSIFICATION	8.135424039631349E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9999186457596037	WITHOUT_CLASSIFICATION	8.135424039631349E-5	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999999275878267	WITHOUT_CLASSIFICATION	7.241217318578067E-8	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999994914881264	WITHOUT_CLASSIFICATION	5.085118735025568E-7	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999994914881264	WITHOUT_CLASSIFICATION	5.085118735025568E-7	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999972701693628	WITHOUT_CLASSIFICATION	2.7298306372513784E-6	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999996329033888	WITHOUT_CLASSIFICATION	3.670966112988146E-7	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999999458117534	WITHOUT_CLASSIFICATION	5.418824650779871E-8	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.999999119546559	WITHOUT_CLASSIFICATION	8.80453440988417E-7	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.999999119546559	WITHOUT_CLASSIFICATION	8.80453440988417E-7	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999954173446	WITHOUT_CLASSIFICATION	4.5826553262437075E-9	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999999814645265	WITHOUT_CLASSIFICATION	1.853547354864576E-8	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999999814645265	WITHOUT_CLASSIFICATION	1.853547354864576E-8	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999987391754055	WITHOUT_CLASSIFICATION	1.260824594458115E-6	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999998978417245	WITHOUT_CLASSIFICATION	1.021582754935613E-7	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.999999805259529	WITHOUT_CLASSIFICATION	1.9474047112017552E-7	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999874706781876	WITHOUT_CLASSIFICATION	1.252932181227814E-5	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999947202697089	WITHOUT_CLASSIFICATION	5.27973029099879E-6	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9999950031997172	WITHOUT_CLASSIFICATION	4.996800282713779E-6	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999943563118667	WITHOUT_CLASSIFICATION	5.6436881332363755E-6	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999934836279911	WITHOUT_CLASSIFICATION	6.5163720088958755E-6	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9989064307681694	WITHOUT_CLASSIFICATION	0.001093569231830511	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.999991148375908	WITHOUT_CLASSIFICATION	8.851624092149398E-6	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999889335450349	WITHOUT_CLASSIFICATION	1.1066454965082493E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999983096945823	WITHOUT_CLASSIFICATION	1.6903054177065114E-5	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999992856049591	WITHOUT_CLASSIFICATION	7.143950408401645E-7	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999996841484675	WITHOUT_CLASSIFICATION	3.158515324930677E-7	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999999758199272	WITHOUT_CLASSIFICATION	2.4180072892838215E-8	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999983096945823	WITHOUT_CLASSIFICATION	1.6903054177065114E-5	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999999479539031	WITHOUT_CLASSIFICATION	5.204609694706919E-8	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999996097342431	WITHOUT_CLASSIFICATION	3.9026575699821697E-7	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999923173180293	WITHOUT_CLASSIFICATION	7.682681970722102E-6	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.9999908277319972	WITHOUT_CLASSIFICATION	9.172268002728447E-6	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999848275677647	WITHOUT_CLASSIFICATION	1.5172432235145197E-5	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999853371317874	WITHOUT_CLASSIFICATION	1.4662868212593832E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999770398692556	WITHOUT_CLASSIFICATION	2.296013074451072E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.999987333234605	WITHOUT_CLASSIFICATION	1.2666765395030267E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999852071760499	WITHOUT_CLASSIFICATION	1.479282395011928E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.999999891385535	WITHOUT_CLASSIFICATION	1.0861446489805481E-7	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999976324208963	WITHOUT_CLASSIFICATION	2.367579103546339E-6	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999993019447042	WITHOUT_CLASSIFICATION	6.980552958812737E-7	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999929129238295	WITHOUT_CLASSIFICATION	7.08707617043085E-6	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999943563118667	WITHOUT_CLASSIFICATION	5.6436881332363755E-6	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999852071760499	WITHOUT_CLASSIFICATION	1.479282395011928E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999976324208963	WITHOUT_CLASSIFICATION	2.367579103546339E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999929129238295	WITHOUT_CLASSIFICATION	7.08707617043085E-6	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999998392112185	WITHOUT_CLASSIFICATION	1.607887814661177E-7	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999891826945283	WITHOUT_CLASSIFICATION	1.081730547166661E-5	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999998012016847	WITHOUT_CLASSIFICATION	1.987983152928637E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999840169513723	WITHOUT_CLASSIFICATION	1.5983048627720322E-5	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999968005087895	WITHOUT_CLASSIFICATION	3.1994912106278718E-6	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.9999991340845195	WITHOUT_CLASSIFICATION	8.659154804742095E-7	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.9999877853866269	WITHOUT_CLASSIFICATION	1.2214613373078452E-5	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999997137112465	WITHOUT_CLASSIFICATION	2.862887534378029E-7	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999894355501882	WITHOUT_CLASSIFICATION	1.0564449811814509E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.999999892591761	WITHOUT_CLASSIFICATION	1.0740823893848877E-7	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999998863848449	WITHOUT_CLASSIFICATION	1.1361515504901112E-7	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999999285601537	WITHOUT_CLASSIFICATION	7.143984631313986E-8	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999988290410704	WITHOUT_CLASSIFICATION	1.1709589295382419E-6	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999998609660312	WITHOUT_CLASSIFICATION	1.3903396883631294E-7	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999957042762116	WITHOUT_CLASSIFICATION	4.29572378840268E-6	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999865998555503	WITHOUT_CLASSIFICATION	1.3400144449719788E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999872286195722	WITHOUT_CLASSIFICATION	1.2771380427867851E-5	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999998700471374	WITHOUT_CLASSIFICATION	1.2995286259292836E-7	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999875675065173	WITHOUT_CLASSIFICATION	1.2432493482765426E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999852071760499	WITHOUT_CLASSIFICATION	1.479282395011928E-5	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999999450611187	WITHOUT_CLASSIFICATION	5.493888124119703E-8	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999994250113718	WITHOUT_CLASSIFICATION	5.749886281693882E-7	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999992606523749	WITHOUT_CLASSIFICATION	7.393476251100782E-7	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9999999640665185	WITHOUT_CLASSIFICATION	3.5933481526116767E-8	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999995446423255	WITHOUT_CLASSIFICATION	4.553576744642941E-7	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999972351948694	WITHOUT_CLASSIFICATION	2.7648051305370993E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999993088115806	WITHOUT_CLASSIFICATION	6.911884193546941E-7	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.999999850419734	WITHOUT_CLASSIFICATION	1.4958026600089852E-7	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999798418363907	WITHOUT_CLASSIFICATION	2.0158163609325722E-5	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999853844120508	WITHOUT_CLASSIFICATION	1.4615587949188706E-5	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999965398025245	WITHOUT_CLASSIFICATION	3.460197475584171E-6	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999957516072457	WITHOUT_CLASSIFICATION	4.2483927542346015E-6	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9999992032927175	WITHOUT_CLASSIFICATION	7.967072824222932E-7	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999999948163765	WITHOUT_CLASSIFICATION	5.1836234916943285E-9	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.999999218355643	WITHOUT_CLASSIFICATION	7.816443569800932E-7	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999994586300908	WITHOUT_CLASSIFICATION	5.413699092631778E-7	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.999996470003547	WITHOUT_CLASSIFICATION	3.5299964531455243E-6	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.999998953556388	WITHOUT_CLASSIFICATION	1.0464436120136026E-6	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999997766788616	WITHOUT_CLASSIFICATION	2.233211383052709E-7	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999998935344995	WITHOUT_CLASSIFICATION	1.0646550057452733E-7	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999986763021	WITHOUT_CLASSIFICATION	1.3236979995698928E-9	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999998490924218	WITHOUT_CLASSIFICATION	1.5090757823553333E-7	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999996032386157	WITHOUT_CLASSIFICATION	3.967613842260662E-7	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9999904391639844	WITHOUT_CLASSIFICATION	9.560836015549904E-6	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999617194483549	WITHOUT_CLASSIFICATION	3.8280551645099635E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999617194483549	WITHOUT_CLASSIFICATION	3.8280551645099635E-5	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999876788690502	WITHOUT_CLASSIFICATION	1.2321130949804409E-5	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999998063824728	WITHOUT_CLASSIFICATION	1.9361752718815247E-7	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999975757523145	WITHOUT_CLASSIFICATION	2.424247685516344E-6	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999950789307874	WITHOUT_CLASSIFICATION	4.921069212659556E-6	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.999989877670403	WITHOUT_CLASSIFICATION	1.0122329596966758E-5	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9999981800442179	WITHOUT_CLASSIFICATION	1.8199557820718136E-6	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999997254364053	WITHOUT_CLASSIFICATION	2.7456359485192144E-7	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999999082213453	WITHOUT_CLASSIFICATION	9.177865466140472E-8	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9999902181425174	WITHOUT_CLASSIFICATION	9.781857482599628E-6	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999950511627329	WITHOUT_CLASSIFICATION	4.948837267112872E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.999991574186069	WITHOUT_CLASSIFICATION	8.425813931015046E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999995207038124	WITHOUT_CLASSIFICATION	4.792961876844176E-7	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9999989844354684	WITHOUT_CLASSIFICATION	1.0155645316726336E-6	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9999990060425445	WITHOUT_CLASSIFICATION	9.939574553711888E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995561580689	WITHOUT_CLASSIFICATION	4.438419310805593E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995486751341	WITHOUT_CLASSIFICATION	4.513248660125429E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999999693205422	WITHOUT_CLASSIFICATION	3.0679457767572955E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999998169000552	WITHOUT_CLASSIFICATION	1.8309994470385725E-7	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9999995423766135	WITHOUT_CLASSIFICATION	4.5762338649105596E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999993651070558	WITHOUT_CLASSIFICATION	6.348929442365401E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999972947086795	WITHOUT_CLASSIFICATION	2.705291320468578E-6	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999972947086795	WITHOUT_CLASSIFICATION	2.705291320468578E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999777391387894	WITHOUT_CLASSIFICATION	2.2260861210547734E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999777391387894	WITHOUT_CLASSIFICATION	2.2260861210547734E-5	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999996032386157	WITHOUT_CLASSIFICATION	3.967613842260662E-7	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999980553218246	WITHOUT_CLASSIFICATION	1.9446781754605834E-6	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999969934717521	WITHOUT_CLASSIFICATION	3.0065282478785858E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999998848971355	WITHOUT_CLASSIFICATION	1.1510286443956103E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999811486193132	WITHOUT_CLASSIFICATION	1.885138068683187E-5	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999969934717521	WITHOUT_CLASSIFICATION	3.0065282478785858E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999998848971355	WITHOUT_CLASSIFICATION	1.1510286443956103E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999921946647927	WITHOUT_CLASSIFICATION	7.805335207282762E-6	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999980682798529	WITHOUT_CLASSIFICATION	1.931720147116084E-6	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999999045594534	WITHOUT_CLASSIFICATION	9.544054658147869E-8	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999998558177535	WITHOUT_CLASSIFICATION	1.4418224655528325E-7	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9999998614462169	WITHOUT_CLASSIFICATION	1.3855378307209544E-7	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9999855853046955	WITHOUT_CLASSIFICATION	1.4414695304595595E-5	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999991692615404	WITHOUT_CLASSIFICATION	8.307384594757673E-7	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999943116755966	WITHOUT_CLASSIFICATION	5.688324403480704E-6	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999893170555577	WITHOUT_CLASSIFICATION	1.068294444230776E-5	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999999266101136	WITHOUT_CLASSIFICATION	7.338988641288999E-8	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999995516417066	WITHOUT_CLASSIFICATION	4.483582934120033E-7	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.999999916919761	WITHOUT_CLASSIFICATION	8.308023901113019E-8	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999999318038244	WITHOUT_CLASSIFICATION	6.819617565232846E-8	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9999987566997959	WITHOUT_CLASSIFICATION	1.2433002041195684E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999811486193132	WITHOUT_CLASSIFICATION	1.885138068683187E-5	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9999988810526632	WITHOUT_CLASSIFICATION	1.118947336721552E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999956982401845	WITHOUT_CLASSIFICATION	4.301759815530274E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999956982401845	WITHOUT_CLASSIFICATION	4.301759815530274E-6	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999998786907421	WITHOUT_CLASSIFICATION	1.2130925789975193E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999921946647927	WITHOUT_CLASSIFICATION	7.805335207282762E-6	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9999981467231531	WITHOUT_CLASSIFICATION	1.8532768468561879E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999999753402389	WITHOUT_CLASSIFICATION	2.465976115504717E-8	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9999975214503863	WITHOUT_CLASSIFICATION	2.4785496136146405E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999977714162949	WITHOUT_CLASSIFICATION	2.228583705114683E-6	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999973903859286	WITHOUT_CLASSIFICATION	2.6096140714004152E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999921946647927	WITHOUT_CLASSIFICATION	7.805335207282762E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999977714162949	WITHOUT_CLASSIFICATION	2.228583705114683E-6	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999973903859286	WITHOUT_CLASSIFICATION	2.6096140714004152E-6	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.999981592204989	WITHOUT_CLASSIFICATION	1.840779501099629E-5	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999987665451979	WITHOUT_CLASSIFICATION	1.2334548020901246E-6	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999989725119534	WITHOUT_CLASSIFICATION	1.0274880466249332E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999921946647927	WITHOUT_CLASSIFICATION	7.805335207282762E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999921946647927	WITHOUT_CLASSIFICATION	7.805335207282762E-6	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999986441757783	WITHOUT_CLASSIFICATION	1.3558242217491156E-6	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999993933201975	WITHOUT_CLASSIFICATION	6.066798024856389E-7	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999934140085364	WITHOUT_CLASSIFICATION	6.5859914635289265E-6	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999999274825135	WITHOUT_CLASSIFICATION	7.251748645898844E-8	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999942864547682	WITHOUT_CLASSIFICATION	5.713545231764077E-6	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999999516084076	WITHOUT_CLASSIFICATION	4.8391592320983224E-8	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999999889510184	WITHOUT_CLASSIFICATION	1.1048981511349283E-8	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.999999666688775	WITHOUT_CLASSIFICATION	3.3331122495404053E-7	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999989183642216	WITHOUT_CLASSIFICATION	1.0816357782935597E-6	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9999977119559703	WITHOUT_CLASSIFICATION	2.2880440296798683E-6	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999970765114446	WITHOUT_CLASSIFICATION	2.9234885554034445E-6	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999992471408623	WITHOUT_CLASSIFICATION	7.528591376686208E-7	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999998697827758	WITHOUT_CLASSIFICATION	1.302172241304079E-7	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9999998755594232	WITHOUT_CLASSIFICATION	1.2444057679931936E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972789616478	WITHOUT_CLASSIFICATION	2.7210383522988117E-6	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999999977650922	WITHOUT_CLASSIFICATION	2.2349077572823275E-9	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999992409976973	WITHOUT_CLASSIFICATION	7.590023027568794E-7	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9999638021676559	WITHOUT_CLASSIFICATION	3.6197832344078026E-5	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9998752262902698	WITHOUT_CLASSIFICATION	1.2477370973013727E-4	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.999999840530214	WITHOUT_CLASSIFICATION	1.5946978601440367E-7	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999966410903841	WITHOUT_CLASSIFICATION	3.3589096158958656E-6	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999906183092481	WITHOUT_CLASSIFICATION	9.381690751939465E-6	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999906183092481	WITHOUT_CLASSIFICATION	9.381690751939465E-6	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999992409976973	WITHOUT_CLASSIFICATION	7.590023027568794E-7	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999998573939191	WITHOUT_CLASSIFICATION	1.4260608099915747E-7	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999999951605644	WITHOUT_CLASSIFICATION	4.839435630848453E-9	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.999998099288234	WITHOUT_CLASSIFICATION	1.9007117659957049E-6	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999974377576308	WITHOUT_CLASSIFICATION	2.562242369133187E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999943762800872	WITHOUT_CLASSIFICATION	5.62371991279209E-6	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999976630204273	WITHOUT_CLASSIFICATION	2.3369795727360274E-6	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999968638185791	WITHOUT_CLASSIFICATION	3.1361814208368373E-6	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999998435149567	WITHOUT_CLASSIFICATION	1.5648504329793265E-7	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999992955093511	WITHOUT_CLASSIFICATION	7.044906490634247E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999985857257824	WITHOUT_CLASSIFICATION	1.4142742176920286E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999995228042993	WITHOUT_CLASSIFICATION	4.771957006854396E-7	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999981117984136	WITHOUT_CLASSIFICATION	1.888201586354343E-6	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999870207352366	WITHOUT_CLASSIFICATION	1.2979264763363706E-5	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999999764386994	WITHOUT_CLASSIFICATION	2.3561300479925094E-8	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999183222885	WITHOUT_CLASSIFICATION	8.167771156209134E-8	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9999996277234198	WITHOUT_CLASSIFICATION	3.722765802221613E-7	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.999999969113522	WITHOUT_CLASSIFICATION	3.0886478069326275E-8	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9998702515733915	WITHOUT_CLASSIFICATION	1.297484266085611E-4	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999843330027	WITHOUT_CLASSIFICATION	1.5666997297970088E-7	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999999305856421	WITHOUT_CLASSIFICATION	6.941435793326662E-8	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9999987862814589	WITHOUT_CLASSIFICATION	1.2137185411876658E-6	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999990614042878	WITHOUT_CLASSIFICATION	9.385957120790392E-7	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996337337168	WITHOUT_CLASSIFICATION	3.6626628326352124E-7	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989459149035	WITHOUT_CLASSIFICATION	1.0540850965339759E-6	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979064180174	WITHOUT_CLASSIFICATION	2.0935819826538385E-6	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979808415067	WITHOUT_CLASSIFICATION	2.019158493223269E-6	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972172133884	WITHOUT_CLASSIFICATION	2.782786611572421E-6	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999974467178786	WITHOUT_CLASSIFICATION	2.553282121324207E-6	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999962556126438	WITHOUT_CLASSIFICATION	3.7443873561991874E-6	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997348320991	WITHOUT_CLASSIFICATION	2.6516790087579474E-7	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.999997882105844	WITHOUT_CLASSIFICATION	2.1178941561237495E-6	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9999977492579639	WITHOUT_CLASSIFICATION	2.250742036090328E-6	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998221788254	WITHOUT_CLASSIFICATION	1.7782117452754536E-7	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999075784046	WITHOUT_CLASSIFICATION	9.24215952769829E-8	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998426261384	WITHOUT_CLASSIFICATION	1.5737386164213405E-7	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980183246079	WITHOUT_CLASSIFICATION	1.9816753920610458E-6	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999970330314274	WITHOUT_CLASSIFICATION	2.9669685724987568E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996333631043	WITHOUT_CLASSIFICATION	3.6663689570009795E-7	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991679580784	WITHOUT_CLASSIFICATION	8.320419216065153E-7	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999968277465221	WITHOUT_CLASSIFICATION	3.172253477962448E-6	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999985325581042	WITHOUT_CLASSIFICATION	1.4674418958509172E-6	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999944267252403	WITHOUT_CLASSIFICATION	5.573274759585009E-6	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9999999572603373	WITHOUT_CLASSIFICATION	4.2739662759107925E-8	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.999997672920816	WITHOUT_CLASSIFICATION	2.3270791840757036E-6	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999956452050847	WITHOUT_CLASSIFICATION	4.354794915319965E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999989743295357	WITHOUT_CLASSIFICATION	1.0256704643326205E-6	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9999852111225481	WITHOUT_CLASSIFICATION	1.478887745187094E-5	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999976530497793	WITHOUT_CLASSIFICATION	2.3469502206508398E-6	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9999978311787785	WITHOUT_CLASSIFICATION	2.1688212214565123E-6	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999956756126193	WITHOUT_CLASSIFICATION	4.32438738079566E-6	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999938577592216	WITHOUT_CLASSIFICATION	6.142240778474752E-6	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999926813496235	WITHOUT_CLASSIFICATION	7.318650376472745E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999951129708163	WITHOUT_CLASSIFICATION	4.887029183652959E-6	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999932441706667	WITHOUT_CLASSIFICATION	6.755829333250558E-6	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999999713837753	WITHOUT_CLASSIFICATION	2.8616224771972443E-8	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999998115961104	WITHOUT_CLASSIFICATION	1.884038896361142E-7	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9999977651172635	WITHOUT_CLASSIFICATION	2.2348827365139754E-6	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999935164206168	WITHOUT_CLASSIFICATION	6.483579383172164E-6	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999996698075845	WITHOUT_CLASSIFICATION	3.301924155418786E-7	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999966218232411	WITHOUT_CLASSIFICATION	3.378176758882084E-6	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999949734923956	WITHOUT_CLASSIFICATION	5.026507604412023E-6	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999594901409635	WITHOUT_CLASSIFICATION	4.050985903660288E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999946396562608	WITHOUT_CLASSIFICATION	5.36034373922312E-6	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999996627748036	WITHOUT_CLASSIFICATION	3.3722519641252463E-7	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999997971345982	WITHOUT_CLASSIFICATION	2.0286540190292988E-7	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9999998133230232	WITHOUT_CLASSIFICATION	1.866769766549596E-7	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999996225670609	WITHOUT_CLASSIFICATION	3.774329392419126E-7	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998357967514	WITHOUT_CLASSIFICATION	1.642032484865319E-7	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.999999706841418	WITHOUT_CLASSIFICATION	2.931585820041336E-7	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9999985678769103	WITHOUT_CLASSIFICATION	1.4321230896552831E-6	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999995362288705	WITHOUT_CLASSIFICATION	4.637711295500029E-7	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.999999286615901	WITHOUT_CLASSIFICATION	7.133840990562236E-7	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999985902836173	WITHOUT_CLASSIFICATION	1.4097163827047547E-6	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999999911760277	WITHOUT_CLASSIFICATION	8.823972357415274E-9	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999929069107122	WITHOUT_CLASSIFICATION	7.093089287823597E-6	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999930667863154	WITHOUT_CLASSIFICATION	6.9332136845097496E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999989743295357	WITHOUT_CLASSIFICATION	1.0256704643326205E-6	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999999718124422	WITHOUT_CLASSIFICATION	2.8187557904092424E-8	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999999144193334	WITHOUT_CLASSIFICATION	8.558066658420295E-8	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999998632801675	WITHOUT_CLASSIFICATION	1.3671983249788943E-7	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.999997912137833	WITHOUT_CLASSIFICATION	2.087862166910627E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999999592140278	WITHOUT_CLASSIFICATION	4.078597202754235E-8	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999989746979402	WITHOUT_CLASSIFICATION	1.0253020598226944E-6	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.99999740694119	WITHOUT_CLASSIFICATION	2.5930588099264776E-6	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9999968380309987	WITHOUT_CLASSIFICATION	3.1619690012867266E-6	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999979203137286	WITHOUT_CLASSIFICATION	2.079686271420249E-6	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999999617634303	WITHOUT_CLASSIFICATION	3.8236569680259246E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999999310078634	WITHOUT_CLASSIFICATION	6.899213659631423E-8	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999999577822932	WITHOUT_CLASSIFICATION	4.2217706739275904E-8	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999997952964306	WITHOUT_CLASSIFICATION	2.047035694211036E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999999301006072	WITHOUT_CLASSIFICATION	6.98993927990305E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999996416645107	WITHOUT_CLASSIFICATION	3.583354893252477E-7	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999996485828341	WITHOUT_CLASSIFICATION	3.5141716583776423E-7	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9999962586663632	WITHOUT_CLASSIFICATION	3.7413336367014857E-6	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.999995500395566	WITHOUT_CLASSIFICATION	4.499604434158796E-6	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999999569783024	WITHOUT_CLASSIFICATION	4.3021697721642967E-8	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999982132121072	WITHOUT_CLASSIFICATION	1.7867878928497916E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999999263961691	WITHOUT_CLASSIFICATION	7.360383092498181E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.999998889898735	WITHOUT_CLASSIFICATION	1.1101012650512101E-6	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999960491616509	WITHOUT_CLASSIFICATION	3.950838349225995E-6	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999862775974163	WITHOUT_CLASSIFICATION	1.3722402583676097E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.999999778500114	WITHOUT_CLASSIFICATION	2.21499885955902E-7	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999974335215983	WITHOUT_CLASSIFICATION	2.566478401797169E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998180358559572	WITHOUT_CLASSIFICATION	1.8196414404286534E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999779687962648	WITHOUT_CLASSIFICATION	2.203120373525147E-5	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9999791261849807	WITHOUT_CLASSIFICATION	2.087381501927851E-5	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999984108591858	WITHOUT_CLASSIFICATION	1.5891408141469134E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999989743295357	WITHOUT_CLASSIFICATION	1.0256704643326205E-6	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999998940432985	WITHOUT_CLASSIFICATION	1.0595670140942944E-7	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999999880265135	WITHOUT_CLASSIFICATION	1.1973486431704988E-8	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.999997070208617	WITHOUT_CLASSIFICATION	2.929791383140667E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999989743295357	WITHOUT_CLASSIFICATION	1.0256704643326205E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999908839744848	WITHOUT_CLASSIFICATION	9.116025515230986E-6	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999999263961691	WITHOUT_CLASSIFICATION	7.360383092498181E-8	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9999985565731855	WITHOUT_CLASSIFICATION	1.4434268144543905E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9999996519821814	WITHOUT_CLASSIFICATION	3.480178185725759E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999999969663912	WITHOUT_CLASSIFICATION	3.03360875005148E-9	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999999617634303	WITHOUT_CLASSIFICATION	3.8236569680259246E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999999310078634	WITHOUT_CLASSIFICATION	6.899213659631423E-8	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999999577822932	WITHOUT_CLASSIFICATION	4.2217706739275904E-8	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999997501170994	WITHOUT_CLASSIFICATION	2.4988290059651744E-7	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999958474658	WITHOUT_CLASSIFICATION	4.152534200030804E-6	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999870409120343	WITHOUT_CLASSIFICATION	1.2959087965620793E-5	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999992247957817	WITHOUT_CLASSIFICATION	7.752042182842995E-7	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999999985770234	WITHOUT_CLASSIFICATION	1.4229766111391286E-9	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999989743295357	WITHOUT_CLASSIFICATION	1.0256704643326205E-6	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999997952964306	WITHOUT_CLASSIFICATION	2.047035694211036E-7	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999999301006072	WITHOUT_CLASSIFICATION	6.98993927990305E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999978566641573	WITHOUT_CLASSIFICATION	2.143335842667735E-6	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989462114011	WITHOUT_CLASSIFICATION	1.0537885989801127E-6	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.999999816954329	WITHOUT_CLASSIFICATION	1.8304567104097112E-7	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999986332453299	WITHOUT_CLASSIFICATION	1.366754670029783E-6	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9999995278290308	WITHOUT_CLASSIFICATION	4.721709691091514E-7	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999999986297335	WITHOUT_CLASSIFICATION	1.3702664230598028E-9	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999968277465221	WITHOUT_CLASSIFICATION	3.172253477962448E-6	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.99999979805556	WITHOUT_CLASSIFICATION	2.019444399476552E-7	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.999999614910065	WITHOUT_CLASSIFICATION	3.8508993499206493E-7	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999996053938475	WITHOUT_CLASSIFICATION	3.946061525875065E-7	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999994656006087	WITHOUT_CLASSIFICATION	5.343993912919804E-7	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999998002323349	WITHOUT_CLASSIFICATION	1.997676652094276E-7	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972172133884	WITHOUT_CLASSIFICATION	2.782786611572421E-6	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999974467178786	WITHOUT_CLASSIFICATION	2.553282121324207E-6	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999075784046	WITHOUT_CLASSIFICATION	9.24215952769829E-8	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999998002323349	WITHOUT_CLASSIFICATION	1.997676652094276E-7	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999976424242634	WITHOUT_CLASSIFICATION	2.357575736609357E-6	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999985770636428	WITHOUT_CLASSIFICATION	1.4229363572121231E-6	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979472640542	WITHOUT_CLASSIFICATION	2.052735945785682E-6	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976880660858	WITHOUT_CLASSIFICATION	2.311933914119747E-6	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999999814109686	WITHOUT_CLASSIFICATION	1.8589031460737204E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.9998856099879939	WITHOUT_CLASSIFICATION	1.1439001200611303E-4	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998426261384	WITHOUT_CLASSIFICATION	1.5737386164213405E-7	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996333631043	WITHOUT_CLASSIFICATION	3.6663689570009795E-7	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.999999286615901	WITHOUT_CLASSIFICATION	7.133840990562236E-7	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999995573651553	WITHOUT_CLASSIFICATION	4.426348446264103E-7	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999999778696707	WITHOUT_CLASSIFICATION	2.2130329424403412E-8	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999989859787063	WITHOUT_CLASSIFICATION	1.0140212937217373E-6	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999983399471638	WITHOUT_CLASSIFICATION	1.6600528361772334E-6	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999993431937256	WITHOUT_CLASSIFICATION	6.56806274310001E-7	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999998454262485	WITHOUT_CLASSIFICATION	1.5457375140234183E-7	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9999940570650346	WITHOUT_CLASSIFICATION	5.942934965409809E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224061356	WITHOUT_CLASSIFICATION	1.1917759386434587E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999992955093511	WITHOUT_CLASSIFICATION	7.044906490634247E-7	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999970416510322	WITHOUT_CLASSIFICATION	2.958348967768682E-6	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999999936569366	WITHOUT_CLASSIFICATION	6.3430633342516785E-9	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.999999968597726	WITHOUT_CLASSIFICATION	3.140227393367834E-8	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999992231119691	WITHOUT_CLASSIFICATION	7.768880309751869E-7	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999999440684065	WITHOUT_CLASSIFICATION	5.593159354232954E-8	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999942973341713	WITHOUT_CLASSIFICATION	5.70266582868009E-6	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999906487222241	WITHOUT_CLASSIFICATION	9.351277775903112E-6	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999978869166923	WITHOUT_CLASSIFICATION	2.1130833076062717E-6	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999996827774453	WITHOUT_CLASSIFICATION	3.17222554614589E-7	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999999720173937	WITHOUT_CLASSIFICATION	2.798260630919738E-8	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9995957436020436	WITHOUT_CLASSIFICATION	4.042563979564769E-4	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999988992306862	WITHOUT_CLASSIFICATION	1.1007693137998368E-6	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999997543156774	WITHOUT_CLASSIFICATION	2.456843225515942E-7	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999999443497195	WITHOUT_CLASSIFICATION	5.565028049528798E-7	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999996835561976	WITHOUT_CLASSIFICATION	3.1644380237176585E-7	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.999999972944936	WITHOUT_CLASSIFICATION	2.705506397402187E-8	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999960221590644	WITHOUT_CLASSIFICATION	3.9778409357079275E-6	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999999125221803	WITHOUT_CLASSIFICATION	8.747781959205774E-8	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999960461784863	WITHOUT_CLASSIFICATION	3.953821513743563E-6	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999996725178703	WITHOUT_CLASSIFICATION	3.2748212970577206E-7	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998791092873	WITHOUT_CLASSIFICATION	1.2089071266428536E-7	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999998425789585	WITHOUT_CLASSIFICATION	1.5742104153096325E-7	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999999672889734	WITHOUT_CLASSIFICATION	3.271102646340844E-8	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999928365344009	WITHOUT_CLASSIFICATION	7.16346559911678E-6	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9999990434562631	WITHOUT_CLASSIFICATION	9.565437369534645E-7	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999974754080033	WITHOUT_CLASSIFICATION	2.524591996703551E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999967160549175	WITHOUT_CLASSIFICATION	3.2839450824835748E-6	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999998790200462	WITHOUT_CLASSIFICATION	1.209799538550818E-7	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999998651845784	WITHOUT_CLASSIFICATION	1.348154216054404E-7	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999975043464558	WITHOUT_CLASSIFICATION	2.49565354417164E-6	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999996325611027	WITHOUT_CLASSIFICATION	3.674388972343677E-7	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999999700000153	WITHOUT_CLASSIFICATION	2.9999984654024796E-8	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999961426178019	WITHOUT_CLASSIFICATION	3.857382198052288E-6	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999967822938279	WITHOUT_CLASSIFICATION	3.217706172087687E-6	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999998187602769	WITHOUT_CLASSIFICATION	1.812397230648416E-7	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999985662289395	WITHOUT_CLASSIFICATION	1.4337710605326569E-6	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999998929131669	WITHOUT_CLASSIFICATION	1.0708683305223355E-7	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999979466788778	WITHOUT_CLASSIFICATION	2.053321122261244E-6	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999838223945865	WITHOUT_CLASSIFICATION	1.617760541350144E-5	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999998997271411	WITHOUT_CLASSIFICATION	1.0027285879134002E-7	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9999998384056193	WITHOUT_CLASSIFICATION	1.6159438070272168E-7	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999845156681291	WITHOUT_CLASSIFICATION	1.54843318710278E-5	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9999962412447334	WITHOUT_CLASSIFICATION	3.7587552665668582E-6	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999986804414918	WITHOUT_CLASSIFICATION	1.3195585082749557E-6	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9999974755499001	WITHOUT_CLASSIFICATION	2.5244500998038284E-6	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999994586192349	WITHOUT_CLASSIFICATION	5.413807651967945E-7	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999994600316209	WITHOUT_CLASSIFICATION	5.399683790473806E-7	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999997594457547	WITHOUT_CLASSIFICATION	2.405542452343987E-7	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999972482279252	WITHOUT_CLASSIFICATION	2.7517720747351083E-6	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.99999997306379	WITHOUT_CLASSIFICATION	2.6936210086001662E-8	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999999197314933	WITHOUT_CLASSIFICATION	8.026850675053506E-8	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.99999980775273	WITHOUT_CLASSIFICATION	1.9224726989348064E-7	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999991068829658	WITHOUT_CLASSIFICATION	8.931170341242912E-7	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999999380197511	WITHOUT_CLASSIFICATION	6.19802489768421E-8	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999999212481531	WITHOUT_CLASSIFICATION	7.87518468553657E-8	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.999999062852556	WITHOUT_CLASSIFICATION	9.371474440443459E-7	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.999997458987614	WITHOUT_CLASSIFICATION	2.541012385951054E-6	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999987959401624	WITHOUT_CLASSIFICATION	1.2040598375659827E-6	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999944219373798	WITHOUT_CLASSIFICATION	5.5780626202637325E-6	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999966844219529	WITHOUT_CLASSIFICATION	3.3155780471773274E-6	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.9999970092524525	WITHOUT_CLASSIFICATION	2.990747547554089E-6	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999963759741006	WITHOUT_CLASSIFICATION	3.624025899441734E-6	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999980620787903	WITHOUT_CLASSIFICATION	1.9379212097049456E-6	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.999999381837896	WITHOUT_CLASSIFICATION	6.181621039874566E-7	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.99999822381249	WITHOUT_CLASSIFICATION	1.7761875100488853E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999987975374793	WITHOUT_CLASSIFICATION	1.2024625206583594E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999979098792999	WITHOUT_CLASSIFICATION	2.090120700082013E-6	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.999999753680824	WITHOUT_CLASSIFICATION	2.463191760038129E-7	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9999878740234034	WITHOUT_CLASSIFICATION	1.2125976596576497E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9999910236341637	WITHOUT_CLASSIFICATION	8.97636583635909E-6	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999994230045943	WITHOUT_CLASSIFICATION	5.769954056311055E-7	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999853241634488	WITHOUT_CLASSIFICATION	1.4675836551394035E-5	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999947917678367	WITHOUT_CLASSIFICATION	5.208232163316741E-6	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999992174107252	WITHOUT_CLASSIFICATION	7.825892749608971E-7	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999995314279292	WITHOUT_CLASSIFICATION	4.685720708193645E-7	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9999898527834414	WITHOUT_CLASSIFICATION	1.0147216558635583E-5	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999996359787096	WITHOUT_CLASSIFICATION	3.640212904867869E-7	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999882897877649	WITHOUT_CLASSIFICATION	1.1710212235166192E-5	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999982781894743	WITHOUT_CLASSIFICATION	1.7218105257590907E-6	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.999997294912415	WITHOUT_CLASSIFICATION	2.705087585091189E-6	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9999770651105933	WITHOUT_CLASSIFICATION	2.2934889406638505E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999959028503485	WITHOUT_CLASSIFICATION	4.097149651653932E-6	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999985732654634	WITHOUT_CLASSIFICATION	1.4267345366019316E-6	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999864210810706	WITHOUT_CLASSIFICATION	1.3578918929409311E-5	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999836038244714	WITHOUT_CLASSIFICATION	1.639617552861735E-5	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9999926365900245	WITHOUT_CLASSIFICATION	7.363409975459348E-6	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999919404123163	WITHOUT_CLASSIFICATION	8.059587683762713E-6	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9999864076206623	WITHOUT_CLASSIFICATION	1.3592379337763081E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999973135850965	WITHOUT_CLASSIFICATION	2.686414903459431E-6	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999999900748272	WITHOUT_CLASSIFICATION	9.925172724160301E-9	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999944629295507	WITHOUT_CLASSIFICATION	5.5370704492177965E-6	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.99999497151806	WITHOUT_CLASSIFICATION	5.0284819399884765E-6	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999978694774336	WITHOUT_CLASSIFICATION	2.130522566340151E-6	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999944629295507	WITHOUT_CLASSIFICATION	5.5370704492177965E-6	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999999897402747	WITHOUT_CLASSIFICATION	1.0259725313947205E-8	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999998180169352	WITHOUT_CLASSIFICATION	1.8198306495761073E-7	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999880860293561	WITHOUT_CLASSIFICATION	1.191397064397926E-5	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9999931776756682	WITHOUT_CLASSIFICATION	6.822324331788261E-6	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.9999991194365112	WITHOUT_CLASSIFICATION	8.805634889335541E-7	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999999147449148	WITHOUT_CLASSIFICATION	8.525508526185078E-8	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.999944741975914	WITHOUT_CLASSIFICATION	5.525802408603898E-5	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999997822005847	WITHOUT_CLASSIFICATION	2.1779941528867253E-7	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999999410744919	WITHOUT_CLASSIFICATION	5.892550810864559E-8	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999863525243489	WITHOUT_CLASSIFICATION	1.3647475651204755E-5	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.999999369388868	WITHOUT_CLASSIFICATION	6.306111319556645E-7	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.999999980944604	WITHOUT_CLASSIFICATION	1.9055396000739557E-8	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999994419644098	WITHOUT_CLASSIFICATION	5.580355902004182E-7	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.999999947850377	WITHOUT_CLASSIFICATION	5.2149622913752375E-8	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999956320944	WITHOUT_CLASSIFICATION	4.367905689170311E-9	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9999994970905149	WITHOUT_CLASSIFICATION	5.029094851231962E-7	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999886096448164	WITHOUT_CLASSIFICATION	1.139035518354483E-5	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999886096448164	WITHOUT_CLASSIFICATION	1.139035518354483E-5	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999922673456	WITHOUT_CLASSIFICATION	7.732654329960081E-9	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9998492001538041	WITHOUT_CLASSIFICATION	1.507998461959486E-4	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9999170939597055	WITHOUT_CLASSIFICATION	8.290604029458085E-5	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.9999816568374315	WITHOUT_CLASSIFICATION	1.834316256858561E-5	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999964622059878	WITHOUT_CLASSIFICATION	3.537794012200554E-6	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9999527946421382	WITHOUT_CLASSIFICATION	4.720535786185471E-5	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999681664779014	WITHOUT_CLASSIFICATION	3.183352209853204E-5	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.999999763893637	WITHOUT_CLASSIFICATION	2.3610636306499274E-7	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999996887286363	WITHOUT_CLASSIFICATION	3.1127136367037907E-7	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999993959845493	WITHOUT_CLASSIFICATION	6.040154505740091E-7	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9999991488831312	WITHOUT_CLASSIFICATION	8.511168687525251E-7	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999943050542326	WITHOUT_CLASSIFICATION	5.6949457674532854E-6	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9999939134417773	WITHOUT_CLASSIFICATION	6.086558222657787E-6	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9999996588202911	WITHOUT_CLASSIFICATION	3.411797089728765E-7	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999990886279893	WITHOUT_CLASSIFICATION	9.113720108413404E-7	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999942973341713	WITHOUT_CLASSIFICATION	5.70266582868009E-6	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999996812213297	WITHOUT_CLASSIFICATION	3.187786703124582E-7	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.999996982321689	WITHOUT_CLASSIFICATION	3.017678311027546E-6	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9999663581546601	WITHOUT_CLASSIFICATION	3.364184533993055E-5	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9999678526899342	WITHOUT_CLASSIFICATION	3.214731006577905E-5	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999995883741868	WITHOUT_CLASSIFICATION	4.1162581323261303E-7	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999940470743794	WITHOUT_CLASSIFICATION	5.952925620572009E-6	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.999999355714286	WITHOUT_CLASSIFICATION	6.442857138989609E-7	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999979037775706	WITHOUT_CLASSIFICATION	2.0962224294658727E-6	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.999999861830683	WITHOUT_CLASSIFICATION	1.3816931691447538E-7	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999999041122154	WITHOUT_CLASSIFICATION	9.588778469689477E-8	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999999469425578	WITHOUT_CLASSIFICATION	5.3057442162746884E-8	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999999281712068	WITHOUT_CLASSIFICATION	7.182879321456843E-8	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999999256342486	WITHOUT_CLASSIFICATION	7.436575141431909E-8	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999912656999203	WITHOUT_CLASSIFICATION	8.73430007972529E-6	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999877599820433	WITHOUT_CLASSIFICATION	1.2240017956668372E-5	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999976729691192	WITHOUT_CLASSIFICATION	2.32703088071541E-6	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9999496942797966	WITHOUT_CLASSIFICATION	5.030572020327366E-5	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999945047911417	WITHOUT_CLASSIFICATION	5.495208858260943E-6	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999807162669075	WITHOUT_CLASSIFICATION	1.92837330925042E-5	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999971747208763	WITHOUT_CLASSIFICATION	2.8252791236379463E-6	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9999910082529103	WITHOUT_CLASSIFICATION	8.991747089611086E-6	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999919045040155	WITHOUT_CLASSIFICATION	8.095495984409815E-6	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999996719026513	WITHOUT_CLASSIFICATION	3.280973487064189E-7	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999992962843997	WITHOUT_CLASSIFICATION	7.037156003013817E-7	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999984233012214	WITHOUT_CLASSIFICATION	1.5766987786315354E-6	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9999952979675344	WITHOUT_CLASSIFICATION	4.702032465591179E-6	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999979204327296	WITHOUT_CLASSIFICATION	2.0795672704525553E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999998124718871	WITHOUT_CLASSIFICATION	1.8752811287424027E-7	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999985520396618	WITHOUT_CLASSIFICATION	1.4479603381087343E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999999782545392	WITHOUT_CLASSIFICATION	2.174546083866165E-8	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999978409546374	WITHOUT_CLASSIFICATION	2.15904536264537E-6	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997595600479	WITHOUT_CLASSIFICATION	2.40439952061164E-7	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989103640922	WITHOUT_CLASSIFICATION	1.089635907834986E-6	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999999999343234	WITHOUT_CLASSIFICATION	6.567651889103972E-11	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999984828998445	WITHOUT_CLASSIFICATION	1.5171001554808497E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224061356	WITHOUT_CLASSIFICATION	1.1917759386434587E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224061356	WITHOUT_CLASSIFICATION	1.1917759386434587E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999969870464301	WITHOUT_CLASSIFICATION	3.0129535697475996E-6	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9999999971752072	WITHOUT_CLASSIFICATION	2.8247929197712046E-9	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999993708872376	WITHOUT_CLASSIFICATION	6.291127624614569E-7	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955046825545	WITHOUT_CLASSIFICATION	4.495317445423613E-6	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999993708872376	WITHOUT_CLASSIFICATION	6.291127624614569E-7	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999998357582152	WITHOUT_CLASSIFICATION	1.6424178490954849E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999996570974684	WITHOUT_CLASSIFICATION	3.429025315582669E-7	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9999997664934669	WITHOUT_CLASSIFICATION	2.3350653305534725E-7	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999999537343481	WITHOUT_CLASSIFICATION	4.626565197190148E-8	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.999997675327991	WITHOUT_CLASSIFICATION	2.3246720089781656E-6	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999978878776797	WITHOUT_CLASSIFICATION	2.112122320276092E-6	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999998513179568	WITHOUT_CLASSIFICATION	1.4868204328467206E-7	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999986538171511	WITHOUT_CLASSIFICATION	1.3461828488326331E-6	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999998593757509	WITHOUT_CLASSIFICATION	1.406242490966098E-7	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9999932435673713	WITHOUT_CLASSIFICATION	6.7564326287317505E-6	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.999998404979684	WITHOUT_CLASSIFICATION	1.5950203159870772E-6	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9999999464402356	WITHOUT_CLASSIFICATION	5.3559764340029686E-8	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999928071866977	WITHOUT_CLASSIFICATION	7.1928133022322015E-6	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9999999860837206	WITHOUT_CLASSIFICATION	1.391627927224595E-8	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.9999887486852338	WITHOUT_CLASSIFICATION	1.1251314766197242E-5	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999997399415262	WITHOUT_CLASSIFICATION	2.600584737940161E-7	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999745163270233	WITHOUT_CLASSIFICATION	2.5483672976689932E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999745163270233	WITHOUT_CLASSIFICATION	2.5483672976689932E-5	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999887589864636	WITHOUT_CLASSIFICATION	1.1241013536351371E-5	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999999555080058	WITHOUT_CLASSIFICATION	4.4491994188651407E-8	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999999850288351	WITHOUT_CLASSIFICATION	1.4971164966133414E-8	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999999852361233	WITHOUT_CLASSIFICATION	1.4763876628316076E-8	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999999845061714	WITHOUT_CLASSIFICATION	1.549382855292388E-8	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999999333554684	WITHOUT_CLASSIFICATION	6.664453158590102E-8	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999999493683664	WITHOUT_CLASSIFICATION	5.063163342976038E-8	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.999998004293626	WITHOUT_CLASSIFICATION	1.995706374177402E-6	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999996169566367	WITHOUT_CLASSIFICATION	3.830433632834557E-7	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999988598532807	WITHOUT_CLASSIFICATION	1.140146719211607E-6	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999993345117825	WITHOUT_CLASSIFICATION	6.654882174495277E-7	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999994008906401	WITHOUT_CLASSIFICATION	5.991093598623407E-7	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999999830761309	WITHOUT_CLASSIFICATION	1.6923869075839437E-8	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999998813122376	WITHOUT_CLASSIFICATION	1.1868776238063434E-7	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999967537372114	WITHOUT_CLASSIFICATION	3.246262788499637E-6	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.999999938470001	WITHOUT_CLASSIFICATION	6.152999902807551E-8	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999988223227083	WITHOUT_CLASSIFICATION	1.1776772917147629E-6	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.99999028478799	WITHOUT_CLASSIFICATION	9.715212009926043E-6	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.9999934337426758	WITHOUT_CLASSIFICATION	6.5662573241870815E-6	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.999999977142658	WITHOUT_CLASSIFICATION	2.285734193932879E-8	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999997557839803	WITHOUT_CLASSIFICATION	2.442160197117617E-7	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999997605296077	WITHOUT_CLASSIFICATION	2.3947039236053174E-7	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999999714679499	WITHOUT_CLASSIFICATION	2.8532050111330698E-8	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999998726176403	WITHOUT_CLASSIFICATION	1.2738235964103186E-7	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9999890429947528	WITHOUT_CLASSIFICATION	1.0957005247293094E-5	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999996382276777	WITHOUT_CLASSIFICATION	3.6177232230471306E-7	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999983678737793	WITHOUT_CLASSIFICATION	1.6321262206571403E-6	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.999998525493586	WITHOUT_CLASSIFICATION	1.4745064140122722E-6	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999914059074064	WITHOUT_CLASSIFICATION	8.59409259361456E-6	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999972516772395	WITHOUT_CLASSIFICATION	2.7483227605420685E-6	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999465263757841	WITHOUT_CLASSIFICATION	5.3473624215965796E-5	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999983839233028	WITHOUT_CLASSIFICATION	1.6160766972662902E-6	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999977358789921	WITHOUT_CLASSIFICATION	2.2641210079267147E-6	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999898129633668	WITHOUT_CLASSIFICATION	1.0187036633371137E-5	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.999993650944148	WITHOUT_CLASSIFICATION	6.349055851944342E-6	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999996829040494	WITHOUT_CLASSIFICATION	3.1709595059768156E-7	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999994210947881	WITHOUT_CLASSIFICATION	5.789052119828657E-7	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999977124716529	WITHOUT_CLASSIFICATION	2.287528347103348E-6	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999984668887478	WITHOUT_CLASSIFICATION	1.5331112521141802E-6	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999994755132428	WITHOUT_CLASSIFICATION	5.244867573422472E-7	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999996773965922	WITHOUT_CLASSIFICATION	3.226034078043626E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999975792014694	WITHOUT_CLASSIFICATION	2.4207985307079698E-6	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.9999808427631387	WITHOUT_CLASSIFICATION	1.9157236861212647E-5	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9999971706105504	WITHOUT_CLASSIFICATION	2.829389449711378E-6	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999999831170429	WITHOUT_CLASSIFICATION	1.6882957173976712E-8	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999999963855027	WITHOUT_CLASSIFICATION	3.61449716521082E-9	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9999704942888968	WITHOUT_CLASSIFICATION	2.9505711103172507E-5	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999999511639893	WITHOUT_CLASSIFICATION	4.8836010730910346E-8	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999997671832326	WITHOUT_CLASSIFICATION	2.3281676748378815E-7	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999991845003822	WITHOUT_CLASSIFICATION	8.154996177343947E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999995111182985	WITHOUT_CLASSIFICATION	4.888817015036417E-6	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999997979540244	WITHOUT_CLASSIFICATION	2.0204597560226443E-7	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999999936945337	WITHOUT_CLASSIFICATION	6.305466312477334E-9	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999993094780196	WITHOUT_CLASSIFICATION	6.905219803938475E-7	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999940270830604	WITHOUT_CLASSIFICATION	5.972916939519497E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999908839744848	WITHOUT_CLASSIFICATION	9.116025515230986E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999908839744848	WITHOUT_CLASSIFICATION	9.116025515230986E-6	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999992827044327	WITHOUT_CLASSIFICATION	7.172955673341339E-7	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999893836125434	WITHOUT_CLASSIFICATION	1.0616387456679496E-5	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999946925520506	WITHOUT_CLASSIFICATION	5.307447949250149E-6	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999990594638583	WITHOUT_CLASSIFICATION	9.405361416476463E-7	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999999112022707	WITHOUT_CLASSIFICATION	8.87977292886144E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999999311159091	WITHOUT_CLASSIFICATION	6.888409087537244E-8	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999995708789973	WITHOUT_CLASSIFICATION	4.2912100276669844E-7	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999999340705248	WITHOUT_CLASSIFICATION	6.592947516018972E-8	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.999989867607338	WITHOUT_CLASSIFICATION	1.0132392662086377E-5	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999992870439482	WITHOUT_CLASSIFICATION	7.129560517221138E-7	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999913460561832	WITHOUT_CLASSIFICATION	8.653943816774621E-6	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9999873723857122	WITHOUT_CLASSIFICATION	1.2627614287766219E-5	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9999669746879294	WITHOUT_CLASSIFICATION	3.3025312070536686E-5	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.999997939654489	WITHOUT_CLASSIFICATION	2.0603455109573595E-6	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999998819085478	WITHOUT_CLASSIFICATION	1.1809145218770448E-7	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999999208392597	WITHOUT_CLASSIFICATION	7.916074033365025E-8	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999999809900105	WITHOUT_CLASSIFICATION	1.9009989525545396E-8	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.999974468614321	WITHOUT_CLASSIFICATION	2.5531385678945144E-5	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999901809737608	WITHOUT_CLASSIFICATION	9.819026239146947E-6	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999980358062823	WITHOUT_CLASSIFICATION	1.964193717657901E-6	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999999352312375	WITHOUT_CLASSIFICATION	6.476876246203945E-8	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999982927196767	WITHOUT_CLASSIFICATION	1.7072803232207669E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999468348000631	WITHOUT_CLASSIFICATION	5.316519993684838E-5	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999998235422993	WITHOUT_CLASSIFICATION	1.7645770059284257E-7	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9999998905594037	WITHOUT_CLASSIFICATION	1.0944059620995683E-7	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.999999967662372	WITHOUT_CLASSIFICATION	3.2337627961754406E-8	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9997193206318478	WITHOUT_CLASSIFICATION	2.8067936815216743E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999267748081347	WITHOUT_CLASSIFICATION	7.322519186518245E-5	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999995826033653	WITHOUT_CLASSIFICATION	4.173966346332804E-7	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999468348000631	WITHOUT_CLASSIFICATION	5.316519993684838E-5	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999997385181372	WITHOUT_CLASSIFICATION	2.6148186289981746E-7	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999993969096634	WITHOUT_CLASSIFICATION	6.030903365949136E-7	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9998739722787642	WITHOUT_CLASSIFICATION	1.260277212358359E-4	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999935671815892	WITHOUT_CLASSIFICATION	6.432818410812723E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999998335232483	WITHOUT_CLASSIFICATION	1.6647675169385838E-7	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999997862619676	WITHOUT_CLASSIFICATION	2.137380323886059E-7	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999999865642976	WITHOUT_CLASSIFICATION	1.3435702314531039E-8	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999995040326368	WITHOUT_CLASSIFICATION	4.959673631781951E-7	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999991759452389	WITHOUT_CLASSIFICATION	8.240547610728433E-7	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999935671815892	WITHOUT_CLASSIFICATION	6.432818410812723E-6	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.999998398431824	WITHOUT_CLASSIFICATION	1.6015681760225557E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.999999317623954	WITHOUT_CLASSIFICATION	6.823760459282481E-7	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999984475240976	WITHOUT_CLASSIFICATION	1.5524759023355525E-6	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999610211593207	WITHOUT_CLASSIFICATION	3.8978840679197465E-5	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9999998133124312	WITHOUT_CLASSIFICATION	1.8668756893300955E-7	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999993345117825	WITHOUT_CLASSIFICATION	6.654882174495277E-7	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999997038233651	WITHOUT_CLASSIFICATION	2.9617663480806124E-7	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999997052954622	WITHOUT_CLASSIFICATION	2.947045377531971E-7	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999930931735825	WITHOUT_CLASSIFICATION	6.906826417465917E-6	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9999982838858849	WITHOUT_CLASSIFICATION	1.7161141150867593E-6	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999701607481649	WITHOUT_CLASSIFICATION	2.9839251835100113E-5	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999990862947273	WITHOUT_CLASSIFICATION	9.137052726055102E-7	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999914536363338	WITHOUT_CLASSIFICATION	8.546363666228554E-6	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.999999438296096	WITHOUT_CLASSIFICATION	5.617039039852276E-7	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999952532322723	WITHOUT_CLASSIFICATION	4.746767727677544E-6	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.999999059995365	WITHOUT_CLASSIFICATION	9.400046351273763E-7	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999617143379422	WITHOUT_CLASSIFICATION	3.828566205781124E-5	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999999493905103	WITHOUT_CLASSIFICATION	5.0609489690273546E-8	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999999903066081	WITHOUT_CLASSIFICATION	9.693391835305174E-9	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999964945987115	WITHOUT_CLASSIFICATION	3.5054012883787067E-6	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999998560730878	WITHOUT_CLASSIFICATION	1.4392691217161778E-7	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999993888426185	WITHOUT_CLASSIFICATION	6.111573813928188E-7	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999988780510322	WITHOUT_CLASSIFICATION	1.1219489679218339E-6	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999998057305138	WITHOUT_CLASSIFICATION	1.9426948604163047E-7	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999997971605948	WITHOUT_CLASSIFICATION	2.0283940513945672E-7	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9999901584943106	WITHOUT_CLASSIFICATION	9.841505689347943E-6	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.999994784282467	WITHOUT_CLASSIFICATION	5.2157175329755435E-6	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999995284571811	WITHOUT_CLASSIFICATION	4.7154281893536843E-7	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999996050585442	WITHOUT_CLASSIFICATION	3.949414557958009E-7	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999999470671649	WITHOUT_CLASSIFICATION	5.2932835071148126E-8	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999942098827507	WITHOUT_CLASSIFICATION	5.790117249426596E-6	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9999889891621166	WITHOUT_CLASSIFICATION	1.1010837883416903E-5	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999997316537369	WITHOUT_CLASSIFICATION	2.683462631361761E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997436055638	WITHOUT_CLASSIFICATION	2.5639443622519496E-7	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999946310298101	WITHOUT_CLASSIFICATION	5.368970189973578E-6	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.999999998974206	WITHOUT_CLASSIFICATION	1.0257940069060566E-9	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999993129917892	WITHOUT_CLASSIFICATION	6.870082106597591E-7	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999979826434966	WITHOUT_CLASSIFICATION	2.0173565033441413E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122184	WITHOUT_CLASSIFICATION	4.2008778151132414E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122184	WITHOUT_CLASSIFICATION	4.2008778151132414E-7	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999988166030468	WITHOUT_CLASSIFICATION	1.1833969532529313E-6	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999994627438313	WITHOUT_CLASSIFICATION	5.372561686874108E-7	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999985594390004	WITHOUT_CLASSIFICATION	1.4405609995442632E-6	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999999416108629	WITHOUT_CLASSIFICATION	5.8389137096801475E-8	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999983928680262	WITHOUT_CLASSIFICATION	1.607131973841627E-6	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999997497992412	WITHOUT_CLASSIFICATION	2.502007588068985E-7	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999983236438994	WITHOUT_CLASSIFICATION	1.6763561006052213E-6	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999994762935582	WITHOUT_CLASSIFICATION	5.237064418970974E-7	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.999999031033253	WITHOUT_CLASSIFICATION	9.689667469578226E-7	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999999677871451	WITHOUT_CLASSIFICATION	3.2212854889601917E-8	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999996218724236	WITHOUT_CLASSIFICATION	3.7812757637918616E-7	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999999338211085	WITHOUT_CLASSIFICATION	6.617889146886942E-8	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999999354902714	WITHOUT_CLASSIFICATION	6.450972857696562E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122184	WITHOUT_CLASSIFICATION	4.2008778151132414E-7	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999963477833266	WITHOUT_CLASSIFICATION	3.6522166734571053E-6	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999967615452208	WITHOUT_CLASSIFICATION	3.238454779247097E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999996081942197	WITHOUT_CLASSIFICATION	3.9180578025021777E-7	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999989132635211	WITHOUT_CLASSIFICATION	1.0867364789230866E-6	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999999245851988	WITHOUT_CLASSIFICATION	7.541480123326686E-8	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9999943016857311	WITHOUT_CLASSIFICATION	5.698314268866307E-6	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999999145722737	WITHOUT_CLASSIFICATION	8.542772634046189E-8	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999999083952505	WITHOUT_CLASSIFICATION	9.1604749434779E-8	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999999928309646	WITHOUT_CLASSIFICATION	7.169035293798461E-9	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999993464582793	WITHOUT_CLASSIFICATION	6.535417208519057E-7	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.99999988439788	WITHOUT_CLASSIFICATION	1.1560212001966865E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997436055638	WITHOUT_CLASSIFICATION	2.5639443622519496E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122184	WITHOUT_CLASSIFICATION	4.2008778151132414E-7	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999977684094451	WITHOUT_CLASSIFICATION	2.231590554795462E-6	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999997387021559	WITHOUT_CLASSIFICATION	2.612978441402191E-7	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999978131711262	WITHOUT_CLASSIFICATION	2.1868288736803864E-6	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999960147070459	WITHOUT_CLASSIFICATION	3.985292954123459E-6	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999997234162588	WITHOUT_CLASSIFICATION	2.7658374131199757E-7	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999997465269308	WITHOUT_CLASSIFICATION	2.534730692919983E-7	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999864711431989	WITHOUT_CLASSIFICATION	1.3528856801041858E-5	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999997242071568	WITHOUT_CLASSIFICATION	2.7579284321486155E-7	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999994627093609	WITHOUT_CLASSIFICATION	5.372906391077609E-7	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999998873350895	WITHOUT_CLASSIFICATION	1.1266491059946872E-7	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.999999611753837	WITHOUT_CLASSIFICATION	3.8824616301890626E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998450466033507	WITHOUT_CLASSIFICATION	1.549533966493472E-4	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.999999843362889	WITHOUT_CLASSIFICATION	1.5663711086882878E-7	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999998866808477	WITHOUT_CLASSIFICATION	1.1331915230764362E-7	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999998357582152	WITHOUT_CLASSIFICATION	1.6424178490954849E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999999166221556	WITHOUT_CLASSIFICATION	8.337784445262976E-8	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999999945622196	WITHOUT_CLASSIFICATION	5.437780353572988E-9	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999998476891123	WITHOUT_CLASSIFICATION	1.5231088755363353E-7	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999987806912796	WITHOUT_CLASSIFICATION	1.2193087204570012E-6	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999997736388035	WITHOUT_CLASSIFICATION	2.2636119651031694E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999841282519346	WITHOUT_CLASSIFICATION	1.58717480653604E-5	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999841282519346	WITHOUT_CLASSIFICATION	1.58717480653604E-5	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999999052148282	WITHOUT_CLASSIFICATION	9.478517182010578E-8	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9999999926021617	WITHOUT_CLASSIFICATION	7.3978384238991124E-9	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9999998884920354	WITHOUT_CLASSIFICATION	1.1150796461318508E-7	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9999999709822576	WITHOUT_CLASSIFICATION	2.901774235957249E-8	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999984678181782	WITHOUT_CLASSIFICATION	1.5321818218521259E-6	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999902884548139	WITHOUT_CLASSIFICATION	9.711545186128E-6	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999949406902556	WITHOUT_CLASSIFICATION	5.059309744394161E-6	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999998540192347	WITHOUT_CLASSIFICATION	1.4598076517472758E-7	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999998540192347	WITHOUT_CLASSIFICATION	1.4598076517472758E-7	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999867855529063	WITHOUT_CLASSIFICATION	1.3214447093581827E-5	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999964638036802	WITHOUT_CLASSIFICATION	3.536196319735741E-6	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999989303476792	WITHOUT_CLASSIFICATION	1.0696523208918702E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999977347749268	WITHOUT_CLASSIFICATION	2.265225073207133E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999977347749268	WITHOUT_CLASSIFICATION	2.265225073207133E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999977347749268	WITHOUT_CLASSIFICATION	2.265225073207133E-6	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9999999565192584	WITHOUT_CLASSIFICATION	4.3480741490271634E-8	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999993769559224	WITHOUT_CLASSIFICATION	6.23044077577994E-7	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9999974701241802	WITHOUT_CLASSIFICATION	2.529875819900763E-6	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9999999366069763	WITHOUT_CLASSIFICATION	6.339302370248346E-8	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999999811473833	WITHOUT_CLASSIFICATION	1.8852616659131463E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122184	WITHOUT_CLASSIFICATION	4.2008778151132414E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122184	WITHOUT_CLASSIFICATION	4.2008778151132414E-7	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.999999998733164	WITHOUT_CLASSIFICATION	1.2668359367694416E-9	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999999922676116	WITHOUT_CLASSIFICATION	7.732388411589632E-9	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.999999939647255	WITHOUT_CLASSIFICATION	6.035274500169287E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999969178847531	WITHOUT_CLASSIFICATION	3.082115246989119E-6	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999990799611531	WITHOUT_CLASSIFICATION	9.200388468244972E-7	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999973176444817	WITHOUT_CLASSIFICATION	2.6823555182691724E-6	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999977873884661	WITHOUT_CLASSIFICATION	2.2126115339323262E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999999844641477	WITHOUT_CLASSIFICATION	1.553585232072913E-8	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.999998568762258	WITHOUT_CLASSIFICATION	1.4312377419731508E-6	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.999999566502581	WITHOUT_CLASSIFICATION	4.3349741889511754E-7	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999574140661239	WITHOUT_CLASSIFICATION	4.258593387609929E-5	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.999997999997023	WITHOUT_CLASSIFICATION	2.000002977003152E-6	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.999997999997023	WITHOUT_CLASSIFICATION	2.000002977003152E-6	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999986436958241	WITHOUT_CLASSIFICATION	1.3563041758838321E-6	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999986436958241	WITHOUT_CLASSIFICATION	1.3563041758838321E-6	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.999998690532528	WITHOUT_CLASSIFICATION	1.3094674719657511E-6	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.999997991746077	WITHOUT_CLASSIFICATION	2.0082539230402046E-6	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.999997991746077	WITHOUT_CLASSIFICATION	2.0082539230402046E-6	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.999997903576343	WITHOUT_CLASSIFICATION	2.0964236570200566E-6	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999968570170148	WITHOUT_CLASSIFICATION	3.1429829852525194E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999997454075635	WITHOUT_CLASSIFICATION	2.5459243644607185E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999841282519346	WITHOUT_CLASSIFICATION	1.58717480653604E-5	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999999089303946	WITHOUT_CLASSIFICATION	9.106960548683529E-8	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999968570170148	WITHOUT_CLASSIFICATION	3.1429829852525194E-6	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9999965840962353	WITHOUT_CLASSIFICATION	3.4159037646188222E-6	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999990377915867	WITHOUT_CLASSIFICATION	9.6220841328032E-7	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999984939114287	WITHOUT_CLASSIFICATION	1.506088571262943E-6	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999985360650426	WITHOUT_CLASSIFICATION	1.4639349574656838E-6	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999999944682304	WITHOUT_CLASSIFICATION	5.531769612623782E-9	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.999996721688875	WITHOUT_CLASSIFICATION	3.2783111250555993E-6	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999996145891286	WITHOUT_CLASSIFICATION	3.854108714258155E-7	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9999999454268755	WITHOUT_CLASSIFICATION	5.457312456610778E-8	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.999997784026044	WITHOUT_CLASSIFICATION	2.2159739560461434E-6	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9999987641082755	WITHOUT_CLASSIFICATION	1.235891724480183E-6	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999998914050007	WITHOUT_CLASSIFICATION	1.0859499935130882E-7	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9999963835677877	WITHOUT_CLASSIFICATION	3.6164322121447518E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999980556132588	WITHOUT_CLASSIFICATION	1.9443867410549462E-6	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999989939408624	WITHOUT_CLASSIFICATION	1.006059137563346E-6	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9999999955943226	WITHOUT_CLASSIFICATION	4.405677346441076E-9	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9999996838703806	WITHOUT_CLASSIFICATION	3.161296194625997E-7	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999998324968696	WITHOUT_CLASSIFICATION	1.6750313048652086E-7	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999997537937699	WITHOUT_CLASSIFICATION	2.462062300097003E-7	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999997537937699	WITHOUT_CLASSIFICATION	2.462062300097003E-7	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999993303739327	WITHOUT_CLASSIFICATION	6.696260672271447E-7	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.999999338493253	WITHOUT_CLASSIFICATION	6.615067470424172E-7	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999997608728064	WITHOUT_CLASSIFICATION	2.3912719365996914E-7	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999982704562899	WITHOUT_CLASSIFICATION	1.7295437101585149E-6	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999990709329116	WITHOUT_CLASSIFICATION	9.290670884977699E-7	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999999503465351	WITHOUT_CLASSIFICATION	4.965346498046815E-8	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9999998827541955	WITHOUT_CLASSIFICATION	1.1724580447383973E-7	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.999999383045595	WITHOUT_CLASSIFICATION	6.169544050839472E-7	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999980857861686	WITHOUT_CLASSIFICATION	1.9142138315309733E-6	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999998469414378	WITHOUT_CLASSIFICATION	1.5305856212981248E-7	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999997377036396	WITHOUT_CLASSIFICATION	2.6229636038793663E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998450466033507	WITHOUT_CLASSIFICATION	1.549533966493472E-4	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999998441241671	WITHOUT_CLASSIFICATION	1.5587583286257726E-7	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999962783454116	WITHOUT_CLASSIFICATION	3.7216545883227516E-6	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999996522199388	WITHOUT_CLASSIFICATION	3.477800611777224E-7	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999975336149378	WITHOUT_CLASSIFICATION	2.4663850621723018E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999440663624	WITHOUT_CLASSIFICATION	5.593363771662484E-8	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999440663624	WITHOUT_CLASSIFICATION	5.593363771662484E-8	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9999990947772076	WITHOUT_CLASSIFICATION	9.052227923410606E-7	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9999998468352244	WITHOUT_CLASSIFICATION	1.5316477557308853E-7	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9999983936676903	WITHOUT_CLASSIFICATION	1.606332309765216E-6	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999969096624703	WITHOUT_CLASSIFICATION	3.0903375296189515E-6	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999943687380483	WITHOUT_CLASSIFICATION	5.6312619518530845E-6	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999983422440679	WITHOUT_CLASSIFICATION	1.657755932166239E-6	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999989712828669	WITHOUT_CLASSIFICATION	1.0287171330903653E-6	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999995727182637	WITHOUT_CLASSIFICATION	4.272817363950415E-7	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999990913608695	WITHOUT_CLASSIFICATION	9.086391306390238E-7	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999999315365995	WITHOUT_CLASSIFICATION	6.846340059396295E-8	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999992483332604	WITHOUT_CLASSIFICATION	7.516667396853012E-7	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999995727182637	WITHOUT_CLASSIFICATION	4.272817363950415E-7	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9999999236681034	WITHOUT_CLASSIFICATION	7.633189667084707E-8	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999949343957081	WITHOUT_CLASSIFICATION	5.065604291948873E-6	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999999824781945	WITHOUT_CLASSIFICATION	1.75218054442177E-8	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999995001785008	WITHOUT_CLASSIFICATION	4.998214992955367E-7	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999999415605031	WITHOUT_CLASSIFICATION	5.843949691082497E-8	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999997669084827	WITHOUT_CLASSIFICATION	2.330915174506099E-7	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999938900270228	WITHOUT_CLASSIFICATION	6.109972977251538E-6	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999990647610771	WITHOUT_CLASSIFICATION	9.352389227457705E-7	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999989872339224	WITHOUT_CLASSIFICATION	1.0127660776237398E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999939429182146	WITHOUT_CLASSIFICATION	6.057081785457425E-6	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999965373928386	WITHOUT_CLASSIFICATION	3.462607161541115E-6	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.999999885152694	WITHOUT_CLASSIFICATION	1.1484730600185778E-7	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999851953965369	WITHOUT_CLASSIFICATION	1.4804603463176759E-5	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999999485322038	WITHOUT_CLASSIFICATION	5.146779621676545E-8	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999988074389271	WITHOUT_CLASSIFICATION	1.1925610728994578E-6	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999993789380002	WITHOUT_CLASSIFICATION	6.210619998690567E-7	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999994508034004	WITHOUT_CLASSIFICATION	5.491965996573486E-7	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9999936619812454	WITHOUT_CLASSIFICATION	6.33801875457238E-6	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9999923106429491	WITHOUT_CLASSIFICATION	7.689357050852325E-6	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999960463407941	WITHOUT_CLASSIFICATION	3.953659205912548E-6	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9999998304956019	WITHOUT_CLASSIFICATION	1.6950439802817758E-7	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9999998034175789	WITHOUT_CLASSIFICATION	1.965824210235184E-7	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9999992831413389	WITHOUT_CLASSIFICATION	7.168586610763196E-7	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9999934130589389	WITHOUT_CLASSIFICATION	6.58694106112012E-6	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999983185479987	WITHOUT_CLASSIFICATION	1.6814520013460057E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999943488817207	WITHOUT_CLASSIFICATION	5.65111827934449E-6	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999998909612309	WITHOUT_CLASSIFICATION	1.0903876921878801E-7	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999965565786648	WITHOUT_CLASSIFICATION	3.443421335131837E-6	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999995986952798	WITHOUT_CLASSIFICATION	4.013047203279471E-7	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999999748402507	WITHOUT_CLASSIFICATION	2.5159749221868327E-8	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.999999763619472	WITHOUT_CLASSIFICATION	2.363805280603258E-7	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999988084594698	WITHOUT_CLASSIFICATION	1.1915405302457492E-6	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999994223295997	WITHOUT_CLASSIFICATION	5.776704001978134E-7	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999999995326191	WITHOUT_CLASSIFICATION	4.673807950701602E-10	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999999428370268	WITHOUT_CLASSIFICATION	5.716297330988099E-8	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999992062112951	WITHOUT_CLASSIFICATION	7.937887049338803E-7	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999998594204513	WITHOUT_CLASSIFICATION	1.4057954872793356E-7	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999991240352335	WITHOUT_CLASSIFICATION	8.759647664795211E-7	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999993856568725	WITHOUT_CLASSIFICATION	6.143431275431693E-7	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999992099287137	WITHOUT_CLASSIFICATION	7.900712863070489E-7	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999927893757542	WITHOUT_CLASSIFICATION	7.210624245831226E-6	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999995983468694	WITHOUT_CLASSIFICATION	4.0165313070547905E-7	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999986767216222	WITHOUT_CLASSIFICATION	1.323278377754326E-6	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999999931821882	WITHOUT_CLASSIFICATION	6.81781170185082E-9	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999984847108502	WITHOUT_CLASSIFICATION	1.5152891498461546E-6	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.999999904983344	WITHOUT_CLASSIFICATION	9.501665607115497E-8	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999999987799786	WITHOUT_CLASSIFICATION	1.2200214146648739E-9	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999991821971927	WITHOUT_CLASSIFICATION	8.178028072035431E-7	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999994511295454	WITHOUT_CLASSIFICATION	5.48870454618345E-7	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999975291438468	WITHOUT_CLASSIFICATION	2.470856153184239E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997412002535	WITHOUT_CLASSIFICATION	2.5879974656833385E-7	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999999389087065	WITHOUT_CLASSIFICATION	6.1091293420956E-8	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999999683869839	WITHOUT_CLASSIFICATION	3.161301608522277E-8	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999996862112938	WITHOUT_CLASSIFICATION	3.137887063244887E-7	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999999773768073	WITHOUT_CLASSIFICATION	2.262319255445051E-8	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999989509476009	WITHOUT_CLASSIFICATION	1.049052399011606E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999996950915176	WITHOUT_CLASSIFICATION	3.0490848233768027E-7	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999996924492096	WITHOUT_CLASSIFICATION	3.0755079030438296E-7	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999991851450358	WITHOUT_CLASSIFICATION	8.148549641888059E-7	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999998579162345	WITHOUT_CLASSIFICATION	1.4208376557862865E-7	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999993818262582	WITHOUT_CLASSIFICATION	6.181737417758835E-7	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999999467500768	WITHOUT_CLASSIFICATION	5.3249923398892977E-8	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999972273191098	WITHOUT_CLASSIFICATION	2.7726808902862646E-6	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9999996775539287	WITHOUT_CLASSIFICATION	3.2244607126997933E-7	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9999984884963918	WITHOUT_CLASSIFICATION	1.5115036081452147E-6	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999935205064566	WITHOUT_CLASSIFICATION	6.479493543383546E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997412002535	WITHOUT_CLASSIFICATION	2.5879974656833385E-7	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999999134751143	WITHOUT_CLASSIFICATION	8.652488571049467E-8	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999999206843937	WITHOUT_CLASSIFICATION	7.93156062907205E-8	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999986181575345	WITHOUT_CLASSIFICATION	1.3818424654045995E-6	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999983278298462	WITHOUT_CLASSIFICATION	1.6721701537858502E-6	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999980160191521	WITHOUT_CLASSIFICATION	1.9839808479769577E-6	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999995892497511	WITHOUT_CLASSIFICATION	4.1075024889335855E-7	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999990913608695	WITHOUT_CLASSIFICATION	9.086391306390238E-7	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999998498440668	WITHOUT_CLASSIFICATION	1.501559332488056E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999999428370268	WITHOUT_CLASSIFICATION	5.716297330988099E-8	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9999996413688992	WITHOUT_CLASSIFICATION	3.5863110077402527E-7	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999991411801843	WITHOUT_CLASSIFICATION	8.588198157486111E-7	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999967529862838	WITHOUT_CLASSIFICATION	3.247013716187424E-6	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999959217039937	WITHOUT_CLASSIFICATION	4.078296006351341E-6	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999992656832691	WITHOUT_CLASSIFICATION	7.343167308117123E-7	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999984707376728	WITHOUT_CLASSIFICATION	1.5292623273131798E-6	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999986283141079	WITHOUT_CLASSIFICATION	1.3716858920690895E-6	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.999999974522713	WITHOUT_CLASSIFICATION	2.5477286939806754E-8	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999995974628904	WITHOUT_CLASSIFICATION	4.0253710956842025E-7	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999995892957246	WITHOUT_CLASSIFICATION	4.107042752640136E-7	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999975890914883	WITHOUT_CLASSIFICATION	2.4109085117164007E-6	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999990287126225	WITHOUT_CLASSIFICATION	9.712873775523008E-7	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999969813928499	WITHOUT_CLASSIFICATION	3.018607150100708E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999969813928499	WITHOUT_CLASSIFICATION	3.018607150100708E-6	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999998474054315	WITHOUT_CLASSIFICATION	1.5259456845473265E-7	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.999993788329223	WITHOUT_CLASSIFICATION	6.211670776850277E-6	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999999923392763	WITHOUT_CLASSIFICATION	7.660723810978506E-9	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999998846124233	WITHOUT_CLASSIFICATION	1.1538757668464999E-7	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999998911473955	WITHOUT_CLASSIFICATION	1.0885260446603756E-7	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999958558662839	WITHOUT_CLASSIFICATION	4.144133716139574E-6	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999984036545639	WITHOUT_CLASSIFICATION	1.5963454360528417E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.999999681003403	WITHOUT_CLASSIFICATION	3.189965970979069E-7	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999999412121893	WITHOUT_CLASSIFICATION	5.8787810685132905E-8	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.999999869809699	WITHOUT_CLASSIFICATION	1.301903010219235E-7	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999990840875542	WITHOUT_CLASSIFICATION	9.159124456633654E-7	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999986712794452	WITHOUT_CLASSIFICATION	1.328720554774846E-6	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999988085680532	WITHOUT_CLASSIFICATION	1.19143194679738E-6	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.999999925532051	WITHOUT_CLASSIFICATION	7.44679490170666E-8	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999991979601858	WITHOUT_CLASSIFICATION	8.020398142681531E-7	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999951221215541	WITHOUT_CLASSIFICATION	4.8778784459797935E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9999989221720528	WITHOUT_CLASSIFICATION	1.0778279472168308E-6	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999999454336487	WITHOUT_CLASSIFICATION	5.4566351298077806E-8	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999989886900074	WITHOUT_CLASSIFICATION	1.0113099927416087E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999998112201471	WITHOUT_CLASSIFICATION	1.8877985284148146E-7	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999915942890256	WITHOUT_CLASSIFICATION	8.405710974446093E-6	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999949887568071	WITHOUT_CLASSIFICATION	5.0112431928136975E-6	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.999999613187777	WITHOUT_CLASSIFICATION	3.8681222297248104E-7	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.9999647538902094	WITHOUT_CLASSIFICATION	3.524610979050297E-5	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9999994818824339	WITHOUT_CLASSIFICATION	5.181175660937774E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439843101	WITHOUT_CLASSIFICATION	8.556015689957416E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999995228042993	WITHOUT_CLASSIFICATION	4.771957006854396E-7	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999998714164422	WITHOUT_CLASSIFICATION	1.2858355786159079E-7	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999927538712383	WITHOUT_CLASSIFICATION	7.246128761740444E-6	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999970688736038	WITHOUT_CLASSIFICATION	2.9311263961037728E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998180358559572	WITHOUT_CLASSIFICATION	1.8196414404286534E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9999730515665026	WITHOUT_CLASSIFICATION	2.694843349728671E-5	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.999999998989675	WITHOUT_CLASSIFICATION	1.0103249584010082E-9	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999999835675754	WITHOUT_CLASSIFICATION	1.643242461637759E-8	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999995040285943	WITHOUT_CLASSIFICATION	4.959714058093518E-7	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999998895717267	WITHOUT_CLASSIFICATION	1.1042827329822569E-7	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999985574292312	WITHOUT_CLASSIFICATION	1.4425707688601383E-6	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9999976267634627	WITHOUT_CLASSIFICATION	2.3732365373940434E-6	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999940355419061	WITHOUT_CLASSIFICATION	5.964458093852849E-6	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999940494761289	WITHOUT_CLASSIFICATION	5.950523871143152E-6	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952650970785	WITHOUT_CLASSIFICATION	4.7349029214783475E-6	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999999588090781	WITHOUT_CLASSIFICATION	4.119092186939705E-8	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.999986830512234	WITHOUT_CLASSIFICATION	1.3169487765920157E-5	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999970110439035	WITHOUT_CLASSIFICATION	2.9889560966253103E-6	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999997955348824	WITHOUT_CLASSIFICATION	2.0446511752112453E-7	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979472640542	WITHOUT_CLASSIFICATION	2.052735945785682E-6	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9981126715650473	WITHOUT_CLASSIFICATION	0.0018873284349526268	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999995578824002	WITHOUT_CLASSIFICATION	4.4211759976043226E-7	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999999874757962	WITHOUT_CLASSIFICATION	1.2524203863915954E-8	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999997977623557	WITHOUT_CLASSIFICATION	2.0223764428960133E-7	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985567358743	WITHOUT_CLASSIFICATION	1.4432641255948007E-6	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999992484354628	WITHOUT_CLASSIFICATION	7.515645370878814E-7	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999994055933125	WITHOUT_CLASSIFICATION	5.944066876454634E-7	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999982714327302	WITHOUT_CLASSIFICATION	1.7285672697673987E-6	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999977198814786	WITHOUT_CLASSIFICATION	2.280118521508679E-6	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999999722169982	WITHOUT_CLASSIFICATION	2.7783001762831316E-8	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.999995108085451	WITHOUT_CLASSIFICATION	4.8919145490612674E-6	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9999994322714217	WITHOUT_CLASSIFICATION	5.677285782703622E-7	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999987314562995	WITHOUT_CLASSIFICATION	1.2685437005930865E-6	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.99999642193614	WITHOUT_CLASSIFICATION	3.578063860077871E-6	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999998467508788	WITHOUT_CLASSIFICATION	1.5324912111677367E-7	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999983102307659	WITHOUT_CLASSIFICATION	1.6897692340713751E-6	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999980351388538	WITHOUT_CLASSIFICATION	1.964861146255603E-6	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999998084605694	WITHOUT_CLASSIFICATION	1.915394305453919E-7	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999946354774487	WITHOUT_CLASSIFICATION	5.364522551223217E-6	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999972881568272	WITHOUT_CLASSIFICATION	2.7118431727856785E-6	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999988179664556	WITHOUT_CLASSIFICATION	1.1820335443474667E-6	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999996959888808	WITHOUT_CLASSIFICATION	3.0401111917994227E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999989087226604	WITHOUT_CLASSIFICATION	1.091277339568002E-6	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999998975173219	WITHOUT_CLASSIFICATION	1.024826781442724E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999989087226604	WITHOUT_CLASSIFICATION	1.091277339568002E-6	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999999833879942	WITHOUT_CLASSIFICATION	1.661200567437317E-8	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999996676421005	WITHOUT_CLASSIFICATION	3.3235789953184447E-7	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999675615633794	WITHOUT_CLASSIFICATION	3.243843662062046E-5	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999998478495103	WITHOUT_CLASSIFICATION	1.521504897272448E-7	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999999642058385	WITHOUT_CLASSIFICATION	3.579416157496123E-8	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999590011446925	WITHOUT_CLASSIFICATION	4.0998855307601345E-5	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999997918813607	WITHOUT_CLASSIFICATION	2.081186392913621E-7	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999992764114493	WITHOUT_CLASSIFICATION	7.235885506944749E-7	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.999999163037798	WITHOUT_CLASSIFICATION	8.369622020539987E-7	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999999556182834	WITHOUT_CLASSIFICATION	4.4381716651884426E-8	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999993203653447	WITHOUT_CLASSIFICATION	6.796346554416431E-7	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999993620594858	WITHOUT_CLASSIFICATION	6.379405142015523E-7	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999999588553335	WITHOUT_CLASSIFICATION	4.114466644110822E-8	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9999994418498322	WITHOUT_CLASSIFICATION	5.581501678230353E-7	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999984127862639	WITHOUT_CLASSIFICATION	1.5872137361320123E-6	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999999292858258	WITHOUT_CLASSIFICATION	7.07141741895775E-8	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999998965953877	WITHOUT_CLASSIFICATION	1.0340461225674564E-7	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999998162336567	WITHOUT_CLASSIFICATION	1.8376634326133228E-7	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999999903447089	WITHOUT_CLASSIFICATION	9.655291137427507E-9	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9999989297035616	WITHOUT_CLASSIFICATION	1.0702964383552136E-6	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999995908473621	WITHOUT_CLASSIFICATION	4.0915263788821565E-7	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9999981336242111	WITHOUT_CLASSIFICATION	1.866375788838412E-6	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999981823441173	WITHOUT_CLASSIFICATION	1.8176558828022444E-6	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999999805122454	WITHOUT_CLASSIFICATION	1.948775468498829E-8	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.999998694292368	WITHOUT_CLASSIFICATION	1.3057076319394875E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999957817491013	WITHOUT_CLASSIFICATION	4.218250898667169E-6	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999978372016435	WITHOUT_CLASSIFICATION	2.1627983564989967E-6	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.999995656104667	WITHOUT_CLASSIFICATION	4.343895333054241E-6	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999962792586068	WITHOUT_CLASSIFICATION	3.720741393092385E-6	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999995068164029	WITHOUT_CLASSIFICATION	4.931835970068199E-7	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9999941827140933	WITHOUT_CLASSIFICATION	5.817285906683786E-6	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.999939194922636	WITHOUT_CLASSIFICATION	6.080507736404842E-5	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999999895189757	WITHOUT_CLASSIFICATION	1.0481024178501835E-8	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.999998147355511	WITHOUT_CLASSIFICATION	1.8526444890422055E-6	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999976588136205	WITHOUT_CLASSIFICATION	2.3411863795720208E-6	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9999939308984839	WITHOUT_CLASSIFICATION	6.069101516164298E-6	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999899021323697	WITHOUT_CLASSIFICATION	1.009786763036738E-5	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999951580432479	WITHOUT_CLASSIFICATION	4.841956752122284E-6	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.999956647936965	WITHOUT_CLASSIFICATION	4.335206303491837E-5	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999998995510395	WITHOUT_CLASSIFICATION	1.0044896042283356E-7	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999839859940525	WITHOUT_CLASSIFICATION	1.6014005947521778E-5	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9999978843524835	WITHOUT_CLASSIFICATION	2.115647516530011E-6	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.999997070208617	WITHOUT_CLASSIFICATION	2.929791383140667E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999957817491013	WITHOUT_CLASSIFICATION	4.218250898667169E-6	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9998531485789324	WITHOUT_CLASSIFICATION	1.4685142106768049E-4	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.999999684643822	WITHOUT_CLASSIFICATION	3.153561780530726E-7	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9999492496356699	WITHOUT_CLASSIFICATION	5.075036433023982E-5	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999995628566684	WITHOUT_CLASSIFICATION	4.371433317088602E-7	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999917156636353	WITHOUT_CLASSIFICATION	8.284336364721128E-6	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.999989928316346	WITHOUT_CLASSIFICATION	1.007168365389113E-5	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999977356413102	WITHOUT_CLASSIFICATION	2.26435868971086E-6	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.999999863163562	WITHOUT_CLASSIFICATION	1.3683643790892315E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999989619124585	WITHOUT_CLASSIFICATION	1.0380875415323215E-6	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999998949252892	WITHOUT_CLASSIFICATION	1.050747108115023E-7	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9999986322475475	WITHOUT_CLASSIFICATION	1.3677524525621255E-6	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999978009313022	WITHOUT_CLASSIFICATION	2.199068697787678E-6	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9999915459704666	WITHOUT_CLASSIFICATION	8.454029533421492E-6	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9999838342429783	WITHOUT_CLASSIFICATION	1.6165757021722014E-5	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999907881367908	WITHOUT_CLASSIFICATION	9.211863209257107E-6	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999999823473269	WITHOUT_CLASSIFICATION	1.765267318059125E-8	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.999995801266792	WITHOUT_CLASSIFICATION	4.198733207954061E-6	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999991594349676	WITHOUT_CLASSIFICATION	8.405650323042014E-7	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.999999948073584	WITHOUT_CLASSIFICATION	5.19264159884471E-8	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9998531485789324	WITHOUT_CLASSIFICATION	1.4685142106768049E-4	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9999968646244276	WITHOUT_CLASSIFICATION	3.1353755723339952E-6	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999998480143019	WITHOUT_CLASSIFICATION	1.5198569804714163E-7	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999923411417925	WITHOUT_CLASSIFICATION	7.65885820758116E-6	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999992102691487	WITHOUT_CLASSIFICATION	7.897308512324007E-7	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9999997358796114	WITHOUT_CLASSIFICATION	2.641203885085145E-7	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999939864506985	WITHOUT_CLASSIFICATION	6.013549301563913E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999939864506985	WITHOUT_CLASSIFICATION	6.013549301563913E-6	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999979435603649	WITHOUT_CLASSIFICATION	2.0564396351344942E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999939864506985	WITHOUT_CLASSIFICATION	6.013549301563913E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999939864506985	WITHOUT_CLASSIFICATION	6.013549301563913E-6	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.999867218485989	WITHOUT_CLASSIFICATION	1.327815140109011E-4	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999993962380558	WITHOUT_CLASSIFICATION	6.037619441957154E-7	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999998392476862	WITHOUT_CLASSIFICATION	1.6075231378431932E-7	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999996300544653	WITHOUT_CLASSIFICATION	3.6994553465581357E-7	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.999997500483286	WITHOUT_CLASSIFICATION	2.499516714180674E-6	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9999946630798163	WITHOUT_CLASSIFICATION	5.336920183641126E-6	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9999903328292933	WITHOUT_CLASSIFICATION	9.667170706718318E-6	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999868976755195	WITHOUT_CLASSIFICATION	1.3102324480611308E-5	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999888202838894	WITHOUT_CLASSIFICATION	1.117971611059082E-5	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9999825111660154	WITHOUT_CLASSIFICATION	1.7488833984622643E-5	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9999965817017079	WITHOUT_CLASSIFICATION	3.4182982920223863E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999922659730797	WITHOUT_CLASSIFICATION	7.73402692043654E-6	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999985040762562	WITHOUT_CLASSIFICATION	1.4959237437604723E-6	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.999988319691083	WITHOUT_CLASSIFICATION	1.168030891706844E-5	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999971141107891	WITHOUT_CLASSIFICATION	2.8858892108827415E-6	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999899052860028	WITHOUT_CLASSIFICATION	1.0094713997220668E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999969870464301	WITHOUT_CLASSIFICATION	3.0129535697475996E-6	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999884082689212	WITHOUT_CLASSIFICATION	1.159173107880441E-5	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.999919409382517	WITHOUT_CLASSIFICATION	8.059061748306414E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9999863190458876	WITHOUT_CLASSIFICATION	1.3680954112474246E-5	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999984174200903	WITHOUT_CLASSIFICATION	1.5825799097483409E-6	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999725135287968	WITHOUT_CLASSIFICATION	2.7486471203227903E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999969870464301	WITHOUT_CLASSIFICATION	3.0129535697475996E-6	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999978372016435	WITHOUT_CLASSIFICATION	2.1627983564989967E-6	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999939013822218	WITHOUT_CLASSIFICATION	6.098617778268045E-6	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999996835561976	WITHOUT_CLASSIFICATION	3.1644380237176585E-7	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999999125221803	WITHOUT_CLASSIFICATION	8.747781959205774E-8	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9999555586900233	WITHOUT_CLASSIFICATION	4.444130997674897E-5	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999994775561204	WITHOUT_CLASSIFICATION	5.224438796774976E-7	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.999999277714778	WITHOUT_CLASSIFICATION	7.222852219713568E-7	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999991615799151	WITHOUT_CLASSIFICATION	8.384200850196365E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999954699008232	WITHOUT_CLASSIFICATION	4.530099176770862E-6	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999972194892319	WITHOUT_CLASSIFICATION	2.7805107681353508E-6	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9999968825984303	WITHOUT_CLASSIFICATION	3.117401569703876E-6	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999999050746159	WITHOUT_CLASSIFICATION	9.492538413389477E-8	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999996080523632	WITHOUT_CLASSIFICATION	3.9194763678952244E-7	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999995378522879	WITHOUT_CLASSIFICATION	4.621477120486684E-7	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9999971941256534	WITHOUT_CLASSIFICATION	2.8058743466622807E-6	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999999557746062	WITHOUT_CLASSIFICATION	4.4225393704574106E-8	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999996222250617	WITHOUT_CLASSIFICATION	3.777749384379512E-7	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999993603318177	WITHOUT_CLASSIFICATION	6.396681823766601E-7	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999999674859457	WITHOUT_CLASSIFICATION	3.2514054392763017E-8	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.999999913581798	WITHOUT_CLASSIFICATION	8.641820197740343E-8	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9999984260034228	WITHOUT_CLASSIFICATION	1.573996577190415E-6	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999993503459622	WITHOUT_CLASSIFICATION	6.496540377554162E-7	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999998894918628	WITHOUT_CLASSIFICATION	1.1050813728766036E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999954699008232	WITHOUT_CLASSIFICATION	4.530099176770862E-6	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999911891531086	WITHOUT_CLASSIFICATION	8.810846891450746E-6	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9999937297470414	WITHOUT_CLASSIFICATION	6.270252958594754E-6	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9999932274311176	WITHOUT_CLASSIFICATION	6.772568882348409E-6	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999996675368282	WITHOUT_CLASSIFICATION	3.324631718226093E-7	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994594437065	WITHOUT_CLASSIFICATION	5.405562933925399E-7	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.999997627480404	WITHOUT_CLASSIFICATION	2.3725195960954726E-6	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9999971413915595	WITHOUT_CLASSIFICATION	2.8586084405642876E-6	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999892129246006	WITHOUT_CLASSIFICATION	1.0787075399236557E-5	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.9999979749912722	WITHOUT_CLASSIFICATION	2.025008727811698E-6	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9999746639491778	WITHOUT_CLASSIFICATION	2.5336050822268122E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999901655800187	WITHOUT_CLASSIFICATION	9.83441998136182E-6	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999999969611905	WITHOUT_CLASSIFICATION	3.0388095580791442E-9	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999978205129427	WITHOUT_CLASSIFICATION	2.179487057358119E-6	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999995202428358	WITHOUT_CLASSIFICATION	4.797571641287775E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999811486193132	WITHOUT_CLASSIFICATION	1.885138068683187E-5	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999669585061428	WITHOUT_CLASSIFICATION	3.3041493857143884E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999969663436323	WITHOUT_CLASSIFICATION	3.033656367620485E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999901655800187	WITHOUT_CLASSIFICATION	9.83441998136182E-6	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999998360747114	WITHOUT_CLASSIFICATION	1.639252885252328E-7	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.999998639982046	WITHOUT_CLASSIFICATION	1.360017954137135E-6	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999992054413371	WITHOUT_CLASSIFICATION	7.945586629152548E-7	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999942038753916	WITHOUT_CLASSIFICATION	5.796124608380949E-6	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999992682975186	WITHOUT_CLASSIFICATION	7.31702481502863E-7	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999999510786416	WITHOUT_CLASSIFICATION	4.8921358393040136E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999811486193132	WITHOUT_CLASSIFICATION	1.885138068683187E-5	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999999500096526	WITHOUT_CLASSIFICATION	4.999034737197399E-8	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994416082791	WITHOUT_CLASSIFICATION	5.583917208762965E-7	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998719247679	WITHOUT_CLASSIFICATION	1.280752320217319E-7	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990509139729	WITHOUT_CLASSIFICATION	9.490860272399509E-7	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991508207929	WITHOUT_CLASSIFICATION	8.491792071115112E-7	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996793900414	WITHOUT_CLASSIFICATION	3.2060995853889535E-7	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.999999180076054	WITHOUT_CLASSIFICATION	8.199239459355477E-7	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.999999180076054	WITHOUT_CLASSIFICATION	8.199239459355477E-7	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999987559517172	WITHOUT_CLASSIFICATION	1.2440482828398127E-6	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.999996969209769	WITHOUT_CLASSIFICATION	3.030790230919674E-6	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999983097531336	WITHOUT_CLASSIFICATION	1.6902468664352357E-6	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9999993890318026	WITHOUT_CLASSIFICATION	6.109681972335026E-7	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9999997911517691	WITHOUT_CLASSIFICATION	2.0884823097551316E-7	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991888369003	WITHOUT_CLASSIFICATION	8.111630997242722E-7	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99998635004484	WITHOUT_CLASSIFICATION	1.3649955160068808E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997405046052	WITHOUT_CLASSIFICATION	2.594953948634403E-7	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999986814805236	WITHOUT_CLASSIFICATION	1.3185194763437784E-6	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986910580819	WITHOUT_CLASSIFICATION	1.3089419181137115E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991888369003	WITHOUT_CLASSIFICATION	8.111630997242722E-7	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99998635004484	WITHOUT_CLASSIFICATION	1.3649955160068808E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997405046052	WITHOUT_CLASSIFICATION	2.594953948634403E-7	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999965790498767	WITHOUT_CLASSIFICATION	3.4209501232780474E-6	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9999783981889047	WITHOUT_CLASSIFICATION	2.1601811095297594E-5	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999998989731924	WITHOUT_CLASSIFICATION	1.0102680748976435E-7	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999990981774385	WITHOUT_CLASSIFICATION	9.018225614757956E-7	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999999676321257	WITHOUT_CLASSIFICATION	3.236787417023607E-8	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999999450059326	WITHOUT_CLASSIFICATION	5.499406736631536E-8	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9999883633812259	WITHOUT_CLASSIFICATION	1.163661877404734E-5	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.9999959887324803	WITHOUT_CLASSIFICATION	4.011267519639711E-6	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9999678854225378	WITHOUT_CLASSIFICATION	3.2114577462191134E-5	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999993624306057	WITHOUT_CLASSIFICATION	6.375693943988207E-7	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999997698472508	WITHOUT_CLASSIFICATION	2.3015274928912443E-7	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999984762973325	WITHOUT_CLASSIFICATION	1.5237026675325073E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9999688093058978	WITHOUT_CLASSIFICATION	3.119069410220432E-5	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999986166173039	WITHOUT_CLASSIFICATION	1.3833826961060747E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999997237097693	WITHOUT_CLASSIFICATION	2.7629023068881834E-7	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999935137445989	WITHOUT_CLASSIFICATION	6.48625540103203E-6	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9998909297638076	WITHOUT_CLASSIFICATION	1.090702361924504E-4	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999719304206888	WITHOUT_CLASSIFICATION	2.806957931124544E-5	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999998799390074	WITHOUT_CLASSIFICATION	1.2006099260508807E-7	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.999997577482585	WITHOUT_CLASSIFICATION	2.4225174150707017E-6	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999995667574791	WITHOUT_CLASSIFICATION	4.33242520762835E-7	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.999999893399101	WITHOUT_CLASSIFICATION	1.0660089893574807E-7	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999968094902189	WITHOUT_CLASSIFICATION	3.1905097811853867E-6	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999999441941796	WITHOUT_CLASSIFICATION	5.580582042460391E-8	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999999956872121	WITHOUT_CLASSIFICATION	4.312787858174297E-9	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9998104322823119	WITHOUT_CLASSIFICATION	1.8956771768802137E-4	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990168498833	WITHOUT_CLASSIFICATION	9.831501166836188E-7	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984292706647	WITHOUT_CLASSIFICATION	1.5707293353656957E-6	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999345111842429	WITHOUT_CLASSIFICATION	6.54888157570552E-5	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999975300323541	WITHOUT_CLASSIFICATION	2.469967645917284E-6	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971490361658	WITHOUT_CLASSIFICATION	2.850963834172859E-6	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999959028503485	WITHOUT_CLASSIFICATION	4.097149651653932E-6	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999959028503485	WITHOUT_CLASSIFICATION	4.097149651653932E-6	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999995620468508	WITHOUT_CLASSIFICATION	4.3795314913477894E-7	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999999899787392	WITHOUT_CLASSIFICATION	1.0021260891298905E-8	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999997394383253	WITHOUT_CLASSIFICATION	2.6056167459839525E-7	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998450466033507	WITHOUT_CLASSIFICATION	1.549533966493472E-4	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999989593310261	WITHOUT_CLASSIFICATION	1.0406689738848096E-6	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.999998400364893	WITHOUT_CLASSIFICATION	1.5996351070178903E-6	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9999670277475985	WITHOUT_CLASSIFICATION	3.297225240140563E-5	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999993026438616	WITHOUT_CLASSIFICATION	6.973561383722474E-7	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999973135850965	WITHOUT_CLASSIFICATION	2.686414903459431E-6	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992387204457	WITHOUT_CLASSIFICATION	7.612795542554289E-7	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995563930588	WITHOUT_CLASSIFICATION	4.436069411697224E-7	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995251290746	WITHOUT_CLASSIFICATION	4.7487092543088406E-7	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994008614429	WITHOUT_CLASSIFICATION	5.991385571677915E-7	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997147908593	WITHOUT_CLASSIFICATION	2.8520914068176496E-7	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994247800297	WITHOUT_CLASSIFICATION	5.752199703387319E-7	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990319752621	WITHOUT_CLASSIFICATION	9.680247379247655E-7	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998350873952	WITHOUT_CLASSIFICATION	1.649126049007591E-7	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998697686234	WITHOUT_CLASSIFICATION	1.3023137650763768E-7	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995524229313	WITHOUT_CLASSIFICATION	4.475770686747079E-7	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999366011514	WITHOUT_CLASSIFICATION	6.339884860722997E-7	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999993917084741	WITHOUT_CLASSIFICATION	6.082915258901149E-7	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9999938504318716	WITHOUT_CLASSIFICATION	6.14956812848829E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999995675331802	WITHOUT_CLASSIFICATION	4.3246681983397256E-7	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999990218773599	WITHOUT_CLASSIFICATION	9.781226401490636E-7	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999963677574588	WITHOUT_CLASSIFICATION	3.632242541228787E-6	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999996789136907	WITHOUT_CLASSIFICATION	3.2108630934277224E-7	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999998668967839	WITHOUT_CLASSIFICATION	1.3310321619083802E-7	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9999998341704588	WITHOUT_CLASSIFICATION	1.6582954121166583E-7	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999995675331802	WITHOUT_CLASSIFICATION	4.3246681983397256E-7	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999995675331802	WITHOUT_CLASSIFICATION	4.3246681983397256E-7	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9999953701673714	WITHOUT_CLASSIFICATION	4.629832628643034E-6	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999999757864625	WITHOUT_CLASSIFICATION	2.4213537459329356E-8	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999994161572752	WITHOUT_CLASSIFICATION	5.838427247188124E-7	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.999999091190753	WITHOUT_CLASSIFICATION	9.088092469736703E-7	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999980556132588	WITHOUT_CLASSIFICATION	1.9443867410549462E-6	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.999997577482585	WITHOUT_CLASSIFICATION	2.4225174150707017E-6	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999843916702579	WITHOUT_CLASSIFICATION	1.5608329742160724E-5	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999997293630692	WITHOUT_CLASSIFICATION	2.706369307640109E-7	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999999683947177	WITHOUT_CLASSIFICATION	3.1605282392235336E-8	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998431704913	WITHOUT_CLASSIFICATION	1.5682950878280802E-7	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999998815735892	WITHOUT_CLASSIFICATION	1.1842641067928991E-7	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999937760812256	WITHOUT_CLASSIFICATION	6.223918774281877E-6	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999891028865785	WITHOUT_CLASSIFICATION	1.0897113421589043E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999891028865785	WITHOUT_CLASSIFICATION	1.0897113421589043E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.999993706392406	WITHOUT_CLASSIFICATION	6.293607593944338E-6	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.999993706392406	WITHOUT_CLASSIFICATION	6.293607593944338E-6	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999633872923	WITHOUT_CLASSIFICATION	3.6612707691900935E-7	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980949215663	WITHOUT_CLASSIFICATION	1.9050784335585913E-6	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.999996627853637	WITHOUT_CLASSIFICATION	3.3721463629791105E-6	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996103578164	WITHOUT_CLASSIFICATION	3.896421836798853E-7	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9999999747503967	WITHOUT_CLASSIFICATION	2.5249603190774832E-8	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999997431303993	WITHOUT_CLASSIFICATION	2.5686960068241747E-7	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999973500430105	WITHOUT_CLASSIFICATION	2.6499569894000407E-6	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991760092563	WITHOUT_CLASSIFICATION	8.2399074372972E-7	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9999966308141125	WITHOUT_CLASSIFICATION	3.3691858875474497E-6	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999997776846128	WITHOUT_CLASSIFICATION	2.223153872612127E-7	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999952281742636	WITHOUT_CLASSIFICATION	4.77182573638556E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224061356	WITHOUT_CLASSIFICATION	1.1917759386434587E-4	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999994196011092	WITHOUT_CLASSIFICATION	5.803988907649135E-7	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999979844346232	WITHOUT_CLASSIFICATION	2.0155653767454424E-6	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.99999913256708	WITHOUT_CLASSIFICATION	8.674329200116852E-7	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.9999831886649775	WITHOUT_CLASSIFICATION	1.6811335022563533E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999974054816084	WITHOUT_CLASSIFICATION	2.5945183916203515E-6	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999974054816084	WITHOUT_CLASSIFICATION	2.5945183916203515E-6	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999999791741774	WITHOUT_CLASSIFICATION	2.0825822648873348E-8	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9999954841413364	WITHOUT_CLASSIFICATION	4.515858663573631E-6	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999892956611861	WITHOUT_CLASSIFICATION	1.0704338813908972E-5	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999894028963384	WITHOUT_CLASSIFICATION	1.0597103661641603E-5	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999067051198	WITHOUT_CLASSIFICATION	9.329488023306535E-8	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998234343302	WITHOUT_CLASSIFICATION	1.7656566969532038E-7	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999995014325139	WITHOUT_CLASSIFICATION	4.985674859840718E-7	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995248344551	WITHOUT_CLASSIFICATION	4.7516554483502887E-7	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999997276383439	WITHOUT_CLASSIFICATION	2.723616561276376E-7	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999996359789417	WITHOUT_CLASSIFICATION	3.6402105831186385E-7	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999998130532479	WITHOUT_CLASSIFICATION	1.869467520742308E-7	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999990380690178	WITHOUT_CLASSIFICATION	9.619309822287448E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972789616478	WITHOUT_CLASSIFICATION	2.7210383522988117E-6	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999996950521474	WITHOUT_CLASSIFICATION	3.049478527156382E-7	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999999156661915	WITHOUT_CLASSIFICATION	8.433380854140824E-8	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999984278011814	WITHOUT_CLASSIFICATION	1.5721988186451574E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999998937367286	WITHOUT_CLASSIFICATION	1.062632713634819E-7	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999970829525792	WITHOUT_CLASSIFICATION	2.9170474209202715E-6	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999935613907056	WITHOUT_CLASSIFICATION	6.43860929430842E-6	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999978412262707	WITHOUT_CLASSIFICATION	2.158773729236364E-6	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.99999980379658	WITHOUT_CLASSIFICATION	1.9620342005059046E-7	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999999709123045	WITHOUT_CLASSIFICATION	2.9087695468541202E-8	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999990067166014	WITHOUT_CLASSIFICATION	9.932833986352874E-7	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999992978188675	WITHOUT_CLASSIFICATION	7.021811324820631E-7	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999994236335097	WITHOUT_CLASSIFICATION	5.763664903856853E-7	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999987176992581	WITHOUT_CLASSIFICATION	1.2823007419928224E-6	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999997936341427	WITHOUT_CLASSIFICATION	2.0636585726505121E-7	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9999942880771778	WITHOUT_CLASSIFICATION	5.711922822179073E-6	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999967773793277	WITHOUT_CLASSIFICATION	3.2226206722512375E-6	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999945047911417	WITHOUT_CLASSIFICATION	5.495208858260943E-6	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999999911396822	WITHOUT_CLASSIFICATION	8.860317718962995E-9	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999965479391796	WITHOUT_CLASSIFICATION	3.4520608205622974E-6	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999687324305429	WITHOUT_CLASSIFICATION	3.1267569457106026E-5	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9995395985194978	WITHOUT_CLASSIFICATION	4.604014805022217E-4	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999994737041452	WITHOUT_CLASSIFICATION	5.262958546529719E-7	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9999949780358572	WITHOUT_CLASSIFICATION	5.021964142667894E-6	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999999809900105	WITHOUT_CLASSIFICATION	1.9009989525545396E-8	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999996526066417	WITHOUT_CLASSIFICATION	3.4739335824027714E-7	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999986905506211	WITHOUT_CLASSIFICATION	1.3094493789331214E-6	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.9999989394566853	WITHOUT_CLASSIFICATION	1.0605433146801307E-6	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999999937273517	WITHOUT_CLASSIFICATION	6.2726482899657786E-9	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999999350024161	WITHOUT_CLASSIFICATION	6.499758380048065E-8	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999998899099978	WITHOUT_CLASSIFICATION	1.100900022042155E-7	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.999999904490234	WITHOUT_CLASSIFICATION	9.55097659820125E-8	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999995910392246	WITHOUT_CLASSIFICATION	4.089607752586561E-7	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999840584157674	WITHOUT_CLASSIFICATION	1.5941584232674346E-5	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999969839609688	WITHOUT_CLASSIFICATION	3.016039031150415E-6	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999745163270233	WITHOUT_CLASSIFICATION	2.5483672976689932E-5	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999960396453843	WITHOUT_CLASSIFICATION	3.9603546157721455E-6	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9999943994340743	WITHOUT_CLASSIFICATION	5.60056592561381E-6	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999983372411398	WITHOUT_CLASSIFICATION	1.662758860225519E-6	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9999560325741972	WITHOUT_CLASSIFICATION	4.3967425802705216E-5	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999924133561167	WITHOUT_CLASSIFICATION	7.586643883422501E-6	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999945854661878	WITHOUT_CLASSIFICATION	5.41453381218347E-6	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999597460622152	WITHOUT_CLASSIFICATION	4.025393778485919E-5	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999990653668754	WITHOUT_CLASSIFICATION	9.346331245491999E-7	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9999822762719727	WITHOUT_CLASSIFICATION	1.772372802730211E-5	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9999228943304757	WITHOUT_CLASSIFICATION	7.710566952437004E-5	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999985685198646	WITHOUT_CLASSIFICATION	1.4314801354875602E-6	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9999649497214448	WITHOUT_CLASSIFICATION	3.5050278555214144E-5	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.999999529257848	WITHOUT_CLASSIFICATION	4.7074215195465125E-7	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.999999300675621	WITHOUT_CLASSIFICATION	6.993243788814185E-7	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999817082791	WITHOUT_CLASSIFICATION	1.8291720899673765E-8	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999972460033487	WITHOUT_CLASSIFICATION	2.753996651235886E-6	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999996463297307	WITHOUT_CLASSIFICATION	3.536702692816978E-7	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999997737145242	WITHOUT_CLASSIFICATION	2.2628547578738975E-7	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999999987847137	WITHOUT_CLASSIFICATION	1.2152863108554435E-9	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.999998878693074	WITHOUT_CLASSIFICATION	1.121306925917786E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999468348000631	WITHOUT_CLASSIFICATION	5.316519993684838E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999468348000631	WITHOUT_CLASSIFICATION	5.316519993684838E-5	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999899231519072	WITHOUT_CLASSIFICATION	1.007684809285201E-5	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9999997044356631	WITHOUT_CLASSIFICATION	2.9556433681779415E-7	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999997824459476	WITHOUT_CLASSIFICATION	2.1755405242776413E-7	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999962660023898	WITHOUT_CLASSIFICATION	3.7339976101276218E-6	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999993506143738	WITHOUT_CLASSIFICATION	6.493856261935097E-7	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999984244803177	WITHOUT_CLASSIFICATION	1.5755196823045007E-6	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.999999129756027	WITHOUT_CLASSIFICATION	8.702439729054853E-7	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999999923545679	WITHOUT_CLASSIFICATION	7.64543196848936E-9	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9999950600631141	WITHOUT_CLASSIFICATION	4.939936885792315E-6	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999999699288673	WITHOUT_CLASSIFICATION	3.0071132628991944E-8	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999953317927575	WITHOUT_CLASSIFICATION	4.668207242527317E-6	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999978482088757	WITHOUT_CLASSIFICATION	2.151791124350047E-6	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9999956595596171	WITHOUT_CLASSIFICATION	4.340440382882954E-6	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.999999632751661	WITHOUT_CLASSIFICATION	3.6724833898494205E-7	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999991468247548	WITHOUT_CLASSIFICATION	8.531752453515872E-7	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999927597755793	WITHOUT_CLASSIFICATION	7.2402244206095594E-6	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999883692381137	WITHOUT_CLASSIFICATION	1.1630761886300082E-5	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999994890758783	WITHOUT_CLASSIFICATION	5.109241217303152E-7	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999998822446649	WITHOUT_CLASSIFICATION	1.1775533514966149E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999999236437275	WITHOUT_CLASSIFICATION	7.635627253370905E-8	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999973168521694	WITHOUT_CLASSIFICATION	2.6831478306477014E-6	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999708096638397	WITHOUT_CLASSIFICATION	2.9190336160441965E-5	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9996583364038173	WITHOUT_CLASSIFICATION	3.416635961827046E-4	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9999993736305848	WITHOUT_CLASSIFICATION	6.263694152596729E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999891464518982	WITHOUT_CLASSIFICATION	1.0853548101807097E-5	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9999983662695091	WITHOUT_CLASSIFICATION	1.6337304910026477E-6	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999964608604913	WITHOUT_CLASSIFICATION	3.539139508703895E-6	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999978753798965	WITHOUT_CLASSIFICATION	2.1246201035220757E-6	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999999094988686	WITHOUT_CLASSIFICATION	9.050113132743284E-8	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999998947462703	WITHOUT_CLASSIFICATION	1.0525372973767993E-7	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999997220048097	WITHOUT_CLASSIFICATION	2.7799519033732743E-7	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999994765464483	WITHOUT_CLASSIFICATION	5.234535517759849E-7	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999993300051215	WITHOUT_CLASSIFICATION	6.699948783634515E-7	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.999995532131817	WITHOUT_CLASSIFICATION	4.467868182906786E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999961253103912	WITHOUT_CLASSIFICATION	3.87468960878117E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999961253103912	WITHOUT_CLASSIFICATION	3.87468960878117E-6	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999959284179485	WITHOUT_CLASSIFICATION	4.0715820515131236E-6	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9999974493762861	WITHOUT_CLASSIFICATION	2.550623713889774E-6	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999995845598182	WITHOUT_CLASSIFICATION	4.154401817541399E-7	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.999997266770153	WITHOUT_CLASSIFICATION	2.733229846927263E-6	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999994547830728	WITHOUT_CLASSIFICATION	5.452169271737606E-7	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999975682971365	WITHOUT_CLASSIFICATION	2.4317028634737462E-6	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.999998810318565	WITHOUT_CLASSIFICATION	1.1896814349576567E-6	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999999835787179	WITHOUT_CLASSIFICATION	1.6421282137617856E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.999993369192318	WITHOUT_CLASSIFICATION	6.6308076819803436E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999999722653764	WITHOUT_CLASSIFICATION	2.7734623609334186E-8	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999999833590714	WITHOUT_CLASSIFICATION	1.6640928686751828E-8	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9999997964133842	WITHOUT_CLASSIFICATION	2.035866157842384E-7	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.999999196143726	WITHOUT_CLASSIFICATION	8.038562739605731E-7	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.999999346619046	WITHOUT_CLASSIFICATION	6.533809539377789E-7	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999999181353009	WITHOUT_CLASSIFICATION	8.186469913985352E-8	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999903941086327	WITHOUT_CLASSIFICATION	9.605891367362805E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999903941086327	WITHOUT_CLASSIFICATION	9.605891367362805E-6	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999991630476037	WITHOUT_CLASSIFICATION	8.369523961872548E-7	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999985625320424	WITHOUT_CLASSIFICATION	1.437467957477651E-6	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999998855818508	WITHOUT_CLASSIFICATION	1.1441814924189588E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999999247769886	WITHOUT_CLASSIFICATION	7.52230113515032E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224061356	WITHOUT_CLASSIFICATION	1.1917759386434587E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999267748081347	WITHOUT_CLASSIFICATION	7.322519186518245E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999995103759927	WITHOUT_CLASSIFICATION	4.896240074290458E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999971836836364	WITHOUT_CLASSIFICATION	2.8163163634588308E-6	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999971836836364	WITHOUT_CLASSIFICATION	2.8163163634588308E-6	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999995486049801	WITHOUT_CLASSIFICATION	4.5139501993943213E-7	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999999925828831	WITHOUT_CLASSIFICATION	7.417116944421343E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999991886608133	WITHOUT_CLASSIFICATION	8.113391866102611E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999998965643406	WITHOUT_CLASSIFICATION	1.0343565938980472E-7	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9999978411678665	WITHOUT_CLASSIFICATION	2.1588321335550873E-6	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999610211593207	WITHOUT_CLASSIFICATION	3.8978840679197465E-5	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.999999822863083	WITHOUT_CLASSIFICATION	1.7713691709521317E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999997454075635	WITHOUT_CLASSIFICATION	2.5459243644607185E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122184	WITHOUT_CLASSIFICATION	4.2008778151132414E-7	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9999991571706126	WITHOUT_CLASSIFICATION	8.428293874495935E-7	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999996081942197	WITHOUT_CLASSIFICATION	3.9180578025021777E-7	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999960147070459	WITHOUT_CLASSIFICATION	3.985292954123459E-6	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999999185925789	WITHOUT_CLASSIFICATION	8.140742118881722E-8	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.999998690532528	WITHOUT_CLASSIFICATION	1.3094674719657511E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999927538712383	WITHOUT_CLASSIFICATION	7.246128761740444E-6	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999993221418088	WITHOUT_CLASSIFICATION	6.778581912524728E-7	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999993613663491	WITHOUT_CLASSIFICATION	6.386336508903502E-7	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999897930160269	WITHOUT_CLASSIFICATION	1.020698397310489E-5	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999993307082714	WITHOUT_CLASSIFICATION	6.692917286486571E-7	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999995507849526	WITHOUT_CLASSIFICATION	4.4921504743804603E-7	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999994534306339	WITHOUT_CLASSIFICATION	5.465693660580282E-7	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.999997903576343	WITHOUT_CLASSIFICATION	2.0964236570200566E-6	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999998131415906	WITHOUT_CLASSIFICATION	1.8685840944595355E-7	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999997855168609	WITHOUT_CLASSIFICATION	2.144831390039601E-7	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999995718798509	WITHOUT_CLASSIFICATION	4.2812014911843576E-7	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999985164057811	WITHOUT_CLASSIFICATION	1.4835942188953683E-6	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999997394261949	WITHOUT_CLASSIFICATION	2.6057380512499596E-7	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999996355376517	WITHOUT_CLASSIFICATION	3.6446234826903044E-7	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999999197902304	WITHOUT_CLASSIFICATION	8.020976959590321E-8	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999440663624	WITHOUT_CLASSIFICATION	5.593363771662484E-8	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9999832614718321	WITHOUT_CLASSIFICATION	1.673852816791841E-5	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9999918998930193	WITHOUT_CLASSIFICATION	8.100106980728674E-6	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999999139581464	WITHOUT_CLASSIFICATION	8.60418535656167E-8	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999985051797112	WITHOUT_CLASSIFICATION	1.4948202887851246E-6	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999978348816188	WITHOUT_CLASSIFICATION	2.1651183813210665E-6	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999916192743371	WITHOUT_CLASSIFICATION	8.380725662887154E-6	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.9999939369489114	WITHOUT_CLASSIFICATION	6.06305108860489E-6	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.9999992965241518	WITHOUT_CLASSIFICATION	7.03475848314491E-7	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999979979947248	WITHOUT_CLASSIFICATION	2.0020052751527635E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999955935372952	WITHOUT_CLASSIFICATION	4.40646270490363E-6	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999998454805029	WITHOUT_CLASSIFICATION	1.545194971153257E-7	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999990417435576	WITHOUT_CLASSIFICATION	9.58256442415851E-7	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.999992661925491	WITHOUT_CLASSIFICATION	7.338074508988968E-6	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999994526898733	WITHOUT_CLASSIFICATION	5.473101266347038E-7	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999998830454658	WITHOUT_CLASSIFICATION	1.1695453424580873E-7	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999996133707063	WITHOUT_CLASSIFICATION	3.866292937092057E-7	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999979979947248	WITHOUT_CLASSIFICATION	2.0020052751527635E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999955935372952	WITHOUT_CLASSIFICATION	4.40646270490363E-6	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999999319456202	WITHOUT_CLASSIFICATION	6.80543798601886E-8	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9999469972038102	WITHOUT_CLASSIFICATION	5.300279618974671E-5	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.999997052249739	WITHOUT_CLASSIFICATION	2.947750261013189E-6	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999999551003865	WITHOUT_CLASSIFICATION	4.48996133607283E-8	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999995012371945	WITHOUT_CLASSIFICATION	4.987628054390016E-7	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999999435450022	WITHOUT_CLASSIFICATION	5.645499786832381E-8	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999938767028783	WITHOUT_CLASSIFICATION	6.123297121731648E-6	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9999920943195759	WITHOUT_CLASSIFICATION	7.905680424039669E-6	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999923142098577	WITHOUT_CLASSIFICATION	7.685790142316683E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.999979346924389	WITHOUT_CLASSIFICATION	2.065307561108615E-5	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999998302435666	WITHOUT_CLASSIFICATION	1.6975643335983769E-7	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.999979346924389	WITHOUT_CLASSIFICATION	2.065307561108615E-5	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999999890623236	WITHOUT_CLASSIFICATION	1.0937676474422887E-8	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999946652647589	WITHOUT_CLASSIFICATION	5.3347352411489865E-6	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999999794339214	WITHOUT_CLASSIFICATION	2.0566078598300546E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991340021014	WITHOUT_CLASSIFICATION	8.659978985386232E-7	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999987522002846	WITHOUT_CLASSIFICATION	1.2477997154790239E-6	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9998613133871146	WITHOUT_CLASSIFICATION	1.3868661288548667E-4	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9998613133871146	WITHOUT_CLASSIFICATION	1.3868661288548667E-4	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999996559809605	WITHOUT_CLASSIFICATION	3.440190394004638E-7	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9999996997829014	WITHOUT_CLASSIFICATION	3.002170986900499E-7	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999996145115175	WITHOUT_CLASSIFICATION	3.854884824236876E-7	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999894349271964	WITHOUT_CLASSIFICATION	1.056507280367945E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9999760543848724	WITHOUT_CLASSIFICATION	2.3945615127621012E-5	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9999998615873537	WITHOUT_CLASSIFICATION	1.3841264632565285E-7	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999967494976361	WITHOUT_CLASSIFICATION	3.2505023638366325E-6	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999992997953734	WITHOUT_CLASSIFICATION	7.002046266649959E-7	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999929129238295	WITHOUT_CLASSIFICATION	7.08707617043085E-6	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9999663158710942	WITHOUT_CLASSIFICATION	3.368412890584914E-5	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.9999808053961385	WITHOUT_CLASSIFICATION	1.9194603861506395E-5	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.999980413632058	WITHOUT_CLASSIFICATION	1.958636794202455E-5	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.999936025460301	WITHOUT_CLASSIFICATION	6.397453969899466E-5	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.999999092677059	WITHOUT_CLASSIFICATION	9.073229410989654E-7	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9999964449126363	WITHOUT_CLASSIFICATION	3.555087363751628E-6	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999981856324414	WITHOUT_CLASSIFICATION	1.8143675586587068E-6	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999996851966086	WITHOUT_CLASSIFICATION	3.14803391374499E-7	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.999998804467633	WITHOUT_CLASSIFICATION	1.1955323669523773E-6	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999998574302602	WITHOUT_CLASSIFICATION	1.4256973984605364E-7	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9999187252837859	WITHOUT_CLASSIFICATION	8.127471621411973E-5	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999982922196782	WITHOUT_CLASSIFICATION	1.7077803218417266E-6	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999883652417414	WITHOUT_CLASSIFICATION	1.1634758258671464E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999992875404755	WITHOUT_CLASSIFICATION	7.124595243723458E-7	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.999998109418223	WITHOUT_CLASSIFICATION	1.8905817769275029E-6	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999988418353005	WITHOUT_CLASSIFICATION	1.1581646994176727E-6	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9999575681056008	WITHOUT_CLASSIFICATION	4.243189439927844E-5	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9999996210498019	WITHOUT_CLASSIFICATION	3.7895019813157303E-7	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9999963534032168	WITHOUT_CLASSIFICATION	3.6465967831089918E-6	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.999998728380532	WITHOUT_CLASSIFICATION	1.2716194679911588E-6	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999984372346353	WITHOUT_CLASSIFICATION	1.5627653646268893E-6	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.9999982916847768	WITHOUT_CLASSIFICATION	1.7083152231540237E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999960735086373	WITHOUT_CLASSIFICATION	3.926491362652803E-6	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999967494976361	WITHOUT_CLASSIFICATION	3.2505023638366325E-6	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999998345753875	WITHOUT_CLASSIFICATION	1.6542461242896907E-7	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.9999781995050114	WITHOUT_CLASSIFICATION	2.18004949885272E-5	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9994833183247102	WITHOUT_CLASSIFICATION	5.166816752897675E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.999989633309868	WITHOUT_CLASSIFICATION	1.0366690132025804E-5	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999997022381693	WITHOUT_CLASSIFICATION	2.977618307835019E-7	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999891642819901	WITHOUT_CLASSIFICATION	1.0835718009841479E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999894349271964	WITHOUT_CLASSIFICATION	1.056507280367945E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999894349271964	WITHOUT_CLASSIFICATION	1.056507280367945E-5	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.999995449830233	WITHOUT_CLASSIFICATION	4.550169767059255E-6	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999987212814216	WITHOUT_CLASSIFICATION	1.2787185784379503E-6	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.9999894177552636	WITHOUT_CLASSIFICATION	1.0582244736378339E-5	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999984434493657	WITHOUT_CLASSIFICATION	1.5565506342997697E-6	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9999993324599921	WITHOUT_CLASSIFICATION	6.675400079961721E-7	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.999999799412379	WITHOUT_CLASSIFICATION	2.00587621011165E-7	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.99999926797837	WITHOUT_CLASSIFICATION	7.320216299309105E-7	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999998108248839	WITHOUT_CLASSIFICATION	1.8917511613000986E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999926475088684	WITHOUT_CLASSIFICATION	7.352491131601445E-6	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999997617131902	WITHOUT_CLASSIFICATION	2.3828680979388718E-7	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9999977218600481	WITHOUT_CLASSIFICATION	2.278139951947965E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998793615065337	WITHOUT_CLASSIFICATION	1.2063849346635592E-4	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9999854903547647	WITHOUT_CLASSIFICATION	1.450964523536512E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999997617131902	WITHOUT_CLASSIFICATION	2.3828680979388718E-7	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999931140019711	WITHOUT_CLASSIFICATION	6.8859980288544985E-6	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999998956197407	WITHOUT_CLASSIFICATION	1.0438025923167051E-7	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.999995843548274	WITHOUT_CLASSIFICATION	4.156451726069881E-6	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9947452382573156	WITHOUT_CLASSIFICATION	0.0052547617426843924	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998793615065337	WITHOUT_CLASSIFICATION	1.2063849346635592E-4	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999947144133655	WITHOUT_CLASSIFICATION	5.2855866344735205E-6	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.999998913007777	WITHOUT_CLASSIFICATION	1.0869922230363273E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.99999988601455	WITHOUT_CLASSIFICATION	1.1398545004788775E-7	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999998721409413	WITHOUT_CLASSIFICATION	1.2785905874990435E-7	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9998911830432547	WITHOUT_CLASSIFICATION	1.0881695674530426E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999990534305261	WITHOUT_CLASSIFICATION	9.465694739594697E-7	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999997763096503	WITHOUT_CLASSIFICATION	2.2369034983048635E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999923497717189	WITHOUT_CLASSIFICATION	7.650228281073968E-6	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999998539265654	WITHOUT_CLASSIFICATION	1.4607343456101615E-7	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999998050057554	WITHOUT_CLASSIFICATION	1.949942447322819E-7	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999994814375437	WITHOUT_CLASSIFICATION	5.185624562797295E-7	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9999469469420471	WITHOUT_CLASSIFICATION	5.3053057952780556E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999997617131902	WITHOUT_CLASSIFICATION	2.3828680979388718E-7	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999947144133655	WITHOUT_CLASSIFICATION	5.2855866344735205E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.99999988601455	WITHOUT_CLASSIFICATION	1.1398545004788775E-7	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999948772831608	WITHOUT_CLASSIFICATION	5.122716839154888E-6	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999998828262098	WITHOUT_CLASSIFICATION	1.171737901797188E-7	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999992785161512	WITHOUT_CLASSIFICATION	7.214838486742775E-7	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998793615065337	WITHOUT_CLASSIFICATION	1.2063849346635592E-4	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9999984009846015	WITHOUT_CLASSIFICATION	1.5990153984642368E-6	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999911587990306	WITHOUT_CLASSIFICATION	8.841200969439358E-6	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999983096945823	WITHOUT_CLASSIFICATION	1.6903054177065114E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999840169513723	WITHOUT_CLASSIFICATION	1.5983048627720322E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999923497717189	WITHOUT_CLASSIFICATION	7.650228281073968E-6	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999931140019711	WITHOUT_CLASSIFICATION	6.8859980288544985E-6	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.9999920354039631	WITHOUT_CLASSIFICATION	7.964596036930888E-6	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999966996436391	WITHOUT_CLASSIFICATION	3.3003563608862127E-6	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9999930179837152	WITHOUT_CLASSIFICATION	6.982016284840696E-6	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9999959023368745	WITHOUT_CLASSIFICATION	4.097663125456203E-6	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9999835305376418	WITHOUT_CLASSIFICATION	1.6469462358159105E-5	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.999963023113758	WITHOUT_CLASSIFICATION	3.697688624204444E-5	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9999876230940229	WITHOUT_CLASSIFICATION	1.237690597695886E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991340021014	WITHOUT_CLASSIFICATION	8.659978985386232E-7	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998990735446	WITHOUT_CLASSIFICATION	1.0092645547098503E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164882538	WITHOUT_CLASSIFICATION	2.3083511746245405E-5	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999982105454496	WITHOUT_CLASSIFICATION	1.7894545504978051E-6	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999245994207477	WITHOUT_CLASSIFICATION	7.540057925225229E-5	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999765475425365	WITHOUT_CLASSIFICATION	2.3452457463503163E-5	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999919801682307	WITHOUT_CLASSIFICATION	8.01983176940706E-6	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999997745149465	WITHOUT_CLASSIFICATION	2.2548505364126852E-7	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999987843541761	WITHOUT_CLASSIFICATION	1.2156458239933784E-6	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999996609635049	WITHOUT_CLASSIFICATION	3.3903649514810163E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999840169513723	WITHOUT_CLASSIFICATION	1.5983048627720322E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164882538	WITHOUT_CLASSIFICATION	2.3083511746245405E-5	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999923838688696	WITHOUT_CLASSIFICATION	7.616131130452065E-6	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9999943670486969	WITHOUT_CLASSIFICATION	5.632951303098807E-6	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9999549423494257	WITHOUT_CLASSIFICATION	4.505765057431972E-5	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999863040490012	WITHOUT_CLASSIFICATION	1.3695950998885005E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9999714650402058	WITHOUT_CLASSIFICATION	2.853495979412295E-5	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999997715432477	WITHOUT_CLASSIFICATION	2.2845675232014163E-7	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999980649121692	WITHOUT_CLASSIFICATION	1.935087830693263E-6	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9999929950827987	WITHOUT_CLASSIFICATION	7.004917201326325E-6	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999998881708229	WITHOUT_CLASSIFICATION	1.1182917716113091E-7	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.999997746953227	WITHOUT_CLASSIFICATION	2.2530467729959537E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999977132769186	WITHOUT_CLASSIFICATION	2.286723081506313E-6	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999990250730219	WITHOUT_CLASSIFICATION	9.749269781604018E-7	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.999999780168589	WITHOUT_CLASSIFICATION	2.1983141088133035E-7	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9999973646635909	WITHOUT_CLASSIFICATION	2.6353364091070334E-6	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9999927972461463	WITHOUT_CLASSIFICATION	7.202753853713683E-6	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999990125003334	WITHOUT_CLASSIFICATION	9.874996666085728E-7	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9999982012002024	WITHOUT_CLASSIFICATION	1.7987997975418085E-6	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.999980452783654	WITHOUT_CLASSIFICATION	1.9547216346031663E-5	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999993300594919	WITHOUT_CLASSIFICATION	6.699405081803987E-7	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9999842960516883	WITHOUT_CLASSIFICATION	1.5703948311785586E-5	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999946159462529	WITHOUT_CLASSIFICATION	5.384053747057377E-6	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.999999549582647	WITHOUT_CLASSIFICATION	4.5041735300400293E-7	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999998594688908	WITHOUT_CLASSIFICATION	1.4053110908574155E-7	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.999999749592237	WITHOUT_CLASSIFICATION	2.504077629394496E-7	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999998969966385	WITHOUT_CLASSIFICATION	1.0300336156281582E-7	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.9993379164471036	WITHOUT_CLASSIFICATION	6.620835528963958E-4	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999971502519426	WITHOUT_CLASSIFICATION	2.849748057431497E-6	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999914287576394	WITHOUT_CLASSIFICATION	8.57124236055844E-6	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999999235357366	WITHOUT_CLASSIFICATION	7.646426334382659E-8	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.9991937197243894	WITHOUT_CLASSIFICATION	8.062802756106448E-4	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999982508378146	WITHOUT_CLASSIFICATION	1.7491621854495848E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999939429182146	WITHOUT_CLASSIFICATION	6.057081785457425E-6	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999991458559657	WITHOUT_CLASSIFICATION	8.541440342936515E-7	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999998498440668	WITHOUT_CLASSIFICATION	1.501559332488056E-7	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999998987571542	WITHOUT_CLASSIFICATION	1.012428457052316E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999960003236623	WITHOUT_CLASSIFICATION	3.999676337610208E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999962242930467	WITHOUT_CLASSIFICATION	3.7757069533255586E-6	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999996494213845	WITHOUT_CLASSIFICATION	3.505786155003862E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999960003236623	WITHOUT_CLASSIFICATION	3.999676337610208E-6	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999998987571542	WITHOUT_CLASSIFICATION	1.012428457052316E-7	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999962242930467	WITHOUT_CLASSIFICATION	3.7757069533255586E-6	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.9999930990483561	WITHOUT_CLASSIFICATION	6.900951643917665E-6	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.999998685596303	WITHOUT_CLASSIFICATION	1.3144036970554741E-6	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999999857184537	WITHOUT_CLASSIFICATION	1.4281546272047341E-8	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9999985928622583	WITHOUT_CLASSIFICATION	1.4071377417009005E-6	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999999348651909	WITHOUT_CLASSIFICATION	6.513480906374932E-8	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9999884714231639	WITHOUT_CLASSIFICATION	1.1528576836141651E-5	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9999970642341836	WITHOUT_CLASSIFICATION	2.935765816502122E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.999987289196698	WITHOUT_CLASSIFICATION	1.2710803302134406E-5	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.999999313764034	WITHOUT_CLASSIFICATION	6.862359660699338E-7	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999991429546994	WITHOUT_CLASSIFICATION	8.570453005664719E-7	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999990499946985	WITHOUT_CLASSIFICATION	9.500053014321646E-7	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999985391869914	WITHOUT_CLASSIFICATION	1.4608130084942999E-6	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999991447195238	WITHOUT_CLASSIFICATION	8.552804762793618E-7	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.999989062061252	WITHOUT_CLASSIFICATION	1.0937938747974245E-5	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999993625577309	WITHOUT_CLASSIFICATION	6.37442269162626E-7	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.99999993683816	WITHOUT_CLASSIFICATION	6.316184000084929E-8	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999995583468412	WITHOUT_CLASSIFICATION	4.41653158778571E-7	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.999999954684067	WITHOUT_CLASSIFICATION	4.531593308739416E-8	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.999999892764432	WITHOUT_CLASSIFICATION	1.072355679435584E-7	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999940581094225	WITHOUT_CLASSIFICATION	5.941890577473556E-6	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9999985498678904	WITHOUT_CLASSIFICATION	1.4501321095890483E-6	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999995649884379	WITHOUT_CLASSIFICATION	4.350115621203661E-7	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999993461927634	WITHOUT_CLASSIFICATION	6.53807236536939E-7	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999998576919297	WITHOUT_CLASSIFICATION	1.4230807032777178E-7	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999952760569675	WITHOUT_CLASSIFICATION	4.723943032602455E-6	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999952760569675	WITHOUT_CLASSIFICATION	4.723943032602455E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.999999902347845	WITHOUT_CLASSIFICATION	9.765215491827456E-8	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.999999902347845	WITHOUT_CLASSIFICATION	9.765215491827456E-8	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.9999996296841953	WITHOUT_CLASSIFICATION	3.7031580467655457E-7	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999995583468412	WITHOUT_CLASSIFICATION	4.41653158778571E-7	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9999455464654233	WITHOUT_CLASSIFICATION	5.4453534576780976E-5	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999999115786832	WITHOUT_CLASSIFICATION	8.842131687480784E-8	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999756987037236	WITHOUT_CLASSIFICATION	2.4301296276281703E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999756987037236	WITHOUT_CLASSIFICATION	2.4301296276281703E-5	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999964630234024	WITHOUT_CLASSIFICATION	3.536976597563646E-6	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999997713383039	WITHOUT_CLASSIFICATION	2.2866169612944545E-7	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999998226540278	WITHOUT_CLASSIFICATION	1.7734597221981218E-7	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999994194144732	WITHOUT_CLASSIFICATION	5.805855266706763E-7	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999992156850145	WITHOUT_CLASSIFICATION	7.843149855538592E-7	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.999999958000811	WITHOUT_CLASSIFICATION	4.19991889399041E-8	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9999907583585804	WITHOUT_CLASSIFICATION	9.241641419522346E-6	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.999999767086319	WITHOUT_CLASSIFICATION	2.329136810019095E-7	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.999995581834362	WITHOUT_CLASSIFICATION	4.4181656380967815E-6	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999864201878401	WITHOUT_CLASSIFICATION	1.3579812159893643E-5	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999994237980825	WITHOUT_CLASSIFICATION	5.762019174377366E-7	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9999990920434498	WITHOUT_CLASSIFICATION	9.079565502838101E-7	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999993570730276	WITHOUT_CLASSIFICATION	6.429269724773286E-7	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999949739846014	WITHOUT_CLASSIFICATION	5.0260153985982585E-6	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9999916492321925	WITHOUT_CLASSIFICATION	8.350767807377199E-6	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999995239505595	WITHOUT_CLASSIFICATION	4.7604944046454046E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971228128488	WITHOUT_CLASSIFICATION	2.8771871512317523E-6	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999974526846505	WITHOUT_CLASSIFICATION	2.54731534954336E-6	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999999920471693	WITHOUT_CLASSIFICATION	7.95283082992511E-9	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999998951551795	WITHOUT_CLASSIFICATION	1.0484482050937125E-7	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999998214736787	WITHOUT_CLASSIFICATION	1.7852632122322552E-7	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999998327658194	WITHOUT_CLASSIFICATION	1.6723418073944543E-7	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999992951379687	WITHOUT_CLASSIFICATION	7.048620312501328E-7	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999990060384346	WITHOUT_CLASSIFICATION	9.939615654078027E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998450466033507	WITHOUT_CLASSIFICATION	1.549533966493472E-4	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999978811977853	WITHOUT_CLASSIFICATION	2.11880221460493E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164882538	WITHOUT_CLASSIFICATION	2.3083511746245405E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999990250730219	WITHOUT_CLASSIFICATION	9.749269781604018E-7	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999883035442171	WITHOUT_CLASSIFICATION	1.1696455782862122E-5	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999997197759477	WITHOUT_CLASSIFICATION	2.8022405236550555E-7	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999934135857672	WITHOUT_CLASSIFICATION	6.5864142327633115E-6	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987691513568	WITHOUT_CLASSIFICATION	1.230848643266783E-6	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999765678726896	WITHOUT_CLASSIFICATION	2.3432127310418767E-5	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999765678726896	WITHOUT_CLASSIFICATION	2.3432127310418767E-5	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999998915644237	WITHOUT_CLASSIFICATION	1.0843557622111184E-7	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999977475009215	WITHOUT_CLASSIFICATION	2.252499078483632E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999973335242963	WITHOUT_CLASSIFICATION	2.666475703575528E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999973335242963	WITHOUT_CLASSIFICATION	2.666475703575528E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999996950915176	WITHOUT_CLASSIFICATION	3.0490848233768027E-7	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9999603502490929	WITHOUT_CLASSIFICATION	3.964975090706069E-5	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9999798690408802	WITHOUT_CLASSIFICATION	2.0130959119717125E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999980556132588	WITHOUT_CLASSIFICATION	1.9443867410549462E-6	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.9999940464223654	WITHOUT_CLASSIFICATION	5.953577634564519E-6	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999976952925225	WITHOUT_CLASSIFICATION	2.3047074774609685E-6	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999993790340326	WITHOUT_CLASSIFICATION	6.209659673934775E-7	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999992429430182	WITHOUT_CLASSIFICATION	7.570569817418045E-7	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999993307039491	WITHOUT_CLASSIFICATION	6.692960509764287E-7	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999993307039491	WITHOUT_CLASSIFICATION	6.692960509764287E-7	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999999938728598	WITHOUT_CLASSIFICATION	6.127140190455782E-9	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999998149422538	WITHOUT_CLASSIFICATION	1.8505774622964076E-7	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999998149422538	WITHOUT_CLASSIFICATION	1.8505774622964076E-7	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999992726873567	WITHOUT_CLASSIFICATION	7.273126433631689E-7	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.999998656125117	WITHOUT_CLASSIFICATION	1.3438748830774974E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9969178208625942	WITHOUT_CLASSIFICATION	0.003082179137405871	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999998237992386	WITHOUT_CLASSIFICATION	1.7620076146775087E-7	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999997927672903	WITHOUT_CLASSIFICATION	2.0723270977904616E-7	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999993397230851	WITHOUT_CLASSIFICATION	6.602769150371287E-7	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999917689811845	WITHOUT_CLASSIFICATION	8.231018815615044E-6	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999992100209422	WITHOUT_CLASSIFICATION	7.899790578610542E-7	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999977317081409	WITHOUT_CLASSIFICATION	2.268291859147115E-6	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9999988682913981	WITHOUT_CLASSIFICATION	1.1317086018793683E-6	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999999982812732	WITHOUT_CLASSIFICATION	1.7187269158466052E-9	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9999998207262578	WITHOUT_CLASSIFICATION	1.792737421903259E-7	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999943762800872	WITHOUT_CLASSIFICATION	5.62371991279209E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999943762800872	WITHOUT_CLASSIFICATION	5.62371991279209E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999943762800872	WITHOUT_CLASSIFICATION	5.62371991279209E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999943762800872	WITHOUT_CLASSIFICATION	5.62371991279209E-6	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999964692359038	WITHOUT_CLASSIFICATION	3.530764096208099E-6	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999996776321701	WITHOUT_CLASSIFICATION	3.223678298052307E-7	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9999766708898558	WITHOUT_CLASSIFICATION	2.332911014423401E-5	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.9999605252389975	WITHOUT_CLASSIFICATION	3.947476100247503E-5	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999989631058731	WITHOUT_CLASSIFICATION	1.0368941268987738E-6	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9999971645164766	WITHOUT_CLASSIFICATION	2.8354835234215194E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224061356	WITHOUT_CLASSIFICATION	1.1917759386434587E-4	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999997123749538	WITHOUT_CLASSIFICATION	2.8762504618666485E-7	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999794690027329	WITHOUT_CLASSIFICATION	2.0530997267059455E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224061356	WITHOUT_CLASSIFICATION	1.1917759386434587E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224061356	WITHOUT_CLASSIFICATION	1.1917759386434587E-4	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999999153329744	WITHOUT_CLASSIFICATION	8.466702568902002E-8	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.999989002838018	WITHOUT_CLASSIFICATION	1.0997161982069671E-5	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999983012212725	WITHOUT_CLASSIFICATION	1.6987787274911457E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999994738154044	WITHOUT_CLASSIFICATION	5.261845955323338E-7	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999989300239878	WITHOUT_CLASSIFICATION	1.0699760122486628E-6	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999929238754087	WITHOUT_CLASSIFICATION	7.076124591295118E-6	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999974924341026	WITHOUT_CLASSIFICATION	2.507565897249359E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999994738154044	WITHOUT_CLASSIFICATION	5.261845955323338E-7	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9999949135434575	WITHOUT_CLASSIFICATION	5.086456542521293E-6	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999995699131554	WITHOUT_CLASSIFICATION	4.300868444871808E-7	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999916064160178	WITHOUT_CLASSIFICATION	8.393583982146694E-6	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999905499960593	WITHOUT_CLASSIFICATION	9.45000394073784E-6	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999968643935937	WITHOUT_CLASSIFICATION	3.1356064061963916E-6	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9999998628448841	WITHOUT_CLASSIFICATION	1.371551160077878E-7	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999999404993545	WITHOUT_CLASSIFICATION	5.950064549512797E-8	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9999976142722758	WITHOUT_CLASSIFICATION	2.3857277240942164E-6	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998862536359	WITHOUT_CLASSIFICATION	1.1374636412418878E-7	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999994380506442	WITHOUT_CLASSIFICATION	5.619493558496999E-7	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998490863105	WITHOUT_CLASSIFICATION	1.509136895547773E-7	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999992123207557	WITHOUT_CLASSIFICATION	7.876792443135601E-7	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999972321253732	WITHOUT_CLASSIFICATION	2.7678746269683076E-6	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9998305382674474	WITHOUT_CLASSIFICATION	1.6946173255262057E-4	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.99999992300495	WITHOUT_CLASSIFICATION	7.699504996494528E-8	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9999969922914832	WITHOUT_CLASSIFICATION	3.0077085168482624E-6	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.999999822921392	WITHOUT_CLASSIFICATION	1.770786079564303E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999991803889091	WITHOUT_CLASSIFICATION	8.19611090975189E-7	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999998502953963	WITHOUT_CLASSIFICATION	1.4970460378286752E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999991803889091	WITHOUT_CLASSIFICATION	8.19611090975189E-7	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999999125390834	WITHOUT_CLASSIFICATION	8.746091667715353E-8	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999999165086619	WITHOUT_CLASSIFICATION	8.349133812421329E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999974031054325	WITHOUT_CLASSIFICATION	2.596894567556512E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999792831397201	WITHOUT_CLASSIFICATION	2.071686027997672E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.999999822921392	WITHOUT_CLASSIFICATION	1.770786079564303E-7	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999998502953963	WITHOUT_CLASSIFICATION	1.4970460378286752E-7	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999999125390834	WITHOUT_CLASSIFICATION	8.746091667715353E-8	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999997391498486	WITHOUT_CLASSIFICATION	2.6085015136511554E-7	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9999882050630361	WITHOUT_CLASSIFICATION	1.1794936963869861E-5	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.999997912908572	WITHOUT_CLASSIFICATION	2.08709142796512E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9999978957254062	WITHOUT_CLASSIFICATION	2.1042745937680128E-6	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999993461220258	WITHOUT_CLASSIFICATION	6.538779742585958E-7	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999980986872568	WITHOUT_CLASSIFICATION	1.901312743293713E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971228128488	WITHOUT_CLASSIFICATION	2.8771871512317523E-6	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999999165086619	WITHOUT_CLASSIFICATION	8.349133812421329E-8	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999999545983396	WITHOUT_CLASSIFICATION	4.5401660386402695E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9999965713332001	WITHOUT_CLASSIFICATION	3.4286667997810875E-6	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999992281938495	WITHOUT_CLASSIFICATION	7.718061504591718E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971228128488	WITHOUT_CLASSIFICATION	2.8771871512317523E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164882538	WITHOUT_CLASSIFICATION	2.3083511746245405E-5	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999998072858298	WITHOUT_CLASSIFICATION	1.9271417010769407E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971228128488	WITHOUT_CLASSIFICATION	2.8771871512317523E-6	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999994159041932	WITHOUT_CLASSIFICATION	5.840958068512875E-7	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999940494761289	WITHOUT_CLASSIFICATION	5.950523871143152E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164882538	WITHOUT_CLASSIFICATION	2.3083511746245405E-5	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9999910862274086	WITHOUT_CLASSIFICATION	8.913772591316895E-6	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999997826329217	WITHOUT_CLASSIFICATION	2.1736707842186892E-7	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999995578824002	WITHOUT_CLASSIFICATION	4.4211759976043226E-7	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999969542836693	WITHOUT_CLASSIFICATION	3.045716330560964E-6	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999986429938363	WITHOUT_CLASSIFICATION	1.3570061636534079E-6	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999999340748141	WITHOUT_CLASSIFICATION	6.59251858653805E-8	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999992211482557	WITHOUT_CLASSIFICATION	7.788517444013967E-7	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9999897297738404	WITHOUT_CLASSIFICATION	1.0270226159553966E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999468348000631	WITHOUT_CLASSIFICATION	5.316519993684838E-5	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.999998957407796	WITHOUT_CLASSIFICATION	1.042592204082969E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9969178208625942	WITHOUT_CLASSIFICATION	0.003082179137405871	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9999907124806652	WITHOUT_CLASSIFICATION	9.28751933469647E-6	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.99999589229241	WITHOUT_CLASSIFICATION	4.107707589898086E-6	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.999999168613467	WITHOUT_CLASSIFICATION	8.313865329711613E-7	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.999986830512234	WITHOUT_CLASSIFICATION	1.3169487765920157E-5	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999997823795789	WITHOUT_CLASSIFICATION	2.176204211633991E-7	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999999754960917	WITHOUT_CLASSIFICATION	2.4503908344001162E-8	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999999730697312	WITHOUT_CLASSIFICATION	2.69302687419013E-8	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9999968351261533	WITHOUT_CLASSIFICATION	3.164873846612676E-6	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999998646961509	WITHOUT_CLASSIFICATION	1.3530384908629496E-7	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999995911899037	WITHOUT_CLASSIFICATION	4.088100963236007E-7	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9959265331124143	WITHOUT_CLASSIFICATION	0.004073466887585779	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999994207630476	WITHOUT_CLASSIFICATION	5.79236952430022E-7	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999989769626081	WITHOUT_CLASSIFICATION	1.0230373919346255E-6	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999995145912848	WITHOUT_CLASSIFICATION	4.854087151914902E-7	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999972054626142	WITHOUT_CLASSIFICATION	2.794537385761708E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9999186457596037	WITHOUT_CLASSIFICATION	8.135424039631349E-5	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.999999888460224	WITHOUT_CLASSIFICATION	1.1153977595039047E-7	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9999987457943036	WITHOUT_CLASSIFICATION	1.254205696379439E-6	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999997984060598	WITHOUT_CLASSIFICATION	2.0159394028464804E-7	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9999910539494762	WITHOUT_CLASSIFICATION	8.946050523764018E-6	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999997917151148	WITHOUT_CLASSIFICATION	2.0828488527844053E-7	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9990817409355165	WITHOUT_CLASSIFICATION	9.182590644835328E-4	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999988179664556	WITHOUT_CLASSIFICATION	1.1820335443474667E-6	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999953407037937	WITHOUT_CLASSIFICATION	4.659296206300708E-6	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.999938841445809	WITHOUT_CLASSIFICATION	6.115855419091775E-5	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999606291997823	WITHOUT_CLASSIFICATION	3.937080021767861E-5	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999997000398373	WITHOUT_CLASSIFICATION	2.9996016277356173E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9950662710747603	WITHOUT_CLASSIFICATION	0.00493372892523973	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999998847751411	WITHOUT_CLASSIFICATION	1.1522485895194789E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164882538	WITHOUT_CLASSIFICATION	2.3083511746245405E-5	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999996515418869	WITHOUT_CLASSIFICATION	3.4845811313952355E-7	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999580018725128	WITHOUT_CLASSIFICATION	4.199812748709396E-5	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999580018725128	WITHOUT_CLASSIFICATION	4.199812748709396E-5	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999999649838731	WITHOUT_CLASSIFICATION	3.501612686826379E-8	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999999340748141	WITHOUT_CLASSIFICATION	6.59251858653805E-8	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9999919107679955	WITHOUT_CLASSIFICATION	8.089232004485112E-6	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999987916851764	WITHOUT_CLASSIFICATION	1.208314823610575E-6	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.999999834101716	WITHOUT_CLASSIFICATION	1.6589828396754635E-7	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999999923735386	WITHOUT_CLASSIFICATION	7.62646131924653E-9	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9999967490564713	WITHOUT_CLASSIFICATION	3.2509435287472046E-6	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9998865637064992	WITHOUT_CLASSIFICATION	1.1343629350089296E-4	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9999996467706808	WITHOUT_CLASSIFICATION	3.5322931923842454E-7	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9999999732940329	WITHOUT_CLASSIFICATION	2.670596701732716E-8	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.999999818238863	WITHOUT_CLASSIFICATION	1.8176113702305047E-7	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.9999997586883619	WITHOUT_CLASSIFICATION	2.4131163820106365E-7	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999999607036696	WITHOUT_CLASSIFICATION	3.9296330416521996E-8	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999912088746041	WITHOUT_CLASSIFICATION	8.791125395845503E-6	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999995267558125	WITHOUT_CLASSIFICATION	4.73244187409692E-7	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999911876646	WITHOUT_CLASSIFICATION	8.812335371837945E-9	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999991539142234	WITHOUT_CLASSIFICATION	8.460857765950389E-7	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999996977276077	WITHOUT_CLASSIFICATION	3.022723924410251E-7	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999972018603724	WITHOUT_CLASSIFICATION	2.798139627602713E-6	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999998819556234	WITHOUT_CLASSIFICATION	1.1804437661487881E-7	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999999769114715	WITHOUT_CLASSIFICATION	2.3088528437008177E-8	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999992437152924	WITHOUT_CLASSIFICATION	7.562847077708633E-7	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999999611548298	WITHOUT_CLASSIFICATION	3.884517024729334E-8	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.999999801981041	WITHOUT_CLASSIFICATION	1.9801895910987503E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9950662710747603	WITHOUT_CLASSIFICATION	0.00493372892523973	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999998613316117	WITHOUT_CLASSIFICATION	1.3866838832807927E-7	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999999049754442	WITHOUT_CLASSIFICATION	9.50245557758098E-8	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999997049805481	WITHOUT_CLASSIFICATION	2.950194519411216E-7	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999956809110457	WITHOUT_CLASSIFICATION	4.3190889541944985E-6	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.999989596718558	WITHOUT_CLASSIFICATION	1.0403281441922714E-5	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999999945935573	WITHOUT_CLASSIFICATION	5.406442675966942E-9	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999855832246615	WITHOUT_CLASSIFICATION	1.4416775338434522E-5	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999991225701206	WITHOUT_CLASSIFICATION	8.774298793577271E-7	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999998598321194	WITHOUT_CLASSIFICATION	1.4016788056489305E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999988708068853	WITHOUT_CLASSIFICATION	1.1291931146655343E-6	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999998066674252	WITHOUT_CLASSIFICATION	1.9333257484570466E-7	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999870453939934	WITHOUT_CLASSIFICATION	1.2954606006496725E-5	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.999984742085661	WITHOUT_CLASSIFICATION	1.5257914339025598E-5	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999999608785026	WITHOUT_CLASSIFICATION	3.9121497442118124E-8	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999994221995191	WITHOUT_CLASSIFICATION	5.778004809498559E-7	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999994221995191	WITHOUT_CLASSIFICATION	5.778004809498559E-7	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999977964370971	WITHOUT_CLASSIFICATION	2.2035629028781778E-6	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9999998901614607	WITHOUT_CLASSIFICATION	1.0983853925187608E-7	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9998362994210596	WITHOUT_CLASSIFICATION	1.637005789405446E-4	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9998362994210596	WITHOUT_CLASSIFICATION	1.637005789405446E-4	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999997609758033	WITHOUT_CLASSIFICATION	2.390241965893458E-7	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999922659730797	WITHOUT_CLASSIFICATION	7.73402692043654E-6	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.999999993254903	WITHOUT_CLASSIFICATION	6.745097022583347E-9	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999998818576998	WITHOUT_CLASSIFICATION	1.1814230016155538E-7	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984202053892	WITHOUT_CLASSIFICATION	1.57979461076974E-6	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987986568205	WITHOUT_CLASSIFICATION	1.2013431795301694E-6	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.999999759720785	WITHOUT_CLASSIFICATION	2.4027921501052496E-7	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.999999759720785	WITHOUT_CLASSIFICATION	2.4027921501052496E-7	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999992732161903	WITHOUT_CLASSIFICATION	7.267838098154272E-7	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.999998947325379	WITHOUT_CLASSIFICATION	1.0526746209974035E-6	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.999990501132131	WITHOUT_CLASSIFICATION	9.498867869039506E-6	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999991747681809	WITHOUT_CLASSIFICATION	8.252318191371837E-7	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999991747681809	WITHOUT_CLASSIFICATION	8.252318191371837E-7	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999988077041357	WITHOUT_CLASSIFICATION	1.192295864314042E-6	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999983869342314	WITHOUT_CLASSIFICATION	1.6130657685786192E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.999999910029464	WITHOUT_CLASSIFICATION	8.997053600480113E-8	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999987166694141	WITHOUT_CLASSIFICATION	1.2833305859058676E-6	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999996542078435	WITHOUT_CLASSIFICATION	3.457921564668522E-7	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.999999919148949	WITHOUT_CLASSIFICATION	8.085105095001624E-8	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.999999756364804	WITHOUT_CLASSIFICATION	2.436351959776335E-7	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999995218771978	WITHOUT_CLASSIFICATION	4.781228021954995E-7	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999999792007851	WITHOUT_CLASSIFICATION	2.0799214850813442E-8	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999989292644259	WITHOUT_CLASSIFICATION	1.0707355740591257E-6	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9999941373789641	WITHOUT_CLASSIFICATION	5.862621035848078E-6	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.999999917435522	WITHOUT_CLASSIFICATION	8.256447810820228E-8	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9999957781220878	WITHOUT_CLASSIFICATION	4.221877912140121E-6	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.999999999461412	WITHOUT_CLASSIFICATION	5.385879498777365E-10	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999886380203659	WITHOUT_CLASSIFICATION	1.136197963413228E-5	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999991064776139	WITHOUT_CLASSIFICATION	8.935223860559648E-7	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999991827446648	WITHOUT_CLASSIFICATION	8.172553352354735E-7	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999999464541565	WITHOUT_CLASSIFICATION	5.3545843613140556E-8	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.999998466502211	WITHOUT_CLASSIFICATION	1.5334977890114048E-6	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999989329283827	WITHOUT_CLASSIFICATION	1.0670716173154497E-6	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999995611476721	WITHOUT_CLASSIFICATION	4.388523278675978E-7	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999996182169637	WITHOUT_CLASSIFICATION	3.8178303632144124E-7	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9999710543155004	WITHOUT_CLASSIFICATION	2.894568449958281E-5	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999938365375511	WITHOUT_CLASSIFICATION	6.1634624487953645E-6	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9999932914549801	WITHOUT_CLASSIFICATION	6.708545019982658E-6	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999986448799605	WITHOUT_CLASSIFICATION	1.3551200395249223E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999997054409105	WITHOUT_CLASSIFICATION	2.945590894314407E-7	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.999992384267315	WITHOUT_CLASSIFICATION	7.615732685121667E-6	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.999998739633338	WITHOUT_CLASSIFICATION	1.2603666620761428E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999997237097693	WITHOUT_CLASSIFICATION	2.7629023068881834E-7	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.999999893399101	WITHOUT_CLASSIFICATION	1.0660089893574807E-7	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999991600626481	WITHOUT_CLASSIFICATION	8.399373519341767E-7	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999995965245786	WITHOUT_CLASSIFICATION	4.034754213861123E-7	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9999243985635078	WITHOUT_CLASSIFICATION	7.560143649223257E-5	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999998378613865	WITHOUT_CLASSIFICATION	1.6213861359274364E-7	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9999949270720714	WITHOUT_CLASSIFICATION	5.07292792851202E-6	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9999806382396538	WITHOUT_CLASSIFICATION	1.93617603462982E-5	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999998022622392	WITHOUT_CLASSIFICATION	1.9773776090554368E-7	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999953025133979	WITHOUT_CLASSIFICATION	4.69748660207331E-6	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999997930326219	WITHOUT_CLASSIFICATION	2.0696737811170676E-7	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999999739066336	WITHOUT_CLASSIFICATION	2.609336634477391E-8	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9999962370627531	WITHOUT_CLASSIFICATION	3.7629372469928363E-6	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999992827216369	WITHOUT_CLASSIFICATION	7.172783630774064E-7	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.99999911562936	WITHOUT_CLASSIFICATION	8.843706399751667E-7	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.9999989235624813	WITHOUT_CLASSIFICATION	1.0764375186370153E-6	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999996383018769	WITHOUT_CLASSIFICATION	3.6169812317305485E-7	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999988786135461	WITHOUT_CLASSIFICATION	1.1213864539258168E-6	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999994836898346	WITHOUT_CLASSIFICATION	5.163101654705825E-7	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.999999572957605	WITHOUT_CLASSIFICATION	4.270423950565364E-7	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999991537956252	WITHOUT_CLASSIFICATION	8.462043747676578E-7	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999966915573717	WITHOUT_CLASSIFICATION	3.308442628433997E-6	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999996785538576	WITHOUT_CLASSIFICATION	3.2144614240178186E-7	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999998522133163	WITHOUT_CLASSIFICATION	1.4778668373334658E-7	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.999999999104637	WITHOUT_CLASSIFICATION	8.953630759138882E-10	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999994712817201	WITHOUT_CLASSIFICATION	5.287182799565993E-7	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9999996042659319	WITHOUT_CLASSIFICATION	3.957340680548896E-7	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9999969101063493	WITHOUT_CLASSIFICATION	3.089893650783353E-6	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.999997494291929	WITHOUT_CLASSIFICATION	2.5057080710670305E-6	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999999014749043	WITHOUT_CLASSIFICATION	9.85250957073565E-8	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999999467243059	WITHOUT_CLASSIFICATION	5.327569413256703E-8	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999995318457353	WITHOUT_CLASSIFICATION	4.681542646643059E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999995318457353	WITHOUT_CLASSIFICATION	4.681542646643059E-7	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999996060855034	WITHOUT_CLASSIFICATION	3.939144966747896E-7	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9999983140788131	WITHOUT_CLASSIFICATION	1.685921186934236E-6	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999998228552068	WITHOUT_CLASSIFICATION	1.7714479322275252E-7	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.999999809195785	WITHOUT_CLASSIFICATION	1.9080421506560384E-7	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999999652264402	WITHOUT_CLASSIFICATION	3.477355984853208E-8	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999946328806946	WITHOUT_CLASSIFICATION	5.3671193053721065E-6	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999996581913666	WITHOUT_CLASSIFICATION	3.4180863329359886E-7	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999997764126	WITHOUT_CLASSIFICATION	2.2358746731238033E-10	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999987234821216	WITHOUT_CLASSIFICATION	1.2765178784290434E-6	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999984798703455	WITHOUT_CLASSIFICATION	1.5201296544623964E-6	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999999739101161	WITHOUT_CLASSIFICATION	2.6089883968735187E-8	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9999955400638785	WITHOUT_CLASSIFICATION	4.459936121506552E-6	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999996243085227	WITHOUT_CLASSIFICATION	3.7569147727167354E-7	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999998351061334	WITHOUT_CLASSIFICATION	1.6489386661223654E-7	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999969663436323	WITHOUT_CLASSIFICATION	3.033656367620485E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999969663436323	WITHOUT_CLASSIFICATION	3.033656367620485E-6	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999999561107071	WITHOUT_CLASSIFICATION	4.388929283235619E-8	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999999560425431	WITHOUT_CLASSIFICATION	4.395745693360298E-8	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999988103991636	WITHOUT_CLASSIFICATION	1.1896008363099263E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999867982756089	WITHOUT_CLASSIFICATION	1.3201724391144863E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999901655800187	WITHOUT_CLASSIFICATION	9.83441998136182E-6	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999924679743818	WITHOUT_CLASSIFICATION	7.532025618278161E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999957215524744	WITHOUT_CLASSIFICATION	4.2784475255310176E-6	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999997867824335	WITHOUT_CLASSIFICATION	2.1321756652709032E-7	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999999167126197	WITHOUT_CLASSIFICATION	8.328738036825067E-8	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999999905254444	WITHOUT_CLASSIFICATION	9.47455560638569E-9	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999999290979893	WITHOUT_CLASSIFICATION	7.090201064758909E-8	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999923945692221	WITHOUT_CLASSIFICATION	7.605430777950421E-6	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999995076405778	WITHOUT_CLASSIFICATION	4.923594222185907E-7	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999999341908569	WITHOUT_CLASSIFICATION	6.580914317759932E-8	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999949006382455	WITHOUT_CLASSIFICATION	5.0993617544843646E-6	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999999718124422	WITHOUT_CLASSIFICATION	2.8187557904092424E-8	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999999969663912	WITHOUT_CLASSIFICATION	3.03360875005148E-9	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999994868141785	WITHOUT_CLASSIFICATION	5.131858214135456E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999999323780161	WITHOUT_CLASSIFICATION	6.762198386917778E-8	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.999999998837845	WITHOUT_CLASSIFICATION	1.1621550225687879E-9	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999996517374015	WITHOUT_CLASSIFICATION	3.482625986372804E-7	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999842110449	WITHOUT_CLASSIFICATION	1.578895513431426E-8	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999999089018053	WITHOUT_CLASSIFICATION	9.109819465826943E-8	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9999964467446905	WITHOUT_CLASSIFICATION	3.5532553095555917E-6	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999984762973325	WITHOUT_CLASSIFICATION	1.5237026675325073E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999998430004996	WITHOUT_CLASSIFICATION	1.5699950043580695E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999999747569488	WITHOUT_CLASSIFICATION	2.5243051122081373E-8	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999997605249813	WITHOUT_CLASSIFICATION	2.394750187826545E-7	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999999991861886	WITHOUT_CLASSIFICATION	8.138112861115518E-10	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999996832094686	WITHOUT_CLASSIFICATION	3.1679053136803183E-7	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9999945681416887	WITHOUT_CLASSIFICATION	5.431858311230956E-6	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999999186703126	WITHOUT_CLASSIFICATION	8.132968738830695E-8	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999999108199052	WITHOUT_CLASSIFICATION	8.918009483925867E-8	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.999999994364794	WITHOUT_CLASSIFICATION	5.635205908539586E-9	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9999990773074898	WITHOUT_CLASSIFICATION	9.22692510221185E-7	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999999650925827	WITHOUT_CLASSIFICATION	3.490741728344549E-8	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999994244273047	WITHOUT_CLASSIFICATION	5.755726952998214E-7	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999999423992547	WITHOUT_CLASSIFICATION	5.760074538918788E-8	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999992683665708	WITHOUT_CLASSIFICATION	7.316334292767817E-7	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9999999935006394	WITHOUT_CLASSIFICATION	6.4993605268607514E-9	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999993261597933	WITHOUT_CLASSIFICATION	6.738402068112004E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999993261597933	WITHOUT_CLASSIFICATION	6.738402068112004E-7	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999999478587273	WITHOUT_CLASSIFICATION	5.21412727897609E-8	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999999487215022	WITHOUT_CLASSIFICATION	5.1278497818984286E-8	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9999997302996128	WITHOUT_CLASSIFICATION	2.697003872879188E-7	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999999129604702	WITHOUT_CLASSIFICATION	8.703952971595922E-8	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999999826469549	WITHOUT_CLASSIFICATION	1.7353045143274023E-8	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999999847642749	WITHOUT_CLASSIFICATION	1.523572502989102E-8	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999995140355515	WITHOUT_CLASSIFICATION	4.859644484423438E-7	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999993846700951	WITHOUT_CLASSIFICATION	6.153299048665568E-7	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999998609749692	WITHOUT_CLASSIFICATION	1.3902503088263278E-7	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987093451038	WITHOUT_CLASSIFICATION	1.2906548961452092E-6	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991025357001	WITHOUT_CLASSIFICATION	8.974642998240826E-7	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999995675331802	WITHOUT_CLASSIFICATION	4.3246681983397256E-7	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999976079146538	WITHOUT_CLASSIFICATION	2.39208534627493E-6	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999999507578868	WITHOUT_CLASSIFICATION	4.924211318598751E-8	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999999717424785	WITHOUT_CLASSIFICATION	2.82575216079265E-8	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9999946018166552	WITHOUT_CLASSIFICATION	5.398183344754536E-6	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999999623468223	WITHOUT_CLASSIFICATION	3.765317762924332E-8	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999999392582555	WITHOUT_CLASSIFICATION	6.074174457676195E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.999998708774443	WITHOUT_CLASSIFICATION	1.2912255571359633E-6	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999999118574459	WITHOUT_CLASSIFICATION	8.81425540955802E-8	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999998370943733	WITHOUT_CLASSIFICATION	1.6290562666231844E-7	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999998336804015	WITHOUT_CLASSIFICATION	1.6631959854842048E-7	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999994193286357	WITHOUT_CLASSIFICATION	5.806713641942738E-7	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9999614668979034	WITHOUT_CLASSIFICATION	3.853310209662083E-5	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9999984376403288	WITHOUT_CLASSIFICATION	1.5623596712535023E-6	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.999998433144059	WITHOUT_CLASSIFICATION	1.5668559409602626E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999997646245682	WITHOUT_CLASSIFICATION	2.3537543177520432E-7	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999996428128555	WITHOUT_CLASSIFICATION	3.571871444461874E-7	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999997418956527	WITHOUT_CLASSIFICATION	2.58104347298609E-7	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9999999719282432	WITHOUT_CLASSIFICATION	2.807175684695267E-8	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999998931337766	WITHOUT_CLASSIFICATION	1.0686622342465592E-7	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999972369754212	WITHOUT_CLASSIFICATION	2.7630245789016497E-6	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999999982552319	WITHOUT_CLASSIFICATION	1.7447681642647987E-9	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999995892957246	WITHOUT_CLASSIFICATION	4.107042752640136E-7	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999809026217	WITHOUT_CLASSIFICATION	1.9097378379140497E-8	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999999805122454	WITHOUT_CLASSIFICATION	1.948775468498829E-8	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999997176862023	WITHOUT_CLASSIFICATION	2.823137976895406E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999995404256269	WITHOUT_CLASSIFICATION	4.595743731140776E-7	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999998184095182	WITHOUT_CLASSIFICATION	1.8159048174531316E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9999975203315515	WITHOUT_CLASSIFICATION	2.4796684485659235E-6	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999999760449869	WITHOUT_CLASSIFICATION	2.3955013113248102E-8	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999996767388581	WITHOUT_CLASSIFICATION	3.232611417994989E-7	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.99999997324876	WITHOUT_CLASSIFICATION	2.6751239995512303E-8	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.999999917045244	WITHOUT_CLASSIFICATION	8.295475590410166E-8	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999996645874204	WITHOUT_CLASSIFICATION	3.3541257958437697E-7	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9999999698941806	WITHOUT_CLASSIFICATION	3.010581948648489E-8	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999990291496615	WITHOUT_CLASSIFICATION	9.70850338463202E-7	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999996243085227	WITHOUT_CLASSIFICATION	3.7569147727167354E-7	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999999985970938	WITHOUT_CLASSIFICATION	1.402906215917019E-9	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999999560133279	WITHOUT_CLASSIFICATION	4.3986672085970056E-8	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9999961941677304	WITHOUT_CLASSIFICATION	3.805832269698978E-6	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999991728342051	WITHOUT_CLASSIFICATION	8.271657948317878E-7	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.999994350704415	WITHOUT_CLASSIFICATION	5.649295585001806E-6	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999999203241755	WITHOUT_CLASSIFICATION	7.967582454021216E-8	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.99999975376926	WITHOUT_CLASSIFICATION	2.462307400056579E-7	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9999956923574587	WITHOUT_CLASSIFICATION	4.30764254137957E-6	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999952281742636	WITHOUT_CLASSIFICATION	4.77182573638556E-6	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999996322746065	WITHOUT_CLASSIFICATION	3.677253934874569E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999997810201858	WITHOUT_CLASSIFICATION	2.1897981432131907E-7	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999992102691487	WITHOUT_CLASSIFICATION	7.897308512324007E-7	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999971516303678	WITHOUT_CLASSIFICATION	2.848369632204872E-6	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999999944392409	WITHOUT_CLASSIFICATION	5.5607590954112506E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991238634532	WITHOUT_CLASSIFICATION	8.761365467752038E-7	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999995136666204	WITHOUT_CLASSIFICATION	4.863333794807773E-7	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999993888815287	WITHOUT_CLASSIFICATION	6.11118471236758E-7	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999999916993072	WITHOUT_CLASSIFICATION	8.300692854551733E-9	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999963122859731	WITHOUT_CLASSIFICATION	3.68771402683707E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991238634532	WITHOUT_CLASSIFICATION	8.761365467752038E-7	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9999422420873668	WITHOUT_CLASSIFICATION	5.7757912633185295E-5	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9999987253851063	WITHOUT_CLASSIFICATION	1.2746148937960991E-6	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999999953652223	WITHOUT_CLASSIFICATION	4.634777683678294E-9	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999999895369306	WITHOUT_CLASSIFICATION	1.0463069416440104E-8	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999833973646511	WITHOUT_CLASSIFICATION	1.6602635348804263E-5	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.999999681384085	WITHOUT_CLASSIFICATION	3.186159150104467E-7	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999999248460979	WITHOUT_CLASSIFICATION	7.515390206416868E-8	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999998957174818	WITHOUT_CLASSIFICATION	1.042825181685351E-7	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999989023563018	WITHOUT_CLASSIFICATION	1.0976436980950657E-6	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999999384203977	WITHOUT_CLASSIFICATION	6.1579602252324E-8	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999990366985404	WITHOUT_CLASSIFICATION	9.633014595815972E-7	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9999998304278448	WITHOUT_CLASSIFICATION	1.6957215522155167E-7	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999998670238813	WITHOUT_CLASSIFICATION	1.3297611858606963E-7	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9999741523443836	WITHOUT_CLASSIFICATION	2.5847655616401017E-5	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999993652650216	WITHOUT_CLASSIFICATION	6.347349784730286E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.999999801981041	WITHOUT_CLASSIFICATION	1.9801895910987503E-7	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999983664760241	WITHOUT_CLASSIFICATION	1.6335239758648913E-6	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999988029962199	WITHOUT_CLASSIFICATION	1.197003780118543E-6	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9999993301072714	WITHOUT_CLASSIFICATION	6.698927285843987E-7	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999998386285857	WITHOUT_CLASSIFICATION	1.6137141432859292E-7	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999989769878656	WITHOUT_CLASSIFICATION	1.0230121345257897E-6	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999999677358528	WITHOUT_CLASSIFICATION	3.226414732938805E-8	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999995120719092	WITHOUT_CLASSIFICATION	4.879280908717535E-7	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999950864051	WITHOUT_CLASSIFICATION	4.9135948746300514E-9	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999999743089718	WITHOUT_CLASSIFICATION	2.569102813830896E-8	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999999367983301	WITHOUT_CLASSIFICATION	6.320166988534166E-8	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999999516986853	WITHOUT_CLASSIFICATION	4.830131479423282E-8	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999998937367286	WITHOUT_CLASSIFICATION	1.062632713634819E-7	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999999808108614	WITHOUT_CLASSIFICATION	1.918913866781E-8	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999946961922458	WITHOUT_CLASSIFICATION	5.303807754269593E-6	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999994421052577	WITHOUT_CLASSIFICATION	5.578947421997825E-7	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999828128994419	WITHOUT_CLASSIFICATION	1.7187100558177636E-5	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999991901789926	WITHOUT_CLASSIFICATION	8.098210073187258E-7	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999994795640913	WITHOUT_CLASSIFICATION	5.204359086809749E-7	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999999636477394	WITHOUT_CLASSIFICATION	3.6352260593417635E-8	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.99999986351041	WITHOUT_CLASSIFICATION	1.364895899782181E-7	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999999922872348	WITHOUT_CLASSIFICATION	7.71276524835594E-9	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999999318837314	WITHOUT_CLASSIFICATION	6.811626870820759E-8	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999999249148198	WITHOUT_CLASSIFICATION	7.508518012993135E-8	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999891464518982	WITHOUT_CLASSIFICATION	1.0853548101807097E-5	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999932728347509	WITHOUT_CLASSIFICATION	6.727165248960725E-6	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999932728347509	WITHOUT_CLASSIFICATION	6.727165248960725E-6	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999975682971365	WITHOUT_CLASSIFICATION	2.4317028634737462E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999999722653764	WITHOUT_CLASSIFICATION	2.7734623609334186E-8	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999999247769886	WITHOUT_CLASSIFICATION	7.52230113515032E-8	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9150981348986583	DOCUMENTATION	0.08490186510134169	WITHOUT_CLASSIFICATION
// ignore	WITHOUT_CLASSIFICATION	0.9999980556132588	WITHOUT_CLASSIFICATION	1.9443867410549462E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999980556132588	WITHOUT_CLASSIFICATION	1.9443867410549462E-6	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.9999879361782441	WITHOUT_CLASSIFICATION	1.2063821755889719E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999993221418088	WITHOUT_CLASSIFICATION	6.778581912524728E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665835339	WITHOUT_CLASSIFICATION	6.593341646600237E-5	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999998131415906	WITHOUT_CLASSIFICATION	1.8685840944595355E-7	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999999279014928	WITHOUT_CLASSIFICATION	7.209850720639657E-8	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999993241769389	WITHOUT_CLASSIFICATION	6.758230610207505E-7	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999986322860548	WITHOUT_CLASSIFICATION	1.367713945280889E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999994544724822	WITHOUT_CLASSIFICATION	5.455275178937958E-7	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999999855942532	WITHOUT_CLASSIFICATION	1.4405746769602956E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998914430797	WITHOUT_CLASSIFICATION	1.0855692034962257E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998914430797	WITHOUT_CLASSIFICATION	1.0855692034962257E-7	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9999994101815194	WITHOUT_CLASSIFICATION	5.898184805995439E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999923497717189	WITHOUT_CLASSIFICATION	7.650228281073968E-6	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999990534305261	WITHOUT_CLASSIFICATION	9.465694739594697E-7	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9999745203057295	WITHOUT_CLASSIFICATION	2.5479694270469895E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164882538	WITHOUT_CLASSIFICATION	2.3083511746245405E-5	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999996478118552	WITHOUT_CLASSIFICATION	3.521881447492802E-7	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998990735446	WITHOUT_CLASSIFICATION	1.0092645547098503E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164882538	WITHOUT_CLASSIFICATION	2.3083511746245405E-5	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999999148825492	WITHOUT_CLASSIFICATION	8.511745073836749E-8	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9999944069294864	WITHOUT_CLASSIFICATION	5.593070513679112E-6	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999999836324988	WITHOUT_CLASSIFICATION	1.636750130278847E-8	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999996602114648	WITHOUT_CLASSIFICATION	3.397885350960629E-7	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999999384203977	WITHOUT_CLASSIFICATION	6.1579602252324E-8	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999998478079094	WITHOUT_CLASSIFICATION	1.5219209052957008E-7	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9999749949846919	WITHOUT_CLASSIFICATION	2.5005015308044446E-5	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999971572940304	WITHOUT_CLASSIFICATION	2.8427059696369297E-6	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999964934985379	WITHOUT_CLASSIFICATION	3.506501462159268E-6	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999995213632372	WITHOUT_CLASSIFICATION	4.786367628618933E-7	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9999994038357095	WITHOUT_CLASSIFICATION	5.961642904380698E-7	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.999996295324591	WITHOUT_CLASSIFICATION	3.704675409106724E-6	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9999999741391482	WITHOUT_CLASSIFICATION	2.5860851780825445E-8	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999941283166224	WITHOUT_CLASSIFICATION	5.871683377540616E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999975434762967	WITHOUT_CLASSIFICATION	2.4565237034061428E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999975434762967	WITHOUT_CLASSIFICATION	2.4565237034061428E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999994738154044	WITHOUT_CLASSIFICATION	5.261845955323338E-7	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999999888447316	WITHOUT_CLASSIFICATION	1.1155268438939067E-8	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224061356	WITHOUT_CLASSIFICATION	1.1917759386434587E-4	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999993904045746	WITHOUT_CLASSIFICATION	6.095954253688576E-7	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999985662791023	WITHOUT_CLASSIFICATION	1.4337208976361233E-6	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999991108510018	WITHOUT_CLASSIFICATION	8.891489983327412E-7	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.99999992300495	WITHOUT_CLASSIFICATION	7.699504996494528E-8	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999999951394122	WITHOUT_CLASSIFICATION	4.860587826049359E-9	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999997391498486	WITHOUT_CLASSIFICATION	2.6085015136511554E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.999999964269439	WITHOUT_CLASSIFICATION	3.573056095681897E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971228128488	WITHOUT_CLASSIFICATION	2.8771871512317523E-6	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999999984756444	WITHOUT_CLASSIFICATION	1.5243556193524942E-9	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9999990780156353	WITHOUT_CLASSIFICATION	9.21984364808952E-7	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999892637776	WITHOUT_CLASSIFICATION	1.0736222428599729E-8	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999999651565237	WITHOUT_CLASSIFICATION	3.4843476296659336E-8	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999994634448799	WITHOUT_CLASSIFICATION	5.365551201093803E-7	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.9999999788254277	WITHOUT_CLASSIFICATION	2.1174572343713108E-8	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999991063883082	WITHOUT_CLASSIFICATION	8.936116917281051E-7	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999994702033578	WITHOUT_CLASSIFICATION	5.297966421767056E-7	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999999942786959	WITHOUT_CLASSIFICATION	5.721304101585329E-9	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999998962686659	WITHOUT_CLASSIFICATION	1.0373133409466252E-7	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999999051974245	WITHOUT_CLASSIFICATION	9.480257543508868E-8	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.999999910029464	WITHOUT_CLASSIFICATION	8.997053600480113E-8	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999999997334184	WITHOUT_CLASSIFICATION	2.6658159088806015E-10	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999012118037882	WITHOUT_CLASSIFICATION	9.878819621182435E-5	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999012118037882	WITHOUT_CLASSIFICATION	9.878819621182435E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999997770653233	WITHOUT_CLASSIFICATION	2.2293467685388017E-7	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999999702060363	WITHOUT_CLASSIFICATION	2.9793963729139593E-8	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999967526262481	WITHOUT_CLASSIFICATION	3.2473737518225645E-6	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999999949837424	WITHOUT_CLASSIFICATION	5.01625762019664E-9	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999811486193132	WITHOUT_CLASSIFICATION	1.885138068683187E-5	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.8788400088616319	WITHOUT_CLASSIFICATION	0.12115999113836808	DOCUMENTATION
