//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999840639883826	WITHOUT_CLASSIFICATION	1.593601161747759E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999961568206306	WITHOUT_CLASSIFICATION	3.8431793693304385E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999961568206306	WITHOUT_CLASSIFICATION	3.8431793693304385E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999961568206306	WITHOUT_CLASSIFICATION	3.8431793693304385E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999961568206306	WITHOUT_CLASSIFICATION	3.8431793693304385E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999961568206306	WITHOUT_CLASSIFICATION	3.8431793693304385E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999961568206306	WITHOUT_CLASSIFICATION	3.8431793693304385E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999961568206306	WITHOUT_CLASSIFICATION	3.8431793693304385E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.999997132292338	WITHOUT_CLASSIFICATION	2.8677076621059627E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.999997132292338	WITHOUT_CLASSIFICATION	2.8677076621059627E-6	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.999963952764712	WITHOUT_CLASSIFICATION	3.60472352881312E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.999999051719143	WITHOUT_CLASSIFICATION	9.482808568750878E-7	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999975469829951	WITHOUT_CLASSIFICATION	2.4530170048802946E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999730324841175	WITHOUT_CLASSIFICATION	2.696751588244941E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999730324841175	WITHOUT_CLASSIFICATION	2.696751588244941E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999983217774111	WITHOUT_CLASSIFICATION	1.6782225889425612E-6	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.999999878111053	WITHOUT_CLASSIFICATION	1.2188894702312972E-7	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999995778582721	WITHOUT_CLASSIFICATION	4.221417278933355E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999946268368531	WITHOUT_CLASSIFICATION	5.373163146883222E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999976706695488	WITHOUT_CLASSIFICATION	2.329330451163533E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999976706695488	WITHOUT_CLASSIFICATION	2.329330451163533E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999968371248756	WITHOUT_CLASSIFICATION	3.1628751242623183E-6	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9999898334465039	WITHOUT_CLASSIFICATION	1.0166553496055726E-5	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999991285745349	WITHOUT_CLASSIFICATION	8.714254650451136E-7	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999998447218864	WITHOUT_CLASSIFICATION	1.5527811361801902E-7	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999998876008542	WITHOUT_CLASSIFICATION	1.1239914577749356E-7	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999832282435835	WITHOUT_CLASSIFICATION	1.6771756416452673E-5	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9999837252153148	WITHOUT_CLASSIFICATION	1.627478468532699E-5	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999758661455965	WITHOUT_CLASSIFICATION	2.4133854403510914E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999693307899858	WITHOUT_CLASSIFICATION	3.0669210014112506E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998064122167077	WITHOUT_CLASSIFICATION	1.9358778329226146E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999828087016035	WITHOUT_CLASSIFICATION	1.7191298396465945E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999776973227649	WITHOUT_CLASSIFICATION	2.230267723511534E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999984781323801	WITHOUT_CLASSIFICATION	1.5218676199540119E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999749427679178	WITHOUT_CLASSIFICATION	2.505723208220793E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999749427679178	WITHOUT_CLASSIFICATION	2.505723208220793E-5	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999998657171089	WITHOUT_CLASSIFICATION	1.3428289117702643E-7	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999841210961554	WITHOUT_CLASSIFICATION	1.5878903844605178E-5	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999995601654671	WITHOUT_CLASSIFICATION	4.398345329458021E-7	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.999999981244674	WITHOUT_CLASSIFICATION	1.875532594943206E-8	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9999993074298968	WITHOUT_CLASSIFICATION	6.925701031994076E-7	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9153720340872993	DOCUMENTATION	0.08462796591270072	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9153720340872993	DOCUMENTATION	0.08462796591270072	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999998233592312	WITHOUT_CLASSIFICATION	1.766407687756713E-7	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999999917434004	WITHOUT_CLASSIFICATION	8.256599653346675E-9	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999999672357337	WITHOUT_CLASSIFICATION	3.276426621531362E-8	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999959180191738	WITHOUT_CLASSIFICATION	4.081980826223583E-6	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999988378829728	WITHOUT_CLASSIFICATION	1.1621170271587572E-6	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999969333730228	WITHOUT_CLASSIFICATION	3.066626977208549E-6	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999943235486664	WITHOUT_CLASSIFICATION	5.676451333537429E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999983851530002	WITHOUT_CLASSIFICATION	1.6148469997775143E-6	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999685456539121	WITHOUT_CLASSIFICATION	3.1454346087914146E-5	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999997818316924	WITHOUT_CLASSIFICATION	2.1816830754667634E-7	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999803635896971	WITHOUT_CLASSIFICATION	1.9636410302826792E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999685456539121	WITHOUT_CLASSIFICATION	3.1454346087914146E-5	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999803635896971	WITHOUT_CLASSIFICATION	1.9636410302826792E-5	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999953347018422	WITHOUT_CLASSIFICATION	4.665298157734746E-6	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9999998902909707	WITHOUT_CLASSIFICATION	1.0970902929787611E-7	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999996775208171	WITHOUT_CLASSIFICATION	3.2247918295781084E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999996621923278	WITHOUT_CLASSIFICATION	3.378076721154707E-7	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999998676894365	WITHOUT_CLASSIFICATION	1.323105634522493E-7	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999996707875922	WITHOUT_CLASSIFICATION	3.292124077474819E-7	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.999998435926068	WITHOUT_CLASSIFICATION	1.5640739320323805E-6	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999589430050863	WITHOUT_CLASSIFICATION	4.105699491377712E-5	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999993332663072	WITHOUT_CLASSIFICATION	6.667336927826667E-7	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9999982897954545	WITHOUT_CLASSIFICATION	1.7102045454558708E-6	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.999995193678312	WITHOUT_CLASSIFICATION	4.806321687907065E-6	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.999996923685593	WITHOUT_CLASSIFICATION	3.076314406940821E-6	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999731168638	WITHOUT_CLASSIFICATION	2.6883136218068652E-8	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999995789584456	WITHOUT_CLASSIFICATION	4.2104155449149827E-7	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999999261894249	WITHOUT_CLASSIFICATION	7.381057502788237E-8	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999999279027783	WITHOUT_CLASSIFICATION	7.209722172749759E-8	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999986470641982	WITHOUT_CLASSIFICATION	1.3529358018529217E-6	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999999105450793	WITHOUT_CLASSIFICATION	8.945492062980344E-8	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999998328195455	WITHOUT_CLASSIFICATION	1.6718045446575525E-7	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999996071245382	WITHOUT_CLASSIFICATION	3.9287546178822023E-7	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999997176368329	WITHOUT_CLASSIFICATION	2.823631670581923E-7	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999979224310281	WITHOUT_CLASSIFICATION	2.0775689719388335E-6	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999992100845988	WITHOUT_CLASSIFICATION	7.899154012357173E-7	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999973871835025	WITHOUT_CLASSIFICATION	2.61281649751287E-6	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9999998643005855	WITHOUT_CLASSIFICATION	1.3569941445229534E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999982831902152	WITHOUT_CLASSIFICATION	1.7168097847688676E-6	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999989312934091	WITHOUT_CLASSIFICATION	1.0687065908738513E-6	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9999981707472091	WITHOUT_CLASSIFICATION	1.8292527909259074E-6	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999999199743689	WITHOUT_CLASSIFICATION	8.002563119176785E-8	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999998899383301	WITHOUT_CLASSIFICATION	1.1006166994949324E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999942688265389	WITHOUT_CLASSIFICATION	5.7311734612044615E-6	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999992092862002	WITHOUT_CLASSIFICATION	7.907137998169445E-7	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999990154351047	WITHOUT_CLASSIFICATION	9.84564895248859E-7	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999986523111987	WITHOUT_CLASSIFICATION	1.3476888013828017E-6	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999988214877746	WITHOUT_CLASSIFICATION	1.1785122253823524E-6	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999995862673845	WITHOUT_CLASSIFICATION	4.13732615532777E-7	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999986523111987	WITHOUT_CLASSIFICATION	1.3476888013828017E-6	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.999999967355451	WITHOUT_CLASSIFICATION	3.264454888653131E-8	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999999221061722	WITHOUT_CLASSIFICATION	7.78938278284872E-8	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999980136856133	WITHOUT_CLASSIFICATION	1.9863143867158977E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999984744678406	WITHOUT_CLASSIFICATION	1.5255321594107721E-6	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.999998909339514	WITHOUT_CLASSIFICATION	1.0906604860513558E-6	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999996651958504	WITHOUT_CLASSIFICATION	3.3480414953256373E-7	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999996651958504	WITHOUT_CLASSIFICATION	3.3480414953256373E-7	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999875845471202	WITHOUT_CLASSIFICATION	1.2415452879886623E-5	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999999704327978	WITHOUT_CLASSIFICATION	2.9567202193790816E-8	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9999729888480101	WITHOUT_CLASSIFICATION	2.7011151989835166E-5	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999998777362108	WITHOUT_CLASSIFICATION	1.2226378924237143E-7	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999996811686818	WITHOUT_CLASSIFICATION	3.188313182984642E-7	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999990342773047	WITHOUT_CLASSIFICATION	9.657226951770402E-7	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999987826065481	WITHOUT_CLASSIFICATION	1.2173934518820949E-6	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999982064146824	WITHOUT_CLASSIFICATION	1.7935853176589769E-6	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999991730687389	WITHOUT_CLASSIFICATION	8.269312611844344E-7	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.999998367459064	WITHOUT_CLASSIFICATION	1.632540936022357E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999994699072637	WITHOUT_CLASSIFICATION	5.300927362213846E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999994699072637	WITHOUT_CLASSIFICATION	5.300927362213846E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.999999480631572	WITHOUT_CLASSIFICATION	5.193684280054783E-7	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999993932830171	WITHOUT_CLASSIFICATION	6.067169829258578E-7	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9999984792666414	WITHOUT_CLASSIFICATION	1.5207333585373607E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999994699072637	WITHOUT_CLASSIFICATION	5.300927362213846E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.999999480631572	WITHOUT_CLASSIFICATION	5.193684280054783E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.999999480631572	WITHOUT_CLASSIFICATION	5.193684280054783E-7	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999994817889545	WITHOUT_CLASSIFICATION	5.1821104550587E-7	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999986527358707	WITHOUT_CLASSIFICATION	1.3472641292382265E-6	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999981683967627	WITHOUT_CLASSIFICATION	1.8316032372790636E-6	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999996507434954	WITHOUT_CLASSIFICATION	3.49256504599455E-7	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999981645405408	WITHOUT_CLASSIFICATION	1.8354594591059107E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999981645405408	WITHOUT_CLASSIFICATION	1.8354594591059107E-6	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999979902788436	WITHOUT_CLASSIFICATION	2.009721156372003E-6	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999982862513066	WITHOUT_CLASSIFICATION	1.7137486932978197E-6	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999983709086091	WITHOUT_CLASSIFICATION	1.629091390827594E-6	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999986542624147	WITHOUT_CLASSIFICATION	1.3457375852397583E-6	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999986542624147	WITHOUT_CLASSIFICATION	1.3457375852397583E-6	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999811600595467	WITHOUT_CLASSIFICATION	1.883994045327228E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.999999663743175	WITHOUT_CLASSIFICATION	3.362568251074047E-7	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999984620646458	WITHOUT_CLASSIFICATION	1.537935354148094E-6	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999999004782704	WITHOUT_CLASSIFICATION	9.952172964864951E-8	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999998684471757	WITHOUT_CLASSIFICATION	1.3155282431894354E-7	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999989234484443	WITHOUT_CLASSIFICATION	1.07655155571696E-6	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9999894474957011	WITHOUT_CLASSIFICATION	1.0552504298953721E-5	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999999029656046	WITHOUT_CLASSIFICATION	9.703439546932457E-8	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9999942056493757	WITHOUT_CLASSIFICATION	5.794350624343316E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999984620646458	WITHOUT_CLASSIFICATION	1.537935354148094E-6	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9999647480849081	WITHOUT_CLASSIFICATION	3.525191509184293E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999954901001189	WITHOUT_CLASSIFICATION	4.509899881054818E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999954901001189	WITHOUT_CLASSIFICATION	4.509899881054818E-6	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999999015649408	WITHOUT_CLASSIFICATION	9.843505927385958E-8	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999999755385297	WITHOUT_CLASSIFICATION	2.446147036009304E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999999901232977	WITHOUT_CLASSIFICATION	9.87670226904285E-9	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9999950982457979	WITHOUT_CLASSIFICATION	4.9017542021391784E-6	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9999922540405053	WITHOUT_CLASSIFICATION	7.745959494708942E-6	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9999782005901051	WITHOUT_CLASSIFICATION	2.179940989494378E-5	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.9999984023628118	WITHOUT_CLASSIFICATION	1.5976371881707932E-6	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.999999956285949	WITHOUT_CLASSIFICATION	4.3714050968992185E-8	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999975265264629	WITHOUT_CLASSIFICATION	2.473473537157279E-6	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999975265264629	WITHOUT_CLASSIFICATION	2.473473537157279E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999988986950992	WITHOUT_CLASSIFICATION	1.1013049008700552E-6	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999840639883826	WITHOUT_CLASSIFICATION	1.593601161747759E-5	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.99999868631513	WITHOUT_CLASSIFICATION	1.3136848699980603E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999961568206306	WITHOUT_CLASSIFICATION	3.8431793693304385E-6	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999991567385123	WITHOUT_CLASSIFICATION	8.432614877024808E-7	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.999997132292338	WITHOUT_CLASSIFICATION	2.8677076621059627E-6	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999983594765919	WITHOUT_CLASSIFICATION	1.6405234082060183E-6	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999982046202045	WITHOUT_CLASSIFICATION	1.795379795509085E-6	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999973676038285	WITHOUT_CLASSIFICATION	2.6323961714322424E-6	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999988783014039	WITHOUT_CLASSIFICATION	1.1216985961033647E-6	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999998566363557	WITHOUT_CLASSIFICATION	1.433636443464773E-7	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9999956314278949	WITHOUT_CLASSIFICATION	4.368572105015455E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999911973483532	WITHOUT_CLASSIFICATION	8.802651646922402E-6	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.999998720925079	WITHOUT_CLASSIFICATION	1.279074920948846E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.999999051719143	WITHOUT_CLASSIFICATION	9.482808568750878E-7	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.999999243816424	WITHOUT_CLASSIFICATION	7.561835759402232E-7	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.999999243816424	WITHOUT_CLASSIFICATION	7.561835759402232E-7	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9999983485944933	WITHOUT_CLASSIFICATION	1.6514055066866683E-6	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9999809495548423	WITHOUT_CLASSIFICATION	1.9050445157714946E-5	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999998579324237	WITHOUT_CLASSIFICATION	1.4206757624779615E-7	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999977539763147	WITHOUT_CLASSIFICATION	2.24602368529076E-6	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999986968372744	WITHOUT_CLASSIFICATION	1.303162725599181E-6	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999993060190632	WITHOUT_CLASSIFICATION	6.939809369006627E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999730324841175	WITHOUT_CLASSIFICATION	2.696751588244941E-5	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999994725605368	WITHOUT_CLASSIFICATION	5.274394632334304E-7	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999947819276221	WITHOUT_CLASSIFICATION	5.2180723779138555E-6	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999987057996929	WITHOUT_CLASSIFICATION	1.2942003071773058E-6	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999991657608422	WITHOUT_CLASSIFICATION	8.342391577697874E-7	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999975409362342	WITHOUT_CLASSIFICATION	2.459063765817065E-6	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.9999957045706289	WITHOUT_CLASSIFICATION	4.295429371156525E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999975959952725	WITHOUT_CLASSIFICATION	2.4040047274434333E-6	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.999999919250289	WITHOUT_CLASSIFICATION	8.074971101645383E-8	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999979144464187	WITHOUT_CLASSIFICATION	2.085553581236129E-6	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999745123682976	WITHOUT_CLASSIFICATION	2.548763170236554E-5	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999988394858769	WITHOUT_CLASSIFICATION	1.1605141231936396E-6	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.9999990665129583	WITHOUT_CLASSIFICATION	9.334870416510086E-7	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999961568206306	WITHOUT_CLASSIFICATION	3.8431793693304385E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999961568206306	WITHOUT_CLASSIFICATION	3.8431793693304385E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.999997132292338	WITHOUT_CLASSIFICATION	2.8677076621059627E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.999997132292338	WITHOUT_CLASSIFICATION	2.8677076621059627E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999911973483532	WITHOUT_CLASSIFICATION	8.802651646922402E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.999999243816424	WITHOUT_CLASSIFICATION	7.561835759402232E-7	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999975959952725	WITHOUT_CLASSIFICATION	2.4040047274434333E-6	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999983217774111	WITHOUT_CLASSIFICATION	1.6782225889425612E-6	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999989319587061	WITHOUT_CLASSIFICATION	1.0680412938627663E-6	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999992404900295	WITHOUT_CLASSIFICATION	7.59509970525157E-7	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999992039644953	WITHOUT_CLASSIFICATION	7.960355048691047E-7	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999973927191127	WITHOUT_CLASSIFICATION	2.607280887368487E-6	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999995688578441	WITHOUT_CLASSIFICATION	4.3114215585214523E-7	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.999996297356603	WITHOUT_CLASSIFICATION	3.7026433970583E-6	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.999996848976176	WITHOUT_CLASSIFICATION	3.1510238239485385E-6	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9999535575049932	WITHOUT_CLASSIFICATION	4.644249500690465E-5	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999861366547312	WITHOUT_CLASSIFICATION	1.3863345268814108E-5	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999920475849556	WITHOUT_CLASSIFICATION	7.952415044278508E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999920475849556	WITHOUT_CLASSIFICATION	7.952415044278508E-6	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.999999638454206	WITHOUT_CLASSIFICATION	3.615457939095939E-7	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999994138206698	WITHOUT_CLASSIFICATION	5.86179330112786E-7	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9999924054454453	WITHOUT_CLASSIFICATION	7.594554554668022E-6	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999982121519755	WITHOUT_CLASSIFICATION	1.7878480245121949E-6	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.999999542502894	WITHOUT_CLASSIFICATION	4.5749710588857885E-7	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999998006990631	WITHOUT_CLASSIFICATION	1.9930093691236248E-7	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999986007950529	WITHOUT_CLASSIFICATION	1.39920494714078E-6	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.999999878111053	WITHOUT_CLASSIFICATION	1.2188894702312972E-7	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999977270425046	WITHOUT_CLASSIFICATION	2.2729574954369663E-6	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999988381620447	WITHOUT_CLASSIFICATION	1.1618379552142138E-6	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999988381620447	WITHOUT_CLASSIFICATION	1.1618379552142138E-6	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999992790666603	WITHOUT_CLASSIFICATION	7.209333397831983E-7	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999988835418778	WITHOUT_CLASSIFICATION	1.1164581222109929E-6	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999992998956891	WITHOUT_CLASSIFICATION	7.001043108013469E-7	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.999999823094612	WITHOUT_CLASSIFICATION	1.76905388089108E-7	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999955050649165	WITHOUT_CLASSIFICATION	4.494935083427344E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.999997132292338	WITHOUT_CLASSIFICATION	2.8677076621059627E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999911973483532	WITHOUT_CLASSIFICATION	8.802651646922402E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.999999051719143	WITHOUT_CLASSIFICATION	9.482808568750878E-7	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999975959952725	WITHOUT_CLASSIFICATION	2.4040047274434333E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999975959952725	WITHOUT_CLASSIFICATION	2.4040047274434333E-6	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999998934523271	WITHOUT_CLASSIFICATION	1.0654767289397387E-7	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999998934523271	WITHOUT_CLASSIFICATION	1.0654767289397387E-7	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999987000436551	WITHOUT_CLASSIFICATION	1.2999563448963087E-6	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999973366494476	WITHOUT_CLASSIFICATION	2.6633505525351812E-6	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999973366494476	WITHOUT_CLASSIFICATION	2.6633505525351812E-6	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999979353428721	WITHOUT_CLASSIFICATION	2.064657128002412E-6	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.9999953179135047	WITHOUT_CLASSIFICATION	4.68208649522695E-6	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999986940104465	WITHOUT_CLASSIFICATION	1.3059895534588536E-6	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.999999297074705	WITHOUT_CLASSIFICATION	7.029252950444589E-7	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.999999835654285	WITHOUT_CLASSIFICATION	1.6434571495022398E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999946268368531	WITHOUT_CLASSIFICATION	5.373163146883222E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999946268368531	WITHOUT_CLASSIFICATION	5.373163146883222E-6	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.9999978993648726	WITHOUT_CLASSIFICATION	2.1006351273194067E-6	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999961534180711	WITHOUT_CLASSIFICATION	3.846581928934899E-6	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.9999980198584004	WITHOUT_CLASSIFICATION	1.9801415995737498E-6	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999942300006689	WITHOUT_CLASSIFICATION	5.7699993311719155E-6	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999968617715286	WITHOUT_CLASSIFICATION	3.1382284714687547E-6	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9999951537160353	WITHOUT_CLASSIFICATION	4.8462839646206815E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999976706695488	WITHOUT_CLASSIFICATION	2.329330451163533E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999959447247179	WITHOUT_CLASSIFICATION	4.055275282209671E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999959447247179	WITHOUT_CLASSIFICATION	4.055275282209671E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999968371248756	WITHOUT_CLASSIFICATION	3.1628751242623183E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999968371248756	WITHOUT_CLASSIFICATION	3.1628751242623183E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999971631730832	WITHOUT_CLASSIFICATION	2.8368269167649003E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999971631730832	WITHOUT_CLASSIFICATION	2.8368269167649003E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999994357484514	WITHOUT_CLASSIFICATION	5.642515484833188E-7	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999994357484514	WITHOUT_CLASSIFICATION	5.642515484833188E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999946268368531	WITHOUT_CLASSIFICATION	5.373163146883222E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999976706695488	WITHOUT_CLASSIFICATION	2.329330451163533E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999959447247179	WITHOUT_CLASSIFICATION	4.055275282209671E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999959447247179	WITHOUT_CLASSIFICATION	4.055275282209671E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999968371248756	WITHOUT_CLASSIFICATION	3.1628751242623183E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999971631730832	WITHOUT_CLASSIFICATION	2.8368269167649003E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999971631730832	WITHOUT_CLASSIFICATION	2.8368269167649003E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999994357484514	WITHOUT_CLASSIFICATION	5.642515484833188E-7	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999992666264645	WITHOUT_CLASSIFICATION	7.33373535348188E-7	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9999751428238052	WITHOUT_CLASSIFICATION	2.4857176194763345E-5	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.9999647657215216	WITHOUT_CLASSIFICATION	3.523427847832346E-5	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999994785886107	WITHOUT_CLASSIFICATION	5.214113892302937E-7	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999943808208099	WITHOUT_CLASSIFICATION	5.619179190102338E-6	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999957421508212	WITHOUT_CLASSIFICATION	4.2578491788398175E-6	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999982368993341	WITHOUT_CLASSIFICATION	1.7631006659453532E-6	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9999999468245213	WITHOUT_CLASSIFICATION	5.317547864330873E-8	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999958668684797	WITHOUT_CLASSIFICATION	4.1331315203480165E-6	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.999999955464036	WITHOUT_CLASSIFICATION	4.453596404619429E-8	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999996382712799	WITHOUT_CLASSIFICATION	3.617287200440174E-7	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999992718900444	WITHOUT_CLASSIFICATION	7.281099555926012E-7	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999875845471202	WITHOUT_CLASSIFICATION	1.2415452879886623E-5	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999957421508212	WITHOUT_CLASSIFICATION	4.2578491788398175E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9999245371547465	WITHOUT_CLASSIFICATION	7.546284525344149E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9999245371547465	WITHOUT_CLASSIFICATION	7.546284525344149E-5	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999999334126114	WITHOUT_CLASSIFICATION	6.658738861624734E-8	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999992135991077	WITHOUT_CLASSIFICATION	7.864008923653869E-7	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999992135991077	WITHOUT_CLASSIFICATION	7.864008923653869E-7	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999933886597994	WITHOUT_CLASSIFICATION	6.611340200647001E-6	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999993076395789	WITHOUT_CLASSIFICATION	6.923604211537547E-7	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999995729395944	WITHOUT_CLASSIFICATION	4.270604056057466E-7	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999990161429939	WITHOUT_CLASSIFICATION	9.838570060918327E-7	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999990161429939	WITHOUT_CLASSIFICATION	9.838570060918327E-7	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999998876008542	WITHOUT_CLASSIFICATION	1.1239914577749356E-7	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999999379842188	WITHOUT_CLASSIFICATION	6.201578113712553E-8	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999999379842188	WITHOUT_CLASSIFICATION	6.201578113712553E-8	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.999999562054502	WITHOUT_CLASSIFICATION	4.379454979881429E-7	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.999999421573647	WITHOUT_CLASSIFICATION	5.784263530079653E-7	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999978589088571	WITHOUT_CLASSIFICATION	2.1410911430101024E-6	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.999976802886989	WITHOUT_CLASSIFICATION	2.3197113010984778E-5	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999882003551808	WITHOUT_CLASSIFICATION	1.1799644819278337E-5	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9999874881613786	WITHOUT_CLASSIFICATION	1.2511838621429262E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999832282435835	WITHOUT_CLASSIFICATION	1.6771756416452673E-5	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999872680940599	WITHOUT_CLASSIFICATION	1.2731905940010542E-5	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9996092525470196	WITHOUT_CLASSIFICATION	3.907474529804039E-4	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.99998383527886	WITHOUT_CLASSIFICATION	1.616472113993242E-5	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999729332102854	WITHOUT_CLASSIFICATION	2.7066789714657317E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999693307899858	WITHOUT_CLASSIFICATION	3.0669210014112506E-5	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999995206516077	WITHOUT_CLASSIFICATION	4.793483922664083E-7	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999998530615958	WITHOUT_CLASSIFICATION	1.4693840427120706E-7	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999995818494212	WITHOUT_CLASSIFICATION	4.1815057881164746E-7	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999693307899858	WITHOUT_CLASSIFICATION	3.0669210014112506E-5	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999996977040586	WITHOUT_CLASSIFICATION	3.022959413284921E-7	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999991390382454	WITHOUT_CLASSIFICATION	8.609617546210439E-7	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.999978660583066	WITHOUT_CLASSIFICATION	2.1339416934086834E-5	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.9999849902372699	WITHOUT_CLASSIFICATION	1.5009762730193974E-5	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999767526872786	WITHOUT_CLASSIFICATION	2.324731272131274E-5	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999474538437549	WITHOUT_CLASSIFICATION	5.254615624514438E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999294869833818	WITHOUT_CLASSIFICATION	7.051301661818E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999776973227649	WITHOUT_CLASSIFICATION	2.230267723511534E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.999969405523087	WITHOUT_CLASSIFICATION	3.059447691310685E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999984781323801	WITHOUT_CLASSIFICATION	1.5218676199540119E-6	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.999995375695483	WITHOUT_CLASSIFICATION	4.624304516936782E-6	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999981280214859	WITHOUT_CLASSIFICATION	1.8719785140940433E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999844240758758	WITHOUT_CLASSIFICATION	1.5575924124133044E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999832282435835	WITHOUT_CLASSIFICATION	1.6771756416452673E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.999969405523087	WITHOUT_CLASSIFICATION	3.059447691310685E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.999995375695483	WITHOUT_CLASSIFICATION	4.624304516936782E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999844240758758	WITHOUT_CLASSIFICATION	1.5575924124133044E-5	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999998024527225	WITHOUT_CLASSIFICATION	1.9754727763287725E-7	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999849483436969	WITHOUT_CLASSIFICATION	1.5051656303086185E-5	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999996599358894	WITHOUT_CLASSIFICATION	3.4006411068580914E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999749427679178	WITHOUT_CLASSIFICATION	2.505723208220793E-5	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999893137792961	WITHOUT_CLASSIFICATION	1.0686220703937492E-5	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.9999989113381601	WITHOUT_CLASSIFICATION	1.088661839932392E-6	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.9999914431323097	WITHOUT_CLASSIFICATION	8.556867690238281E-6	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999999357979449	WITHOUT_CLASSIFICATION	6.420205510772938E-8	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999473228486652	WITHOUT_CLASSIFICATION	5.267715133472368E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999996259772179	WITHOUT_CLASSIFICATION	3.7402278213130333E-7	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999999796003731	WITHOUT_CLASSIFICATION	2.039962689659687E-8	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999996456987923	WITHOUT_CLASSIFICATION	3.5430120768190374E-7	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999984056659913	WITHOUT_CLASSIFICATION	1.5943340087199778E-6	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999999787679423	WITHOUT_CLASSIFICATION	2.1232057666726985E-8	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999881245297427	WITHOUT_CLASSIFICATION	1.187547025719718E-5	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999714215694842	WITHOUT_CLASSIFICATION	2.85784305158156E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999841210961554	WITHOUT_CLASSIFICATION	1.5878903844605178E-5	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999986791338115	WITHOUT_CLASSIFICATION	1.320866188493135E-6	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.999980996968205	WITHOUT_CLASSIFICATION	1.9003031795015575E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.999969405523087	WITHOUT_CLASSIFICATION	3.059447691310685E-5	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999996267730552	WITHOUT_CLASSIFICATION	3.7322694480582267E-7	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999975740815468	WITHOUT_CLASSIFICATION	2.425918453340935E-6	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999976453462106	WITHOUT_CLASSIFICATION	2.354653789487338E-6	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9999997549654184	WITHOUT_CLASSIFICATION	2.450345816291444E-7	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999996105834154	WITHOUT_CLASSIFICATION	3.894165846940675E-7	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999971384160203	WITHOUT_CLASSIFICATION	2.861583979686369E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999989382390977	WITHOUT_CLASSIFICATION	1.0617609023335198E-6	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999998284799033	WITHOUT_CLASSIFICATION	1.7152009657486754E-7	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999808207205455	WITHOUT_CLASSIFICATION	1.9179279454512693E-5	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999748357295702	WITHOUT_CLASSIFICATION	2.516427042965016E-5	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999917777890186	WITHOUT_CLASSIFICATION	8.222210981329474E-6	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999851121921375	WITHOUT_CLASSIFICATION	1.4887807862468152E-5	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9999987088004612	WITHOUT_CLASSIFICATION	1.291199538744806E-6	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.999999981244674	WITHOUT_CLASSIFICATION	1.875532594943206E-8	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.999999148238693	WITHOUT_CLASSIFICATION	8.517613071540375E-7	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999993443923291	WITHOUT_CLASSIFICATION	6.556076709183956E-7	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9999967217927095	WITHOUT_CLASSIFICATION	3.2782072905621307E-6	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999991593333364	WITHOUT_CLASSIFICATION	8.40666663719337E-7	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999991886334142	WITHOUT_CLASSIFICATION	8.113665858508027E-7	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999994684746567	WITHOUT_CLASSIFICATION	5.315253433727495E-7	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999331028055	WITHOUT_CLASSIFICATION	6.689719446585934E-8	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999996106402722	WITHOUT_CLASSIFICATION	3.893597278008968E-7	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999978179172936	WITHOUT_CLASSIFICATION	2.182082706462126E-6	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9999889058904996	WITHOUT_CLASSIFICATION	1.1094109500329332E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999621350090321	WITHOUT_CLASSIFICATION	3.7864990967926446E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999621350090321	WITHOUT_CLASSIFICATION	3.7864990967926446E-5	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999894547076548	WITHOUT_CLASSIFICATION	1.0545292345159214E-5	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999994979085027	WITHOUT_CLASSIFICATION	5.020914972025425E-7	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999877016757911	WITHOUT_CLASSIFICATION	1.2298324208943878E-5	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999963263418191	WITHOUT_CLASSIFICATION	3.673658180903927E-6	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9999898421570201	WITHOUT_CLASSIFICATION	1.0157842979899941E-5	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9999938305584951	WITHOUT_CLASSIFICATION	6.169441504938117E-6	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999996664030953	WITHOUT_CLASSIFICATION	3.335969046888652E-7	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999999726450844	WITHOUT_CLASSIFICATION	2.735491550059055E-8	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9999860691049389	WITHOUT_CLASSIFICATION	1.393089506096864E-5	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999768958433781	WITHOUT_CLASSIFICATION	2.310415662198271E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.9999914620153015	WITHOUT_CLASSIFICATION	8.537984698563687E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999992985124262	WITHOUT_CLASSIFICATION	7.014875737800522E-7	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.999999842048474	WITHOUT_CLASSIFICATION	1.5795152589582372E-7	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9999874021188497	WITHOUT_CLASSIFICATION	1.2597881150190143E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979422667329	WITHOUT_CLASSIFICATION	2.0577332670372554E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999981739407385	WITHOUT_CLASSIFICATION	1.8260592614863192E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999998161902748	WITHOUT_CLASSIFICATION	1.838097252263993E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999982664015505	WITHOUT_CLASSIFICATION	1.7335984493624234E-6	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9999989744704103	WITHOUT_CLASSIFICATION	1.0255295896826934E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999995153865281	WITHOUT_CLASSIFICATION	4.846134718036283E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999942657204332	WITHOUT_CLASSIFICATION	5.734279566892751E-6	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999942657204332	WITHOUT_CLASSIFICATION	5.734279566892751E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999779590199519	WITHOUT_CLASSIFICATION	2.204098004807393E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999779590199519	WITHOUT_CLASSIFICATION	2.204098004807393E-5	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999978179172936	WITHOUT_CLASSIFICATION	2.182082706462126E-6	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999962882532194	WITHOUT_CLASSIFICATION	3.711746780571525E-6	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999813120606326	WITHOUT_CLASSIFICATION	1.8687939367403676E-5	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999964109598448	WITHOUT_CLASSIFICATION	3.5890401552463086E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999988986950992	WITHOUT_CLASSIFICATION	1.1013049008700552E-6	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999813120606326	WITHOUT_CLASSIFICATION	1.8687939367403676E-5	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999964109598448	WITHOUT_CLASSIFICATION	3.5890401552463086E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999815855812765	WITHOUT_CLASSIFICATION	1.8414418723473755E-5	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.999996799628488	WITHOUT_CLASSIFICATION	3.2003715120777384E-6	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999962553283238	WITHOUT_CLASSIFICATION	3.744671676118542E-6	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.999997721236177	WITHOUT_CLASSIFICATION	2.2787638229420734E-6	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9999995171656173	WITHOUT_CLASSIFICATION	4.828343826705371E-7	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9999956481383036	WITHOUT_CLASSIFICATION	4.351861696449458E-6	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999973245897723	WITHOUT_CLASSIFICATION	2.675410227710052E-6	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999823161757162	WITHOUT_CLASSIFICATION	1.7683824283839315E-5	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999902334638078	WITHOUT_CLASSIFICATION	9.766536192140404E-6	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999999619243229	WITHOUT_CLASSIFICATION	3.8075677176232433E-8	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999972777761641	WITHOUT_CLASSIFICATION	2.7222238359598985E-6	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999997870062457	WITHOUT_CLASSIFICATION	2.1299375439185284E-7	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.999999493607561	WITHOUT_CLASSIFICATION	5.063924389375329E-7	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9999953479432204	WITHOUT_CLASSIFICATION	4.652056779545277E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999988986950992	WITHOUT_CLASSIFICATION	1.1013049008700552E-6	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9999964486724306	WITHOUT_CLASSIFICATION	3.5513275693456095E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999902405523027	WITHOUT_CLASSIFICATION	9.759447697420395E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999902405523027	WITHOUT_CLASSIFICATION	9.759447697420395E-6	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999999557627235	WITHOUT_CLASSIFICATION	4.423727651210404E-8	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999815855812765	WITHOUT_CLASSIFICATION	1.8414418723473755E-5	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9999990765290322	WITHOUT_CLASSIFICATION	9.234709678570511E-7	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.999999969597355	WITHOUT_CLASSIFICATION	3.040264497432709E-8	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9999951111355547	WITHOUT_CLASSIFICATION	4.888864445262084E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999850260570267	WITHOUT_CLASSIFICATION	1.4973942973305975E-5	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999884762398664	WITHOUT_CLASSIFICATION	1.1523760133647183E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999815855812765	WITHOUT_CLASSIFICATION	1.8414418723473755E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999850260570267	WITHOUT_CLASSIFICATION	1.4973942973305975E-5	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999884762398664	WITHOUT_CLASSIFICATION	1.1523760133647183E-5	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9999656549756427	WITHOUT_CLASSIFICATION	3.434502435738735E-5	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999936124706563	WITHOUT_CLASSIFICATION	6.387529343609853E-6	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999987792380411	WITHOUT_CLASSIFICATION	1.2207619589490374E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999815855812765	WITHOUT_CLASSIFICATION	1.8414418723473755E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999815855812765	WITHOUT_CLASSIFICATION	1.8414418723473755E-5	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999957495324459	WITHOUT_CLASSIFICATION	4.250467554146476E-6	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999980285739267	WITHOUT_CLASSIFICATION	1.9714260732728216E-6	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999846052316045	WITHOUT_CLASSIFICATION	1.5394768395488742E-5	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999995388612818	WITHOUT_CLASSIFICATION	4.611387180859854E-7	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999895303798327	WITHOUT_CLASSIFICATION	1.0469620167255766E-5	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999992505740454	WITHOUT_CLASSIFICATION	7.494259546916806E-7	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.999999914111619	WITHOUT_CLASSIFICATION	8.588838093429772E-8	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999991058505244	WITHOUT_CLASSIFICATION	8.941494756224726E-7	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999990725967027	WITHOUT_CLASSIFICATION	9.27403297240904E-7	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9999974787353721	WITHOUT_CLASSIFICATION	2.521264627899762E-6	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.99999945986205	WITHOUT_CLASSIFICATION	5.401379500882287E-7	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999990872923502	WITHOUT_CLASSIFICATION	9.127076497885831E-7	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999997839417786	WITHOUT_CLASSIFICATION	2.1605822133997673E-7	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.999999807543222	WITHOUT_CLASSIFICATION	1.9245677796624926E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999974925751299	WITHOUT_CLASSIFICATION	2.5074248701442405E-6	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999999719595944	WITHOUT_CLASSIFICATION	2.8040405562508636E-8	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999959180191738	WITHOUT_CLASSIFICATION	4.081980826223583E-6	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9999769295094698	WITHOUT_CLASSIFICATION	2.3070490530224463E-5	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9998689439788984	WITHOUT_CLASSIFICATION	1.310560211015974E-4	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9999997008348138	WITHOUT_CLASSIFICATION	2.99165186225596E-7	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999939235940238	WITHOUT_CLASSIFICATION	6.076405976135407E-6	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999785910354271	WITHOUT_CLASSIFICATION	2.1408964572994972E-5	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999785910354271	WITHOUT_CLASSIFICATION	2.1408964572994972E-5	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999959180191738	WITHOUT_CLASSIFICATION	4.081980826223583E-6	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999995565525578	WITHOUT_CLASSIFICATION	4.4344744218466843E-7	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999997834186111	WITHOUT_CLASSIFICATION	2.1658138892033613E-7	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9999973683958295	WITHOUT_CLASSIFICATION	2.6316041703501605E-6	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999884167765957	WITHOUT_CLASSIFICATION	1.1583223404251926E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999935848741744	WITHOUT_CLASSIFICATION	6.415125825489797E-6	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999993679247484	WITHOUT_CLASSIFICATION	6.320752515950563E-7	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999995596266924	WITHOUT_CLASSIFICATION	4.4037330769342595E-7	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999996540849506	WITHOUT_CLASSIFICATION	3.4591504940741814E-7	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999831090614	WITHOUT_CLASSIFICATION	1.689093858144404E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999888272033675	WITHOUT_CLASSIFICATION	1.117279663256284E-5	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999991604205274	WITHOUT_CLASSIFICATION	8.39579472546821E-7	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999979276301701	WITHOUT_CLASSIFICATION	2.072369829849004E-6	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999773491914221	WITHOUT_CLASSIFICATION	2.2650808577828094E-5	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999999555616547	WITHOUT_CLASSIFICATION	4.443834540908098E-8	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997988190252	WITHOUT_CLASSIFICATION	2.0118097482256266E-7	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9999972121204584	WITHOUT_CLASSIFICATION	2.7878795415835018E-6	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999999339031754	WITHOUT_CLASSIFICATION	6.609682458050358E-8	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9997865085577236	WITHOUT_CLASSIFICATION	2.1349144227653075E-4	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993365976431	WITHOUT_CLASSIFICATION	6.634023569057185E-7	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999996511204177	WITHOUT_CLASSIFICATION	3.4887958239471667E-7	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9999992025450587	WITHOUT_CLASSIFICATION	7.974549413420526E-7	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999993763525072	WITHOUT_CLASSIFICATION	6.236474926920529E-7	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992346362121	WITHOUT_CLASSIFICATION	7.653637879783586E-7	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984388099881	WITHOUT_CLASSIFICATION	1.5611900119582453E-6	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957883220445	WITHOUT_CLASSIFICATION	4.211677955582613E-6	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999978121213615	WITHOUT_CLASSIFICATION	2.1878786384859505E-6	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999887838228461	WITHOUT_CLASSIFICATION	1.1216177153921585E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914863387959	WITHOUT_CLASSIFICATION	8.513661204217813E-6	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999884711714936	WITHOUT_CLASSIFICATION	1.1528828506320848E-5	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983043386463	WITHOUT_CLASSIFICATION	1.6956613537031108E-6	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9999988151561746	WITHOUT_CLASSIFICATION	1.184843825386755E-6	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9999984161101994	WITHOUT_CLASSIFICATION	1.5838898006900852E-6	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984572835632	WITHOUT_CLASSIFICATION	1.5427164368298886E-6	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993521565098	WITHOUT_CLASSIFICATION	6.478434901254173E-7	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988000632076	WITHOUT_CLASSIFICATION	1.199936792350503E-6	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999970709270972	WITHOUT_CLASSIFICATION	2.9290729027188517E-6	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942913544971	WITHOUT_CLASSIFICATION	5.708645502837266E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985766465452	WITHOUT_CLASSIFICATION	1.4233534547193162E-6	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972590435325	WITHOUT_CLASSIFICATION	2.740956467413238E-6	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999866990542684	WITHOUT_CLASSIFICATION	1.3300945731505419E-5	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.999995882183394	WITHOUT_CLASSIFICATION	4.117816605935889E-6	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992957861756	WITHOUT_CLASSIFICATION	7.042138243243239E-7	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9999994755627041	WITHOUT_CLASSIFICATION	5.244372958133136E-7	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999988385346177	WITHOUT_CLASSIFICATION	1.161465382252244E-6	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999998712490391	WITHOUT_CLASSIFICATION	1.2875096092665193E-7	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999969014624938	WITHOUT_CLASSIFICATION	3.0985375062286535E-6	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9999679343433716	WITHOUT_CLASSIFICATION	3.2065656628430996E-5	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999966321507965	WITHOUT_CLASSIFICATION	3.3678492034793894E-6	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9999816144298402	WITHOUT_CLASSIFICATION	1.8385570159767785E-5	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999862951466305	WITHOUT_CLASSIFICATION	1.370485336938216E-5	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999884128844843	WITHOUT_CLASSIFICATION	1.1587115515766111E-5	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999731704689184	WITHOUT_CLASSIFICATION	2.6829531081666606E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999857885948082	WITHOUT_CLASSIFICATION	1.4211405191643423E-5	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999823969898757	WITHOUT_CLASSIFICATION	1.7603010124253165E-5	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999996779860907	WITHOUT_CLASSIFICATION	3.220139093215868E-7	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999995729714501	WITHOUT_CLASSIFICATION	4.270285498178149E-7	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9999978687077153	WITHOUT_CLASSIFICATION	2.131292284715939E-6	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999900703242796	WITHOUT_CLASSIFICATION	9.929675720414848E-6	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999988365246645	WITHOUT_CLASSIFICATION	1.1634753355923547E-6	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972401411645	WITHOUT_CLASSIFICATION	2.759858835555176E-6	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999945295834736	WITHOUT_CLASSIFICATION	5.470416526486569E-6	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999833451625566	WITHOUT_CLASSIFICATION	1.6654837443323112E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999970608622339	WITHOUT_CLASSIFICATION	2.939137766105922E-6	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999992355037559	WITHOUT_CLASSIFICATION	7.64496244224457E-7	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.99999993298965	WITHOUT_CLASSIFICATION	6.701035007925564E-8	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.999999403528885	WITHOUT_CLASSIFICATION	5.964711150723715E-7	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999993733452857	WITHOUT_CLASSIFICATION	6.266547142963801E-7	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989448437878	WITHOUT_CLASSIFICATION	1.0551562121613656E-6	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999961728726217	WITHOUT_CLASSIFICATION	3.827127378254195E-6	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9999986512193665	WITHOUT_CLASSIFICATION	1.348780633442907E-6	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999964203780867	WITHOUT_CLASSIFICATION	3.5796219133558463E-6	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999999487040713	WITHOUT_CLASSIFICATION	5.1295928702307503E-8	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999994528082375	WITHOUT_CLASSIFICATION	5.471917623383674E-7	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999999791318802	WITHOUT_CLASSIFICATION	2.0868119742768264E-8	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999976913254435	WITHOUT_CLASSIFICATION	2.3086745564776106E-6	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999950203452855	WITHOUT_CLASSIFICATION	4.979654714432457E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999969014624938	WITHOUT_CLASSIFICATION	3.0985375062286535E-6	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999996430874946	WITHOUT_CLASSIFICATION	3.569125054773708E-7	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999995201979939	WITHOUT_CLASSIFICATION	4.79802006211754E-7	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999987897182744	WITHOUT_CLASSIFICATION	1.2102817256105204E-6	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999986912999133	WITHOUT_CLASSIFICATION	1.30870008679907E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999997509602829	WITHOUT_CLASSIFICATION	2.4903971708370643E-7	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999983494607451	WITHOUT_CLASSIFICATION	1.6505392549172204E-6	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9999946016270264	WITHOUT_CLASSIFICATION	5.3983729736713125E-6	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.999997828713098	WITHOUT_CLASSIFICATION	2.17128690207743E-6	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999990575409097	WITHOUT_CLASSIFICATION	9.424590902509833E-7	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999998061252885	WITHOUT_CLASSIFICATION	1.9387471154693957E-7	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999997228397576	WITHOUT_CLASSIFICATION	2.7716024240037935E-7	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999997911887785	WITHOUT_CLASSIFICATION	2.0881122153363437E-7	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.999999914654112	WITHOUT_CLASSIFICATION	8.534588806104335E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999997485532884	WITHOUT_CLASSIFICATION	2.5144671154434347E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999999075133859	WITHOUT_CLASSIFICATION	9.248661417444706E-8	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999990035311073	WITHOUT_CLASSIFICATION	9.964688926852477E-7	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9999824965077322	WITHOUT_CLASSIFICATION	1.7503492267814495E-5	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999990941612699	WITHOUT_CLASSIFICATION	9.058387301286046E-7	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.999999900370506	WITHOUT_CLASSIFICATION	9.962949400572032E-8	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999951872699289	WITHOUT_CLASSIFICATION	4.8127300711626956E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999991874561924	WITHOUT_CLASSIFICATION	8.125438076114158E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9999977669949542	WITHOUT_CLASSIFICATION	2.233005045737568E-6	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999988103132356	WITHOUT_CLASSIFICATION	1.189686764455384E-6	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999693377246651	WITHOUT_CLASSIFICATION	3.066227533483471E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9999998323355307	WITHOUT_CLASSIFICATION	1.6766446921328842E-7	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999984811257118	WITHOUT_CLASSIFICATION	1.5188742881495842E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998064122167077	WITHOUT_CLASSIFICATION	1.9358778329226146E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999913147409617	WITHOUT_CLASSIFICATION	8.685259038246383E-6	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9999882763546704	WITHOUT_CLASSIFICATION	1.1723645329654886E-5	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999994796756827	WITHOUT_CLASSIFICATION	5.203243172790538E-7	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999969014624938	WITHOUT_CLASSIFICATION	3.0985375062286535E-6	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.999999961206682	WITHOUT_CLASSIFICATION	3.879331794345144E-8	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999999914075726	WITHOUT_CLASSIFICATION	8.592427385882645E-9	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999991094038739	WITHOUT_CLASSIFICATION	8.905961260377349E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999969014624938	WITHOUT_CLASSIFICATION	3.0985375062286535E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999842825851236	WITHOUT_CLASSIFICATION	1.571741487638818E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999991874561924	WITHOUT_CLASSIFICATION	8.125438076114158E-7	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9999975587917679	WITHOUT_CLASSIFICATION	2.441208232108727E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9999992038479492	WITHOUT_CLASSIFICATION	7.961520508462787E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999999348587204	WITHOUT_CLASSIFICATION	6.514127953675857E-8	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999998061252885	WITHOUT_CLASSIFICATION	1.9387471154693957E-7	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999997228397576	WITHOUT_CLASSIFICATION	2.7716024240037935E-7	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999997911887785	WITHOUT_CLASSIFICATION	2.0881122153363437E-7	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999995850499583	WITHOUT_CLASSIFICATION	4.149500416299053E-7	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999927161991246	WITHOUT_CLASSIFICATION	7.283800875475524E-6	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999855691690451	WITHOUT_CLASSIFICATION	1.4430830955004193E-5	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.999998811303937	WITHOUT_CLASSIFICATION	1.188696062943621E-6	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999998530370593	WITHOUT_CLASSIFICATION	1.469629408104777E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999969014624938	WITHOUT_CLASSIFICATION	3.0985375062286535E-6	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.999999914654112	WITHOUT_CLASSIFICATION	8.534588806104335E-8	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999997485532884	WITHOUT_CLASSIFICATION	2.5144671154434347E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999992642634253	WITHOUT_CLASSIFICATION	7.35736574706431E-6	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979369843237	WITHOUT_CLASSIFICATION	2.063015676290554E-6	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999992518158399	WITHOUT_CLASSIFICATION	7.481841599897485E-7	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999968017342219	WITHOUT_CLASSIFICATION	3.198265778196809E-6	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9999959296055195	WITHOUT_CLASSIFICATION	4.070394480485904E-6	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999999395853004	WITHOUT_CLASSIFICATION	6.041469953621517E-8	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999866990542684	WITHOUT_CLASSIFICATION	1.3300945731505419E-5	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999885532204698	WITHOUT_CLASSIFICATION	1.1446779530269121E-5	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999992834211675	WITHOUT_CLASSIFICATION	7.165788325235642E-7	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999977436416032	WITHOUT_CLASSIFICATION	2.2563583966924172E-6	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999996580813788	WITHOUT_CLASSIFICATION	3.4191862113574175E-7	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999996465971319	WITHOUT_CLASSIFICATION	3.53402868060117E-7	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999887838228461	WITHOUT_CLASSIFICATION	1.1216177153921585E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914863387959	WITHOUT_CLASSIFICATION	8.513661204217813E-6	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993521565098	WITHOUT_CLASSIFICATION	6.478434901254173E-7	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999996465971319	WITHOUT_CLASSIFICATION	3.53402868060117E-7	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.999999141152768	WITHOUT_CLASSIFICATION	8.588472318952924E-7	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.999999372305277	WITHOUT_CLASSIFICATION	6.27694723085038E-7	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996383640688	WITHOUT_CLASSIFICATION	3.616359312156002E-6	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999904759845957	WITHOUT_CLASSIFICATION	9.524015404260082E-6	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999998416917351	WITHOUT_CLASSIFICATION	1.5830826493887972E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.9998487327724356	WITHOUT_CLASSIFICATION	1.5126722756445967E-4	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988000632076	WITHOUT_CLASSIFICATION	1.199936792350503E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985766465452	WITHOUT_CLASSIFICATION	1.4233534547193162E-6	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999999487040713	WITHOUT_CLASSIFICATION	5.1295928702307503E-8	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999978420758779	WITHOUT_CLASSIFICATION	2.1579241220807305E-6	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999999082260781	WITHOUT_CLASSIFICATION	9.177392187558814E-8	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999992460172624	WITHOUT_CLASSIFICATION	7.539827375530502E-7	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999870153134451	WITHOUT_CLASSIFICATION	1.2984686554965715E-5	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999998036620212	WITHOUT_CLASSIFICATION	1.963379787324971E-7	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999994187651613	WITHOUT_CLASSIFICATION	5.812348386650109E-7	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9999855406072242	WITHOUT_CLASSIFICATION	1.4459392775818451E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998360727124121	WITHOUT_CLASSIFICATION	1.63927287587913E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999831090614	WITHOUT_CLASSIFICATION	1.689093858144404E-8	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999982063797894	WITHOUT_CLASSIFICATION	1.7936202106157854E-6	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999996862361906	WITHOUT_CLASSIFICATION	3.137638093792288E-7	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999992878576573	WITHOUT_CLASSIFICATION	7.121423426167407E-7	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999960642323695	WITHOUT_CLASSIFICATION	3.9357676305578595E-6	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999996818017238	WITHOUT_CLASSIFICATION	3.181982761752349E-7	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999871898845287	WITHOUT_CLASSIFICATION	1.2810115471369252E-5	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999965069755137	WITHOUT_CLASSIFICATION	3.493024486290313E-6	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979613062661	WITHOUT_CLASSIFICATION	2.038693734039315E-6	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999999790975821	WITHOUT_CLASSIFICATION	2.0902417898382968E-7	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999996601254307	WITHOUT_CLASSIFICATION	3.398745693466393E-7	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.999205564865966	WITHOUT_CLASSIFICATION	7.944351340340296E-4	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999994587775419	WITHOUT_CLASSIFICATION	5.412224580993894E-7	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999995898137949	WITHOUT_CLASSIFICATION	4.101862051054724E-7	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999995503938208	WITHOUT_CLASSIFICATION	4.496061792001593E-7	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999997589023121	WITHOUT_CLASSIFICATION	2.4109768793561426E-7	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999997433468311	WITHOUT_CLASSIFICATION	2.566531690124872E-7	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999912507961316	WITHOUT_CLASSIFICATION	8.749203868288547E-6	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999997471209812	WITHOUT_CLASSIFICATION	2.528790187990605E-7	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999918399239746	WITHOUT_CLASSIFICATION	8.160076025435001E-6	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999998512384143	WITHOUT_CLASSIFICATION	1.4876158576498846E-7	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992773066354	WITHOUT_CLASSIFICATION	7.226933645695071E-7	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999998893957308	WITHOUT_CLASSIFICATION	1.106042692320792E-7	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999998326928559	WITHOUT_CLASSIFICATION	1.673071441099665E-7	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999990178788246	WITHOUT_CLASSIFICATION	9.821211754045528E-7	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9999993757728323	WITHOUT_CLASSIFICATION	6.242271677900795E-7	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999886846379087	WITHOUT_CLASSIFICATION	1.1315362091337107E-5	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999889837160727	WITHOUT_CLASSIFICATION	1.1016283927345042E-5	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999999025644407	WITHOUT_CLASSIFICATION	9.743555923133598E-8	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999999008416998	WITHOUT_CLASSIFICATION	9.915830022347719E-8	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999958312005226	WITHOUT_CLASSIFICATION	4.168799477455846E-6	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999998586697509	WITHOUT_CLASSIFICATION	1.4133024900239166E-7	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999996077880157	WITHOUT_CLASSIFICATION	3.922119843336258E-7	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999977984639449	WITHOUT_CLASSIFICATION	2.2015360550584703E-6	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999993738068478	WITHOUT_CLASSIFICATION	6.261931521628687E-7	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.999999315904472	WITHOUT_CLASSIFICATION	6.840955280895731E-7	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999984434822035	WITHOUT_CLASSIFICATION	1.5565177965008747E-6	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999998582906902	WITHOUT_CLASSIFICATION	1.4170930982616854E-7	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999980392579604	WITHOUT_CLASSIFICATION	1.9607420396204955E-6	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999895307678742	WITHOUT_CLASSIFICATION	1.0469232125715104E-5	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999997865391866	WITHOUT_CLASSIFICATION	2.134608133513812E-7	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.999999985633552	WITHOUT_CLASSIFICATION	1.4366447944261786E-8	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.99998779797076	WITHOUT_CLASSIFICATION	1.2202029239991976E-5	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9999962264576987	WITHOUT_CLASSIFICATION	3.773542301307028E-6	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999987928256721	WITHOUT_CLASSIFICATION	1.2071743280109849E-6	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9999957114038235	WITHOUT_CLASSIFICATION	4.288596176575701E-6	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999992732112937	WITHOUT_CLASSIFICATION	7.267887062706318E-7	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999995389744296	WITHOUT_CLASSIFICATION	4.6102557032586873E-7	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999998297852583	WITHOUT_CLASSIFICATION	1.702147417443914E-7	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999981110294814	WITHOUT_CLASSIFICATION	1.8889705185375528E-6	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999996135613042	WITHOUT_CLASSIFICATION	3.8643869586633174E-7	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.999999898167019	WITHOUT_CLASSIFICATION	1.0183298107885122E-7	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999998026784419	WITHOUT_CLASSIFICATION	1.9732155804414787E-7	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999992568855387	WITHOUT_CLASSIFICATION	7.431144612564913E-7	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999995426313965	WITHOUT_CLASSIFICATION	4.5736860349058744E-7	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999999494204324	WITHOUT_CLASSIFICATION	5.0579567661216376E-8	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9999998773544138	WITHOUT_CLASSIFICATION	1.22645586296606E-7	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999973910266207	WITHOUT_CLASSIFICATION	2.6089733792248458E-6	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.999998604350507	WITHOUT_CLASSIFICATION	1.3956494930377416E-6	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999949851479046	WITHOUT_CLASSIFICATION	5.0148520954294885E-6	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999974246239782	WITHOUT_CLASSIFICATION	2.5753760218585146E-6	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.9999903656664048	WITHOUT_CLASSIFICATION	9.634333595218533E-6	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999850456836376	WITHOUT_CLASSIFICATION	1.4954316362346416E-5	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999989107673523	WITHOUT_CLASSIFICATION	1.089232647791556E-6	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999993012833643	WITHOUT_CLASSIFICATION	6.987166355614722E-7	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9999965275242123	WITHOUT_CLASSIFICATION	3.472475787688904E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.999998908611014	WITHOUT_CLASSIFICATION	1.0913889859475897E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999966852512224	WITHOUT_CLASSIFICATION	3.31474877751431E-6	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999983190191163	WITHOUT_CLASSIFICATION	1.6809808836234998E-6	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9999845076414842	WITHOUT_CLASSIFICATION	1.549235851583582E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9999874494586541	WITHOUT_CLASSIFICATION	1.255054134578157E-5	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999997148344645	WITHOUT_CLASSIFICATION	2.8516553545112886E-7	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999992733419383	WITHOUT_CLASSIFICATION	7.266580617018659E-7	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999983577735778	WITHOUT_CLASSIFICATION	1.6422264221128162E-6	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.999999149161415	WITHOUT_CLASSIFICATION	8.508385849147622E-7	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999941716159924	WITHOUT_CLASSIFICATION	5.82838400760097E-6	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9999733299184247	WITHOUT_CLASSIFICATION	2.6670081575289906E-5	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999963319494093	WITHOUT_CLASSIFICATION	3.668050590738201E-6	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999920501263837	WITHOUT_CLASSIFICATION	7.949873616238217E-6	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999941792125603	WITHOUT_CLASSIFICATION	5.820787439651572E-6	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999872737320804	WITHOUT_CLASSIFICATION	1.2726267919642573E-5	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9999610182118801	WITHOUT_CLASSIFICATION	3.8981788119928E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999830582396237	WITHOUT_CLASSIFICATION	1.6941760376272355E-5	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999993370794323	WITHOUT_CLASSIFICATION	6.629205676375709E-7	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999562121122327	WITHOUT_CLASSIFICATION	4.378788776738664E-5	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999807838455477	WITHOUT_CLASSIFICATION	1.921615445225934E-5	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9999710474046749	WITHOUT_CLASSIFICATION	2.895259532510594E-5	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.99996012094976	WITHOUT_CLASSIFICATION	3.9879050240034506E-5	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.999987233269756	WITHOUT_CLASSIFICATION	1.2766730243880297E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.999997453619393	WITHOUT_CLASSIFICATION	2.54638060700596E-6	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.999999965259499	WITHOUT_CLASSIFICATION	3.474050104359246E-8	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999968208848735	WITHOUT_CLASSIFICATION	3.179115126458459E-6	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.9999640218171141	WITHOUT_CLASSIFICATION	3.597818288599593E-5	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999921111139345	WITHOUT_CLASSIFICATION	7.888886065502938E-6	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999968208848735	WITHOUT_CLASSIFICATION	3.179115126458459E-6	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999997057955268	WITHOUT_CLASSIFICATION	2.942044731618575E-7	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999992649331914	WITHOUT_CLASSIFICATION	7.350668085178938E-7	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.999998837310168	WITHOUT_CLASSIFICATION	1.1626898319331507E-6	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9999993097430995	WITHOUT_CLASSIFICATION	6.90256900551217E-7	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.9999987575429338	WITHOUT_CLASSIFICATION	1.2424570662259919E-6	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999993592493067	WITHOUT_CLASSIFICATION	6.407506933663948E-7	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9998339658746779	WITHOUT_CLASSIFICATION	1.6603412532214073E-4	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999994595161176	WITHOUT_CLASSIFICATION	5.404838824165826E-7	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999998208254718	WITHOUT_CLASSIFICATION	1.791745281889801E-7	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999682011414213	WITHOUT_CLASSIFICATION	3.1798858578693225E-5	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999919570817375	WITHOUT_CLASSIFICATION	8.04291826246404E-6	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999996102095373	WITHOUT_CLASSIFICATION	3.8979046263043935E-7	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999999127991729	WITHOUT_CLASSIFICATION	8.720082713669707E-8	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999992553616958	WITHOUT_CLASSIFICATION	7.446383042776651E-7	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999280789159	WITHOUT_CLASSIFICATION	7.192108405039699E-8	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9999991724431505	WITHOUT_CLASSIFICATION	8.275568494727224E-7	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999835167265033	WITHOUT_CLASSIFICATION	1.64832734966446E-5	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999835167265033	WITHOUT_CLASSIFICATION	1.64832734966446E-5	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999997632038483	WITHOUT_CLASSIFICATION	2.367961517599541E-7	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9999576538187108	WITHOUT_CLASSIFICATION	4.234618128930662E-5	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9999549190602466	WITHOUT_CLASSIFICATION	4.5080939753332E-5	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.9999821585833019	WITHOUT_CLASSIFICATION	1.7841416698143565E-5	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999981908855305	WITHOUT_CLASSIFICATION	1.8091144695084233E-6	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9999918980074387	WITHOUT_CLASSIFICATION	8.1019925613874E-6	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999867872435991	WITHOUT_CLASSIFICATION	1.3212756400836417E-5	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999998785250965	WITHOUT_CLASSIFICATION	1.2147490352087162E-7	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999988383371753	WITHOUT_CLASSIFICATION	1.1616628247368154E-6	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999986909497189	WITHOUT_CLASSIFICATION	1.309050281004875E-6	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9999996795796783	WITHOUT_CLASSIFICATION	3.204203216058415E-7	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999995563977919	WITHOUT_CLASSIFICATION	4.4360220797365896E-7	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9999959397599806	WITHOUT_CLASSIFICATION	4.06024001943784E-6	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9999991812699917	WITHOUT_CLASSIFICATION	8.187300082647928E-7	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999948124995546	WITHOUT_CLASSIFICATION	5.187500445392647E-6	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999871898845287	WITHOUT_CLASSIFICATION	1.2810115471369252E-5	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999981187387871	WITHOUT_CLASSIFICATION	1.8812612128686588E-6	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999967363847361	WITHOUT_CLASSIFICATION	3.2636152638894184E-6	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9999944131009997	WITHOUT_CLASSIFICATION	5.586899000294227E-6	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9999851181560833	WITHOUT_CLASSIFICATION	1.4881843916828116E-5	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.999998871403845	WITHOUT_CLASSIFICATION	1.1285961550685726E-6	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999882521140729	WITHOUT_CLASSIFICATION	1.1747885927114612E-5	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999997256122188	WITHOUT_CLASSIFICATION	2.7438778118152436E-7	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999996314937445	WITHOUT_CLASSIFICATION	3.685062555309495E-7	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999995291482353	WITHOUT_CLASSIFICATION	4.7085176467575707E-7	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999996142961637	WITHOUT_CLASSIFICATION	3.8570383627585657E-7	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999998598816433	WITHOUT_CLASSIFICATION	1.4011835662409258E-7	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.999997836869537	WITHOUT_CLASSIFICATION	2.1631304630277867E-6	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999999841832642	WITHOUT_CLASSIFICATION	1.5816735784988505E-8	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999850006574761	WITHOUT_CLASSIFICATION	1.4999342523844177E-5	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999885273342203	WITHOUT_CLASSIFICATION	1.1472665779801542E-5	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999914244980936	WITHOUT_CLASSIFICATION	8.575501906364472E-6	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9999463297833291	WITHOUT_CLASSIFICATION	5.367021667084773E-5	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999958161811184	WITHOUT_CLASSIFICATION	4.183818881544471E-6	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.999989238047627	WITHOUT_CLASSIFICATION	1.07619523730973E-5	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999949134192361	WITHOUT_CLASSIFICATION	5.086580763906681E-6	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9999857944208297	WITHOUT_CLASSIFICATION	1.4205579170196901E-5	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999923923191392	WITHOUT_CLASSIFICATION	7.607680860952826E-6	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.99999902509322	WITHOUT_CLASSIFICATION	9.749067799594208E-7	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999996864860328	WITHOUT_CLASSIFICATION	3.135139672280857E-7	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999991322019995	WITHOUT_CLASSIFICATION	8.67798000392152E-7	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9999937503003159	WITHOUT_CLASSIFICATION	6.249699684033123E-6	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999988344356988	WITHOUT_CLASSIFICATION	1.1655643012139308E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999993627014436	WITHOUT_CLASSIFICATION	6.372985563294752E-7	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999978716615324	WITHOUT_CLASSIFICATION	2.1283384676063256E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999999349560412	WITHOUT_CLASSIFICATION	6.504395874473146E-8	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972231146993	WITHOUT_CLASSIFICATION	2.776885300716282E-6	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987082781825	WITHOUT_CLASSIFICATION	1.29172181751243E-6	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986698235657	WITHOUT_CLASSIFICATION	1.3301764343197652E-6	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999999952089313	WITHOUT_CLASSIFICATION	4.791068621843486E-9	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999989007942016	WITHOUT_CLASSIFICATION	1.0992057984100218E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998360727124121	WITHOUT_CLASSIFICATION	1.63927287587913E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998360727124121	WITHOUT_CLASSIFICATION	1.63927287587913E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999991330982557	WITHOUT_CLASSIFICATION	8.669017442641544E-7	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9999999687818752	WITHOUT_CLASSIFICATION	3.12181247362376E-8	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999971334611525	WITHOUT_CLASSIFICATION	2.8665388474781755E-6	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957312877834	WITHOUT_CLASSIFICATION	4.268712216647264E-6	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999971334611525	WITHOUT_CLASSIFICATION	2.8665388474781755E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999991676480381	WITHOUT_CLASSIFICATION	8.323519619902298E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999981007752121	WITHOUT_CLASSIFICATION	1.8992247879843745E-6	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9999989537966792	WITHOUT_CLASSIFICATION	1.046203320807142E-6	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999997228740469	WITHOUT_CLASSIFICATION	2.7712595307857795E-7	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999994672769211	WITHOUT_CLASSIFICATION	5.32723078791648E-7	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999982878503519	WITHOUT_CLASSIFICATION	1.712149648093944E-6	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999988935745724	WITHOUT_CLASSIFICATION	1.1064254275822654E-6	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.999997363209627	WITHOUT_CLASSIFICATION	2.6367903730279678E-6	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999992134561825	WITHOUT_CLASSIFICATION	7.865438175555179E-7	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.99999987405564	WITHOUT_CLASSIFICATION	1.2594436007009308E-7	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999993231731562	WITHOUT_CLASSIFICATION	6.768268436980892E-7	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9999995131546792	WITHOUT_CLASSIFICATION	4.868453207995212E-7	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.999990808671867	WITHOUT_CLASSIFICATION	9.191328133042499E-6	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.999999897784543	WITHOUT_CLASSIFICATION	1.0221545706379529E-7	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.9999993899087312	WITHOUT_CLASSIFICATION	6.100912688871859E-7	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999999301111134	WITHOUT_CLASSIFICATION	6.98888865275469E-8	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999710195394226	WITHOUT_CLASSIFICATION	2.8980460577457067E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999710195394226	WITHOUT_CLASSIFICATION	2.8980460577457067E-5	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999850284172981	WITHOUT_CLASSIFICATION	1.4971582702008423E-5	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999996289157778	WITHOUT_CLASSIFICATION	3.7108422230014255E-7	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999999597711712	WITHOUT_CLASSIFICATION	4.0228828792872516E-8	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.999999961008206	WITHOUT_CLASSIFICATION	3.899179394245226E-8	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999998656986513	WITHOUT_CLASSIFICATION	1.343013487022959E-7	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999994405128508	WITHOUT_CLASSIFICATION	5.594871491292298E-7	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999999208488539	WITHOUT_CLASSIFICATION	7.915114607697498E-8	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999975863889435	WITHOUT_CLASSIFICATION	2.4136110564918012E-6	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999977074891431	WITHOUT_CLASSIFICATION	2.292510857012688E-6	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999998846528252	WITHOUT_CLASSIFICATION	1.1534717482274616E-7	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999998347017266	WITHOUT_CLASSIFICATION	1.652982733053371E-7	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999999618382431	WITHOUT_CLASSIFICATION	3.816175693497663E-8	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999999723408495	WITHOUT_CLASSIFICATION	2.76591505778105E-8	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999993459669619	WITHOUT_CLASSIFICATION	6.540330379527868E-7	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999941655244073	WITHOUT_CLASSIFICATION	5.8344755927103E-6	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999999585935067	WITHOUT_CLASSIFICATION	4.140649332540668E-8	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999974951727281	WITHOUT_CLASSIFICATION	2.5048272719765274E-6	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9999977160142999	WITHOUT_CLASSIFICATION	2.2839857001104034E-6	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.9999813336787869	WITHOUT_CLASSIFICATION	1.8666321212997367E-5	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999998792309075	WITHOUT_CLASSIFICATION	1.207690924460196E-7	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999992459791454	WITHOUT_CLASSIFICATION	7.540208547591611E-7	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999998671457156	WITHOUT_CLASSIFICATION	1.3285428422845726E-7	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999999536933617	WITHOUT_CLASSIFICATION	4.630663835347449E-8	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999996571576155	WITHOUT_CLASSIFICATION	3.428423844911376E-7	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9999927329933467	WITHOUT_CLASSIFICATION	7.267006653412687E-6	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999984531196427	WITHOUT_CLASSIFICATION	1.5468803572163032E-6	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999990464754692	WITHOUT_CLASSIFICATION	9.53524530787276E-7	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9999950350306269	WITHOUT_CLASSIFICATION	4.964969373051788E-6	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999834170047781	WITHOUT_CLASSIFICATION	1.6582995221887863E-5	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999585396573253	WITHOUT_CLASSIFICATION	4.14603426746475E-5	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9998761828270356	WITHOUT_CLASSIFICATION	1.2381717296435453E-4	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999990466892315	WITHOUT_CLASSIFICATION	9.533107684572772E-7	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999919198097528	WITHOUT_CLASSIFICATION	8.080190247199065E-6	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999931297069914	WITHOUT_CLASSIFICATION	6.870293008609707E-6	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999736212291531	WITHOUT_CLASSIFICATION	2.637877084688228E-5	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999991917208091	WITHOUT_CLASSIFICATION	8.082791909031314E-7	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999988525855945	WITHOUT_CLASSIFICATION	1.147414405412735E-6	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999983951275578	WITHOUT_CLASSIFICATION	1.604872442086326E-6	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999992042637034	WITHOUT_CLASSIFICATION	7.957362967235177E-7	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999982402802665	WITHOUT_CLASSIFICATION	1.759719733527742E-6	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999995294824314	WITHOUT_CLASSIFICATION	4.7051756862626644E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997160074945	WITHOUT_CLASSIFICATION	2.8399250551079375E-6	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.9999826981671391	WITHOUT_CLASSIFICATION	1.730183286088519E-5	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9999990590465152	WITHOUT_CLASSIFICATION	9.409534849060516E-7	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999999083833642	WITHOUT_CLASSIFICATION	9.161663578492416E-8	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999999851344411	WITHOUT_CLASSIFICATION	1.4865558877678988E-8	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9999998630929857	WITHOUT_CLASSIFICATION	1.3690701428859367E-7	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999998654518906	WITHOUT_CLASSIFICATION	1.3454810944646015E-7	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999998429257082	WITHOUT_CLASSIFICATION	1.5707429188063106E-7	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999998469685695	WITHOUT_CLASSIFICATION	1.5303143055964916E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999966782284028	WITHOUT_CLASSIFICATION	3.3217715971827134E-6	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999998047205007	WITHOUT_CLASSIFICATION	1.95279499339853E-7	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999998406514898	WITHOUT_CLASSIFICATION	1.5934851025313686E-7	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999770344174891	WITHOUT_CLASSIFICATION	2.29655825108167E-5	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999897593473089	WITHOUT_CLASSIFICATION	1.0240652691051053E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999842825851236	WITHOUT_CLASSIFICATION	1.571741487638818E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999842825851236	WITHOUT_CLASSIFICATION	1.571741487638818E-5	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.999999924785509	WITHOUT_CLASSIFICATION	7.521449097462796E-8	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999857399997183	WITHOUT_CLASSIFICATION	1.4260000281691383E-5	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.999993794167491	WITHOUT_CLASSIFICATION	6.205832508998738E-6	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999982114511884	WITHOUT_CLASSIFICATION	1.7885488116302114E-6	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999996530775687	WITHOUT_CLASSIFICATION	3.469224312950551E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999998292904694	WITHOUT_CLASSIFICATION	1.7070953054185917E-7	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999993099254176	WITHOUT_CLASSIFICATION	6.900745823347726E-7	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999997218759097	WITHOUT_CLASSIFICATION	2.7812409030579294E-7	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999922669846043	WITHOUT_CLASSIFICATION	7.733015395690387E-6	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999994372501857	WITHOUT_CLASSIFICATION	5.627498144059514E-7	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999944252121923	WITHOUT_CLASSIFICATION	5.574787807681642E-6	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9999777042721364	WITHOUT_CLASSIFICATION	2.2295727863616512E-5	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.999827460115717	WITHOUT_CLASSIFICATION	1.725398842831317E-4	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999994512287992	WITHOUT_CLASSIFICATION	5.487712007424192E-7	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999998631102998	WITHOUT_CLASSIFICATION	1.3688970019693328E-7	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999999120043565	WITHOUT_CLASSIFICATION	8.799564351384153E-8	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999999342093876	WITHOUT_CLASSIFICATION	6.579061241128298E-8	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.9999657035773979	WITHOUT_CLASSIFICATION	3.429642260218562E-5	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999796405665387	WITHOUT_CLASSIFICATION	2.0359433461320103E-5	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999972244703677	WITHOUT_CLASSIFICATION	2.7755296324215796E-6	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999998310953393	WITHOUT_CLASSIFICATION	1.6890466065513247E-7	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999934205974669	WITHOUT_CLASSIFICATION	6.579402533215909E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999061606921934	WITHOUT_CLASSIFICATION	9.38393078065733E-5	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999996859772405	WITHOUT_CLASSIFICATION	3.140227594578386E-7	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9999996967882405	WITHOUT_CLASSIFICATION	3.0321175943933164E-7	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999998000366146	WITHOUT_CLASSIFICATION	1.9996338548612176E-7	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9999986978384432	WITHOUT_CLASSIFICATION	1.3021615568527187E-6	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998987352000483	WITHOUT_CLASSIFICATION	1.0126479995167476E-4	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999983469161693	WITHOUT_CLASSIFICATION	1.6530838306590165E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999061606921934	WITHOUT_CLASSIFICATION	9.38393078065733E-5	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999996978203974	WITHOUT_CLASSIFICATION	3.021796026040271E-7	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999998693754663	WITHOUT_CLASSIFICATION	1.306245337130536E-7	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.999711437586319	WITHOUT_CLASSIFICATION	2.885624136809938E-4	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999763959733474	WITHOUT_CLASSIFICATION	2.3604026652573547E-5	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999999233745259	WITHOUT_CLASSIFICATION	7.66254740964382E-8	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999997983973901	WITHOUT_CLASSIFICATION	2.016026099437248E-7	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999999426158759	WITHOUT_CLASSIFICATION	5.738412410876065E-8	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999998821272752	WITHOUT_CLASSIFICATION	1.1787272473425427E-7	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999996782570836	WITHOUT_CLASSIFICATION	3.2174291643746876E-7	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999763959733474	WITHOUT_CLASSIFICATION	2.3604026652573547E-5	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999996339751244	WITHOUT_CLASSIFICATION	3.6602487557041067E-7	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999998848012057	WITHOUT_CLASSIFICATION	1.1519879438967095E-7	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999996586511438	WITHOUT_CLASSIFICATION	3.413488561562185E-7	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999029168258173	WITHOUT_CLASSIFICATION	9.708317418268311E-5	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.999999279726627	WITHOUT_CLASSIFICATION	7.202733728491903E-7	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999998347017266	WITHOUT_CLASSIFICATION	1.652982733053371E-7	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999985967229773	WITHOUT_CLASSIFICATION	1.4032770226744964E-6	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999994329819684	WITHOUT_CLASSIFICATION	5.670180317116108E-7	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999952650998811	WITHOUT_CLASSIFICATION	4.734900118923838E-6	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9999991369606716	WITHOUT_CLASSIFICATION	8.630393284514819E-7	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999777602144951	WITHOUT_CLASSIFICATION	2.2239785504901086E-5	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999989261179559	WITHOUT_CLASSIFICATION	1.0738820441352643E-6	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999986777155654	WITHOUT_CLASSIFICATION	1.3222844346224878E-6	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.999990959086687	WITHOUT_CLASSIFICATION	9.040913313005214E-6	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999702507869409	WITHOUT_CLASSIFICATION	2.974921305909844E-5	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999977642515624	WITHOUT_CLASSIFICATION	2.2357484376605136E-6	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999362487264388	WITHOUT_CLASSIFICATION	6.37512735611766E-5	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999999236024936	WITHOUT_CLASSIFICATION	7.639750641438081E-8	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999999406804726	WITHOUT_CLASSIFICATION	5.9319527329100546E-8	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999977312937299	WITHOUT_CLASSIFICATION	2.2687062700835497E-6	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999999161827322	WITHOUT_CLASSIFICATION	8.38172677625692E-8	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999971827705753	WITHOUT_CLASSIFICATION	2.8172294247402855E-6	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999972164654634	WITHOUT_CLASSIFICATION	2.7835345365743163E-6	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999989932792772	WITHOUT_CLASSIFICATION	1.0067207227975627E-6	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999982790858064	WITHOUT_CLASSIFICATION	1.720914193532535E-6	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9999705947240697	WITHOUT_CLASSIFICATION	2.9405275930332464E-5	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.999980713284666	WITHOUT_CLASSIFICATION	1.928671533405058E-5	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999979341112913	WITHOUT_CLASSIFICATION	2.065888708671186E-6	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999997208027531	WITHOUT_CLASSIFICATION	2.7919724697282314E-7	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.999999911045598	WITHOUT_CLASSIFICATION	8.895440190234776E-8	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999918709397646	WITHOUT_CLASSIFICATION	8.12906023536104E-6	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9999958616334729	WITHOUT_CLASSIFICATION	4.138366527187208E-6	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999991676065352	WITHOUT_CLASSIFICATION	8.323934649299127E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989697108767	WITHOUT_CLASSIFICATION	1.0302891233437708E-6	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957236742196	WITHOUT_CLASSIFICATION	4.2763257803700475E-6	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9999999653145342	WITHOUT_CLASSIFICATION	3.46854658892489E-8	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999949243697779	WITHOUT_CLASSIFICATION	5.075630222069978E-6	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999974309290569	WITHOUT_CLASSIFICATION	2.569070943066673E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999989129957783	WITHOUT_CLASSIFICATION	1.0870042217481682E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999989129957783	WITHOUT_CLASSIFICATION	1.0870042217481682E-6	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999997272886219	WITHOUT_CLASSIFICATION	2.727113780857404E-7	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999985983059686	WITHOUT_CLASSIFICATION	1.4016940313884363E-6	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999957197889269	WITHOUT_CLASSIFICATION	4.28021107304804E-6	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999995288104556	WITHOUT_CLASSIFICATION	4.7118954442250825E-7	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999960300137253	WITHOUT_CLASSIFICATION	3.9699862747100864E-6	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999989622094263	WITHOUT_CLASSIFICATION	1.0377905737234634E-6	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999986921297496	WITHOUT_CLASSIFICATION	1.3078702504106167E-6	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999982715991914	WITHOUT_CLASSIFICATION	1.7284008085705275E-6	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999982834048752	WITHOUT_CLASSIFICATION	1.7165951248433785E-6	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999999716149319	WITHOUT_CLASSIFICATION	2.8385068158562646E-8	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999998375886062	WITHOUT_CLASSIFICATION	1.6241139372707035E-7	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999999067714471	WITHOUT_CLASSIFICATION	9.322855287625416E-8	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999999776294277	WITHOUT_CLASSIFICATION	2.2370572339301068E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999989129957783	WITHOUT_CLASSIFICATION	1.0870042217481682E-6	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999995682437092	WITHOUT_CLASSIFICATION	4.317562908616889E-7	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999994436916779	WITHOUT_CLASSIFICATION	5.563083221326561E-7	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999998083507575	WITHOUT_CLASSIFICATION	1.916492425510725E-7	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999997991770546	WITHOUT_CLASSIFICATION	2.0082294536509813E-7	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999989327705983	WITHOUT_CLASSIFICATION	1.0672294017575843E-6	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9999973286393102	WITHOUT_CLASSIFICATION	2.6713606898709027E-6	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999998747782345	WITHOUT_CLASSIFICATION	1.2522176562099805E-7	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999992941428467	WITHOUT_CLASSIFICATION	7.058571533515259E-7	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999995968920896	WITHOUT_CLASSIFICATION	4.031079103505679E-7	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999999043786657	WITHOUT_CLASSIFICATION	9.562133432574474E-8	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999993528188164	WITHOUT_CLASSIFICATION	6.471811835605595E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989697108767	WITHOUT_CLASSIFICATION	1.0302891233437708E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999989129957783	WITHOUT_CLASSIFICATION	1.0870042217481682E-6	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999995127308127	WITHOUT_CLASSIFICATION	4.872691873255257E-7	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999982651167758	WITHOUT_CLASSIFICATION	1.7348832241554365E-6	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999996627689669	WITHOUT_CLASSIFICATION	3.3723103310286604E-6	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999968467245688	WITHOUT_CLASSIFICATION	3.153275431300332E-6	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999905576982696	WITHOUT_CLASSIFICATION	9.442301730344884E-6	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.999999316870696	WITHOUT_CLASSIFICATION	6.831293039855879E-7	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928641263811	WITHOUT_CLASSIFICATION	7.135873618861286E-6	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999994241913654	WITHOUT_CLASSIFICATION	5.758086346564689E-7	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999970681664219	WITHOUT_CLASSIFICATION	2.9318335780727094E-6	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999992757486675	WITHOUT_CLASSIFICATION	7.242513326021559E-7	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999998674717344	WITHOUT_CLASSIFICATION	1.3252826557908833E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997734556585585	WITHOUT_CLASSIFICATION	2.265443414416016E-4	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999980982906291	WITHOUT_CLASSIFICATION	1.901709370832138E-6	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999993538905815	WITHOUT_CLASSIFICATION	6.46109418512907E-7	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999991676480381	WITHOUT_CLASSIFICATION	8.323519619902298E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999981357128633	WITHOUT_CLASSIFICATION	1.8642871367689981E-6	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999999470928236	WITHOUT_CLASSIFICATION	5.290717635471076E-8	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999989974009046	WITHOUT_CLASSIFICATION	1.0025990955119913E-6	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999970867072376	WITHOUT_CLASSIFICATION	2.913292762248077E-6	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999996271085706	WITHOUT_CLASSIFICATION	3.728914293376488E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999994153080919	WITHOUT_CLASSIFICATION	5.846919081024285E-6	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999994153080919	WITHOUT_CLASSIFICATION	5.846919081024285E-6	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999997509825247	WITHOUT_CLASSIFICATION	2.490174752811855E-7	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9999998376485518	WITHOUT_CLASSIFICATION	1.6235144815026712E-7	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9999999354887873	WITHOUT_CLASSIFICATION	6.451121263862813E-8	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.999999163320705	WITHOUT_CLASSIFICATION	8.366792948466848E-7	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999983238044706	WITHOUT_CLASSIFICATION	1.6761955294115453E-6	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.999990495385019	WITHOUT_CLASSIFICATION	9.504614980973619E-6	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999973144255209	WITHOUT_CLASSIFICATION	2.6855744790342638E-6	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999996387547881	WITHOUT_CLASSIFICATION	3.612452118667039E-7	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999996387547881	WITHOUT_CLASSIFICATION	3.612452118667039E-7	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999964121452415	WITHOUT_CLASSIFICATION	3.5878547584507E-6	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999949657347684	WITHOUT_CLASSIFICATION	5.0342652315574925E-6	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999987309342496	WITHOUT_CLASSIFICATION	1.2690657504795527E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999992768141035	WITHOUT_CLASSIFICATION	7.231858965481908E-7	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999992768141035	WITHOUT_CLASSIFICATION	7.231858965481908E-7	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999992768141035	WITHOUT_CLASSIFICATION	7.231858965481908E-7	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9999999555063664	WITHOUT_CLASSIFICATION	4.449363357998991E-8	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999990133604464	WITHOUT_CLASSIFICATION	9.866395535678475E-7	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9999995983417177	WITHOUT_CLASSIFICATION	4.0165828231797E-7	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9999998346917762	WITHOUT_CLASSIFICATION	1.6530822376613696E-7	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999995991229838	WITHOUT_CLASSIFICATION	4.008770162839295E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999989129957783	WITHOUT_CLASSIFICATION	1.0870042217481682E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999989129957783	WITHOUT_CLASSIFICATION	1.0870042217481682E-6	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999999759455616	WITHOUT_CLASSIFICATION	2.4054438378274143E-8	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999999826912139	WITHOUT_CLASSIFICATION	1.7308786074279685E-8	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999999695672209	WITHOUT_CLASSIFICATION	3.0432779177001336E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999992048604115	WITHOUT_CLASSIFICATION	7.951395885500347E-7	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999987491868183	WITHOUT_CLASSIFICATION	1.2508131817278652E-6	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.999998704046348	WITHOUT_CLASSIFICATION	1.2959536519342298E-6	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999912879350764	WITHOUT_CLASSIFICATION	8.712064923541072E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999997588143096	WITHOUT_CLASSIFICATION	2.411856904385687E-7	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999994320715674	WITHOUT_CLASSIFICATION	5.679284326212648E-7	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999979402395512	WITHOUT_CLASSIFICATION	2.0597604488047616E-6	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999910962538267	WITHOUT_CLASSIFICATION	8.903746173361376E-6	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999818730524536	WITHOUT_CLASSIFICATION	1.8126947546431633E-5	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999818730524536	WITHOUT_CLASSIFICATION	1.8126947546431633E-5	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999849478359151	WITHOUT_CLASSIFICATION	1.505216408488395E-5	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999849478359151	WITHOUT_CLASSIFICATION	1.505216408488395E-5	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.999985607528809	WITHOUT_CLASSIFICATION	1.4392471190832488E-5	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999850316046571	WITHOUT_CLASSIFICATION	1.4968395342826486E-5	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999850316046571	WITHOUT_CLASSIFICATION	1.4968395342826486E-5	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999868943054023	WITHOUT_CLASSIFICATION	1.3105694597733806E-5	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999796903129573	WITHOUT_CLASSIFICATION	2.0309687042709313E-5	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999991820406889	WITHOUT_CLASSIFICATION	8.179593110184763E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999994153080919	WITHOUT_CLASSIFICATION	5.846919081024285E-6	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999998098366558	WITHOUT_CLASSIFICATION	1.9016334411759929E-7	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999796903129573	WITHOUT_CLASSIFICATION	2.0309687042709313E-5	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9999963370282611	WITHOUT_CLASSIFICATION	3.6629717388830006E-6	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999963848044362	WITHOUT_CLASSIFICATION	3.6151955637436054E-6	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999891796778436	WITHOUT_CLASSIFICATION	1.0820322156461104E-5	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.999987702760256	WITHOUT_CLASSIFICATION	1.2297239744058345E-5	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999999047986587	WITHOUT_CLASSIFICATION	9.520134124268528E-8	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999963026596954	WITHOUT_CLASSIFICATION	3.6973403045601647E-6	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999994651329731	WITHOUT_CLASSIFICATION	5.348670268707529E-7	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9999995874656568	WITHOUT_CLASSIFICATION	4.125343432089582E-7	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.999984738825785	WITHOUT_CLASSIFICATION	1.5261174215042723E-5	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9999990673882464	WITHOUT_CLASSIFICATION	9.32611753479108E-7	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.999999453122571	WITHOUT_CLASSIFICATION	5.468774290494584E-7	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9999958557011143	WITHOUT_CLASSIFICATION	4.144298885800581E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999977768755268	WITHOUT_CLASSIFICATION	2.2231244732474883E-6	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999970320137704	WITHOUT_CLASSIFICATION	2.967986229509001E-6	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9999997895129933	WITHOUT_CLASSIFICATION	2.104870067561416E-7	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9999990874954767	WITHOUT_CLASSIFICATION	9.125045231645338E-7	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.999998114438382	WITHOUT_CLASSIFICATION	1.885561617968731E-6	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999976159739695	WITHOUT_CLASSIFICATION	2.3840260303821827E-6	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999976159739695	WITHOUT_CLASSIFICATION	2.3840260303821827E-6	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999986877402743	WITHOUT_CLASSIFICATION	1.3122597256612556E-6	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999950591272412	WITHOUT_CLASSIFICATION	4.940872758832298E-6	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999990826020427	WITHOUT_CLASSIFICATION	9.173979572674686E-7	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.999996075233202	WITHOUT_CLASSIFICATION	3.924766797984898E-6	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.999998764515301	WITHOUT_CLASSIFICATION	1.2354846989238436E-6	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999997892682515	WITHOUT_CLASSIFICATION	2.1073174841639623E-7	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9999998203959205	WITHOUT_CLASSIFICATION	1.7960407946454068E-7	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999995383609828	WITHOUT_CLASSIFICATION	4.6163901727457804E-7	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999948410585628	WITHOUT_CLASSIFICATION	5.158941437118921E-6	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999993745776529	WITHOUT_CLASSIFICATION	6.2542234709092E-7	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999982924613019	WITHOUT_CLASSIFICATION	1.7075386980757804E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997734556585585	WITHOUT_CLASSIFICATION	2.265443414416016E-4	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999993800093642	WITHOUT_CLASSIFICATION	6.199906357668973E-7	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999968559196758	WITHOUT_CLASSIFICATION	3.1440803242736402E-6	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999987422016245	WITHOUT_CLASSIFICATION	1.257798375406067E-6	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999982537360789	WITHOUT_CLASSIFICATION	1.7462639211098955E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999994598711606	WITHOUT_CLASSIFICATION	5.401288395116856E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999994598711606	WITHOUT_CLASSIFICATION	5.401288395116856E-7	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9999993548205821	WITHOUT_CLASSIFICATION	6.451794177768477E-7	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9999993840299176	WITHOUT_CLASSIFICATION	6.159700824008554E-7	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9999992397053615	WITHOUT_CLASSIFICATION	7.602946385429364E-7	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999986019962022	WITHOUT_CLASSIFICATION	1.3980037977490762E-6	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999957922232103	WITHOUT_CLASSIFICATION	4.2077767896646584E-6	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999984225589269	WITHOUT_CLASSIFICATION	1.5774410730306198E-6	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999980886358346	WITHOUT_CLASSIFICATION	1.911364165465516E-6	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999991804809806	WITHOUT_CLASSIFICATION	8.195190193771063E-7	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999994845557689	WITHOUT_CLASSIFICATION	5.154442311426742E-7	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999999513832597	WITHOUT_CLASSIFICATION	4.861674034858361E-8	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999994736688229	WITHOUT_CLASSIFICATION	5.263311771537177E-7	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999991804809806	WITHOUT_CLASSIFICATION	8.195190193771063E-7	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9999998570918147	WITHOUT_CLASSIFICATION	1.429081853029159E-7	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999991240246158	WITHOUT_CLASSIFICATION	8.759753841940677E-7	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999998879699352	WITHOUT_CLASSIFICATION	1.12030064754717E-7	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999970904596984	WITHOUT_CLASSIFICATION	2.9095403015663786E-6	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999999655638597	WITHOUT_CLASSIFICATION	3.443614018513041E-8	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999993410293452	WITHOUT_CLASSIFICATION	6.589706549408453E-7	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999997210626401	WITHOUT_CLASSIFICATION	2.7893735981022125E-7	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999990918659962	WITHOUT_CLASSIFICATION	9.081340037032766E-7	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.999998062688199	WITHOUT_CLASSIFICATION	1.937311800924055E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999984901963603	WITHOUT_CLASSIFICATION	1.5098036396996281E-6	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.999999234069055	WITHOUT_CLASSIFICATION	7.659309450688385E-7	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999998484981089	WITHOUT_CLASSIFICATION	1.5150189108662625E-7	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999951302703916	WITHOUT_CLASSIFICATION	4.869729608558388E-6	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999996169287331	WITHOUT_CLASSIFICATION	3.830712669419495E-7	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999951665640979	WITHOUT_CLASSIFICATION	4.833435902021303E-6	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999996641584558	WITHOUT_CLASSIFICATION	3.3584154426678437E-7	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999999338856116	WITHOUT_CLASSIFICATION	6.611438842228986E-8	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9999974026184768	WITHOUT_CLASSIFICATION	2.5973815232262932E-6	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9999969671973814	WITHOUT_CLASSIFICATION	3.0328026186082615E-6	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999996793544031	WITHOUT_CLASSIFICATION	3.2064559687493047E-7	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.999999521330078	WITHOUT_CLASSIFICATION	4.786699220764374E-7	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9999995864750035	WITHOUT_CLASSIFICATION	4.135249964954431E-7	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9999998656224653	WITHOUT_CLASSIFICATION	1.3437753470172497E-7	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9999866344989519	WITHOUT_CLASSIFICATION	1.3365501048262716E-5	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999998302689952	WITHOUT_CLASSIFICATION	1.6973100471493277E-7	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999954901001189	WITHOUT_CLASSIFICATION	4.509899881054818E-6	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999996608539784	WITHOUT_CLASSIFICATION	3.391460214847076E-7	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999988096878515	WITHOUT_CLASSIFICATION	1.1903121485521862E-6	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999994609130136	WITHOUT_CLASSIFICATION	5.39086986299008E-7	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999993152483664	WITHOUT_CLASSIFICATION	6.847516336864661E-7	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999996382299087	WITHOUT_CLASSIFICATION	3.6177009132593304E-7	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999990225018512	WITHOUT_CLASSIFICATION	9.774981487491655E-7	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999997212945169	WITHOUT_CLASSIFICATION	2.787054831432245E-7	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.99999995409499	WITHOUT_CLASSIFICATION	4.5905009960320917E-8	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999997266556184	WITHOUT_CLASSIFICATION	2.7334438159603707E-7	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999998543664212	WITHOUT_CLASSIFICATION	1.4563357873029976E-7	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.999998968615936	WITHOUT_CLASSIFICATION	1.0313840640191853E-6	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.999998727886112	WITHOUT_CLASSIFICATION	1.2721138879979068E-6	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.999998903948641	WITHOUT_CLASSIFICATION	1.0960513590555584E-6	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999986251298744	WITHOUT_CLASSIFICATION	1.3748701256569862E-6	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.999997773837994	WITHOUT_CLASSIFICATION	2.226162005934073E-6	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999995836117263	WITHOUT_CLASSIFICATION	4.163882737298352E-7	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999991356256989	WITHOUT_CLASSIFICATION	8.643743011120565E-7	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999999128995859	WITHOUT_CLASSIFICATION	8.710041402014497E-8	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999936332619743	WITHOUT_CLASSIFICATION	6.36673802563815E-6	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999997183488392	WITHOUT_CLASSIFICATION	2.816511608638816E-7	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999999423747963	WITHOUT_CLASSIFICATION	5.762520368853977E-8	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999993427720627	WITHOUT_CLASSIFICATION	6.572279373007719E-7	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.999998900062083	WITHOUT_CLASSIFICATION	1.0999379169366981E-6	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999993931139045	WITHOUT_CLASSIFICATION	6.068860953985924E-7	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992249169123	WITHOUT_CLASSIFICATION	7.750830877505951E-7	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999997706687529	WITHOUT_CLASSIFICATION	2.2933124703231666E-7	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999992143697043	WITHOUT_CLASSIFICATION	7.856302956609073E-7	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.999993936442692	WITHOUT_CLASSIFICATION	6.063557308041803E-6	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999989783588392	WITHOUT_CLASSIFICATION	1.0216411608050361E-6	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999991366593965	WITHOUT_CLASSIFICATION	8.633406034201047E-7	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999995576421868	WITHOUT_CLASSIFICATION	4.423578132111079E-7	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999996089958497	WITHOUT_CLASSIFICATION	3.910041502845665E-7	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999990024460712	WITHOUT_CLASSIFICATION	9.975539287989053E-7	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999996963110437	WITHOUT_CLASSIFICATION	3.036889563877936E-7	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999998787325712	WITHOUT_CLASSIFICATION	1.2126742885476378E-7	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999992737623681	WITHOUT_CLASSIFICATION	7.262376319345664E-7	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999986884162491	WITHOUT_CLASSIFICATION	1.3115837509317424E-6	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9999998483424406	WITHOUT_CLASSIFICATION	1.5165755941096777E-7	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9999893684940183	WITHOUT_CLASSIFICATION	1.0631505981640316E-5	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999956264799366	WITHOUT_CLASSIFICATION	4.373520063513837E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992249169123	WITHOUT_CLASSIFICATION	7.750830877505951E-7	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999985595948988	WITHOUT_CLASSIFICATION	1.440405101214052E-6	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999994706053928	WITHOUT_CLASSIFICATION	5.293946072170987E-7	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999947440588117	WITHOUT_CLASSIFICATION	5.2559411883149665E-6	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999994076547143	WITHOUT_CLASSIFICATION	5.923452858155167E-7	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999988250381865	WITHOUT_CLASSIFICATION	1.1749618135425683E-6	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999995508519437	WITHOUT_CLASSIFICATION	4.491480562198928E-7	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999994845557689	WITHOUT_CLASSIFICATION	5.154442311426742E-7	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999997927152701	WITHOUT_CLASSIFICATION	2.0728472995534148E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999997266556184	WITHOUT_CLASSIFICATION	2.7334438159603707E-7	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9999981504856054	WITHOUT_CLASSIFICATION	1.849514394606785E-6	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999974566826563	WITHOUT_CLASSIFICATION	2.5433173436484814E-6	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999988817542704	WITHOUT_CLASSIFICATION	1.1182457295937349E-6	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999987979746333	WITHOUT_CLASSIFICATION	1.2020253667535713E-6	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999983863537855	WITHOUT_CLASSIFICATION	1.6136462146153705E-6	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999996130896409	WITHOUT_CLASSIFICATION	3.8691035910804513E-7	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.999997390486355	WITHOUT_CLASSIFICATION	2.6095136449695335E-6	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999992481928139	WITHOUT_CLASSIFICATION	7.518071861183317E-7	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999995952006228	WITHOUT_CLASSIFICATION	4.047993772428466E-7	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999995202322163	WITHOUT_CLASSIFICATION	4.797677837234061E-7	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999987870300694	WITHOUT_CLASSIFICATION	1.2129699306273529E-6	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999993734023628	WITHOUT_CLASSIFICATION	6.265976373179605E-7	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999982558986351	WITHOUT_CLASSIFICATION	1.7441013649586906E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999982558986351	WITHOUT_CLASSIFICATION	1.7441013649586906E-6	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999997007749742	WITHOUT_CLASSIFICATION	2.992250258031282E-7	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.999997469144682	WITHOUT_CLASSIFICATION	2.5308553178798087E-6	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999999439533505	WITHOUT_CLASSIFICATION	5.604664954506654E-8	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999990962166078	WITHOUT_CLASSIFICATION	9.037833921758551E-7	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999991177713851	WITHOUT_CLASSIFICATION	8.822286149766106E-7	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999984825000441	WITHOUT_CLASSIFICATION	1.5174999558515477E-6	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999948627354903	WITHOUT_CLASSIFICATION	5.137264509691468E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999997320087939	WITHOUT_CLASSIFICATION	2.6799120612409804E-7	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999997832646225	WITHOUT_CLASSIFICATION	2.1673537742456714E-7	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999998289931393	WITHOUT_CLASSIFICATION	1.710068606969987E-7	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999986463057104	WITHOUT_CLASSIFICATION	1.3536942896001366E-6	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999990664411579	WITHOUT_CLASSIFICATION	9.335588421312765E-7	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999990135538603	WITHOUT_CLASSIFICATION	9.864461396317434E-7	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999890453084	WITHOUT_CLASSIFICATION	1.0954691571437709E-8	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999970649844208	WITHOUT_CLASSIFICATION	2.935015579290699E-6	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.999998249098798	WITHOUT_CLASSIFICATION	1.7509012021302277E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9999995386348317	WITHOUT_CLASSIFICATION	4.613651682771087E-7	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999983846465443	WITHOUT_CLASSIFICATION	1.6153534556365752E-6	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999985257891432	WITHOUT_CLASSIFICATION	1.4742108568713172E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999998071686875	WITHOUT_CLASSIFICATION	1.9283131248299802E-7	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999926563798323	WITHOUT_CLASSIFICATION	7.343620167776203E-6	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999964115812162	WITHOUT_CLASSIFICATION	3.5884187837334885E-6	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999995681950268	WITHOUT_CLASSIFICATION	4.3180497324231466E-7	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.9999046776988578	WITHOUT_CLASSIFICATION	9.532230114226177E-5	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9999971817165949	WITHOUT_CLASSIFICATION	2.8182834051505686E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989686857254	WITHOUT_CLASSIFICATION	1.031314274673105E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999991604205274	WITHOUT_CLASSIFICATION	8.39579472546821E-7	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999996952436866	WITHOUT_CLASSIFICATION	3.0475631342684855E-7	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999886530170785	WITHOUT_CLASSIFICATION	1.1346982921421231E-5	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999991588259461	WITHOUT_CLASSIFICATION	8.411740539520586E-7	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998064122167077	WITHOUT_CLASSIFICATION	1.9358778329226146E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9999464871318932	WITHOUT_CLASSIFICATION	5.351286810675473E-5	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.999999984861926	WITHOUT_CLASSIFICATION	1.5138074026225675E-8	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999993852474691	WITHOUT_CLASSIFICATION	6.14752530854913E-7	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999975260230736	WITHOUT_CLASSIFICATION	2.4739769263903275E-6	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999993712106111	WITHOUT_CLASSIFICATION	6.287893889093309E-7	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.999993785477882	WITHOUT_CLASSIFICATION	6.214522118000716E-6	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9999984113998089	WITHOUT_CLASSIFICATION	1.5886001910827666E-6	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999930358549535	WITHOUT_CLASSIFICATION	6.964145046509488E-6	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999985390525378	WITHOUT_CLASSIFICATION	1.4609474622658335E-6	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999913138260664	WITHOUT_CLASSIFICATION	8.686173933501824E-6	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999998212386967	WITHOUT_CLASSIFICATION	1.7876130320412786E-7	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999308000130556	WITHOUT_CLASSIFICATION	6.919998694441965E-5	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999778476328431	WITHOUT_CLASSIFICATION	2.2152367156873132E-5	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999992612546441	WITHOUT_CLASSIFICATION	7.387453558382276E-7	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996383640688	WITHOUT_CLASSIFICATION	3.616359312156002E-6	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9962288109261878	WITHOUT_CLASSIFICATION	0.0037711890738122656	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999996829624371	WITHOUT_CLASSIFICATION	3.170375628033055E-7	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999999243798907	WITHOUT_CLASSIFICATION	7.56201093469613E-8	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999997167353882	WITHOUT_CLASSIFICATION	2.832646117904391E-7	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999930088267641	WITHOUT_CLASSIFICATION	6.9911732359322255E-6	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999990046917756	WITHOUT_CLASSIFICATION	9.953082243029579E-7	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999952808090841	WITHOUT_CLASSIFICATION	4.719190915913712E-6	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999992769479665	WITHOUT_CLASSIFICATION	7.230520335358258E-7	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999963314473658	WITHOUT_CLASSIFICATION	3.668552634099753E-6	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999998890405489	WITHOUT_CLASSIFICATION	1.1095945100474204E-7	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9999961884595412	WITHOUT_CLASSIFICATION	3.81154045884036E-6	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9999988648240152	WITHOUT_CLASSIFICATION	1.1351759848023726E-6	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999985432010522	WITHOUT_CLASSIFICATION	1.456798947855696E-6	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999953450879178	WITHOUT_CLASSIFICATION	4.654912082231748E-6	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999996241552934	WITHOUT_CLASSIFICATION	3.7584470663708814E-7	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999946973067347	WITHOUT_CLASSIFICATION	5.302693265270364E-6	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999993450021197	WITHOUT_CLASSIFICATION	6.5499788036171E-7	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999989364655414	WITHOUT_CLASSIFICATION	1.0635344587050485E-6	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999952841205537	WITHOUT_CLASSIFICATION	4.715879446287385E-6	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999736039912103	WITHOUT_CLASSIFICATION	2.6396008789776723E-5	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999936563559928	WITHOUT_CLASSIFICATION	6.343644007289418E-6	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999977917779705	WITHOUT_CLASSIFICATION	2.208222029474077E-6	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999935219815802	WITHOUT_CLASSIFICATION	6.4780184197208924E-6	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999996000869099	WITHOUT_CLASSIFICATION	3.999130901388375E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999935219815802	WITHOUT_CLASSIFICATION	6.4780184197208924E-6	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.999999952499084	WITHOUT_CLASSIFICATION	4.7500916071665846E-8	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999939817577502	WITHOUT_CLASSIFICATION	6.018242249803019E-6	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999877309923795	WITHOUT_CLASSIFICATION	1.2269007620495859E-5	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999992964400982	WITHOUT_CLASSIFICATION	7.035599017407799E-7	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999994791553107	WITHOUT_CLASSIFICATION	5.208446891652217E-7	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999900169245005	WITHOUT_CLASSIFICATION	9.983075499462922E-6	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999994136158585	WITHOUT_CLASSIFICATION	5.86384141488581E-7	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999988134754332	WITHOUT_CLASSIFICATION	1.186524566806312E-6	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999985802589048	WITHOUT_CLASSIFICATION	1.4197410952817376E-6	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999999303549767	WITHOUT_CLASSIFICATION	6.964502336818851E-8	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999989446807571	WITHOUT_CLASSIFICATION	1.0553192428800495E-6	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999992560771399	WITHOUT_CLASSIFICATION	7.439228600382532E-7	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999997733846498	WITHOUT_CLASSIFICATION	2.2661535013151128E-7	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9999995947207754	WITHOUT_CLASSIFICATION	4.052792246010365E-7	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999984149067376	WITHOUT_CLASSIFICATION	1.585093262479759E-6	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999998864653785	WITHOUT_CLASSIFICATION	1.135346215211412E-7	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999998526236256	WITHOUT_CLASSIFICATION	1.4737637444923394E-7	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999998087768258	WITHOUT_CLASSIFICATION	1.9122317419226715E-7	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999999479898047	WITHOUT_CLASSIFICATION	5.201019532790403E-8	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9999984818488906	WITHOUT_CLASSIFICATION	1.5181511094106586E-6	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999987180314572	WITHOUT_CLASSIFICATION	1.2819685427466724E-6	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9999895008497346	WITHOUT_CLASSIFICATION	1.0499150265431405E-5	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999981832200995	WITHOUT_CLASSIFICATION	1.8167799005533343E-6	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999999665572197	WITHOUT_CLASSIFICATION	3.344278035251509E-8	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999927876069633	WITHOUT_CLASSIFICATION	7.212393036724094E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9998350372282613	WITHOUT_CLASSIFICATION	1.6496277173867085E-4	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999918859716261	WITHOUT_CLASSIFICATION	8.114028373872247E-6	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9999875523451858	WITHOUT_CLASSIFICATION	1.2447654814133747E-5	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999804020724877	WITHOUT_CLASSIFICATION	1.959792751226892E-5	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999938976874314	WITHOUT_CLASSIFICATION	6.102312568579904E-6	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.999968158764236	WITHOUT_CLASSIFICATION	3.184123576412599E-5	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.999983310510537	WITHOUT_CLASSIFICATION	1.668948946304119E-5	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.99999995236882	WITHOUT_CLASSIFICATION	4.763117995989422E-8	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999964789009131	WITHOUT_CLASSIFICATION	3.521099086817953E-6	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999977162260655	WITHOUT_CLASSIFICATION	2.283773934503357E-6	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9999747849558344	WITHOUT_CLASSIFICATION	2.52150441655779E-5	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999689538599011	WITHOUT_CLASSIFICATION	3.104614009878354E-5	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999881415787664	WITHOUT_CLASSIFICATION	1.1858421233627136E-5	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.9999730772059949	WITHOUT_CLASSIFICATION	2.692279400516422E-5	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999993236439507	WITHOUT_CLASSIFICATION	6.763560493088281E-7	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999894082024678	WITHOUT_CLASSIFICATION	1.059179753214347E-5	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9999944762561995	WITHOUT_CLASSIFICATION	5.5237438004899465E-6	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999991094038739	WITHOUT_CLASSIFICATION	8.905961260377349E-7	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9998350372282613	WITHOUT_CLASSIFICATION	1.6496277173867085E-4	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9999379695051951	WITHOUT_CLASSIFICATION	6.203049480492316E-5	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999995730091601	WITHOUT_CLASSIFICATION	4.269908399332866E-7	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9999588620631478	WITHOUT_CLASSIFICATION	4.1137936852362834E-5	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999993672794092	WITHOUT_CLASSIFICATION	6.327205907609803E-7	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999890640478568	WITHOUT_CLASSIFICATION	1.0935952143259946E-5	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999926222430842	WITHOUT_CLASSIFICATION	7.37775691585336E-6	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999877100041414	WITHOUT_CLASSIFICATION	1.2289995858651646E-5	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.999998936058681	WITHOUT_CLASSIFICATION	1.0639413189961955E-6	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.999995131475408	WITHOUT_CLASSIFICATION	4.868524592009839E-6	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999991433784496	WITHOUT_CLASSIFICATION	8.566215502548453E-7	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9999910931261656	WITHOUT_CLASSIFICATION	8.906873834270611E-6	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999999462196301	WITHOUT_CLASSIFICATION	5.378036998329377E-8	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.999980466764575	WITHOUT_CLASSIFICATION	1.9533235424959737E-5	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9999568905747882	WITHOUT_CLASSIFICATION	4.310942521174244E-5	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999906177309988	WITHOUT_CLASSIFICATION	9.382269001279548E-6	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999999199182936	WITHOUT_CLASSIFICATION	8.008170636917115E-8	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.99999372946028	WITHOUT_CLASSIFICATION	6.270539720076345E-6	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999750204920078	WITHOUT_CLASSIFICATION	2.4979507992084872E-5	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999995943626904	WITHOUT_CLASSIFICATION	4.056373097041908E-7	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9999379695051951	WITHOUT_CLASSIFICATION	6.203049480492316E-5	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.999995794962021	WITHOUT_CLASSIFICATION	4.2050379789707005E-6	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999994769899477	WITHOUT_CLASSIFICATION	5.230100522525779E-7	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999971716728058	WITHOUT_CLASSIFICATION	2.8283271942191404E-6	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999997601952367	WITHOUT_CLASSIFICATION	2.398047632302061E-7	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.999998324117394	WITHOUT_CLASSIFICATION	1.6758826060287787E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.999996763593522	WITHOUT_CLASSIFICATION	3.2364064780402756E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.999996763593522	WITHOUT_CLASSIFICATION	3.2364064780402756E-6	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999995552066779	WITHOUT_CLASSIFICATION	4.4479332202714024E-7	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.999996763593522	WITHOUT_CLASSIFICATION	3.2364064780402756E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.999996763593522	WITHOUT_CLASSIFICATION	3.2364064780402756E-6	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9999657487747109	WITHOUT_CLASSIFICATION	3.425122528917145E-5	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999993877683553	WITHOUT_CLASSIFICATION	6.122316446702814E-7	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999997962358136	WITHOUT_CLASSIFICATION	2.037641864660585E-7	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999997484197573	WITHOUT_CLASSIFICATION	2.5158024266440366E-7	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999997171223872	WITHOUT_CLASSIFICATION	2.8287761279205E-7	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9999998091810665	WITHOUT_CLASSIFICATION	1.9081893350953294E-7	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9999879036177822	WITHOUT_CLASSIFICATION	1.2096382217820745E-5	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999987641611581	WITHOUT_CLASSIFICATION	1.23583884192437E-6	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999894653687762	WITHOUT_CLASSIFICATION	1.0534631223847617E-5	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9999823368842119	WITHOUT_CLASSIFICATION	1.766311578813764E-5	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9999965395253292	WITHOUT_CLASSIFICATION	3.4604746707630966E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999857618588556	WITHOUT_CLASSIFICATION	1.4238141144309705E-5	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999938080336389	WITHOUT_CLASSIFICATION	6.191966361093478E-6	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9999938162325418	WITHOUT_CLASSIFICATION	6.183767458138503E-6	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999980627212857	WITHOUT_CLASSIFICATION	1.9372787144106354E-6	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999974462687786	WITHOUT_CLASSIFICATION	2.5537312213825055E-6	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999991330982557	WITHOUT_CLASSIFICATION	8.669017442641544E-7	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999937465735936	WITHOUT_CLASSIFICATION	6.253426406339268E-6	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999897352524614	WITHOUT_CLASSIFICATION	1.0264747538555898E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9999937513821526	WITHOUT_CLASSIFICATION	6.248617847452086E-6	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999991100460619	WITHOUT_CLASSIFICATION	8.89953937972097E-7	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999696060925729	WITHOUT_CLASSIFICATION	3.0393907427094886E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999991330982557	WITHOUT_CLASSIFICATION	8.669017442641544E-7	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999918859716261	WITHOUT_CLASSIFICATION	8.114028373872247E-6	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999953370044505	WITHOUT_CLASSIFICATION	4.662995549545888E-6	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999997589023121	WITHOUT_CLASSIFICATION	2.4109768793561426E-7	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999997471209812	WITHOUT_CLASSIFICATION	2.528790187990605E-7	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9998827022192492	WITHOUT_CLASSIFICATION	1.1729778075083635E-4	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999992658510702	WITHOUT_CLASSIFICATION	7.341489297442187E-7	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.9999980080396078	WITHOUT_CLASSIFICATION	1.9919603921793296E-6	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999980275086499	WITHOUT_CLASSIFICATION	1.972491350105992E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999948018923557	WITHOUT_CLASSIFICATION	5.198107644271226E-6	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999971676196723	WITHOUT_CLASSIFICATION	2.8323803277820817E-6	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9999951637117238	WITHOUT_CLASSIFICATION	4.836288276276749E-6	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999992873276788	WITHOUT_CLASSIFICATION	7.126723210334855E-7	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.999998549961173	WITHOUT_CLASSIFICATION	1.4500388269939327E-6	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999988366603274	WITHOUT_CLASSIFICATION	1.1633396726527948E-6	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.999992326361324	WITHOUT_CLASSIFICATION	7.673638676046646E-6	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999999093336839	WITHOUT_CLASSIFICATION	9.06663161813769E-8	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999970143714179	WITHOUT_CLASSIFICATION	2.9856285821717634E-6	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999986996125337	WITHOUT_CLASSIFICATION	1.300387466210323E-6	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999998161955408	WITHOUT_CLASSIFICATION	1.838044592520549E-7	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999997642859353	WITHOUT_CLASSIFICATION	2.3571406472990826E-7	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9999901122697779	WITHOUT_CLASSIFICATION	9.8877302222116E-6	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999970443416237	WITHOUT_CLASSIFICATION	2.955658376380409E-6	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999997808974832	WITHOUT_CLASSIFICATION	2.191025168507552E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999948018923557	WITHOUT_CLASSIFICATION	5.198107644271226E-6	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999953365492629	WITHOUT_CLASSIFICATION	4.663450737143132E-6	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9999912991000216	WITHOUT_CLASSIFICATION	8.700899978275257E-6	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.999994599351706	WITHOUT_CLASSIFICATION	5.400648293961287E-6	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999989982090544	WITHOUT_CLASSIFICATION	1.001790945621814E-6	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996455078829	WITHOUT_CLASSIFICATION	3.5449211707096653E-7	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9999899033803451	WITHOUT_CLASSIFICATION	1.0096619654865044E-5	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9999884176101073	WITHOUT_CLASSIFICATION	1.1582389892806555E-5	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999969678234307	WITHOUT_CLASSIFICATION	3.032176569401897E-6	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.9999927354944494	WITHOUT_CLASSIFICATION	7.264505550462223E-6	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.999987861252444	WITHOUT_CLASSIFICATION	1.2138747555984463E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999993935199377	WITHOUT_CLASSIFICATION	6.064800623371771E-7	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.999999946202163	WITHOUT_CLASSIFICATION	5.379783709479239E-8	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999947195609065	WITHOUT_CLASSIFICATION	5.2804390935142554E-6	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999984428228023	WITHOUT_CLASSIFICATION	1.557177197845604E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999988986950992	WITHOUT_CLASSIFICATION	1.1013049008700552E-6	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999924464826636	WITHOUT_CLASSIFICATION	7.553517336416198E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999840515440883	WITHOUT_CLASSIFICATION	1.594845591166764E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999993935199377	WITHOUT_CLASSIFICATION	6.064800623371771E-7	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999994355972197	WITHOUT_CLASSIFICATION	5.644027802662125E-7	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9999892057082774	WITHOUT_CLASSIFICATION	1.079429172256162E-5	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999993755713749	WITHOUT_CLASSIFICATION	6.244286250919781E-7	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999997715407046	WITHOUT_CLASSIFICATION	2.2845929534251472E-7	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999980391888323	WITHOUT_CLASSIFICATION	1.9608111675955746E-6	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999999761377955	WITHOUT_CLASSIFICATION	2.3862204575581064E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999988986950992	WITHOUT_CLASSIFICATION	1.1013049008700552E-6	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999999101674133	WITHOUT_CLASSIFICATION	8.983258663405959E-8	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995819597465	WITHOUT_CLASSIFICATION	4.1804025356572544E-7	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996540039205	WITHOUT_CLASSIFICATION	3.4599607944728905E-7	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990928894362	WITHOUT_CLASSIFICATION	9.071105638120264E-7	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985753108559	WITHOUT_CLASSIFICATION	1.424689144128229E-6	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990031598165	WITHOUT_CLASSIFICATION	9.968401835361163E-7	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999979312121371	WITHOUT_CLASSIFICATION	2.0687878629791E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999979312121371	WITHOUT_CLASSIFICATION	2.0687878629791E-6	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999946685945305	WITHOUT_CLASSIFICATION	5.3314054694515005E-6	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999968651769867	WITHOUT_CLASSIFICATION	3.1348230133241815E-6	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999966917243224	WITHOUT_CLASSIFICATION	3.308275677530285E-6	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9999979496879535	WITHOUT_CLASSIFICATION	2.0503120464428614E-6	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9999992962127772	WITHOUT_CLASSIFICATION	7.03787222806956E-7	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963115194976	WITHOUT_CLASSIFICATION	3.68848050246721E-6	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999856093730944	WITHOUT_CLASSIFICATION	1.4390626905435322E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980246800291	WITHOUT_CLASSIFICATION	1.975319970933807E-6	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999999007730274	WITHOUT_CLASSIFICATION	9.922697264224151E-8	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999949559473663	WITHOUT_CLASSIFICATION	5.044052633706948E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963115194976	WITHOUT_CLASSIFICATION	3.68848050246721E-6	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999856093730944	WITHOUT_CLASSIFICATION	1.4390626905435322E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980246800291	WITHOUT_CLASSIFICATION	1.975319970933807E-6	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.999992830686795	WITHOUT_CLASSIFICATION	7.1693132050068725E-6	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.999979636705336	WITHOUT_CLASSIFICATION	2.036329466400892E-5	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.999999373647963	WITHOUT_CLASSIFICATION	6.263520370513726E-7	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999987615299863	WITHOUT_CLASSIFICATION	1.2384700136396264E-6	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.999999056553389	WITHOUT_CLASSIFICATION	9.434466109066845E-7	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999998412111882	WITHOUT_CLASSIFICATION	1.5878881188996665E-7	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.99999086806204	WITHOUT_CLASSIFICATION	9.131937960153868E-6	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.9999705225157407	WITHOUT_CLASSIFICATION	2.947748425940955E-5	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9999304813940815	WITHOUT_CLASSIFICATION	6.951860591863157E-5	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999989470373413	WITHOUT_CLASSIFICATION	1.052962658685333E-6	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999987540873516	WITHOUT_CLASSIFICATION	1.2459126483098355E-6	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999932495303853	WITHOUT_CLASSIFICATION	6.750469614722289E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.999970369930563	WITHOUT_CLASSIFICATION	2.9630069437083114E-5	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999839728751928	WITHOUT_CLASSIFICATION	1.6027124807151312E-5	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999983233589386	WITHOUT_CLASSIFICATION	1.6766410614703563E-6	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999534739714018	WITHOUT_CLASSIFICATION	4.652602859830584E-5	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.999990228804257	WITHOUT_CLASSIFICATION	9.771195742934777E-6	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.999934044883982	WITHOUT_CLASSIFICATION	6.595511601802933E-5	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999990610287063	WITHOUT_CLASSIFICATION	9.389712937065071E-7	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999957275428453	WITHOUT_CLASSIFICATION	4.272457154727294E-6	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.999997024666844	WITHOUT_CLASSIFICATION	2.975333156006846E-6	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999991214011213	WITHOUT_CLASSIFICATION	8.785988785642702E-7	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999981853513703	WITHOUT_CLASSIFICATION	1.8146486296078589E-6	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999998476996576	WITHOUT_CLASSIFICATION	1.5230034242293269E-7	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999998595099633	WITHOUT_CLASSIFICATION	1.404900366291004E-7	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9999968352974381	WITHOUT_CLASSIFICATION	3.1647025619874725E-6	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999970150805586	WITHOUT_CLASSIFICATION	2.9849194414963817E-6	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999949179869675	WITHOUT_CLASSIFICATION	5.08201303246108E-6	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.999995225614695	WITHOUT_CLASSIFICATION	4.77438530503927E-6	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999947385249177	WITHOUT_CLASSIFICATION	5.261475082240813E-6	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999923205624458	WITHOUT_CLASSIFICATION	7.679437554217307E-6	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999830582396237	WITHOUT_CLASSIFICATION	1.6941760376272355E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999830582396237	WITHOUT_CLASSIFICATION	1.6941760376272355E-5	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999995678329994	WITHOUT_CLASSIFICATION	4.321670007108581E-7	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999998105338354	WITHOUT_CLASSIFICATION	1.8946616471813332E-7	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999995458026235	WITHOUT_CLASSIFICATION	4.5419737647938945E-7	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997734556585585	WITHOUT_CLASSIFICATION	2.265443414416016E-4	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999993044280916	WITHOUT_CLASSIFICATION	6.955719084534477E-7	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9999988620253539	WITHOUT_CLASSIFICATION	1.137974646117723E-6	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.999889400067006	WITHOUT_CLASSIFICATION	1.1059993299402008E-4	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999977838235837	WITHOUT_CLASSIFICATION	2.216176416173261E-6	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.999997453619393	WITHOUT_CLASSIFICATION	2.54638060700596E-6	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987924283601	WITHOUT_CLASSIFICATION	1.207571639931819E-6	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989359950784	WITHOUT_CLASSIFICATION	1.064004921696407E-6	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998900207056	WITHOUT_CLASSIFICATION	1.0997929439873412E-6	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984081757344	WITHOUT_CLASSIFICATION	1.5918242656223735E-6	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991353083914	WITHOUT_CLASSIFICATION	8.646916087512715E-7	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989962950324	WITHOUT_CLASSIFICATION	1.00370496764784E-6	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988558700907	WITHOUT_CLASSIFICATION	1.1441299092773253E-6	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999370473897	WITHOUT_CLASSIFICATION	6.295261031243653E-7	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995315839287	WITHOUT_CLASSIFICATION	4.6841607119721886E-7	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983470453945	WITHOUT_CLASSIFICATION	1.6529546055826683E-6	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989046655602	WITHOUT_CLASSIFICATION	1.0953344398606734E-6	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999998010079341	WITHOUT_CLASSIFICATION	1.9899206596115373E-7	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9999974860539061	WITHOUT_CLASSIFICATION	2.513946093788709E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999994458161311	WITHOUT_CLASSIFICATION	5.541838689960969E-7	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999991948262846	WITHOUT_CLASSIFICATION	8.051737153891814E-7	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.999999940444033	WITHOUT_CLASSIFICATION	5.955596695252634E-8	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999983931695555	WITHOUT_CLASSIFICATION	1.6068304444898605E-6	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999999684425283	WITHOUT_CLASSIFICATION	3.155747178597728E-8	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9999994474828983	WITHOUT_CLASSIFICATION	5.525171017661522E-7	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999994458161311	WITHOUT_CLASSIFICATION	5.541838689960969E-7	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999994458161311	WITHOUT_CLASSIFICATION	5.541838689960969E-7	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9999975628484525	WITHOUT_CLASSIFICATION	2.4371515474655173E-6	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999996050116725	WITHOUT_CLASSIFICATION	3.949883275726661E-7	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999998266865522	WITHOUT_CLASSIFICATION	1.7331344774193513E-7	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999980456777635	WITHOUT_CLASSIFICATION	1.954322236493436E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999977768755268	WITHOUT_CLASSIFICATION	2.2231244732474883E-6	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999957275428453	WITHOUT_CLASSIFICATION	4.272457154727294E-6	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999986301973727	WITHOUT_CLASSIFICATION	1.3698026273121548E-6	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999995582449714	WITHOUT_CLASSIFICATION	4.4175502862907593E-7	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999996618659203	WITHOUT_CLASSIFICATION	3.381340798099493E-7	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988874152743	WITHOUT_CLASSIFICATION	1.1125847257735015E-6	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999993855260824	WITHOUT_CLASSIFICATION	6.144739176347864E-7	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999954356428462	WITHOUT_CLASSIFICATION	4.564357153754826E-6	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999965705468357	WITHOUT_CLASSIFICATION	3.4294531644799038E-6	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999965705468357	WITHOUT_CLASSIFICATION	3.4294531644799038E-6	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.999996125165301	WITHOUT_CLASSIFICATION	3.874834699010536E-6	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.999996125165301	WITHOUT_CLASSIFICATION	3.874834699010536E-6	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979986805748	WITHOUT_CLASSIFICATION	2.0013194252286246E-6	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999991754647635	WITHOUT_CLASSIFICATION	8.245352365036663E-6	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999903298645695	WITHOUT_CLASSIFICATION	9.670135430475073E-6	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999975691613769	WITHOUT_CLASSIFICATION	2.430838622995967E-6	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.999999952612284	WITHOUT_CLASSIFICATION	4.738771591482321E-8	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999994048271234	WITHOUT_CLASSIFICATION	5.951728766464983E-7	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998320395701	WITHOUT_CLASSIFICATION	1.6796042989862952E-6	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998978223157	WITHOUT_CLASSIFICATION	1.021776843091705E-6	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9999997674857416	WITHOUT_CLASSIFICATION	2.3251425840248536E-7	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999992372444682	WITHOUT_CLASSIFICATION	7.627555318843101E-7	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999953728578007	WITHOUT_CLASSIFICATION	4.627142199327988E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998360727124121	WITHOUT_CLASSIFICATION	1.63927287587913E-4	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.99999940506474	WITHOUT_CLASSIFICATION	5.94935259871992E-7	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999937493557272	WITHOUT_CLASSIFICATION	6.250644272855476E-6	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999984078466424	WITHOUT_CLASSIFICATION	1.5921533575747376E-6	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.9999915493032637	WITHOUT_CLASSIFICATION	8.450696736352303E-6	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999989054467299	WITHOUT_CLASSIFICATION	1.0945532701599386E-6	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999989054467299	WITHOUT_CLASSIFICATION	1.0945532701599386E-6	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999999086092802	WITHOUT_CLASSIFICATION	9.139071979892178E-8	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9999959191718054	WITHOUT_CLASSIFICATION	4.080828194650619E-6	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.999999596669945	WITHOUT_CLASSIFICATION	4.033300550993446E-7	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999857432502541	WITHOUT_CLASSIFICATION	1.425674974586633E-5	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995838296551	WITHOUT_CLASSIFICATION	4.161703448647869E-7	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993158687164	WITHOUT_CLASSIFICATION	6.841312836757755E-7	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.999998252005964	WITHOUT_CLASSIFICATION	1.7479940359534522E-6	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994495470345	WITHOUT_CLASSIFICATION	5.50452965558469E-7	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999998768914745	WITHOUT_CLASSIFICATION	1.231085254990813E-7	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999998723726872	WITHOUT_CLASSIFICATION	1.2762731282205215E-7	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.999999992542977	WITHOUT_CLASSIFICATION	7.45702298295777E-9	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999998996828616	WITHOUT_CLASSIFICATION	1.0031713834737338E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999974925751299	WITHOUT_CLASSIFICATION	2.5074248701442405E-6	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999990852235804	WITHOUT_CLASSIFICATION	9.147764196612039E-7	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999995019186885	WITHOUT_CLASSIFICATION	4.980813114395912E-7	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999970452740713	WITHOUT_CLASSIFICATION	2.9547259287576162E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999996329499244	WITHOUT_CLASSIFICATION	3.6705007555294465E-7	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999934218945995	WITHOUT_CLASSIFICATION	6.578105400462904E-6	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999865967452678	WITHOUT_CLASSIFICATION	1.3403254732122482E-5	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999975734749106	WITHOUT_CLASSIFICATION	2.4265250894822182E-6	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999997899986368	WITHOUT_CLASSIFICATION	2.100013632636615E-7	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999998741774659	WITHOUT_CLASSIFICATION	1.2582253406543862E-7	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999993593915757	WITHOUT_CLASSIFICATION	6.406084242988847E-7	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999965777941395	WITHOUT_CLASSIFICATION	3.422205860533404E-6	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999984550060519	WITHOUT_CLASSIFICATION	1.5449939481356558E-6	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999988138459986	WITHOUT_CLASSIFICATION	1.1861540013007575E-6	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999979952429633	WITHOUT_CLASSIFICATION	2.0047570367977567E-6	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9999902998239407	WITHOUT_CLASSIFICATION	9.700176059310816E-6	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999996867395232	WITHOUT_CLASSIFICATION	3.132604768274125E-7	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999958161811184	WITHOUT_CLASSIFICATION	4.183818881544471E-6	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999999922587707	WITHOUT_CLASSIFICATION	7.741229285017529E-9	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999726510075928	WITHOUT_CLASSIFICATION	2.7348992407181663E-5	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9998288341376252	WITHOUT_CLASSIFICATION	1.7116586237471396E-4	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9999986206840586	WITHOUT_CLASSIFICATION	1.3793159413944467E-6	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999882411164066	WITHOUT_CLASSIFICATION	1.1758883593385955E-5	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.999997928302292	WITHOUT_CLASSIFICATION	2.0716977080737666E-6	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999999342093876	WITHOUT_CLASSIFICATION	6.579061241128298E-8	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999995966197837	WITHOUT_CLASSIFICATION	4.033802163785311E-7	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999995078540109	WITHOUT_CLASSIFICATION	4.92145989053218E-7	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.9999977771976007	WITHOUT_CLASSIFICATION	2.2228023992411114E-6	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999996070321809	WITHOUT_CLASSIFICATION	3.929678190665176E-7	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.999999677793267	WITHOUT_CLASSIFICATION	3.22206732942338E-7	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999998678621775	WITHOUT_CLASSIFICATION	1.3213782239368964E-7	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999995147045172	WITHOUT_CLASSIFICATION	4.852954827838621E-7	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999981237178687	WITHOUT_CLASSIFICATION	1.8762821313471677E-6	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999839207098588	WITHOUT_CLASSIFICATION	1.6079290141223784E-5	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999882706590877	WITHOUT_CLASSIFICATION	1.1729340912197232E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999710195394226	WITHOUT_CLASSIFICATION	2.8980460577457067E-5	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999978338409005	WITHOUT_CLASSIFICATION	2.1661590994277335E-6	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9999891965811516	WITHOUT_CLASSIFICATION	1.0803418848406963E-5	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999966623387159	WITHOUT_CLASSIFICATION	3.3376612841167525E-6	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9999945958991755	WITHOUT_CLASSIFICATION	5.404100824475146E-6	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999909314163582	WITHOUT_CLASSIFICATION	9.068583641719064E-6	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.999995968686384	WITHOUT_CLASSIFICATION	4.0313136160804776E-6	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999969850975027	WITHOUT_CLASSIFICATION	3.014902497281722E-6	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999917517596293	WITHOUT_CLASSIFICATION	8.248240370704792E-6	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9999979168910448	WITHOUT_CLASSIFICATION	2.0831089551587636E-6	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9999937015643261	WITHOUT_CLASSIFICATION	6.29843567383637E-6	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999981346525845	WITHOUT_CLASSIFICATION	1.8653474154558383E-6	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9999943678068944	WITHOUT_CLASSIFICATION	5.632193105466634E-6	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999990554413716	WITHOUT_CLASSIFICATION	9.44558628494336E-7	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999987725171668	WITHOUT_CLASSIFICATION	1.2274828331758658E-6	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999661525657	WITHOUT_CLASSIFICATION	3.384743431278281E-8	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999963205223077	WITHOUT_CLASSIFICATION	3.679477692282229E-6	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.999991050144172	WITHOUT_CLASSIFICATION	8.949855828040521E-6	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999998672305326	WITHOUT_CLASSIFICATION	1.327694674246551E-7	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999999703461826	WITHOUT_CLASSIFICATION	2.9653817386752997E-8	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999980828888648	WITHOUT_CLASSIFICATION	1.9171111352229794E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999061606921934	WITHOUT_CLASSIFICATION	9.38393078065733E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999061606921934	WITHOUT_CLASSIFICATION	9.38393078065733E-5	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999893621148853	WITHOUT_CLASSIFICATION	1.0637885114647858E-5	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9999984370692911	WITHOUT_CLASSIFICATION	1.562930708871068E-6	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999994378246453	WITHOUT_CLASSIFICATION	5.621753547244375E-7	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999925109792258	WITHOUT_CLASSIFICATION	7.489020774226092E-6	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999995110508051	WITHOUT_CLASSIFICATION	4.889491949403881E-7	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.999999600309948	WITHOUT_CLASSIFICATION	3.996900519678377E-7	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999999861038961	WITHOUT_CLASSIFICATION	1.3896104033133763E-8	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999999855219776	WITHOUT_CLASSIFICATION	1.4478022516705139E-8	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9999911184747313	WITHOUT_CLASSIFICATION	8.881525268647261E-6	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999996488613663	WITHOUT_CLASSIFICATION	3.5113863378110734E-7	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999963389020364	WITHOUT_CLASSIFICATION	3.661097963615343E-6	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999971372773847	WITHOUT_CLASSIFICATION	2.8627226152748797E-6	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9999943292211471	WITHOUT_CLASSIFICATION	5.670778852909947E-6	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999995107169938	WITHOUT_CLASSIFICATION	4.892830062347406E-7	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999928272067645	WITHOUT_CLASSIFICATION	7.172793235377078E-6	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999988797900875	WITHOUT_CLASSIFICATION	1.1202099125403438E-6	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999611066421423	WITHOUT_CLASSIFICATION	3.889335785771343E-5	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999999088602098	WITHOUT_CLASSIFICATION	9.113979018300414E-8	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999992048407214	WITHOUT_CLASSIFICATION	7.95159278586579E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999995090270766	WITHOUT_CLASSIFICATION	4.909729235040367E-7	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999977307925506	WITHOUT_CLASSIFICATION	2.2692074494477476E-6	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999096401983176	WITHOUT_CLASSIFICATION	9.035980168247761E-5	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9999801107886113	WITHOUT_CLASSIFICATION	1.988921138869548E-5	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9999994750986951	WITHOUT_CLASSIFICATION	5.249013049009701E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999993780266353	WITHOUT_CLASSIFICATION	6.219733647826689E-7	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9999965162195833	WITHOUT_CLASSIFICATION	3.4837804168383793E-6	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999947301000669	WITHOUT_CLASSIFICATION	5.26989993306877E-6	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999936342872137	WITHOUT_CLASSIFICATION	6.36571278634298E-6	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999990205622502	WITHOUT_CLASSIFICATION	9.794377497855364E-7	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999983480246485	WITHOUT_CLASSIFICATION	1.6519753514523568E-6	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999982511243718	WITHOUT_CLASSIFICATION	1.7488756281264593E-6	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999970327155651	WITHOUT_CLASSIFICATION	2.9672844348494047E-6	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999880208353767	WITHOUT_CLASSIFICATION	1.1979164623193314E-5	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.9999978739545464	WITHOUT_CLASSIFICATION	2.126045453587563E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999841307392711	WITHOUT_CLASSIFICATION	1.586926072891699E-5	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999841307392711	WITHOUT_CLASSIFICATION	1.586926072891699E-5	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999917478989685	WITHOUT_CLASSIFICATION	8.252101031535224E-6	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9999962009104041	WITHOUT_CLASSIFICATION	3.799089595850274E-6	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999974382247562	WITHOUT_CLASSIFICATION	2.561775243810781E-6	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999991464112418	WITHOUT_CLASSIFICATION	8.535887581454833E-7	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.999999413672603	WITHOUT_CLASSIFICATION	5.863273970122208E-7	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999906654497608	WITHOUT_CLASSIFICATION	9.334550239219908E-6	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999989940323933	WITHOUT_CLASSIFICATION	1.0059676066125372E-6	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999999376845686	WITHOUT_CLASSIFICATION	6.231543143986277E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9999987055448043	WITHOUT_CLASSIFICATION	1.2944551957063044E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999996845690464	WITHOUT_CLASSIFICATION	3.1543095353696783E-7	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999998596406962	WITHOUT_CLASSIFICATION	1.4035930374106267E-7	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9999993381353572	WITHOUT_CLASSIFICATION	6.618646426908124E-7	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999989599969686	WITHOUT_CLASSIFICATION	1.0400030314124558E-6	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999987552844652	WITHOUT_CLASSIFICATION	1.24471553468845E-6	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999994431297765	WITHOUT_CLASSIFICATION	5.568702235321525E-7	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999943580036076	WITHOUT_CLASSIFICATION	5.641996392383634E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999943580036076	WITHOUT_CLASSIFICATION	5.641996392383634E-6	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999988444630465	WITHOUT_CLASSIFICATION	1.1555369534627736E-6	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.999994572543514	WITHOUT_CLASSIFICATION	5.427456486079726E-6	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999975721033519	WITHOUT_CLASSIFICATION	2.427896647943592E-6	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999990707413234	WITHOUT_CLASSIFICATION	9.292586764491995E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998360727124121	WITHOUT_CLASSIFICATION	1.63927287587913E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998987352000483	WITHOUT_CLASSIFICATION	1.0126479995167476E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999963980991696	WITHOUT_CLASSIFICATION	3.601900830477569E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999962976499943	WITHOUT_CLASSIFICATION	3.702350005727814E-6	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999962976499943	WITHOUT_CLASSIFICATION	3.702350005727814E-6	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999994882199488	WITHOUT_CLASSIFICATION	5.117800512233615E-7	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999999583133409	WITHOUT_CLASSIFICATION	4.168665920091731E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999985323966544	WITHOUT_CLASSIFICATION	1.467603345564921E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999999698403522	WITHOUT_CLASSIFICATION	3.015964784068103E-8	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9999993765914553	WITHOUT_CLASSIFICATION	6.2340854472966E-7	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999029168258173	WITHOUT_CLASSIFICATION	9.708317418268311E-5	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999997019081337	WITHOUT_CLASSIFICATION	2.9809186625109184E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999991820406889	WITHOUT_CLASSIFICATION	8.179593110184763E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999989129957783	WITHOUT_CLASSIFICATION	1.0870042217481682E-6	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9999993097646672	WITHOUT_CLASSIFICATION	6.902353328723284E-7	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999998083507575	WITHOUT_CLASSIFICATION	1.916492425510725E-7	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999968467245688	WITHOUT_CLASSIFICATION	3.153275431300332E-6	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999994359280769	WITHOUT_CLASSIFICATION	5.640719230932608E-7	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.999985607528809	WITHOUT_CLASSIFICATION	1.4392471190832488E-5	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999886530170785	WITHOUT_CLASSIFICATION	1.1346982921421231E-5	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999926971743681	WITHOUT_CLASSIFICATION	7.3028256317911306E-6	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999965480083253	WITHOUT_CLASSIFICATION	3.4519916746134E-6	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999865494745989	WITHOUT_CLASSIFICATION	1.3450525401171236E-5	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999990590916581	WITHOUT_CLASSIFICATION	9.409083419038948E-7	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999993567937159	WITHOUT_CLASSIFICATION	6.432062841375885E-7	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999984976410147	WITHOUT_CLASSIFICATION	1.502358985393988E-6	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999868943054023	WITHOUT_CLASSIFICATION	1.3105694597733806E-5	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999988165507617	WITHOUT_CLASSIFICATION	1.18344923820544E-6	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999995747047038	WITHOUT_CLASSIFICATION	4.252952961670813E-7	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999996405577156	WITHOUT_CLASSIFICATION	3.594422843681703E-7	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999994056288269	WITHOUT_CLASSIFICATION	5.943711730813619E-7	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999997162085874	WITHOUT_CLASSIFICATION	2.837914125413029E-7	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999994288665994	WITHOUT_CLASSIFICATION	5.711334005381926E-7	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999998358357924	WITHOUT_CLASSIFICATION	1.641642074431808E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999994598711606	WITHOUT_CLASSIFICATION	5.401288395116856E-7	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.999990033218647	WITHOUT_CLASSIFICATION	9.966781352994613E-6	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9999879173697732	WITHOUT_CLASSIFICATION	1.2082630226860183E-5	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999997944253404	WITHOUT_CLASSIFICATION	2.0557465957052425E-7	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999838694953719	WITHOUT_CLASSIFICATION	1.6130504628124175E-5	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999949263769579	WITHOUT_CLASSIFICATION	5.0736230421294024E-6	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999879645612867	WITHOUT_CLASSIFICATION	1.2035438713195706E-5	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.999992127082431	WITHOUT_CLASSIFICATION	7.872917568974648E-6	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.9999989124926979	WITHOUT_CLASSIFICATION	1.0875073021449252E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999959388259207	WITHOUT_CLASSIFICATION	4.061174079335816E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999967940327772	WITHOUT_CLASSIFICATION	3.205967222667028E-6	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999994636558429	WITHOUT_CLASSIFICATION	5.36344157066809E-7	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999987685516706	WITHOUT_CLASSIFICATION	1.2314483294072736E-6	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999842462130012	WITHOUT_CLASSIFICATION	1.57537869988963E-5	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999998858955127	WITHOUT_CLASSIFICATION	1.1410448729344975E-7	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999998076009247	WITHOUT_CLASSIFICATION	1.9239907545914533E-7	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.999998815124331	WITHOUT_CLASSIFICATION	1.1848756690188346E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999959388259207	WITHOUT_CLASSIFICATION	4.061174079335816E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999967940327772	WITHOUT_CLASSIFICATION	3.205967222667028E-6	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999989662649887	WITHOUT_CLASSIFICATION	1.033735011257532E-6	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.999996971423612	WITHOUT_CLASSIFICATION	3.0285763879770255E-6	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999990790479386	WITHOUT_CLASSIFICATION	9.209520614135237E-7	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999997003691824	WITHOUT_CLASSIFICATION	2.9963081763091756E-7	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999962034894421	WITHOUT_CLASSIFICATION	3.7965105578731924E-6	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999995059025055	WITHOUT_CLASSIFICATION	4.940974945476451E-7	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999801160586933	WITHOUT_CLASSIFICATION	1.9883941306640946E-5	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9999854613315826	WITHOUT_CLASSIFICATION	1.4538668417276322E-5	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999944046897203	WITHOUT_CLASSIFICATION	5.595310279644203E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9996571927903513	WITHOUT_CLASSIFICATION	3.428072096486508E-4	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999992143107742	WITHOUT_CLASSIFICATION	7.856892257731992E-7	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9996571927903513	WITHOUT_CLASSIFICATION	3.428072096486508E-4	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999999667974429	WITHOUT_CLASSIFICATION	3.320255711108292E-8	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999970438172467	WITHOUT_CLASSIFICATION	2.9561827531902438E-6	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999998855948027	WITHOUT_CLASSIFICATION	1.144051973097834E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995816534674	WITHOUT_CLASSIFICATION	4.1834653271201373E-7	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999993441490647	WITHOUT_CLASSIFICATION	6.558509352877712E-7	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9997975119799971	WITHOUT_CLASSIFICATION	2.024880200029537E-4	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9997975119799971	WITHOUT_CLASSIFICATION	2.024880200029537E-4	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999946822988129	WITHOUT_CLASSIFICATION	5.317701187049406E-6	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9999967647362571	WITHOUT_CLASSIFICATION	3.235263742844661E-6	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999943605107872	WITHOUT_CLASSIFICATION	5.639489212752931E-6	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999777657775242	WITHOUT_CLASSIFICATION	2.223422247588194E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9999875364605612	WITHOUT_CLASSIFICATION	1.2463539438734681E-5	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9999998931400617	WITHOUT_CLASSIFICATION	1.0685993833505092E-7	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999935529166711	WITHOUT_CLASSIFICATION	6.4470833289343326E-6	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999973102684286	WITHOUT_CLASSIFICATION	2.689731571370552E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999844240758758	WITHOUT_CLASSIFICATION	1.5575924124133044E-5	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9999604066591763	WITHOUT_CLASSIFICATION	3.959334082365431E-5	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.9999838822183156	WITHOUT_CLASSIFICATION	1.6117781684417683E-5	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9999826535502941	WITHOUT_CLASSIFICATION	1.7346449705791997E-5	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9999437686033394	WITHOUT_CLASSIFICATION	5.623139666051189E-5	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999977051549981	WITHOUT_CLASSIFICATION	2.294845001841661E-6	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9999968861421363	WITHOUT_CLASSIFICATION	3.113857863667922E-6	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999997906693445	WITHOUT_CLASSIFICATION	2.093306555537998E-7	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.999998374047163	WITHOUT_CLASSIFICATION	1.6259528370465014E-6	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999993722045517	WITHOUT_CLASSIFICATION	6.277954482821101E-7	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999991815959726	WITHOUT_CLASSIFICATION	8.184040274038351E-7	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.999824202128072	WITHOUT_CLASSIFICATION	1.757978719280178E-4	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999981685446566	WITHOUT_CLASSIFICATION	1.8314553433597722E-6	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.999962288761339	WITHOUT_CLASSIFICATION	3.7711238660922234E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999994192164415	WITHOUT_CLASSIFICATION	5.807835585199309E-7	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9999959265986881	WITHOUT_CLASSIFICATION	4.073401311911592E-6	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999967873447844	WITHOUT_CLASSIFICATION	3.212655215747793E-6	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9999176642506022	WITHOUT_CLASSIFICATION	8.233574939766484E-5	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9999993551528761	WITHOUT_CLASSIFICATION	6.448471239182982E-7	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9999908982596029	WITHOUT_CLASSIFICATION	9.101740397266908E-6	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9999995158012902	WITHOUT_CLASSIFICATION	4.841987097965523E-7	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.999997987598258	WITHOUT_CLASSIFICATION	2.0124017419551625E-6	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.9999878206989679	WITHOUT_CLASSIFICATION	1.2179301032056804E-5	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999987259042127	WITHOUT_CLASSIFICATION	1.2740957873586207E-6	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999935529166711	WITHOUT_CLASSIFICATION	6.4470833289343326E-6	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999988301731464	WITHOUT_CLASSIFICATION	1.1698268535670258E-6	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.9999887080951053	WITHOUT_CLASSIFICATION	1.1291904894543998E-5	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9992338544379742	WITHOUT_CLASSIFICATION	7.661455620258396E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9999847526885043	WITHOUT_CLASSIFICATION	1.5247311495712494E-5	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999990702653025	WITHOUT_CLASSIFICATION	9.29734697489576E-7	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999834214659579	WITHOUT_CLASSIFICATION	1.6578534042125364E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999777657775242	WITHOUT_CLASSIFICATION	2.223422247588194E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999777657775242	WITHOUT_CLASSIFICATION	2.223422247588194E-5	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999906741547632	WITHOUT_CLASSIFICATION	9.325845236836093E-6	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999949229277288	WITHOUT_CLASSIFICATION	5.0770722711078815E-6	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.999987447336786	WITHOUT_CLASSIFICATION	1.2552663213873727E-5	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999951064812839	WITHOUT_CLASSIFICATION	4.893518716179299E-6	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9999977635191215	WITHOUT_CLASSIFICATION	2.2364808784688005E-6	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999995282638409	WITHOUT_CLASSIFICATION	4.7173615911721904E-7	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999997336303105	WITHOUT_CLASSIFICATION	2.6636968953742134E-7	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999991635108486	WITHOUT_CLASSIFICATION	8.364891514559013E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999864476972277	WITHOUT_CLASSIFICATION	1.3552302772288688E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999981102193634	WITHOUT_CLASSIFICATION	1.8897806365968827E-6	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9999951331394041	WITHOUT_CLASSIFICATION	4.866860595791954E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998220534517833	WITHOUT_CLASSIFICATION	1.7794654821666998E-4	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9999739626450576	WITHOUT_CLASSIFICATION	2.6037354942439757E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999981102193634	WITHOUT_CLASSIFICATION	1.8897806365968827E-6	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999946619041862	WITHOUT_CLASSIFICATION	5.338095813830499E-6	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999992798080936	WITHOUT_CLASSIFICATION	7.20191906518996E-7	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999857251646571	WITHOUT_CLASSIFICATION	1.4274835342751784E-5	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9988359330416802	WITHOUT_CLASSIFICATION	0.0011640669583197728	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998220534517833	WITHOUT_CLASSIFICATION	1.7794654821666998E-4	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999938838497466	WITHOUT_CLASSIFICATION	6.116150253393474E-6	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999982212074723	WITHOUT_CLASSIFICATION	1.7787925276245313E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998392349316	WITHOUT_CLASSIFICATION	1.6076506846672593E-7	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999996718267061	WITHOUT_CLASSIFICATION	3.281732938053644E-7	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9998024697050601	WITHOUT_CLASSIFICATION	1.9753029493992756E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999974216140723	WITHOUT_CLASSIFICATION	2.578385927631451E-6	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999964290909563	WITHOUT_CLASSIFICATION	3.5709090437234994E-6	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999845062459249	WITHOUT_CLASSIFICATION	1.5493754075124875E-5	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999993990938715	WITHOUT_CLASSIFICATION	6.009061286514762E-7	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999991906812993	WITHOUT_CLASSIFICATION	8.093187006254634E-7	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999990354711332	WITHOUT_CLASSIFICATION	9.645288667495947E-7	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9999991860857563	WITHOUT_CLASSIFICATION	8.13914243647266E-7	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999981102193634	WITHOUT_CLASSIFICATION	1.8897806365968827E-6	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999938838497466	WITHOUT_CLASSIFICATION	6.116150253393474E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998392349316	WITHOUT_CLASSIFICATION	1.6076506846672593E-7	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999825489236797	WITHOUT_CLASSIFICATION	1.7451076320399056E-5	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.999999890090902	WITHOUT_CLASSIFICATION	1.099090981035144E-7	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999962187312254	WITHOUT_CLASSIFICATION	3.7812687747739367E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998220534517833	WITHOUT_CLASSIFICATION	1.7794654821666998E-4	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.999997759625289	WITHOUT_CLASSIFICATION	2.240374710934028E-6	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999821433527659	WITHOUT_CLASSIFICATION	1.7856647234057107E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999693307899858	WITHOUT_CLASSIFICATION	3.0669210014112506E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999749427679178	WITHOUT_CLASSIFICATION	2.505723208220793E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999845062459249	WITHOUT_CLASSIFICATION	1.5493754075124875E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999946619041862	WITHOUT_CLASSIFICATION	5.338095813830499E-6	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.9999892120622091	WITHOUT_CLASSIFICATION	1.0787937790957069E-5	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999919606983987	WITHOUT_CLASSIFICATION	8.039301601319491E-6	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9999846452881813	WITHOUT_CLASSIFICATION	1.5354711818692425E-5	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9999987154146924	WITHOUT_CLASSIFICATION	1.284585307626988E-6	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.99999707465005	WITHOUT_CLASSIFICATION	2.925349950010206E-6	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9999919658721372	WITHOUT_CLASSIFICATION	8.034127862709717E-6	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9999797347139577	WITHOUT_CLASSIFICATION	2.026528604217157E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995816534674	WITHOUT_CLASSIFICATION	4.1834653271201373E-7	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996471788263	WITHOUT_CLASSIFICATION	3.528211737068666E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999602014039162	WITHOUT_CLASSIFICATION	3.979859608372443E-5	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999987660157169	WITHOUT_CLASSIFICATION	1.2339842830802422E-6	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999747455362296	WITHOUT_CLASSIFICATION	2.5254463770450075E-5	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.999975811942953	WITHOUT_CLASSIFICATION	2.4188057046972865E-5	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999893119718873	WITHOUT_CLASSIFICATION	1.0688028112720072E-5	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999998155498047	WITHOUT_CLASSIFICATION	1.8445019537596895E-7	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999979296537382	WITHOUT_CLASSIFICATION	2.0703462617350974E-6	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999981809313642	WITHOUT_CLASSIFICATION	1.8190686358644184E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999749427679178	WITHOUT_CLASSIFICATION	2.505723208220793E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999602014039162	WITHOUT_CLASSIFICATION	3.979859608372443E-5	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999814113520819	WITHOUT_CLASSIFICATION	1.8588647918079356E-5	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.999989657575124	WITHOUT_CLASSIFICATION	1.0342424876062979E-5	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9999144678255691	WITHOUT_CLASSIFICATION	8.553217443084866E-5	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999596740142931	WITHOUT_CLASSIFICATION	4.0325985706877284E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9999097484182616	WITHOUT_CLASSIFICATION	9.025158173828546E-5	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999992767676967	WITHOUT_CLASSIFICATION	7.232323033320356E-7	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999989800984823	WITHOUT_CLASSIFICATION	1.0199015177204073E-6	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9999885987211302	WITHOUT_CLASSIFICATION	1.1401278869727046E-5	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999995963327959	WITHOUT_CLASSIFICATION	4.0366720415859065E-7	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999966297803219	WITHOUT_CLASSIFICATION	3.3702196781039068E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999954086022872	WITHOUT_CLASSIFICATION	4.5913977128810286E-6	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.999996177825643	WITHOUT_CLASSIFICATION	3.822174357082471E-6	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9999983203064956	WITHOUT_CLASSIFICATION	1.679693504357196E-6	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.999993695349226	WITHOUT_CLASSIFICATION	6.304650774009257E-6	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9999985452255264	WITHOUT_CLASSIFICATION	1.4547744735399764E-6	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999762487587871	WITHOUT_CLASSIFICATION	2.3751241212860206E-5	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.999999359537845	WITHOUT_CLASSIFICATION	6.404621549481233E-7	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999986812114353	WITHOUT_CLASSIFICATION	1.3187885647061576E-6	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999989123974347	WITHOUT_CLASSIFICATION	1.0876025653182818E-6	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9999783498907736	WITHOUT_CLASSIFICATION	2.165010922644555E-5	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999887357712097	WITHOUT_CLASSIFICATION	1.1264228790207985E-5	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999987072044803	WITHOUT_CLASSIFICATION	1.2927955196671863E-6	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999982487357287	WITHOUT_CLASSIFICATION	1.7512642712808507E-6	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999995624645156	WITHOUT_CLASSIFICATION	4.375354845028857E-7	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999996578923853	WITHOUT_CLASSIFICATION	3.4210761469670923E-7	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.9998033039813229	WITHOUT_CLASSIFICATION	1.9669601867713154E-4	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999748731276319	WITHOUT_CLASSIFICATION	2.512687236813408E-5	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999851637077037	WITHOUT_CLASSIFICATION	1.4836292296303611E-5	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999992664834428	WITHOUT_CLASSIFICATION	7.33516557140293E-7	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.9997958392523062	WITHOUT_CLASSIFICATION	2.041607476938868E-4	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999997393153628	WITHOUT_CLASSIFICATION	2.6068463722831155E-7	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999984901963603	WITHOUT_CLASSIFICATION	1.5098036396996281E-6	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.999999158573408	WITHOUT_CLASSIFICATION	8.414265919851782E-7	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999997927152701	WITHOUT_CLASSIFICATION	2.0728472995534148E-7	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999990069697666	WITHOUT_CLASSIFICATION	9.930302334224608E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999957474020138	WITHOUT_CLASSIFICATION	4.252597986159717E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999904800048849	WITHOUT_CLASSIFICATION	9.519995115195896E-6	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999999882975834	WITHOUT_CLASSIFICATION	1.1702416635652982E-8	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999957474020138	WITHOUT_CLASSIFICATION	4.252597986159717E-6	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999990069697666	WITHOUT_CLASSIFICATION	9.930302334224608E-7	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999904800048849	WITHOUT_CLASSIFICATION	9.519995115195896E-6	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.9999938974200393	WITHOUT_CLASSIFICATION	6.102579960629705E-6	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999993918800472	WITHOUT_CLASSIFICATION	6.081199528227492E-7	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999999391291563	WITHOUT_CLASSIFICATION	6.087084377894836E-8	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9999971558914763	WITHOUT_CLASSIFICATION	2.844108523760087E-6	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999999948210336	WITHOUT_CLASSIFICATION	5.178966351301192E-9	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9999796187265272	WITHOUT_CLASSIFICATION	2.0381273472771887E-5	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9999961271475996	WITHOUT_CLASSIFICATION	3.87285240039891E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999991626612116	WITHOUT_CLASSIFICATION	8.373387884025546E-7	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9999994896715092	WITHOUT_CLASSIFICATION	5.103284909134035E-7	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999966342484161	WITHOUT_CLASSIFICATION	3.365751583820587E-6	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999987023792375	WITHOUT_CLASSIFICATION	1.297620762502255E-6	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999996215082965	WITHOUT_CLASSIFICATION	3.784917034686373E-7	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999987223505946	WITHOUT_CLASSIFICATION	1.2776494052771981E-6	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.999980718968011	WITHOUT_CLASSIFICATION	1.928103198907132E-5	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999999505645816	WITHOUT_CLASSIFICATION	4.943541849198133E-8	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999995233691282	WITHOUT_CLASSIFICATION	4.7663087173046923E-7	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999999560831236	WITHOUT_CLASSIFICATION	4.391687628008283E-8	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999993474861845	WITHOUT_CLASSIFICATION	6.525138155945762E-7	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999999927336628	WITHOUT_CLASSIFICATION	7.266337171729321E-9	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999994772336719	WITHOUT_CLASSIFICATION	5.227663281653178E-7	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9999996463506047	WITHOUT_CLASSIFICATION	3.5364939528997397E-7	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999998714412789	WITHOUT_CLASSIFICATION	1.285587212270572E-7	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999991608482437	WITHOUT_CLASSIFICATION	8.391517562136367E-7	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.999999567352926	WITHOUT_CLASSIFICATION	4.326470739307761E-7	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999997253414602	WITHOUT_CLASSIFICATION	2.746585397890444E-7	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999997253414602	WITHOUT_CLASSIFICATION	2.746585397890444E-7	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.999999702626205	WITHOUT_CLASSIFICATION	2.973737951197327E-7	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.999999702626205	WITHOUT_CLASSIFICATION	2.973737951197327E-7	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.9999988063185208	WITHOUT_CLASSIFICATION	1.1936814791113056E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999999560831236	WITHOUT_CLASSIFICATION	4.391687628008283E-8	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9999995288958836	WITHOUT_CLASSIFICATION	4.711041163679439E-7	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999997525008877	WITHOUT_CLASSIFICATION	2.4749911232364676E-7	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999721722422756	WITHOUT_CLASSIFICATION	2.7827757724394107E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999721722422756	WITHOUT_CLASSIFICATION	2.7827757724394107E-5	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999965010926605	WITHOUT_CLASSIFICATION	3.498907339585537E-6	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999992388451241	WITHOUT_CLASSIFICATION	7.611548759247564E-7	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999962750058928	WITHOUT_CLASSIFICATION	3.724994107237927E-6	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999947627058807	WITHOUT_CLASSIFICATION	5.237294119249859E-6	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999918910020247	WITHOUT_CLASSIFICATION	8.108997975199163E-6	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999999540925046	WITHOUT_CLASSIFICATION	4.590749543175875E-8	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9999672197657414	WITHOUT_CLASSIFICATION	3.2780234258585845E-5	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999994901392847	WITHOUT_CLASSIFICATION	5.098607152264516E-7	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9999661051556383	WITHOUT_CLASSIFICATION	3.3894844361559944E-5	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999964176771986	WITHOUT_CLASSIFICATION	3.5823228014693295E-6	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.999991269565786	WITHOUT_CLASSIFICATION	8.730434214020753E-6	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9999966384928578	WITHOUT_CLASSIFICATION	3.361507142139091E-6	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999970650212633	WITHOUT_CLASSIFICATION	2.934978736787932E-6	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999844228679144	WITHOUT_CLASSIFICATION	1.5577132085513635E-5	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9999990053038523	WITHOUT_CLASSIFICATION	9.946961476730575E-7	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999982421995315	WITHOUT_CLASSIFICATION	1.7578004685103534E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971364910548	WITHOUT_CLASSIFICATION	2.8635089452113164E-6	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999998139421625	WITHOUT_CLASSIFICATION	1.8605783739185782E-7	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999999761903031	WITHOUT_CLASSIFICATION	2.3809696908955402E-8	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.999999933464689	WITHOUT_CLASSIFICATION	6.653531104080349E-8	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999997883758446	WITHOUT_CLASSIFICATION	2.1162415543288807E-7	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999990986743906	WITHOUT_CLASSIFICATION	9.013256093485353E-7	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.999999609339387	WITHOUT_CLASSIFICATION	3.9066061288014535E-7	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999995742914548	WITHOUT_CLASSIFICATION	4.257085451910342E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997734556585585	WITHOUT_CLASSIFICATION	2.265443414416016E-4	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999967422973222	WITHOUT_CLASSIFICATION	3.257702677931057E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999602014039162	WITHOUT_CLASSIFICATION	3.979859608372443E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.999996177825643	WITHOUT_CLASSIFICATION	3.822174357082471E-6	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999919912955907	WITHOUT_CLASSIFICATION	8.00870440919096E-6	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999997855835326	WITHOUT_CLASSIFICATION	2.1441646732063967E-7	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999934958650054	WITHOUT_CLASSIFICATION	6.504134994645404E-6	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986125008651	WITHOUT_CLASSIFICATION	1.387499134983901E-6	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.999972769537097	WITHOUT_CLASSIFICATION	2.7230462903007184E-5	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.999972769537097	WITHOUT_CLASSIFICATION	2.7230462903007184E-5	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999997279780996	WITHOUT_CLASSIFICATION	2.7202190051785724E-7	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999977391712436	WITHOUT_CLASSIFICATION	2.26082875647306E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999964647373795	WITHOUT_CLASSIFICATION	3.53526262056836E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999964647373795	WITHOUT_CLASSIFICATION	3.53526262056836E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999995576421868	WITHOUT_CLASSIFICATION	4.423578132111079E-7	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9999992011112279	WITHOUT_CLASSIFICATION	7.988887721692231E-7	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9999517076457037	WITHOUT_CLASSIFICATION	4.829235429629782E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999977768755268	WITHOUT_CLASSIFICATION	2.2231244732474883E-6	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.9999888140257407	WITHOUT_CLASSIFICATION	1.118597425930825E-5	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999964000372088	WITHOUT_CLASSIFICATION	3.599962791205499E-6	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999979556982892	WITHOUT_CLASSIFICATION	2.0443017109223665E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999992666264645	WITHOUT_CLASSIFICATION	7.33373535348188E-7	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999998258523644	WITHOUT_CLASSIFICATION	1.741476356610807E-7	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999998258523644	WITHOUT_CLASSIFICATION	1.741476356610807E-7	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999999834089663	WITHOUT_CLASSIFICATION	1.6591033648137055E-8	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999992885487058	WITHOUT_CLASSIFICATION	7.114512941545591E-7	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999992885487058	WITHOUT_CLASSIFICATION	7.114512941545591E-7	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999997926647202	WITHOUT_CLASSIFICATION	2.0733527988965792E-7	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999980570752118	WITHOUT_CLASSIFICATION	1.942924788108252E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9948766154617533	WITHOUT_CLASSIFICATION	0.0051233845382466225	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999987152700777	WITHOUT_CLASSIFICATION	1.2847299222843349E-6	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999987764920371	WITHOUT_CLASSIFICATION	1.2235079629017224E-6	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999988538623406	WITHOUT_CLASSIFICATION	1.1461376594072658E-6	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999997363067019	WITHOUT_CLASSIFICATION	2.6369329811017665E-7	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999946304207098	WITHOUT_CLASSIFICATION	5.369579290205249E-6	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999987392100398	WITHOUT_CLASSIFICATION	1.2607899601848385E-6	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9999951253294291	WITHOUT_CLASSIFICATION	4.874670570954795E-6	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999999976359104	WITHOUT_CLASSIFICATION	2.364089627082677E-9	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9999997779953167	WITHOUT_CLASSIFICATION	2.2200468330331093E-7	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999935848741744	WITHOUT_CLASSIFICATION	6.415125825489797E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999935848741744	WITHOUT_CLASSIFICATION	6.415125825489797E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999935848741744	WITHOUT_CLASSIFICATION	6.415125825489797E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999935848741744	WITHOUT_CLASSIFICATION	6.415125825489797E-6	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999986725597529	WITHOUT_CLASSIFICATION	1.327440247109631E-6	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999994401296667	WITHOUT_CLASSIFICATION	5.598703333040816E-7	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9999513090912048	WITHOUT_CLASSIFICATION	4.8690908795174555E-5	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.9999033856737104	WITHOUT_CLASSIFICATION	9.66143262895971E-5	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999967782026977	WITHOUT_CLASSIFICATION	3.2217973022835603E-6	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9999929983475362	WITHOUT_CLASSIFICATION	7.001652463855107E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998360727124121	WITHOUT_CLASSIFICATION	1.63927287587913E-4	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999991063496051	WITHOUT_CLASSIFICATION	8.936503949431616E-7	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999844291607841	WITHOUT_CLASSIFICATION	1.557083921588137E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998360727124121	WITHOUT_CLASSIFICATION	1.63927287587913E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998360727124121	WITHOUT_CLASSIFICATION	1.63927287587913E-4	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999997049580884	WITHOUT_CLASSIFICATION	2.9504191160354446E-7	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999989565285591	WITHOUT_CLASSIFICATION	1.0434714408170876E-6	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999983866592089	WITHOUT_CLASSIFICATION	1.613340791158651E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999964783407257	WITHOUT_CLASSIFICATION	3.5216592743225027E-6	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999988196843822	WITHOUT_CLASSIFICATION	1.180315617868214E-6	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999992349943003	WITHOUT_CLASSIFICATION	7.650056997429835E-7	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999714670621276	WITHOUT_CLASSIFICATION	2.8532937872327123E-5	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999964783407257	WITHOUT_CLASSIFICATION	3.5216592743225027E-6	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9999997648418874	WITHOUT_CLASSIFICATION	2.3515811256510955E-7	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999998722214922	WITHOUT_CLASSIFICATION	1.2777850785756488E-7	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999997500824591	WITHOUT_CLASSIFICATION	2.499175409233158E-7	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999993497694493	WITHOUT_CLASSIFICATION	6.502305507205106E-7	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.999999912331523	WITHOUT_CLASSIFICATION	8.766847707352084E-8	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9999995895106626	WITHOUT_CLASSIFICATION	4.104893374262273E-7	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999994010907565	WITHOUT_CLASSIFICATION	5.989092435360889E-7	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9999942717278947	WITHOUT_CLASSIFICATION	5.7282721054003524E-6	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997138575569	WITHOUT_CLASSIFICATION	2.8614244304157954E-7	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999936679835015	WITHOUT_CLASSIFICATION	6.332016498458025E-6	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996511763098	WITHOUT_CLASSIFICATION	3.4882369008289283E-7	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999995174746127	WITHOUT_CLASSIFICATION	4.825253873499477E-7	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999969584186162	WITHOUT_CLASSIFICATION	3.0415813837701598E-6	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9999722733787945	WITHOUT_CLASSIFICATION	2.7726621205554687E-5	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999997715740395	WITHOUT_CLASSIFICATION	2.2842596044459902E-7	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9999986092931744	WITHOUT_CLASSIFICATION	1.3907068256403965E-6	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999997887561045	WITHOUT_CLASSIFICATION	2.1124389544995113E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999994578041158	WITHOUT_CLASSIFICATION	5.421958841466716E-7	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.999999399259871	WITHOUT_CLASSIFICATION	6.007401290148276E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999994578041158	WITHOUT_CLASSIFICATION	5.421958841466716E-7	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999998167214782	WITHOUT_CLASSIFICATION	1.83278521896834E-7	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999999235833069	WITHOUT_CLASSIFICATION	7.641669305588872E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999965840518275	WITHOUT_CLASSIFICATION	3.4159481727002815E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999782194895861	WITHOUT_CLASSIFICATION	2.1780510413950012E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999997887561045	WITHOUT_CLASSIFICATION	2.1124389544995113E-7	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.999999399259871	WITHOUT_CLASSIFICATION	6.007401290148276E-7	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999998167214782	WITHOUT_CLASSIFICATION	1.83278521896834E-7	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999994957775097	WITHOUT_CLASSIFICATION	5.042224903779377E-7	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9999763502595681	WITHOUT_CLASSIFICATION	2.3649740431918903E-5	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.999985842528389	WITHOUT_CLASSIFICATION	1.4157471610915054E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9999934913808879	WITHOUT_CLASSIFICATION	6.508619112216302E-6	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999996118220478	WITHOUT_CLASSIFICATION	3.881779522588553E-7	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999958425776222	WITHOUT_CLASSIFICATION	4.1574223778348666E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971364910548	WITHOUT_CLASSIFICATION	2.8635089452113164E-6	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999999235833069	WITHOUT_CLASSIFICATION	7.641669305588872E-8	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.999999626330353	WITHOUT_CLASSIFICATION	3.736696470519443E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9999946443748763	WITHOUT_CLASSIFICATION	5.3556251237251184E-6	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999985160937169	WITHOUT_CLASSIFICATION	1.4839062830566323E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971364910548	WITHOUT_CLASSIFICATION	2.8635089452113164E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999602014039162	WITHOUT_CLASSIFICATION	3.979859608372443E-5	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999975706603002	WITHOUT_CLASSIFICATION	2.4293396999256997E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971364910548	WITHOUT_CLASSIFICATION	2.8635089452113164E-6	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999998551496567	WITHOUT_CLASSIFICATION	1.4485034326607214E-7	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999985390525378	WITHOUT_CLASSIFICATION	1.4609474622658335E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999602014039162	WITHOUT_CLASSIFICATION	3.979859608372443E-5	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9999680134871503	WITHOUT_CLASSIFICATION	3.1986512849751126E-5	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999984939547284	WITHOUT_CLASSIFICATION	1.5060452715843505E-6	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999996829624371	WITHOUT_CLASSIFICATION	3.170375628033055E-7	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.999997955103835	WITHOUT_CLASSIFICATION	2.044896164858892E-6	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999998486419536	WITHOUT_CLASSIFICATION	1.5135804641916914E-7	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999984753731139	WITHOUT_CLASSIFICATION	1.5246268861748444E-6	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999975728918059	WITHOUT_CLASSIFICATION	2.4271081940880964E-6	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9999938989896252	WITHOUT_CLASSIFICATION	6.101010374837188E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999061606921934	WITHOUT_CLASSIFICATION	9.38393078065733E-5	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999991012761749	WITHOUT_CLASSIFICATION	8.987238252638384E-7	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9948766154617533	WITHOUT_CLASSIFICATION	0.0051233845382466225	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.999990926681863	WITHOUT_CLASSIFICATION	9.073318136981763E-6	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9999988642476002	WITHOUT_CLASSIFICATION	1.1357523997615972E-6	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9999972235500206	WITHOUT_CLASSIFICATION	2.776449979311001E-6	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999308000130556	WITHOUT_CLASSIFICATION	6.919998694441965E-5	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999998387214625	WITHOUT_CLASSIFICATION	1.612785374547271E-7	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999997928616462	WITHOUT_CLASSIFICATION	2.0713835375517622E-7	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999999341258836	WITHOUT_CLASSIFICATION	6.58741164626005E-8	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9999897195469776	WITHOUT_CLASSIFICATION	1.0280453022330583E-5	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999989965504551	WITHOUT_CLASSIFICATION	1.003449544949142E-6	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999974184756993	WITHOUT_CLASSIFICATION	2.5815243007039257E-6	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9948935413029426	WITHOUT_CLASSIFICATION	0.00510645869705735	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999997501373911	WITHOUT_CLASSIFICATION	2.498626088681729E-7	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999995842925253	WITHOUT_CLASSIFICATION	4.157074746011615E-7	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999980143655847	WITHOUT_CLASSIFICATION	1.9856344153266643E-6	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999955088224027	WITHOUT_CLASSIFICATION	4.4911775973248806E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9999245371547465	WITHOUT_CLASSIFICATION	7.546284525344149E-5	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999995224796578	WITHOUT_CLASSIFICATION	4.775203422044833E-7	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9999991749167536	WITHOUT_CLASSIFICATION	8.250832464411294E-7	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999977815313494	WITHOUT_CLASSIFICATION	2.2184686505481942E-6	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9999657882836024	WITHOUT_CLASSIFICATION	3.421171639764032E-5	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999973840957992	WITHOUT_CLASSIFICATION	2.615904200782948E-6	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9969228335504141	WITHOUT_CLASSIFICATION	0.003077166449585859	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999936563559928	WITHOUT_CLASSIFICATION	6.343644007289418E-6	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999504438801603	WITHOUT_CLASSIFICATION	4.955611983976577E-5	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9999270242825576	WITHOUT_CLASSIFICATION	7.297571744234716E-5	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999886866441149	WITHOUT_CLASSIFICATION	1.1313355885187586E-5	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999977804114097	WITHOUT_CLASSIFICATION	2.219588590175253E-6	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9936156698556	WITHOUT_CLASSIFICATION	0.006384330144400013	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999991597871759	WITHOUT_CLASSIFICATION	8.402128240242797E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999602014039162	WITHOUT_CLASSIFICATION	3.979859608372443E-5	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999989260605732	WITHOUT_CLASSIFICATION	1.0739394268748443E-6	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999640708759118	WITHOUT_CLASSIFICATION	3.592912408812748E-5	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999640708759118	WITHOUT_CLASSIFICATION	3.592912408812748E-5	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999999802280668	WITHOUT_CLASSIFICATION	1.977193316264878E-8	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999984753731139	WITHOUT_CLASSIFICATION	1.5246268861748444E-6	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9999962132295726	WITHOUT_CLASSIFICATION	3.786770427444572E-6	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999987391374002	WITHOUT_CLASSIFICATION	1.2608625996807435E-6	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999997770602935	WITHOUT_CLASSIFICATION	2.2293970651779296E-7	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.999999893319421	WITHOUT_CLASSIFICATION	1.0668057909970062E-7	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.999983346939151	WITHOUT_CLASSIFICATION	1.6653060848942016E-5	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9998612892948282	WITHOUT_CLASSIFICATION	1.387107051718497E-4	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9999991793170027	WITHOUT_CLASSIFICATION	8.206829973725821E-7	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9999997559822849	WITHOUT_CLASSIFICATION	2.4401771517337987E-7	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999985498264812	WITHOUT_CLASSIFICATION	1.4501735188962656E-6	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.9999980744517242	WITHOUT_CLASSIFICATION	1.9255482758053775E-6	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999998125586063	WITHOUT_CLASSIFICATION	1.874413936569425E-7	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.999992623093275	WITHOUT_CLASSIFICATION	7.3769067250535725E-6	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999995636265306	WITHOUT_CLASSIFICATION	4.3637346937369285E-7	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999720046117	WITHOUT_CLASSIFICATION	2.799538831272765E-8	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999973772545484	WITHOUT_CLASSIFICATION	2.62274545169883E-6	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999999462150903	WITHOUT_CLASSIFICATION	5.37849096282944E-8	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999998290762792	WITHOUT_CLASSIFICATION	1.7092372094274107E-7	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999998604325945	WITHOUT_CLASSIFICATION	1.3956740538366668E-7	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999998632556311	WITHOUT_CLASSIFICATION	1.3674436893103072E-7	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999995968729439	WITHOUT_CLASSIFICATION	4.0312705619044196E-7	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.999999973631083	WITHOUT_CLASSIFICATION	2.6368917105472575E-8	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999999289440442	WITHOUT_CLASSIFICATION	7.105595577248372E-8	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9936156698556	WITHOUT_CLASSIFICATION	0.006384330144400013	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999998088283422	WITHOUT_CLASSIFICATION	1.9117165778415098E-7	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999986724704462	WITHOUT_CLASSIFICATION	1.3275295539191751E-6	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999996312431604	WITHOUT_CLASSIFICATION	3.68756839703337E-7	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.999994812259738	WITHOUT_CLASSIFICATION	5.187740261926957E-6	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9999990840934877	WITHOUT_CLASSIFICATION	9.159065123880383E-7	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999999406471725	WITHOUT_CLASSIFICATION	5.9352827479530256E-8	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999802439080955	WITHOUT_CLASSIFICATION	1.9756091904491303E-5	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999978399535266	WITHOUT_CLASSIFICATION	2.160046473403176E-6	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999995401094388	WITHOUT_CLASSIFICATION	4.598905612501239E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999986835766858	WITHOUT_CLASSIFICATION	1.3164233142480344E-6	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999985470879976	WITHOUT_CLASSIFICATION	1.4529120023416135E-6	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999998424064553	WITHOUT_CLASSIFICATION	1.5759354469690699E-7	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9999936784064883	WITHOUT_CLASSIFICATION	6.321593511671286E-6	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999999349279564	WITHOUT_CLASSIFICATION	6.507204366916714E-8	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999999447500402	WITHOUT_CLASSIFICATION	5.5249959853042175E-8	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999999447500402	WITHOUT_CLASSIFICATION	5.5249959853042175E-8	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.99999915298961	WITHOUT_CLASSIFICATION	8.470103900890264E-7	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9999983010631642	WITHOUT_CLASSIFICATION	1.6989368358344266E-6	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9998188951263179	WITHOUT_CLASSIFICATION	1.8110487368217502E-4	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9998188951263179	WITHOUT_CLASSIFICATION	1.8110487368217502E-4	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999987285669999	WITHOUT_CLASSIFICATION	1.2714330000282715E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999857618588556	WITHOUT_CLASSIFICATION	1.4238141144309705E-5	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.9999999926166294	WITHOUT_CLASSIFICATION	7.3833705376729174E-9	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999975171290788	WITHOUT_CLASSIFICATION	2.4828709212380945E-6	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999954800920232	WITHOUT_CLASSIFICATION	4.519907976883532E-6	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999975727393323	WITHOUT_CLASSIFICATION	2.4272606677921776E-6	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999991355052945	WITHOUT_CLASSIFICATION	8.644947054557991E-7	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999991355052945	WITHOUT_CLASSIFICATION	8.644947054557991E-7	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999975245872423	WITHOUT_CLASSIFICATION	2.475412757679243E-6	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9999987175855183	WITHOUT_CLASSIFICATION	1.282414481756442E-6	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999327338787957	WITHOUT_CLASSIFICATION	6.726612120438345E-5	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999984234372115	WITHOUT_CLASSIFICATION	1.5765627884956815E-6	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999984234372115	WITHOUT_CLASSIFICATION	1.5765627884956815E-6	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999988306952394	WITHOUT_CLASSIFICATION	1.1693047605296851E-6	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999988434914302	WITHOUT_CLASSIFICATION	1.156508569832969E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999997160363066	WITHOUT_CLASSIFICATION	2.8396369347480624E-7	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999991141418285	WITHOUT_CLASSIFICATION	8.858581714139869E-7	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999976932157458	WITHOUT_CLASSIFICATION	2.3067842541175774E-6	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999993375552418	WITHOUT_CLASSIFICATION	6.624447581595052E-7	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999986454216748	WITHOUT_CLASSIFICATION	1.3545783252218874E-6	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999968322880217	WITHOUT_CLASSIFICATION	3.1677119783708685E-6	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999995137851971	WITHOUT_CLASSIFICATION	4.862148027611212E-7	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999949351490979	WITHOUT_CLASSIFICATION	5.064850902120064E-6	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9999870732586322	WITHOUT_CLASSIFICATION	1.2926741367737453E-5	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999997028157598	WITHOUT_CLASSIFICATION	2.971842401233465E-7	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9999939989921394	WITHOUT_CLASSIFICATION	6.001007860587994E-6	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999998781279386	WITHOUT_CLASSIFICATION	1.2187206138163753E-7	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999913976025766	WITHOUT_CLASSIFICATION	8.602397423341772E-6	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999993536853004	WITHOUT_CLASSIFICATION	6.463146996091514E-7	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999988588750154	WITHOUT_CLASSIFICATION	1.1411249846173703E-6	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999992916149536	WITHOUT_CLASSIFICATION	7.083850463445039E-7	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999993863152191	WITHOUT_CLASSIFICATION	6.136847809683993E-7	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999993112008617	WITHOUT_CLASSIFICATION	6.887991381678273E-7	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999996249599157	WITHOUT_CLASSIFICATION	3.750400843277892E-7	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999990617677141	WITHOUT_CLASSIFICATION	9.382322857434353E-7	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9999915329378589	WITHOUT_CLASSIFICATION	8.467062141148517E-6	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999888366872884	WITHOUT_CLASSIFICATION	1.116331271153083E-5	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9999660201853142	WITHOUT_CLASSIFICATION	3.397981468568339E-5	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999954241417582	WITHOUT_CLASSIFICATION	4.575858241756322E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999985005781625	WITHOUT_CLASSIFICATION	1.4994218375263885E-6	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9999729404010608	WITHOUT_CLASSIFICATION	2.7059598939194945E-5	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999995023950472	WITHOUT_CLASSIFICATION	4.976049527915278E-7	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999983233589386	WITHOUT_CLASSIFICATION	1.6766410614703563E-6	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999991214011213	WITHOUT_CLASSIFICATION	8.785988785642702E-7	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999991152413492	WITHOUT_CLASSIFICATION	8.847586507204123E-7	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999994489401752	WITHOUT_CLASSIFICATION	5.510598248587473E-7	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9999883072412303	WITHOUT_CLASSIFICATION	1.1692758769612238E-5	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999981666707956	WITHOUT_CLASSIFICATION	1.8333292045094274E-6	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9999899953267102	WITHOUT_CLASSIFICATION	1.0004673289786089E-5	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9999803693438853	WITHOUT_CLASSIFICATION	1.963065611467009E-5	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999984422456617	WITHOUT_CLASSIFICATION	1.557754338309293E-6	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999970630895955	WITHOUT_CLASSIFICATION	2.9369104046199737E-6	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999993668396929	WITHOUT_CLASSIFICATION	6.331603070527268E-7	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999998581922653	WITHOUT_CLASSIFICATION	1.4180773470916863E-7	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9999955960887148	WITHOUT_CLASSIFICATION	4.403911285260572E-6	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999976138423532	WITHOUT_CLASSIFICATION	2.3861576467468103E-6	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.9999988501422243	WITHOUT_CLASSIFICATION	1.1498577756458146E-6	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.9999980683134122	WITHOUT_CLASSIFICATION	1.931686587699229E-6	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.999997304543062	WITHOUT_CLASSIFICATION	2.6954569380307208E-6	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999975051504357	WITHOUT_CLASSIFICATION	2.494849564354434E-6	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999948892494255	WITHOUT_CLASSIFICATION	5.110750574579484E-6	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999989929131168	WITHOUT_CLASSIFICATION	1.007086883161756E-6	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999991646261142	WITHOUT_CLASSIFICATION	8.353738859155202E-7	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999946264526914	WITHOUT_CLASSIFICATION	5.373547308491036E-6	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999997415376551	WITHOUT_CLASSIFICATION	2.5846234484459977E-7	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999999241633787	WITHOUT_CLASSIFICATION	7.583662139647579E-8	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999867531723	WITHOUT_CLASSIFICATION	1.324682769157506E-8	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.999997691610198	WITHOUT_CLASSIFICATION	2.308389801947212E-6	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9999990219415303	WITHOUT_CLASSIFICATION	9.78058469640085E-7	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9999976064081885	WITHOUT_CLASSIFICATION	2.3935918115235344E-6	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999942133728756	WITHOUT_CLASSIFICATION	5.7866271243640644E-6	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999997198519468	WITHOUT_CLASSIFICATION	2.8014805323631834E-7	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999997161142968	WITHOUT_CLASSIFICATION	2.8388570310216807E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999975610087045	WITHOUT_CLASSIFICATION	2.4389912955413427E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999975610087045	WITHOUT_CLASSIFICATION	2.4389912955413427E-6	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999998137311044	WITHOUT_CLASSIFICATION	1.8626889566374865E-7	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9999991689836523	WITHOUT_CLASSIFICATION	8.310163477209273E-7	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999999853662982	WITHOUT_CLASSIFICATION	1.4633701800884724E-8	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999997950179882	WITHOUT_CLASSIFICATION	2.049820118183909E-7	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999996378056041	WITHOUT_CLASSIFICATION	3.621943958838025E-7	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999990779810486	WITHOUT_CLASSIFICATION	9.220189513508305E-7	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999998412004949	WITHOUT_CLASSIFICATION	1.5879950510260803E-7	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999902258849	WITHOUT_CLASSIFICATION	9.774114980325862E-9	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999998227007831	WITHOUT_CLASSIFICATION	1.772992167776597E-7	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999995883164943	WITHOUT_CLASSIFICATION	4.116835058065024E-7	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999996630476133	WITHOUT_CLASSIFICATION	3.369523866535462E-7	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9999904786944905	WITHOUT_CLASSIFICATION	9.521305509457013E-6	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999997939976929	WITHOUT_CLASSIFICATION	2.0600230711451679E-7	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999997421604588	WITHOUT_CLASSIFICATION	2.578395411223914E-7	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999840515440883	WITHOUT_CLASSIFICATION	1.594845591166764E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999840515440883	WITHOUT_CLASSIFICATION	1.594845591166764E-5	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999996585310912	WITHOUT_CLASSIFICATION	3.4146890873074015E-7	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.999999573703851	WITHOUT_CLASSIFICATION	4.2629614904854415E-7	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999963872171921	WITHOUT_CLASSIFICATION	3.6127828080295537E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999777148095206	WITHOUT_CLASSIFICATION	2.2285190479352422E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999993935199377	WITHOUT_CLASSIFICATION	6.064800623371771E-7	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999918673572211	WITHOUT_CLASSIFICATION	8.132642778821107E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999864826006791	WITHOUT_CLASSIFICATION	1.3517399320823916E-5	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999998552610552	WITHOUT_CLASSIFICATION	1.4473894485701038E-7	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.999999949674531	WITHOUT_CLASSIFICATION	5.032546903638674E-8	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999998560161918	WITHOUT_CLASSIFICATION	1.439838082657557E-7	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.999999935789348	WITHOUT_CLASSIFICATION	6.421065200958088E-8	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999969920897263	WITHOUT_CLASSIFICATION	3.007910273729122E-6	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999999388350514	WITHOUT_CLASSIFICATION	6.116494859595151E-8	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.999999844323881	WITHOUT_CLASSIFICATION	1.5567611903254304E-7	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999991190643098	WITHOUT_CLASSIFICATION	8.809356901087078E-7	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999996430874946	WITHOUT_CLASSIFICATION	3.569125054773708E-7	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999999348587204	WITHOUT_CLASSIFICATION	6.514127953675857E-8	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999991488887021	WITHOUT_CLASSIFICATION	8.511112978978567E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.99999972830843	WITHOUT_CLASSIFICATION	2.7169156996309705E-7	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999999977287941	WITHOUT_CLASSIFICATION	2.2712059575471872E-9	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999996828715171	WITHOUT_CLASSIFICATION	3.1712848288834987E-7	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999754174446	WITHOUT_CLASSIFICATION	2.458255545483208E-8	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999999184342263	WITHOUT_CLASSIFICATION	8.156577364578762E-8	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9999878416697779	WITHOUT_CLASSIFICATION	1.2158330222109913E-5	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999932495303853	WITHOUT_CLASSIFICATION	6.750469614722289E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999999296118197	WITHOUT_CLASSIFICATION	7.038818028375586E-8	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999999475374083	WITHOUT_CLASSIFICATION	5.246259161626817E-8	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999999251916423	WITHOUT_CLASSIFICATION	7.480835769700692E-8	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999999904123587	WITHOUT_CLASSIFICATION	9.587641290238406E-9	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999994119940755	WITHOUT_CLASSIFICATION	5.880059244714471E-7	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9999795121547235	WITHOUT_CLASSIFICATION	2.0487845276536325E-5	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999996194155961	WITHOUT_CLASSIFICATION	3.8058440389361586E-7	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999995794798255	WITHOUT_CLASSIFICATION	4.2052017439504934E-7	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999997217973224	WITHOUT_CLASSIFICATION	2.782026775740988E-7	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9999999230619399	WITHOUT_CLASSIFICATION	7.693806016386458E-8	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999999663936961	WITHOUT_CLASSIFICATION	3.360630379840816E-8	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999993081171974	WITHOUT_CLASSIFICATION	6.918828025976625E-7	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999997623302185	WITHOUT_CLASSIFICATION	2.3766978145845127E-7	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999994716466918	WITHOUT_CLASSIFICATION	5.283533082922974E-7	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9999999895303837	WITHOUT_CLASSIFICATION	1.0469616343396933E-8	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999999361382327	WITHOUT_CLASSIFICATION	6.386176725852757E-8	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999999361382327	WITHOUT_CLASSIFICATION	6.386176725852757E-8	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999996010275086	WITHOUT_CLASSIFICATION	3.989724913938267E-7	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999999415926359	WITHOUT_CLASSIFICATION	5.840736398009151E-8	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9999998644996894	WITHOUT_CLASSIFICATION	1.355003106266518E-7	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999998924630484	WITHOUT_CLASSIFICATION	1.0753695151202762E-7	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999999915019091	WITHOUT_CLASSIFICATION	8.498090954776274E-9	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999997337550071	WITHOUT_CLASSIFICATION	2.6624499285548563E-7	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999997557143253	WITHOUT_CLASSIFICATION	2.442856747423055E-7	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999994299356519	WITHOUT_CLASSIFICATION	5.700643480488422E-7	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999939594804718	WITHOUT_CLASSIFICATION	6.04051952825711E-6	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984578187024	WITHOUT_CLASSIFICATION	1.5421812975410906E-6	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987019871233	WITHOUT_CLASSIFICATION	1.2980128768386069E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999994458161311	WITHOUT_CLASSIFICATION	5.541838689960969E-7	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999986332707674	WITHOUT_CLASSIFICATION	1.366729232520983E-6	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.999999605076992	WITHOUT_CLASSIFICATION	3.9492300803087133E-7	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999998659293247	WITHOUT_CLASSIFICATION	1.3407067533757222E-7	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9999993337300366	WITHOUT_CLASSIFICATION	6.662699634781782E-7	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999997888454188	WITHOUT_CLASSIFICATION	2.111545810325499E-7	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999999127966497	WITHOUT_CLASSIFICATION	8.720335032481305E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999996178788892	WITHOUT_CLASSIFICATION	3.8212111074612526E-7	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999993307952493	WITHOUT_CLASSIFICATION	6.692047508033876E-7	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999983938780775	WITHOUT_CLASSIFICATION	1.6061219224908396E-6	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999986452384606	WITHOUT_CLASSIFICATION	1.354761539329992E-6	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999997873104906	WITHOUT_CLASSIFICATION	2.1268950948799508E-7	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.999984646056486	WITHOUT_CLASSIFICATION	1.5353943514016174E-5	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9999990290773394	WITHOUT_CLASSIFICATION	9.70922660523113E-7	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999950969288689	WITHOUT_CLASSIFICATION	4.903071131143575E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999999192741682	WITHOUT_CLASSIFICATION	8.07258318346348E-8	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.99999993029448	WITHOUT_CLASSIFICATION	6.970552009580947E-8	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999999867242076	WITHOUT_CLASSIFICATION	1.3275792416573453E-8	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.999999870369909	WITHOUT_CLASSIFICATION	1.296300910360075E-7	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999999406005806	WITHOUT_CLASSIFICATION	5.939941942067609E-8	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999978643205413	WITHOUT_CLASSIFICATION	2.1356794587019853E-6	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999999899658449	WITHOUT_CLASSIFICATION	1.0034154958955884E-8	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999995202322163	WITHOUT_CLASSIFICATION	4.797677837234061E-7	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999783171978	WITHOUT_CLASSIFICATION	2.168280226291389E-8	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999999665572197	WITHOUT_CLASSIFICATION	3.344278035251509E-8	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999992251164781	WITHOUT_CLASSIFICATION	7.74883521968902E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999995487146182	WITHOUT_CLASSIFICATION	4.5128538192078637E-7	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999998490824046	WITHOUT_CLASSIFICATION	1.509175954746709E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9999951896239019	WITHOUT_CLASSIFICATION	4.8103760980958274E-6	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999999100646021	WITHOUT_CLASSIFICATION	8.993539791618085E-8	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999998793194741	WITHOUT_CLASSIFICATION	1.2068052586547367E-7	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999999604586706	WITHOUT_CLASSIFICATION	3.954132936508377E-8	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999999503219961	WITHOUT_CLASSIFICATION	4.967800396480457E-8	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999996113503068	WITHOUT_CLASSIFICATION	3.8864969323149704E-7	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9999998645735848	WITHOUT_CLASSIFICATION	1.3542641523635928E-7	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999999341399565	WITHOUT_CLASSIFICATION	6.586004346696656E-8	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999997939976929	WITHOUT_CLASSIFICATION	2.0600230711451679E-7	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999999199792529	WITHOUT_CLASSIFICATION	8.002074715724402E-8	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999996332480474	WITHOUT_CLASSIFICATION	3.6675195265937244E-7	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.999999358476566	WITHOUT_CLASSIFICATION	6.415234340770428E-7	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999996866508852	WITHOUT_CLASSIFICATION	3.13349114711715E-7	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9999996479148844	WITHOUT_CLASSIFICATION	3.520851155822442E-7	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999995248102239	WITHOUT_CLASSIFICATION	4.7518977612896144E-7	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.999999911183508	WITHOUT_CLASSIFICATION	8.8816492108268E-8	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9999998032504918	WITHOUT_CLASSIFICATION	1.9674950821329497E-7	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999953728578007	WITHOUT_CLASSIFICATION	4.627142199327988E-6	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999996035282589	WITHOUT_CLASSIFICATION	3.964717411211813E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999999961431578	WITHOUT_CLASSIFICATION	3.856842207533349E-9	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999997601952367	WITHOUT_CLASSIFICATION	2.398047632302061E-7	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999997906999702	WITHOUT_CLASSIFICATION	2.0930002980198424E-7	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999999592537712	WITHOUT_CLASSIFICATION	4.0746228826581634E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992323548278	WITHOUT_CLASSIFICATION	7.676451721058584E-7	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999982974727235	WITHOUT_CLASSIFICATION	1.7025272765090387E-6	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999973866433862	WITHOUT_CLASSIFICATION	2.6133566138503015E-6	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999999752749315	WITHOUT_CLASSIFICATION	2.4725068627833566E-8	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999983804282505	WITHOUT_CLASSIFICATION	1.6195717495985082E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992323548278	WITHOUT_CLASSIFICATION	7.676451721058584E-7	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9999650314786903	WITHOUT_CLASSIFICATION	3.496852130962575E-5	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9999995733541749	WITHOUT_CLASSIFICATION	4.26645825148466E-7	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999998116866597	WITHOUT_CLASSIFICATION	1.8831334027808403E-7	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.999999977509904	WITHOUT_CLASSIFICATION	2.249009602535765E-8	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999983212368494	WITHOUT_CLASSIFICATION	1.6787631505884373E-6	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.999999971835746	WITHOUT_CLASSIFICATION	2.8164254090996546E-8	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999999719390349	WITHOUT_CLASSIFICATION	2.8060965117108344E-8	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999999910183276	WITHOUT_CLASSIFICATION	8.981672407998544E-9	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999996558452409	WITHOUT_CLASSIFICATION	3.441547591080479E-7	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999999719496132	WITHOUT_CLASSIFICATION	2.805038682447611E-8	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999974443153881	WITHOUT_CLASSIFICATION	2.5556846118575E-6	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9999980095519048	WITHOUT_CLASSIFICATION	1.990448095175393E-6	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999998187748907	WITHOUT_CLASSIFICATION	1.8122510922417903E-7	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.999999825341169	WITHOUT_CLASSIFICATION	1.7465883101048725E-7	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999989343076405	WITHOUT_CLASSIFICATION	1.0656923594873744E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999999289440442	WITHOUT_CLASSIFICATION	7.105595577248372E-8	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999999172739426	WITHOUT_CLASSIFICATION	8.272605741394743E-8	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999983395531534	WITHOUT_CLASSIFICATION	1.6604468466283065E-6	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9999987524945445	WITHOUT_CLASSIFICATION	1.2475054554556822E-6	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999993468119259	WITHOUT_CLASSIFICATION	6.531880740519096E-7	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999999854505003	WITHOUT_CLASSIFICATION	1.4549499585111615E-8	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.999998115882994	WITHOUT_CLASSIFICATION	1.8841170059794247E-6	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999720553080023	WITHOUT_CLASSIFICATION	2.794469199766865E-5	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999998946070011	WITHOUT_CLASSIFICATION	1.0539299883199884E-7	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999997423666223	WITHOUT_CLASSIFICATION	2.5763337779662594E-7	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999998872365086	WITHOUT_CLASSIFICATION	1.1276349138230055E-7	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999999137199913	WITHOUT_CLASSIFICATION	8.62800086880029E-8	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999996329499244	WITHOUT_CLASSIFICATION	3.6705007555294465E-7	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999999957911074	WITHOUT_CLASSIFICATION	4.208892491408585E-9	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999998063316192	WITHOUT_CLASSIFICATION	1.9366838075606506E-7	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999971837390113	WITHOUT_CLASSIFICATION	2.81626098867367E-6	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999767900027347	WITHOUT_CLASSIFICATION	2.3209997265294878E-5	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999980231071383	WITHOUT_CLASSIFICATION	1.976892861672934E-6	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999958615915746	WITHOUT_CLASSIFICATION	4.138408425338892E-6	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999996654387749	WITHOUT_CLASSIFICATION	3.3456122504609913E-7	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999997351464225	WITHOUT_CLASSIFICATION	2.6485357754213804E-7	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999999464009144	WITHOUT_CLASSIFICATION	5.359908559132036E-8	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999990803494723	WITHOUT_CLASSIFICATION	9.196505276396238E-7	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999994913357731	WITHOUT_CLASSIFICATION	5.086642268629719E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999993780266353	WITHOUT_CLASSIFICATION	6.219733647826689E-7	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999513462402609	WITHOUT_CLASSIFICATION	4.865375973905738E-5	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999513462402609	WITHOUT_CLASSIFICATION	4.865375973905738E-5	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999906654497608	WITHOUT_CLASSIFICATION	9.334550239219908E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999996845690464	WITHOUT_CLASSIFICATION	3.1543095353696783E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999990707413234	WITHOUT_CLASSIFICATION	9.292586764491995E-7	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9153720340872993	DOCUMENTATION	0.08462796591270072	WITHOUT_CLASSIFICATION
// ignore	WITHOUT_CLASSIFICATION	0.9999977768755268	WITHOUT_CLASSIFICATION	2.2231244732474883E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999977768755268	WITHOUT_CLASSIFICATION	2.2231244732474883E-6	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.9999841152881123	WITHOUT_CLASSIFICATION	1.588471188774969E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999926971743681	WITHOUT_CLASSIFICATION	7.3028256317911306E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999084249334067	WITHOUT_CLASSIFICATION	9.157506659335552E-5	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999988165507617	WITHOUT_CLASSIFICATION	1.18344923820544E-6	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.99999998680482	WITHOUT_CLASSIFICATION	1.3195179977189687E-8	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999992230461695	WITHOUT_CLASSIFICATION	7.769538305514367E-7	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.999998836781129	WITHOUT_CLASSIFICATION	1.1632188709802195E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999989556407212	WITHOUT_CLASSIFICATION	1.0443592789069067E-6	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999999967217152	WITHOUT_CLASSIFICATION	3.2782847726688564E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998314064878	WITHOUT_CLASSIFICATION	1.6859351216132866E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998314064878	WITHOUT_CLASSIFICATION	1.6859351216132866E-7	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9999932226266735	WITHOUT_CLASSIFICATION	6.777373326584897E-6	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999845062459249	WITHOUT_CLASSIFICATION	1.5493754075124875E-5	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999974216140723	WITHOUT_CLASSIFICATION	2.578385927631451E-6	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9999553258748705	WITHOUT_CLASSIFICATION	4.467412512958817E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999602014039162	WITHOUT_CLASSIFICATION	3.979859608372443E-5	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.999995976543642	WITHOUT_CLASSIFICATION	4.023456357975295E-6	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996471788263	WITHOUT_CLASSIFICATION	3.528211737068666E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999602014039162	WITHOUT_CLASSIFICATION	3.979859608372443E-5	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999995764302205	WITHOUT_CLASSIFICATION	4.2356977955460114E-7	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9999982850417389	WITHOUT_CLASSIFICATION	1.7149582611103303E-6	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999999356096947	WITHOUT_CLASSIFICATION	6.439030522864563E-8	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999999446992819	WITHOUT_CLASSIFICATION	5.530071810601357E-8	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999999719496132	WITHOUT_CLASSIFICATION	2.805038682447611E-8	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999998891567385	WITHOUT_CLASSIFICATION	1.1084326155194863E-7	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.999936566951905	WITHOUT_CLASSIFICATION	6.343304809502899E-5	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999998831110323	WITHOUT_CLASSIFICATION	1.1688896770894512E-7	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999907025056466	WITHOUT_CLASSIFICATION	9.297494353384516E-6	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999978863702036	WITHOUT_CLASSIFICATION	2.1136297963928302E-6	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9999978076588055	WITHOUT_CLASSIFICATION	2.1923411945624865E-6	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999821993996936	WITHOUT_CLASSIFICATION	1.7800600306435623E-5	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9999999749533145	WITHOUT_CLASSIFICATION	2.5046685523264332E-8	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999949424242995	WITHOUT_CLASSIFICATION	5.057575700433173E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999989441605944	WITHOUT_CLASSIFICATION	1.0558394055505587E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999989441605944	WITHOUT_CLASSIFICATION	1.0558394055505587E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999964783407257	WITHOUT_CLASSIFICATION	3.5216592743225027E-6	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999999559558118	WITHOUT_CLASSIFICATION	4.4044188280743625E-8	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998360727124121	WITHOUT_CLASSIFICATION	1.63927287587913E-4	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999973691865334	WITHOUT_CLASSIFICATION	2.630813466548812E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999984744678406	WITHOUT_CLASSIFICATION	1.5255321594107721E-6	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999999831730653	WITHOUT_CLASSIFICATION	1.6826934701468712E-8	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999997715740395	WITHOUT_CLASSIFICATION	2.2842596044459902E-7	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999999749778113	WITHOUT_CLASSIFICATION	2.5022188640433294E-8	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999994957775097	WITHOUT_CLASSIFICATION	5.042224903779377E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999996621923278	WITHOUT_CLASSIFICATION	3.378076721154707E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971364910548	WITHOUT_CLASSIFICATION	2.8635089452113164E-6	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999999856275278	WITHOUT_CLASSIFICATION	1.4372472183122E-8	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9999995378542615	WITHOUT_CLASSIFICATION	4.621457384569965E-7	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999731168638	WITHOUT_CLASSIFICATION	2.6883136218068652E-8	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999996018464238	WITHOUT_CLASSIFICATION	3.9815357625683977E-7	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999992100845988	WITHOUT_CLASSIFICATION	7.899154012357173E-7	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.9999997927765968	WITHOUT_CLASSIFICATION	2.0722340316471605E-7	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999973871835025	WITHOUT_CLASSIFICATION	2.61281649751287E-6	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999995771467775	WITHOUT_CLASSIFICATION	4.228532224834587E-7	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.999999959491487	WITHOUT_CLASSIFICATION	4.050851293841517E-8	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999998380365989	WITHOUT_CLASSIFICATION	1.6196340108913913E-7	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999989678223618	WITHOUT_CLASSIFICATION	1.0321776383014152E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999997160363066	WITHOUT_CLASSIFICATION	2.8396369347480624E-7	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999999888398142	WITHOUT_CLASSIFICATION	1.1160185733233114E-8	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999996651958504	WITHOUT_CLASSIFICATION	3.3480414953256373E-7	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999996651958504	WITHOUT_CLASSIFICATION	3.3480414953256373E-7	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.999999663743175	WITHOUT_CLASSIFICATION	3.362568251074047E-7	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999999901232977	WITHOUT_CLASSIFICATION	9.87670226904285E-9	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.999999955675604	WITHOUT_CLASSIFICATION	4.432439599344473E-8	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.999999975612686	WITHOUT_CLASSIFICATION	2.438731386361853E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999988986950992	WITHOUT_CLASSIFICATION	1.1013049008700552E-6	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.930756359417811	WITHOUT_CLASSIFICATION	0.06924364058218897	DOCUMENTATION
