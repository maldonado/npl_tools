//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999853288419507	WITHOUT_CLASSIFICATION	1.46711580494182E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999836799379409	WITHOUT_CLASSIFICATION	1.6320062059046405E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999836799379409	WITHOUT_CLASSIFICATION	1.6320062059046405E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999836799379409	WITHOUT_CLASSIFICATION	1.6320062059046405E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999836799379409	WITHOUT_CLASSIFICATION	1.6320062059046405E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999836799379409	WITHOUT_CLASSIFICATION	1.6320062059046405E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999836799379409	WITHOUT_CLASSIFICATION	1.6320062059046405E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999836799379409	WITHOUT_CLASSIFICATION	1.6320062059046405E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999922235743957	WITHOUT_CLASSIFICATION	7.77642560422236E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999922235743957	WITHOUT_CLASSIFICATION	7.77642560422236E-6	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.999953435212812	WITHOUT_CLASSIFICATION	4.6564787187917454E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.999984554451495	WITHOUT_CLASSIFICATION	1.5445548504953085E-5	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999973465261804	WITHOUT_CLASSIFICATION	2.653473819549008E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999741992311965	WITHOUT_CLASSIFICATION	2.580076880348819E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999741992311965	WITHOUT_CLASSIFICATION	2.580076880348819E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999988202127698	WITHOUT_CLASSIFICATION	1.1797872301681904E-6	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999996267064292	WITHOUT_CLASSIFICATION	3.7329357086689154E-7	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999937421076726	WITHOUT_CLASSIFICATION	6.2578923274665445E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999769612418454	WITHOUT_CLASSIFICATION	2.3038758154632724E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999945081011048	WITHOUT_CLASSIFICATION	5.491898895262928E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999945081011048	WITHOUT_CLASSIFICATION	5.491898895262928E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999844670873886	WITHOUT_CLASSIFICATION	1.5532912611329405E-5	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9999845017496407	WITHOUT_CLASSIFICATION	1.549825035923221E-5	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999977915300174	WITHOUT_CLASSIFICATION	2.2084699825430153E-6	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999956473752609	WITHOUT_CLASSIFICATION	4.352624739142508E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999724203562	WITHOUT_CLASSIFICATION	2.7579643698698468E-8	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999652381468302	WITHOUT_CLASSIFICATION	3.476185316969198E-5	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9999432633155941	WITHOUT_CLASSIFICATION	5.67366844059583E-5	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999409391352861	WITHOUT_CLASSIFICATION	5.9060864713822E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998960388932459	WITHOUT_CLASSIFICATION	1.0396110675414164E-4	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9992615169101823	WITHOUT_CLASSIFICATION	7.384830898176482E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999436058592269	WITHOUT_CLASSIFICATION	5.639414077304856E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999307940661526	WITHOUT_CLASSIFICATION	6.92059338475053E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999995001183903	WITHOUT_CLASSIFICATION	4.998816097627925E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999193459489152	WITHOUT_CLASSIFICATION	8.065405108479571E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999193459489152	WITHOUT_CLASSIFICATION	8.065405108479571E-5	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.999999934026465	WITHOUT_CLASSIFICATION	6.597353496194505E-8	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999184098326901	WITHOUT_CLASSIFICATION	8.159016730995464E-5	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999974718269252	WITHOUT_CLASSIFICATION	2.5281730747885205E-6	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999998974065355	WITHOUT_CLASSIFICATION	1.0259346453108483E-7	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9985314891784466	WITHOUT_CLASSIFICATION	0.0014685108215533693	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9985423657531816	WITHOUT_CLASSIFICATION	0.001457634246818445	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9985423657531816	WITHOUT_CLASSIFICATION	0.001457634246818445	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.999999633081246	WITHOUT_CLASSIFICATION	3.6691875392925426E-7	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999983484802955	WITHOUT_CLASSIFICATION	1.6515197044712966E-6	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.999999656918135	WITHOUT_CLASSIFICATION	3.4308186497848697E-7	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999936351933132	WITHOUT_CLASSIFICATION	6.364806686729822E-6	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999720815302714	WITHOUT_CLASSIFICATION	2.7918469728642765E-5	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999884303102241	WITHOUT_CLASSIFICATION	1.1569689775958572E-5	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999877350744522	WITHOUT_CLASSIFICATION	1.2264925547897568E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999488784851347	WITHOUT_CLASSIFICATION	5.112151486525637E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9998056321991711	WITHOUT_CLASSIFICATION	1.943678008289366E-4	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999998077962935	WITHOUT_CLASSIFICATION	1.922037065617611E-7	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9998764749100221	WITHOUT_CLASSIFICATION	1.235250899779572E-4	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9998056321991711	WITHOUT_CLASSIFICATION	1.943678008289366E-4	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9998764749100221	WITHOUT_CLASSIFICATION	1.235250899779572E-4	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999699406385663	WITHOUT_CLASSIFICATION	3.0059361433731087E-5	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9999970882650403	WITHOUT_CLASSIFICATION	2.9117349596365985E-6	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999984188903106	WITHOUT_CLASSIFICATION	1.581109689406349E-6	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999996086448596	WITHOUT_CLASSIFICATION	3.913551404030935E-7	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999913417427476	WITHOUT_CLASSIFICATION	8.658257252436142E-6	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999996902430675	WITHOUT_CLASSIFICATION	3.0975693254928554E-7	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9999774223797449	WITHOUT_CLASSIFICATION	2.257762025519119E-5	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999705400997556	WITHOUT_CLASSIFICATION	2.9459900244352965E-5	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999999356060032	WITHOUT_CLASSIFICATION	6.439399683319799E-8	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.999976796622344	WITHOUT_CLASSIFICATION	2.3203377656088295E-5	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999980167368162	WITHOUT_CLASSIFICATION	1.983263183794339E-6	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999697895939271	WITHOUT_CLASSIFICATION	3.021040607290734E-5	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999997388167281	WITHOUT_CLASSIFICATION	2.611832718391169E-7	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999931612893075	WITHOUT_CLASSIFICATION	6.838710692554388E-6	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999991342152719	WITHOUT_CLASSIFICATION	8.657847281484422E-7	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999995795882214	WITHOUT_CLASSIFICATION	4.204117786058422E-7	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999965241764538	WITHOUT_CLASSIFICATION	3.4758235462862644E-6	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999984982004962	WITHOUT_CLASSIFICATION	1.5017995036668648E-6	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999969789062793	WITHOUT_CLASSIFICATION	3.0210937208886043E-6	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999951179158333	WITHOUT_CLASSIFICATION	4.882084166697778E-6	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999943579983283	WITHOUT_CLASSIFICATION	5.642001671762625E-6	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999997301452312	WITHOUT_CLASSIFICATION	2.6985476873015106E-7	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999922343880412	WITHOUT_CLASSIFICATION	7.765611958805274E-6	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999963802819349	WITHOUT_CLASSIFICATION	3.619718064971843E-6	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.999999697873607	WITHOUT_CLASSIFICATION	3.0212639305644475E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999821280502379	WITHOUT_CLASSIFICATION	1.787194976202311E-5	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.999998270467611	WITHOUT_CLASSIFICATION	1.7295323889280653E-6	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9999995148643229	WITHOUT_CLASSIFICATION	4.851356771434952E-7	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999956985352317	WITHOUT_CLASSIFICATION	4.301464768267154E-6	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999991969976397	WITHOUT_CLASSIFICATION	8.030023601416316E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999992917806357	WITHOUT_CLASSIFICATION	7.082193643505041E-7	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999983729933887	WITHOUT_CLASSIFICATION	1.6270066112261288E-6	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999889148901959	WITHOUT_CLASSIFICATION	1.1085109804080716E-5	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999977424238943	WITHOUT_CLASSIFICATION	2.257576105722786E-6	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999962238971751	WITHOUT_CLASSIFICATION	3.7761028249254345E-6	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999632629198374	WITHOUT_CLASSIFICATION	3.6737080162558175E-5	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999977424238943	WITHOUT_CLASSIFICATION	2.257576105722786E-6	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999999121397086	WITHOUT_CLASSIFICATION	8.786029139144111E-8	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999999544555139	WITHOUT_CLASSIFICATION	4.554448606806659E-8	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999837041444555	WITHOUT_CLASSIFICATION	1.6295855544454138E-5	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999899334430422	WITHOUT_CLASSIFICATION	1.0066556957780783E-5	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.9999961327301395	WITHOUT_CLASSIFICATION	3.867269860516477E-6	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9988089106837825	WITHOUT_CLASSIFICATION	0.0011910893162174379	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9988089106837825	WITHOUT_CLASSIFICATION	0.0011910893162174379	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999193200025632	WITHOUT_CLASSIFICATION	8.067999743669863E-5	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999948795521701	WITHOUT_CLASSIFICATION	5.120447829908983E-6	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9999823778128364	WITHOUT_CLASSIFICATION	1.7622187163691797E-5	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999991109388717	WITHOUT_CLASSIFICATION	8.890611281976537E-7	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999961365336402	WITHOUT_CLASSIFICATION	3.863466359802267E-6	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999982322059252	WITHOUT_CLASSIFICATION	1.7677940748475187E-6	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999932766235037	WITHOUT_CLASSIFICATION	6.723376496291193E-6	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999911820797356	WITHOUT_CLASSIFICATION	8.817920264455467E-6	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999993235846758	WITHOUT_CLASSIFICATION	6.764153240981601E-7	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999982282246798	WITHOUT_CLASSIFICATION	1.771775320300428E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999964984177847	WITHOUT_CLASSIFICATION	3.5015822153434334E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999964984177847	WITHOUT_CLASSIFICATION	3.5015822153434334E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999902083259578	WITHOUT_CLASSIFICATION	9.791674042227063E-6	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999922459479803	WITHOUT_CLASSIFICATION	7.754052019648853E-6	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9999974469586285	WITHOUT_CLASSIFICATION	2.553041371659822E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999964984177847	WITHOUT_CLASSIFICATION	3.5015822153434334E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999902083259578	WITHOUT_CLASSIFICATION	9.791674042227063E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999902083259578	WITHOUT_CLASSIFICATION	9.791674042227063E-6	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999997576953404	WITHOUT_CLASSIFICATION	2.423046594988517E-7	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999979479856574	WITHOUT_CLASSIFICATION	2.0520143424946687E-6	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999992934976243	WITHOUT_CLASSIFICATION	7.065023756281901E-7	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999972122816179	WITHOUT_CLASSIFICATION	2.7877183821251614E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999944859952564	WITHOUT_CLASSIFICATION	5.514004743605574E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999944859952564	WITHOUT_CLASSIFICATION	5.514004743605574E-6	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999852353738766	WITHOUT_CLASSIFICATION	1.4764626123227673E-5	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999787856384328	WITHOUT_CLASSIFICATION	2.121436156716644E-5	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999917534112368	WITHOUT_CLASSIFICATION	8.246588763147172E-6	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999988664672887	WITHOUT_CLASSIFICATION	1.1335327112606718E-6	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999988664672887	WITHOUT_CLASSIFICATION	1.1335327112606718E-6	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999141419229945	WITHOUT_CLASSIFICATION	8.585807700547875E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999948551652328	WITHOUT_CLASSIFICATION	5.144834767218529E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999934472590044	WITHOUT_CLASSIFICATION	6.5527409954989775E-6	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999993277154131	WITHOUT_CLASSIFICATION	6.722845868406763E-7	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999775154299569	WITHOUT_CLASSIFICATION	2.248457004309168E-5	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999984128543519	WITHOUT_CLASSIFICATION	1.5871456481475813E-6	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9999949815849255	WITHOUT_CLASSIFICATION	5.01841507450346E-6	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999853298453016	WITHOUT_CLASSIFICATION	1.4670154698237366E-5	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9999921657637176	WITHOUT_CLASSIFICATION	7.834236282408583E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999934472590044	WITHOUT_CLASSIFICATION	6.5527409954989775E-6	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9997525171048042	WITHOUT_CLASSIFICATION	2.474828951958929E-4	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999637846453671	WITHOUT_CLASSIFICATION	3.6215354633022605E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999637846453671	WITHOUT_CLASSIFICATION	3.6215354633022605E-5	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999996833696678	WITHOUT_CLASSIFICATION	3.16630332188136E-7	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999983339459454	WITHOUT_CLASSIFICATION	1.6660540545167255E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999973367702125	WITHOUT_CLASSIFICATION	2.6632297875577927E-6	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9992593918733685	WITHOUT_CLASSIFICATION	7.406081266315344E-4	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9999553962293131	WITHOUT_CLASSIFICATION	4.460377068700377E-5	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9998268693906762	WITHOUT_CLASSIFICATION	1.7313060932384913E-4	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.9999744238020373	WITHOUT_CLASSIFICATION	2.5576197962722082E-5	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.999988762527269	WITHOUT_CLASSIFICATION	1.1237472730988661E-5	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999993386641669	WITHOUT_CLASSIFICATION	6.613358330927048E-7	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999993386641669	WITHOUT_CLASSIFICATION	6.613358330927048E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998307631387462	WITHOUT_CLASSIFICATION	1.6923686125374502E-4	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999853288419507	WITHOUT_CLASSIFICATION	1.46711580494182E-5	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999966771780617	WITHOUT_CLASSIFICATION	3.3228219382128453E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999836799379409	WITHOUT_CLASSIFICATION	1.6320062059046405E-5	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999343566788087	WITHOUT_CLASSIFICATION	6.564332119134478E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999922235743957	WITHOUT_CLASSIFICATION	7.77642560422236E-6	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999887036444672	WITHOUT_CLASSIFICATION	1.1296355532708646E-5	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999913344724535	WITHOUT_CLASSIFICATION	8.665527546548259E-6	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.999996937671573	WITHOUT_CLASSIFICATION	3.0623284268742167E-6	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999948565784175	WITHOUT_CLASSIFICATION	5.143421582477584E-6	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999974506602379	WITHOUT_CLASSIFICATION	2.54933976213298E-6	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9999412477090617	WITHOUT_CLASSIFICATION	5.875229093831515E-5	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999622562703543	WITHOUT_CLASSIFICATION	3.774372964573487E-5	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999900044689708	WITHOUT_CLASSIFICATION	9.995531029247835E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.999984554451495	WITHOUT_CLASSIFICATION	1.5445548504953085E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999834922906172	WITHOUT_CLASSIFICATION	1.6507709382809763E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999834922906172	WITHOUT_CLASSIFICATION	1.6507709382809763E-5	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9999977826598253	WITHOUT_CLASSIFICATION	2.217340174754298E-6	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9999716378942436	WITHOUT_CLASSIFICATION	2.8362105756466996E-5	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999996663824654	WITHOUT_CLASSIFICATION	3.3361753450557554E-7	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999951866342893	WITHOUT_CLASSIFICATION	4.813365710669179E-6	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999895091258433	WITHOUT_CLASSIFICATION	1.0490874156776861E-5	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.999994983787739	WITHOUT_CLASSIFICATION	5.0162122609671815E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999741992311965	WITHOUT_CLASSIFICATION	2.580076880348819E-5	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999994423151036	WITHOUT_CLASSIFICATION	5.576848963430179E-7	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999042163261074	WITHOUT_CLASSIFICATION	9.578367389259177E-5	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999908126795802	WITHOUT_CLASSIFICATION	9.187320419839465E-6	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999953061427649	WITHOUT_CLASSIFICATION	4.69385723518499E-6	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999789992836677	WITHOUT_CLASSIFICATION	2.100071633228428E-5	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.99998658676352	WITHOUT_CLASSIFICATION	1.341323647997204E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999771651471462	WITHOUT_CLASSIFICATION	2.2834852853824555E-5	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999903277334219	WITHOUT_CLASSIFICATION	9.672266578088735E-6	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999870144461867	WITHOUT_CLASSIFICATION	1.2985553813390463E-5	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999805716446606	WITHOUT_CLASSIFICATION	1.9428355339446843E-5	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999990227620092	WITHOUT_CLASSIFICATION	9.772379908253287E-7	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.9999997237637558	WITHOUT_CLASSIFICATION	2.7623624423149254E-7	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999836799379409	WITHOUT_CLASSIFICATION	1.6320062059046405E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999836799379409	WITHOUT_CLASSIFICATION	1.6320062059046405E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999922235743957	WITHOUT_CLASSIFICATION	7.77642560422236E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999922235743957	WITHOUT_CLASSIFICATION	7.77642560422236E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999622562703543	WITHOUT_CLASSIFICATION	3.774372964573487E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999834922906172	WITHOUT_CLASSIFICATION	1.6507709382809763E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999771651471462	WITHOUT_CLASSIFICATION	2.2834852853824555E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999988202127698	WITHOUT_CLASSIFICATION	1.1797872301681904E-6	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999974803694106	WITHOUT_CLASSIFICATION	2.5196305893628163E-6	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999920309389497	WITHOUT_CLASSIFICATION	7.969061050220758E-6	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999885929879981	WITHOUT_CLASSIFICATION	1.1407012001829668E-5	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999867213114605	WITHOUT_CLASSIFICATION	1.3278688539487559E-5	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999871814073938	WITHOUT_CLASSIFICATION	1.2818592606137886E-5	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9999873438789832	WITHOUT_CLASSIFICATION	1.2656121016826487E-5	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999921052910902	WITHOUT_CLASSIFICATION	7.89470890974771E-6	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9999114002543208	WITHOUT_CLASSIFICATION	8.859974567929932E-5	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999933116481319	WITHOUT_CLASSIFICATION	6.688351868128479E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999578559566412	WITHOUT_CLASSIFICATION	4.214404335879389E-5	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999578559566412	WITHOUT_CLASSIFICATION	4.214404335879389E-5	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999989456104416	WITHOUT_CLASSIFICATION	1.0543895584543741E-6	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999989264647745	WITHOUT_CLASSIFICATION	1.0735352255478035E-6	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9999907456354624	WITHOUT_CLASSIFICATION	9.254364537467513E-6	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999942538496884	WITHOUT_CLASSIFICATION	5.746150311489192E-6	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999976752620573	WITHOUT_CLASSIFICATION	2.324737942733821E-6	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999971196676972	WITHOUT_CLASSIFICATION	2.880332302646569E-6	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999984760343237	WITHOUT_CLASSIFICATION	1.5239656763620277E-6	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999996267064292	WITHOUT_CLASSIFICATION	3.7329357086689154E-7	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.999981971623704	WITHOUT_CLASSIFICATION	1.8028376296054098E-5	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999932962256862	WITHOUT_CLASSIFICATION	6.703774313775113E-6	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999932962256862	WITHOUT_CLASSIFICATION	6.703774313775113E-6	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999957282706298	WITHOUT_CLASSIFICATION	4.271729370333441E-6	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999938703493014	WITHOUT_CLASSIFICATION	6.12965069861327E-6	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999905542362652	WITHOUT_CLASSIFICATION	9.445763734937534E-6	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999971008541595	WITHOUT_CLASSIFICATION	2.899145840488402E-6	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999344354437348	WITHOUT_CLASSIFICATION	6.556455626511668E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999922235743957	WITHOUT_CLASSIFICATION	7.77642560422236E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999622562703543	WITHOUT_CLASSIFICATION	3.774372964573487E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.999984554451495	WITHOUT_CLASSIFICATION	1.5445548504953085E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999771651471462	WITHOUT_CLASSIFICATION	2.2834852853824555E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999771651471462	WITHOUT_CLASSIFICATION	2.2834852853824555E-5	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999996004014713	WITHOUT_CLASSIFICATION	3.9959852872444723E-7	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999996004014713	WITHOUT_CLASSIFICATION	3.9959852872444723E-7	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999966874617646	WITHOUT_CLASSIFICATION	3.3125382354840572E-6	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999928136591142	WITHOUT_CLASSIFICATION	7.186340885815993E-6	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999928136591142	WITHOUT_CLASSIFICATION	7.186340885815993E-6	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999922000398757	WITHOUT_CLASSIFICATION	7.799960124328367E-6	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.9999920943771009	WITHOUT_CLASSIFICATION	7.90562289905333E-6	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999943620236303	WITHOUT_CLASSIFICATION	5.6379763696514964E-6	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999971535869248	WITHOUT_CLASSIFICATION	2.8464130752450886E-6	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999989420916554	WITHOUT_CLASSIFICATION	1.0579083445739377E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999769612418454	WITHOUT_CLASSIFICATION	2.3038758154632724E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999769612418454	WITHOUT_CLASSIFICATION	2.3038758154632724E-5	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.999980455921424	WITHOUT_CLASSIFICATION	1.95440785759441E-5	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999759798432324	WITHOUT_CLASSIFICATION	2.4020156767530527E-5	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.9999875022367911	WITHOUT_CLASSIFICATION	1.2497763208848326E-5	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999731390645082	WITHOUT_CLASSIFICATION	2.686093549179485E-5	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999884628211917	WITHOUT_CLASSIFICATION	1.153717880834394E-5	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9999841296316928	WITHOUT_CLASSIFICATION	1.587036830719233E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999945081011048	WITHOUT_CLASSIFICATION	5.491898895262928E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999895791207707	WITHOUT_CLASSIFICATION	1.0420879229205738E-5	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999895791207707	WITHOUT_CLASSIFICATION	1.0420879229205738E-5	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999844670873886	WITHOUT_CLASSIFICATION	1.5532912611329405E-5	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999844670873886	WITHOUT_CLASSIFICATION	1.5532912611329405E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.999954841132372	WITHOUT_CLASSIFICATION	4.5158867628035915E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.999954841132372	WITHOUT_CLASSIFICATION	4.5158867628035915E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.999995196704672	WITHOUT_CLASSIFICATION	4.803295328020574E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.999995196704672	WITHOUT_CLASSIFICATION	4.803295328020574E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999769612418454	WITHOUT_CLASSIFICATION	2.3038758154632724E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999945081011048	WITHOUT_CLASSIFICATION	5.491898895262928E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999895791207707	WITHOUT_CLASSIFICATION	1.0420879229205738E-5	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999895791207707	WITHOUT_CLASSIFICATION	1.0420879229205738E-5	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999844670873886	WITHOUT_CLASSIFICATION	1.5532912611329405E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.999954841132372	WITHOUT_CLASSIFICATION	4.5158867628035915E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.999954841132372	WITHOUT_CLASSIFICATION	4.5158867628035915E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.999995196704672	WITHOUT_CLASSIFICATION	4.803295328020574E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999952370088935	WITHOUT_CLASSIFICATION	4.7629911065830286E-6	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9999577201700629	WITHOUT_CLASSIFICATION	4.227982993702218E-5	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.9999139910838025	WITHOUT_CLASSIFICATION	8.600891619751315E-5	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999963924639554	WITHOUT_CLASSIFICATION	3.607536044532625E-6	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999872354376514	WITHOUT_CLASSIFICATION	1.2764562348575234E-5	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999573170798264	WITHOUT_CLASSIFICATION	4.268292017356248E-5	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.999981327781284	WITHOUT_CLASSIFICATION	1.8672218715985617E-5	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9999997712774422	WITHOUT_CLASSIFICATION	2.2872255775556404E-7	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999924637957056	WITHOUT_CLASSIFICATION	7.536204294313896E-6	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999998737799508	WITHOUT_CLASSIFICATION	1.2622004916350647E-7	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.999999145984343	WITHOUT_CLASSIFICATION	8.54015657040574E-7	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999996278263624	WITHOUT_CLASSIFICATION	3.721736375851861E-7	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999193200025632	WITHOUT_CLASSIFICATION	8.067999743669863E-5	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999573170798264	WITHOUT_CLASSIFICATION	4.268292017356248E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9996204826433459	WITHOUT_CLASSIFICATION	3.795173566540374E-4	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9996204826433459	WITHOUT_CLASSIFICATION	3.795173566540374E-4	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999977278025339	WITHOUT_CLASSIFICATION	2.2721974661043912E-6	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999976068078584	WITHOUT_CLASSIFICATION	2.3931921415646864E-6	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999976068078584	WITHOUT_CLASSIFICATION	2.3931921415646864E-6	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999944805105855	WITHOUT_CLASSIFICATION	5.519489414501455E-6	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999980317668665	WITHOUT_CLASSIFICATION	1.9682331334784223E-6	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999995926268499	WITHOUT_CLASSIFICATION	4.0737315000749605E-7	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999930828524595	WITHOUT_CLASSIFICATION	6.9171475405826565E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999930828524595	WITHOUT_CLASSIFICATION	6.9171475405826565E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999724203562	WITHOUT_CLASSIFICATION	2.7579643698698468E-8	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999995443174061	WITHOUT_CLASSIFICATION	4.556825938457143E-7	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999995443174061	WITHOUT_CLASSIFICATION	4.556825938457143E-7	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999935686610261	WITHOUT_CLASSIFICATION	6.431338973914788E-6	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999993674911756	WITHOUT_CLASSIFICATION	6.325088243586416E-7	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999992441460119	WITHOUT_CLASSIFICATION	7.558539881083348E-7	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999175877423092	WITHOUT_CLASSIFICATION	8.241225769086853E-5	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999668405710869	WITHOUT_CLASSIFICATION	3.31594289131295E-5	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9999646577166179	WITHOUT_CLASSIFICATION	3.534228338207414E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999652381468302	WITHOUT_CLASSIFICATION	3.476185316969198E-5	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.999945661086062	WITHOUT_CLASSIFICATION	5.4338913937957805E-5	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9977691783855394	WITHOUT_CLASSIFICATION	0.0022308216144606664	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.9999384144382638	WITHOUT_CLASSIFICATION	6.15855617361245E-5	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999436790230839	WITHOUT_CLASSIFICATION	5.632097691622954E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998960388932459	WITHOUT_CLASSIFICATION	1.0396110675414164E-4	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999848802111325	WITHOUT_CLASSIFICATION	1.5119788867549994E-5	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999936037627283	WITHOUT_CLASSIFICATION	6.39623727161635E-6	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999998770836892	WITHOUT_CLASSIFICATION	1.229163107037113E-7	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998960388932459	WITHOUT_CLASSIFICATION	1.0396110675414164E-4	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.999999624333852	WITHOUT_CLASSIFICATION	3.756661480605685E-7	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999986329005294	WITHOUT_CLASSIFICATION	1.3670994706470986E-6	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999530676785212	WITHOUT_CLASSIFICATION	4.6932321478739304E-5	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.9999459640176879	WITHOUT_CLASSIFICATION	5.403598231216845E-5	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999139784980237	WITHOUT_CLASSIFICATION	8.602150197635052E-5	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999568922200258	WITHOUT_CLASSIFICATION	4.3107779974185525E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999253223072372	WITHOUT_CLASSIFICATION	7.46776927628664E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999307940661526	WITHOUT_CLASSIFICATION	6.92059338475053E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999243324612926	WITHOUT_CLASSIFICATION	7.566753870729064E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999995001183903	WITHOUT_CLASSIFICATION	4.998816097627925E-7	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999922578042054	WITHOUT_CLASSIFICATION	7.742195794539374E-6	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999961344999517	WITHOUT_CLASSIFICATION	3.865500048197286E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999527737785963	WITHOUT_CLASSIFICATION	4.722622140381575E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999652381468302	WITHOUT_CLASSIFICATION	3.476185316969198E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999243324612926	WITHOUT_CLASSIFICATION	7.566753870729064E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999922578042054	WITHOUT_CLASSIFICATION	7.742195794539374E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999527737785963	WITHOUT_CLASSIFICATION	4.722622140381575E-5	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999976184407497	WITHOUT_CLASSIFICATION	2.381559250176739E-6	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999148649670503	WITHOUT_CLASSIFICATION	8.513503294971807E-5	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.999998583446137	WITHOUT_CLASSIFICATION	1.41655386299463E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999193459489152	WITHOUT_CLASSIFICATION	8.065405108479571E-5	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999740620594613	WITHOUT_CLASSIFICATION	2.5937940538734283E-5	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.9999824398757051	WITHOUT_CLASSIFICATION	1.7560124294891526E-5	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.9998266219241969	WITHOUT_CLASSIFICATION	1.7337807580296028E-4	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999784890673098	WITHOUT_CLASSIFICATION	2.151093269014638E-5	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999880078836161	WITHOUT_CLASSIFICATION	1.199211638394981E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999997206945167	WITHOUT_CLASSIFICATION	2.7930548334384816E-7	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.999994114155812	WITHOUT_CLASSIFICATION	5.885844188003708E-6	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999996434294932	WITHOUT_CLASSIFICATION	3.565705068060667E-7	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999987109199879	WITHOUT_CLASSIFICATION	1.2890800120935018E-6	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999949310632376	WITHOUT_CLASSIFICATION	5.068936762500166E-6	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.999964581884569	WITHOUT_CLASSIFICATION	3.5418115431014E-5	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999424036899636	WITHOUT_CLASSIFICATION	5.759631003634929E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999184098326901	WITHOUT_CLASSIFICATION	8.159016730995464E-5	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999994903338368	WITHOUT_CLASSIFICATION	5.09666163242527E-7	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.999932181139732	WITHOUT_CLASSIFICATION	6.781886026786112E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999243324612926	WITHOUT_CLASSIFICATION	7.566753870729064E-5	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999989466011213	WITHOUT_CLASSIFICATION	1.0533988786738318E-6	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999990664052463	WITHOUT_CLASSIFICATION	9.335947537465707E-7	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999967413515475	WITHOUT_CLASSIFICATION	3.258648452581391E-6	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.99999912414412	WITHOUT_CLASSIFICATION	8.75855880009586E-7	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999927290114866	WITHOUT_CLASSIFICATION	7.270988513381696E-6	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999938986652445	WITHOUT_CLASSIFICATION	6.101334755571326E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999992452727827	WITHOUT_CLASSIFICATION	7.547272173256336E-7	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.999997258526927	WITHOUT_CLASSIFICATION	2.7414730729694793E-6	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9998679716615475	WITHOUT_CLASSIFICATION	1.3202833845239305E-4	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999064084214824	WITHOUT_CLASSIFICATION	9.359157851766545E-5	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.999963588216719	WITHOUT_CLASSIFICATION	3.6411783280971924E-5	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999676223496167	WITHOUT_CLASSIFICATION	3.237765038341129E-5	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9999982436923446	WITHOUT_CLASSIFICATION	1.7563076554184389E-6	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999998974065355	WITHOUT_CLASSIFICATION	1.0259346453108483E-7	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999917920558291	WITHOUT_CLASSIFICATION	8.207944170963524E-6	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.999996313195426	WITHOUT_CLASSIFICATION	3.686804573900834E-6	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9999840440298757	WITHOUT_CLASSIFICATION	1.595597012421028E-5	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.999985945955237	WITHOUT_CLASSIFICATION	1.4054044762912432E-5	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999973141208316	WITHOUT_CLASSIFICATION	2.685879168337874E-6	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999990333654212	WITHOUT_CLASSIFICATION	9.666345788508222E-7	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999736655394	WITHOUT_CLASSIFICATION	2.6334460640258927E-8	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999989817341463	WITHOUT_CLASSIFICATION	1.0182658537594353E-6	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999980568401956	WITHOUT_CLASSIFICATION	1.943159804392589E-6	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.99995228591192	WITHOUT_CLASSIFICATION	4.771408808000371E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999647546693612	WITHOUT_CLASSIFICATION	3.524533063880426E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999647546693612	WITHOUT_CLASSIFICATION	3.524533063880426E-5	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.999935691662883	WITHOUT_CLASSIFICATION	6.430833711701709E-5	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999965511297494	WITHOUT_CLASSIFICATION	3.4488702506497357E-6	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999944126543515	WITHOUT_CLASSIFICATION	5.5873456484497765E-6	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.999988091321597	WITHOUT_CLASSIFICATION	1.1908678402903335E-5	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9999838758539269	WITHOUT_CLASSIFICATION	1.6124146073126956E-5	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9999901026949349	WITHOUT_CLASSIFICATION	9.897305065012147E-6	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999935422145572	WITHOUT_CLASSIFICATION	6.457785442890627E-6	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999971974904625	WITHOUT_CLASSIFICATION	2.8025095375528076E-6	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9999709972947468	WITHOUT_CLASSIFICATION	2.9002705253291176E-5	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999914172471545	WITHOUT_CLASSIFICATION	8.582752845485771E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.99994890354099	WITHOUT_CLASSIFICATION	5.1096459009962296E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999936235079485	WITHOUT_CLASSIFICATION	6.376492051535085E-6	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9999710622075992	WITHOUT_CLASSIFICATION	2.8937792400768256E-5	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9999987516110923	WITHOUT_CLASSIFICATION	1.2483889077427908E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977180135003	WITHOUT_CLASSIFICATION	2.281986499681066E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987009322445	WITHOUT_CLASSIFICATION	1.2990677554836285E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999996005542886	WITHOUT_CLASSIFICATION	3.9944571137584006E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999973945680959	WITHOUT_CLASSIFICATION	2.605431904013938E-6	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9999980908037428	WITHOUT_CLASSIFICATION	1.909196257232136E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999890856368658	WITHOUT_CLASSIFICATION	1.0914363134260652E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999830439592517	WITHOUT_CLASSIFICATION	1.6956040748266145E-5	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999830439592517	WITHOUT_CLASSIFICATION	1.6956040748266145E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9998178841436245	WITHOUT_CLASSIFICATION	1.8211585637549084E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9998178841436245	WITHOUT_CLASSIFICATION	1.8211585637549084E-4	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999980568401956	WITHOUT_CLASSIFICATION	1.943159804392589E-6	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.999990857715611	WITHOUT_CLASSIFICATION	9.142284388920479E-6	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999959190994329	WITHOUT_CLASSIFICATION	4.0809005671397065E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999995243029606	WITHOUT_CLASSIFICATION	4.7569703952687256E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998307631387462	WITHOUT_CLASSIFICATION	1.6923686125374502E-4	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999959190994329	WITHOUT_CLASSIFICATION	4.0809005671397065E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999995243029606	WITHOUT_CLASSIFICATION	4.7569703952687256E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999896458663139	WITHOUT_CLASSIFICATION	1.0354133686059499E-5	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999917438277687	WITHOUT_CLASSIFICATION	8.25617223132782E-6	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999997415905142	WITHOUT_CLASSIFICATION	2.5840948586715705E-7	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.999998469427676	WITHOUT_CLASSIFICATION	1.530572324001774E-6	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9999985229754399	WITHOUT_CLASSIFICATION	1.4770245600348422E-6	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9999577555463213	WITHOUT_CLASSIFICATION	4.2244453678678444E-5	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999956489085006	WITHOUT_CLASSIFICATION	4.351091499339601E-6	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999827747230671	WITHOUT_CLASSIFICATION	1.7225276932881285E-5	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999901937695326	WITHOUT_CLASSIFICATION	9.806230467532578E-6	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999962114434304	WITHOUT_CLASSIFICATION	3.788556569433153E-6	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999995553314316	WITHOUT_CLASSIFICATION	4.4466856841893256E-7	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999993120623238	WITHOUT_CLASSIFICATION	6.879376762090621E-7	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999992410929632	WITHOUT_CLASSIFICATION	7.589070368295537E-7	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9999931915870333	WITHOUT_CLASSIFICATION	6.8084129666316415E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998307631387462	WITHOUT_CLASSIFICATION	1.6923686125374502E-4	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9999932530154283	WITHOUT_CLASSIFICATION	6.746984571656915E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999678786635984	WITHOUT_CLASSIFICATION	3.212133640159728E-5	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999678786635984	WITHOUT_CLASSIFICATION	3.212133640159728E-5	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999975551074908	WITHOUT_CLASSIFICATION	2.4448925092211454E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999896458663139	WITHOUT_CLASSIFICATION	1.0354133686059499E-5	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9999897806399785	WITHOUT_CLASSIFICATION	1.0219360021480645E-5	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999987604811762	WITHOUT_CLASSIFICATION	1.239518823795471E-6	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9999987064594779	WITHOUT_CLASSIFICATION	1.2935405222008012E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999959974898361	WITHOUT_CLASSIFICATION	4.002510163851023E-6	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999947477390955	WITHOUT_CLASSIFICATION	5.252260904626043E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999896458663139	WITHOUT_CLASSIFICATION	1.0354133686059499E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999959974898361	WITHOUT_CLASSIFICATION	4.002510163851023E-6	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999947477390955	WITHOUT_CLASSIFICATION	5.252260904626043E-6	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9999716340561605	WITHOUT_CLASSIFICATION	2.8365943839455028E-5	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999935588665426	WITHOUT_CLASSIFICATION	6.441133457342655E-6	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999784790089272	WITHOUT_CLASSIFICATION	2.152099107277499E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999896458663139	WITHOUT_CLASSIFICATION	1.0354133686059499E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999896458663139	WITHOUT_CLASSIFICATION	1.0354133686059499E-5	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999846237486194	WITHOUT_CLASSIFICATION	1.5376251380555274E-5	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999949096779983	WITHOUT_CLASSIFICATION	5.090322001675186E-6	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.999952553258088	WITHOUT_CLASSIFICATION	4.74467419120934E-5	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999988165012718	WITHOUT_CLASSIFICATION	1.1834987282323227E-6	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999777983525867	WITHOUT_CLASSIFICATION	2.220164741332618E-5	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999996761879357	WITHOUT_CLASSIFICATION	3.2381206418129433E-7	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.999999771617808	WITHOUT_CLASSIFICATION	2.2838219197152553E-7	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999969914450103	WITHOUT_CLASSIFICATION	3.0085549896450206E-6	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999945545325265	WITHOUT_CLASSIFICATION	5.445467473489845E-6	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.999972989632831	WITHOUT_CLASSIFICATION	2.7010367168999534E-5	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999615878860626	WITHOUT_CLASSIFICATION	3.841211393745362E-5	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999970463384145	WITHOUT_CLASSIFICATION	2.95366158551611E-6	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999985090636728	WITHOUT_CLASSIFICATION	1.4909363271629824E-6	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9999983098990043	WITHOUT_CLASSIFICATION	1.690100995712301E-6	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999941278213588	WITHOUT_CLASSIFICATION	5.872178641310849E-6	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999999687038135	WITHOUT_CLASSIFICATION	3.129618649174317E-8	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999936351933132	WITHOUT_CLASSIFICATION	6.364806686729822E-6	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9999421850375044	WITHOUT_CLASSIFICATION	5.7814962495474197E-5	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9999343695450134	WITHOUT_CLASSIFICATION	6.56304549866358E-5	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.999997709791071	WITHOUT_CLASSIFICATION	2.2902089289496615E-6	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999842621703074	WITHOUT_CLASSIFICATION	1.573782969254376E-5	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999396451367579	WITHOUT_CLASSIFICATION	6.035486324213892E-5	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999396451367579	WITHOUT_CLASSIFICATION	6.035486324213892E-5	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999936351933132	WITHOUT_CLASSIFICATION	6.364806686729822E-6	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999956838591318	WITHOUT_CLASSIFICATION	4.316140868110454E-6	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999999282433826	WITHOUT_CLASSIFICATION	7.175661741668318E-8	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.999981302135503	WITHOUT_CLASSIFICATION	1.8697864497067107E-5	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999843294421463	WITHOUT_CLASSIFICATION	1.5670557853628343E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999589965120929	WITHOUT_CLASSIFICATION	4.1003487907024245E-5	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999908457464001	WITHOUT_CLASSIFICATION	9.154253599992616E-6	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999471784142255	WITHOUT_CLASSIFICATION	5.282158577443187E-5	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999982733134198	WITHOUT_CLASSIFICATION	1.7266865802597646E-6	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999659290461002	WITHOUT_CLASSIFICATION	3.4070953899888173E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999989792001829	WITHOUT_CLASSIFICATION	1.0207998171508285E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999976726576824	WITHOUT_CLASSIFICATION	2.327342317542549E-6	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999874250619729	WITHOUT_CLASSIFICATION	1.257493802713326E-5	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.999954891736674	WITHOUT_CLASSIFICATION	4.5108263326025795E-5	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.999999127647229	WITHOUT_CLASSIFICATION	8.723527709093791E-7	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996759270386	WITHOUT_CLASSIFICATION	3.2407296135664927E-7	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9999984233215902	WITHOUT_CLASSIFICATION	1.5766784098159665E-6	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999990651043383	WITHOUT_CLASSIFICATION	9.348956616239531E-7	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9999295378709209	WITHOUT_CLASSIFICATION	7.046212907912904E-5	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999982546862605	WITHOUT_CLASSIFICATION	1.7453137394687322E-6	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999997570265005	WITHOUT_CLASSIFICATION	2.4297349954673626E-7	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9999910675333221	WITHOUT_CLASSIFICATION	8.932466677831487E-6	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999968112567852	WITHOUT_CLASSIFICATION	3.188743214695465E-6	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999966305185753	WITHOUT_CLASSIFICATION	3.369481424594847E-6	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950338399158	WITHOUT_CLASSIFICATION	4.966160084137493E-6	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999823593467545	WITHOUT_CLASSIFICATION	1.7640653245509823E-5	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999923078238611	WITHOUT_CLASSIFICATION	7.692176138888568E-6	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999866621513992	WITHOUT_CLASSIFICATION	1.33378486007485E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999879652126761	WITHOUT_CLASSIFICATION	1.2034787323997126E-5	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999797391968599	WITHOUT_CLASSIFICATION	2.0260803140128027E-5	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997858683425	WITHOUT_CLASSIFICATION	2.1413165750600252E-6	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9999830575178078	WITHOUT_CLASSIFICATION	1.6942482192180547E-5	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9999930386391351	WITHOUT_CLASSIFICATION	6.9613608648877E-6	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987487030912	WITHOUT_CLASSIFICATION	1.251296908761484E-6	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986743441786	WITHOUT_CLASSIFICATION	1.3256558214127962E-6	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988060472412	WITHOUT_CLASSIFICATION	1.193952758829088E-6	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999786730526873	WITHOUT_CLASSIFICATION	2.1326947312673108E-5	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999922846278082	WITHOUT_CLASSIFICATION	7.715372191842538E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976238170238	WITHOUT_CLASSIFICATION	2.3761829761361757E-6	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999962107778001	WITHOUT_CLASSIFICATION	3.7892221998891815E-6	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999819410148455	WITHOUT_CLASSIFICATION	1.805898515459607E-5	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999985830265974	WITHOUT_CLASSIFICATION	1.4169734026429336E-6	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999540746752079	WITHOUT_CLASSIFICATION	4.5925324792131624E-5	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9999998017020414	WITHOUT_CLASSIFICATION	1.9829795871754104E-7	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999895895800458	WITHOUT_CLASSIFICATION	1.0410419954253664E-5	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999246982837432	WITHOUT_CLASSIFICATION	7.530171625685811E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999827548419057	WITHOUT_CLASSIFICATION	1.724515809431047E-5	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9999165967275339	WITHOUT_CLASSIFICATION	8.340327246608809E-5	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999885245822236	WITHOUT_CLASSIFICATION	1.1475417776316083E-5	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9999965459634443	WITHOUT_CLASSIFICATION	3.454036555672751E-6	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999667867398471	WITHOUT_CLASSIFICATION	3.321326015297394E-5	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999532424287128	WITHOUT_CLASSIFICATION	4.675757128736406E-5	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999671046649263	WITHOUT_CLASSIFICATION	3.2895335073754146E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999649303647411	WITHOUT_CLASSIFICATION	3.506963525894613E-5	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999504820406178	WITHOUT_CLASSIFICATION	4.951795938230132E-5	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999988726092602	WITHOUT_CLASSIFICATION	1.1273907397000697E-6	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999982065565265	WITHOUT_CLASSIFICATION	1.7934434735462292E-6	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9999899249743991	WITHOUT_CLASSIFICATION	1.0075025600992384E-5	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999142971977437	WITHOUT_CLASSIFICATION	8.57028022563014E-5	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999994159756077	WITHOUT_CLASSIFICATION	5.840243922962392E-7	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999790039699784	WITHOUT_CLASSIFICATION	2.099603002161553E-5	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852226143718	WITHOUT_CLASSIFICATION	1.4777385628143444E-5	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999571480187259	WITHOUT_CLASSIFICATION	4.285198127405631E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99997813074827	WITHOUT_CLASSIFICATION	2.1869251729942687E-5	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999925618531896	WITHOUT_CLASSIFICATION	7.438146810321293E-6	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.999996517393603	WITHOUT_CLASSIFICATION	3.4826063970332957E-6	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9999966254882979	WITHOUT_CLASSIFICATION	3.374511702167275E-6	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999977389701853	WITHOUT_CLASSIFICATION	2.26102981472764E-6	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983005567225	WITHOUT_CLASSIFICATION	1.6994432775361674E-6	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999994936193782	WITHOUT_CLASSIFICATION	5.063806217603567E-7	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.999992372626986	WITHOUT_CLASSIFICATION	7.627373013930266E-6	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999979055239221	WITHOUT_CLASSIFICATION	2.0944760779038536E-6	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.999965563724443	WITHOUT_CLASSIFICATION	3.443627555710551E-5	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999948844611185	WITHOUT_CLASSIFICATION	5.115538881447277E-6	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999993714673531	WITHOUT_CLASSIFICATION	6.285326468545734E-7	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.999977055544707	WITHOUT_CLASSIFICATION	2.29444552930614E-5	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999836044820616	WITHOUT_CLASSIFICATION	1.6395517938521605E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999827548419057	WITHOUT_CLASSIFICATION	1.724515809431047E-5	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999997789455779	WITHOUT_CLASSIFICATION	2.2105442215777316E-7	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999995522021962	WITHOUT_CLASSIFICATION	4.4779780388728834E-7	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.999998966049872	WITHOUT_CLASSIFICATION	1.033950127983701E-6	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.999990529685625	WITHOUT_CLASSIFICATION	9.470314374992707E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999989923110049	WITHOUT_CLASSIFICATION	1.0076889950896926E-6	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999965316767969	WITHOUT_CLASSIFICATION	3.468323203114167E-6	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9999655811810998	WITHOUT_CLASSIFICATION	3.441881890024039E-5	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9999873718897776	WITHOUT_CLASSIFICATION	1.2628110222533462E-5	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999872265012536	WITHOUT_CLASSIFICATION	1.2773498746317218E-5	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999991870929797	WITHOUT_CLASSIFICATION	8.129070203083859E-7	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999976183363604	WITHOUT_CLASSIFICATION	2.3816636396679964E-6	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999992175796338	WITHOUT_CLASSIFICATION	7.824203661562116E-7	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999942059823329	WITHOUT_CLASSIFICATION	5.794017667163043E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999997208158008	WITHOUT_CLASSIFICATION	2.791841992442206E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999896352093269	WITHOUT_CLASSIFICATION	1.0364790673009983E-5	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999971000337093	WITHOUT_CLASSIFICATION	2.8999662906095737E-6	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9999928824121141	WITHOUT_CLASSIFICATION	7.1175878858635664E-6	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.999975052967035	WITHOUT_CLASSIFICATION	2.4947032964930858E-5	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999989426484474	WITHOUT_CLASSIFICATION	1.0573515526600424E-6	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999931921850865	WITHOUT_CLASSIFICATION	6.807814913485283E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999995020973773	WITHOUT_CLASSIFICATION	4.979026226260492E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9999923405378713	WITHOUT_CLASSIFICATION	7.659462128608693E-6	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999875393342615	WITHOUT_CLASSIFICATION	1.246066573842694E-5	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999885051409855	WITHOUT_CLASSIFICATION	1.1494859014479244E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9999962495333153	WITHOUT_CLASSIFICATION	3.7504666847212314E-6	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999750405457051	WITHOUT_CLASSIFICATION	2.495945429483598E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9992615169101823	WITHOUT_CLASSIFICATION	7.384830898176482E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9998696642696039	WITHOUT_CLASSIFICATION	1.3033573039615779E-4	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9998784583313916	WITHOUT_CLASSIFICATION	1.2154166860842774E-4	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.999990746988686	WITHOUT_CLASSIFICATION	9.253011314081026E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999827548419057	WITHOUT_CLASSIFICATION	1.724515809431047E-5	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999957427126254	WITHOUT_CLASSIFICATION	4.2572873746928865E-6	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999997039960169	WITHOUT_CLASSIFICATION	2.9600398315177486E-7	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999915673944433	WITHOUT_CLASSIFICATION	8.4326055567675E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999827548419057	WITHOUT_CLASSIFICATION	1.724515809431047E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999760445382695	WITHOUT_CLASSIFICATION	2.3955461730456478E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999995020973773	WITHOUT_CLASSIFICATION	4.979026226260492E-7	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9999835866162318	WITHOUT_CLASSIFICATION	1.64133837682523E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9999915276416566	WITHOUT_CLASSIFICATION	8.47235834344137E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.999999933891806	WITHOUT_CLASSIFICATION	6.610819401480184E-8	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999991870929797	WITHOUT_CLASSIFICATION	8.129070203083859E-7	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999976183363604	WITHOUT_CLASSIFICATION	2.3816636396679964E-6	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999992175796338	WITHOUT_CLASSIFICATION	7.824203661562116E-7	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999989268702487	WITHOUT_CLASSIFICATION	1.0731297512467784E-6	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999847987487247	WITHOUT_CLASSIFICATION	1.5201251275372494E-5	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999817354215643	WITHOUT_CLASSIFICATION	1.826457843571668E-5	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999972340057741	WITHOUT_CLASSIFICATION	2.7659942259843476E-6	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999999877917297	WITHOUT_CLASSIFICATION	1.2208270231174274E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999827548419057	WITHOUT_CLASSIFICATION	1.724515809431047E-5	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999942059823329	WITHOUT_CLASSIFICATION	5.794017667163043E-6	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999997208158008	WITHOUT_CLASSIFICATION	2.791841992442206E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985604945668	WITHOUT_CLASSIFICATION	1.4395054332149874E-6	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984677546332	WITHOUT_CLASSIFICATION	1.5322453668587302E-6	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999957604962062	WITHOUT_CLASSIFICATION	4.239503793721542E-6	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999935673749852	WITHOUT_CLASSIFICATION	6.432625014689168E-6	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9999990956589988	WITHOUT_CLASSIFICATION	9.04341001308136E-7	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999999940368269	WITHOUT_CLASSIFICATION	5.963173164184467E-9	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999819410148455	WITHOUT_CLASSIFICATION	1.805898515459607E-5	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999998821356545	WITHOUT_CLASSIFICATION	1.1786434554787405E-7	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999976265895457	WITHOUT_CLASSIFICATION	2.3734104542303045E-6	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999974490914302	WITHOUT_CLASSIFICATION	2.5509085698546457E-6	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999954704551681	WITHOUT_CLASSIFICATION	4.529544831886408E-6	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999963518927318	WITHOUT_CLASSIFICATION	3.648107268167565E-6	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999866621513992	WITHOUT_CLASSIFICATION	1.33378486007485E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999879652126761	WITHOUT_CLASSIFICATION	1.2034787323997126E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986743441786	WITHOUT_CLASSIFICATION	1.3256558214127962E-6	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999963518927318	WITHOUT_CLASSIFICATION	3.648107268167565E-6	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999765862270913	WITHOUT_CLASSIFICATION	2.341377290867926E-5	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999954942189332	WITHOUT_CLASSIFICATION	4.505781066811273E-6	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999885390569707	WITHOUT_CLASSIFICATION	1.1460943029252144E-5	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999900047125335	WITHOUT_CLASSIFICATION	9.995287466587415E-6	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999997993009356	WITHOUT_CLASSIFICATION	2.0069906430537103E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.9997131513991934	WITHOUT_CLASSIFICATION	2.8684860080658566E-4	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988060472412	WITHOUT_CLASSIFICATION	1.193952758829088E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976238170238	WITHOUT_CLASSIFICATION	2.3761829761361757E-6	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.999965563724443	WITHOUT_CLASSIFICATION	3.443627555710551E-5	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999975525602249	WITHOUT_CLASSIFICATION	2.4474397751059317E-6	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999987249904965	WITHOUT_CLASSIFICATION	1.2750095034905061E-6	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999966488241627	WITHOUT_CLASSIFICATION	3.351175837253625E-6	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999987719440351	WITHOUT_CLASSIFICATION	1.2280559649728013E-6	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.999993960959901	WITHOUT_CLASSIFICATION	6.039040099034952E-6	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999989212792286	WITHOUT_CLASSIFICATION	1.0787207713682277E-6	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9999779668782499	WITHOUT_CLASSIFICATION	2.2033121750134125E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997378616382003	WITHOUT_CLASSIFICATION	2.621383617996344E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999659290461002	WITHOUT_CLASSIFICATION	3.4070953899888173E-5	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999838632144631	WITHOUT_CLASSIFICATION	1.6136785536999166E-5	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999999087305387	WITHOUT_CLASSIFICATION	9.126946129309705E-8	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999998052935012	WITHOUT_CLASSIFICATION	1.94706498897482E-7	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999976043051536	WITHOUT_CLASSIFICATION	2.3956948463720003E-6	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999995803592401	WITHOUT_CLASSIFICATION	4.19640759886108E-7	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.999962695533066	WITHOUT_CLASSIFICATION	3.730446693399974E-5	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999787201471982	WITHOUT_CLASSIFICATION	2.127985280175522E-5	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999956636093933	WITHOUT_CLASSIFICATION	4.336390606677616E-6	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999953199875761	WITHOUT_CLASSIFICATION	4.6800124238894015E-6	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999997503861475	WITHOUT_CLASSIFICATION	2.4961385245572116E-7	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9999591022983192	WITHOUT_CLASSIFICATION	4.0897701680817506E-5	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999868914666221	WITHOUT_CLASSIFICATION	1.3108533377910118E-5	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999978844609562	WITHOUT_CLASSIFICATION	2.115539043815176E-6	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999993588605002	WITHOUT_CLASSIFICATION	6.411394997970647E-6	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999965884371129	WITHOUT_CLASSIFICATION	3.411562887026714E-6	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999997386167997	WITHOUT_CLASSIFICATION	2.6138320025757535E-7	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999944368004389	WITHOUT_CLASSIFICATION	5.563199561154273E-6	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999988867534008	WITHOUT_CLASSIFICATION	1.1132465992234002E-6	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999877523575009	WITHOUT_CLASSIFICATION	1.2247642499153767E-5	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999943690313972	WITHOUT_CLASSIFICATION	5.630968602779409E-6	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991558626999	WITHOUT_CLASSIFICATION	8.441373001394038E-7	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999976074858754	WITHOUT_CLASSIFICATION	2.392514124676102E-6	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999998214443622	WITHOUT_CLASSIFICATION	1.7855563774001815E-7	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999417626978474	WITHOUT_CLASSIFICATION	5.823730215257454E-5	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9999827463058562	WITHOUT_CLASSIFICATION	1.7253694143865897E-5	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999901382102924	WITHOUT_CLASSIFICATION	9.8617897076346E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999845061640883	WITHOUT_CLASSIFICATION	1.5493835911703906E-5	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999950878308738	WITHOUT_CLASSIFICATION	4.91216912623118E-6	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999971012272296	WITHOUT_CLASSIFICATION	2.8987727703710396E-6	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999879385515243	WITHOUT_CLASSIFICATION	1.20614484755964E-5	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999902338341967	WITHOUT_CLASSIFICATION	9.766165803274633E-6	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999993548202266	WITHOUT_CLASSIFICATION	6.451797733165003E-7	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999611720572751	WITHOUT_CLASSIFICATION	3.8827942724938646E-5	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999907250473974	WITHOUT_CLASSIFICATION	9.274952602538136E-6	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999988845993933	WITHOUT_CLASSIFICATION	1.1154006066687427E-6	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999867177169551	WITHOUT_CLASSIFICATION	1.3282283044885699E-5	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999976756925703	WITHOUT_CLASSIFICATION	2.324307429679488E-6	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999825466674327	WITHOUT_CLASSIFICATION	1.7453332567394763E-5	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999377024845431	WITHOUT_CLASSIFICATION	6.229751545696612E-5	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999981657262519	WITHOUT_CLASSIFICATION	1.8342737481278662E-6	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9999971511071497	WITHOUT_CLASSIFICATION	2.8488928503050967E-6	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999342666048122	WITHOUT_CLASSIFICATION	6.573339518774904E-5	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9999854581829621	WITHOUT_CLASSIFICATION	1.454181703778317E-5	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.999986232764765	WITHOUT_CLASSIFICATION	1.3767235235003396E-5	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9999946159523827	WITHOUT_CLASSIFICATION	5.384047617363311E-6	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999956218583405	WITHOUT_CLASSIFICATION	4.378141659592848E-6	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999906075782059	WITHOUT_CLASSIFICATION	9.392421794064642E-6	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999938046636222	WITHOUT_CLASSIFICATION	6.1953363777408836E-6	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999806424620974	WITHOUT_CLASSIFICATION	1.935753790264794E-5	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999997574328441	WITHOUT_CLASSIFICATION	2.4256715589897484E-7	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999973408612005	WITHOUT_CLASSIFICATION	2.659138799468548E-6	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999956287110641	WITHOUT_CLASSIFICATION	4.371288935902133E-6	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999902428094003	WITHOUT_CLASSIFICATION	9.757190599731393E-6	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999997384335962	WITHOUT_CLASSIFICATION	2.6156640369357875E-7	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999993510626656	WITHOUT_CLASSIFICATION	6.489373344181766E-7	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9999935518343194	WITHOUT_CLASSIFICATION	6.448165680702825E-6	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999793496821375	WITHOUT_CLASSIFICATION	2.065031786246995E-5	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.999996563640672	WITHOUT_CLASSIFICATION	3.436359327895084E-6	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999336606502702	WITHOUT_CLASSIFICATION	6.6339349729724E-5	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999631087566074	WITHOUT_CLASSIFICATION	3.6891243392533826E-5	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.9999835921598315	WITHOUT_CLASSIFICATION	1.6407840168595916E-5	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999876901681108	WITHOUT_CLASSIFICATION	1.2309831889214499E-5	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999688755742567	WITHOUT_CLASSIFICATION	3.11244257432012E-5	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999968541008264	WITHOUT_CLASSIFICATION	3.14589917361902E-6	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.999990990472231	WITHOUT_CLASSIFICATION	9.00952776898516E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999772307577789	WITHOUT_CLASSIFICATION	2.2769242221174804E-5	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999920802095749	WITHOUT_CLASSIFICATION	7.91979042521234E-6	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999984184791091	WITHOUT_CLASSIFICATION	1.5815208908325173E-6	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9999555896386692	WITHOUT_CLASSIFICATION	4.441036133081222E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9999651113770259	WITHOUT_CLASSIFICATION	3.4888622974040954E-5	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999834511985392	WITHOUT_CLASSIFICATION	1.654880146076753E-5	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9998100126473413	WITHOUT_CLASSIFICATION	1.8998735265873294E-4	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999436306764171	WITHOUT_CLASSIFICATION	5.63693235828778E-5	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999983148718452	WITHOUT_CLASSIFICATION	1.6851281547661E-6	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.999999412102099	WITHOUT_CLASSIFICATION	5.878979010181624E-7	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9999569675318972	WITHOUT_CLASSIFICATION	4.303246810282726E-5	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999992469435283	WITHOUT_CLASSIFICATION	7.53056471684371E-7	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999848914078093	WITHOUT_CLASSIFICATION	1.510859219075918E-5	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999977356809889	WITHOUT_CLASSIFICATION	2.264319011066682E-6	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999948331830676	WITHOUT_CLASSIFICATION	5.166816932415815E-6	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9999383214392988	WITHOUT_CLASSIFICATION	6.167856070121486E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999901691015619	WITHOUT_CLASSIFICATION	9.830898438102439E-6	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999891612210233	WITHOUT_CLASSIFICATION	1.0838778976652024E-5	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999787965299116	WITHOUT_CLASSIFICATION	2.120347008838516E-5	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999065716466471	WITHOUT_CLASSIFICATION	9.342835335289841E-5	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9999859624605607	WITHOUT_CLASSIFICATION	1.403753943938253E-5	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999914675704779	WITHOUT_CLASSIFICATION	8.532429522097647E-6	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9999155328349103	WITHOUT_CLASSIFICATION	8.44671650897253E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999654279682608	WITHOUT_CLASSIFICATION	3.457203173922158E-5	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999998488544845	WITHOUT_CLASSIFICATION	1.5114551552463557E-7	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999446390013055	WITHOUT_CLASSIFICATION	5.5360998694639044E-5	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.9999959614668336	WITHOUT_CLASSIFICATION	4.038533166424099E-6	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999967477516093	WITHOUT_CLASSIFICATION	3.2522483907109427E-6	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999446390013055	WITHOUT_CLASSIFICATION	5.5360998694639044E-5	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999998764845546	WITHOUT_CLASSIFICATION	1.2351544543069717E-7	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999978890651388	WITHOUT_CLASSIFICATION	2.1109348613724075E-6	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999475138869448	WITHOUT_CLASSIFICATION	5.248611305519181E-5	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9999267761776778	WITHOUT_CLASSIFICATION	7.322382232224976E-5	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.9999949655529993	WITHOUT_CLASSIFICATION	5.034447000728305E-6	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999989830496463	WITHOUT_CLASSIFICATION	1.016950353681736E-6	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9998656278202113	WITHOUT_CLASSIFICATION	1.3437217978871496E-4	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999984701636587	WITHOUT_CLASSIFICATION	1.5298363412608397E-6	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999992908481116	WITHOUT_CLASSIFICATION	7.091518884780102E-7	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999545546856172	WITHOUT_CLASSIFICATION	4.544531438283762E-5	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.999999249844566	WITHOUT_CLASSIFICATION	7.501554339289974E-7	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999995491389009	WITHOUT_CLASSIFICATION	4.508610991096321E-7	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999939344973992	WITHOUT_CLASSIFICATION	6.06550260086034E-6	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.999999898487139	WITHOUT_CLASSIFICATION	1.0151286106227872E-7	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999714749273	WITHOUT_CLASSIFICATION	2.852507268229552E-8	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9999973666024071	WITHOUT_CLASSIFICATION	2.6333975929782187E-6	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999442591514875	WITHOUT_CLASSIFICATION	5.574084851242432E-5	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999442591514875	WITHOUT_CLASSIFICATION	5.574084851242432E-5	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999742286435	WITHOUT_CLASSIFICATION	2.5771356489807642E-8	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9995477546050705	WITHOUT_CLASSIFICATION	4.5224539492959775E-4	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9998435396806951	WITHOUT_CLASSIFICATION	1.5646031930500177E-4	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.9999034100454474	WITHOUT_CLASSIFICATION	9.658995455266774E-5	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999800739808016	WITHOUT_CLASSIFICATION	1.992601919838615E-5	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9999614992156518	WITHOUT_CLASSIFICATION	3.850078434817386E-5	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9998721620568584	WITHOUT_CLASSIFICATION	1.2783794314159003E-4	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999920703048913	WITHOUT_CLASSIFICATION	7.929695108684403E-6	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999973990790552	WITHOUT_CLASSIFICATION	2.600920944922704E-6	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999911644455721	WITHOUT_CLASSIFICATION	8.835554427899535E-6	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9999885219775688	WITHOUT_CLASSIFICATION	1.1478022431105809E-5	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999725676908047	WITHOUT_CLASSIFICATION	2.7432309195276337E-5	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9999651437155346	WITHOUT_CLASSIFICATION	3.485628446529815E-5	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9999982884610137	WITHOUT_CLASSIFICATION	1.7115389863297336E-6	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.99999822918031	WITHOUT_CLASSIFICATION	1.770819689980081E-6	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.999962695533066	WITHOUT_CLASSIFICATION	3.730446693399974E-5	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999967329349332	WITHOUT_CLASSIFICATION	3.2670650668062036E-6	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999920878030061	WITHOUT_CLASSIFICATION	7.912196993961689E-6	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9996419085202111	WITHOUT_CLASSIFICATION	3.5809147978896637E-4	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9997734064732565	WITHOUT_CLASSIFICATION	2.2659352674359753E-4	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999989766757752	WITHOUT_CLASSIFICATION	1.0233242247763879E-6	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999446293735043	WITHOUT_CLASSIFICATION	5.537062649581102E-5	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999952408628022	WITHOUT_CLASSIFICATION	4.759137197753297E-6	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.999979851984598	WITHOUT_CLASSIFICATION	2.0148015401867523E-5	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999986457149613	WITHOUT_CLASSIFICATION	1.3542850386474155E-6	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999989197346315	WITHOUT_CLASSIFICATION	1.0802653685016487E-6	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999991349146929	WITHOUT_CLASSIFICATION	8.650853070300532E-7	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999998881515337	WITHOUT_CLASSIFICATION	1.1184846618026605E-7	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999928632841752	WITHOUT_CLASSIFICATION	7.136715824808226E-6	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9998979349333134	WITHOUT_CLASSIFICATION	1.0206506668657563E-4	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999462705341606	WITHOUT_CLASSIFICATION	5.372946583940437E-5	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999918741847934	WITHOUT_CLASSIFICATION	8.125815206584131E-6	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9997676418739857	WITHOUT_CLASSIFICATION	2.3235812601434121E-4	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999780052870975	WITHOUT_CLASSIFICATION	2.1994712902452583E-5	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9998633337398207	WITHOUT_CLASSIFICATION	1.3666626017931483E-4	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999870073464724	WITHOUT_CLASSIFICATION	1.2992653527627826E-5	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9999724342691371	WITHOUT_CLASSIFICATION	2.7565730863008126E-5	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999482316648349	WITHOUT_CLASSIFICATION	5.176833516508252E-5	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.999998989583732	WITHOUT_CLASSIFICATION	1.0104162679730875E-6	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999853425164908	WITHOUT_CLASSIFICATION	1.4657483509129738E-5	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999824595376168	WITHOUT_CLASSIFICATION	1.7540462383134607E-5	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9999915573660756	WITHOUT_CLASSIFICATION	8.442633924492277E-6	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999939384123389	WITHOUT_CLASSIFICATION	6.061587661069275E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999991162154387	WITHOUT_CLASSIFICATION	8.837845614190115E-7	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999970584503114	WITHOUT_CLASSIFICATION	2.941549688480826E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999996357825173	WITHOUT_CLASSIFICATION	3.642174827097944E-7	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999840981759798	WITHOUT_CLASSIFICATION	1.5901824020174495E-5	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992728787156	WITHOUT_CLASSIFICATION	7.271212844366287E-7	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999930632273429	WITHOUT_CLASSIFICATION	6.936772656988664E-6	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999999826206363	WITHOUT_CLASSIFICATION	1.7379363801869143E-8	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999861874239914	WITHOUT_CLASSIFICATION	1.3812576008726132E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997378616382003	WITHOUT_CLASSIFICATION	2.621383617996344E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997378616382003	WITHOUT_CLASSIFICATION	2.621383617996344E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999749092363244	WITHOUT_CLASSIFICATION	2.509076367565261E-5	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9999997712274613	WITHOUT_CLASSIFICATION	2.2877253875153144E-7	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999949927584114	WITHOUT_CLASSIFICATION	5.007241588553856E-6	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999808357552036	WITHOUT_CLASSIFICATION	1.9164244796433102E-5	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999949927584114	WITHOUT_CLASSIFICATION	5.007241588553856E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999991607580734	WITHOUT_CLASSIFICATION	8.39241926686013E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.999996563132765	WITHOUT_CLASSIFICATION	3.436867234922689E-6	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9999951062181632	WITHOUT_CLASSIFICATION	4.893781836809404E-6	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999993562010181	WITHOUT_CLASSIFICATION	6.437989817751226E-7	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999590751888896	WITHOUT_CLASSIFICATION	4.092481111035332E-5	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999784988840241	WITHOUT_CLASSIFICATION	2.1501115975852297E-5	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999991590094651	WITHOUT_CLASSIFICATION	8.409905348312615E-7	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999914939772214	WITHOUT_CLASSIFICATION	8.506022778559037E-6	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999996450690392	WITHOUT_CLASSIFICATION	3.5493096077668655E-7	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9999559159141762	WITHOUT_CLASSIFICATION	4.408408582385476E-5	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999871132931046	WITHOUT_CLASSIFICATION	1.2886706895274738E-5	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.999999557815113	WITHOUT_CLASSIFICATION	4.4218488703892656E-7	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999725579094487	WITHOUT_CLASSIFICATION	2.7442090551203748E-5	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9999997622408882	WITHOUT_CLASSIFICATION	2.3775911171945918E-7	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.9999484698308728	WITHOUT_CLASSIFICATION	5.153016912711809E-5	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999923745817416	WITHOUT_CLASSIFICATION	7.62541825845905E-6	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999248287322108	WITHOUT_CLASSIFICATION	7.517126778918097E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999248287322108	WITHOUT_CLASSIFICATION	7.517126778918097E-5	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999628121812951	WITHOUT_CLASSIFICATION	3.7187818704903E-5	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999993494675378	WITHOUT_CLASSIFICATION	6.505324623172197E-7	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999991290615123	WITHOUT_CLASSIFICATION	8.709384877047204E-7	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999992724985974	WITHOUT_CLASSIFICATION	7.275014024870247E-7	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999998117091377	WITHOUT_CLASSIFICATION	1.882908623681151E-7	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999997970570365	WITHOUT_CLASSIFICATION	2.0294296355581878E-7	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999996845821107	WITHOUT_CLASSIFICATION	3.1541788932202813E-7	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999929100955429	WITHOUT_CLASSIFICATION	7.089904457115603E-6	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999966465815708	WITHOUT_CLASSIFICATION	3.3534184290302977E-6	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999827912586816	WITHOUT_CLASSIFICATION	1.720874131835964E-5	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999875003502392	WITHOUT_CLASSIFICATION	1.2499649760820801E-5	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999921667631001	WITHOUT_CLASSIFICATION	7.833236900020657E-6	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999997919614642	WITHOUT_CLASSIFICATION	2.0803853574677933E-7	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.999999120376798	WITHOUT_CLASSIFICATION	8.796232021816549E-7	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999883343004266	WITHOUT_CLASSIFICATION	1.1665699573502076E-5	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999984599281311	WITHOUT_CLASSIFICATION	1.540071868969311E-6	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999948832604099	WITHOUT_CLASSIFICATION	5.11673959020007E-6	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9999486516982533	WITHOUT_CLASSIFICATION	5.1348301746646824E-5	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.9999258334721499	WITHOUT_CLASSIFICATION	7.416652785014476E-5	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999993977888836	WITHOUT_CLASSIFICATION	6.02211116407609E-7	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999950832404741	WITHOUT_CLASSIFICATION	4.916759525868647E-6	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999894297688016	WITHOUT_CLASSIFICATION	1.0570231198488726E-5	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999988267952916	WITHOUT_CLASSIFICATION	1.1732047083778211E-6	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999984642861227	WITHOUT_CLASSIFICATION	1.5357138773206693E-6	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9999564227800146	WITHOUT_CLASSIFICATION	4.357721998533407E-5	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999965676847841	WITHOUT_CLASSIFICATION	3.432315215910816E-6	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999921871223546	WITHOUT_CLASSIFICATION	7.81287764531688E-6	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9999946455291824	WITHOUT_CLASSIFICATION	5.35447081760774E-6	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999032426742974	WITHOUT_CLASSIFICATION	9.675732570260425E-5	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999964701730881	WITHOUT_CLASSIFICATION	3.5298269118858774E-6	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999795943216204	WITHOUT_CLASSIFICATION	2.0405678379584425E-5	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999912197712623	WITHOUT_CLASSIFICATION	8.78022873781372E-6	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999919336118048	WITHOUT_CLASSIFICATION	8.066388195160843E-6	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999912418073437	WITHOUT_CLASSIFICATION	8.75819265631877E-6	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999903181533657	WITHOUT_CLASSIFICATION	9.681846634305378E-6	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999994816156881	WITHOUT_CLASSIFICATION	5.183843119361898E-7	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999975143291598	WITHOUT_CLASSIFICATION	2.4856708402409418E-6	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999770983106361	WITHOUT_CLASSIFICATION	2.290168936386804E-5	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999946251130638	WITHOUT_CLASSIFICATION	5.37488693618192E-6	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.99999680615428	WITHOUT_CLASSIFICATION	3.19384571986915E-6	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999966564696702	WITHOUT_CLASSIFICATION	3.3435303297643905E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999966331578626	WITHOUT_CLASSIFICATION	3.3668421373723264E-6	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.9999081078524918	WITHOUT_CLASSIFICATION	9.189214750808213E-5	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9999549534159659	WITHOUT_CLASSIFICATION	4.504658403408243E-5	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999998736956849	WITHOUT_CLASSIFICATION	1.2630431514413477E-7	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999997012659346	WITHOUT_CLASSIFICATION	2.987340653932138E-7	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9994755605428856	WITHOUT_CLASSIFICATION	5.244394571143362E-4	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999992896238808	WITHOUT_CLASSIFICATION	7.10376119082204E-7	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999973527054377	WITHOUT_CLASSIFICATION	2.647294562423534E-6	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999966772196985	WITHOUT_CLASSIFICATION	3.3227803014775866E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999924192236925	WITHOUT_CLASSIFICATION	7.580776307444777E-6	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999917815810062	WITHOUT_CLASSIFICATION	8.218418993824836E-6	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999998816427947	WITHOUT_CLASSIFICATION	1.183572052911562E-7	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999996385476105	WITHOUT_CLASSIFICATION	3.614523893971475E-7	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999679696600265	WITHOUT_CLASSIFICATION	3.203033997351574E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999760445382695	WITHOUT_CLASSIFICATION	2.3955461730456478E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999760445382695	WITHOUT_CLASSIFICATION	2.3955461730456478E-5	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999913733825698	WITHOUT_CLASSIFICATION	8.62661743012884E-6	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999066645061634	WITHOUT_CLASSIFICATION	9.333549383654994E-5	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999597146283998	WITHOUT_CLASSIFICATION	4.028537160021524E-5	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.99999892584949	WITHOUT_CLASSIFICATION	1.0741505099665831E-6	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999997039057995	WITHOUT_CLASSIFICATION	2.960942005400379E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999993758196806	WITHOUT_CLASSIFICATION	6.2418031934541E-7	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999966961124735	WITHOUT_CLASSIFICATION	3.3038875264616297E-6	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999998386739226	WITHOUT_CLASSIFICATION	1.613260774181379E-7	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999839495092416	WITHOUT_CLASSIFICATION	1.6050490758373274E-5	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999970337312253	WITHOUT_CLASSIFICATION	2.9662687748333935E-6	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999741295066381	WITHOUT_CLASSIFICATION	2.5870493361850124E-5	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9999376383153658	WITHOUT_CLASSIFICATION	6.236168463421303E-5	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9999296678541236	WITHOUT_CLASSIFICATION	7.033214587631681E-5	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999764961998728	WITHOUT_CLASSIFICATION	2.350380012719887E-5	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999920105914133	WITHOUT_CLASSIFICATION	7.98940858671433E-6	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999976645728852	WITHOUT_CLASSIFICATION	2.335427114870612E-6	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999996469375082	WITHOUT_CLASSIFICATION	3.5306249178551606E-7	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.9998742977841084	WITHOUT_CLASSIFICATION	1.2570221589169476E-4	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999694275311933	WITHOUT_CLASSIFICATION	3.0572468806560735E-5	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999781345963621	WITHOUT_CLASSIFICATION	2.1865403637902326E-5	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999992528586005	WITHOUT_CLASSIFICATION	7.471413995902012E-7	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.999990693058546	WITHOUT_CLASSIFICATION	9.306941453953489E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997188804457346	WITHOUT_CLASSIFICATION	2.8111955426535424E-4	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999994315702619	WITHOUT_CLASSIFICATION	5.684297381148195E-7	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9999997340139442	WITHOUT_CLASSIFICATION	2.65986055783161E-7	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999998755794561	WITHOUT_CLASSIFICATION	1.2442054391439696E-7	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9986332875020094	WITHOUT_CLASSIFICATION	0.0013667124979905966	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997650389374797	WITHOUT_CLASSIFICATION	2.349610625203812E-4	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999986800203517	WITHOUT_CLASSIFICATION	1.319979648307324E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997188804457346	WITHOUT_CLASSIFICATION	2.8111955426535424E-4	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.999998245531255	WITHOUT_CLASSIFICATION	1.754468745010005E-6	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999948773113568	WITHOUT_CLASSIFICATION	5.12268864320114E-6	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9996539136340392	WITHOUT_CLASSIFICATION	3.460863659607762E-4	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999790348819555	WITHOUT_CLASSIFICATION	2.0965118044459302E-5	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999981520234056	WITHOUT_CLASSIFICATION	1.8479765944431991E-6	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999972659114728	WITHOUT_CLASSIFICATION	2.734088527316283E-6	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999997840218076	WITHOUT_CLASSIFICATION	2.1597819237139243E-7	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999940074325979	WITHOUT_CLASSIFICATION	5.992567402136177E-6	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999871847230966	WITHOUT_CLASSIFICATION	1.2815276903491635E-5	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999790348819555	WITHOUT_CLASSIFICATION	2.0965118044459302E-5	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999881015936517	WITHOUT_CLASSIFICATION	1.1898406348293274E-5	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999917523182549	WITHOUT_CLASSIFICATION	8.247681745120263E-6	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999706256698933	WITHOUT_CLASSIFICATION	2.9374330106795533E-5	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998078859371026	WITHOUT_CLASSIFICATION	1.9211406289734536E-4	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.999999088571476	WITHOUT_CLASSIFICATION	9.114285239177668E-7	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999875003502392	WITHOUT_CLASSIFICATION	1.2499649760820801E-5	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999978174819275	WITHOUT_CLASSIFICATION	2.1825180724527554E-6	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999967380410641	WITHOUT_CLASSIFICATION	3.2619589358398883E-6	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.999978218888811	WITHOUT_CLASSIFICATION	2.1781111189012367E-5	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9999811259851626	WITHOUT_CLASSIFICATION	1.8874014837348993E-5	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9998659017622377	WITHOUT_CLASSIFICATION	1.3409823776240672E-4	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999887641223422	WITHOUT_CLASSIFICATION	1.1235877657853582E-5	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.999877800779647	WITHOUT_CLASSIFICATION	1.2219922035299914E-4	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999994799228039	WITHOUT_CLASSIFICATION	5.200771961532981E-7	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999796829426411	WITHOUT_CLASSIFICATION	2.031705735902876E-5	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999955634435909	WITHOUT_CLASSIFICATION	4.4365564091072E-6	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997842396888847	WITHOUT_CLASSIFICATION	2.1576031111525073E-4	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.999999563902288	WITHOUT_CLASSIFICATION	4.36097712095432E-7	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999998116159523	WITHOUT_CLASSIFICATION	1.8838404778362606E-7	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999798752844098	WITHOUT_CLASSIFICATION	2.012471559027279E-5	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999885474046014	WITHOUT_CLASSIFICATION	1.145259539853648E-5	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999985998993778	WITHOUT_CLASSIFICATION	1.4001006221963408E-6	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999991358719343	WITHOUT_CLASSIFICATION	8.641280657826778E-7	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999978755513929	WITHOUT_CLASSIFICATION	2.1244486071374093E-6	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.999998834015082	WITHOUT_CLASSIFICATION	1.165984917949945E-6	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9999876653865618	WITHOUT_CLASSIFICATION	1.2334613438215354E-5	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9999882044695576	WITHOUT_CLASSIFICATION	1.1795530442351706E-5	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999980595045204	WITHOUT_CLASSIFICATION	1.9404954795381074E-6	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999908710290727	WITHOUT_CLASSIFICATION	9.128970927346495E-6	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999991505233622	WITHOUT_CLASSIFICATION	8.494766378920937E-7	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999775903731709	WITHOUT_CLASSIFICATION	2.2409626829201214E-5	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9998907129940776	WITHOUT_CLASSIFICATION	1.0928700592237498E-4	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999977341636609	WITHOUT_CLASSIFICATION	2.265836339164373E-6	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998596322364	WITHOUT_CLASSIFICATION	1.403677636053978E-6	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999927762946664	WITHOUT_CLASSIFICATION	7.223705333542556E-6	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9999999893563102	WITHOUT_CLASSIFICATION	1.064368975422573E-8	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999953240088981	WITHOUT_CLASSIFICATION	4.675991101868271E-6	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.999994716075825	WITHOUT_CLASSIFICATION	5.283924174975831E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999943203908754	WITHOUT_CLASSIFICATION	5.6796091245347135E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999943203908754	WITHOUT_CLASSIFICATION	5.6796091245347135E-6	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999901106812882	WITHOUT_CLASSIFICATION	9.889318711778426E-6	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.999995572510551	WITHOUT_CLASSIFICATION	4.427489448991097E-6	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999908263223652	WITHOUT_CLASSIFICATION	9.173677634773232E-6	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999997482994201	WITHOUT_CLASSIFICATION	2.517005798573611E-7	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999899328518391	WITHOUT_CLASSIFICATION	1.0067148160948214E-5	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999979381846684	WITHOUT_CLASSIFICATION	2.061815331642544E-6	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999962960327059	WITHOUT_CLASSIFICATION	3.703967294132489E-6	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999991991009746	WITHOUT_CLASSIFICATION	8.008990255537991E-7	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999924573358234	WITHOUT_CLASSIFICATION	7.542664176621163E-6	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999986201841172	WITHOUT_CLASSIFICATION	1.3798158827539348E-6	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999919931536195	WITHOUT_CLASSIFICATION	8.0068463804915E-6	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999972890003099	WITHOUT_CLASSIFICATION	2.7109996901378083E-6	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999973218163601	WITHOUT_CLASSIFICATION	2.6781836398992742E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999943203908754	WITHOUT_CLASSIFICATION	5.6796091245347135E-6	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999690698491376	WITHOUT_CLASSIFICATION	3.093015086241015E-5	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999471134057358	WITHOUT_CLASSIFICATION	5.2886594264121176E-5	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999942177593605	WITHOUT_CLASSIFICATION	5.782240639500785E-6	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999881765764962	WITHOUT_CLASSIFICATION	1.1823423503783414E-5	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999997809666669	WITHOUT_CLASSIFICATION	2.1903333314068385E-7	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.999990744414355	WITHOUT_CLASSIFICATION	9.255585644987741E-6	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.999998973367875	WITHOUT_CLASSIFICATION	1.0266321250107537E-6	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999991787933838	WITHOUT_CLASSIFICATION	8.212066162498778E-7	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999999547929939	WITHOUT_CLASSIFICATION	4.5207006154878576E-8	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999901996499792	WITHOUT_CLASSIFICATION	9.8003500208064E-6	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999989668962782	WITHOUT_CLASSIFICATION	1.0331037218200403E-6	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998596322364	WITHOUT_CLASSIFICATION	1.403677636053978E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999943203908754	WITHOUT_CLASSIFICATION	5.6796091245347135E-6	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.999983991169588	WITHOUT_CLASSIFICATION	1.6008830412032286E-5	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999985595929427	WITHOUT_CLASSIFICATION	1.440407057280636E-6	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999815124713427	WITHOUT_CLASSIFICATION	1.84875286572928E-5	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999608015592325	WITHOUT_CLASSIFICATION	3.919844076746242E-5	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999992668067497	WITHOUT_CLASSIFICATION	7.331932504201674E-7	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999992022851955	WITHOUT_CLASSIFICATION	7.977148045307748E-7	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999853181040661	WITHOUT_CLASSIFICATION	1.4681895933905853E-5	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999974811194638	WITHOUT_CLASSIFICATION	2.518880536094721E-6	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999963515040394	WITHOUT_CLASSIFICATION	3.648495960631468E-6	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999996846515827	WITHOUT_CLASSIFICATION	3.153484172459403E-7	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999924359949461	WITHOUT_CLASSIFICATION	7.564005053872595E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995476438827032	WITHOUT_CLASSIFICATION	4.5235611729669737E-4	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999994919146827	WITHOUT_CLASSIFICATION	5.080853171757128E-7	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999986853323566	WITHOUT_CLASSIFICATION	1.314667643405064E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999991607580734	WITHOUT_CLASSIFICATION	8.39241926686013E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999998351673038	WITHOUT_CLASSIFICATION	1.6483269603450514E-7	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.999999876809872	WITHOUT_CLASSIFICATION	1.231901279444205E-7	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999994900379554	WITHOUT_CLASSIFICATION	5.099620445957733E-7	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999876591001536	WITHOUT_CLASSIFICATION	1.2340899846252562E-5	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999970120256684	WITHOUT_CLASSIFICATION	2.987974331512946E-6	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999211719006955	WITHOUT_CLASSIFICATION	7.88280993044006E-5	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999211719006955	WITHOUT_CLASSIFICATION	7.88280993044006E-5	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999986905761783	WITHOUT_CLASSIFICATION	1.3094238217384323E-6	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9999996716103102	WITHOUT_CLASSIFICATION	3.2838968983547415E-7	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9999975580304249	WITHOUT_CLASSIFICATION	2.441969575121774E-6	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9999998807889882	WITHOUT_CLASSIFICATION	1.192110117500817E-7	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999917364694147	WITHOUT_CLASSIFICATION	8.263530585306324E-6	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999928401589301	WITHOUT_CLASSIFICATION	7.159841069966933E-6	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999747941862492	WITHOUT_CLASSIFICATION	2.5205813750822894E-5	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999998079744956	WITHOUT_CLASSIFICATION	1.9202550445624016E-7	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999998079744956	WITHOUT_CLASSIFICATION	1.9202550445624016E-7	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999660929283455	WITHOUT_CLASSIFICATION	3.39070716545314E-5	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999837722295233	WITHOUT_CLASSIFICATION	1.622777047679128E-5	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999935008855554	WITHOUT_CLASSIFICATION	6.499114444564293E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999970347690735	WITHOUT_CLASSIFICATION	2.9652309264912097E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999970347690735	WITHOUT_CLASSIFICATION	2.9652309264912097E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999970347690735	WITHOUT_CLASSIFICATION	2.9652309264912097E-5	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9999992229387089	WITHOUT_CLASSIFICATION	7.770612911445971E-7	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999980661047206	WITHOUT_CLASSIFICATION	1.9338952793379976E-6	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9999913236751432	WITHOUT_CLASSIFICATION	8.676324856735336E-6	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9999995156550178	WITHOUT_CLASSIFICATION	4.843449821435174E-7	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.999999325681216	WITHOUT_CLASSIFICATION	6.743187840511724E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999943203908754	WITHOUT_CLASSIFICATION	5.6796091245347135E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999943203908754	WITHOUT_CLASSIFICATION	5.6796091245347135E-6	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999999727573493	WITHOUT_CLASSIFICATION	2.724265059040685E-8	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999994045477747	WITHOUT_CLASSIFICATION	5.954522252153289E-7	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999970928194923	WITHOUT_CLASSIFICATION	2.907180507654684E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999824511243977	WITHOUT_CLASSIFICATION	1.7548875602327466E-5	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999929336432415	WITHOUT_CLASSIFICATION	7.0663567585168085E-6	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.999982684103504	WITHOUT_CLASSIFICATION	1.7315896495956138E-5	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999927542062479	WITHOUT_CLASSIFICATION	7.245793752148361E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999996524025061	WITHOUT_CLASSIFICATION	3.475974939495121E-7	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999876541962573	WITHOUT_CLASSIFICATION	1.2345803742670802E-5	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999975533346497	WITHOUT_CLASSIFICATION	2.4466653502618358E-6	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9998253351625415	WITHOUT_CLASSIFICATION	1.7466483745860517E-4	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999876793693767	WITHOUT_CLASSIFICATION	1.2320630623312646E-5	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999876793693767	WITHOUT_CLASSIFICATION	1.2320630623312646E-5	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999910788458871	WITHOUT_CLASSIFICATION	8.921154112836042E-6	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999910788458871	WITHOUT_CLASSIFICATION	8.921154112836042E-6	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999911700550828	WITHOUT_CLASSIFICATION	8.82994491725326E-6	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.999988504367921	WITHOUT_CLASSIFICATION	1.149563207911147E-5	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.999988504367921	WITHOUT_CLASSIFICATION	1.149563207911147E-5	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999873560783765	WITHOUT_CLASSIFICATION	1.2643921623363488E-5	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999847365165393	WITHOUT_CLASSIFICATION	1.526348346068281E-5	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999990390748524	WITHOUT_CLASSIFICATION	9.6092514755828E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999211719006955	WITHOUT_CLASSIFICATION	7.88280993044006E-5	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999985948945229	WITHOUT_CLASSIFICATION	1.4051054770880302E-6	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999847365165393	WITHOUT_CLASSIFICATION	1.526348346068281E-5	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9999589416760581	WITHOUT_CLASSIFICATION	4.105832394183455E-5	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999935910971413	WITHOUT_CLASSIFICATION	6.408902858754532E-6	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999858539912703	WITHOUT_CLASSIFICATION	1.4146008729742316E-5	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999899276793639	WITHOUT_CLASSIFICATION	1.0072320636030506E-5	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999999584484843	WITHOUT_CLASSIFICATION	4.155151563514158E-8	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999924558571269	WITHOUT_CLASSIFICATION	7.5441428730944004E-6	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999982456849679	WITHOUT_CLASSIFICATION	1.7543150320279095E-6	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.999999210529821	WITHOUT_CLASSIFICATION	7.894701790060648E-7	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9999974561618854	WITHOUT_CLASSIFICATION	2.543838114638622E-6	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9999976735176722	WITHOUT_CLASSIFICATION	2.326482327824369E-6	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999991643916608	WITHOUT_CLASSIFICATION	8.356083392279138E-7	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9999750002461165	WITHOUT_CLASSIFICATION	2.4999753883459713E-5	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999903531644234	WITHOUT_CLASSIFICATION	9.646835576583328E-6	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999935638570459	WITHOUT_CLASSIFICATION	6.436142954252163E-6	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9999999483436074	WITHOUT_CLASSIFICATION	5.1656392497845536E-8	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.999996973845926	WITHOUT_CLASSIFICATION	3.026154074006296E-6	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999992561154136	WITHOUT_CLASSIFICATION	7.438845863195225E-7	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.999996959139174	WITHOUT_CLASSIFICATION	3.040860825941557E-6	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.999996959139174	WITHOUT_CLASSIFICATION	3.040860825941557E-6	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999979699325978	WITHOUT_CLASSIFICATION	2.0300674022720267E-6	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999989344523763	WITHOUT_CLASSIFICATION	1.0655476237563164E-6	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999992475578289	WITHOUT_CLASSIFICATION	7.524421710896799E-7	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999943823820912	WITHOUT_CLASSIFICATION	5.617617908797564E-6	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999864579069804	WITHOUT_CLASSIFICATION	1.3542093019622739E-5	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999991160299306	WITHOUT_CLASSIFICATION	8.839700694170653E-7	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9999983921717194	WITHOUT_CLASSIFICATION	1.607828280633111E-6	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999955119876585	WITHOUT_CLASSIFICATION	4.4880123416024274E-6	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999921086257211	WITHOUT_CLASSIFICATION	7.891374278985449E-6	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999994956119682	WITHOUT_CLASSIFICATION	5.043880317118267E-7	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999992224175394	WITHOUT_CLASSIFICATION	7.775824606986139E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995476438827032	WITHOUT_CLASSIFICATION	4.5235611729669737E-4	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.999998510811478	WITHOUT_CLASSIFICATION	1.489188522128897E-6	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999960505265053	WITHOUT_CLASSIFICATION	3.949473494658375E-6	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999988384286632	WITHOUT_CLASSIFICATION	1.1615713367642033E-6	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999906766700953	WITHOUT_CLASSIFICATION	9.323329904626728E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999996147583649	WITHOUT_CLASSIFICATION	3.8524163513252125E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999996147583649	WITHOUT_CLASSIFICATION	3.8524163513252125E-7	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9999880381669215	WITHOUT_CLASSIFICATION	1.196183307855755E-5	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.99999855328167	WITHOUT_CLASSIFICATION	1.446718329999711E-6	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9999935861904815	WITHOUT_CLASSIFICATION	6.413809518426777E-6	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999859375610335	WITHOUT_CLASSIFICATION	1.4062438966605654E-5	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999935576998124	WITHOUT_CLASSIFICATION	6.442300187663282E-6	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999785146809633	WITHOUT_CLASSIFICATION	2.1485319036715742E-5	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999955212229127	WITHOUT_CLASSIFICATION	4.478777087283908E-6	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999968609516666	WITHOUT_CLASSIFICATION	3.139048333464742E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999935973456792	WITHOUT_CLASSIFICATION	6.4026543209346196E-6	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999972240970075	WITHOUT_CLASSIFICATION	2.775902992491667E-6	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.999995606112941	WITHOUT_CLASSIFICATION	4.393887058968E-6	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999968609516666	WITHOUT_CLASSIFICATION	3.139048333464742E-6	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9999990574628705	WITHOUT_CLASSIFICATION	9.425371294731122E-7	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999906125906517	WITHOUT_CLASSIFICATION	9.387409348432296E-6	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999996312728244	WITHOUT_CLASSIFICATION	3.6872717557383313E-7	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999977025381822	WITHOUT_CLASSIFICATION	2.2974618178401846E-6	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999985315900701	WITHOUT_CLASSIFICATION	1.468409929805606E-6	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999978676478423	WITHOUT_CLASSIFICATION	2.1323521577761423E-6	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9997859879707051	WITHOUT_CLASSIFICATION	2.1401202929506957E-4	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.999993515267958	WITHOUT_CLASSIFICATION	6.484732042009063E-6	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999963184142515	WITHOUT_CLASSIFICATION	3.6815857485342E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999834217255816	WITHOUT_CLASSIFICATION	1.6578274418288284E-5	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999777067054223	WITHOUT_CLASSIFICATION	2.2293294577639454E-5	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999985126163807	WITHOUT_CLASSIFICATION	1.4873836192473964E-6	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999764029564371	WITHOUT_CLASSIFICATION	2.3597043562849747E-5	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999997903556143	WITHOUT_CLASSIFICATION	2.096443858222513E-7	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999958864172807	WITHOUT_CLASSIFICATION	4.1135827193329445E-6	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999926724126414	WITHOUT_CLASSIFICATION	7.327587358545085E-6	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999904616459859	WITHOUT_CLASSIFICATION	9.538354014042733E-6	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9999783337674294	WITHOUT_CLASSIFICATION	2.1666232570655828E-5	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.999975157488319	WITHOUT_CLASSIFICATION	2.484251168109699E-5	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9998650688999584	WITHOUT_CLASSIFICATION	1.3493110004156818E-4	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9999992993447849	WITHOUT_CLASSIFICATION	7.006552149926684E-7	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9999983896660743	WITHOUT_CLASSIFICATION	1.6103339256410015E-6	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9999773348773474	WITHOUT_CLASSIFICATION	2.2665122652577938E-5	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.999947918974019	WITHOUT_CLASSIFICATION	5.2081025981068315E-5	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999807729813136	WITHOUT_CLASSIFICATION	1.9227018686458482E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999637846453671	WITHOUT_CLASSIFICATION	3.6215354633022605E-5	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999986099327277	WITHOUT_CLASSIFICATION	1.3900672722909299E-6	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999917421385012	WITHOUT_CLASSIFICATION	8.257861498903312E-6	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999921362060487	WITHOUT_CLASSIFICATION	7.863793951301158E-6	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999991973126185	WITHOUT_CLASSIFICATION	8.026873815657771E-7	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999952166969146	WITHOUT_CLASSIFICATION	4.783303085348863E-6	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999896407311187	WITHOUT_CLASSIFICATION	1.0359268881222899E-5	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999937950684782	WITHOUT_CLASSIFICATION	6.204931521813103E-6	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999999855624654	WITHOUT_CLASSIFICATION	1.4437534493514362E-8	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999994308816782	WITHOUT_CLASSIFICATION	5.691183217974867E-7	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999946843351059	WITHOUT_CLASSIFICATION	5.315664894103591E-6	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999985435799087	WITHOUT_CLASSIFICATION	1.4564200913959272E-6	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999955369174789	WITHOUT_CLASSIFICATION	4.463082521145711E-6	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999939447476924	WITHOUT_CLASSIFICATION	6.05525230764612E-6	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999908548972071	WITHOUT_CLASSIFICATION	9.145102792939133E-6	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999821536946727	WITHOUT_CLASSIFICATION	1.7846305327278334E-5	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999962886942007	WITHOUT_CLASSIFICATION	3.711305799299342E-6	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999861491526868	WITHOUT_CLASSIFICATION	1.3850847313199168E-5	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999998782074805	WITHOUT_CLASSIFICATION	1.21792519456075E-7	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999932999089102	WITHOUT_CLASSIFICATION	6.7000910897501525E-6	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999991634811868	WITHOUT_CLASSIFICATION	8.365188131425157E-7	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999999858574109	WITHOUT_CLASSIFICATION	1.4142589094743703E-8	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999951980783098	WITHOUT_CLASSIFICATION	4.8019216901849355E-6	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999974396056628	WITHOUT_CLASSIFICATION	2.5603943372340985E-6	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999654149126467	WITHOUT_CLASSIFICATION	3.4585087353301135E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999969416383678	WITHOUT_CLASSIFICATION	3.0583616322080037E-6	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999993097491885	WITHOUT_CLASSIFICATION	6.902508115936121E-7	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999996670808173	WITHOUT_CLASSIFICATION	3.32919182622517E-7	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999992174954797	WITHOUT_CLASSIFICATION	7.825045203079972E-7	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999998191337941	WITHOUT_CLASSIFICATION	1.8086620594496743E-7	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999890709031601	WITHOUT_CLASSIFICATION	1.0929096839795495E-5	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999982087285406	WITHOUT_CLASSIFICATION	1.7912714593488205E-6	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999981449148889	WITHOUT_CLASSIFICATION	1.8550851111051133E-6	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999913912690667	WITHOUT_CLASSIFICATION	8.608730933304406E-6	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999977297828866	WITHOUT_CLASSIFICATION	2.2702171133406017E-6	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999905163189624	WITHOUT_CLASSIFICATION	9.483681037655758E-6	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.999999309040394	WITHOUT_CLASSIFICATION	6.909596060478741E-7	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999532552406348	WITHOUT_CLASSIFICATION	4.674475936519418E-5	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9999982191409539	WITHOUT_CLASSIFICATION	1.7808590460530262E-6	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9999953729757677	WITHOUT_CLASSIFICATION	4.627024232396288E-6	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999746108415658	WITHOUT_CLASSIFICATION	2.5389158434176342E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999969416383678	WITHOUT_CLASSIFICATION	3.0583616322080037E-6	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999998125338619	WITHOUT_CLASSIFICATION	1.8746613802831013E-7	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999998027023642	WITHOUT_CLASSIFICATION	1.9729763575585157E-7	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999964786919894	WITHOUT_CLASSIFICATION	3.5213080106254763E-6	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.999995392151207	WITHOUT_CLASSIFICATION	4.607848793068043E-6	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999968497012602	WITHOUT_CLASSIFICATION	3.1502987397761057E-6	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999957618250945	WITHOUT_CLASSIFICATION	4.2381749054743845E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999935973456792	WITHOUT_CLASSIFICATION	6.4026543209346196E-6	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999991790731012	WITHOUT_CLASSIFICATION	8.209268987441196E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999994308816782	WITHOUT_CLASSIFICATION	5.691183217974867E-7	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9999977803464846	WITHOUT_CLASSIFICATION	2.219653515412123E-6	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999943675935299	WITHOUT_CLASSIFICATION	5.6324064700085606E-6	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999776992324464	WITHOUT_CLASSIFICATION	2.2300767553656972E-5	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999709702192336	WITHOUT_CLASSIFICATION	2.9029780766399154E-5	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999967012510409	WITHOUT_CLASSIFICATION	3.2987489590912747E-6	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999792752405852	WITHOUT_CLASSIFICATION	2.0724759414789198E-5	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999914698370929	WITHOUT_CLASSIFICATION	8.530162907122262E-6	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999999400199842	WITHOUT_CLASSIFICATION	5.998001585483613E-8	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999969605395074	WITHOUT_CLASSIFICATION	3.039460492727088E-6	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999986694824927	WITHOUT_CLASSIFICATION	1.330517507311726E-6	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999960274285153	WITHOUT_CLASSIFICATION	3.972571484597469E-6	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.999971762639741	WITHOUT_CLASSIFICATION	2.823736025907804E-5	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999875707614009	WITHOUT_CLASSIFICATION	1.2429238599059912E-5	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999875707614009	WITHOUT_CLASSIFICATION	1.2429238599059912E-5	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999986539270416	WITHOUT_CLASSIFICATION	1.3460729584357833E-6	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999890595845435	WITHOUT_CLASSIFICATION	1.0940415456473677E-5	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999998011677226	WITHOUT_CLASSIFICATION	1.988322773610146E-7	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999993942572365	WITHOUT_CLASSIFICATION	6.057427635282327E-7	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999997044241996	WITHOUT_CLASSIFICATION	2.955758004454516E-7	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999639416273268	WITHOUT_CLASSIFICATION	3.6058372673308784E-5	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999970636951784	WITHOUT_CLASSIFICATION	2.936304821656696E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999968158239319	WITHOUT_CLASSIFICATION	3.184176068158212E-6	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999997313708366	WITHOUT_CLASSIFICATION	2.686291633145308E-7	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999986410574109	WITHOUT_CLASSIFICATION	1.358942589149374E-6	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999907747518357	WITHOUT_CLASSIFICATION	9.225248164154056E-6	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999872900415788	WITHOUT_CLASSIFICATION	1.270995842109302E-5	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.999992564790588	WITHOUT_CLASSIFICATION	7.435209412059635E-6	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999978392204244	WITHOUT_CLASSIFICATION	2.160779575654055E-6	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999993114399961	WITHOUT_CLASSIFICATION	6.885600038251309E-7	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999865465989282	WITHOUT_CLASSIFICATION	1.3453401071784086E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.999991710507881	WITHOUT_CLASSIFICATION	8.289492118975334E-6	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999998434850738	WITHOUT_CLASSIFICATION	1.5651492614151024E-7	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999968913146466	WITHOUT_CLASSIFICATION	3.108685353322464E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999967264004299	WITHOUT_CLASSIFICATION	3.2735995700139784E-6	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999898931809329	WITHOUT_CLASSIFICATION	1.0106819067028704E-5	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999790276412646	WITHOUT_CLASSIFICATION	2.097235873547715E-5	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999970873727688	WITHOUT_CLASSIFICATION	2.9126272312741423E-6	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.9998762999269596	WITHOUT_CLASSIFICATION	1.237000730405431E-4	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.99999855730452	WITHOUT_CLASSIFICATION	1.4426954798998073E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999936539045703	WITHOUT_CLASSIFICATION	6.346095429699778E-5	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999976726576824	WITHOUT_CLASSIFICATION	2.327342317542549E-6	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999978436684548	WITHOUT_CLASSIFICATION	2.156331545212534E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999622693588845	WITHOUT_CLASSIFICATION	3.773064111547989E-5	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999884738944356	WITHOUT_CLASSIFICATION	1.1526105564370878E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9992615169101823	WITHOUT_CLASSIFICATION	7.384830898176482E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9999307074960788	WITHOUT_CLASSIFICATION	6.929250392122526E-5	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999999755452997	WITHOUT_CLASSIFICATION	2.445470022011992E-8	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999998756767153	WITHOUT_CLASSIFICATION	1.2432328462710105E-7	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999913317566549	WITHOUT_CLASSIFICATION	8.668243345118288E-6	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999993969981196	WITHOUT_CLASSIFICATION	6.030018805350758E-7	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999896596774562	WITHOUT_CLASSIFICATION	1.0340322543832505E-5	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.99998903646781	WITHOUT_CLASSIFICATION	1.0963532190013604E-5	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999804831772326	WITHOUT_CLASSIFICATION	1.951682276735519E-5	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999784526683242	WITHOUT_CLASSIFICATION	2.154733167581684E-5	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999854107170278	WITHOUT_CLASSIFICATION	1.4589282972087823E-5	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999993144022924	WITHOUT_CLASSIFICATION	6.855977075354329E-7	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999499141263116	WITHOUT_CLASSIFICATION	5.008587368848252E-5	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999896064691083	WITHOUT_CLASSIFICATION	1.0393530891721186E-5	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999962700825256	WITHOUT_CLASSIFICATION	3.729917474319023E-6	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999885390569707	WITHOUT_CLASSIFICATION	1.1460943029252144E-5	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9988389399324867	WITHOUT_CLASSIFICATION	0.001161060067513317	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999898142264653	WITHOUT_CLASSIFICATION	1.0185773534770956E-5	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999996685614633	WITHOUT_CLASSIFICATION	3.314385366566606E-7	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999986683024839	WITHOUT_CLASSIFICATION	1.331697516187006E-6	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972712785141	WITHOUT_CLASSIFICATION	2.7287214858830214E-6	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999980061824879	WITHOUT_CLASSIFICATION	1.9938175122038494E-6	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999992071783113	WITHOUT_CLASSIFICATION	7.928216888378058E-7	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999910555370358	WITHOUT_CLASSIFICATION	8.944462964218761E-6	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999886058519948	WITHOUT_CLASSIFICATION	1.1394148005134578E-5	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999997809689156	WITHOUT_CLASSIFICATION	2.1903108440045302E-7	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9999874467140141	WITHOUT_CLASSIFICATION	1.2553285985990897E-5	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9999915996768055	WITHOUT_CLASSIFICATION	8.40032319450977E-6	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999872845886243	WITHOUT_CLASSIFICATION	1.2715411375738305E-5	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999931372697738	WITHOUT_CLASSIFICATION	6.862730226260462E-6	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999986656965607	WITHOUT_CLASSIFICATION	1.3343034391954047E-6	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999963902724645	WITHOUT_CLASSIFICATION	3.609727535646574E-6	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999691115143037	WITHOUT_CLASSIFICATION	3.0888485696280944E-5	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999978827549811	WITHOUT_CLASSIFICATION	2.11724501885016E-6	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999810454955106	WITHOUT_CLASSIFICATION	1.895450448943645E-5	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999976166479415	WITHOUT_CLASSIFICATION	2.3833520584759235E-6	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.99999415839314	WITHOUT_CLASSIFICATION	5.841606859965447E-6	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999982986890881	WITHOUT_CLASSIFICATION	1.7013109119069904E-6	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999991660985714	WITHOUT_CLASSIFICATION	8.339014284878637E-7	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999988707042042	WITHOUT_CLASSIFICATION	1.1292957957292143E-6	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999991660985714	WITHOUT_CLASSIFICATION	8.339014284878637E-7	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999996882787309	WITHOUT_CLASSIFICATION	3.1172126907654164E-7	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999997257629435	WITHOUT_CLASSIFICATION	2.742370565625432E-7	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999059274712098	WITHOUT_CLASSIFICATION	9.407252879018192E-5	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.999999033940504	WITHOUT_CLASSIFICATION	9.660594959496917E-7	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999997568612444	WITHOUT_CLASSIFICATION	2.431387555392458E-7	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9998077076399252	WITHOUT_CLASSIFICATION	1.9229236007491178E-4	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999970276853012	WITHOUT_CLASSIFICATION	2.9723146987184394E-6	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999945299125349	WITHOUT_CLASSIFICATION	5.470087465128256E-6	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999956237589128	WITHOUT_CLASSIFICATION	4.376241087123807E-6	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999991252006917	WITHOUT_CLASSIFICATION	8.747993084318099E-7	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999948847973441	WITHOUT_CLASSIFICATION	5.115202655866019E-6	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999836798839735	WITHOUT_CLASSIFICATION	1.6320116026510742E-5	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999988388089935	WITHOUT_CLASSIFICATION	1.1611910063911498E-6	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.999996368149313	WITHOUT_CLASSIFICATION	3.6318506870736316E-6	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999572528625595	WITHOUT_CLASSIFICATION	4.274713744037078E-5	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999964482715159	WITHOUT_CLASSIFICATION	3.5517284841067615E-6	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999980545608945	WITHOUT_CLASSIFICATION	1.9454391054754785E-6	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999982139609417	WITHOUT_CLASSIFICATION	1.7860390582649959E-6	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.999999710296639	WITHOUT_CLASSIFICATION	2.897033609429955E-7	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9999961463637674	WITHOUT_CLASSIFICATION	3.853636232642144E-6	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999983894449231	WITHOUT_CLASSIFICATION	1.6105550768661886E-6	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9999968926082894	WITHOUT_CLASSIFICATION	3.107391710613388E-6	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999880410873956	WITHOUT_CLASSIFICATION	1.195891260455153E-5	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999994721625655	WITHOUT_CLASSIFICATION	5.278374344463505E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999982524598875	WITHOUT_CLASSIFICATION	1.747540112583811E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999995825560699	WITHOUT_CLASSIFICATION	4.1744393009698625E-7	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999663231213174	WITHOUT_CLASSIFICATION	3.3676878682547656E-5	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.999971910926508	WITHOUT_CLASSIFICATION	2.808907349213351E-5	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.999992988657224	WITHOUT_CLASSIFICATION	7.0113427759718474E-6	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999977531462105	WITHOUT_CLASSIFICATION	2.246853789457568E-6	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9999853103975161	WITHOUT_CLASSIFICATION	1.4689602483790814E-5	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999830590129098	WITHOUT_CLASSIFICATION	1.6940987090184093E-5	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999992317003272	WITHOUT_CLASSIFICATION	7.682996726460522E-7	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999684222667143	WITHOUT_CLASSIFICATION	3.1577733285635384E-5	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.999986857852975	WITHOUT_CLASSIFICATION	1.3142147024849673E-5	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9999584761674193	WITHOUT_CLASSIFICATION	4.1523832580749124E-5	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999874283549166	WITHOUT_CLASSIFICATION	1.2571645083348579E-5	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999891501823666	WITHOUT_CLASSIFICATION	1.0849817633410905E-5	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.9997077657606492	WITHOUT_CLASSIFICATION	2.922342393507907E-4	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999983685507106	WITHOUT_CLASSIFICATION	1.6314492895203649E-6	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.99996114903779	WITHOUT_CLASSIFICATION	3.885096221007663E-5	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9999908219230794	WITHOUT_CLASSIFICATION	9.178076920642325E-6	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999915673944433	WITHOUT_CLASSIFICATION	8.4326055567675E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999995825560699	WITHOUT_CLASSIFICATION	4.1744393009698625E-7	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9992948185620701	WITHOUT_CLASSIFICATION	7.051814379298739E-4	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999967846310971	WITHOUT_CLASSIFICATION	3.215368902832043E-6	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9999372006075067	WITHOUT_CLASSIFICATION	6.279939249339077E-5	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999933113820774	WITHOUT_CLASSIFICATION	6.688617922653416E-6	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999319342949232	WITHOUT_CLASSIFICATION	6.806570507686512E-5	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999737024677338	WITHOUT_CLASSIFICATION	2.6297532266244564E-5	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999939899062472	WITHOUT_CLASSIFICATION	6.010093752783126E-6	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999985272811115	WITHOUT_CLASSIFICATION	1.4727188885331774E-6	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999983929616452	WITHOUT_CLASSIFICATION	1.6070383548162014E-6	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.999999478128392	WITHOUT_CLASSIFICATION	5.218716080955118E-7	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9999955809994836	WITHOUT_CLASSIFICATION	4.419000516381556E-6	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999225606979864	WITHOUT_CLASSIFICATION	7.743930201365545E-5	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9999808645899555	WITHOUT_CLASSIFICATION	1.9135410044453994E-5	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9999482858034613	WITHOUT_CLASSIFICATION	5.1714196538627265E-5	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999675601995605	WITHOUT_CLASSIFICATION	3.24398004395324E-5	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999995641416014	WITHOUT_CLASSIFICATION	4.35858398577648E-7	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999749627851322	WITHOUT_CLASSIFICATION	2.50372148678602E-5	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999985681382193	WITHOUT_CLASSIFICATION	1.4318617807586369E-6	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999997240496001	WITHOUT_CLASSIFICATION	2.759503998251493E-7	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9992948185620701	WITHOUT_CLASSIFICATION	7.051814379298739E-4	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9999769062561569	WITHOUT_CLASSIFICATION	2.3093743843145052E-5	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999987869816337	WITHOUT_CLASSIFICATION	1.2130183663202473E-6	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.999980451635136	WITHOUT_CLASSIFICATION	1.9548364863913E-5	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999908915144109	WITHOUT_CLASSIFICATION	9.1084855890085E-6	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9999987942337465	WITHOUT_CLASSIFICATION	1.2057662534948257E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999056904494824	WITHOUT_CLASSIFICATION	9.430955051758301E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999056904494824	WITHOUT_CLASSIFICATION	9.430955051758301E-5	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999922948677619	WITHOUT_CLASSIFICATION	7.705132238017028E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999056904494824	WITHOUT_CLASSIFICATION	9.430955051758301E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999056904494824	WITHOUT_CLASSIFICATION	9.430955051758301E-5	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9998399750746376	WITHOUT_CLASSIFICATION	1.6002492536238365E-4	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999945148677108	WITHOUT_CLASSIFICATION	5.485132289055664E-6	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999984899418082	WITHOUT_CLASSIFICATION	1.510058191853568E-6	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999973088330305	WITHOUT_CLASSIFICATION	2.6911669695817097E-6	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999543238916642	WITHOUT_CLASSIFICATION	4.567610833584482E-5	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.999972129148378	WITHOUT_CLASSIFICATION	2.787085162208E-5	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9999747565748305	WITHOUT_CLASSIFICATION	2.524342516953557E-5	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999608042938185	WITHOUT_CLASSIFICATION	3.919570618155243E-5	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9998985358491055	WITHOUT_CLASSIFICATION	1.0146415089453605E-4	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9998887691189017	WITHOUT_CLASSIFICATION	1.1123088109835822E-4	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9999903420685868	WITHOUT_CLASSIFICATION	9.657931413140651E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999682408135918	WITHOUT_CLASSIFICATION	3.175918640816382E-5	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999913787678403	WITHOUT_CLASSIFICATION	8.621232159840949E-6	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.999947169818307	WITHOUT_CLASSIFICATION	5.2830181693012815E-5	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999784087933417	WITHOUT_CLASSIFICATION	2.1591206658414113E-5	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999347367332004	WITHOUT_CLASSIFICATION	6.526326679963405E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999749092363244	WITHOUT_CLASSIFICATION	2.509076367565261E-5	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999726100025187	WITHOUT_CLASSIFICATION	2.738999748132843E-5	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9998672909080331	WITHOUT_CLASSIFICATION	1.3270909196696958E-4	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9999331841609503	WITHOUT_CLASSIFICATION	6.681583904966224E-5	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999829724037257	WITHOUT_CLASSIFICATION	1.702759627435265E-5	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999704778227129	WITHOUT_CLASSIFICATION	2.9522177287208666E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999749092363244	WITHOUT_CLASSIFICATION	2.509076367565261E-5	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999663231213174	WITHOUT_CLASSIFICATION	3.3676878682547656E-5	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999705777458149	WITHOUT_CLASSIFICATION	2.9422254185147523E-5	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999965884371129	WITHOUT_CLASSIFICATION	3.411562887026714E-6	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999988867534008	WITHOUT_CLASSIFICATION	1.1132465992234002E-6	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.999980031825306	WITHOUT_CLASSIFICATION	1.9968174693876074E-5	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999977522522268	WITHOUT_CLASSIFICATION	2.2477477732772674E-6	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.9999902230177163	WITHOUT_CLASSIFICATION	9.776982283699924E-6	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999978365110473	WITHOUT_CLASSIFICATION	2.163488952611463E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999710765641855	WITHOUT_CLASSIFICATION	2.892343581455725E-5	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.999990112590234	WITHOUT_CLASSIFICATION	9.88740976610875E-6	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9999815064182324	WITHOUT_CLASSIFICATION	1.849358176769512E-5	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.99999958265459	WITHOUT_CLASSIFICATION	4.17345410120144E-7	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999981841556085	WITHOUT_CLASSIFICATION	1.8158443915654758E-6	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999990257264604	WITHOUT_CLASSIFICATION	9.742735395499024E-7	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9999981235219367	WITHOUT_CLASSIFICATION	1.8764780633322856E-6	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.999999736975182	WITHOUT_CLASSIFICATION	2.6302481805942946E-7	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999981823815665	WITHOUT_CLASSIFICATION	1.817618433519569E-6	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999972782740507	WITHOUT_CLASSIFICATION	2.7217259493677234E-6	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999993996101851	WITHOUT_CLASSIFICATION	6.003898148115512E-7	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999993209802671	WITHOUT_CLASSIFICATION	6.790197328808168E-7	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9999955949943817	WITHOUT_CLASSIFICATION	4.405005618259451E-6	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999954765697633	WITHOUT_CLASSIFICATION	4.523430236763123E-6	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999992966943279	WITHOUT_CLASSIFICATION	7.033056721544859E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999710765641855	WITHOUT_CLASSIFICATION	2.892343581455725E-5	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999676392972969	WITHOUT_CLASSIFICATION	3.236070270310288E-5	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9999540173356514	WITHOUT_CLASSIFICATION	4.5982664348673894E-5	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9999775413211967	WITHOUT_CLASSIFICATION	2.2458678803343735E-5	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999962026174416	WITHOUT_CLASSIFICATION	3.797382558299794E-6	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999956920066094	WITHOUT_CLASSIFICATION	4.307993390588735E-6	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9999711995033199	WITHOUT_CLASSIFICATION	2.880049668018401E-5	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.999968610059417	WITHOUT_CLASSIFICATION	3.1389940582936956E-5	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999490180952405	WITHOUT_CLASSIFICATION	5.098190475939435E-5	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.9999861693063026	WITHOUT_CLASSIFICATION	1.3830693697447673E-5	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9997614936253695	WITHOUT_CLASSIFICATION	2.385063746305498E-4	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999367516502804	WITHOUT_CLASSIFICATION	6.324834971967438E-5	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999999181185455	WITHOUT_CLASSIFICATION	8.188145450178668E-8	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999775471065981	WITHOUT_CLASSIFICATION	2.245289340185665E-5	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999979475160228	WITHOUT_CLASSIFICATION	2.0524839772234143E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998307631387462	WITHOUT_CLASSIFICATION	1.6923686125374502E-4	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999630916195836	WITHOUT_CLASSIFICATION	3.6908380416317465E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.999992207924569	WITHOUT_CLASSIFICATION	7.792075430986734E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999367516502804	WITHOUT_CLASSIFICATION	6.324834971967438E-5	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.99999911991147	WITHOUT_CLASSIFICATION	8.800885300704752E-7	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9999962320157412	WITHOUT_CLASSIFICATION	3.7679842588772005E-6	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999878511197484	WITHOUT_CLASSIFICATION	1.2148880251505988E-5	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9998341891930159	WITHOUT_CLASSIFICATION	1.6581080698415475E-4	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999898337526378	WITHOUT_CLASSIFICATION	1.0166247362042944E-5	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999972513032198	WITHOUT_CLASSIFICATION	2.748696780269661E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998307631387462	WITHOUT_CLASSIFICATION	1.6923686125374502E-4	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.99999878942528	WITHOUT_CLASSIFICATION	1.2105747200148598E-6	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935574885165	WITHOUT_CLASSIFICATION	6.44251148352283E-6	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971564258666	WITHOUT_CLASSIFICATION	2.8435741333585684E-6	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955978121108	WITHOUT_CLASSIFICATION	4.402187889230181E-6	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972904250696	WITHOUT_CLASSIFICATION	2.709574930364859E-6	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990393589829	WITHOUT_CLASSIFICATION	9.606410171475267E-7	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999952551540188	WITHOUT_CLASSIFICATION	4.7448459811830325E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999952551540188	WITHOUT_CLASSIFICATION	4.7448459811830325E-6	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999931045433391	WITHOUT_CLASSIFICATION	6.8954566608491414E-6	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999850138998638	WITHOUT_CLASSIFICATION	1.4986100136199293E-5	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999919641160653	WITHOUT_CLASSIFICATION	8.035883934668328E-6	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9999954307025457	WITHOUT_CLASSIFICATION	4.569297454207419E-6	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.999997493617245	WITHOUT_CLASSIFICATION	2.5063827551065615E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999947584769787	WITHOUT_CLASSIFICATION	5.24152302135619E-6	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999616584102488	WITHOUT_CLASSIFICATION	3.834158975116179E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976255865133	WITHOUT_CLASSIFICATION	2.374413486789224E-6	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999849795592957	WITHOUT_CLASSIFICATION	1.5020440704376116E-5	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999958461548222	WITHOUT_CLASSIFICATION	4.15384517781806E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999947584769787	WITHOUT_CLASSIFICATION	5.24152302135619E-6	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999616584102488	WITHOUT_CLASSIFICATION	3.834158975116179E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976255865133	WITHOUT_CLASSIFICATION	2.374413486789224E-6	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.999986408075393	WITHOUT_CLASSIFICATION	1.359192460701927E-5	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9999271100732643	WITHOUT_CLASSIFICATION	7.28899267356903E-5	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999994996216642	WITHOUT_CLASSIFICATION	5.003783357832506E-7	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999885625817407	WITHOUT_CLASSIFICATION	1.1437418259136626E-5	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.999999854513979	WITHOUT_CLASSIFICATION	1.4548602100215541E-7	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.999999663854847	WITHOUT_CLASSIFICATION	3.361451530356512E-7	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9999666212055549	WITHOUT_CLASSIFICATION	3.337879444507069E-5	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.9999947058494988	WITHOUT_CLASSIFICATION	5.294150501281404E-6	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9999110773397333	WITHOUT_CLASSIFICATION	8.892266026670062E-5	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999954075986116	WITHOUT_CLASSIFICATION	4.592401388292724E-6	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999971532511722	WITHOUT_CLASSIFICATION	2.84674882766588E-6	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999983008823433	WITHOUT_CLASSIFICATION	1.6991176566805773E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.999970226226492	WITHOUT_CLASSIFICATION	2.977377350800307E-5	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999985946874675	WITHOUT_CLASSIFICATION	1.405312532407374E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999989076167094	WITHOUT_CLASSIFICATION	1.0923832906051301E-6	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999865340949622	WITHOUT_CLASSIFICATION	1.3465905037741618E-5	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9994488745510789	WITHOUT_CLASSIFICATION	5.511254489211529E-4	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998525547889766	WITHOUT_CLASSIFICATION	1.4744521102344946E-4	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999988657379487	WITHOUT_CLASSIFICATION	1.1342620513437702E-6	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999931102829237	WITHOUT_CLASSIFICATION	6.889717076318169E-6	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999984698880902	WITHOUT_CLASSIFICATION	1.530111909830925E-6	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999996864772861	WITHOUT_CLASSIFICATION	3.1352271390942255E-7	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999840419519725	WITHOUT_CLASSIFICATION	1.595804802738989E-5	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999986222111921	WITHOUT_CLASSIFICATION	1.3777888078904372E-6	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999999002018882	WITHOUT_CLASSIFICATION	9.979811174752698E-8	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9988653877557888	WITHOUT_CLASSIFICATION	0.0011346122442111837	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999932465190259	WITHOUT_CLASSIFICATION	6.7534809740161195E-6	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999929653777617	WITHOUT_CLASSIFICATION	7.034622238255034E-6	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999821578990918	WITHOUT_CLASSIFICATION	1.7842100908177938E-5	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999897748428841	WITHOUT_CLASSIFICATION	1.0225157115847547E-5	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999853584029353	WITHOUT_CLASSIFICATION	1.4641597064698315E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999901691015619	WITHOUT_CLASSIFICATION	9.830898438102439E-6	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999901691015619	WITHOUT_CLASSIFICATION	9.830898438102439E-6	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999909093640075	WITHOUT_CLASSIFICATION	9.09063599259251E-6	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999999760212898	WITHOUT_CLASSIFICATION	2.397871033600962E-8	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999973604551013	WITHOUT_CLASSIFICATION	2.639544898704006E-6	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995476438827032	WITHOUT_CLASSIFICATION	4.5235611729669737E-4	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999978131862561	WITHOUT_CLASSIFICATION	2.186813743749092E-6	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9999888265416572	WITHOUT_CLASSIFICATION	1.1173458342739411E-5	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9999316077369313	WITHOUT_CLASSIFICATION	6.839226306856416E-5	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999965135129738	WITHOUT_CLASSIFICATION	3.4864870262224886E-6	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999654279682608	WITHOUT_CLASSIFICATION	3.457203173922158E-5	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999974913083086	WITHOUT_CLASSIFICATION	2.5086916914970223E-6	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984533864475	WITHOUT_CLASSIFICATION	1.5466135524710532E-6	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980484730056	WITHOUT_CLASSIFICATION	1.9515269943732067E-6	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976879389878	WITHOUT_CLASSIFICATION	2.312061012181394E-6	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998767903444	WITHOUT_CLASSIFICATION	1.232096555983844E-6	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999974778789849	WITHOUT_CLASSIFICATION	2.522121015088669E-6	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999968492858706	WITHOUT_CLASSIFICATION	3.1507141292630724E-6	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994331439545	WITHOUT_CLASSIFICATION	5.668560456137909E-7	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992702559342	WITHOUT_CLASSIFICATION	7.297440659263458E-7	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988558966594	WITHOUT_CLASSIFICATION	1.144103340680235E-6	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976959492485	WITHOUT_CLASSIFICATION	2.3040507515430136E-6	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999915535743698	WITHOUT_CLASSIFICATION	8.446425630292203E-6	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.999964251129216	WITHOUT_CLASSIFICATION	3.574887078386778E-5	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999892249202262	WITHOUT_CLASSIFICATION	1.0775079773747972E-5	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999943187310105	WITHOUT_CLASSIFICATION	5.681268989564987E-6	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999743322663168	WITHOUT_CLASSIFICATION	2.5667733683139467E-5	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999985990539265	WITHOUT_CLASSIFICATION	1.4009460734372102E-6	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999974529099238	WITHOUT_CLASSIFICATION	2.5470900761477502E-6	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9999985892332877	WITHOUT_CLASSIFICATION	1.4107667123423545E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999892249202262	WITHOUT_CLASSIFICATION	1.0775079773747972E-5	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999892249202262	WITHOUT_CLASSIFICATION	1.0775079773747972E-5	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9999918148690935	WITHOUT_CLASSIFICATION	8.185130906591148E-6	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999997539193936	WITHOUT_CLASSIFICATION	2.4608060643601865E-7	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999956905241832	WITHOUT_CLASSIFICATION	4.309475816721246E-6	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999982863924026	WITHOUT_CLASSIFICATION	1.7136075974186044E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999903531644234	WITHOUT_CLASSIFICATION	9.646835576583328E-6	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999931102829237	WITHOUT_CLASSIFICATION	6.889717076318169E-6	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999092584607446	WITHOUT_CLASSIFICATION	9.074153925538166E-5	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999965294690735	WITHOUT_CLASSIFICATION	3.470530926464804E-6	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999992511699796	WITHOUT_CLASSIFICATION	7.488300202838366E-7	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991177835371	WITHOUT_CLASSIFICATION	8.822164629876688E-7	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999993100064121	WITHOUT_CLASSIFICATION	6.899935878728704E-7	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999973594424251	WITHOUT_CLASSIFICATION	2.6405575748895437E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9998982404956385	WITHOUT_CLASSIFICATION	1.0175950436149811E-4	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9998982404956385	WITHOUT_CLASSIFICATION	1.0175950436149811E-4	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999162643266385	WITHOUT_CLASSIFICATION	8.373567336161808E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999162643266385	WITHOUT_CLASSIFICATION	8.373567336161808E-5	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999981791626539	WITHOUT_CLASSIFICATION	1.8208373461367939E-6	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999940187700023	WITHOUT_CLASSIFICATION	5.9812299978181185E-6	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999953136677812	WITHOUT_CLASSIFICATION	4.686332218800334E-6	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979920532326	WITHOUT_CLASSIFICATION	2.0079467674000344E-6	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.999999296537319	WITHOUT_CLASSIFICATION	7.034626809192224E-7	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999991485214139	WITHOUT_CLASSIFICATION	8.514785859540726E-7	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999913942651891	WITHOUT_CLASSIFICATION	8.605734810810994E-6	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999967227160628	WITHOUT_CLASSIFICATION	3.277283937261196E-6	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.999945826692287	WITHOUT_CLASSIFICATION	5.417330771291783E-5	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999960185435149	WITHOUT_CLASSIFICATION	3.981456485039672E-6	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999904004807076	WITHOUT_CLASSIFICATION	9.599519292433702E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997378616382003	WITHOUT_CLASSIFICATION	2.621383617996344E-4	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999951773604684	WITHOUT_CLASSIFICATION	4.822639531631875E-6	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999964846409323	WITHOUT_CLASSIFICATION	3.515359067762525E-6	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.999990676785664	WITHOUT_CLASSIFICATION	9.323214336073116E-6	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.9998825067165926	WITHOUT_CLASSIFICATION	1.1749328340728304E-4	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999691783432062	WITHOUT_CLASSIFICATION	3.082165679379464E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999691783432062	WITHOUT_CLASSIFICATION	3.082165679379464E-5	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999998800938226	WITHOUT_CLASSIFICATION	1.199061774058337E-7	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9999942862120532	WITHOUT_CLASSIFICATION	5.713787946771354E-6	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999713521970192	WITHOUT_CLASSIFICATION	2.8647802980782634E-5	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999066645061634	WITHOUT_CLASSIFICATION	9.333549383654994E-5	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985664732338	WITHOUT_CLASSIFICATION	1.433526766218395E-6	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999982489843688	WITHOUT_CLASSIFICATION	1.751015631140693E-6	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999979520816455	WITHOUT_CLASSIFICATION	2.0479183544774447E-6	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999967655855375	WITHOUT_CLASSIFICATION	3.234414462611933E-6	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999915769190311	WITHOUT_CLASSIFICATION	8.423080968908174E-6	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999974884063932	WITHOUT_CLASSIFICATION	2.5115936067620015E-6	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999892942546005	WITHOUT_CLASSIFICATION	1.0705745399448112E-5	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999778806291366	WITHOUT_CLASSIFICATION	2.211937086326811E-5	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999941278213588	WITHOUT_CLASSIFICATION	5.872178641310849E-6	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999982532750461	WITHOUT_CLASSIFICATION	1.7467249538189046E-6	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999993766725305	WITHOUT_CLASSIFICATION	6.233274695351559E-7	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999897419076619	WITHOUT_CLASSIFICATION	1.0258092338074342E-5	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.999999685646769	WITHOUT_CLASSIFICATION	3.143532310006486E-7	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.999989999473985	WITHOUT_CLASSIFICATION	1.0000526014955142E-5	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999897546889442	WITHOUT_CLASSIFICATION	1.0245311055819009E-5	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999908231935332	WITHOUT_CLASSIFICATION	9.176806466867828E-6	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999984025413454	WITHOUT_CLASSIFICATION	1.597458654523937E-6	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999993803793997	WITHOUT_CLASSIFICATION	6.196206002805049E-7	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999968755577893	WITHOUT_CLASSIFICATION	3.124442210819897E-6	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999994084928616	WITHOUT_CLASSIFICATION	5.915071383797996E-7	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999962293901066	WITHOUT_CLASSIFICATION	3.770609893366307E-6	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999833515206542	WITHOUT_CLASSIFICATION	1.6648479345856963E-5	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.999997545645719	WITHOUT_CLASSIFICATION	2.4543542811537024E-6	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9999706927020955	WITHOUT_CLASSIFICATION	2.930729790453171E-5	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999886505564793	WITHOUT_CLASSIFICATION	1.1349443520598917E-5	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999780052870975	WITHOUT_CLASSIFICATION	2.1994712902452583E-5	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999994570040446	WITHOUT_CLASSIFICATION	5.429959553660612E-7	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999941245791213	WITHOUT_CLASSIFICATION	5.875420878684221E-6	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999761993476146	WITHOUT_CLASSIFICATION	2.3800652385476315E-5	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9980190968320035	WITHOUT_CLASSIFICATION	0.0019809031679964327	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999952906376839	WITHOUT_CLASSIFICATION	4.709362316063423E-6	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9999403402661331	WITHOUT_CLASSIFICATION	5.9659733867026575E-5	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999996469375082	WITHOUT_CLASSIFICATION	3.5306249178551606E-7	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999960163353572	WITHOUT_CLASSIFICATION	3.98366464277473E-6	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999886556032022	WITHOUT_CLASSIFICATION	1.1344396797871262E-5	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.9999939735532426	WITHOUT_CLASSIFICATION	6.026446757363087E-6	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999999833559842	WITHOUT_CLASSIFICATION	1.6644015857989072E-8	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.999999531357189	WITHOUT_CLASSIFICATION	4.6864281103290567E-7	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.999998517154879	WITHOUT_CLASSIFICATION	1.482845120954827E-6	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.999999425844121	WITHOUT_CLASSIFICATION	5.741558789126949E-7	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999972835725519	WITHOUT_CLASSIFICATION	2.7164274481114657E-6	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999681429581665	WITHOUT_CLASSIFICATION	3.185704183349059E-5	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999774762920917	WITHOUT_CLASSIFICATION	2.2523707908364E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999248287322108	WITHOUT_CLASSIFICATION	7.517126778918097E-5	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999866453623958	WITHOUT_CLASSIFICATION	1.3354637604258916E-5	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9999807080845565	WITHOUT_CLASSIFICATION	1.9291915443465924E-5	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999903071517575	WITHOUT_CLASSIFICATION	9.692848242514455E-6	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9997978612367038	WITHOUT_CLASSIFICATION	2.0213876329621278E-4	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999876044064215	WITHOUT_CLASSIFICATION	1.23955935783935E-5	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999655288585403	WITHOUT_CLASSIFICATION	3.447114145976366E-5	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9998265439101692	WITHOUT_CLASSIFICATION	1.7345608983084155E-4	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.999996504324573	WITHOUT_CLASSIFICATION	3.4956754269404927E-6	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9998455762192454	WITHOUT_CLASSIFICATION	1.5442378075461026E-4	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9996094635799482	WITHOUT_CLASSIFICATION	3.9053642005174575E-4	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999920064032917	WITHOUT_CLASSIFICATION	7.993596708357284E-6	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9998248227246334	WITHOUT_CLASSIFICATION	1.751772753666213E-4	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999931197829046	WITHOUT_CLASSIFICATION	6.880217095328496E-6	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999926880964937	WITHOUT_CLASSIFICATION	7.311903506372742E-6	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999990091152149	WITHOUT_CLASSIFICATION	9.908847851014433E-7	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999913627864011	WITHOUT_CLASSIFICATION	8.637213598855051E-6	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.99999960114029	WITHOUT_CLASSIFICATION	3.988597100096819E-7	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999969941632274	WITHOUT_CLASSIFICATION	3.0058367724701563E-6	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999999746039478	WITHOUT_CLASSIFICATION	2.539605219496486E-8	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999953358722463	WITHOUT_CLASSIFICATION	4.664127753675229E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997188804457346	WITHOUT_CLASSIFICATION	2.8111955426535424E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997188804457346	WITHOUT_CLASSIFICATION	2.8111955426535424E-4	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999836709225546	WITHOUT_CLASSIFICATION	1.6329077445331248E-5	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9999985172144461	WITHOUT_CLASSIFICATION	1.4827855538546514E-6	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999986210423797	WITHOUT_CLASSIFICATION	1.378957620341066E-6	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999960195050817	WITHOUT_CLASSIFICATION	3.9804949183769236E-6	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999923934860017	WITHOUT_CLASSIFICATION	7.606513998221192E-6	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999895627592468	WITHOUT_CLASSIFICATION	1.04372407533001E-5	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999403653952801	WITHOUT_CLASSIFICATION	5.963460471991586E-5	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999996388519754	WITHOUT_CLASSIFICATION	3.6114802458408846E-7	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9999886898225185	WITHOUT_CLASSIFICATION	1.1310177481449225E-5	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999995462507874	WITHOUT_CLASSIFICATION	4.537492126559889E-7	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999850414266138	WITHOUT_CLASSIFICATION	1.495857338625506E-5	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999988568508861	WITHOUT_CLASSIFICATION	1.1431491138274346E-6	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.999957380307485	WITHOUT_CLASSIFICATION	4.261969251500127E-5	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999963145091675	WITHOUT_CLASSIFICATION	3.685490832546462E-6	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999964172589527	WITHOUT_CLASSIFICATION	3.5827410471966094E-6	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.999973894682272	WITHOUT_CLASSIFICATION	2.610531772791835E-5	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999881760291158	WITHOUT_CLASSIFICATION	1.1823970884220501E-5	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999959349023554	WITHOUT_CLASSIFICATION	4.065097644619045E-6	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999996838711438	WITHOUT_CLASSIFICATION	3.161288562486997E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999991353865052	WITHOUT_CLASSIFICATION	8.646134948282332E-7	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999789400153928	WITHOUT_CLASSIFICATION	2.1059984607200743E-5	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999720306523024	WITHOUT_CLASSIFICATION	2.7969347697485335E-5	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9991438953391732	WITHOUT_CLASSIFICATION	8.561046608267296E-4	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9999965179257712	WITHOUT_CLASSIFICATION	3.4820742289371918E-6	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9998736562804649	WITHOUT_CLASSIFICATION	1.2634371953513339E-4	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9999924342473163	WITHOUT_CLASSIFICATION	7.565752683704368E-6	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999880815354358	WITHOUT_CLASSIFICATION	1.191846456418413E-5	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999798935574281	WITHOUT_CLASSIFICATION	2.0106442571890902E-5	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.999999123192746	WITHOUT_CLASSIFICATION	8.768072540655293E-7	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999987872156606	WITHOUT_CLASSIFICATION	1.2127843394625517E-6	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999982190487765	WITHOUT_CLASSIFICATION	1.7809512235959918E-6	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.999995277146837	WITHOUT_CLASSIFICATION	4.7228531629966345E-6	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999970878127376	WITHOUT_CLASSIFICATION	2.9121872625137314E-6	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.9999278464806387	WITHOUT_CLASSIFICATION	7.215351936128077E-5	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.999984428597957	WITHOUT_CLASSIFICATION	1.5571402043071632E-5	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.999984428597957	WITHOUT_CLASSIFICATION	1.5571402043071632E-5	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999896857645744	WITHOUT_CLASSIFICATION	1.0314235425680308E-5	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9999737943641445	WITHOUT_CLASSIFICATION	2.620563585548671E-5	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.999998547591246	WITHOUT_CLASSIFICATION	1.4524087540970338E-6	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999860672255252	WITHOUT_CLASSIFICATION	1.3932774474886955E-5	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999974427153626	WITHOUT_CLASSIFICATION	2.557284637366937E-6	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999954412615581	WITHOUT_CLASSIFICATION	4.558738441857582E-6	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999907847702981	WITHOUT_CLASSIFICATION	9.215229701815737E-6	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999996047584817	WITHOUT_CLASSIFICATION	3.952415182658428E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9999746954097642	WITHOUT_CLASSIFICATION	2.5304590235761166E-5	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999996627593584	WITHOUT_CLASSIFICATION	3.3724064169939253E-7	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999996050215495	WITHOUT_CLASSIFICATION	3.949784505001221E-7	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9999986609258983	WITHOUT_CLASSIFICATION	1.3390741017503534E-6	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999967664249546	WITHOUT_CLASSIFICATION	3.233575045453968E-6	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999982441156913	WITHOUT_CLASSIFICATION	1.7558843087863753E-6	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999990242408108	WITHOUT_CLASSIFICATION	9.757591892033355E-7	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999945169956671	WITHOUT_CLASSIFICATION	5.483004332881424E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999945169956671	WITHOUT_CLASSIFICATION	5.483004332881424E-6	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999951159012042	WITHOUT_CLASSIFICATION	4.884098795756423E-6	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999980961097419	WITHOUT_CLASSIFICATION	1.903890258049687E-6	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999997842075741	WITHOUT_CLASSIFICATION	2.15792425933759E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999998103509802	WITHOUT_CLASSIFICATION	1.8964901987165786E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997378616382003	WITHOUT_CLASSIFICATION	2.621383617996344E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997650389374797	WITHOUT_CLASSIFICATION	2.349610625203812E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999974440881372	WITHOUT_CLASSIFICATION	2.555911862835811E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999902534317946	WITHOUT_CLASSIFICATION	9.746568205342816E-6	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999902534317946	WITHOUT_CLASSIFICATION	9.746568205342816E-6	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999938332183337	WITHOUT_CLASSIFICATION	6.166781666342345E-6	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999995785467997	WITHOUT_CLASSIFICATION	4.2145320032835314E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999966600888838	WITHOUT_CLASSIFICATION	3.339911116260851E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999992533995546	WITHOUT_CLASSIFICATION	7.466004454004146E-7	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9999907408686329	WITHOUT_CLASSIFICATION	9.259131367079011E-6	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998078859371026	WITHOUT_CLASSIFICATION	1.9211406289734536E-4	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999986094600712	WITHOUT_CLASSIFICATION	1.3905399287370443E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999990390748524	WITHOUT_CLASSIFICATION	9.6092514755828E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999943203908754	WITHOUT_CLASSIFICATION	5.6796091245347135E-6	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9999876983396282	WITHOUT_CLASSIFICATION	1.2301660371942879E-5	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999942177593605	WITHOUT_CLASSIFICATION	5.782240639500785E-6	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999608015592325	WITHOUT_CLASSIFICATION	3.919844076746242E-5	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999992045124817	WITHOUT_CLASSIFICATION	7.954875183460559E-7	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999911700550828	WITHOUT_CLASSIFICATION	8.82994491725326E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999622693588845	WITHOUT_CLASSIFICATION	3.773064111547989E-5	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.999999042876326	WITHOUT_CLASSIFICATION	9.571236740094838E-7	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999953191782971	WITHOUT_CLASSIFICATION	4.6808217028166044E-6	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999188593612756	WITHOUT_CLASSIFICATION	8.114063872447256E-5	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999940795945227	WITHOUT_CLASSIFICATION	5.920405477321271E-6	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999961701500117	WITHOUT_CLASSIFICATION	3.829849988235585E-6	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999938956873492	WITHOUT_CLASSIFICATION	6.1043126508300145E-6	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999873560783765	WITHOUT_CLASSIFICATION	1.2643921623363488E-5	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999971539343339	WITHOUT_CLASSIFICATION	2.846065666152918E-6	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999978825947784	WITHOUT_CLASSIFICATION	2.1174052217037485E-6	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999945599783002	WITHOUT_CLASSIFICATION	5.440021699757722E-6	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999940501485197	WITHOUT_CLASSIFICATION	5.949851480211262E-6	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999980879327208	WITHOUT_CLASSIFICATION	1.912067279139872E-6	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999949551493408	WITHOUT_CLASSIFICATION	5.0448506591191145E-6	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999970181697948	WITHOUT_CLASSIFICATION	2.9818302052140293E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999996147583649	WITHOUT_CLASSIFICATION	3.8524163513252125E-7	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9999672833274907	WITHOUT_CLASSIFICATION	3.271667250934885E-5	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9999339934655717	WITHOUT_CLASSIFICATION	6.600653442831301E-5	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999989855740561	WITHOUT_CLASSIFICATION	1.0144259439520553E-6	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999982784908512	WITHOUT_CLASSIFICATION	1.7215091488420226E-6	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999909315848815	WITHOUT_CLASSIFICATION	9.068415118466572E-6	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999309628891347	WITHOUT_CLASSIFICATION	6.903711086528894E-5	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.9999264152044264	WITHOUT_CLASSIFICATION	7.358479557354829E-5	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.9999852103799015	WITHOUT_CLASSIFICATION	1.4789620098538219E-5	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999775943726867	WITHOUT_CLASSIFICATION	2.240562731330479E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.999941301612113	WITHOUT_CLASSIFICATION	5.869838788711483E-5	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999993181984312	WITHOUT_CLASSIFICATION	6.818015687303863E-7	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.999992661090121	WITHOUT_CLASSIFICATION	7.3389098791404805E-6	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999785902178796	WITHOUT_CLASSIFICATION	2.1409782120402176E-5	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999884297804926	WITHOUT_CLASSIFICATION	1.1570219507287697E-5	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.999998496409813	WITHOUT_CLASSIFICATION	1.5035901871092092E-6	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.999992471798131	WITHOUT_CLASSIFICATION	7.528201868941143E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999775943726867	WITHOUT_CLASSIFICATION	2.240562731330479E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.999941301612113	WITHOUT_CLASSIFICATION	5.869838788711483E-5	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999992740982862	WITHOUT_CLASSIFICATION	7.259017139051948E-7	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9996177198577398	WITHOUT_CLASSIFICATION	3.82280142260219E-4	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999802973269502	WITHOUT_CLASSIFICATION	1.9702673049879578E-5	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999988223587091	WITHOUT_CLASSIFICATION	1.1776412909181403E-6	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999942419656196	WITHOUT_CLASSIFICATION	5.758034380379921E-6	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.999999526702869	WITHOUT_CLASSIFICATION	4.732971310723685E-7	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999800862322789	WITHOUT_CLASSIFICATION	1.9913767721173072E-5	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9999410049617111	WITHOUT_CLASSIFICATION	5.8995038288833686E-5	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.999979737886135	WITHOUT_CLASSIFICATION	2.0262113864934666E-5	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999910551769586	WITHOUT_CLASSIFICATION	8.944823041286606E-6	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999996575261588	WITHOUT_CLASSIFICATION	3.424738412296186E-7	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999910551769586	WITHOUT_CLASSIFICATION	8.944823041286606E-6	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999998005188303	WITHOUT_CLASSIFICATION	1.9948116980358602E-7	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999545168851302	WITHOUT_CLASSIFICATION	4.5483114869922905E-5	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999998247487637	WITHOUT_CLASSIFICATION	1.7525123625809938E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999863511674606	WITHOUT_CLASSIFICATION	1.3648832539479333E-5	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999836978711106	WITHOUT_CLASSIFICATION	1.6302128889429617E-5	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9994827822400927	WITHOUT_CLASSIFICATION	5.172177599073024E-4	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9994827822400927	WITHOUT_CLASSIFICATION	5.172177599073024E-4	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999991175124603	WITHOUT_CLASSIFICATION	8.824875397762344E-7	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9999988653703913	WITHOUT_CLASSIFICATION	1.1346296087265132E-6	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999979706223218	WITHOUT_CLASSIFICATION	2.0293776782378635E-6	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999718077306068	WITHOUT_CLASSIFICATION	2.8192269393186754E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9999134485418603	WITHOUT_CLASSIFICATION	8.655145813978166E-5	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9999977745399472	WITHOUT_CLASSIFICATION	2.225460052876453E-6	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999871442575379	WITHOUT_CLASSIFICATION	1.2855742462174098E-5	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999948690445917	WITHOUT_CLASSIFICATION	5.130955408347873E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999527737785963	WITHOUT_CLASSIFICATION	4.722622140381575E-5	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9998062187584187	WITHOUT_CLASSIFICATION	1.93781241581404E-4	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.9998909009078352	WITHOUT_CLASSIFICATION	1.0909909216490404E-4	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9999254192919093	WITHOUT_CLASSIFICATION	7.458070809066364E-5	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9997673022752225	WITHOUT_CLASSIFICATION	2.3269772477761062E-4	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999838717876904	WITHOUT_CLASSIFICATION	1.6128212309508372E-5	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9999805074404301	WITHOUT_CLASSIFICATION	1.9492559569880123E-5	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999793321259323	WITHOUT_CLASSIFICATION	2.06678740678069E-5	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999986410154975	WITHOUT_CLASSIFICATION	1.3589845025445498E-6	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999913978517371	WITHOUT_CLASSIFICATION	8.602148262886267E-6	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999980375016575	WITHOUT_CLASSIFICATION	1.962498342534506E-6	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9997603775862667	WITHOUT_CLASSIFICATION	2.3962241373340777E-4	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.999992428376891	WITHOUT_CLASSIFICATION	7.571623109088349E-6	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999586616729658	WITHOUT_CLASSIFICATION	4.133832703431441E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999958719141281	WITHOUT_CLASSIFICATION	4.128085871869784E-6	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9999871734797547	WITHOUT_CLASSIFICATION	1.2826520245331151E-5	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999842416127992	WITHOUT_CLASSIFICATION	1.57583872007444E-5	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9998009113635472	WITHOUT_CLASSIFICATION	1.990886364527863E-4	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.999996924950704	WITHOUT_CLASSIFICATION	3.075049296057999E-6	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9999911242598166	WITHOUT_CLASSIFICATION	8.875740183332512E-6	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.999988741468456	WITHOUT_CLASSIFICATION	1.125853154409468E-5	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999951350645662	WITHOUT_CLASSIFICATION	4.8649354338371615E-6	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.9999936203766292	WITHOUT_CLASSIFICATION	6.379623370846822E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999829104198307	WITHOUT_CLASSIFICATION	1.708958016935756E-5	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999871442575379	WITHOUT_CLASSIFICATION	1.2855742462174098E-5	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999972902157015	WITHOUT_CLASSIFICATION	2.7097842984449768E-6	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.9998243776582277	WITHOUT_CLASSIFICATION	1.7562234177222227E-4	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9998598033147478	WITHOUT_CLASSIFICATION	1.4019668525209295E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9999725701538819	WITHOUT_CLASSIFICATION	2.7429846118135674E-5	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999966531185985	WITHOUT_CLASSIFICATION	3.3468814015135843E-6	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999710765481974	WITHOUT_CLASSIFICATION	2.8923451802650516E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999718077306068	WITHOUT_CLASSIFICATION	2.8192269393186754E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999718077306068	WITHOUT_CLASSIFICATION	2.8192269393186754E-5	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999758027227027	WITHOUT_CLASSIFICATION	2.4197277297244366E-5	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999889992253308	WITHOUT_CLASSIFICATION	1.100077466930702E-5	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.9998681727743419	WITHOUT_CLASSIFICATION	1.3182722565803625E-4	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999928432752492	WITHOUT_CLASSIFICATION	7.156724750735624E-6	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9999960348606416	WITHOUT_CLASSIFICATION	3.965139358500618E-6	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999987947825306	WITHOUT_CLASSIFICATION	1.20521746928382E-6	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999731254572759	WITHOUT_CLASSIFICATION	2.6874542724039382E-5	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999993975900296	WITHOUT_CLASSIFICATION	6.024099703468116E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999578975396471	WITHOUT_CLASSIFICATION	4.2102460352951036E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999991805697451	WITHOUT_CLASSIFICATION	8.194302547541262E-7	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9999927197424917	WITHOUT_CLASSIFICATION	7.280257508411381E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9995567544669073	WITHOUT_CLASSIFICATION	4.4324553309270815E-4	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9998986361111818	WITHOUT_CLASSIFICATION	1.0136388881820243E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999991805697451	WITHOUT_CLASSIFICATION	8.194302547541262E-7	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999327567073635	WITHOUT_CLASSIFICATION	6.724329263644366E-5	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999973048948566	WITHOUT_CLASSIFICATION	2.695105143351383E-6	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999897598561615	WITHOUT_CLASSIFICATION	1.024014383855711E-5	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9952912952887475	WITHOUT_CLASSIFICATION	0.004708704711252476	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9995567544669073	WITHOUT_CLASSIFICATION	4.4324553309270815E-4	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999958878104965	WITHOUT_CLASSIFICATION	4.1121895034918965E-6	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999989520676229	WITHOUT_CLASSIFICATION	1.0479323771153506E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999986545076708	WITHOUT_CLASSIFICATION	1.3454923291727847E-6	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999998248603907	WITHOUT_CLASSIFICATION	1.7513960933540464E-7	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9996185971705505	WITHOUT_CLASSIFICATION	3.814028294495069E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999858213970266	WITHOUT_CLASSIFICATION	1.4178602973323978E-5	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999997150260367	WITHOUT_CLASSIFICATION	2.849739633016902E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999474955912031	WITHOUT_CLASSIFICATION	5.250440879681334E-5	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999985025638372	WITHOUT_CLASSIFICATION	1.4974361628822254E-6	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999984472962121	WITHOUT_CLASSIFICATION	1.5527037879431067E-6	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999979074593358	WITHOUT_CLASSIFICATION	2.092540664210066E-6	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9999382078312968	WITHOUT_CLASSIFICATION	6.179216870316048E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999991805697451	WITHOUT_CLASSIFICATION	8.194302547541262E-7	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999958878104965	WITHOUT_CLASSIFICATION	4.1121895034918965E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999986545076708	WITHOUT_CLASSIFICATION	1.3454923291727847E-6	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999896017042339	WITHOUT_CLASSIFICATION	1.0398295766130028E-5	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999973102276777	WITHOUT_CLASSIFICATION	2.6897723223335864E-6	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.999996659209792	WITHOUT_CLASSIFICATION	3.3407902080863752E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9995567544669073	WITHOUT_CLASSIFICATION	4.4324553309270815E-4	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9999943762028746	WITHOUT_CLASSIFICATION	5.623797125461483E-6	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999354269358802	WITHOUT_CLASSIFICATION	6.457306411979448E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998960388932459	WITHOUT_CLASSIFICATION	1.0396110675414164E-4	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999193459489152	WITHOUT_CLASSIFICATION	8.065405108479571E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999474955912031	WITHOUT_CLASSIFICATION	5.250440879681334E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999327567073635	WITHOUT_CLASSIFICATION	6.724329263644366E-5	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.999936142089051	WITHOUT_CLASSIFICATION	6.385791094895464E-5	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999945667384629	WITHOUT_CLASSIFICATION	5.433261537043408E-6	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9999607115899607	WITHOUT_CLASSIFICATION	3.9288410039273986E-5	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9999770810072085	WITHOUT_CLASSIFICATION	2.2918992791525838E-5	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9999207552537063	WITHOUT_CLASSIFICATION	7.924474629369899E-5	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9999207350627294	WITHOUT_CLASSIFICATION	7.926493727058191E-5	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9999321863408512	WITHOUT_CLASSIFICATION	6.781365914871202E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999863511674606	WITHOUT_CLASSIFICATION	1.3648832539479333E-5	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998844701815	WITHOUT_CLASSIFICATION	1.155298185000738E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998735383459219	WITHOUT_CLASSIFICATION	1.264616540780377E-4	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.999998117362764	WITHOUT_CLASSIFICATION	1.8826372359910966E-6	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999284818129768	WITHOUT_CLASSIFICATION	7.151818702320115E-5	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999898670304901	WITHOUT_CLASSIFICATION	1.0132969509890544E-5	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999884541225665	WITHOUT_CLASSIFICATION	1.154587743337403E-5	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999966712987194	WITHOUT_CLASSIFICATION	3.328701280651207E-6	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999865274500102	WITHOUT_CLASSIFICATION	1.3472549989932832E-5	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999987347975717	WITHOUT_CLASSIFICATION	1.2652024282904966E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999193459489152	WITHOUT_CLASSIFICATION	8.065405108479571E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998735383459219	WITHOUT_CLASSIFICATION	1.264616540780377E-4	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999466480673777	WITHOUT_CLASSIFICATION	5.335193262239765E-5	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9999642459456415	WITHOUT_CLASSIFICATION	3.575405435848392E-5	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9997847646144934	WITHOUT_CLASSIFICATION	2.152353855065939E-4	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999543947280012	WITHOUT_CLASSIFICATION	4.560527199872386E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.999964430090393	WITHOUT_CLASSIFICATION	3.5569909606974334E-5	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999990067113778	WITHOUT_CLASSIFICATION	9.932886223001418E-7	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999911154037278	WITHOUT_CLASSIFICATION	8.884596272170086E-6	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9999814476328962	WITHOUT_CLASSIFICATION	1.855236710376513E-5	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999982524687975	WITHOUT_CLASSIFICATION	1.7475312024328399E-6	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999969187368786	WITHOUT_CLASSIFICATION	3.081263121464349E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999878641473371	WITHOUT_CLASSIFICATION	1.2135852662907021E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999950330235654	WITHOUT_CLASSIFICATION	4.966976434675383E-6	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9999986726894718	WITHOUT_CLASSIFICATION	1.3273105281591916E-6	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9999636644595384	WITHOUT_CLASSIFICATION	3.633554046152231E-5	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9999934870686898	WITHOUT_CLASSIFICATION	6.5129313102428564E-6	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999995121105258	WITHOUT_CLASSIFICATION	4.878894741877584E-7	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9999864382264748	WITHOUT_CLASSIFICATION	1.356177352532185E-5	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9998775004978785	WITHOUT_CLASSIFICATION	1.2249950212149814E-4	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999989145117999	WITHOUT_CLASSIFICATION	1.085488200119021E-6	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9999807423547842	WITHOUT_CLASSIFICATION	1.9257645215761507E-5	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999671280124313	WITHOUT_CLASSIFICATION	3.2871987568697654E-5	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999970295967765	WITHOUT_CLASSIFICATION	2.970403223551308E-6	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999996057940597	WITHOUT_CLASSIFICATION	3.9420594029465235E-7	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999988044141448	WITHOUT_CLASSIFICATION	1.1955858551512704E-6	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999987361417533	WITHOUT_CLASSIFICATION	1.2638582468077287E-6	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.9988909571243899	WITHOUT_CLASSIFICATION	0.0011090428756101072	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999966683409492	WITHOUT_CLASSIFICATION	3.33165905077824E-6	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999935972434294	WITHOUT_CLASSIFICATION	6.402756570491236E-6	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999993316663496	WITHOUT_CLASSIFICATION	6.683336504404343E-7	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.9988942681329144	WITHOUT_CLASSIFICATION	0.0011057318670856563	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999872144328174	WITHOUT_CLASSIFICATION	1.2785567182704885E-5	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999834217255816	WITHOUT_CLASSIFICATION	1.6578274418288284E-5	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.999996364413974	WITHOUT_CLASSIFICATION	3.6355860259698324E-6	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999991790731012	WITHOUT_CLASSIFICATION	8.209268987441196E-7	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999995862695897	WITHOUT_CLASSIFICATION	4.1373041021355044E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999941390390013	WITHOUT_CLASSIFICATION	5.860960998741755E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999925843694216	WITHOUT_CLASSIFICATION	7.415630578422146E-6	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999648360446386	WITHOUT_CLASSIFICATION	3.516395536146164E-5	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999941390390013	WITHOUT_CLASSIFICATION	5.860960998741755E-6	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999995862695897	WITHOUT_CLASSIFICATION	4.1373041021355044E-7	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999925843694216	WITHOUT_CLASSIFICATION	7.415630578422146E-6	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.9999639928384237	WITHOUT_CLASSIFICATION	3.600716157632845E-5	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999932100183676	WITHOUT_CLASSIFICATION	6.78998163237922E-6	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999998380087212	WITHOUT_CLASSIFICATION	1.619912787816726E-7	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9999828346581502	WITHOUT_CLASSIFICATION	1.7165341849813304E-5	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.999995739616635	WITHOUT_CLASSIFICATION	4.2603833649398645E-6	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.999982250206967	WITHOUT_CLASSIFICATION	1.7749793032975794E-5	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9999910231480509	WITHOUT_CLASSIFICATION	8.97685194906238E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999383235471717	WITHOUT_CLASSIFICATION	6.167645282830043E-5	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9999932931982726	WITHOUT_CLASSIFICATION	6.7068017274791E-6	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999978509670194	WITHOUT_CLASSIFICATION	2.149032980623237E-6	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999957164175599	WITHOUT_CLASSIFICATION	4.283582440114383E-6	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999738114390381	WITHOUT_CLASSIFICATION	2.6188560961840436E-5	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999980932015655	WITHOUT_CLASSIFICATION	1.9067984345324944E-6	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9999196284640212	WITHOUT_CLASSIFICATION	8.037153597879071E-5	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999684320122045	WITHOUT_CLASSIFICATION	3.15679877953879E-5	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999994854518737	WITHOUT_CLASSIFICATION	5.145481263817166E-7	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999910669832116	WITHOUT_CLASSIFICATION	8.933016788377042E-6	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999999044228561	WITHOUT_CLASSIFICATION	9.557714394892787E-8	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999805830938024	WITHOUT_CLASSIFICATION	1.9416906197591394E-5	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.999974941934503	WITHOUT_CLASSIFICATION	2.5058065496964236E-5	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.999993988592256	WITHOUT_CLASSIFICATION	6.01140774403054E-6	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999901157361498	WITHOUT_CLASSIFICATION	9.884263850209E-6	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.999990219945481	WITHOUT_CLASSIFICATION	9.780054519091423E-6	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999995217170747	WITHOUT_CLASSIFICATION	4.782829252214164E-7	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999681345569669	WITHOUT_CLASSIFICATION	3.186544303314945E-5	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999681345569669	WITHOUT_CLASSIFICATION	3.186544303314945E-5	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999984092121131	WITHOUT_CLASSIFICATION	1.5907878868219116E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999984092121131	WITHOUT_CLASSIFICATION	1.5907878868219116E-6	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.9999949372460257	WITHOUT_CLASSIFICATION	5.062753974232453E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999910669832116	WITHOUT_CLASSIFICATION	8.933016788377042E-6	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.999539935269113	WITHOUT_CLASSIFICATION	4.600647308870948E-4	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.99999867654477	WITHOUT_CLASSIFICATION	1.3234552299064502E-6	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999384772208775	WITHOUT_CLASSIFICATION	6.152277912242426E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999384772208775	WITHOUT_CLASSIFICATION	6.152277912242426E-5	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999898088723727	WITHOUT_CLASSIFICATION	1.0191127627281095E-5	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.999998173519895	WITHOUT_CLASSIFICATION	1.8264801049894398E-6	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999995877401755	WITHOUT_CLASSIFICATION	4.122598245519546E-7	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999973255542567	WITHOUT_CLASSIFICATION	2.6744457434390466E-6	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999983986905304	WITHOUT_CLASSIFICATION	1.6013094695594972E-6	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.999999872514802	WITHOUT_CLASSIFICATION	1.2748519783177053E-7	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9999869880530748	WITHOUT_CLASSIFICATION	1.3011946925125364E-5	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999959000187748	WITHOUT_CLASSIFICATION	4.099981225212009E-6	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9999883959367176	WITHOUT_CLASSIFICATION	1.1604063282308636E-5	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999594482875488	WITHOUT_CLASSIFICATION	4.055171245126307E-5	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999977942575038	WITHOUT_CLASSIFICATION	2.2057424962425986E-6	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9999947147882371	WITHOUT_CLASSIFICATION	5.285211762822208E-6	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999973750006582	WITHOUT_CLASSIFICATION	2.624999341683765E-6	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999715737232804	WITHOUT_CLASSIFICATION	2.8426276719672013E-5	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9999552471720314	WITHOUT_CLASSIFICATION	4.475282796862495E-5	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.99999860527423	WITHOUT_CLASSIFICATION	1.3947257700698127E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737000973492	WITHOUT_CLASSIFICATION	2.6299902650854727E-5	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999294696943858	WITHOUT_CLASSIFICATION	7.053030561420972E-5	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999997692912301	WITHOUT_CLASSIFICATION	2.307087698037291E-7	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999995030911835	WITHOUT_CLASSIFICATION	4.96908816574703E-7	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999984857039727	WITHOUT_CLASSIFICATION	1.514296027412974E-6	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999995566133575	WITHOUT_CLASSIFICATION	4.4338664250567083E-7	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999876782031137	WITHOUT_CLASSIFICATION	1.232179688626338E-5	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.999994940140278	WITHOUT_CLASSIFICATION	5.0598597219590805E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995476438827032	WITHOUT_CLASSIFICATION	4.5235611729669737E-4	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999982411266704	WITHOUT_CLASSIFICATION	1.7588733296461776E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998735383459219	WITHOUT_CLASSIFICATION	1.264616540780377E-4	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999950330235654	WITHOUT_CLASSIFICATION	4.966976434675383E-6	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999611671328451	WITHOUT_CLASSIFICATION	3.8832867155012276E-5	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999981408930383	WITHOUT_CLASSIFICATION	1.8591069616444835E-6	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999579483263823	WITHOUT_CLASSIFICATION	4.205167361772084E-5	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999912100032504	WITHOUT_CLASSIFICATION	8.789996749665261E-6	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9998456867076007	WITHOUT_CLASSIFICATION	1.543132923994076E-4	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9998456867076007	WITHOUT_CLASSIFICATION	1.543132923994076E-4	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999974554095639	WITHOUT_CLASSIFICATION	2.544590436164407E-6	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999686361636922	WITHOUT_CLASSIFICATION	3.136383630778565E-5	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999832158771794	WITHOUT_CLASSIFICATION	1.6784122820553214E-5	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999832158771794	WITHOUT_CLASSIFICATION	1.6784122820553214E-5	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999982087285406	WITHOUT_CLASSIFICATION	1.7912714593488205E-6	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9997687753427112	WITHOUT_CLASSIFICATION	2.3122465728872836E-4	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.999985053841838	WITHOUT_CLASSIFICATION	1.4946158161940229E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999903531644234	WITHOUT_CLASSIFICATION	9.646835576583328E-6	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.999972045810513	WITHOUT_CLASSIFICATION	2.7954189486951626E-5	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999903646332077	WITHOUT_CLASSIFICATION	9.635366792254088E-6	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999953242829412	WITHOUT_CLASSIFICATION	4.675717058711573E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999952370088935	WITHOUT_CLASSIFICATION	4.7629911065830286E-6	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999908335394163	WITHOUT_CLASSIFICATION	9.16646058363698E-6	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999908335394163	WITHOUT_CLASSIFICATION	9.16646058363698E-6	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999995960034261	WITHOUT_CLASSIFICATION	4.039965738380985E-7	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.999998539003155	WITHOUT_CLASSIFICATION	1.4609968449281987E-6	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.999998539003155	WITHOUT_CLASSIFICATION	1.4609968449281987E-6	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.999991456253025	WITHOUT_CLASSIFICATION	8.543746975066331E-6	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999827886748529	WITHOUT_CLASSIFICATION	1.7211325147092104E-5	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9977480839299987	WITHOUT_CLASSIFICATION	0.0022519160700013724	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999978896864523	WITHOUT_CLASSIFICATION	2.1103135476344307E-6	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999985104315442	WITHOUT_CLASSIFICATION	1.48956845584999E-6	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999949579452357	WITHOUT_CLASSIFICATION	5.042054764180845E-6	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9998719355509385	WITHOUT_CLASSIFICATION	1.2806444906165876E-4	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999937913729458	WITHOUT_CLASSIFICATION	6.208627054291271E-6	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999837697249446	WITHOUT_CLASSIFICATION	1.6230275055307058E-5	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9999951833500897	WITHOUT_CLASSIFICATION	4.816649910156889E-6	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999998916358508	WITHOUT_CLASSIFICATION	1.0836414919299904E-7	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9999989973036031	WITHOUT_CLASSIFICATION	1.0026963969049986E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999589965120929	WITHOUT_CLASSIFICATION	4.1003487907024245E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999589965120929	WITHOUT_CLASSIFICATION	4.1003487907024245E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999589965120929	WITHOUT_CLASSIFICATION	4.1003487907024245E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999589965120929	WITHOUT_CLASSIFICATION	4.1003487907024245E-5	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999910675158684	WITHOUT_CLASSIFICATION	8.932484131591772E-6	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999981840233245	WITHOUT_CLASSIFICATION	1.8159766755325115E-6	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9999226610551242	WITHOUT_CLASSIFICATION	7.733894487584874E-5	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.999880933196728	WITHOUT_CLASSIFICATION	1.1906680327206407E-4	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.99998974340086	WITHOUT_CLASSIFICATION	1.0256599140007013E-5	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9999818243640111	WITHOUT_CLASSIFICATION	1.8175635988930202E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997378616382003	WITHOUT_CLASSIFICATION	2.621383617996344E-4	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999921467635405	WITHOUT_CLASSIFICATION	7.853236459419522E-6	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9998842663590825	WITHOUT_CLASSIFICATION	1.1573364091753005E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997378616382003	WITHOUT_CLASSIFICATION	2.621383617996344E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997378616382003	WITHOUT_CLASSIFICATION	2.621383617996344E-4	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999990823654307	WITHOUT_CLASSIFICATION	9.176345692396406E-7	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999010607512403	WITHOUT_CLASSIFICATION	9.893924875978681E-5	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999904534606955	WITHOUT_CLASSIFICATION	9.54653930457979E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.999998999637936	WITHOUT_CLASSIFICATION	1.0003620639598242E-6	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999969362579688	WITHOUT_CLASSIFICATION	3.0637420311888126E-6	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999800172434743	WITHOUT_CLASSIFICATION	1.998275652574648E-5	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999988756400304	WITHOUT_CLASSIFICATION	1.1243599696056878E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.999998999637936	WITHOUT_CLASSIFICATION	1.0003620639598242E-6	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.999959498730972	WITHOUT_CLASSIFICATION	4.0501269028078214E-5	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999912416690425	WITHOUT_CLASSIFICATION	8.758330957469895E-6	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999017946796875	WITHOUT_CLASSIFICATION	9.820532031251052E-5	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999459205474839	WITHOUT_CLASSIFICATION	5.4079452516185515E-5	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999739617772145	WITHOUT_CLASSIFICATION	2.603822278553265E-5	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9999990384085435	WITHOUT_CLASSIFICATION	9.61591456485354E-7	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999997372807177	WITHOUT_CLASSIFICATION	2.6271928226650177E-7	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9999933056457015	WITHOUT_CLASSIFICATION	6.694354298344256E-6	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998871771331	WITHOUT_CLASSIFICATION	1.1282286691103773E-6	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999987914363171	WITHOUT_CLASSIFICATION	1.2085636828568195E-6	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998255920352	WITHOUT_CLASSIFICATION	1.744079648006281E-6	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999894003227214	WITHOUT_CLASSIFICATION	1.0599677278542727E-5	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999920994599312	WITHOUT_CLASSIFICATION	7.900540068889292E-6	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9998254081925863	WITHOUT_CLASSIFICATION	1.7459180741372473E-4	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999991553029564	WITHOUT_CLASSIFICATION	8.446970435463356E-7	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9999931724046723	WITHOUT_CLASSIFICATION	6.82759532763261E-6	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999990923106925	WITHOUT_CLASSIFICATION	9.076893075493625E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999856618451956	WITHOUT_CLASSIFICATION	1.433815480454563E-5	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999993247861181	WITHOUT_CLASSIFICATION	6.752138820017284E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999856618451956	WITHOUT_CLASSIFICATION	1.433815480454563E-5	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999986359114692	WITHOUT_CLASSIFICATION	1.364088530780941E-6	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999984231332602	WITHOUT_CLASSIFICATION	1.5768667399403182E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999873559933502	WITHOUT_CLASSIFICATION	1.2644006649789775E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9998772834452485	WITHOUT_CLASSIFICATION	1.2271655475145832E-4	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999990923106925	WITHOUT_CLASSIFICATION	9.076893075493625E-7	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999993247861181	WITHOUT_CLASSIFICATION	6.752138820017284E-7	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999986359114692	WITHOUT_CLASSIFICATION	1.364088530780941E-6	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999979256545628	WITHOUT_CLASSIFICATION	2.074345437083086E-6	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9999079298708485	WITHOUT_CLASSIFICATION	9.207012915147125E-5	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.9999890502230466	WITHOUT_CLASSIFICATION	1.0949776953497685E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9999857912996953	WITHOUT_CLASSIFICATION	1.4208700304633905E-5	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999974827819411	WITHOUT_CLASSIFICATION	2.5172180588093598E-6	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999987593774687	WITHOUT_CLASSIFICATION	1.2406225313500007E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737000973492	WITHOUT_CLASSIFICATION	2.6299902650854727E-5	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999984231332602	WITHOUT_CLASSIFICATION	1.5768667399403182E-6	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999997747699437	WITHOUT_CLASSIFICATION	2.2523005632586713E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9999886095509135	WITHOUT_CLASSIFICATION	1.1390449086434761E-5	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999944718686843	WITHOUT_CLASSIFICATION	5.52813131569571E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737000973492	WITHOUT_CLASSIFICATION	2.6299902650854727E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998735383459219	WITHOUT_CLASSIFICATION	1.264616540780377E-4	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999990453993158	WITHOUT_CLASSIFICATION	9.5460068416914E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737000973492	WITHOUT_CLASSIFICATION	2.6299902650854727E-5	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999937756994949	WITHOUT_CLASSIFICATION	6.224300505096158E-6	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999784526683242	WITHOUT_CLASSIFICATION	2.154733167581684E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998735383459219	WITHOUT_CLASSIFICATION	1.264616540780377E-4	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9999819527033093	WITHOUT_CLASSIFICATION	1.8047296690775997E-5	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999992750289343	WITHOUT_CLASSIFICATION	7.24971065633617E-7	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999898142264653	WITHOUT_CLASSIFICATION	1.0185773534770956E-5	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.999985100037515	WITHOUT_CLASSIFICATION	1.4899962485102094E-5	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999905459726489	WITHOUT_CLASSIFICATION	9.454027351124429E-6	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999991208982264	WITHOUT_CLASSIFICATION	8.791017735155258E-7	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999950752502529	WITHOUT_CLASSIFICATION	4.924749747151703E-6	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9998761602855539	WITHOUT_CLASSIFICATION	1.2383971444599265E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997188804457346	WITHOUT_CLASSIFICATION	2.8111955426535424E-4	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999985455621179	WITHOUT_CLASSIFICATION	1.4544378820961683E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9977480839299987	WITHOUT_CLASSIFICATION	0.0022519160700013724	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9998986991642534	WITHOUT_CLASSIFICATION	1.0130083574650178E-4	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9998881019129928	WITHOUT_CLASSIFICATION	1.1189808700707634E-4	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.999991741526712	WITHOUT_CLASSIFICATION	8.258473288014387E-6	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999499141263116	WITHOUT_CLASSIFICATION	5.008587368848252E-5	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999953234379043	WITHOUT_CLASSIFICATION	4.676562095589525E-6	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999999160727375	WITHOUT_CLASSIFICATION	8.392726250363902E-8	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999996517594325	WITHOUT_CLASSIFICATION	3.4824056751962686E-7	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9999927566169053	WITHOUT_CLASSIFICATION	7.243383094585968E-6	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.999999750014471	WITHOUT_CLASSIFICATION	2.4998552904557954E-7	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999980194582199	WITHOUT_CLASSIFICATION	1.9805417801444253E-6	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.996921326015536	WITHOUT_CLASSIFICATION	0.0030786739844640325	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999840036459643	WITHOUT_CLASSIFICATION	1.5996354035682566E-5	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999820180571961	WITHOUT_CLASSIFICATION	1.7981942803874504E-5	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999964867307987	WITHOUT_CLASSIFICATION	3.513269201330141E-6	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999945937354362	WITHOUT_CLASSIFICATION	5.406264563829772E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9996204826433459	WITHOUT_CLASSIFICATION	3.795173566540374E-4	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.999999414217449	WITHOUT_CLASSIFICATION	5.857825511214877E-7	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.99999096104178	WITHOUT_CLASSIFICATION	9.038958220069088E-6	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999993453054076	WITHOUT_CLASSIFICATION	6.54694592433302E-7	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9999585987490328	WITHOUT_CLASSIFICATION	4.140125096729884E-5	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999989504918982	WITHOUT_CLASSIFICATION	1.0495081018296587E-6	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9984598628670815	WITHOUT_CLASSIFICATION	0.0015401371329183647	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.99999415839314	WITHOUT_CLASSIFICATION	5.841606859965447E-6	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999955609013369	WITHOUT_CLASSIFICATION	4.439098663071752E-6	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9997813543300714	WITHOUT_CLASSIFICATION	2.1864566992851363E-4	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9998779304755879	WITHOUT_CLASSIFICATION	1.2206952441209564E-4	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999994031787919	WITHOUT_CLASSIFICATION	5.968212081631724E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9953636206022727	WITHOUT_CLASSIFICATION	0.004636379397727253	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999995316285558	WITHOUT_CLASSIFICATION	4.6837144423135525E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998735383459219	WITHOUT_CLASSIFICATION	1.264616540780377E-4	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999983027489862	WITHOUT_CLASSIFICATION	1.697251013912698E-6	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9998466090575844	WITHOUT_CLASSIFICATION	1.5339094241564313E-4	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9998466090575844	WITHOUT_CLASSIFICATION	1.5339094241564313E-4	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999996893523735	WITHOUT_CLASSIFICATION	3.10647626460064E-7	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999991208982264	WITHOUT_CLASSIFICATION	8.791017735155258E-7	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9999348096052444	WITHOUT_CLASSIFICATION	6.519039475564646E-5	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999952945285042	WITHOUT_CLASSIFICATION	4.705471495797684E-6	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999969355387524	WITHOUT_CLASSIFICATION	3.064461247647261E-6	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999998466199291	WITHOUT_CLASSIFICATION	1.5338007081494088E-7	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9999825531178129	WITHOUT_CLASSIFICATION	1.7446882187114834E-5	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9995495249588154	WITHOUT_CLASSIFICATION	4.5047504118448555E-4	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9999969810032274	WITHOUT_CLASSIFICATION	3.0189967726387958E-6	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9999995913991753	WITHOUT_CLASSIFICATION	4.08600824748295E-7	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999987686299767	WITHOUT_CLASSIFICATION	1.2313700232572977E-6	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.9999982394987197	WITHOUT_CLASSIFICATION	1.7605012803183524E-6	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.999999539469157	WITHOUT_CLASSIFICATION	4.6053084299940824E-7	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.999995600063294	WITHOUT_CLASSIFICATION	4.399936705930517E-6	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999944389347291	WITHOUT_CLASSIFICATION	5.561065270860001E-6	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999998380499119	WITHOUT_CLASSIFICATION	1.619500880259822E-7	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999940020700276	WITHOUT_CLASSIFICATION	5.9979299722708876E-6	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.999989458470444	WITHOUT_CLASSIFICATION	1.0541529556019918E-5	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999631285101105	WITHOUT_CLASSIFICATION	3.687148988945699E-5	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999981531192099	WITHOUT_CLASSIFICATION	1.8468807901828806E-6	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999996975056039	WITHOUT_CLASSIFICATION	3.0249439613333867E-7	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999921930520712	WITHOUT_CLASSIFICATION	7.806947928805679E-6	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999983852673227	WITHOUT_CLASSIFICATION	1.6147326773289563E-6	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999966711862249	WITHOUT_CLASSIFICATION	3.3288137750236003E-6	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9953636206022727	WITHOUT_CLASSIFICATION	0.004636379397727253	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999987239477348	WITHOUT_CLASSIFICATION	1.2760522651934133E-6	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999997976906287	WITHOUT_CLASSIFICATION	2.0230937111107208E-7	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999961450630145	WITHOUT_CLASSIFICATION	3.854936985481817E-6	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999914726683279	WITHOUT_CLASSIFICATION	8.527331672096068E-6	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9998200867934267	WITHOUT_CLASSIFICATION	1.799132065731954E-4	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999997372742407	WITHOUT_CLASSIFICATION	2.6272575934076283E-7	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999751836107978	WITHOUT_CLASSIFICATION	2.481638920208498E-5	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999917956672425	WITHOUT_CLASSIFICATION	8.204332757509406E-6	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999986622774643	WITHOUT_CLASSIFICATION	1.3377225357825469E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999896974991267	WITHOUT_CLASSIFICATION	1.0302500873323176E-5	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999990426916354	WITHOUT_CLASSIFICATION	9.573083645747008E-7	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9998629716341055	WITHOUT_CLASSIFICATION	1.3702836589454335E-4	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9999377810888489	WITHOUT_CLASSIFICATION	6.22189111510435E-5	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999998093294363	WITHOUT_CLASSIFICATION	1.9067056376198772E-7	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999679732268121	WITHOUT_CLASSIFICATION	3.202677318788088E-5	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999679732268121	WITHOUT_CLASSIFICATION	3.202677318788088E-5	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999604466867535	WITHOUT_CLASSIFICATION	3.9553313246350956E-5	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9999984795150157	WITHOUT_CLASSIFICATION	1.52048498424092E-6	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999754835494745	WITHOUT_CLASSIFICATION	2.451645052543799E-5	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999754835494745	WITHOUT_CLASSIFICATION	2.451645052543799E-5	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999976446608531	WITHOUT_CLASSIFICATION	2.3553391469676606E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999682408135918	WITHOUT_CLASSIFICATION	3.175918640816382E-5	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.999999417749927	WITHOUT_CLASSIFICATION	5.822500730147832E-7	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999993676754698	WITHOUT_CLASSIFICATION	6.323245302944116E-7	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999870624626676	WITHOUT_CLASSIFICATION	1.2937537332445352E-5	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999916087367349	WITHOUT_CLASSIFICATION	8.391263265183548E-6	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999983823058534	WITHOUT_CLASSIFICATION	1.6176941466555621E-6	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999983823058534	WITHOUT_CLASSIFICATION	1.6176941466555621E-6	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999995566410767	WITHOUT_CLASSIFICATION	4.433589232981047E-6	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9999938791396766	WITHOUT_CLASSIFICATION	6.1208603233407845E-6	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999791844287177	WITHOUT_CLASSIFICATION	2.0815571282321392E-5	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999899193901902	WITHOUT_CLASSIFICATION	1.0080609809674548E-5	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999899193901902	WITHOUT_CLASSIFICATION	1.0080609809674548E-5	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999932138814751	WITHOUT_CLASSIFICATION	6.7861185249521E-6	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999880100240686	WITHOUT_CLASSIFICATION	1.1989975931550712E-5	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999994727714047	WITHOUT_CLASSIFICATION	5.272285953577649E-7	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999877307723122	WITHOUT_CLASSIFICATION	1.2269227687793086E-5	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999995356953036	WITHOUT_CLASSIFICATION	4.643046963766403E-7	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999988283641933	WITHOUT_CLASSIFICATION	1.1716358067095326E-6	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999979496599035	WITHOUT_CLASSIFICATION	2.0503400965118614E-6	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999951970952526	WITHOUT_CLASSIFICATION	4.802904747303127E-6	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999997228757203	WITHOUT_CLASSIFICATION	2.771242797111134E-7	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999954126371279	WITHOUT_CLASSIFICATION	4.587362872137742E-6	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9999854893265832	WITHOUT_CLASSIFICATION	1.451067341686143E-5	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999982751894464	WITHOUT_CLASSIFICATION	1.7248105536057167E-6	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9999704966865773	WITHOUT_CLASSIFICATION	2.9503313422650337E-5	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999999965486056	WITHOUT_CLASSIFICATION	3.4513942759097367E-9	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999286189885437	WITHOUT_CLASSIFICATION	7.138101145625684E-5	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999966979315231	WITHOUT_CLASSIFICATION	3.3020684769206373E-6	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999945385046133	WITHOUT_CLASSIFICATION	5.461495386697835E-6	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999997066370183	WITHOUT_CLASSIFICATION	2.933629816344762E-7	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999676666352437	WITHOUT_CLASSIFICATION	3.23333647563213E-5	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999873043369758	WITHOUT_CLASSIFICATION	1.2695663024124159E-5	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999925113717039	WITHOUT_CLASSIFICATION	7.488628296035065E-6	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999964240027777	WITHOUT_CLASSIFICATION	3.5759972223369506E-6	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9999451319266878	WITHOUT_CLASSIFICATION	5.486807331212776E-5	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999638466478667	WITHOUT_CLASSIFICATION	3.615335213323366E-5	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9999798460303825	WITHOUT_CLASSIFICATION	2.0153969617506286E-5	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999941686927575	WITHOUT_CLASSIFICATION	5.831307242585774E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999982765508467	WITHOUT_CLASSIFICATION	1.7234491531954874E-6	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9999334599916393	WITHOUT_CLASSIFICATION	6.654000836063372E-5	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999818866137025	WITHOUT_CLASSIFICATION	1.8113386297464703E-5	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999989076167094	WITHOUT_CLASSIFICATION	1.0923832906051301E-6	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999996864772861	WITHOUT_CLASSIFICATION	3.1352271390942255E-7	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999952097521512	WITHOUT_CLASSIFICATION	4.790247848856206E-6	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.999998171020058	WITHOUT_CLASSIFICATION	1.8289799420186043E-6	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9996370425636272	WITHOUT_CLASSIFICATION	3.6295743637277056E-4	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999996188816527	WITHOUT_CLASSIFICATION	3.811183472387992E-7	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9999593345695149	WITHOUT_CLASSIFICATION	4.066543048517966E-5	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9998937666339631	WITHOUT_CLASSIFICATION	1.0623336603694178E-4	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999989484465042	WITHOUT_CLASSIFICATION	1.0515534958836116E-6	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999685280402654	WITHOUT_CLASSIFICATION	3.147195973453989E-5	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999987347674174	WITHOUT_CLASSIFICATION	1.2652325825797477E-6	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999996404976971	WITHOUT_CLASSIFICATION	3.5950230293781063E-7	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9999805674800801	WITHOUT_CLASSIFICATION	1.9432519919898807E-5	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999943684778911	WITHOUT_CLASSIFICATION	5.631522108966295E-6	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.9999953775596914	WITHOUT_CLASSIFICATION	4.622440308678809E-6	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.9999886927049878	WITHOUT_CLASSIFICATION	1.13072950120912E-5	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999978328310297	WITHOUT_CLASSIFICATION	2.1671689703644093E-6	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999902513970639	WITHOUT_CLASSIFICATION	9.748602936057373E-6	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999983283182731	WITHOUT_CLASSIFICATION	1.6716817269965034E-6	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999949752041544	WITHOUT_CLASSIFICATION	5.024795845623423E-6	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999951473627033	WITHOUT_CLASSIFICATION	4.852637296697637E-6	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.999985412703869	WITHOUT_CLASSIFICATION	1.4587296131099205E-5	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999969953046925	WITHOUT_CLASSIFICATION	3.0046953075598484E-6	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999976590086644	WITHOUT_CLASSIFICATION	2.340991335689142E-6	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999887859173	WITHOUT_CLASSIFICATION	1.1214082780511293E-8	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999955089870456	WITHOUT_CLASSIFICATION	4.4910129543838915E-6	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9999993387806072	WITHOUT_CLASSIFICATION	6.61219392765902E-7	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9999868730697699	WITHOUT_CLASSIFICATION	1.312693023017206E-5	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999803762451096	WITHOUT_CLASSIFICATION	1.9623754890477343E-5	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999993506694178	WITHOUT_CLASSIFICATION	6.493305821828201E-7	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999998529076587	WITHOUT_CLASSIFICATION	1.4709234134109712E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.999997627777538	WITHOUT_CLASSIFICATION	2.3722224621107198E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.999997627777538	WITHOUT_CLASSIFICATION	2.3722224621107198E-6	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999967421477967	WITHOUT_CLASSIFICATION	3.257852203481995E-6	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9999978272348975	WITHOUT_CLASSIFICATION	2.1727651026273092E-6	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.999987730211035	WITHOUT_CLASSIFICATION	1.2269788965022436E-5	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999981095450029	WITHOUT_CLASSIFICATION	1.8904549970786195E-6	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999998245664101	WITHOUT_CLASSIFICATION	1.7543358996708896E-7	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999872106305888	WITHOUT_CLASSIFICATION	1.2789369411126301E-5	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999991631066248	WITHOUT_CLASSIFICATION	8.368933751927117E-7	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999899212961	WITHOUT_CLASSIFICATION	1.0078703956254411E-8	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999705751627462	WITHOUT_CLASSIFICATION	2.9424837253782615E-5	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999849880533214	WITHOUT_CLASSIFICATION	1.5011946678576788E-5	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999999370820281	WITHOUT_CLASSIFICATION	6.29179720014599E-8	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9999890080238957	WITHOUT_CLASSIFICATION	1.0991976104204805E-5	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999975383221114	WITHOUT_CLASSIFICATION	2.4616778887451488E-6	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999981006838674	WITHOUT_CLASSIFICATION	1.8993161325262724E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.999992207924569	WITHOUT_CLASSIFICATION	7.792075430986734E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.999992207924569	WITHOUT_CLASSIFICATION	7.792075430986734E-6	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999997322315435	WITHOUT_CLASSIFICATION	2.677684565867432E-7	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999996050034605	WITHOUT_CLASSIFICATION	3.949965394060109E-7	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999959164122042	WITHOUT_CLASSIFICATION	4.083587795811056E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999966405095818	WITHOUT_CLASSIFICATION	3.3594904181956476E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999367516502804	WITHOUT_CLASSIFICATION	6.324834971967438E-5	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999772712837568	WITHOUT_CLASSIFICATION	2.272871624327657E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999493199176525	WITHOUT_CLASSIFICATION	5.068008234757735E-5	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999978850949991	WITHOUT_CLASSIFICATION	2.114905000886734E-6	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999984163723737	WITHOUT_CLASSIFICATION	1.5836276262951116E-6	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999999679724568	WITHOUT_CLASSIFICATION	3.202754314661842E-8	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999989114836668	WITHOUT_CLASSIFICATION	1.0885163331440378E-6	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999742512732563	WITHOUT_CLASSIFICATION	2.5748726743612465E-5	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999965324061472	WITHOUT_CLASSIFICATION	3.4675938527535093E-6	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999993563574118	WITHOUT_CLASSIFICATION	6.436425881980513E-7	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.999890670028731	WITHOUT_CLASSIFICATION	1.093299712689647E-4	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999997789455779	WITHOUT_CLASSIFICATION	2.2105442215777316E-7	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.999999933891806	WITHOUT_CLASSIFICATION	6.610819401480184E-8	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999950016764353	WITHOUT_CLASSIFICATION	4.998323564763055E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.999999704138299	WITHOUT_CLASSIFICATION	2.9586170105796843E-7	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999999081115464	WITHOUT_CLASSIFICATION	9.188845355391145E-8	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999960412611585	WITHOUT_CLASSIFICATION	3.958738841499391E-6	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999998083587311	WITHOUT_CLASSIFICATION	1.9164126891707644E-7	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999984681423728	WITHOUT_CLASSIFICATION	1.5318576271958605E-6	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9999771606888328	WITHOUT_CLASSIFICATION	2.2839311167237772E-5	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999983008823433	WITHOUT_CLASSIFICATION	1.6991176566805773E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999978447291631	WITHOUT_CLASSIFICATION	2.155270836953195E-6	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999996269597742	WITHOUT_CLASSIFICATION	3.7304022586736595E-7	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999989444005374	WITHOUT_CLASSIFICATION	1.05559946264866E-6	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999999590238818	WITHOUT_CLASSIFICATION	4.097611815836321E-8	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999985167297681	WITHOUT_CLASSIFICATION	1.4832702318932034E-6	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9999845653077352	WITHOUT_CLASSIFICATION	1.543469226484494E-5	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999986129967577	WITHOUT_CLASSIFICATION	1.3870032422757987E-6	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999998362525251	WITHOUT_CLASSIFICATION	1.637474748623692E-7	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999844760704	WITHOUT_CLASSIFICATION	1.5523929488280283E-8	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9999959721110356	WITHOUT_CLASSIFICATION	4.027888964395173E-6	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.999998414193898	WITHOUT_CLASSIFICATION	1.5858061020833741E-6	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999978423766481	WITHOUT_CLASSIFICATION	2.1576233518664452E-6	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999995225892058	WITHOUT_CLASSIFICATION	4.774107942558681E-7	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999903985080751	WITHOUT_CLASSIFICATION	9.601491924905008E-6	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9999996531669255	WITHOUT_CLASSIFICATION	3.4683307450880583E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999908682580707	WITHOUT_CLASSIFICATION	9.13174192934038E-6	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999908682580707	WITHOUT_CLASSIFICATION	9.13174192934038E-6	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999995997641833	WITHOUT_CLASSIFICATION	4.002358167194771E-7	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999992724259951	WITHOUT_CLASSIFICATION	7.27574004889583E-7	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9999977149392922	WITHOUT_CLASSIFICATION	2.285060707671763E-6	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999979865089088	WITHOUT_CLASSIFICATION	2.0134910912300904E-6	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999996345886388	WITHOUT_CLASSIFICATION	3.654113611575693E-7	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999998194993502	WITHOUT_CLASSIFICATION	1.8050064971595172E-7	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999947437536104	WITHOUT_CLASSIFICATION	5.256246389509284E-6	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999904571509522	WITHOUT_CLASSIFICATION	9.542849047730083E-6	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999996643654916	WITHOUT_CLASSIFICATION	3.356345083956001E-7	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952165691356	WITHOUT_CLASSIFICATION	4.783430864408441E-6	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999965459673269	WITHOUT_CLASSIFICATION	3.4540326730557624E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999892249202262	WITHOUT_CLASSIFICATION	1.0775079773747972E-5	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999937700749091	WITHOUT_CLASSIFICATION	6.229925090952847E-6	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999995921209911	WITHOUT_CLASSIFICATION	4.0787900883731915E-7	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999998470220075	WITHOUT_CLASSIFICATION	1.52977992597647E-7	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9999563792824855	WITHOUT_CLASSIFICATION	4.362071751452483E-5	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999992446657162	WITHOUT_CLASSIFICATION	7.553342838004054E-7	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999993397303829	WITHOUT_CLASSIFICATION	6.602696170708017E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999884558257526	WITHOUT_CLASSIFICATION	1.1544174247392531E-5	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999997508482708	WITHOUT_CLASSIFICATION	2.49151729258902E-7	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999998044825434	WITHOUT_CLASSIFICATION	1.9551745648061293E-7	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999994320460769	WITHOUT_CLASSIFICATION	5.679539231692077E-7	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999972418779413	WITHOUT_CLASSIFICATION	2.7581220587586833E-6	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9999604029201603	WITHOUT_CLASSIFICATION	3.959707983966099E-5	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.999993736560176	WITHOUT_CLASSIFICATION	6.263439824045851E-6	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999968603816758	WITHOUT_CLASSIFICATION	3.1396183241072106E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999983788519542	WITHOUT_CLASSIFICATION	1.62114804582814E-6	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.999995733431737	WITHOUT_CLASSIFICATION	4.266568262951771E-6	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999943283745928	WITHOUT_CLASSIFICATION	5.671625407202791E-6	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9999995331674552	WITHOUT_CLASSIFICATION	4.668325448525178E-7	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999927332158893	WITHOUT_CLASSIFICATION	7.266784110618918E-6	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999958215716996	WITHOUT_CLASSIFICATION	4.178428300467641E-6	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999998642684481	WITHOUT_CLASSIFICATION	1.357315518892595E-7	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999986694824927	WITHOUT_CLASSIFICATION	1.330517507311726E-6	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999993988706295	WITHOUT_CLASSIFICATION	6.01129370546357E-7	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999994721625655	WITHOUT_CLASSIFICATION	5.278374344463505E-7	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999993375432878	WITHOUT_CLASSIFICATION	6.624567122105885E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999985250471819	WITHOUT_CLASSIFICATION	1.4749528181595687E-6	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999993146614811	WITHOUT_CLASSIFICATION	6.853385189033749E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9999630347255353	WITHOUT_CLASSIFICATION	3.6965274464653664E-5	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999996694414655	WITHOUT_CLASSIFICATION	3.305585345491742E-7	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999963213313448	WITHOUT_CLASSIFICATION	3.678668655336017E-6	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.999999455283592	WITHOUT_CLASSIFICATION	5.447164079904626E-7	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999975717109179	WITHOUT_CLASSIFICATION	2.428289082196438E-6	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.999999552728142	WITHOUT_CLASSIFICATION	4.47271858098676E-7	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9999994633540095	WITHOUT_CLASSIFICATION	5.366459905026263E-7	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999822650338995	WITHOUT_CLASSIFICATION	1.773496610042558E-5	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999975383221114	WITHOUT_CLASSIFICATION	2.4616778887451488E-6	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999999790037263	WITHOUT_CLASSIFICATION	2.099627368505383E-8	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999999109215749	WITHOUT_CLASSIFICATION	8.907842500370206E-8	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9999670724433639	WITHOUT_CLASSIFICATION	3.292755663614112E-5	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999975502648788	WITHOUT_CLASSIFICATION	2.4497351211736738E-6	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9999900684216445	WITHOUT_CLASSIFICATION	9.931578355422577E-6	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999989753411268	WITHOUT_CLASSIFICATION	1.0246588732021485E-6	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9999936389331869	WITHOUT_CLASSIFICATION	6.3610668131251065E-6	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9999447109314876	WITHOUT_CLASSIFICATION	5.528906851230689E-5	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999904004807076	WITHOUT_CLASSIFICATION	9.599519292433702E-6	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999951965466001	WITHOUT_CLASSIFICATION	4.803453399918891E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999552935450466	WITHOUT_CLASSIFICATION	4.4706454953368403E-5	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999908915144109	WITHOUT_CLASSIFICATION	9.1084855890085E-6	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999789011031937	WITHOUT_CLASSIFICATION	2.1098896806384003E-5	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999999280198081	WITHOUT_CLASSIFICATION	7.198019194079791E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999951209161259	WITHOUT_CLASSIFICATION	4.879083874140185E-6	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999955713369787	WITHOUT_CLASSIFICATION	4.428663021358539E-6	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999933600088018	WITHOUT_CLASSIFICATION	6.639991198189072E-6	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999998746592831	WITHOUT_CLASSIFICATION	1.2534071691079726E-7	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999831534987169	WITHOUT_CLASSIFICATION	1.6846501283032513E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999951209161259	WITHOUT_CLASSIFICATION	4.879083874140185E-6	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9999913628005945	WITHOUT_CLASSIFICATION	8.637199405498699E-6	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9999962868363055	WITHOUT_CLASSIFICATION	3.7131636944788054E-6	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.999999950607155	WITHOUT_CLASSIFICATION	4.939284502637318E-8	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999995519828826	WITHOUT_CLASSIFICATION	4.4801711731881397E-7	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999704126058051	WITHOUT_CLASSIFICATION	2.9587394194830406E-5	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999908380350854	WITHOUT_CLASSIFICATION	9.161964914543516E-6	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.999996727389189	WITHOUT_CLASSIFICATION	3.272610811079012E-6	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999941174534891	WITHOUT_CLASSIFICATION	5.8825465108632735E-6	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999927562787001	WITHOUT_CLASSIFICATION	7.24372129980503E-6	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999991568789338	WITHOUT_CLASSIFICATION	8.431210662586522E-7	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999980600369739	WITHOUT_CLASSIFICATION	1.9399630262115096E-6	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9999986201124318	WITHOUT_CLASSIFICATION	1.3798875682792974E-6	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999995736160251	WITHOUT_CLASSIFICATION	4.263839749383215E-7	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.999598937915139	WITHOUT_CLASSIFICATION	4.0106208486100976E-4	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999922211817297	WITHOUT_CLASSIFICATION	7.778818270367921E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999966711862249	WITHOUT_CLASSIFICATION	3.3288137750236003E-6	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999695907510832	WITHOUT_CLASSIFICATION	3.040924891685667E-5	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999881604494606	WITHOUT_CLASSIFICATION	1.1839550539342155E-5	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9999975308077078	WITHOUT_CLASSIFICATION	2.4691922921517676E-6	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999983966937959	WITHOUT_CLASSIFICATION	1.6033062041126613E-6	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999755106307592	WITHOUT_CLASSIFICATION	2.4489369240915972E-5	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999999160497852	WITHOUT_CLASSIFICATION	8.395021476066502E-8	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999995656146641	WITHOUT_CLASSIFICATION	4.343853359323306E-7	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999417743851	WITHOUT_CLASSIFICATION	5.822561491746096E-8	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999998854368501	WITHOUT_CLASSIFICATION	1.1456314991536667E-7	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999997081554031	WITHOUT_CLASSIFICATION	2.9184459689821385E-7	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999998734631023	WITHOUT_CLASSIFICATION	1.2653689777902932E-7	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.999999685646769	WITHOUT_CLASSIFICATION	3.143532310006486E-7	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999917414162921	WITHOUT_CLASSIFICATION	8.25858370794035E-6	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999653972807976	WITHOUT_CLASSIFICATION	3.460271920249729E-5	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999971869027781	WITHOUT_CLASSIFICATION	2.8130972219717566E-6	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999474362521874	WITHOUT_CLASSIFICATION	5.256374781246713E-5	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999936607330862	WITHOUT_CLASSIFICATION	6.339266913868936E-6	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999990566623608	WITHOUT_CLASSIFICATION	9.433376393149876E-7	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999997911532309	WITHOUT_CLASSIFICATION	2.0884676914509698E-7	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999995317196133	WITHOUT_CLASSIFICATION	4.6828038663614216E-7	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999999386056706	WITHOUT_CLASSIFICATION	6.139432940091627E-8	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999998315188257	WITHOUT_CLASSIFICATION	1.6848117431914807E-7	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999997284958739	WITHOUT_CLASSIFICATION	2.715041260505184E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9998736562804649	WITHOUT_CLASSIFICATION	1.2634371953513339E-4	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999970638395748	WITHOUT_CLASSIFICATION	2.936160425384544E-6	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999970638395748	WITHOUT_CLASSIFICATION	2.936160425384544E-6	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999954412615581	WITHOUT_CLASSIFICATION	4.558738441857582E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999996627593584	WITHOUT_CLASSIFICATION	3.3724064169939253E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999998103509802	WITHOUT_CLASSIFICATION	1.8964901987165786E-7	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9985423657531816	WITHOUT_CLASSIFICATION	0.001457634246818445	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999903531644234	WITHOUT_CLASSIFICATION	9.646835576583328E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999903531644234	WITHOUT_CLASSIFICATION	9.646835576583328E-6	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.9998926408606397	WITHOUT_CLASSIFICATION	1.0735913936028133E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.999999042876326	WITHOUT_CLASSIFICATION	9.571236740094838E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9996629352277097	WITHOUT_CLASSIFICATION	3.3706477229032797E-4	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999971539343339	WITHOUT_CLASSIFICATION	2.846065666152918E-6	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999953523063473	WITHOUT_CLASSIFICATION	4.647693652716954E-6	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999890176544853	WITHOUT_CLASSIFICATION	1.0982345514720487E-5	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999915575815442	WITHOUT_CLASSIFICATION	8.442418455844958E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999969612332701	WITHOUT_CLASSIFICATION	3.0387667299308404E-6	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999986871919794	WITHOUT_CLASSIFICATION	1.3128080206799661E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989212246639	WITHOUT_CLASSIFICATION	1.0787753360414399E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989212246639	WITHOUT_CLASSIFICATION	1.0787753360414399E-6	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9999989337405258	WITHOUT_CLASSIFICATION	1.0662594741187811E-6	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999474955912031	WITHOUT_CLASSIFICATION	5.250440879681334E-5	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999858213970266	WITHOUT_CLASSIFICATION	1.4178602973323978E-5	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9999731349857583	WITHOUT_CLASSIFICATION	2.6865014241723375E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998735383459219	WITHOUT_CLASSIFICATION	1.264616540780377E-4	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999990531983727	WITHOUT_CLASSIFICATION	9.468016273071873E-7	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998844701815	WITHOUT_CLASSIFICATION	1.155298185000738E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998735383459219	WITHOUT_CLASSIFICATION	1.264616540780377E-4	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999993949071304	WITHOUT_CLASSIFICATION	6.050928696310189E-7	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9999731021476939	WITHOUT_CLASSIFICATION	2.689785230611365E-5	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999994619900966	WITHOUT_CLASSIFICATION	5.380099033563062E-7	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999947541646081	WITHOUT_CLASSIFICATION	5.245835391932698E-6	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999991568789338	WITHOUT_CLASSIFICATION	8.431210662586522E-7	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999972744489358	WITHOUT_CLASSIFICATION	2.72555106428992E-6	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9999475553860988	WITHOUT_CLASSIFICATION	5.2444613901110626E-5	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999370760371971	WITHOUT_CLASSIFICATION	6.292396280284833E-5	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999773135309186	WITHOUT_CLASSIFICATION	2.2686469081491978E-5	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.999996244412199	WITHOUT_CLASSIFICATION	3.755587800920657E-6	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9999953994110969	WITHOUT_CLASSIFICATION	4.600588903028323E-6	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999808731499056	WITHOUT_CLASSIFICATION	1.912685009437723E-5	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9999996078579403	WITHOUT_CLASSIFICATION	3.9214205964235815E-7	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999782589270078	WITHOUT_CLASSIFICATION	2.1741072992222364E-5	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999701375124229	WITHOUT_CLASSIFICATION	2.9862487577105396E-5	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999701375124229	WITHOUT_CLASSIFICATION	2.9862487577105396E-5	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.999998999637936	WITHOUT_CLASSIFICATION	1.0003620639598242E-6	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999998715442363	WITHOUT_CLASSIFICATION	1.2845576371991878E-7	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997378616382003	WITHOUT_CLASSIFICATION	2.621383617996344E-4	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999982996133222	WITHOUT_CLASSIFICATION	1.700386677720414E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999899334430422	WITHOUT_CLASSIFICATION	1.0066556957780783E-5	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999582033304065	WITHOUT_CLASSIFICATION	4.179666959338423E-5	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999991553029564	WITHOUT_CLASSIFICATION	8.446970435463356E-7	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999998562200477	WITHOUT_CLASSIFICATION	1.437799522355562E-7	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999979256545628	WITHOUT_CLASSIFICATION	2.074345437083086E-6	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999996086448596	WITHOUT_CLASSIFICATION	3.913551404030935E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737000973492	WITHOUT_CLASSIFICATION	2.6299902650854727E-5	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999999424238777	WITHOUT_CLASSIFICATION	5.757612227577111E-8	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.999990386629966	WITHOUT_CLASSIFICATION	9.613370034125394E-6	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999997388167281	WITHOUT_CLASSIFICATION	2.611832718391169E-7	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999997747700862	WITHOUT_CLASSIFICATION	2.2522991385530366E-7	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999922343880412	WITHOUT_CLASSIFICATION	7.765611958805274E-6	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.9999998504211292	WITHOUT_CLASSIFICATION	1.4957887075871885E-7	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999963802819349	WITHOUT_CLASSIFICATION	3.619718064971843E-6	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999953170287478	WITHOUT_CLASSIFICATION	4.682971252172994E-6	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999998873473671	WITHOUT_CLASSIFICATION	1.126526329182864E-7	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999992958678852	WITHOUT_CLASSIFICATION	7.041321148759024E-7	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999998077501665	WITHOUT_CLASSIFICATION	1.9224983355772879E-7	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999994727714047	WITHOUT_CLASSIFICATION	5.272285953577649E-7	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.999999978134334	WITHOUT_CLASSIFICATION	2.186566599014075E-8	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9988089106837825	WITHOUT_CLASSIFICATION	0.0011910893162174379	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9988089106837825	WITHOUT_CLASSIFICATION	0.0011910893162174379	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999948551652328	WITHOUT_CLASSIFICATION	5.144834767218529E-6	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999973367702125	WITHOUT_CLASSIFICATION	2.6632297875577927E-6	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999404755572041	WITHOUT_CLASSIFICATION	5.952444279587172E-5	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999999424374479	WITHOUT_CLASSIFICATION	5.756255210968363E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998307631387462	WITHOUT_CLASSIFICATION	1.6923686125374502E-4	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.9793643966330029	WITHOUT_CLASSIFICATION	0.020635603366997077	DOCUMENTATION
