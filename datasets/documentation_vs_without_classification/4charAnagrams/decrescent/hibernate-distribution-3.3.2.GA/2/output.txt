//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999894924093407	WITHOUT_CLASSIFICATION	1.0507590659425668E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999935542668906	WITHOUT_CLASSIFICATION	6.44573310942607E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999935542668906	WITHOUT_CLASSIFICATION	6.44573310942607E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999935542668906	WITHOUT_CLASSIFICATION	6.44573310942607E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999935542668906	WITHOUT_CLASSIFICATION	6.44573310942607E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999935542668906	WITHOUT_CLASSIFICATION	6.44573310942607E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999935542668906	WITHOUT_CLASSIFICATION	6.44573310942607E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999935542668906	WITHOUT_CLASSIFICATION	6.44573310942607E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999974307256947	WITHOUT_CLASSIFICATION	2.56927430540226E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999974307256947	WITHOUT_CLASSIFICATION	2.56927430540226E-6	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9999575871979983	WITHOUT_CLASSIFICATION	4.2412802001688517E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999962493148541	WITHOUT_CLASSIFICATION	3.750685145945955E-6	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999991620581536	WITHOUT_CLASSIFICATION	8.379418464200181E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999791158610731	WITHOUT_CLASSIFICATION	2.0884138926769935E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999791158610731	WITHOUT_CLASSIFICATION	2.0884138926769935E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999984146853422	WITHOUT_CLASSIFICATION	1.5853146578039618E-6	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999265131585	WITHOUT_CLASSIFICATION	7.348684147804218E-8	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999974653982685	WITHOUT_CLASSIFICATION	2.534601731557699E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999921911884596	WITHOUT_CLASSIFICATION	7.80881154033929E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999975067665207	WITHOUT_CLASSIFICATION	2.4932334793579355E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999975067665207	WITHOUT_CLASSIFICATION	2.4932334793579355E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999953991987811	WITHOUT_CLASSIFICATION	4.600801218861342E-6	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.999995094068811	WITHOUT_CLASSIFICATION	4.905931188960215E-6	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999992718043147	WITHOUT_CLASSIFICATION	7.281956852948718E-7	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.99999923100523	WITHOUT_CLASSIFICATION	7.68994769823893E-7	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.999999991877529	WITHOUT_CLASSIFICATION	8.122471103016815E-9	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999846606760707	WITHOUT_CLASSIFICATION	1.5339323929268395E-5	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9999670645586437	WITHOUT_CLASSIFICATION	3.29354413563874E-5	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999762196102713	WITHOUT_CLASSIFICATION	2.3780389728690315E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999384346072538	WITHOUT_CLASSIFICATION	6.156539274618987E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9996321632912883	WITHOUT_CLASSIFICATION	3.6783670871164804E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999738912420877	WITHOUT_CLASSIFICATION	2.6108757912254605E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999719708502556	WITHOUT_CLASSIFICATION	2.8029149744435224E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999996394904754	WITHOUT_CLASSIFICATION	3.6050952464145944E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999632392733802	WITHOUT_CLASSIFICATION	3.676072661987269E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999632392733802	WITHOUT_CLASSIFICATION	3.676072661987269E-5	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.999999927489474	WITHOUT_CLASSIFICATION	7.25105259557397E-8	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999581359466635	WITHOUT_CLASSIFICATION	4.1864053336438874E-5	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999992391013367	WITHOUT_CLASSIFICATION	7.608986632409278E-7	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999999759828376	WITHOUT_CLASSIFICATION	2.4017162377355168E-8	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9998626854036446	WITHOUT_CLASSIFICATION	1.3731459635523736E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9900281998726481	DOCUMENTATION	0.009971800127352002	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9900281998726481	DOCUMENTATION	0.009971800127352002	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999998904578222	WITHOUT_CLASSIFICATION	1.095421778126578E-7	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999996296424969	WITHOUT_CLASSIFICATION	3.703575031279468E-7	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999999378690789	WITHOUT_CLASSIFICATION	6.21309210707685E-8	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999981393096256	WITHOUT_CLASSIFICATION	1.8606903744134546E-6	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999927676982072	WITHOUT_CLASSIFICATION	7.23230179280925E-6	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999937054390918	WITHOUT_CLASSIFICATION	6.294560908161785E-6	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955571971304	WITHOUT_CLASSIFICATION	4.442802869601064E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999823022317088	WITHOUT_CLASSIFICATION	1.7697768291149874E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9998764403696918	WITHOUT_CLASSIFICATION	1.2355963030812148E-4	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.999999979337943	WITHOUT_CLASSIFICATION	2.0662057028583006E-8	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.999944099553654	WITHOUT_CLASSIFICATION	5.590044634610442E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9998764403696918	WITHOUT_CLASSIFICATION	1.2355963030812148E-4	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.999944099553654	WITHOUT_CLASSIFICATION	5.590044634610442E-5	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999867774126361	WITHOUT_CLASSIFICATION	1.3222587363935907E-5	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9999992582009444	WITHOUT_CLASSIFICATION	7.417990555753904E-7	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999994546017781	WITHOUT_CLASSIFICATION	5.453982219007786E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999999586340662	WITHOUT_CLASSIFICATION	4.136593380480025E-8	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999984541113648	WITHOUT_CLASSIFICATION	1.5458886351087777E-6	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999999327779474	WITHOUT_CLASSIFICATION	6.722205257996312E-8	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9997125586176719	WITHOUT_CLASSIFICATION	2.8744138232803483E-4	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999665807109721	WITHOUT_CLASSIFICATION	3.3419289027923095E-5	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999999653216678	WITHOUT_CLASSIFICATION	3.4678332203510744E-8	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.999990635212945	WITHOUT_CLASSIFICATION	9.364787055065542E-6	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999993548984585	WITHOUT_CLASSIFICATION	6.451015414938395E-7	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999898791387951	WITHOUT_CLASSIFICATION	1.012086120497122E-5	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999510313793	WITHOUT_CLASSIFICATION	4.8968620712359736E-8	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999990426261827	WITHOUT_CLASSIFICATION	9.573738172972028E-7	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999999009110125	WITHOUT_CLASSIFICATION	9.908898749971045E-8	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.999999945610221	WITHOUT_CLASSIFICATION	5.438977900266747E-8	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999992285815299	WITHOUT_CLASSIFICATION	7.714184700876723E-7	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999997078371179	WITHOUT_CLASSIFICATION	2.9216288209854113E-7	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999993305755904	WITHOUT_CLASSIFICATION	6.69424409514471E-7	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999987758275203	WITHOUT_CLASSIFICATION	1.224172479663315E-6	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999990311290925	WITHOUT_CLASSIFICATION	9.688709075089306E-7	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999999222262297	WITHOUT_CLASSIFICATION	7.777377023539296E-8	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.999998466595353	WITHOUT_CLASSIFICATION	1.533404647051027E-6	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.999999026857116	WITHOUT_CLASSIFICATION	9.73142884119552E-7	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9999998627129376	WITHOUT_CLASSIFICATION	1.3728706229112085E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999967395314292	WITHOUT_CLASSIFICATION	3.2604685708936245E-6	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.99999963013104	WITHOUT_CLASSIFICATION	3.698689600043063E-7	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.999999576309699	WITHOUT_CLASSIFICATION	4.2369030097264214E-7	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999990867708157	WITHOUT_CLASSIFICATION	9.132291841994091E-7	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999998754858563	WITHOUT_CLASSIFICATION	1.2451414366357942E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999977582847115	WITHOUT_CLASSIFICATION	2.2417152885152574E-6	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999994284138434	WITHOUT_CLASSIFICATION	5.715861565721618E-7	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999950139443167	WITHOUT_CLASSIFICATION	4.9860556833836185E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.999999040567675	WITHOUT_CLASSIFICATION	9.594323250391451E-7	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999993121914135	WITHOUT_CLASSIFICATION	6.878085865475949E-7	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999826584190044	WITHOUT_CLASSIFICATION	1.7341580995606645E-5	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.999999040567675	WITHOUT_CLASSIFICATION	9.594323250391451E-7	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999999927788825	WITHOUT_CLASSIFICATION	7.2211174791572174E-9	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.999999988905428	WITHOUT_CLASSIFICATION	1.1094572062616841E-8	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999932714402118	WITHOUT_CLASSIFICATION	6.728559788271776E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999959115198714	WITHOUT_CLASSIFICATION	4.0884801285894196E-6	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.9999989513178432	WITHOUT_CLASSIFICATION	1.0486821568310322E-6	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9995674363043365	WITHOUT_CLASSIFICATION	4.325636956633687E-4	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9995674363043365	WITHOUT_CLASSIFICATION	4.325636956633687E-4	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999716038677752	WITHOUT_CLASSIFICATION	2.8396132224878057E-5	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999979302211938	WITHOUT_CLASSIFICATION	2.069778806262705E-6	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9999741806232774	WITHOUT_CLASSIFICATION	2.5819376722651837E-5	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999994041956832	WITHOUT_CLASSIFICATION	5.958043167313437E-7	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.999999732610041	WITHOUT_CLASSIFICATION	2.6738995887123005E-7	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999993916331791	WITHOUT_CLASSIFICATION	6.083668209039166E-7	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999983317546947	WITHOUT_CLASSIFICATION	1.6682453052959257E-6	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999981696460688	WITHOUT_CLASSIFICATION	1.8303539312752806E-6	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999996339842857	WITHOUT_CLASSIFICATION	3.6601571430109116E-7	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999993279809606	WITHOUT_CLASSIFICATION	6.720190394552749E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999985854780782	WITHOUT_CLASSIFICATION	1.4145219218046044E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999985854780782	WITHOUT_CLASSIFICATION	1.4145219218046044E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999969086559283	WITHOUT_CLASSIFICATION	3.091344071715612E-6	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999978987332867	WITHOUT_CLASSIFICATION	2.1012667132852646E-6	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9999993278254274	WITHOUT_CLASSIFICATION	6.721745725710818E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999985854780782	WITHOUT_CLASSIFICATION	1.4145219218046044E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999969086559283	WITHOUT_CLASSIFICATION	3.091344071715612E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999969086559283	WITHOUT_CLASSIFICATION	3.091344071715612E-6	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.999999857333696	WITHOUT_CLASSIFICATION	1.426663039435365E-7	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999989617080701	WITHOUT_CLASSIFICATION	1.0382919298667022E-6	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.999999645204117	WITHOUT_CLASSIFICATION	3.547958829838282E-7	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999986919949628	WITHOUT_CLASSIFICATION	1.3080050371230931E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999972133897296	WITHOUT_CLASSIFICATION	2.786610270494873E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999972133897296	WITHOUT_CLASSIFICATION	2.786610270494873E-6	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999919741160038	WITHOUT_CLASSIFICATION	8.025883996241459E-6	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999929121452237	WITHOUT_CLASSIFICATION	7.0878547761945455E-6	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999974272677684	WITHOUT_CLASSIFICATION	2.5727322315809457E-6	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999992372744853	WITHOUT_CLASSIFICATION	7.627255147201783E-7	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999992372744853	WITHOUT_CLASSIFICATION	7.627255147201783E-7	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999548364945049	WITHOUT_CLASSIFICATION	4.5163505495081626E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999989374729131	WITHOUT_CLASSIFICATION	1.0625270869000934E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999984365617052	WITHOUT_CLASSIFICATION	1.5634382949167509E-6	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.999999974073539	WITHOUT_CLASSIFICATION	2.5926460996033588E-8	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999905487905766	WITHOUT_CLASSIFICATION	9.451209423408062E-6	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.99999892294676	WITHOUT_CLASSIFICATION	1.0770532400244956E-6	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.999993295218368	WITHOUT_CLASSIFICATION	6.704781631965626E-6	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999979562949558	WITHOUT_CLASSIFICATION	2.0437050442515316E-6	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9999975616885274	WITHOUT_CLASSIFICATION	2.4383114725767178E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999984365617052	WITHOUT_CLASSIFICATION	1.5634382949167509E-6	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9998752895428815	WITHOUT_CLASSIFICATION	1.2471045711844338E-4	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999913158582879	WITHOUT_CLASSIFICATION	8.684141712123646E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999913158582879	WITHOUT_CLASSIFICATION	8.684141712123646E-6	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999999727987652	WITHOUT_CLASSIFICATION	2.720123478693652E-8	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999999096487452	WITHOUT_CLASSIFICATION	9.035125478062324E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999995528561472	WITHOUT_CLASSIFICATION	4.4714385287247937E-7	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9995822593859253	WITHOUT_CLASSIFICATION	4.1774061407468785E-4	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9999875029249709	WITHOUT_CLASSIFICATION	1.2497075029179796E-5	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9999357897214873	WITHOUT_CLASSIFICATION	6.421027851269523E-5	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.9999921071342663	WITHOUT_CLASSIFICATION	7.892865733588435E-6	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999984074367347	WITHOUT_CLASSIFICATION	1.5925632652162279E-6	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999996164379024	WITHOUT_CLASSIFICATION	3.8356209764404914E-7	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999996164379024	WITHOUT_CLASSIFICATION	3.8356209764404914E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999449738473483	WITHOUT_CLASSIFICATION	5.502615265166421E-5	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999894924093407	WITHOUT_CLASSIFICATION	1.0507590659425668E-5	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999991108974352	WITHOUT_CLASSIFICATION	8.891025647079878E-7	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999935542668906	WITHOUT_CLASSIFICATION	6.44573310942607E-6	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999833704886477	WITHOUT_CLASSIFICATION	1.662951135234709E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999974307256947	WITHOUT_CLASSIFICATION	2.56927430540226E-6	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999977669982444	WITHOUT_CLASSIFICATION	2.2330017556313967E-6	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999975962687575	WITHOUT_CLASSIFICATION	2.4037312424923887E-6	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999986357224137	WITHOUT_CLASSIFICATION	1.3642775863431233E-6	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999979112557654	WITHOUT_CLASSIFICATION	2.0887442346505456E-6	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999992031805126	WITHOUT_CLASSIFICATION	7.968194873752684E-7	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9999771762855691	WITHOUT_CLASSIFICATION	2.282371443082415E-5	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999822644686308	WITHOUT_CLASSIFICATION	1.7735531369212573E-5	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999980896322423	WITHOUT_CLASSIFICATION	1.910367757594899E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999962493148541	WITHOUT_CLASSIFICATION	3.750685145945955E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999962980842818	WITHOUT_CLASSIFICATION	3.7019157180893503E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999962980842818	WITHOUT_CLASSIFICATION	3.7019157180893503E-6	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9999986065587736	WITHOUT_CLASSIFICATION	1.3934412264130507E-6	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9999548082673111	WITHOUT_CLASSIFICATION	4.519173268897047E-5	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999998276993345	WITHOUT_CLASSIFICATION	1.7230066549890593E-7	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999974996919299	WITHOUT_CLASSIFICATION	2.50030807018289E-6	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999980475020227	WITHOUT_CLASSIFICATION	1.9524979774180668E-6	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.999999319705371	WITHOUT_CLASSIFICATION	6.802946288916119E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999791158610731	WITHOUT_CLASSIFICATION	2.0884138926769935E-5	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999997970047703	WITHOUT_CLASSIFICATION	2.0299522979094468E-7	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999741128436217	WITHOUT_CLASSIFICATION	2.5887156378325973E-5	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999982801433118	WITHOUT_CLASSIFICATION	1.7198566882077584E-6	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999985955858942	WITHOUT_CLASSIFICATION	1.4044141058051972E-6	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999933986221358	WITHOUT_CLASSIFICATION	6.601377864223153E-6	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.999994501971828	WITHOUT_CLASSIFICATION	5.498028172010492E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999895103515332	WITHOUT_CLASSIFICATION	1.0489648466901537E-5	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999984263203721	WITHOUT_CLASSIFICATION	1.5736796279186718E-6	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999967121727591	WITHOUT_CLASSIFICATION	3.287827240848996E-6	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999837486392731	WITHOUT_CLASSIFICATION	1.6251360726916908E-5	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999995756159422	WITHOUT_CLASSIFICATION	4.2438405768940884E-7	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.9999998461227989	WITHOUT_CLASSIFICATION	1.5387720098637916E-7	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999935542668906	WITHOUT_CLASSIFICATION	6.44573310942607E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999935542668906	WITHOUT_CLASSIFICATION	6.44573310942607E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999974307256947	WITHOUT_CLASSIFICATION	2.56927430540226E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999974307256947	WITHOUT_CLASSIFICATION	2.56927430540226E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999822644686308	WITHOUT_CLASSIFICATION	1.7735531369212573E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999962980842818	WITHOUT_CLASSIFICATION	3.7019157180893503E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999895103515332	WITHOUT_CLASSIFICATION	1.0489648466901537E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999984146853422	WITHOUT_CLASSIFICATION	1.5853146578039618E-6	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999984803598992	WITHOUT_CLASSIFICATION	1.5196401008048177E-6	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999957732534128	WITHOUT_CLASSIFICATION	4.226746587193377E-6	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999965112414737	WITHOUT_CLASSIFICATION	3.488758526328193E-6	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.999995298648442	WITHOUT_CLASSIFICATION	4.7013515578450525E-6	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999954788473197	WITHOUT_CLASSIFICATION	4.521152680354244E-6	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9999923811471589	WITHOUT_CLASSIFICATION	7.618852841071859E-6	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999949264874363	WITHOUT_CLASSIFICATION	5.073512563769171E-6	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.999939396956021	WITHOUT_CLASSIFICATION	6.060304397911436E-5	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999913086748401	WITHOUT_CLASSIFICATION	8.691325159997835E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999867421804848	WITHOUT_CLASSIFICATION	1.3257819515218789E-5	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999867421804848	WITHOUT_CLASSIFICATION	1.3257819515218789E-5	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999997181410268	WITHOUT_CLASSIFICATION	2.8185897308623033E-7	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999995719652456	WITHOUT_CLASSIFICATION	4.280347543309687E-7	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9999871819907575	WITHOUT_CLASSIFICATION	1.2818009242378743E-5	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999982423715874	WITHOUT_CLASSIFICATION	1.7576284125364976E-6	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999994221625049	WITHOUT_CLASSIFICATION	5.778374950065514E-7	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999995603473183	WITHOUT_CLASSIFICATION	4.3965268171682194E-7	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999993685334356	WITHOUT_CLASSIFICATION	6.31466564454046E-7	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999265131585	WITHOUT_CLASSIFICATION	7.348684147804218E-8	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999959908878734	WITHOUT_CLASSIFICATION	4.009112126601739E-6	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.999996857292647	WITHOUT_CLASSIFICATION	3.1427073530941523E-6	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.999996857292647	WITHOUT_CLASSIFICATION	3.1427073530941523E-6	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999972886639711	WITHOUT_CLASSIFICATION	2.711336028819901E-6	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999987596480336	WITHOUT_CLASSIFICATION	1.2403519663795979E-6	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999961221396279	WITHOUT_CLASSIFICATION	3.877860372167495E-6	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999992029715025	WITHOUT_CLASSIFICATION	7.970284975014021E-7	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999785763189646	WITHOUT_CLASSIFICATION	2.142368103539564E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999974307256947	WITHOUT_CLASSIFICATION	2.56927430540226E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999822644686308	WITHOUT_CLASSIFICATION	1.7735531369212573E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999962493148541	WITHOUT_CLASSIFICATION	3.750685145945955E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999895103515332	WITHOUT_CLASSIFICATION	1.0489648466901537E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999895103515332	WITHOUT_CLASSIFICATION	1.0489648466901537E-5	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999242473085	WITHOUT_CLASSIFICATION	7.575269146438831E-8	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999242473085	WITHOUT_CLASSIFICATION	7.575269146438831E-8	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999994822280495	WITHOUT_CLASSIFICATION	5.177719504700075E-7	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999965045260045	WITHOUT_CLASSIFICATION	3.495473995350022E-6	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999965045260045	WITHOUT_CLASSIFICATION	3.495473995350022E-6	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999974178526624	WITHOUT_CLASSIFICATION	2.5821473376717123E-6	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.9999974642236276	WITHOUT_CLASSIFICATION	2.535776372399909E-6	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999983577166758	WITHOUT_CLASSIFICATION	1.642283324233578E-6	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.999998629321791	WITHOUT_CLASSIFICATION	1.3706782091003619E-6	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999997749820524	WITHOUT_CLASSIFICATION	2.250179475321173E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999921911884596	WITHOUT_CLASSIFICATION	7.80881154033929E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999921911884596	WITHOUT_CLASSIFICATION	7.80881154033929E-6	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.999994113968868	WITHOUT_CLASSIFICATION	5.886031132163752E-6	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999922209176234	WITHOUT_CLASSIFICATION	7.779082376628621E-6	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.999996518415742	WITHOUT_CLASSIFICATION	3.4815842579349353E-6	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.999988285134939	WITHOUT_CLASSIFICATION	1.1714865061155841E-5	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999950654175017	WITHOUT_CLASSIFICATION	4.934582498326695E-6	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9999913056358105	WITHOUT_CLASSIFICATION	8.694364189562718E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999975067665207	WITHOUT_CLASSIFICATION	2.4932334793579355E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999933670533233	WITHOUT_CLASSIFICATION	6.632946676673579E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999933670533233	WITHOUT_CLASSIFICATION	6.632946676673579E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999953991987811	WITHOUT_CLASSIFICATION	4.600801218861342E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999953991987811	WITHOUT_CLASSIFICATION	4.600801218861342E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999829081184747	WITHOUT_CLASSIFICATION	1.7091881525308092E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999829081184747	WITHOUT_CLASSIFICATION	1.7091881525308092E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999991662130951	WITHOUT_CLASSIFICATION	8.337869048526882E-7	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999991662130951	WITHOUT_CLASSIFICATION	8.337869048526882E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999921911884596	WITHOUT_CLASSIFICATION	7.80881154033929E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999975067665207	WITHOUT_CLASSIFICATION	2.4932334793579355E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999933670533233	WITHOUT_CLASSIFICATION	6.632946676673579E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999933670533233	WITHOUT_CLASSIFICATION	6.632946676673579E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999953991987811	WITHOUT_CLASSIFICATION	4.600801218861342E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999829081184747	WITHOUT_CLASSIFICATION	1.7091881525308092E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999829081184747	WITHOUT_CLASSIFICATION	1.7091881525308092E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999991662130951	WITHOUT_CLASSIFICATION	8.337869048526882E-7	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999981694798449	WITHOUT_CLASSIFICATION	1.8305201551005575E-6	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9999650070145462	WITHOUT_CLASSIFICATION	3.499298545377944E-5	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.9999648441762381	WITHOUT_CLASSIFICATION	3.515582376185917E-5	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.999996730114903	WITHOUT_CLASSIFICATION	3.2698850970181306E-6	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999934053602404	WITHOUT_CLASSIFICATION	6.594639759588763E-6	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999818696486995	WITHOUT_CLASSIFICATION	1.8130351300501494E-5	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.999992062359575	WITHOUT_CLASSIFICATION	7.937640424852522E-6	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9999999644472235	WITHOUT_CLASSIFICATION	3.555277660397978E-8	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999977042847116	WITHOUT_CLASSIFICATION	2.2957152884957585E-6	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999999915831849	WITHOUT_CLASSIFICATION	8.416815041412408E-9	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999997939672236	WITHOUT_CLASSIFICATION	2.0603277642620843E-7	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999999103767194	WITHOUT_CLASSIFICATION	8.962328055108505E-8	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999716038677752	WITHOUT_CLASSIFICATION	2.8396132224878057E-5	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999818696486995	WITHOUT_CLASSIFICATION	1.8130351300501494E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9997583932424653	WITHOUT_CLASSIFICATION	2.4160675753468825E-4	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9997583932424653	WITHOUT_CLASSIFICATION	2.4160675753468825E-4	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.999999600332053	WITHOUT_CLASSIFICATION	3.9966794696696174E-7	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999981587909504	WITHOUT_CLASSIFICATION	1.841209049532979E-6	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999981587909504	WITHOUT_CLASSIFICATION	1.841209049532979E-6	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999985500248643	WITHOUT_CLASSIFICATION	1.4499751357879467E-6	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999992258954683	WITHOUT_CLASSIFICATION	7.741045317327948E-7	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999998644827195	WITHOUT_CLASSIFICATION	1.3551728042953651E-7	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999976515095613	WITHOUT_CLASSIFICATION	2.3484904386629984E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999976515095613	WITHOUT_CLASSIFICATION	2.3484904386629984E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.999999991877529	WITHOUT_CLASSIFICATION	8.122471103016815E-9	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999999551467352	WITHOUT_CLASSIFICATION	4.485326480734074E-8	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999999551467352	WITHOUT_CLASSIFICATION	4.485326480734074E-8	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999972934499809	WITHOUT_CLASSIFICATION	2.7065500189945736E-6	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999997906570867	WITHOUT_CLASSIFICATION	2.0934291346229192E-7	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999994226212312	WITHOUT_CLASSIFICATION	5.773787687001563E-7	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999645292453264	WITHOUT_CLASSIFICATION	3.5470754673685405E-5	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999835890123244	WITHOUT_CLASSIFICATION	1.6410987675575905E-5	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.999983674809304	WITHOUT_CLASSIFICATION	1.632519069599969E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999846606760707	WITHOUT_CLASSIFICATION	1.5339323929268395E-5	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999790968864884	WITHOUT_CLASSIFICATION	2.0903113511579283E-5	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9981122957379243	WITHOUT_CLASSIFICATION	0.0018877042620756958	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.999966863180632	WITHOUT_CLASSIFICATION	3.313681936805365E-5	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999750881882346	WITHOUT_CLASSIFICATION	2.491181176548632E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999384346072538	WITHOUT_CLASSIFICATION	6.156539274618987E-5	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999968231664167	WITHOUT_CLASSIFICATION	3.176833583347702E-6	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999981916591533	WITHOUT_CLASSIFICATION	1.8083408467141132E-6	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999998755243814	WITHOUT_CLASSIFICATION	1.244756185718908E-7	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999384346072538	WITHOUT_CLASSIFICATION	6.156539274618987E-5	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999998355609084	WITHOUT_CLASSIFICATION	1.644390916282018E-7	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999987902244235	WITHOUT_CLASSIFICATION	1.2097755764567087E-6	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999769185778922	WITHOUT_CLASSIFICATION	2.3081422107861446E-5	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.9999690782207005	WITHOUT_CLASSIFICATION	3.0921779299552445E-5	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999668067854501	WITHOUT_CLASSIFICATION	3.319321454985475E-5	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999771697488544	WITHOUT_CLASSIFICATION	2.283025114557734E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999598485912878	WITHOUT_CLASSIFICATION	4.0151408712041054E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999719708502556	WITHOUT_CLASSIFICATION	2.8029149744435224E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999615604046888	WITHOUT_CLASSIFICATION	3.843959531121476E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999996394904754	WITHOUT_CLASSIFICATION	3.6050952464145944E-7	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.999988796211229	WITHOUT_CLASSIFICATION	1.1203788771061068E-5	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.999997680637265	WITHOUT_CLASSIFICATION	2.319362734888731E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999772822993518	WITHOUT_CLASSIFICATION	2.2717700648151544E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999846606760707	WITHOUT_CLASSIFICATION	1.5339323929268395E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999615604046888	WITHOUT_CLASSIFICATION	3.843959531121476E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.999988796211229	WITHOUT_CLASSIFICATION	1.1203788771061068E-5	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999772822993518	WITHOUT_CLASSIFICATION	2.2717700648151544E-5	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999993117404149	WITHOUT_CLASSIFICATION	6.882595850204986E-7	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999639464223693	WITHOUT_CLASSIFICATION	3.605357763064888E-5	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999991430890047	WITHOUT_CLASSIFICATION	8.569109952293146E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999632392733802	WITHOUT_CLASSIFICATION	3.676072661987269E-5	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999907332220941	WITHOUT_CLASSIFICATION	9.266777905811272E-6	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.9999965774598272	WITHOUT_CLASSIFICATION	3.4225401727707266E-6	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.9999583835021193	WITHOUT_CLASSIFICATION	4.161649788066431E-5	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999990361428671	WITHOUT_CLASSIFICATION	9.638571328972744E-7	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999897588582739	WITHOUT_CLASSIFICATION	1.0241141726123375E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999998867672972	WITHOUT_CLASSIFICATION	1.1323270269855097E-7	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999993278501392	WITHOUT_CLASSIFICATION	6.721498607200165E-7	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999995198966914	WITHOUT_CLASSIFICATION	4.801033086336271E-7	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999995256630605	WITHOUT_CLASSIFICATION	4.7433693948594504E-7	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999991407082517	WITHOUT_CLASSIFICATION	8.592917483699182E-7	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999842937130905	WITHOUT_CLASSIFICATION	1.5706286909466825E-5	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999781582714198	WITHOUT_CLASSIFICATION	2.184172858019124E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999581359466635	WITHOUT_CLASSIFICATION	4.1864053336438874E-5	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999995420175083	WITHOUT_CLASSIFICATION	4.5798249160543555E-7	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999615354757616	WITHOUT_CLASSIFICATION	3.8464524238415146E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999615604046888	WITHOUT_CLASSIFICATION	3.843959531121476E-5	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999997312748183	WITHOUT_CLASSIFICATION	2.687251816545654E-7	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999986185169278	WITHOUT_CLASSIFICATION	1.3814830722492035E-6	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.999998535544	WITHOUT_CLASSIFICATION	1.464456000039282E-6	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9999999094769615	WITHOUT_CLASSIFICATION	9.05230385307379E-8	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999980834947912	WITHOUT_CLASSIFICATION	1.9165052087568265E-6	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999962258745976	WITHOUT_CLASSIFICATION	3.774125402318959E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999998702648518	WITHOUT_CLASSIFICATION	1.2973514815173007E-7	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999994678877527	WITHOUT_CLASSIFICATION	5.321122471410043E-7	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999317053964224	WITHOUT_CLASSIFICATION	6.829460357762418E-5	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999475388310191	WITHOUT_CLASSIFICATION	5.246116898096204E-5	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999867050819387	WITHOUT_CLASSIFICATION	1.3294918061349468E-5	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999863785337234	WITHOUT_CLASSIFICATION	1.362146627649787E-5	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9999985140138485	WITHOUT_CLASSIFICATION	1.4859861514691894E-6	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999999759828376	WITHOUT_CLASSIFICATION	2.4017162377355168E-8	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999979289090657	WITHOUT_CLASSIFICATION	2.07109093430773E-6	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999990440817745	WITHOUT_CLASSIFICATION	9.559182254769848E-7	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9999884711391149	WITHOUT_CLASSIFICATION	1.1528860885194212E-5	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999965718787609	WITHOUT_CLASSIFICATION	3.4281212391480816E-6	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999992733854938	WITHOUT_CLASSIFICATION	7.26614506207079E-7	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999998256378543	WITHOUT_CLASSIFICATION	1.743621458129397E-7	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.999999997458938	WITHOUT_CLASSIFICATION	2.541062084648243E-9	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999997643008369	WITHOUT_CLASSIFICATION	2.356991631191154E-7	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999995358847296	WITHOUT_CLASSIFICATION	4.641152704205812E-7	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9999871754668463	WITHOUT_CLASSIFICATION	1.2824533153653404E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999809244581697	WITHOUT_CLASSIFICATION	1.907554183034938E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999809244581697	WITHOUT_CLASSIFICATION	1.907554183034938E-5	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999663742100109	WITHOUT_CLASSIFICATION	3.3625789989095906E-5	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999991968687698	WITHOUT_CLASSIFICATION	8.031312301818873E-7	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.999993676695232	WITHOUT_CLASSIFICATION	6.323304767935982E-6	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999938478747014	WITHOUT_CLASSIFICATION	6.152125298680147E-6	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.999989348556867	WITHOUT_CLASSIFICATION	1.0651443133018815E-5	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.999995802235196	WITHOUT_CLASSIFICATION	4.1977648039438515E-6	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999988380197876	WITHOUT_CLASSIFICATION	1.1619802124278053E-6	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999988998951103	WITHOUT_CLASSIFICATION	1.1001048897876753E-6	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9999782240662675	WITHOUT_CLASSIFICATION	2.1775933732540642E-5	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999946475299664	WITHOUT_CLASSIFICATION	5.352470033634994E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.9999759414568066	WITHOUT_CLASSIFICATION	2.4058543193453642E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999982526314755	WITHOUT_CLASSIFICATION	1.7473685246090448E-6	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9999933913556109	WITHOUT_CLASSIFICATION	6.608644389085583E-6	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.999999006448711	WITHOUT_CLASSIFICATION	9.935512890368965E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990226167622	WITHOUT_CLASSIFICATION	9.773832378722756E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990706176481	WITHOUT_CLASSIFICATION	9.293823518099373E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999999082798344	WITHOUT_CLASSIFICATION	9.172016558619028E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999991971668806	WITHOUT_CLASSIFICATION	8.028331193210356E-7	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9999988463164535	WITHOUT_CLASSIFICATION	1.1536835465668608E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999972495408141	WITHOUT_CLASSIFICATION	2.750459185790441E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999900995379891	WITHOUT_CLASSIFICATION	9.900462010967119E-6	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999900995379891	WITHOUT_CLASSIFICATION	9.900462010967119E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999493158741175	WITHOUT_CLASSIFICATION	5.06841258825266E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999493158741175	WITHOUT_CLASSIFICATION	5.06841258825266E-5	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999995358847296	WITHOUT_CLASSIFICATION	4.641152704205812E-7	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999973791355964	WITHOUT_CLASSIFICATION	2.620864403703753E-6	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999975316932108	WITHOUT_CLASSIFICATION	2.4683067892584006E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999998393383546	WITHOUT_CLASSIFICATION	1.6066164542515588E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999449738473483	WITHOUT_CLASSIFICATION	5.502615265166421E-5	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999975316932108	WITHOUT_CLASSIFICATION	2.4683067892584006E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999998393383546	WITHOUT_CLASSIFICATION	1.6066164542515588E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999986447023968	WITHOUT_CLASSIFICATION	1.3552976032112666E-5	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999958267520335	WITHOUT_CLASSIFICATION	4.173247966542445E-6	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999998796798183	WITHOUT_CLASSIFICATION	1.2032018170824793E-7	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999996662235267	WITHOUT_CLASSIFICATION	3.33776473356123E-7	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.999999539909956	WITHOUT_CLASSIFICATION	4.600900439089146E-7	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9999714492515851	WITHOUT_CLASSIFICATION	2.8550748414854727E-5	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999982476075284	WITHOUT_CLASSIFICATION	1.7523924715011393E-6	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999904943128624	WITHOUT_CLASSIFICATION	9.505687137695249E-6	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999953522609106	WITHOUT_CLASSIFICATION	4.647739089374229E-6	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999995692898211	WITHOUT_CLASSIFICATION	4.307101789439352E-7	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999992584962997	WITHOUT_CLASSIFICATION	7.415037003618787E-7	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999998036084117	WITHOUT_CLASSIFICATION	1.9639158835646467E-7	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999997631220376	WITHOUT_CLASSIFICATION	2.3687796236900922E-7	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9999933911221879	WITHOUT_CLASSIFICATION	6.608877812118106E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999449738473483	WITHOUT_CLASSIFICATION	5.502615265166421E-5	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9999946772240546	WITHOUT_CLASSIFICATION	5.322775945431949E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999877408917445	WITHOUT_CLASSIFICATION	1.2259108255583055E-5	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999877408917445	WITHOUT_CLASSIFICATION	1.2259108255583055E-5	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999996537022151	WITHOUT_CLASSIFICATION	3.4629778484424635E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999986447023968	WITHOUT_CLASSIFICATION	1.3552976032112666E-5	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9999942910302335	WITHOUT_CLASSIFICATION	5.70896976646869E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999998802533809	WITHOUT_CLASSIFICATION	1.197466190770382E-7	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9999962372425497	WITHOUT_CLASSIFICATION	3.7627574502460764E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999980534957914	WITHOUT_CLASSIFICATION	1.946504208624614E-6	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999964064788265	WITHOUT_CLASSIFICATION	3.5935211734658415E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999986447023968	WITHOUT_CLASSIFICATION	1.3552976032112666E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999980534957914	WITHOUT_CLASSIFICATION	1.946504208624614E-6	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999964064788265	WITHOUT_CLASSIFICATION	3.5935211734658415E-6	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9999717664620689	WITHOUT_CLASSIFICATION	2.8233537931082086E-5	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999977405461637	WITHOUT_CLASSIFICATION	2.2594538362622464E-6	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999953139525991	WITHOUT_CLASSIFICATION	4.686047400888454E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999986447023968	WITHOUT_CLASSIFICATION	1.3552976032112666E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999986447023968	WITHOUT_CLASSIFICATION	1.3552976032112666E-5	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999936662691523	WITHOUT_CLASSIFICATION	6.333730847716004E-6	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999981792791154	WITHOUT_CLASSIFICATION	1.8207208845120923E-6	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999842047351348	WITHOUT_CLASSIFICATION	1.5795264865145438E-5	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999997501851723	WITHOUT_CLASSIFICATION	2.498148277634976E-7	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999880776172752	WITHOUT_CLASSIFICATION	1.1922382724857774E-5	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999999517514684	WITHOUT_CLASSIFICATION	4.8248531515105336E-8	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999999343158956	WITHOUT_CLASSIFICATION	6.568410445407366E-8	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999991692373879	WITHOUT_CLASSIFICATION	8.307626121929123E-7	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999981601195476	WITHOUT_CLASSIFICATION	1.8398804523869873E-6	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9999940709649947	WITHOUT_CLASSIFICATION	5.92903500524876E-6	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999946271702723	WITHOUT_CLASSIFICATION	5.3728297276607335E-6	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999989964653921	WITHOUT_CLASSIFICATION	1.0035346078837375E-6	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999993822891776	WITHOUT_CLASSIFICATION	6.177108224562039E-7	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9999992464713217	WITHOUT_CLASSIFICATION	7.535286784060704E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963119016924	WITHOUT_CLASSIFICATION	3.6880983075474838E-6	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999999936164251	WITHOUT_CLASSIFICATION	6.383574824916076E-9	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999981393096256	WITHOUT_CLASSIFICATION	1.8606903744134546E-6	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9999412757383687	WITHOUT_CLASSIFICATION	5.872426163125289E-5	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9997628698858885	WITHOUT_CLASSIFICATION	2.371301141114616E-4	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9999995033162036	WITHOUT_CLASSIFICATION	4.966837963957767E-7	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999909094395536	WITHOUT_CLASSIFICATION	9.09056044644077E-6	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999726280394651	WITHOUT_CLASSIFICATION	2.7371960534887763E-5	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999726280394651	WITHOUT_CLASSIFICATION	2.7371960534887763E-5	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999981393096256	WITHOUT_CLASSIFICATION	1.8606903744134546E-6	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999993067965249	WITHOUT_CLASSIFICATION	6.932034749622649E-7	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999999899520866	WITHOUT_CLASSIFICATION	1.004791334780479E-8	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9999977926891191	WITHOUT_CLASSIFICATION	2.2073108808062044E-6	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999932347416837	WITHOUT_CLASSIFICATION	6.765258316394563E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999980761619099	WITHOUT_CLASSIFICATION	1.9238380901046572E-5	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999968921546426	WITHOUT_CLASSIFICATION	3.1078453573758554E-6	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999814331873047	WITHOUT_CLASSIFICATION	1.8566812695293435E-5	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999993154844381	WITHOUT_CLASSIFICATION	6.845155619401955E-7	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999933922353395	WITHOUT_CLASSIFICATION	6.607764660518417E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999989978183715	WITHOUT_CLASSIFICATION	1.0021816284709569E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999987242534144	WITHOUT_CLASSIFICATION	1.2757465855984635E-6	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999953587928138	WITHOUT_CLASSIFICATION	4.64120718627131E-6	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999651754452498	WITHOUT_CLASSIFICATION	3.482455475013556E-5	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999999014589731	WITHOUT_CLASSIFICATION	9.854102678851892E-8	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998410504496	WITHOUT_CLASSIFICATION	1.5894955047765169E-7	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.999999171518819	WITHOUT_CLASSIFICATION	8.284811810796162E-7	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999998028490917	WITHOUT_CLASSIFICATION	1.971509082175143E-7	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9999768324734403	WITHOUT_CLASSIFICATION	2.316752655968808E-5	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996311807057	WITHOUT_CLASSIFICATION	3.6881929433534127E-7	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999998327638927	WITHOUT_CLASSIFICATION	1.6723610737117282E-7	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9999975625299251	WITHOUT_CLASSIFICATION	2.437470074779597E-6	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999984152302139	WITHOUT_CLASSIFICATION	1.5847697860572746E-6	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994177673283	WITHOUT_CLASSIFICATION	5.822326717218536E-7	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989048197455	WITHOUT_CLASSIFICATION	1.0951802544365723E-6	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999934767774463	WITHOUT_CLASSIFICATION	6.5232225536312645E-6	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955253724724	WITHOUT_CLASSIFICATION	4.474627527603801E-6	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999940146747403	WITHOUT_CLASSIFICATION	5.985325259725115E-6	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957162991754	WITHOUT_CLASSIFICATION	4.283700824564453E-6	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999910729431679	WITHOUT_CLASSIFICATION	8.92705683211933E-6	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993988751257	WITHOUT_CLASSIFICATION	6.011248743768169E-7	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9999948384768175	WITHOUT_CLASSIFICATION	5.161523182611398E-6	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9999958277920952	WITHOUT_CLASSIFICATION	4.172207904895437E-6	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996019720464	WITHOUT_CLASSIFICATION	3.9802795350166554E-7	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997337957858	WITHOUT_CLASSIFICATION	2.662042142022825E-7	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997001589422	WITHOUT_CLASSIFICATION	2.998410578026969E-7	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999954248890783	WITHOUT_CLASSIFICATION	4.575110921647926E-6	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957935152349	WITHOUT_CLASSIFICATION	4.206484765131258E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992873536124	WITHOUT_CLASSIFICATION	7.126463876265912E-7	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988319900543	WITHOUT_CLASSIFICATION	1.1680099456574016E-6	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999911923108022	WITHOUT_CLASSIFICATION	8.807689197756545E-6	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.999999017754544	WITHOUT_CLASSIFICATION	9.822454558715644E-7	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999778736540829	WITHOUT_CLASSIFICATION	2.212634591716683E-5	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9999998040122234	WITHOUT_CLASSIFICATION	1.959877766253576E-7	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999930216441802	WITHOUT_CLASSIFICATION	6.978355819800735E-6	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999875823165197	WITHOUT_CLASSIFICATION	1.24176834802368E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999994540870277	WITHOUT_CLASSIFICATION	5.459129723067784E-6	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9999357584871085	WITHOUT_CLASSIFICATION	6.424151289146665E-5	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999938294903428	WITHOUT_CLASSIFICATION	6.170509657244883E-6	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9999957952988452	WITHOUT_CLASSIFICATION	4.204701154820449E-6	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999853585963074	WITHOUT_CLASSIFICATION	1.4641403692575597E-5	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999768401378356	WITHOUT_CLASSIFICATION	2.3159862164490472E-5	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.999983309323706	WITHOUT_CLASSIFICATION	1.6690676293944905E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999795110568265	WITHOUT_CLASSIFICATION	2.0488943173555676E-5	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999746309694709	WITHOUT_CLASSIFICATION	2.536903052907831E-5	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999998863401595	WITHOUT_CLASSIFICATION	1.1365984060462885E-7	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.99999951884909	WITHOUT_CLASSIFICATION	4.811509101253281E-7	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9999945947282962	WITHOUT_CLASSIFICATION	5.405271703695805E-6	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999698940210453	WITHOUT_CLASSIFICATION	3.0105978954744848E-5	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999995844906241	WITHOUT_CLASSIFICATION	4.1550937586695236E-7	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999889223244087	WITHOUT_CLASSIFICATION	1.1077675591297255E-5	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993066349874	WITHOUT_CLASSIFICATION	6.9336501260629895E-6	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999711930601309	WITHOUT_CLASSIFICATION	2.880693986904474E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999898169898471	WITHOUT_CLASSIFICATION	1.0183010152829289E-5	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999977897949526	WITHOUT_CLASSIFICATION	2.210205047322629E-6	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999990523434747	WITHOUT_CLASSIFICATION	9.476565252666414E-7	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9999991437629144	WITHOUT_CLASSIFICATION	8.562370855169978E-7	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999991733168048	WITHOUT_CLASSIFICATION	8.266831951397272E-7	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991833302365	WITHOUT_CLASSIFICATION	8.16669763449349E-7	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999988739520361	WITHOUT_CLASSIFICATION	1.126047963886698E-6	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9999946101758479	WITHOUT_CLASSIFICATION	5.389824152088562E-6	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999979976558927	WITHOUT_CLASSIFICATION	2.002344107247926E-6	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999926611756077	WITHOUT_CLASSIFICATION	7.3388243922201145E-6	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999943605587507	WITHOUT_CLASSIFICATION	5.63944124927297E-6	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999999221087463	WITHOUT_CLASSIFICATION	7.789125361482261E-8	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999844416469336	WITHOUT_CLASSIFICATION	1.5558353066396204E-5	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999766057062075	WITHOUT_CLASSIFICATION	2.3394293792547256E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999994540870277	WITHOUT_CLASSIFICATION	5.459129723067784E-6	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999999620798252	WITHOUT_CLASSIFICATION	3.7920174772082106E-8	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999998665262437	WITHOUT_CLASSIFICATION	1.3347375634617242E-7	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999994070266667	WITHOUT_CLASSIFICATION	5.929733333564307E-7	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999937936520118	WITHOUT_CLASSIFICATION	6.206347988098478E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999998693816781	WITHOUT_CLASSIFICATION	1.30618321886368E-7	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999976980764504	WITHOUT_CLASSIFICATION	2.3019235494605993E-6	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.99998602462993	WITHOUT_CLASSIFICATION	1.3975370069944055E-5	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9999961299489548	WITHOUT_CLASSIFICATION	3.87005104525383E-6	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999961741319846	WITHOUT_CLASSIFICATION	3.8258680154361286E-6	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999999279141689	WITHOUT_CLASSIFICATION	7.208583101840659E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999997387813429	WITHOUT_CLASSIFICATION	2.6121865709934236E-7	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999998728981454	WITHOUT_CLASSIFICATION	1.271018547013496E-7	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999988526081365	WITHOUT_CLASSIFICATION	1.1473918635633013E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999998005783004	WITHOUT_CLASSIFICATION	1.9942169960426866E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999982826652957	WITHOUT_CLASSIFICATION	1.717334704341866E-6	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999991801986178	WITHOUT_CLASSIFICATION	8.198013822521943E-7	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9999945571893197	WITHOUT_CLASSIFICATION	5.442810680268101E-6	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999848363709445	WITHOUT_CLASSIFICATION	1.5163629055565694E-5	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999997748565335	WITHOUT_CLASSIFICATION	2.251434665213129E-7	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999937543766529	WITHOUT_CLASSIFICATION	6.245623346988159E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999997969188458	WITHOUT_CLASSIFICATION	2.0308115411648807E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.999997030579888	WITHOUT_CLASSIFICATION	2.9694201119369337E-6	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999939984936416	WITHOUT_CLASSIFICATION	6.001506358318678E-6	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.999987606352674	WITHOUT_CLASSIFICATION	1.2393647325905167E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9999993352944166	WITHOUT_CLASSIFICATION	6.647055833249084E-7	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999908445846547	WITHOUT_CLASSIFICATION	9.155415345213809E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9996321632912883	WITHOUT_CLASSIFICATION	3.6783670871164804E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999472242633762	WITHOUT_CLASSIFICATION	5.277573662378533E-5	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9999540823364471	WITHOUT_CLASSIFICATION	4.591766355284781E-5	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999951693886439	WITHOUT_CLASSIFICATION	4.830611356199548E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999994540870277	WITHOUT_CLASSIFICATION	5.459129723067784E-6	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999997836449108	WITHOUT_CLASSIFICATION	2.1635508903174416E-7	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999999655527068	WITHOUT_CLASSIFICATION	3.444729319560402E-8	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999934833147761	WITHOUT_CLASSIFICATION	6.516685223935156E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999994540870277	WITHOUT_CLASSIFICATION	5.459129723067784E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999733382360342	WITHOUT_CLASSIFICATION	2.6661763965799945E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999997969188458	WITHOUT_CLASSIFICATION	2.0308115411648807E-7	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9999946731673784	WITHOUT_CLASSIFICATION	5.326832621609587E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9999976081591534	WITHOUT_CLASSIFICATION	2.391840846600969E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999999923066977	WITHOUT_CLASSIFICATION	7.693302361995237E-9	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999999279141689	WITHOUT_CLASSIFICATION	7.208583101840659E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999997387813429	WITHOUT_CLASSIFICATION	2.6121865709934236E-7	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999998728981454	WITHOUT_CLASSIFICATION	1.271018547013496E-7	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999995816332437	WITHOUT_CLASSIFICATION	4.1836675634892023E-7	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999919328671317	WITHOUT_CLASSIFICATION	8.067132868204102E-6	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999809870643335	WITHOUT_CLASSIFICATION	1.9012935666557566E-5	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999990136857988	WITHOUT_CLASSIFICATION	9.863142012007222E-7	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999999893213855	WITHOUT_CLASSIFICATION	1.0678614634712574E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999994540870277	WITHOUT_CLASSIFICATION	5.459129723067784E-6	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999988526081365	WITHOUT_CLASSIFICATION	1.1473918635633013E-6	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999998005783004	WITHOUT_CLASSIFICATION	1.9942169960426866E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992889329076	WITHOUT_CLASSIFICATION	7.110670924549293E-7	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990273666983	WITHOUT_CLASSIFICATION	9.726333017089126E-7	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999992998808596	WITHOUT_CLASSIFICATION	7.001191404273199E-7	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999961862690799	WITHOUT_CLASSIFICATION	3.8137309200421847E-6	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9999989411094063	WITHOUT_CLASSIFICATION	1.0588905936398534E-6	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999999986551854	WITHOUT_CLASSIFICATION	1.3448146338910292E-9	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999911923108022	WITHOUT_CLASSIFICATION	8.807689197756545E-6	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999999414004364	WITHOUT_CLASSIFICATION	5.859956369773435E-8	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999990959548134	WITHOUT_CLASSIFICATION	9.040451865490588E-7	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.999997684592289	WITHOUT_CLASSIFICATION	2.3154077110332973E-6	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.999997621068677	WITHOUT_CLASSIFICATION	2.3789313231021073E-6	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999991875016743	WITHOUT_CLASSIFICATION	8.124983256926653E-7	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999940146747403	WITHOUT_CLASSIFICATION	5.985325259725115E-6	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957162991754	WITHOUT_CLASSIFICATION	4.283700824564453E-6	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997337957858	WITHOUT_CLASSIFICATION	2.662042142022825E-7	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999991875016743	WITHOUT_CLASSIFICATION	8.124983256926653E-7	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999888793602599	WITHOUT_CLASSIFICATION	1.1120639739983981E-5	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999946156842215	WITHOUT_CLASSIFICATION	5.384315778491686E-6	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996365378511	WITHOUT_CLASSIFICATION	3.634621488944968E-6	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963087582264	WITHOUT_CLASSIFICATION	3.6912417736276537E-6	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999999707527498	WITHOUT_CLASSIFICATION	2.9247250227612477E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.999755149980789	WITHOUT_CLASSIFICATION	2.448500192110087E-4	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997001589422	WITHOUT_CLASSIFICATION	2.998410578026969E-7	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992873536124	WITHOUT_CLASSIFICATION	7.126463876265912E-7	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999926611756077	WITHOUT_CLASSIFICATION	7.3388243922201145E-6	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999992520973798	WITHOUT_CLASSIFICATION	7.479026201421212E-7	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999998514013922	WITHOUT_CLASSIFICATION	1.4859860764624484E-7	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.99999881756347	WITHOUT_CLASSIFICATION	1.1824365299195127E-6	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999985498297029	WITHOUT_CLASSIFICATION	1.4501702970900845E-6	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.99999911067617	WITHOUT_CLASSIFICATION	8.893238299962698E-7	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999996859125793	WITHOUT_CLASSIFICATION	3.140874207293638E-7	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9999920681231759	WITHOUT_CLASSIFICATION	7.931876824087886E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996893424041088	WITHOUT_CLASSIFICATION	3.1065759589115135E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999933922353395	WITHOUT_CLASSIFICATION	6.607764660518417E-6	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999944392035953	WITHOUT_CLASSIFICATION	5.5607964045974E-6	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999999825371995	WITHOUT_CLASSIFICATION	1.7462800525402998E-8	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999999544295083	WITHOUT_CLASSIFICATION	4.557049173267594E-8	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999986478882893	WITHOUT_CLASSIFICATION	1.3521117106855549E-6	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999998783610166	WITHOUT_CLASSIFICATION	1.2163898333040417E-7	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999781941524635	WITHOUT_CLASSIFICATION	2.1805847536592515E-5	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999989611508163	WITHOUT_CLASSIFICATION	1.0388491836966199E-5	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996809610579	WITHOUT_CLASSIFICATION	3.1903894210636868E-6	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999987554403043	WITHOUT_CLASSIFICATION	1.2445596957755583E-6	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999999495052907	WITHOUT_CLASSIFICATION	5.04947092133032E-8	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9999505558920726	WITHOUT_CLASSIFICATION	4.944410792730553E-5	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999997694332766	WITHOUT_CLASSIFICATION	2.305667233982412E-6	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999995631433183	WITHOUT_CLASSIFICATION	4.3685668169592173E-7	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999984730112351	WITHOUT_CLASSIFICATION	1.5269887648515555E-6	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999989156640199	WITHOUT_CLASSIFICATION	1.0843359801176738E-6	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.99999993260476	WITHOUT_CLASSIFICATION	6.739524001587446E-8	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999875939278898	WITHOUT_CLASSIFICATION	1.2406072110094112E-5	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999997167039166	WITHOUT_CLASSIFICATION	2.8329608327833924E-7	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.999992953495209	WITHOUT_CLASSIFICATION	7.046504791059029E-6	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999998569702822	WITHOUT_CLASSIFICATION	1.430297178031754E-6	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99999936945613	WITHOUT_CLASSIFICATION	6.305438700205282E-7	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999993605709715	WITHOUT_CLASSIFICATION	6.39429028577622E-7	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999999307090434	WITHOUT_CLASSIFICATION	6.929095663424224E-8	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999621655381326	WITHOUT_CLASSIFICATION	3.783446186748209E-5	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9999958632812728	WITHOUT_CLASSIFICATION	4.13671872718238E-6	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999923350905556	WITHOUT_CLASSIFICATION	7.664909444490385E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999899295307859	WITHOUT_CLASSIFICATION	1.0070469214021715E-5	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999994907726778	WITHOUT_CLASSIFICATION	5.092273221855029E-7	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999994346723056	WITHOUT_CLASSIFICATION	5.653276944078757E-7	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.999991815597821	WITHOUT_CLASSIFICATION	8.184402178948288E-6	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999984869891968	WITHOUT_CLASSIFICATION	1.51301080323861E-6	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.999999920065696	WITHOUT_CLASSIFICATION	7.993430395779957E-8	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.999991105271095	WITHOUT_CLASSIFICATION	8.89472890502995E-6	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999957178743949	WITHOUT_CLASSIFICATION	4.282125605045088E-6	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.999999432574586	WITHOUT_CLASSIFICATION	5.67425414002069E-7	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999944109851108	WITHOUT_CLASSIFICATION	5.589014889262428E-6	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999994345942381	WITHOUT_CLASSIFICATION	5.654057619202757E-7	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999966843975922	WITHOUT_CLASSIFICATION	3.315602407941664E-6	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999453506792236	WITHOUT_CLASSIFICATION	5.464932077630764E-5	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999995962240958	WITHOUT_CLASSIFICATION	4.03775904265162E-7	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9999989330785809	WITHOUT_CLASSIFICATION	1.066921419107181E-6	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999725693039111	WITHOUT_CLASSIFICATION	2.7430696088924518E-5	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9999893172343356	WITHOUT_CLASSIFICATION	1.068276566445897E-5	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999977114555876	WITHOUT_CLASSIFICATION	2.28854441243766E-6	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9999966537962919	WITHOUT_CLASSIFICATION	3.346203708097427E-6	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999986101712169	WITHOUT_CLASSIFICATION	1.3898287830146707E-6	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999983308632102	WITHOUT_CLASSIFICATION	1.6691367897613439E-6	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999989851284949	WITHOUT_CLASSIFICATION	1.014871505010267E-6	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999906247665243	WITHOUT_CLASSIFICATION	9.375233475602218E-6	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999998971968075	WITHOUT_CLASSIFICATION	1.0280319257278424E-7	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999995657397893	WITHOUT_CLASSIFICATION	4.3426021060456415E-7	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999991872530523	WITHOUT_CLASSIFICATION	8.127469478231322E-7	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999969755848828	WITHOUT_CLASSIFICATION	3.0244151172386468E-6	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999997220663297	WITHOUT_CLASSIFICATION	2.779336702865665E-7	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999997291199598	WITHOUT_CLASSIFICATION	2.708800400762869E-7	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9999959165786574	WITHOUT_CLASSIFICATION	4.0834213425951485E-6	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999904548717302	WITHOUT_CLASSIFICATION	9.545128269858749E-6	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999978138574829	WITHOUT_CLASSIFICATION	2.186142517042299E-6	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999762378331247	WITHOUT_CLASSIFICATION	2.3762166875280023E-5	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.999990128940293	WITHOUT_CLASSIFICATION	9.871059706973851E-6	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.9999903559768326	WITHOUT_CLASSIFICATION	9.64402316729672E-6	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999901079602008	WITHOUT_CLASSIFICATION	9.892039799249308E-6	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999910782573005	WITHOUT_CLASSIFICATION	8.92174269947929E-6	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999988684221777	WITHOUT_CLASSIFICATION	1.1315778223242575E-6	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9999965618242822	WITHOUT_CLASSIFICATION	3.4381757178312E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999955910543392	WITHOUT_CLASSIFICATION	4.40894566078873E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.999994726078535	WITHOUT_CLASSIFICATION	5.273921464944107E-6	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999998377088392	WITHOUT_CLASSIFICATION	1.6229116088633316E-7	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9999761513937129	WITHOUT_CLASSIFICATION	2.3848606287161432E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.999982560365376	WITHOUT_CLASSIFICATION	1.7439634623985196E-5	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999973716684875	WITHOUT_CLASSIFICATION	2.6283315125441423E-6	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999570075262871	WITHOUT_CLASSIFICATION	4.2992473712955856E-5	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999826784497895	WITHOUT_CLASSIFICATION	1.7321550210504435E-5	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999986855097489	WITHOUT_CLASSIFICATION	1.3144902511307836E-6	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999988741632544	WITHOUT_CLASSIFICATION	1.1258367456459838E-6	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9999631171140214	WITHOUT_CLASSIFICATION	3.688288597847765E-5	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.999999399407563	WITHOUT_CLASSIFICATION	6.005924370407586E-7	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999735116730121	WITHOUT_CLASSIFICATION	2.6488326987828017E-5	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999948833228208	WITHOUT_CLASSIFICATION	5.116677179246705E-6	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999933991372745	WITHOUT_CLASSIFICATION	6.600862725518643E-6	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.999933011320755	WITHOUT_CLASSIFICATION	6.698867924499933E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999938099869741	WITHOUT_CLASSIFICATION	6.190013025876694E-6	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999932463912181	WITHOUT_CLASSIFICATION	6.753608781965133E-6	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.999974792748563	WITHOUT_CLASSIFICATION	2.52072514369691E-5	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999571452213601	WITHOUT_CLASSIFICATION	4.28547786397606E-5	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9999795773455342	WITHOUT_CLASSIFICATION	2.0422654465676252E-5	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999958938171185	WITHOUT_CLASSIFICATION	4.106182881546278E-6	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.999968280234777	WITHOUT_CLASSIFICATION	3.1719765223058156E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999878618468744	WITHOUT_CLASSIFICATION	1.2138153125658362E-5	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999999878494192	WITHOUT_CLASSIFICATION	1.2150580837107242E-8	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999772043597515	WITHOUT_CLASSIFICATION	2.2795640248579974E-5	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.9999915026415228	WITHOUT_CLASSIFICATION	8.497358477235709E-6	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999975313534735	WITHOUT_CLASSIFICATION	2.468646526495947E-6	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999772043597515	WITHOUT_CLASSIFICATION	2.2795640248579974E-5	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999999629940476	WITHOUT_CLASSIFICATION	3.700595244396436E-8	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999993664275943	WITHOUT_CLASSIFICATION	6.335724056710601E-7	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.999945588887278	WITHOUT_CLASSIFICATION	5.441111272191926E-5	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9999763359065601	WITHOUT_CLASSIFICATION	2.3664093439880198E-5	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.9999981065418044	WITHOUT_CLASSIFICATION	1.893458195569107E-6	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999997801006671	WITHOUT_CLASSIFICATION	2.198993329001416E-7	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9999255737751293	WITHOUT_CLASSIFICATION	7.442622487073315E-5	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.999999605761083	WITHOUT_CLASSIFICATION	3.9423891698467405E-7	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999999191489669	WITHOUT_CLASSIFICATION	8.085103319591585E-8	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999756813019394	WITHOUT_CLASSIFICATION	2.4318698060579955E-5	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999997029473265	WITHOUT_CLASSIFICATION	2.9705267345802913E-7	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999999511567805	WITHOUT_CLASSIFICATION	4.884321943882745E-8	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999982794737683	WITHOUT_CLASSIFICATION	1.7205262317638525E-6	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.999999910839295	WITHOUT_CLASSIFICATION	8.916070501887133E-8	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999928253969	WITHOUT_CLASSIFICATION	7.174603140689159E-9	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9999985568672927	WITHOUT_CLASSIFICATION	1.4431327072869084E-6	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999814492579069	WITHOUT_CLASSIFICATION	1.8550742093156108E-5	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999814492579069	WITHOUT_CLASSIFICATION	1.8550742093156108E-5	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999928041473	WITHOUT_CLASSIFICATION	7.195852627287797E-9	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9996769598227025	WITHOUT_CLASSIFICATION	3.2304017729756175E-4	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9998345628093539	WITHOUT_CLASSIFICATION	1.6543719064609876E-4	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.9999453776869586	WITHOUT_CLASSIFICATION	5.462231304131328E-5	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999918532503917	WITHOUT_CLASSIFICATION	8.146749608197424E-6	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9998764474582218	WITHOUT_CLASSIFICATION	1.23552541778225E-4	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999295318671214	WITHOUT_CLASSIFICATION	7.04681328785267E-5	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999981086472064	WITHOUT_CLASSIFICATION	1.8913527936806132E-6	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999989193946311	WITHOUT_CLASSIFICATION	1.0806053688622478E-6	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999977830844913	WITHOUT_CLASSIFICATION	2.2169155086582757E-6	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9999980728551762	WITHOUT_CLASSIFICATION	1.9271448237897682E-6	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999957606643171	WITHOUT_CLASSIFICATION	4.239335682955828E-6	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9999884783491343	WITHOUT_CLASSIFICATION	1.1521650865798261E-5	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9999989992129306	WITHOUT_CLASSIFICATION	1.000787069425072E-6	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999990674215459	WITHOUT_CLASSIFICATION	9.325784541912086E-7	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999781941524635	WITHOUT_CLASSIFICATION	2.1805847536592515E-5	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999987478940959	WITHOUT_CLASSIFICATION	1.2521059041721934E-6	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999950888157707	WITHOUT_CLASSIFICATION	4.911184229216071E-6	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9998891688063416	WITHOUT_CLASSIFICATION	1.108311936583489E-4	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9998611497186273	WITHOUT_CLASSIFICATION	1.3885028137261267E-4	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999994915842508	WITHOUT_CLASSIFICATION	5.084157491289304E-7	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999798695291485	WITHOUT_CLASSIFICATION	2.0130470851510744E-5	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999990244902093	WITHOUT_CLASSIFICATION	9.75509790725954E-7	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999932160368066	WITHOUT_CLASSIFICATION	6.783963193422961E-6	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999996968042547	WITHOUT_CLASSIFICATION	3.0319574528616403E-7	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999997663810858	WITHOUT_CLASSIFICATION	2.3361891425573738E-7	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.999999564569319	WITHOUT_CLASSIFICATION	4.354306809210108E-7	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999999215899827	WITHOUT_CLASSIFICATION	7.841001718712241E-8	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999993751092534	WITHOUT_CLASSIFICATION	6.248907466594152E-7	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999665516108017	WITHOUT_CLASSIFICATION	3.3448389198380185E-5	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999775656788078	WITHOUT_CLASSIFICATION	2.243432119226521E-5	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999952331244872	WITHOUT_CLASSIFICATION	4.766875512729009E-6	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9998576095095242	WITHOUT_CLASSIFICATION	1.4239049047582784E-4	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999934842056469	WITHOUT_CLASSIFICATION	6.515794353051263E-6	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999402893537633	WITHOUT_CLASSIFICATION	5.971064623665499E-5	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999955213172217	WITHOUT_CLASSIFICATION	4.478682778276492E-6	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9999863795956606	WITHOUT_CLASSIFICATION	1.3620404339509957E-5	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999788812811169	WITHOUT_CLASSIFICATION	2.1118718883079682E-5	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999995823361605	WITHOUT_CLASSIFICATION	4.1766383959233803E-7	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999962773807948	WITHOUT_CLASSIFICATION	3.7226192053245642E-6	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999971333721376	WITHOUT_CLASSIFICATION	2.8666278623622284E-6	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9999891214208021	WITHOUT_CLASSIFICATION	1.0878579197810678E-5	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999986060222685	WITHOUT_CLASSIFICATION	1.3939777314928873E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999991851836304	WITHOUT_CLASSIFICATION	8.148163696430751E-7	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999989546973159	WITHOUT_CLASSIFICATION	1.0453026840804355E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999999458250326	WITHOUT_CLASSIFICATION	5.417496746848072E-8	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993730235436	WITHOUT_CLASSIFICATION	6.2697645639961836E-6	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996432936189	WITHOUT_CLASSIFICATION	3.56706381141635E-7	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999978376653051	WITHOUT_CLASSIFICATION	2.1623346948413298E-6	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999999997859954	WITHOUT_CLASSIFICATION	2.1400471590428646E-10	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999954599007995	WITHOUT_CLASSIFICATION	4.540099200463849E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996893424041088	WITHOUT_CLASSIFICATION	3.1065759589115135E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996893424041088	WITHOUT_CLASSIFICATION	3.1065759589115135E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999906823724292	WITHOUT_CLASSIFICATION	9.317627570924722E-6	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9999999893045596	WITHOUT_CLASSIFICATION	1.0695440450421433E-8	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999979078451123	WITHOUT_CLASSIFICATION	2.092154887669775E-6	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999912596203371	WITHOUT_CLASSIFICATION	8.740379662981571E-6	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999979078451123	WITHOUT_CLASSIFICATION	2.092154887669775E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999992913935069	WITHOUT_CLASSIFICATION	7.086064930791427E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999988193853474	WITHOUT_CLASSIFICATION	1.1806146526473593E-6	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.999999033023203	WITHOUT_CLASSIFICATION	9.66976796927976E-7	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999999016129303	WITHOUT_CLASSIFICATION	9.838706971663809E-8	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999947928479025	WITHOUT_CLASSIFICATION	5.207152097482911E-6	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999969047592077	WITHOUT_CLASSIFICATION	3.0952407923031927E-6	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999997562444741	WITHOUT_CLASSIFICATION	2.437555258122043E-7	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999968456374357	WITHOUT_CLASSIFICATION	3.154362564326355E-6	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.999999924240474	WITHOUT_CLASSIFICATION	7.575952588114435E-8	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9999870734123004	WITHOUT_CLASSIFICATION	1.2926587699556492E-5	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.999995017122704	WITHOUT_CLASSIFICATION	4.982877296012482E-6	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9999999526555046	WITHOUT_CLASSIFICATION	4.7344495429124466E-8	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999688058493083	WITHOUT_CLASSIFICATION	3.11941506917026E-5	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9999999420888946	WITHOUT_CLASSIFICATION	5.791110533919916E-8	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.999981548064477	WITHOUT_CLASSIFICATION	1.8451935523007003E-5	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999992643805038	WITHOUT_CLASSIFICATION	7.356194963387468E-7	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999598711513644	WITHOUT_CLASSIFICATION	4.0128848635655624E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999598711513644	WITHOUT_CLASSIFICATION	4.0128848635655624E-5	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999829087136987	WITHOUT_CLASSIFICATION	1.7091286301314358E-5	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999997208160042	WITHOUT_CLASSIFICATION	2.791839958597313E-7	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999998559248007	WITHOUT_CLASSIFICATION	1.440751992888434E-7	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.999999885302035	WITHOUT_CLASSIFICATION	1.1469796497217496E-7	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.999999958712978	WITHOUT_CLASSIFICATION	4.1287022068584454E-8	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.99999995504028	WITHOUT_CLASSIFICATION	4.495971984256178E-8	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999998890765933	WITHOUT_CLASSIFICATION	1.1092340667415918E-7	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999955817534683	WITHOUT_CLASSIFICATION	4.418246531699966E-6	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999990059918802	WITHOUT_CLASSIFICATION	9.940081198180687E-7	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999899312474009	WITHOUT_CLASSIFICATION	1.0068752599220819E-5	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.999997325739242	WITHOUT_CLASSIFICATION	2.674260758080864E-6	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999929214284067	WITHOUT_CLASSIFICATION	7.078571593348972E-6	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999999493476364	WITHOUT_CLASSIFICATION	5.0652363700497825E-8	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999997000333563	WITHOUT_CLASSIFICATION	2.9996664376137113E-7	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999957807028726	WITHOUT_CLASSIFICATION	4.219297127426374E-6	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999993739288809	WITHOUT_CLASSIFICATION	6.260711189970774E-7	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999956593688937	WITHOUT_CLASSIFICATION	4.340631106387971E-6	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9999692174544189	WITHOUT_CLASSIFICATION	3.0782545581120826E-5	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.999980741294828	WITHOUT_CLASSIFICATION	1.9258705172057087E-5	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999998887871376	WITHOUT_CLASSIFICATION	1.1121286233635753E-7	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999990515585567	WITHOUT_CLASSIFICATION	9.484414432942148E-7	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999990971356962	WITHOUT_CLASSIFICATION	9.028643037174444E-7	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999998917892926	WITHOUT_CLASSIFICATION	1.0821070737004707E-7	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.999999720178356	WITHOUT_CLASSIFICATION	2.798216439724051E-7	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9999536830023177	WITHOUT_CLASSIFICATION	4.631699768233303E-5	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999988379327004	WITHOUT_CLASSIFICATION	1.1620672996034611E-6	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999975021454917	WITHOUT_CLASSIFICATION	2.4978545084370216E-6	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9999951821093781	WITHOUT_CLASSIFICATION	4.81789062191225E-6	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999611835211869	WITHOUT_CLASSIFICATION	3.881647881307261E-5	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999983692889204	WITHOUT_CLASSIFICATION	1.6307110796666566E-6	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999909614830599	WITHOUT_CLASSIFICATION	9.038516940183036E-6	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999977997868045	WITHOUT_CLASSIFICATION	2.200213195471085E-6	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999956309630298	WITHOUT_CLASSIFICATION	4.36903697016538E-6	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.999988861977054	WITHOUT_CLASSIFICATION	1.1138022945927814E-5	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.999988476546332	WITHOUT_CLASSIFICATION	1.15234536678422E-5	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999997230585289	WITHOUT_CLASSIFICATION	2.7694147114622915E-7	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.99999889078979	WITHOUT_CLASSIFICATION	1.1092102099579811E-6	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999920643872321	WITHOUT_CLASSIFICATION	7.935612767964873E-6	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999977701378217	WITHOUT_CLASSIFICATION	2.2298621784238005E-6	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999991304859344	WITHOUT_CLASSIFICATION	8.695140657615164E-7	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.99999918558596	WITHOUT_CLASSIFICATION	8.144140400311072E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979132857095	WITHOUT_CLASSIFICATION	2.086714290458663E-6	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.9999548087493555	WITHOUT_CLASSIFICATION	4.519125064448416E-5	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9999900991893053	WITHOUT_CLASSIFICATION	9.900810694671052E-6	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999999541339817	WITHOUT_CLASSIFICATION	4.5866018330047984E-8	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999999763139182	WITHOUT_CLASSIFICATION	2.3686081753800726E-8	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9998832269427252	WITHOUT_CLASSIFICATION	1.1677305727473206E-4	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.999999847811069	WITHOUT_CLASSIFICATION	1.5218893106692593E-7	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999991345514322	WITHOUT_CLASSIFICATION	8.65448567826464E-7	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999981474467832	WITHOUT_CLASSIFICATION	1.852553216915534E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999961358953215	WITHOUT_CLASSIFICATION	3.8641046784554795E-6	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999988924694901	WITHOUT_CLASSIFICATION	1.1075305098940045E-6	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999999722852055	WITHOUT_CLASSIFICATION	2.7714794413280055E-8	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999997941433254	WITHOUT_CLASSIFICATION	2.0585667449625947E-7	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999862324540554	WITHOUT_CLASSIFICATION	1.3767545944525008E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999733382360342	WITHOUT_CLASSIFICATION	2.6661763965799945E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999733382360342	WITHOUT_CLASSIFICATION	2.6661763965799945E-5	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999973999507382	WITHOUT_CLASSIFICATION	2.6000492618110776E-6	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.999963491916416	WITHOUT_CLASSIFICATION	3.65080835840211E-5	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999894468645016	WITHOUT_CLASSIFICATION	1.0553135498308114E-5	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999990925517556	WITHOUT_CLASSIFICATION	9.074482445912851E-7	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.999999852045355	WITHOUT_CLASSIFICATION	1.4795464496127923E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999996934834691	WITHOUT_CLASSIFICATION	3.065165309433747E-7	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999991632894945	WITHOUT_CLASSIFICATION	8.367105056444674E-7	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999998085600309	WITHOUT_CLASSIFICATION	1.9143996903423328E-7	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999870023286671	WITHOUT_CLASSIFICATION	1.2997671332862095E-5	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999990146410661	WITHOUT_CLASSIFICATION	9.853589339355715E-7	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999678878016388	WITHOUT_CLASSIFICATION	3.2112198361223694E-5	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9999791382795248	WITHOUT_CLASSIFICATION	2.0861720475184418E-5	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9999239304300642	WITHOUT_CLASSIFICATION	7.606956993579144E-5	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999930228886523	WITHOUT_CLASSIFICATION	6.977111347689447E-6	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999990070054264	WITHOUT_CLASSIFICATION	9.92994573631068E-7	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999998040883025	WITHOUT_CLASSIFICATION	1.9591169755106976E-7	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999999716487951	WITHOUT_CLASSIFICATION	2.8351204990314254E-8	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.9999271886781355	WITHOUT_CLASSIFICATION	7.281132186447712E-5	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999934712772497	WITHOUT_CLASSIFICATION	6.528722750385182E-6	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999940750079009	WITHOUT_CLASSIFICATION	5.924992099129143E-6	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.999999944256114	WITHOUT_CLASSIFICATION	5.5743885898894855E-8	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999974006242416	WITHOUT_CLASSIFICATION	2.599375758511874E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998484151047137	WITHOUT_CLASSIFICATION	1.515848952864218E-4	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999997510024705	WITHOUT_CLASSIFICATION	2.4899752957367546E-7	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.999999931508093	WITHOUT_CLASSIFICATION	6.849190699162584E-8	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999999786684427	WITHOUT_CLASSIFICATION	2.1331557332403915E-8	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9994180462457659	WITHOUT_CLASSIFICATION	5.819537542340674E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999835734607954	WITHOUT_CLASSIFICATION	1.6426539204588496E-4	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.999999597368073	WITHOUT_CLASSIFICATION	4.0263192696185387E-7	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998484151047137	WITHOUT_CLASSIFICATION	1.515848952864218E-4	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999997072666329	WITHOUT_CLASSIFICATION	2.927333670357453E-7	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999994571124944	WITHOUT_CLASSIFICATION	5.428875056443718E-7	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9997141543972984	WITHOUT_CLASSIFICATION	2.8584560270158424E-4	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999751175833963	WITHOUT_CLASSIFICATION	2.4882416603737815E-5	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.999998850261365	WITHOUT_CLASSIFICATION	1.1497386349517363E-6	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999991543912427	WITHOUT_CLASSIFICATION	8.456087573284938E-7	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999999495709153	WITHOUT_CLASSIFICATION	5.042908472857424E-8	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.999993507181459	WITHOUT_CLASSIFICATION	6.492818541101537E-6	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999968681469203	WITHOUT_CLASSIFICATION	3.131853079664084E-6	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999751175833963	WITHOUT_CLASSIFICATION	2.4882416603737815E-5	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999925827309981	WITHOUT_CLASSIFICATION	7.417269001827012E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999915510246752	WITHOUT_CLASSIFICATION	8.448975324842087E-6	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999953082727772	WITHOUT_CLASSIFICATION	4.691727222872166E-6	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998871154344701	WITHOUT_CLASSIFICATION	1.1288456553000579E-4	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9999995813235449	WITHOUT_CLASSIFICATION	4.1867645506855905E-7	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.999997325739242	WITHOUT_CLASSIFICATION	2.674260758080864E-6	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999994328660218	WITHOUT_CLASSIFICATION	5.671339782770639E-7	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999992672436386	WITHOUT_CLASSIFICATION	7.327563613919636E-7	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999912396162678	WITHOUT_CLASSIFICATION	8.760383732253544E-6	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9999962913879447	WITHOUT_CLASSIFICATION	3.7086120553936697E-6	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999630719546523	WITHOUT_CLASSIFICATION	3.69280453476624E-5	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999960481197254	WITHOUT_CLASSIFICATION	3.951880274554136E-6	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999685546345325	WITHOUT_CLASSIFICATION	3.1445365467455054E-5	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999996361007994	WITHOUT_CLASSIFICATION	3.638992006039008E-7	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999879472838044	WITHOUT_CLASSIFICATION	1.205271619571744E-5	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999972763299465	WITHOUT_CLASSIFICATION	2.7236700535049146E-6	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999868659743316	WITHOUT_CLASSIFICATION	1.3134025668404766E-4	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999998436774283	WITHOUT_CLASSIFICATION	1.5632257166095383E-7	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999999834248027	WITHOUT_CLASSIFICATION	1.657519725642937E-8	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999948694914051	WITHOUT_CLASSIFICATION	5.130508594881779E-6	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999989523070726	WITHOUT_CLASSIFICATION	1.0476929273632298E-6	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999976991482294	WITHOUT_CLASSIFICATION	2.3008517706938606E-6	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999992384847309	WITHOUT_CLASSIFICATION	7.615152690437972E-7	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999995709814724	WITHOUT_CLASSIFICATION	4.2901852760153333E-7	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.999999789035801	WITHOUT_CLASSIFICATION	2.1096419890468935E-7	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9999879739908542	WITHOUT_CLASSIFICATION	1.2026009145731256E-5	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.999989259617215	WITHOUT_CLASSIFICATION	1.0740382785038654E-5	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999990641888433	WITHOUT_CLASSIFICATION	9.358111566978945E-7	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999989323860502	WITHOUT_CLASSIFICATION	1.067613949814502E-6	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999998350298004	WITHOUT_CLASSIFICATION	1.6497019962004575E-7	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999942312544694	WITHOUT_CLASSIFICATION	5.768745530547998E-6	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9999593002067046	WITHOUT_CLASSIFICATION	4.069979329539962E-5	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999993222522434	WITHOUT_CLASSIFICATION	6.777477565383774E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996561274416	WITHOUT_CLASSIFICATION	3.438725584279744E-7	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996179607317	WITHOUT_CLASSIFICATION	3.8203926829275225E-6	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9999999984674643	WITHOUT_CLASSIFICATION	1.5325356339249275E-9	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999983850389508	WITHOUT_CLASSIFICATION	1.6149610491600404E-6	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999970541963396	WITHOUT_CLASSIFICATION	2.9458036603263626E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999981459949354	WITHOUT_CLASSIFICATION	1.85400506466404E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999981459949354	WITHOUT_CLASSIFICATION	1.85400506466404E-6	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999982458121034	WITHOUT_CLASSIFICATION	1.754187896589315E-6	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999993032571345	WITHOUT_CLASSIFICATION	6.967428654286286E-7	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999970253158961	WITHOUT_CLASSIFICATION	2.9746841038795934E-6	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.999999917733235	WITHOUT_CLASSIFICATION	8.226676496729386E-8	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999964590941577	WITHOUT_CLASSIFICATION	3.540905842349286E-6	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999996631258893	WITHOUT_CLASSIFICATION	3.3687411069013556E-7	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.999994794380083	WITHOUT_CLASSIFICATION	5.205619916953403E-6	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999996054615736	WITHOUT_CLASSIFICATION	3.945384263264195E-7	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999988559209761	WITHOUT_CLASSIFICATION	1.1440790238461376E-6	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999998936778521	WITHOUT_CLASSIFICATION	1.0632214793030646E-7	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999952536117737	WITHOUT_CLASSIFICATION	4.74638822625308E-6	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999996096354989	WITHOUT_CLASSIFICATION	3.9036450108873097E-7	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999996190818938	WITHOUT_CLASSIFICATION	3.809181061263217E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999981459949354	WITHOUT_CLASSIFICATION	1.85400506466404E-6	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999907113047906	WITHOUT_CLASSIFICATION	9.288695209520189E-6	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.999992427247002	WITHOUT_CLASSIFICATION	7.5727529980830665E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999980100544422	WITHOUT_CLASSIFICATION	1.9899455577108853E-6	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999954850081318	WITHOUT_CLASSIFICATION	4.5149918681250065E-6	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999999428979444	WITHOUT_CLASSIFICATION	5.710205555675738E-8	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9999940939407681	WITHOUT_CLASSIFICATION	5.906059231924934E-6	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999997065424767	WITHOUT_CLASSIFICATION	2.9345752326410365E-7	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999997536227818	WITHOUT_CLASSIFICATION	2.463772181562671E-7	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999999870272585	WITHOUT_CLASSIFICATION	1.297274157346511E-8	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999967060469517	WITHOUT_CLASSIFICATION	3.2939530483309896E-6	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.999999597513682	WITHOUT_CLASSIFICATION	4.0248631805498555E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996561274416	WITHOUT_CLASSIFICATION	3.438725584279744E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999981459949354	WITHOUT_CLASSIFICATION	1.85400506466404E-6	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999972456595481	WITHOUT_CLASSIFICATION	2.7543404519139108E-6	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999996195747757	WITHOUT_CLASSIFICATION	3.804252243926551E-7	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999926629513562	WITHOUT_CLASSIFICATION	7.3370486437419345E-6	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.999990046132432	WITHOUT_CLASSIFICATION	9.953867568027646E-6	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999998194956944	WITHOUT_CLASSIFICATION	1.8050430573796497E-7	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999992608666026	WITHOUT_CLASSIFICATION	7.391333973812889E-7	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999883389212243	WITHOUT_CLASSIFICATION	1.1661078775747257E-5	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999980749029239	WITHOUT_CLASSIFICATION	1.925097075998512E-6	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999990301871341	WITHOUT_CLASSIFICATION	9.698128658785032E-7	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999993854909035	WITHOUT_CLASSIFICATION	6.14509096576121E-7	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999975465166938	WITHOUT_CLASSIFICATION	2.4534833062854002E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996924944755927	WITHOUT_CLASSIFICATION	3.075055244072531E-4	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999998102836022	WITHOUT_CLASSIFICATION	1.8971639783742237E-7	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999998351282461	WITHOUT_CLASSIFICATION	1.6487175394705785E-7	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999992913935069	WITHOUT_CLASSIFICATION	7.086064930791427E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999999192338864	WITHOUT_CLASSIFICATION	8.076611363510129E-8	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999999883520714	WITHOUT_CLASSIFICATION	1.1647928663053586E-8	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999996729254054	WITHOUT_CLASSIFICATION	3.270745946127475E-7	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999955029305819	WITHOUT_CLASSIFICATION	4.497069418010805E-6	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999995503529506	WITHOUT_CLASSIFICATION	4.496470493382447E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999967015757794	WITHOUT_CLASSIFICATION	3.298424220603249E-5	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999967015757794	WITHOUT_CLASSIFICATION	3.298424220603249E-5	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.999999654301848	WITHOUT_CLASSIFICATION	3.4569815199634203E-7	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.999999945334589	WITHOUT_CLASSIFICATION	5.4665410992030415E-8	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9999990002988342	WITHOUT_CLASSIFICATION	9.997011659333416E-7	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.999999913840178	WITHOUT_CLASSIFICATION	8.615982210837865E-8	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999978753444789	WITHOUT_CLASSIFICATION	2.1246555210434266E-6	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999935712653162	WITHOUT_CLASSIFICATION	6.428734683817412E-6	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999910163002811	WITHOUT_CLASSIFICATION	8.98369971887417E-6	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999987640364774	WITHOUT_CLASSIFICATION	1.23596352253349E-6	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999987640364774	WITHOUT_CLASSIFICATION	1.23596352253349E-6	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999717152840242	WITHOUT_CLASSIFICATION	2.828471597581983E-5	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999917066522968	WITHOUT_CLASSIFICATION	8.293347703268496E-6	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999990697362864	WITHOUT_CLASSIFICATION	9.302637137218837E-7	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999987737115506	WITHOUT_CLASSIFICATION	1.2262884493925991E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999987737115506	WITHOUT_CLASSIFICATION	1.2262884493925991E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999987737115506	WITHOUT_CLASSIFICATION	1.2262884493925991E-5	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9999997134376264	WITHOUT_CLASSIFICATION	2.865623736835197E-7	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.999997381624886	WITHOUT_CLASSIFICATION	2.6183751139182604E-6	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9999894514665707	WITHOUT_CLASSIFICATION	1.054853342932938E-5	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9999998710667948	WITHOUT_CLASSIFICATION	1.289332052228162E-7	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999999079449176	WITHOUT_CLASSIFICATION	9.205508241925945E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999981459949354	WITHOUT_CLASSIFICATION	1.85400506466404E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999981459949354	WITHOUT_CLASSIFICATION	1.85400506466404E-6	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999999956760944	WITHOUT_CLASSIFICATION	4.3239055582063696E-9	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999999522322349	WITHOUT_CLASSIFICATION	4.77677650904587E-8	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999998405249679	WITHOUT_CLASSIFICATION	1.5947503202737896E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999873809541819	WITHOUT_CLASSIFICATION	1.2619045818144831E-5	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999968208597186	WITHOUT_CLASSIFICATION	3.179140281410625E-6	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999933415492159	WITHOUT_CLASSIFICATION	6.658450784107035E-6	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999913323271084	WITHOUT_CLASSIFICATION	8.667672891679326E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999999555397263	WITHOUT_CLASSIFICATION	4.446027371454382E-8	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999973533413946	WITHOUT_CLASSIFICATION	2.646658605285316E-6	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999991032883153	WITHOUT_CLASSIFICATION	8.967116847415288E-7	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9998589027276229	WITHOUT_CLASSIFICATION	1.4109727237712863E-4	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999958016962027	WITHOUT_CLASSIFICATION	4.198303797344678E-6	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999958016962027	WITHOUT_CLASSIFICATION	4.198303797344678E-6	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999970570702371	WITHOUT_CLASSIFICATION	2.9429297628156885E-6	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999970570702371	WITHOUT_CLASSIFICATION	2.9429297628156885E-6	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.999997082823239	WITHOUT_CLASSIFICATION	2.917176761173602E-6	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.999995703265101	WITHOUT_CLASSIFICATION	4.296734899064661E-6	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.999995703265101	WITHOUT_CLASSIFICATION	4.296734899064661E-6	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999953018052705	WITHOUT_CLASSIFICATION	4.698194729514733E-6	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999941405501169	WITHOUT_CLASSIFICATION	5.859449883134219E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999996327579482	WITHOUT_CLASSIFICATION	3.6724205178230425E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999967015757794	WITHOUT_CLASSIFICATION	3.298424220603249E-5	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999994045823543	WITHOUT_CLASSIFICATION	5.954176457332016E-7	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999941405501169	WITHOUT_CLASSIFICATION	5.859449883134219E-6	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.999975816550481	WITHOUT_CLASSIFICATION	2.4183449519023074E-5	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999963311734389	WITHOUT_CLASSIFICATION	3.668826561118861E-6	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999962952157657	WITHOUT_CLASSIFICATION	3.7047842342396475E-6	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999969896381201	WITHOUT_CLASSIFICATION	3.0103618799606488E-6	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999999905160024	WITHOUT_CLASSIFICATION	9.483997701386734E-9	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.999987066574494	WITHOUT_CLASSIFICATION	1.2933425505980277E-5	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999992873195743	WITHOUT_CLASSIFICATION	7.126804257124393E-7	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9999999017162549	WITHOUT_CLASSIFICATION	9.828374515420354E-8	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9999987658238699	WITHOUT_CLASSIFICATION	1.2341761299999837E-6	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.999998159494028	WITHOUT_CLASSIFICATION	1.8405059719625036E-6	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999998771212812	WITHOUT_CLASSIFICATION	1.2287871882629044E-7	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9999919507823033	WITHOUT_CLASSIFICATION	8.049217696777994E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999944383784461	WITHOUT_CLASSIFICATION	5.561621553786838E-6	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999964969750036	WITHOUT_CLASSIFICATION	3.5030249963178383E-6	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9999999895331468	WITHOUT_CLASSIFICATION	1.0466853271854609E-8	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9999992026322673	WITHOUT_CLASSIFICATION	7.973677326909361E-7	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999997223279855	WITHOUT_CLASSIFICATION	2.7767201457201694E-7	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.999998554209383	WITHOUT_CLASSIFICATION	1.4457906171023948E-6	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.999998554209383	WITHOUT_CLASSIFICATION	1.4457906171023948E-6	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999990328462023	WITHOUT_CLASSIFICATION	9.671537976726903E-7	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999993896259212	WITHOUT_CLASSIFICATION	6.103740788817967E-7	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999996878833447	WITHOUT_CLASSIFICATION	3.1211665534527377E-7	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999980418261764	WITHOUT_CLASSIFICATION	1.9581738235868915E-6	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999958570803555	WITHOUT_CLASSIFICATION	4.142919644461441E-6	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999998232067502	WITHOUT_CLASSIFICATION	1.76793249765395E-7	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.999999342352543	WITHOUT_CLASSIFICATION	6.576474569675078E-7	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999975504930003	WITHOUT_CLASSIFICATION	2.449506999595447E-6	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999974928010806	WITHOUT_CLASSIFICATION	2.5071989193105078E-6	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999993917411886	WITHOUT_CLASSIFICATION	6.082588114534241E-7	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999992117269517	WITHOUT_CLASSIFICATION	7.882730482419024E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996924944755927	WITHOUT_CLASSIFICATION	3.075055244072531E-4	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999996220427724	WITHOUT_CLASSIFICATION	3.77957227610009E-7	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.999995308008065	WITHOUT_CLASSIFICATION	4.691991935025578E-6	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999989896443919	WITHOUT_CLASSIFICATION	1.0103556079855297E-6	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.999990309434587	WITHOUT_CLASSIFICATION	9.690565413041401E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999007415343	WITHOUT_CLASSIFICATION	9.925846576144747E-8	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999007415343	WITHOUT_CLASSIFICATION	9.925846576144747E-8	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9999962007874081	WITHOUT_CLASSIFICATION	3.7992125918615503E-6	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9999995930101416	WITHOUT_CLASSIFICATION	4.069898583485755E-7	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9999913168601987	WITHOUT_CLASSIFICATION	8.683139801207145E-6	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999828753347709	WITHOUT_CLASSIFICATION	1.7124665229108463E-5	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.999977159000658	WITHOUT_CLASSIFICATION	2.2840999342093257E-5	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999892270842783	WITHOUT_CLASSIFICATION	1.0772915721697009E-5	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999975079151321	WITHOUT_CLASSIFICATION	2.492084867921502E-6	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999985854710282	WITHOUT_CLASSIFICATION	1.4145289718263922E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999958988065669	WITHOUT_CLASSIFICATION	4.1011934330019465E-6	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999996426169993	WITHOUT_CLASSIFICATION	3.573830006892029E-7	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.999998211176571	WITHOUT_CLASSIFICATION	1.7888234291301562E-6	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999985854710282	WITHOUT_CLASSIFICATION	1.4145289718263922E-6	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9999998609499525	WITHOUT_CLASSIFICATION	1.3905004738677693E-7	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999837163914889	WITHOUT_CLASSIFICATION	1.628360851112211E-5	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999999257902336	WITHOUT_CLASSIFICATION	7.420976654667672E-8	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999979450238393	WITHOUT_CLASSIFICATION	2.0549761607139083E-6	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999996201477626	WITHOUT_CLASSIFICATION	3.798522374922707E-7	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999993720659375	WITHOUT_CLASSIFICATION	6.279340626054767E-7	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999641416032481	WITHOUT_CLASSIFICATION	3.5858396751950285E-5	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999987101153162	WITHOUT_CLASSIFICATION	1.2898846838564676E-6	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999980405200287	WITHOUT_CLASSIFICATION	1.9594799712475567E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999744288153584	WITHOUT_CLASSIFICATION	2.557118464163405E-5	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999851133043289	WITHOUT_CLASSIFICATION	1.4886695671022568E-5	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999994949290787	WITHOUT_CLASSIFICATION	5.050709213166172E-7	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999838566593086	WITHOUT_CLASSIFICATION	1.6143340691501687E-5	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999999109050215	WITHOUT_CLASSIFICATION	8.909497857867695E-8	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999985010721125	WITHOUT_CLASSIFICATION	1.4989278874729887E-6	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999980787481958	WITHOUT_CLASSIFICATION	1.9212518041781503E-6	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999968305533451	WITHOUT_CLASSIFICATION	3.1694466548894347E-6	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9999913446645854	WITHOUT_CLASSIFICATION	8.655335414596403E-6	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9999874926621036	WITHOUT_CLASSIFICATION	1.2507337896395411E-5	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.999978880026646	WITHOUT_CLASSIFICATION	2.111997335395327E-5	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9999994473735497	WITHOUT_CLASSIFICATION	5.526264502344347E-7	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.999999478516276	WITHOUT_CLASSIFICATION	5.214837239856924E-7	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.999995803803308	WITHOUT_CLASSIFICATION	4.196196691932512E-6	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9999739692868527	WITHOUT_CLASSIFICATION	2.6030713147281998E-5	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.999988883087409	WITHOUT_CLASSIFICATION	1.1116912590963649E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999913158582879	WITHOUT_CLASSIFICATION	8.684141712123646E-6	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.99999949651805	WITHOUT_CLASSIFICATION	5.03481950058272E-7	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999898151166409	WITHOUT_CLASSIFICATION	1.0184883359111813E-5	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999994694026174	WITHOUT_CLASSIFICATION	5.305973826005731E-7	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999999210124187	WITHOUT_CLASSIFICATION	7.898758121971012E-8	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999989145671693	WITHOUT_CLASSIFICATION	1.0854328307318541E-6	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999973308500864	WITHOUT_CLASSIFICATION	2.6691499135534256E-6	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999969083646373	WITHOUT_CLASSIFICATION	3.091635362592564E-6	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999999980517836	WITHOUT_CLASSIFICATION	1.9482163924073735E-9	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.999999824587879	WITHOUT_CLASSIFICATION	1.754121211260223E-7	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999988026677409	WITHOUT_CLASSIFICATION	1.1973322591466483E-6	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999998421835558	WITHOUT_CLASSIFICATION	1.578164442553662E-7	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.999997132828648	WITHOUT_CLASSIFICATION	2.8671713519782885E-6	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999982662902115	WITHOUT_CLASSIFICATION	1.7337097885716775E-6	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999978440095927	WITHOUT_CLASSIFICATION	2.1559904072964694E-6	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999633473286953	WITHOUT_CLASSIFICATION	3.665267130463462E-5	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999993930063241	WITHOUT_CLASSIFICATION	6.069936757447121E-7	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999970385476156	WITHOUT_CLASSIFICATION	2.9614523845411943E-6	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999999691345307	WITHOUT_CLASSIFICATION	3.08654692865897E-8	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999979990868785	WITHOUT_CLASSIFICATION	2.0009131215376747E-6	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999996803714244	WITHOUT_CLASSIFICATION	3.196285756541486E-7	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999999951519075	WITHOUT_CLASSIFICATION	4.8480924668841024E-9	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.999996954707785	WITHOUT_CLASSIFICATION	3.0452922149732847E-6	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999981015736363	WITHOUT_CLASSIFICATION	1.8984263635876856E-6	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999928924247862	WITHOUT_CLASSIFICATION	7.1075752138440956E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993742653244	WITHOUT_CLASSIFICATION	6.257346757393463E-7	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999997729352619	WITHOUT_CLASSIFICATION	2.2706473818032056E-7	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999999606981365	WITHOUT_CLASSIFICATION	3.930186341763908E-8	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999996731936882	WITHOUT_CLASSIFICATION	3.268063118259119E-7	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999999757894517	WITHOUT_CLASSIFICATION	2.421054834486387E-8	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999929087394505	WITHOUT_CLASSIFICATION	7.091260549595789E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999995834310321	WITHOUT_CLASSIFICATION	4.165689677903734E-7	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999992678608053	WITHOUT_CLASSIFICATION	7.321391947046981E-7	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999975900739477	WITHOUT_CLASSIFICATION	2.409926052226934E-6	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999993129492116	WITHOUT_CLASSIFICATION	6.870507884454101E-7	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.999996992786084	WITHOUT_CLASSIFICATION	3.0072139159684098E-6	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999998803031289	WITHOUT_CLASSIFICATION	1.196968710419525E-7	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999865462079391	WITHOUT_CLASSIFICATION	1.345379206094396E-5	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9999984543631856	WITHOUT_CLASSIFICATION	1.5456368144319932E-6	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9999962885948721	WITHOUT_CLASSIFICATION	3.711405127903759E-6	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999895652624702	WITHOUT_CLASSIFICATION	1.0434737529823913E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993742653244	WITHOUT_CLASSIFICATION	6.257346757393463E-7	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999999311325555	WITHOUT_CLASSIFICATION	6.886744447824583E-8	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999998761545729	WITHOUT_CLASSIFICATION	1.2384542715721834E-7	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999992116879133	WITHOUT_CLASSIFICATION	7.883120867018914E-7	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999968273036635	WITHOUT_CLASSIFICATION	3.1726963364818186E-6	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999976703576509	WITHOUT_CLASSIFICATION	2.3296423491639393E-6	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999975018126958	WITHOUT_CLASSIFICATION	2.498187304308652E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999958988065669	WITHOUT_CLASSIFICATION	4.1011934330019465E-6	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999992265490191	WITHOUT_CLASSIFICATION	7.734509809506984E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.999999824587879	WITHOUT_CLASSIFICATION	1.754121211260223E-7	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9999969880060622	WITHOUT_CLASSIFICATION	3.011993937739408E-6	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999984050169166	WITHOUT_CLASSIFICATION	1.594983083407951E-6	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.999988825848628	WITHOUT_CLASSIFICATION	1.1174151371996182E-5	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999855344650695	WITHOUT_CLASSIFICATION	1.4465534930405174E-5	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.999998018236226	WITHOUT_CLASSIFICATION	1.981763773933059E-6	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999965261352672	WITHOUT_CLASSIFICATION	3.4738647328124573E-6	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999964719919944	WITHOUT_CLASSIFICATION	3.5280080057270855E-6	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999999439946003	WITHOUT_CLASSIFICATION	5.600539960702607E-8	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999993683703388	WITHOUT_CLASSIFICATION	6.316296611528686E-7	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999993426888888	WITHOUT_CLASSIFICATION	6.57311111260944E-7	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.999996160355895	WITHOUT_CLASSIFICATION	3.839644104919846E-6	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999949823809063	WITHOUT_CLASSIFICATION	5.017619093672999E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999909809796378	WITHOUT_CLASSIFICATION	9.019020362235096E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999909809796378	WITHOUT_CLASSIFICATION	9.019020362235096E-6	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999993003679564	WITHOUT_CLASSIFICATION	6.996320435201012E-7	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999915692863722	WITHOUT_CLASSIFICATION	8.430713627711764E-6	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999999740499697	WITHOUT_CLASSIFICATION	2.5950030295280394E-8	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999998856628644	WITHOUT_CLASSIFICATION	1.1433713563363116E-7	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999998172682448	WITHOUT_CLASSIFICATION	1.8273175526116994E-7	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.999975952369367	WITHOUT_CLASSIFICATION	2.4047630633024712E-5	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999974872839887	WITHOUT_CLASSIFICATION	2.512716011274178E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999989090098258	WITHOUT_CLASSIFICATION	1.0909901741875277E-6	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999998505027332	WITHOUT_CLASSIFICATION	1.494972667606358E-7	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999994805357761	WITHOUT_CLASSIFICATION	5.194642239398644E-7	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999966066883785	WITHOUT_CLASSIFICATION	3.393311621323489E-6	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999952839561762	WITHOUT_CLASSIFICATION	4.716043823724453E-6	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999963228748394	WITHOUT_CLASSIFICATION	3.6771251605438207E-6	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.999999877611677	WITHOUT_CLASSIFICATION	1.2238832300965893E-7	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999983084094345	WITHOUT_CLASSIFICATION	1.6915905655400343E-6	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999851676265401	WITHOUT_CLASSIFICATION	1.4832373459874157E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9999968673072919	WITHOUT_CLASSIFICATION	3.1326927081751295E-6	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999998977988119	WITHOUT_CLASSIFICATION	1.0220118805467534E-7	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999970866690682	WITHOUT_CLASSIFICATION	2.9133309319572885E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999991772667349	WITHOUT_CLASSIFICATION	8.227332651154309E-7	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999881600215151	WITHOUT_CLASSIFICATION	1.183997848486397E-5	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999902377990224	WITHOUT_CLASSIFICATION	9.762200977610987E-6	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999985005950809	WITHOUT_CLASSIFICATION	1.4994049191071615E-6	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.9998612267142778	WITHOUT_CLASSIFICATION	1.3877328572220224E-4	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9999993049256941	WITHOUT_CLASSIFICATION	6.95074305832341E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999645225115568	WITHOUT_CLASSIFICATION	3.547748844323287E-5	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999987242534144	WITHOUT_CLASSIFICATION	1.2757465855984635E-6	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999991430172661	WITHOUT_CLASSIFICATION	8.569827339620827E-7	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999674142132665	WITHOUT_CLASSIFICATION	3.258578673351071E-5	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.999992864227242	WITHOUT_CLASSIFICATION	7.135772758030902E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9996321632912883	WITHOUT_CLASSIFICATION	3.6783670871164804E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9999183740354003	WITHOUT_CLASSIFICATION	8.1625964599693E-5	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.999999998216086	WITHOUT_CLASSIFICATION	1.7839139048000467E-9	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.999999995551522	WITHOUT_CLASSIFICATION	4.448477974215637E-9	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999978489021856	WITHOUT_CLASSIFICATION	2.1510978145459982E-6	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999997217306921	WITHOUT_CLASSIFICATION	2.782693078961362E-7	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999939062646809	WITHOUT_CLASSIFICATION	6.09373531920465E-6	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9999925853975917	WITHOUT_CLASSIFICATION	7.414602408321772E-6	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999865193006333	WITHOUT_CLASSIFICATION	1.3480699366737606E-5	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999892245187356	WITHOUT_CLASSIFICATION	1.0775481264394479E-5	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999921531745026	WITHOUT_CLASSIFICATION	7.846825497376089E-6	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999999501660441	WITHOUT_CLASSIFICATION	4.9833955777648055E-8	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999371189444256	WITHOUT_CLASSIFICATION	6.288105557434284E-5	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999889720481405	WITHOUT_CLASSIFICATION	1.1027951859407981E-5	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999982458419666	WITHOUT_CLASSIFICATION	1.7541580333375494E-6	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996365378511	WITHOUT_CLASSIFICATION	3.634621488944968E-6	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9972080187061095	WITHOUT_CLASSIFICATION	0.002791981293890478	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999964759997428	WITHOUT_CLASSIFICATION	3.5240002571867623E-6	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999999583730412	WITHOUT_CLASSIFICATION	4.162695874724846E-8	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.999999560500773	WITHOUT_CLASSIFICATION	4.394992270151214E-7	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979640188813	WITHOUT_CLASSIFICATION	2.0359811187518603E-6	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999990562076116	WITHOUT_CLASSIFICATION	9.437923883806528E-7	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999981186795007	WITHOUT_CLASSIFICATION	1.8813204991543949E-6	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999942134965306	WITHOUT_CLASSIFICATION	5.7865034694129686E-6	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999958962934775	WITHOUT_CLASSIFICATION	4.103706522509396E-6	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999999560080721	WITHOUT_CLASSIFICATION	4.399192789631239E-8	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9999839665062039	WITHOUT_CLASSIFICATION	1.6033493796048725E-5	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9999978871851584	WITHOUT_CLASSIFICATION	2.112814841701959E-6	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999968563299261	WITHOUT_CLASSIFICATION	3.1436700738710216E-6	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.999992643828444	WITHOUT_CLASSIFICATION	7.3561715559274115E-6	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999994486031982	WITHOUT_CLASSIFICATION	5.513968017972015E-7	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999970867181676	WITHOUT_CLASSIFICATION	2.9132818324777087E-6	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999939969470604	WITHOUT_CLASSIFICATION	6.003052939598637E-6	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999991133186562	WITHOUT_CLASSIFICATION	8.866813437020679E-7	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999945454219404	WITHOUT_CLASSIFICATION	5.454578059553276E-6	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999927736066405	WITHOUT_CLASSIFICATION	7.226393359558435E-6	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999971705066247	WITHOUT_CLASSIFICATION	2.829493375372763E-6	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999991318893732	WITHOUT_CLASSIFICATION	8.681106267816526E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999982831128372	WITHOUT_CLASSIFICATION	1.7168871627286214E-6	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.999999684023465	WITHOUT_CLASSIFICATION	3.159765350256683E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999982831128372	WITHOUT_CLASSIFICATION	1.7168871627286214E-6	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999999532938706	WITHOUT_CLASSIFICATION	4.670612943231288E-8	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999998567300415	WITHOUT_CLASSIFICATION	1.4326995843115456E-7	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999520240569486	WITHOUT_CLASSIFICATION	4.797594305145349E-5	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999996672112088	WITHOUT_CLASSIFICATION	3.327887912880822E-7	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999999342454681	WITHOUT_CLASSIFICATION	6.575453197550156E-8	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999145046103923	WITHOUT_CLASSIFICATION	8.549538960761564E-5	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999997314868314	WITHOUT_CLASSIFICATION	2.6851316850885125E-7	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999988109572573	WITHOUT_CLASSIFICATION	1.189042742769475E-6	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999989255069776	WITHOUT_CLASSIFICATION	1.0744930224867576E-6	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999997821041864	WITHOUT_CLASSIFICATION	2.17895813554262E-7	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999984476305106	WITHOUT_CLASSIFICATION	1.5523694893876621E-6	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999969455969263	WITHOUT_CLASSIFICATION	3.054403073737841E-6	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999997265246949	WITHOUT_CLASSIFICATION	2.734753051576009E-7	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9999990730234628	WITHOUT_CLASSIFICATION	9.26976537113418E-7	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999910011204084	WITHOUT_CLASSIFICATION	8.99887959164343E-6	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999992361109803	WITHOUT_CLASSIFICATION	7.638890197361315E-7	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999995264134329	WITHOUT_CLASSIFICATION	4.735865670663389E-7	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999996822371963	WITHOUT_CLASSIFICATION	3.1776280376359037E-7	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999999580247869	WITHOUT_CLASSIFICATION	4.197521306038968E-8	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9999978772148219	WITHOUT_CLASSIFICATION	2.1227851780554485E-6	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.999999022298296	WITHOUT_CLASSIFICATION	9.777017040662304E-7	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9999969917665017	WITHOUT_CLASSIFICATION	3.008233498267277E-6	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999961240820405	WITHOUT_CLASSIFICATION	3.875917959553998E-6	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999998683090447	WITHOUT_CLASSIFICATION	1.3169095527584685E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999987809572285	WITHOUT_CLASSIFICATION	1.2190427715111894E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.999999707117622	WITHOUT_CLASSIFICATION	2.928823780783309E-7	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999933337522038	WITHOUT_CLASSIFICATION	6.666247796180879E-6	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9999883413051976	WITHOUT_CLASSIFICATION	1.1658694802327933E-5	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999940232585606	WITHOUT_CLASSIFICATION	5.976741439431641E-6	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999987792634757	WITHOUT_CLASSIFICATION	1.2207365243219205E-6	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9999877339741372	WITHOUT_CLASSIFICATION	1.2266025862820394E-5	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999905229527237	WITHOUT_CLASSIFICATION	9.477047276359604E-6	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999999711008849	WITHOUT_CLASSIFICATION	2.8899115055733547E-8	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999898140491303	WITHOUT_CLASSIFICATION	1.018595086973772E-5	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999946848963575	WITHOUT_CLASSIFICATION	5.315103642549207E-6	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9999758594059224	WITHOUT_CLASSIFICATION	2.4140594077627755E-5	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999722564092043	WITHOUT_CLASSIFICATION	2.7743590795726877E-5	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999897978580389	WITHOUT_CLASSIFICATION	1.020214196113027E-5	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.9998921283311872	WITHOUT_CLASSIFICATION	1.078716688128187E-4	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.99999963495624	WITHOUT_CLASSIFICATION	3.6504375995799593E-7	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999827133243199	WITHOUT_CLASSIFICATION	1.7286675680060778E-5	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9999966265443261	WITHOUT_CLASSIFICATION	3.373455673904755E-6	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999934833147761	WITHOUT_CLASSIFICATION	6.516685223935156E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.999999707117622	WITHOUT_CLASSIFICATION	2.928823780783309E-7	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9997395234077368	WITHOUT_CLASSIFICATION	2.604765922632156E-4	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999985311228792	WITHOUT_CLASSIFICATION	1.468877120921888E-6	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9999711571547313	WITHOUT_CLASSIFICATION	2.8842845268755833E-5	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999977501882281	WITHOUT_CLASSIFICATION	2.249811771877492E-6	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999661795291691	WITHOUT_CLASSIFICATION	3.3820470830896174E-5	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999941857477064	WITHOUT_CLASSIFICATION	5.814252293605457E-6	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999960695254528	WITHOUT_CLASSIFICATION	3.930474547189618E-6	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999997165442754	WITHOUT_CLASSIFICATION	2.8345572458834006E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999989879541312	WITHOUT_CLASSIFICATION	1.0120458687467656E-6	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999998932299969	WITHOUT_CLASSIFICATION	1.0677000305039575E-7	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9999967424639058	WITHOUT_CLASSIFICATION	3.2575360942091244E-6	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999889073864767	WITHOUT_CLASSIFICATION	1.1092613523391402E-5	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.999987258929014	WITHOUT_CLASSIFICATION	1.2741070985928345E-5	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9999709966310852	WITHOUT_CLASSIFICATION	2.9003368914799113E-5	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999877100786957	WITHOUT_CLASSIFICATION	1.2289921304297575E-5	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999999512750701	WITHOUT_CLASSIFICATION	4.872492987025698E-8	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999901818447071	WITHOUT_CLASSIFICATION	9.818155292935929E-6	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999985260711188	WITHOUT_CLASSIFICATION	1.4739288812297592E-6	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999999281771598	WITHOUT_CLASSIFICATION	7.182284023427486E-8	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9997395234077368	WITHOUT_CLASSIFICATION	2.604765922632156E-4	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.999992101223432	WITHOUT_CLASSIFICATION	7.89877656804676E-6	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999994489768699	WITHOUT_CLASSIFICATION	5.510231301924977E-7	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999919649134812	WITHOUT_CLASSIFICATION	8.035086518852434E-6	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999975623324582	WITHOUT_CLASSIFICATION	2.4376675417897065E-6	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9999988081597152	WITHOUT_CLASSIFICATION	1.1918402848781025E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999764609112053	WITHOUT_CLASSIFICATION	2.3539088794702435E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999764609112053	WITHOUT_CLASSIFICATION	2.3539088794702435E-5	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999972302795442	WITHOUT_CLASSIFICATION	2.7697204556711878E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999764609112053	WITHOUT_CLASSIFICATION	2.3539088794702435E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999764609112053	WITHOUT_CLASSIFICATION	2.3539088794702435E-5	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9998417524547959	WITHOUT_CLASSIFICATION	1.5824754520405435E-4	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999976861339787	WITHOUT_CLASSIFICATION	2.3138660214099816E-6	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999992527005563	WITHOUT_CLASSIFICATION	7.47299443645603E-7	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999982696700483	WITHOUT_CLASSIFICATION	1.7303299517009383E-6	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999855341198592	WITHOUT_CLASSIFICATION	1.4465880140743627E-5	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9999947180007275	WITHOUT_CLASSIFICATION	5.281999272604738E-6	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9999827371393053	WITHOUT_CLASSIFICATION	1.726286069472211E-5	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999840282512383	WITHOUT_CLASSIFICATION	1.5971748761731515E-5	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999758298052012	WITHOUT_CLASSIFICATION	2.4170194798862016E-5	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.999948400765484	WITHOUT_CLASSIFICATION	5.1599234516083824E-5	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9999921544338554	WITHOUT_CLASSIFICATION	7.845566144674408E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999854848630655	WITHOUT_CLASSIFICATION	1.451513693458259E-5	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999968601894972	WITHOUT_CLASSIFICATION	3.139810502771792E-6	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9999635731522075	WITHOUT_CLASSIFICATION	3.642684779251109E-5	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999866787129618	WITHOUT_CLASSIFICATION	1.3321287038320877E-5	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999759677779405	WITHOUT_CLASSIFICATION	2.4032222059538732E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999906823724292	WITHOUT_CLASSIFICATION	9.317627570924722E-6	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999785823511125	WITHOUT_CLASSIFICATION	2.141764888752333E-5	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.999914414731609	WITHOUT_CLASSIFICATION	8.558526839094043E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9999530259066108	WITHOUT_CLASSIFICATION	4.6974093389123564E-5	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999969515521988	WITHOUT_CLASSIFICATION	3.048447801247535E-6	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999619173628109	WITHOUT_CLASSIFICATION	3.8082637189199915E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999906823724292	WITHOUT_CLASSIFICATION	9.317627570924722E-6	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999933337522038	WITHOUT_CLASSIFICATION	6.666247796180879E-6	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999850079257092	WITHOUT_CLASSIFICATION	1.4992074290864877E-5	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999989156640199	WITHOUT_CLASSIFICATION	1.0843359801176738E-6	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999997167039166	WITHOUT_CLASSIFICATION	2.8329608327833924E-7	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.999991625246705	WITHOUT_CLASSIFICATION	8.37475329496317E-6	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999983171333824	WITHOUT_CLASSIFICATION	1.6828666176287167E-6	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.9999974493297127	WITHOUT_CLASSIFICATION	2.5506702872197744E-6	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999984637554684	WITHOUT_CLASSIFICATION	1.536244531587292E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.999989421905302	WITHOUT_CLASSIFICATION	1.0578094697957281E-5	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999963745333275	WITHOUT_CLASSIFICATION	3.6254666725684443E-6	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9999913794706266	WITHOUT_CLASSIFICATION	8.620529373427307E-6	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999998138617983	WITHOUT_CLASSIFICATION	1.8613820179802233E-7	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999990013386058	WITHOUT_CLASSIFICATION	9.986613942955802E-7	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999990550987168	WITHOUT_CLASSIFICATION	9.449012832254093E-7	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9999992608224321	WITHOUT_CLASSIFICATION	7.39177568024559E-7	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.99999985656002	WITHOUT_CLASSIFICATION	1.4343997998881032E-7	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999990779740912	WITHOUT_CLASSIFICATION	9.220259089041815E-7	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.999998568790843	WITHOUT_CLASSIFICATION	1.4312091570476558E-6	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999999044313486	WITHOUT_CLASSIFICATION	9.556865137067338E-8	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999998215634703	WITHOUT_CLASSIFICATION	1.7843652968292628E-7	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9999966684288235	WITHOUT_CLASSIFICATION	3.3315711765086603E-6	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999987352843255	WITHOUT_CLASSIFICATION	1.2647156745464928E-6	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999997414099552	WITHOUT_CLASSIFICATION	2.585900448734238E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.999989421905302	WITHOUT_CLASSIFICATION	1.0578094697957281E-5	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999818932045059	WITHOUT_CLASSIFICATION	1.8106795494116982E-5	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9999814600805147	WITHOUT_CLASSIFICATION	1.8539919485290357E-5	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9999879633647317	WITHOUT_CLASSIFICATION	1.2036635268169816E-5	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999978715146796	WITHOUT_CLASSIFICATION	2.1284853203852697E-6	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985802602308	WITHOUT_CLASSIFICATION	1.4197397691252896E-6	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9999917995701807	WITHOUT_CLASSIFICATION	8.200429819176876E-6	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9999847413790236	WITHOUT_CLASSIFICATION	1.5258620976321522E-5	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999679659853721	WITHOUT_CLASSIFICATION	3.203401462792957E-5	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.9999910293002815	WITHOUT_CLASSIFICATION	8.97069971849355E-6	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9999226667257296	WITHOUT_CLASSIFICATION	7.733327427033966E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999747409429125	WITHOUT_CLASSIFICATION	2.5259057087434518E-5	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999999892904688	WITHOUT_CLASSIFICATION	1.0709531129181133E-8	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.999988864523175	WITHOUT_CLASSIFICATION	1.113547682500683E-5	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999982449648422	WITHOUT_CLASSIFICATION	1.7550351577021696E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999449738473483	WITHOUT_CLASSIFICATION	5.502615265166421E-5	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999705343185589	WITHOUT_CLASSIFICATION	2.9465681441096876E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999971537201112	WITHOUT_CLASSIFICATION	2.8462798888207013E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999747409429125	WITHOUT_CLASSIFICATION	2.5259057087434518E-5	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999998267586296	WITHOUT_CLASSIFICATION	1.7324137023254046E-7	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9999994089493268	WITHOUT_CLASSIFICATION	5.910506731130192E-7	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.999997640248652	WITHOUT_CLASSIFICATION	2.3597513479441314E-6	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999739306697355	WITHOUT_CLASSIFICATION	2.6069330264434118E-5	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999965936917286	WITHOUT_CLASSIFICATION	3.406308271430569E-6	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.999999674458464	WITHOUT_CLASSIFICATION	3.255415360416585E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999449738473483	WITHOUT_CLASSIFICATION	5.502615265166421E-5	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999998528737216	WITHOUT_CLASSIFICATION	1.4712627831623874E-7	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983832440625	WITHOUT_CLASSIFICATION	1.6167559374977456E-6	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994471643256	WITHOUT_CLASSIFICATION	5.528356744599686E-7	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997995886563	WITHOUT_CLASSIFICATION	2.004113436904379E-6	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999981331799737	WITHOUT_CLASSIFICATION	1.8668200263219817E-6	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999382514936	WITHOUT_CLASSIFICATION	6.174850638783665E-7	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999987602867211	WITHOUT_CLASSIFICATION	1.239713279025021E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999987602867211	WITHOUT_CLASSIFICATION	1.239713279025021E-6	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999981788327243	WITHOUT_CLASSIFICATION	1.8211672755883281E-6	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999928615834733	WITHOUT_CLASSIFICATION	7.138416526622871E-6	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999939308861866	WITHOUT_CLASSIFICATION	6.06911381344301E-6	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9999973999800503	WITHOUT_CLASSIFICATION	2.600019949741428E-6	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.999998739649331	WITHOUT_CLASSIFICATION	1.2603506689553416E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976468270405	WITHOUT_CLASSIFICATION	2.3531729594725025E-6	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999746781924855	WITHOUT_CLASSIFICATION	2.532180751445228E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993391927853	WITHOUT_CLASSIFICATION	6.608072148009021E-7	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999871659105796	WITHOUT_CLASSIFICATION	1.2834089420406387E-5	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999949399898636	WITHOUT_CLASSIFICATION	5.0600101365102384E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976468270405	WITHOUT_CLASSIFICATION	2.3531729594725025E-6	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999746781924855	WITHOUT_CLASSIFICATION	2.532180751445228E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993391927853	WITHOUT_CLASSIFICATION	6.608072148009021E-7	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999928600660573	WITHOUT_CLASSIFICATION	7.139933942656717E-6	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9999528858556865	WITHOUT_CLASSIFICATION	4.7114144313489784E-5	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999996757928622	WITHOUT_CLASSIFICATION	3.2420713782807006E-7	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999975861138137	WITHOUT_CLASSIFICATION	2.413886186344072E-6	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999999469164015	WITHOUT_CLASSIFICATION	5.308359856516931E-8	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999996418716934	WITHOUT_CLASSIFICATION	3.581283065373796E-7	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.999984763812653	WITHOUT_CLASSIFICATION	1.5236187347036493E-5	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.9999957376554338	WITHOUT_CLASSIFICATION	4.2623445661532985E-6	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9999236067171957	WITHOUT_CLASSIFICATION	7.639328280423024E-5	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999985762767392	WITHOUT_CLASSIFICATION	1.4237232608510054E-6	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999992355128462	WITHOUT_CLASSIFICATION	7.644871537906706E-7	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999990218495879	WITHOUT_CLASSIFICATION	9.781504120583463E-7	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9999666707537401	WITHOUT_CLASSIFICATION	3.3329246259821304E-5	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.999997496836182	WITHOUT_CLASSIFICATION	2.5031638179404217E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999995414116575	WITHOUT_CLASSIFICATION	4.5858834259022325E-7	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999880323616441	WITHOUT_CLASSIFICATION	1.1967638355954418E-5	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9998301493761271	WITHOUT_CLASSIFICATION	1.6985062387291265E-4	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999021920281521	WITHOUT_CLASSIFICATION	9.780797184788509E-5	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999995953339035	WITHOUT_CLASSIFICATION	4.046660965142035E-7	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999933710818933	WITHOUT_CLASSIFICATION	6.628918106637486E-6	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999991176756884	WITHOUT_CLASSIFICATION	8.823243115486987E-7	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999999075010187	WITHOUT_CLASSIFICATION	9.249898134325334E-8	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999957570094007	WITHOUT_CLASSIFICATION	4.242990599268688E-6	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999998655041086	WITHOUT_CLASSIFICATION	1.3449589138469467E-7	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999999702727091	WITHOUT_CLASSIFICATION	2.9727290804404987E-8	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9992329088443973	WITHOUT_CLASSIFICATION	7.670911556025657E-4	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999973012139167	WITHOUT_CLASSIFICATION	2.6987860833613755E-6	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999946982611059	WITHOUT_CLASSIFICATION	5.301738894083448E-6	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999883276727709	WITHOUT_CLASSIFICATION	1.1672327229108621E-5	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999913535373219	WITHOUT_CLASSIFICATION	8.646462678020638E-6	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999995983339718	WITHOUT_CLASSIFICATION	4.016660282001655E-6	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999938099869741	WITHOUT_CLASSIFICATION	6.190013025876694E-6	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999938099869741	WITHOUT_CLASSIFICATION	6.190013025876694E-6	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999986129395775	WITHOUT_CLASSIFICATION	1.3870604225643404E-6	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999999740672298	WITHOUT_CLASSIFICATION	2.5932770150335597E-8	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999988680036083	WITHOUT_CLASSIFICATION	1.1319963917457385E-6	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996924944755927	WITHOUT_CLASSIFICATION	3.075055244072531E-4	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999994568187153	WITHOUT_CLASSIFICATION	5.431812846298065E-7	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9999961311260598	WITHOUT_CLASSIFICATION	3.868873940138328E-6	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9999293325355733	WITHOUT_CLASSIFICATION	7.066746442679316E-5	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999980406964604	WITHOUT_CLASSIFICATION	1.9593035395766603E-6	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999878618468744	WITHOUT_CLASSIFICATION	1.2138153125658362E-5	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99999687541468	WITHOUT_CLASSIFICATION	3.124585320088529E-6	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983491486192	WITHOUT_CLASSIFICATION	1.650851380877139E-6	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998456427541	WITHOUT_CLASSIFICATION	1.543572458936477E-6	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979471145988	WITHOUT_CLASSIFICATION	2.0528854011888068E-6	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989873208853	WITHOUT_CLASSIFICATION	1.0126791147113208E-6	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999981850121102	WITHOUT_CLASSIFICATION	1.8149878898318761E-6	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999964756769812	WITHOUT_CLASSIFICATION	3.5243230187624187E-6	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994322668629	WITHOUT_CLASSIFICATION	5.677331371603721E-7	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995450854116	WITHOUT_CLASSIFICATION	4.549145883714727E-7	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988227785473	WITHOUT_CLASSIFICATION	1.177221452614781E-6	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999981326470395	WITHOUT_CLASSIFICATION	1.8673529604983012E-6	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999984033172664	WITHOUT_CLASSIFICATION	1.5966827336211373E-6	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9999903919514094	WITHOUT_CLASSIFICATION	9.60804859068397E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999973499926949	WITHOUT_CLASSIFICATION	2.6500073050615875E-6	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.999998762746059	WITHOUT_CLASSIFICATION	1.237253940989503E-6	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999847426083304	WITHOUT_CLASSIFICATION	1.5257391669577022E-5	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999993828284394	WITHOUT_CLASSIFICATION	6.171715605351231E-7	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999991340030634	WITHOUT_CLASSIFICATION	8.659969365259748E-7	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.999999792169111	WITHOUT_CLASSIFICATION	2.0783088911479652E-7	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999973499926949	WITHOUT_CLASSIFICATION	2.6500073050615875E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999973499926949	WITHOUT_CLASSIFICATION	2.6500073050615875E-6	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9999969243821973	WITHOUT_CLASSIFICATION	3.075617802612852E-6	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999999492723637	WITHOUT_CLASSIFICATION	5.0727636409638883E-8	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.999998323637626	WITHOUT_CLASSIFICATION	1.6763623740588722E-6	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.999999514176849	WITHOUT_CLASSIFICATION	4.858231510029232E-7	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999944383784461	WITHOUT_CLASSIFICATION	5.561621553786838E-6	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999933710818933	WITHOUT_CLASSIFICATION	6.628918106637486E-6	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999498327067169	WITHOUT_CLASSIFICATION	5.016729328317779E-5	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.99999931201958	WITHOUT_CLASSIFICATION	6.879804199767841E-7	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.999999856346232	WITHOUT_CLASSIFICATION	1.4365376793575504E-7	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997988882049	WITHOUT_CLASSIFICATION	2.0111179496603555E-7	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999997656894533	WITHOUT_CLASSIFICATION	2.343105466728381E-7	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999832255721538	WITHOUT_CLASSIFICATION	1.6774427846232105E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.999971605829981	WITHOUT_CLASSIFICATION	2.8394170018910046E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.999971605829981	WITHOUT_CLASSIFICATION	2.8394170018910046E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999821532379984	WITHOUT_CLASSIFICATION	1.784676200153468E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999821532379984	WITHOUT_CLASSIFICATION	1.784676200153468E-5	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993206048962	WITHOUT_CLASSIFICATION	6.793951038339746E-7	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950025308926	WITHOUT_CLASSIFICATION	4.997469107457094E-6	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.999992691902832	WITHOUT_CLASSIFICATION	7.308097167959718E-6	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993160723176	WITHOUT_CLASSIFICATION	6.839276824179539E-7	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9999999175040641	WITHOUT_CLASSIFICATION	8.249593592628567E-8	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999995023131273	WITHOUT_CLASSIFICATION	4.976868726267942E-7	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999994873653493	WITHOUT_CLASSIFICATION	5.1263465070555685E-6	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999982461147277	WITHOUT_CLASSIFICATION	1.7538852723933178E-6	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9999867405097917	WITHOUT_CLASSIFICATION	1.325949020832712E-5	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999986599286501	WITHOUT_CLASSIFICATION	1.3400713498702468E-6	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999957446252656	WITHOUT_CLASSIFICATION	4.255374734376373E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996893424041088	WITHOUT_CLASSIFICATION	3.1065759589115135E-4	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999987729476036	WITHOUT_CLASSIFICATION	1.2270523962761696E-6	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999974185438183	WITHOUT_CLASSIFICATION	2.5814561816547606E-6	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999965028123498	WITHOUT_CLASSIFICATION	3.497187650224286E-6	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.9999548982481135	WITHOUT_CLASSIFICATION	4.510175188647827E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999911324133471	WITHOUT_CLASSIFICATION	8.867586652909985E-6	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999911324133471	WITHOUT_CLASSIFICATION	8.867586652909985E-6	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.999999966740103	WITHOUT_CLASSIFICATION	3.325989687169715E-8	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.999996670335802	WITHOUT_CLASSIFICATION	3.3296641981123322E-6	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999757074339894	WITHOUT_CLASSIFICATION	2.429256601046058E-5	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.999963491916416	WITHOUT_CLASSIFICATION	3.65080835840211E-5	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999494035314	WITHOUT_CLASSIFICATION	5.05964685990766E-7	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993892917122	WITHOUT_CLASSIFICATION	6.107082879067343E-7	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999997392110868	WITHOUT_CLASSIFICATION	2.6078891324186165E-7	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991773576795	WITHOUT_CLASSIFICATION	8.226423203724405E-7	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999987508305693	WITHOUT_CLASSIFICATION	1.249169430642047E-6	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.999997408983361	WITHOUT_CLASSIFICATION	2.5910166390530795E-6	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999995612305453	WITHOUT_CLASSIFICATION	4.387694546047175E-7	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999940776226318	WITHOUT_CLASSIFICATION	5.922377368255129E-6	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963119016924	WITHOUT_CLASSIFICATION	3.6880983075474838E-6	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999995907338636	WITHOUT_CLASSIFICATION	4.0926613648982933E-7	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999998149473489	WITHOUT_CLASSIFICATION	1.8505265114449706E-7	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999929904833805	WITHOUT_CLASSIFICATION	7.009516619535707E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.99999953289127	WITHOUT_CLASSIFICATION	4.671087300514485E-7	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999972778086894	WITHOUT_CLASSIFICATION	2.722191310682267E-6	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999973439104173	WITHOUT_CLASSIFICATION	2.656089582853771E-6	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999956721627957	WITHOUT_CLASSIFICATION	4.327837204259345E-6	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999990109397102	WITHOUT_CLASSIFICATION	9.890602898183156E-7	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999998850066006	WITHOUT_CLASSIFICATION	1.1499339938020235E-7	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999988676193311	WITHOUT_CLASSIFICATION	1.132380668864781E-6	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999995902477941	WITHOUT_CLASSIFICATION	4.0975220593447785E-7	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999978198945263	WITHOUT_CLASSIFICATION	2.1801054736716755E-6	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999958310746926	WITHOUT_CLASSIFICATION	4.168925307510321E-6	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999993137746747	WITHOUT_CLASSIFICATION	6.862253254089106E-7	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9999922005699269	WITHOUT_CLASSIFICATION	7.799430073052018E-6	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999970885775981	WITHOUT_CLASSIFICATION	2.9114224019841617E-6	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999934842056469	WITHOUT_CLASSIFICATION	6.515794353051263E-6	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999999215583767	WITHOUT_CLASSIFICATION	7.844162332012535E-8	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999940028560332	WITHOUT_CLASSIFICATION	5.99714396671035E-6	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999841695823926	WITHOUT_CLASSIFICATION	1.5830417607428946E-5	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9996304433215747	WITHOUT_CLASSIFICATION	3.695566784253351E-4	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999976309501637	WITHOUT_CLASSIFICATION	2.3690498364044214E-6	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9999808139640122	WITHOUT_CLASSIFICATION	1.918603598778809E-5	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999999716487951	WITHOUT_CLASSIFICATION	2.8351204990314254E-8	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999990569123587	WITHOUT_CLASSIFICATION	9.430876414163435E-7	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999972496983232	WITHOUT_CLASSIFICATION	2.7503016768507043E-6	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.9999975622910549	WITHOUT_CLASSIFICATION	2.437708945211205E-6	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999999972320083	WITHOUT_CLASSIFICATION	2.767991614086012E-9	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999997619770831	WITHOUT_CLASSIFICATION	2.3802291687158555E-7	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999994276412342	WITHOUT_CLASSIFICATION	5.723587658554453E-7	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999998264681008	WITHOUT_CLASSIFICATION	1.7353189907575616E-7	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999986746981544	WITHOUT_CLASSIFICATION	1.3253018456549306E-6	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999806766040574	WITHOUT_CLASSIFICATION	1.9323395942576415E-5	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999921327164737	WITHOUT_CLASSIFICATION	7.867283526361952E-6	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999598711513644	WITHOUT_CLASSIFICATION	4.0128848635655624E-5	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999947660200417	WITHOUT_CLASSIFICATION	5.233979958286776E-6	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.999992947798467	WITHOUT_CLASSIFICATION	7.052201533012359E-6	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999965407554466	WITHOUT_CLASSIFICATION	3.459244553429156E-6	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9999015229112527	WITHOUT_CLASSIFICATION	9.847708874727716E-5	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999928261995376	WITHOUT_CLASSIFICATION	7.173800462499785E-6	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999907742607065	WITHOUT_CLASSIFICATION	9.225739293520728E-6	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999070349757387	WITHOUT_CLASSIFICATION	9.296502426116696E-5	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999965886664821	WITHOUT_CLASSIFICATION	3.4113335179157495E-6	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9999377870541402	WITHOUT_CLASSIFICATION	6.221294585980893E-5	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9996885599721801	WITHOUT_CLASSIFICATION	3.114400278199781E-4	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.999996954353678	WITHOUT_CLASSIFICATION	3.045646322010552E-6	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9998971873957746	WITHOUT_CLASSIFICATION	1.0281260422540799E-4	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.999998619371629	WITHOUT_CLASSIFICATION	1.3806283708564701E-6	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999986571659807	WITHOUT_CLASSIFICATION	1.3428340193105457E-6	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.999999768720569	WITHOUT_CLASSIFICATION	2.3127943098481153E-7	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999970264157672	WITHOUT_CLASSIFICATION	2.9735842328260953E-6	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999993949971545	WITHOUT_CLASSIFICATION	6.050028454306155E-7	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999995457096001	WITHOUT_CLASSIFICATION	4.5429039990009357E-7	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.999999997982515	WITHOUT_CLASSIFICATION	2.017484939432323E-9	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999979260307833	WITHOUT_CLASSIFICATION	2.073969216625233E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998484151047137	WITHOUT_CLASSIFICATION	1.515848952864218E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998484151047137	WITHOUT_CLASSIFICATION	1.515848952864218E-4	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999817569739747	WITHOUT_CLASSIFICATION	1.824302602532186E-5	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.999998369253102	WITHOUT_CLASSIFICATION	1.6307468979754549E-6	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999993400609276	WITHOUT_CLASSIFICATION	6.599390723952767E-7	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999920636298709	WITHOUT_CLASSIFICATION	7.936370128998233E-6	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999968262494372	WITHOUT_CLASSIFICATION	3.1737505628523778E-6	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.999997224244464	WITHOUT_CLASSIFICATION	2.7757555359858446E-6	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999834730355912	WITHOUT_CLASSIFICATION	1.652696440883956E-5	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999999626205684	WITHOUT_CLASSIFICATION	3.7379431519237915E-8	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.999994230911387	WITHOUT_CLASSIFICATION	5.769088613033683E-6	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999999523542665	WITHOUT_CLASSIFICATION	4.7645733388832896E-8	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999871776519678	WITHOUT_CLASSIFICATION	1.282234803225511E-5	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999988801738225	WITHOUT_CLASSIFICATION	1.1198261774779786E-6	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9999839630172418	WITHOUT_CLASSIFICATION	1.6036982758248895E-5	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999990197361357	WITHOUT_CLASSIFICATION	9.802638642707208E-7	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999988679801153	WITHOUT_CLASSIFICATION	1.1320198847178994E-6	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999878137374313	WITHOUT_CLASSIFICATION	1.2186262568704605E-5	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999818550808448	WITHOUT_CLASSIFICATION	1.8144919155123617E-5	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999993970798057	WITHOUT_CLASSIFICATION	6.029201943566957E-7	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999997957566177	WITHOUT_CLASSIFICATION	2.04243382300636E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999997415474303	WITHOUT_CLASSIFICATION	2.5845256963954263E-7	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999898549435539	WITHOUT_CLASSIFICATION	1.0145056446088887E-5	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999755699447749	WITHOUT_CLASSIFICATION	2.4430055225105994E-5	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9996189169121631	WITHOUT_CLASSIFICATION	3.810830878368557E-4	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9999977656187214	WITHOUT_CLASSIFICATION	2.234381278572995E-6	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999697472975732	WITHOUT_CLASSIFICATION	3.0252702426901358E-5	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9999937222471772	WITHOUT_CLASSIFICATION	6.27775282271555E-6	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.999995344370566	WITHOUT_CLASSIFICATION	4.65562943397771E-6	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999919273013742	WITHOUT_CLASSIFICATION	8.072698625705487E-6	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999996841431235	WITHOUT_CLASSIFICATION	3.158568764969064E-7	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999994023254145	WITHOUT_CLASSIFICATION	5.976745855396205E-7	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999989354870376	WITHOUT_CLASSIFICATION	1.0645129624266996E-6	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999974930618096	WITHOUT_CLASSIFICATION	2.506938190336994E-6	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999985986855017	WITHOUT_CLASSIFICATION	1.4013144983930757E-6	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.9999868766787128	WITHOUT_CLASSIFICATION	1.3123321287310853E-5	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.999993952684687	WITHOUT_CLASSIFICATION	6.0473153129265585E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.999993952684687	WITHOUT_CLASSIFICATION	6.0473153129265585E-6	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999941511872998	WITHOUT_CLASSIFICATION	5.848812700147335E-6	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.999991273998883	WITHOUT_CLASSIFICATION	8.726001116945123E-6	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999987357009288	WITHOUT_CLASSIFICATION	1.2642990711790353E-6	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999922923842116	WITHOUT_CLASSIFICATION	7.707615788472001E-6	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999995969819054	WITHOUT_CLASSIFICATION	4.0301809466411686E-7	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999923556515583	WITHOUT_CLASSIFICATION	7.644348441683853E-6	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999951668314875	WITHOUT_CLASSIFICATION	4.833168512489666E-6	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999999538677589	WITHOUT_CLASSIFICATION	4.6132241092650945E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9999694455223369	WITHOUT_CLASSIFICATION	3.055447766316899E-5	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999998735034196	WITHOUT_CLASSIFICATION	1.264965803483468E-7	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999999704041491	WITHOUT_CLASSIFICATION	2.9595850837725896E-8	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9999997713805182	WITHOUT_CLASSIFICATION	2.286194818005626E-7	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999990110733059	WITHOUT_CLASSIFICATION	9.889266940815166E-7	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.999999614859374	WITHOUT_CLASSIFICATION	3.851406258694023E-7	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999997201654914	WITHOUT_CLASSIFICATION	2.7983450857594167E-7	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999976633891366	WITHOUT_CLASSIFICATION	2.336610863340003E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999976633891366	WITHOUT_CLASSIFICATION	2.336610863340003E-6	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.999999152481888	WITHOUT_CLASSIFICATION	8.475181120845825E-7	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999976912354477	WITHOUT_CLASSIFICATION	2.3087645523366503E-6	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999999082824372	WITHOUT_CLASSIFICATION	9.171756282062716E-8	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999996671102385	WITHOUT_CLASSIFICATION	3.328897614798741E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996893424041088	WITHOUT_CLASSIFICATION	3.1065759589115135E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999835734607954	WITHOUT_CLASSIFICATION	1.6426539204588496E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999979862844235	WITHOUT_CLASSIFICATION	2.0137155764791403E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999927907318346	WITHOUT_CLASSIFICATION	7.209268165378546E-6	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999927907318346	WITHOUT_CLASSIFICATION	7.209268165378546E-6	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999983355206543	WITHOUT_CLASSIFICATION	1.6644793456892138E-6	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999999447960266	WITHOUT_CLASSIFICATION	5.52039733500341E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999985227205568	WITHOUT_CLASSIFICATION	1.4772794432786064E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.999999864082737	WITHOUT_CLASSIFICATION	1.3591726299072085E-7	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.99999579729116	WITHOUT_CLASSIFICATION	4.2027088400677934E-6	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998871154344701	WITHOUT_CLASSIFICATION	1.1288456553000579E-4	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999992629439532	WITHOUT_CLASSIFICATION	7.370560467693517E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999996327579482	WITHOUT_CLASSIFICATION	3.6724205178230425E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999981459949354	WITHOUT_CLASSIFICATION	1.85400506466404E-6	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.999994627356845	WITHOUT_CLASSIFICATION	5.372643154969436E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999980100544422	WITHOUT_CLASSIFICATION	1.9899455577108853E-6	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.999990046132432	WITHOUT_CLASSIFICATION	9.953867568027646E-6	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999998931622665	WITHOUT_CLASSIFICATION	1.0683773360257634E-7	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.999997082823239	WITHOUT_CLASSIFICATION	2.917176761173602E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999674142132665	WITHOUT_CLASSIFICATION	3.258578673351071E-5	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999990754174163	WITHOUT_CLASSIFICATION	9.245825836014325E-7	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.999997553911989	WITHOUT_CLASSIFICATION	2.4460880109672228E-6	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999620182731148	WITHOUT_CLASSIFICATION	3.7981726885274825E-5	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999979073777108	WITHOUT_CLASSIFICATION	2.0926222893427633E-6	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999982779590063	WITHOUT_CLASSIFICATION	1.7220409937216716E-6	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999964974219515	WITHOUT_CLASSIFICATION	3.502578048579513E-6	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999953018052705	WITHOUT_CLASSIFICATION	4.698194729514733E-6	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999995350413389	WITHOUT_CLASSIFICATION	4.649586610900555E-7	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999994588678812	WITHOUT_CLASSIFICATION	5.411321188528803E-7	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999979214638102	WITHOUT_CLASSIFICATION	2.078536189771625E-6	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999933214562592	WITHOUT_CLASSIFICATION	6.678543740817695E-6	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999987435498755	WITHOUT_CLASSIFICATION	1.2564501244777243E-6	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999980295209091	WITHOUT_CLASSIFICATION	1.970479090952776E-6	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999995951784592	WITHOUT_CLASSIFICATION	4.048215409008397E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999007415343	WITHOUT_CLASSIFICATION	9.925846576144747E-8	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9999742684427843	WITHOUT_CLASSIFICATION	2.573155721570137E-5	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9999670669621032	WITHOUT_CLASSIFICATION	3.2933037896703846E-5	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999996919991752	WITHOUT_CLASSIFICATION	3.0800082484372987E-7	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999993259901951	WITHOUT_CLASSIFICATION	6.740098047978379E-7	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999962396141616	WITHOUT_CLASSIFICATION	3.7603858383400593E-6	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999744390656287	WITHOUT_CLASSIFICATION	2.5560934371373502E-5	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.9999802148270948	WITHOUT_CLASSIFICATION	1.978517290525234E-5	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.9999971182276902	WITHOUT_CLASSIFICATION	2.8817723096575E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.99999362485142	WITHOUT_CLASSIFICATION	6.375148580035694E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999833601257752	WITHOUT_CLASSIFICATION	1.6639874224842323E-5	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999996265967224	WITHOUT_CLASSIFICATION	3.7340327764443667E-7	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999968661249841	WITHOUT_CLASSIFICATION	3.13387501595705E-6	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999876273239349	WITHOUT_CLASSIFICATION	1.237267606508954E-5	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999976633881071	WITHOUT_CLASSIFICATION	2.336611892886062E-6	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999995352980426	WITHOUT_CLASSIFICATION	4.647019573119946E-7	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999988440042064	WITHOUT_CLASSIFICATION	1.155995793692145E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.99999362485142	WITHOUT_CLASSIFICATION	6.375148580035694E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999833601257752	WITHOUT_CLASSIFICATION	1.6639874224842323E-5	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999998723391635	WITHOUT_CLASSIFICATION	1.2766083654597826E-7	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.999799554629651	WITHOUT_CLASSIFICATION	2.0044537034895812E-4	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999903173699513	WITHOUT_CLASSIFICATION	9.682630048842134E-6	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999999027747705	WITHOUT_CLASSIFICATION	9.722522944176832E-8	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999982098199968	WITHOUT_CLASSIFICATION	1.7901800032518322E-6	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999996893077516	WITHOUT_CLASSIFICATION	3.1069224841319293E-7	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999809411272712	WITHOUT_CLASSIFICATION	1.9058872728798632E-5	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.999970873982217	WITHOUT_CLASSIFICATION	2.912601778304223E-5	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999932064719361	WITHOUT_CLASSIFICATION	6.793528063953687E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999789023159474	WITHOUT_CLASSIFICATION	2.109768405256321E-5	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999996127779788	WITHOUT_CLASSIFICATION	3.872220212785934E-7	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999789023159474	WITHOUT_CLASSIFICATION	2.109768405256321E-5	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999999255469356	WITHOUT_CLASSIFICATION	7.445306439732298E-8	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999869417352037	WITHOUT_CLASSIFICATION	1.3058264796264433E-5	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999998874397682	WITHOUT_CLASSIFICATION	1.1256023187903856E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955189429058	WITHOUT_CLASSIFICATION	4.481057094160767E-6	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999915027702387	WITHOUT_CLASSIFICATION	8.497229761285384E-6	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9996184085669172	WITHOUT_CLASSIFICATION	3.815914330827627E-4	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9996184085669172	WITHOUT_CLASSIFICATION	3.815914330827627E-4	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999993411731731	WITHOUT_CLASSIFICATION	6.588268268494807E-7	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9999993346637013	WITHOUT_CLASSIFICATION	6.653362987974741E-7	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999992858088034	WITHOUT_CLASSIFICATION	7.141911966895494E-7	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999723985119132	WITHOUT_CLASSIFICATION	2.7601488086869877E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.999946875428363	WITHOUT_CLASSIFICATION	5.3124571636923304E-5	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9999996017588928	WITHOUT_CLASSIFICATION	3.982411071715135E-7	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999937992720048	WITHOUT_CLASSIFICATION	6.200727995168273E-6	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999988383502845	WITHOUT_CLASSIFICATION	1.1616497156079861E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999772822993518	WITHOUT_CLASSIFICATION	2.2717700648151544E-5	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9998946130063997	WITHOUT_CLASSIFICATION	1.0538699360022957E-4	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.9999535887548275	WITHOUT_CLASSIFICATION	4.641124517245763E-5	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9999755411553926	WITHOUT_CLASSIFICATION	2.4458844607436218E-5	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9998314370813416	WITHOUT_CLASSIFICATION	1.6856291865835973E-4	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999956801284535	WITHOUT_CLASSIFICATION	4.319871546548789E-6	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9999928768447527	WITHOUT_CLASSIFICATION	7.123155247293208E-6	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999958028237812	WITHOUT_CLASSIFICATION	4.197176218810488E-6	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999993258726615	WITHOUT_CLASSIFICATION	6.741273383895694E-7	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999983857793142	WITHOUT_CLASSIFICATION	1.6142206857964726E-6	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999995497137794	WITHOUT_CLASSIFICATION	4.502862205443266E-7	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9998275455605928	WITHOUT_CLASSIFICATION	1.7245443940711364E-4	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999985296451153	WITHOUT_CLASSIFICATION	1.4703548847828155E-6	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999777075300883	WITHOUT_CLASSIFICATION	2.229246991171461E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999992097964726	WITHOUT_CLASSIFICATION	7.902035274993511E-7	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.999995568479483	WITHOUT_CLASSIFICATION	4.431520517099268E-6	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999949518141314	WITHOUT_CLASSIFICATION	5.048185868488395E-6	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9999044568878102	WITHOUT_CLASSIFICATION	9.554311218978802E-5	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9999984674151291	WITHOUT_CLASSIFICATION	1.5325848708710306E-6	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9999940550701897	WITHOUT_CLASSIFICATION	5.9449298103369454E-6	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9999979803140011	WITHOUT_CLASSIFICATION	2.019685998825289E-6	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999983024891202	WITHOUT_CLASSIFICATION	1.6975108797583283E-6	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.9999937613196096	WITHOUT_CLASSIFICATION	6.23868039035204E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999935667250209	WITHOUT_CLASSIFICATION	6.433274979064581E-6	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999937992720048	WITHOUT_CLASSIFICATION	6.200727995168273E-6	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999994329567722	WITHOUT_CLASSIFICATION	5.670432277341257E-7	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.9999188048261741	WITHOUT_CLASSIFICATION	8.119517382593678E-5	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9997665993071192	WITHOUT_CLASSIFICATION	2.3340069288078718E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9999844987127295	WITHOUT_CLASSIFICATION	1.5501287270482612E-5	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999992463667717	WITHOUT_CLASSIFICATION	7.536332282845576E-7	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999764355459485	WITHOUT_CLASSIFICATION	2.3564454051566748E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999723985119132	WITHOUT_CLASSIFICATION	2.7601488086869877E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999723985119132	WITHOUT_CLASSIFICATION	2.7601488086869877E-5	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999908482779187	WITHOUT_CLASSIFICATION	9.151722081333384E-6	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999973573983292	WITHOUT_CLASSIFICATION	2.6426016708483516E-6	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.9999494883542234	WITHOUT_CLASSIFICATION	5.051164577654136E-5	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999971667218769	WITHOUT_CLASSIFICATION	2.833278123066168E-6	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9999984188971508	WITHOUT_CLASSIFICATION	1.5811028491890368E-6	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999989549562589	WITHOUT_CLASSIFICATION	1.0450437410620732E-6	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999962658154257	WITHOUT_CLASSIFICATION	3.734184574214184E-6	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.999999522127461	WITHOUT_CLASSIFICATION	4.778725389515451E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999825239159287	WITHOUT_CLASSIFICATION	1.747608407130518E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999991169392948	WITHOUT_CLASSIFICATION	8.830607052673644E-7	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9999962495293352	WITHOUT_CLASSIFICATION	3.7504706647967745E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9996546112511147	WITHOUT_CLASSIFICATION	3.453887488853456E-4	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9999601847418687	WITHOUT_CLASSIFICATION	3.981525813128455E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999991169392948	WITHOUT_CLASSIFICATION	8.830607052673644E-7	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.99998151420744	WITHOUT_CLASSIFICATION	1.84857925600312E-5	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999995402282551	WITHOUT_CLASSIFICATION	4.5977174499344177E-7	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999949885128923	WITHOUT_CLASSIFICATION	5.011487107791595E-6	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9927222016178381	WITHOUT_CLASSIFICATION	0.007277798382161905	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9996546112511147	WITHOUT_CLASSIFICATION	3.453887488853456E-4	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999912377038351	WITHOUT_CLASSIFICATION	8.762296164927125E-6	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999985096300934	WITHOUT_CLASSIFICATION	1.4903699066482803E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999996594419698	WITHOUT_CLASSIFICATION	3.4055803024819794E-7	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999997887355472	WITHOUT_CLASSIFICATION	2.1126445281160294E-7	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9997671944881921	WITHOUT_CLASSIFICATION	2.328055118080031E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999962981353077	WITHOUT_CLASSIFICATION	3.70186469232142E-6	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.999999192201147	WITHOUT_CLASSIFICATION	8.077988530074562E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999803174614768	WITHOUT_CLASSIFICATION	1.9682538523252744E-5	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999996895858977	WITHOUT_CLASSIFICATION	3.104141022123971E-7	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999995545721515	WITHOUT_CLASSIFICATION	4.4542784853283853E-7	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999992596161671	WITHOUT_CLASSIFICATION	7.403838329501667E-7	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9998651848503369	WITHOUT_CLASSIFICATION	1.3481514966310107E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999991169392948	WITHOUT_CLASSIFICATION	8.830607052673644E-7	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999912377038351	WITHOUT_CLASSIFICATION	8.762296164927125E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999996594419698	WITHOUT_CLASSIFICATION	3.4055803024819794E-7	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999944621943908	WITHOUT_CLASSIFICATION	5.537805609165321E-6	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999995684748896	WITHOUT_CLASSIFICATION	4.3152511031857533E-7	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999974502956975	WITHOUT_CLASSIFICATION	2.549704302445455E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9996546112511147	WITHOUT_CLASSIFICATION	3.453887488853456E-4	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9999929546645921	WITHOUT_CLASSIFICATION	7.0453354077756445E-6	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999751098057605	WITHOUT_CLASSIFICATION	2.489019423935994E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999384346072538	WITHOUT_CLASSIFICATION	6.156539274618987E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999632392733802	WITHOUT_CLASSIFICATION	3.676072661987269E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999803174614768	WITHOUT_CLASSIFICATION	1.9682538523252744E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.99998151420744	WITHOUT_CLASSIFICATION	1.84857925600312E-5	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.9999719271348255	WITHOUT_CLASSIFICATION	2.8072865174550083E-5	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999914367569647	WITHOUT_CLASSIFICATION	8.563243035269362E-6	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9999719243415041	WITHOUT_CLASSIFICATION	2.8075658495955658E-5	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.999988596191149	WITHOUT_CLASSIFICATION	1.1403808851019023E-5	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.999950169554985	WITHOUT_CLASSIFICATION	4.9830445015003847E-5	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9999114573027535	WITHOUT_CLASSIFICATION	8.854269724642864E-5	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9999695965144744	WITHOUT_CLASSIFICATION	3.040348552552625E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955189429058	WITHOUT_CLASSIFICATION	4.481057094160767E-6	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996564088116	WITHOUT_CLASSIFICATION	3.435911883648585E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999315825153977	WITHOUT_CLASSIFICATION	6.84174846023659E-5	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999980989846201	WITHOUT_CLASSIFICATION	1.9010153799131287E-6	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9997856734318022	WITHOUT_CLASSIFICATION	2.143265681977696E-4	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999566531013074	WITHOUT_CLASSIFICATION	4.334689869264806E-5	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999859999921815	WITHOUT_CLASSIFICATION	1.4000007818435838E-5	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999989659201065	WITHOUT_CLASSIFICATION	1.0340798934952163E-6	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999967562002822	WITHOUT_CLASSIFICATION	3.2437997178161517E-6	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999992835585444	WITHOUT_CLASSIFICATION	7.164414557040728E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999632392733802	WITHOUT_CLASSIFICATION	3.676072661987269E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999315825153977	WITHOUT_CLASSIFICATION	6.84174846023659E-5	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999755293704372	WITHOUT_CLASSIFICATION	2.4470629562778653E-5	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9999831962251584	WITHOUT_CLASSIFICATION	1.6803774841527367E-5	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9998926417408006	WITHOUT_CLASSIFICATION	1.073582591992981E-4	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.999978718867277	WITHOUT_CLASSIFICATION	2.1281132723060473E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9999514383581034	WITHOUT_CLASSIFICATION	4.856164189652573E-5	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999995512657076	WITHOUT_CLASSIFICATION	4.4873429243272597E-7	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999952734169638	WITHOUT_CLASSIFICATION	4.726583036263554E-6	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9999868550739258	WITHOUT_CLASSIFICATION	1.3144926074120585E-5	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999997419872194	WITHOUT_CLASSIFICATION	2.580127806159164E-7	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999976511445532	WITHOUT_CLASSIFICATION	2.3488554467199196E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999949629025269	WITHOUT_CLASSIFICATION	5.037097473132223E-6	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999966183617499	WITHOUT_CLASSIFICATION	3.381638250078632E-6	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9999994661632354	WITHOUT_CLASSIFICATION	5.338367646264681E-7	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9999842586050433	WITHOUT_CLASSIFICATION	1.5741394956756967E-5	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9999892066373369	WITHOUT_CLASSIFICATION	1.079336266303523E-5	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999992368198531	WITHOUT_CLASSIFICATION	7.631801469013376E-7	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9999884189546548	WITHOUT_CLASSIFICATION	1.1581045345164048E-5	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999493856033297	WITHOUT_CLASSIFICATION	5.0614396670236785E-5	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999984775541477	WITHOUT_CLASSIFICATION	1.5224458522335699E-6	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.999984859520734	WITHOUT_CLASSIFICATION	1.5140479265933796E-5	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999848576808527	WITHOUT_CLASSIFICATION	1.5142319147278187E-5	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999991237114193	WITHOUT_CLASSIFICATION	8.762885807755422E-7	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999996006601083	WITHOUT_CLASSIFICATION	3.993398917909288E-7	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999989189334775	WITHOUT_CLASSIFICATION	1.0810665225697766E-6	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999997155058314	WITHOUT_CLASSIFICATION	2.8449416856772543E-7	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.9988048580669491	WITHOUT_CLASSIFICATION	0.0011951419330508964	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999970749003059	WITHOUT_CLASSIFICATION	2.9250996940217854E-6	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.999974721811757	WITHOUT_CLASSIFICATION	2.5278188243054365E-5	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999998011493714	WITHOUT_CLASSIFICATION	1.988506286783774E-7	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.9985112006986036	WITHOUT_CLASSIFICATION	0.0014887993013965256	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999869996900153	WITHOUT_CLASSIFICATION	1.3000309984730123E-5	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999744288153584	WITHOUT_CLASSIFICATION	2.557118464163405E-5	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999961446726304	WITHOUT_CLASSIFICATION	3.855327369557412E-6	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999992265490191	WITHOUT_CLASSIFICATION	7.734509809506984E-7	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999998493024442	WITHOUT_CLASSIFICATION	1.5069755571726744E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999870837198619	WITHOUT_CLASSIFICATION	1.2916280138172154E-5	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.999991291154658	WITHOUT_CLASSIFICATION	8.70884534189479E-6	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999967847873564	WITHOUT_CLASSIFICATION	3.215212643540744E-6	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999870837198619	WITHOUT_CLASSIFICATION	1.2916280138172154E-5	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999998493024442	WITHOUT_CLASSIFICATION	1.5069755571726744E-7	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.999991291154658	WITHOUT_CLASSIFICATION	8.70884534189479E-6	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.9999781961823931	WITHOUT_CLASSIFICATION	2.1803817606870063E-5	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999956486505842	WITHOUT_CLASSIFICATION	4.351349415786542E-6	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999999319837436	WITHOUT_CLASSIFICATION	6.80162564298085E-8	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9999954615821632	WITHOUT_CLASSIFICATION	4.538417836843519E-6	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999991121966618	WITHOUT_CLASSIFICATION	8.878033381757975E-7	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9999879382290978	WITHOUT_CLASSIFICATION	1.206177090219997E-5	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9999934444472304	WITHOUT_CLASSIFICATION	6.5555527696005485E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999640645021999	WITHOUT_CLASSIFICATION	3.5935497800168275E-5	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9999933164672253	WITHOUT_CLASSIFICATION	6.683532774613198E-6	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999987412688015	WITHOUT_CLASSIFICATION	1.2587311985542482E-6	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999988477710613	WITHOUT_CLASSIFICATION	1.152228938665013E-6	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999876792150988	WITHOUT_CLASSIFICATION	1.2320784901128019E-5	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999993479193972	WITHOUT_CLASSIFICATION	6.520806028450817E-7	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9999708612863762	WITHOUT_CLASSIFICATION	2.9138713623783016E-5	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999883576148902	WITHOUT_CLASSIFICATION	1.1642385109828028E-5	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999999021160931	WITHOUT_CLASSIFICATION	9.788390695701985E-8	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999988170489208	WITHOUT_CLASSIFICATION	1.1829510792121092E-6	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999999730038788	WITHOUT_CLASSIFICATION	2.699612119462642E-8	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999987674407369	WITHOUT_CLASSIFICATION	1.2325592630874259E-6	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999907834173318	WITHOUT_CLASSIFICATION	9.216582668209023E-6	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9999986713684806	WITHOUT_CLASSIFICATION	1.3286315193615915E-6	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999981955011117	WITHOUT_CLASSIFICATION	1.8044988883480637E-6	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999978380508592	WITHOUT_CLASSIFICATION	2.1619491408757333E-6	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999995758601642	WITHOUT_CLASSIFICATION	4.2413983583426744E-7	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999918002481364	WITHOUT_CLASSIFICATION	8.199751863695105E-6	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999918002481364	WITHOUT_CLASSIFICATION	8.199751863695105E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999997625454022	WITHOUT_CLASSIFICATION	2.3745459779921553E-7	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999997625454022	WITHOUT_CLASSIFICATION	2.3745459779921553E-7	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.999998838900315	WITHOUT_CLASSIFICATION	1.161099684973458E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999988170489208	WITHOUT_CLASSIFICATION	1.1829510792121092E-6	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9997990839354953	WITHOUT_CLASSIFICATION	2.0091606450466776E-4	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999995501522028	WITHOUT_CLASSIFICATION	4.4984779721071175E-7	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999575988456898	WITHOUT_CLASSIFICATION	4.2401154310112075E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999575988456898	WITHOUT_CLASSIFICATION	4.2401154310112075E-5	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999928629621118	WITHOUT_CLASSIFICATION	7.137037888354748E-6	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999992207019424	WITHOUT_CLASSIFICATION	7.792980575591661E-7	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999995093605712	WITHOUT_CLASSIFICATION	4.906394286964611E-7	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999989539231763	WITHOUT_CLASSIFICATION	1.0460768237094074E-6	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999995177806174	WITHOUT_CLASSIFICATION	4.82219382702808E-7	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999997968986963	WITHOUT_CLASSIFICATION	2.0310130374471264E-7	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9999907854026505	WITHOUT_CLASSIFICATION	9.214597349517432E-6	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999988377005651	WITHOUT_CLASSIFICATION	1.1622994348928004E-6	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9999930089881199	WITHOUT_CLASSIFICATION	6.9910118801037035E-6	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999696812749218	WITHOUT_CLASSIFICATION	3.031872507820413E-5	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999991206148677	WITHOUT_CLASSIFICATION	8.793851322863964E-7	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9999983578737431	WITHOUT_CLASSIFICATION	1.6421262569100432E-6	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999985671268853	WITHOUT_CLASSIFICATION	1.4328731146889334E-6	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999891804539739	WITHOUT_CLASSIFICATION	1.0819546026071907E-5	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9999835036516135	WITHOUT_CLASSIFICATION	1.649634838649095E-5	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999988073699069	WITHOUT_CLASSIFICATION	1.1926300931977718E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999905358688802	WITHOUT_CLASSIFICATION	9.464131119787124E-6	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999819121104074	WITHOUT_CLASSIFICATION	1.8087889592666565E-5	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999999430249167	WITHOUT_CLASSIFICATION	5.6975083275297165E-8	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.99999971101773	WITHOUT_CLASSIFICATION	2.889822699738274E-7	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999989348263757	WITHOUT_CLASSIFICATION	1.065173624318426E-6	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999995447258303	WITHOUT_CLASSIFICATION	4.5527416973270394E-7	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999965446616583	WITHOUT_CLASSIFICATION	3.4553383417840283E-6	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999989077434291	WITHOUT_CLASSIFICATION	1.0922565708652754E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996924944755927	WITHOUT_CLASSIFICATION	3.075055244072531E-4	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999982624113746	WITHOUT_CLASSIFICATION	1.7375886253175228E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999315825153977	WITHOUT_CLASSIFICATION	6.84174846023659E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999966183617499	WITHOUT_CLASSIFICATION	3.381638250078632E-6	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999707630129254	WITHOUT_CLASSIFICATION	2.9236987074540545E-5	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999991803473948	WITHOUT_CLASSIFICATION	8.19652605245336E-7	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999811582000602	WITHOUT_CLASSIFICATION	1.8841799939887552E-5	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999959834057119	WITHOUT_CLASSIFICATION	4.01659428800213E-6	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999315036993688	WITHOUT_CLASSIFICATION	6.849630063115992E-5	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999315036993688	WITHOUT_CLASSIFICATION	6.849630063115992E-5	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999994728404824	WITHOUT_CLASSIFICATION	5.271595175935596E-7	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999905797549601	WITHOUT_CLASSIFICATION	9.420245039870112E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999935885232097	WITHOUT_CLASSIFICATION	6.4114767902481885E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999935885232097	WITHOUT_CLASSIFICATION	6.4114767902481885E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999995834310321	WITHOUT_CLASSIFICATION	4.165689677903734E-7	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9999469628953541	WITHOUT_CLASSIFICATION	5.303710464579099E-5	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9999956440464398	WITHOUT_CLASSIFICATION	4.355953560194427E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999944383784461	WITHOUT_CLASSIFICATION	5.561621553786838E-6	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.9999865222422544	WITHOUT_CLASSIFICATION	1.3477757745671375E-5	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999927222429806	WITHOUT_CLASSIFICATION	7.2777570194467845E-6	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999975837313968	WITHOUT_CLASSIFICATION	2.4162686032356088E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999981694798449	WITHOUT_CLASSIFICATION	1.8305201551005575E-6	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999977150485739	WITHOUT_CLASSIFICATION	2.2849514260616076E-6	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999977150485739	WITHOUT_CLASSIFICATION	2.2849514260616076E-6	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.999999922338847	WITHOUT_CLASSIFICATION	7.766115294279667E-8	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999996126856999	WITHOUT_CLASSIFICATION	3.8731430007890453E-7	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999996126856999	WITHOUT_CLASSIFICATION	3.8731430007890453E-7	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999978377480756	WITHOUT_CLASSIFICATION	2.162251924486063E-6	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999961657547805	WITHOUT_CLASSIFICATION	3.834245219507596E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9940235574787382	WITHOUT_CLASSIFICATION	0.005976442521261837	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.999999222990166	WITHOUT_CLASSIFICATION	7.770098339847592E-7	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999993575640107	WITHOUT_CLASSIFICATION	6.424359893274631E-7	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999956768979427	WITHOUT_CLASSIFICATION	4.323102057420625E-6	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.999945145734302	WITHOUT_CLASSIFICATION	5.4854265697944413E-5	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999960469744534	WITHOUT_CLASSIFICATION	3.953025546580227E-6	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999922384138262	WITHOUT_CLASSIFICATION	7.761586173790488E-6	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9999974193675752	WITHOUT_CLASSIFICATION	2.5806324246191085E-6	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999999844276743	WITHOUT_CLASSIFICATION	1.5572325666272354E-8	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.999998802410689	WITHOUT_CLASSIFICATION	1.1975893111273942E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999980761619099	WITHOUT_CLASSIFICATION	1.9238380901046572E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999980761619099	WITHOUT_CLASSIFICATION	1.9238380901046572E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999980761619099	WITHOUT_CLASSIFICATION	1.9238380901046572E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999980761619099	WITHOUT_CLASSIFICATION	1.9238380901046572E-5	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.999997538983337	WITHOUT_CLASSIFICATION	2.4610166628941868E-6	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999986271576647	WITHOUT_CLASSIFICATION	1.372842335198738E-6	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9999604181725257	WITHOUT_CLASSIFICATION	3.9581827474319404E-5	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.9998967057371121	WITHOUT_CLASSIFICATION	1.0329426288781227E-4	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999963733000137	WITHOUT_CLASSIFICATION	3.62669998630251E-6	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9999895168723177	WITHOUT_CLASSIFICATION	1.0483127682306769E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996893424041088	WITHOUT_CLASSIFICATION	3.1065759589115135E-4	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999983350339665	WITHOUT_CLASSIFICATION	1.6649660335218823E-6	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.999952819328066	WITHOUT_CLASSIFICATION	4.718067193405832E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996893424041088	WITHOUT_CLASSIFICATION	3.1065759589115135E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996893424041088	WITHOUT_CLASSIFICATION	3.1065759589115135E-4	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999998204419286	WITHOUT_CLASSIFICATION	1.795580713336345E-7	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999724007029256	WITHOUT_CLASSIFICATION	2.7599297074420454E-5	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.999991704451268	WITHOUT_CLASSIFICATION	8.295548732079621E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999992457062946	WITHOUT_CLASSIFICATION	7.542937053672381E-7	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999985429018668	WITHOUT_CLASSIFICATION	1.45709813323982E-6	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999907648707074	WITHOUT_CLASSIFICATION	9.235129292608541E-6	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999984476699053	WITHOUT_CLASSIFICATION	1.5523300946865624E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999992457062946	WITHOUT_CLASSIFICATION	7.542937053672381E-7	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9999825303702295	WITHOUT_CLASSIFICATION	1.7469629770448506E-5	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999992751007224	WITHOUT_CLASSIFICATION	7.248992776652638E-7	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999653252564833	WITHOUT_CLASSIFICATION	3.4674743516793164E-5	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999627805161946	WITHOUT_CLASSIFICATION	3.721948380540294E-5	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.999990576736154	WITHOUT_CLASSIFICATION	9.42326384600823E-6	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9999995224991836	WITHOUT_CLASSIFICATION	4.775008164265927E-7	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999998232628042	WITHOUT_CLASSIFICATION	1.767371958212003E-7	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9999954934863896	WITHOUT_CLASSIFICATION	4.506513610323586E-6	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995695453671	WITHOUT_CLASSIFICATION	4.304546328884783E-7	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999990222675563	WITHOUT_CLASSIFICATION	9.777324436434556E-7	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999424271177	WITHOUT_CLASSIFICATION	5.757288229584374E-7	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999979431814302	WITHOUT_CLASSIFICATION	2.0568185697695225E-6	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999855040372423	WITHOUT_CLASSIFICATION	1.4495962757718945E-5	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9998411329626529	WITHOUT_CLASSIFICATION	1.5886703734721067E-4	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999993987213412	WITHOUT_CLASSIFICATION	6.012786587146594E-7	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9999988456132685	WITHOUT_CLASSIFICATION	1.1543867314874973E-6	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999993918866991	WITHOUT_CLASSIFICATION	6.081133009708822E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999967234383298	WITHOUT_CLASSIFICATION	3.276561670279659E-6	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999993212229096	WITHOUT_CLASSIFICATION	6.787770903657694E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999967234383298	WITHOUT_CLASSIFICATION	3.276561670279659E-6	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999996245265428	WITHOUT_CLASSIFICATION	3.754734571143946E-7	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999997899294379	WITHOUT_CLASSIFICATION	2.1007056197450757E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999918572395687	WITHOUT_CLASSIFICATION	8.142760431335638E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999642470156305	WITHOUT_CLASSIFICATION	3.5752984369510647E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999993918866991	WITHOUT_CLASSIFICATION	6.081133009708822E-7	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999993212229096	WITHOUT_CLASSIFICATION	6.787770903657694E-7	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999996245265428	WITHOUT_CLASSIFICATION	3.754734571143946E-7	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999995948530381	WITHOUT_CLASSIFICATION	4.051469617848586E-7	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.999958480738456	WITHOUT_CLASSIFICATION	4.1519261544123585E-5	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.9999934917272989	WITHOUT_CLASSIFICATION	6.508272701009329E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9999935424779375	WITHOUT_CLASSIFICATION	6.457522062530122E-6	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999948191335525	WITHOUT_CLASSIFICATION	5.18086644758842E-6	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999971277995275	WITHOUT_CLASSIFICATION	2.8722004724386434E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999905358688802	WITHOUT_CLASSIFICATION	9.464131119787124E-6	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999997899294379	WITHOUT_CLASSIFICATION	2.1007056197450757E-7	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999999658687736	WITHOUT_CLASSIFICATION	3.4131226355283115E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.999991128588289	WITHOUT_CLASSIFICATION	8.871411710944027E-6	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999978180204234	WITHOUT_CLASSIFICATION	2.1819795764966837E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999905358688802	WITHOUT_CLASSIFICATION	9.464131119787124E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999315825153977	WITHOUT_CLASSIFICATION	6.84174846023659E-5	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999998328072774	WITHOUT_CLASSIFICATION	1.671927225804804E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999905358688802	WITHOUT_CLASSIFICATION	9.464131119787124E-6	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999989961349411	WITHOUT_CLASSIFICATION	1.0038650588404163E-6	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999892245187356	WITHOUT_CLASSIFICATION	1.0775481264394479E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999315825153977	WITHOUT_CLASSIFICATION	6.84174846023659E-5	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9999918071470757	WITHOUT_CLASSIFICATION	8.192852924371681E-6	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999997074736837	WITHOUT_CLASSIFICATION	2.925263162099307E-7	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999964759997428	WITHOUT_CLASSIFICATION	3.5240002571867623E-6	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.999993567145948	WITHOUT_CLASSIFICATION	6.4328540520117946E-6	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999949535063155	WITHOUT_CLASSIFICATION	5.046493684438626E-6	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999997163763362	WITHOUT_CLASSIFICATION	2.836236637571152E-7	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999980472590642	WITHOUT_CLASSIFICATION	1.9527409358831194E-6	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9999584370386154	WITHOUT_CLASSIFICATION	4.156296138452225E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998484151047137	WITHOUT_CLASSIFICATION	1.515848952864218E-4	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999989088417481	WITHOUT_CLASSIFICATION	1.0911582518325198E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9940235574787382	WITHOUT_CLASSIFICATION	0.005976442521261837	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9999759602534921	WITHOUT_CLASSIFICATION	2.403974650792925E-5	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9999810009220564	WITHOUT_CLASSIFICATION	1.8999077943556007E-5	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9999955754849319	WITHOUT_CLASSIFICATION	4.424515068159053E-6	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999371189444256	WITHOUT_CLASSIFICATION	6.288105557434284E-5	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999989201786484	WITHOUT_CLASSIFICATION	1.0798213515841676E-6	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999999683939067	WITHOUT_CLASSIFICATION	3.160609333504349E-8	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999999566592026	WITHOUT_CLASSIFICATION	4.3340797352685404E-8	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9999951237247013	WITHOUT_CLASSIFICATION	4.87627529870188E-6	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999997700424363	WITHOUT_CLASSIFICATION	2.2995756364101106E-7	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.999999496814914	WITHOUT_CLASSIFICATION	5.031850860345578E-7	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9920591193385672	WITHOUT_CLASSIFICATION	0.007940880661432868	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999964309010683	WITHOUT_CLASSIFICATION	3.569098931696362E-6	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999947348436542	WITHOUT_CLASSIFICATION	5.2651563458483945E-6	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999985766321327	WITHOUT_CLASSIFICATION	1.423367867357491E-6	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999973729545135	WITHOUT_CLASSIFICATION	2.6270454865115847E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9997583932424653	WITHOUT_CLASSIFICATION	2.4160675753468825E-4	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999997023005837	WITHOUT_CLASSIFICATION	2.976994163227276E-7	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9999989140467834	WITHOUT_CLASSIFICATION	1.0859532165733625E-6	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999998138572292	WITHOUT_CLASSIFICATION	1.861427706452416E-7	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9999657838319327	WITHOUT_CLASSIFICATION	3.4216168067317075E-5	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999996145501641	WITHOUT_CLASSIFICATION	3.8544983602422407E-7	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9973303189145544	WITHOUT_CLASSIFICATION	0.0026696810854456915	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999971705066247	WITHOUT_CLASSIFICATION	2.829493375372763E-6	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999959433438329	WITHOUT_CLASSIFICATION	4.0566561671478085E-6	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9999074488969607	WITHOUT_CLASSIFICATION	9.25511030392735E-5	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999538108579897	WITHOUT_CLASSIFICATION	4.618914201035613E-5	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999996239499594	WITHOUT_CLASSIFICATION	3.760500405802181E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9895876861459	WITHOUT_CLASSIFICATION	0.010412313854099893	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999998146568672	WITHOUT_CLASSIFICATION	1.853431328461535E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999315825153977	WITHOUT_CLASSIFICATION	6.84174846023659E-5	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999993892499341	WITHOUT_CLASSIFICATION	6.107500657481759E-7	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999501930392085	WITHOUT_CLASSIFICATION	4.9806960791584764E-5	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999501930392085	WITHOUT_CLASSIFICATION	4.9806960791584764E-5	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999999708720791	WITHOUT_CLASSIFICATION	2.9127920850339564E-8	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999997163763362	WITHOUT_CLASSIFICATION	2.836236637571152E-7	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9999714753967416	WITHOUT_CLASSIFICATION	2.8524603258325648E-5	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999970001091262	WITHOUT_CLASSIFICATION	2.9998908737761563E-6	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999983681958217	WITHOUT_CLASSIFICATION	1.6318041782178398E-6	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999999669609481	WITHOUT_CLASSIFICATION	3.3039051875459176E-8	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.999989776656351	WITHOUT_CLASSIFICATION	1.022334364895798E-5	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9996295409473004	WITHOUT_CLASSIFICATION	3.704590526996961E-4	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.999998765657837	WITHOUT_CLASSIFICATION	1.234342163090237E-6	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9999999079981367	WITHOUT_CLASSIFICATION	9.200186326014907E-8	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999997097823595	WITHOUT_CLASSIFICATION	2.9021764052775974E-7	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.9999993884577498	WITHOUT_CLASSIFICATION	6.115422501413337E-7	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999998149245388	WITHOUT_CLASSIFICATION	1.850754612536937E-7	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999841569761283	WITHOUT_CLASSIFICATION	1.5843023871740566E-5	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999989469697739	WITHOUT_CLASSIFICATION	1.0530302261062964E-6	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999800515491	WITHOUT_CLASSIFICATION	1.9948450854113897E-8	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999980217922024	WITHOUT_CLASSIFICATION	1.9782077975907375E-6	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999985530931526	WITHOUT_CLASSIFICATION	1.4469068474635155E-6	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999900616880572	WITHOUT_CLASSIFICATION	9.93831194289413E-6	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999995575460374	WITHOUT_CLASSIFICATION	4.4245396262578897E-7	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999999598465189	WITHOUT_CLASSIFICATION	4.0153480993319114E-8	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999983128637606	WITHOUT_CLASSIFICATION	1.6871362393123317E-6	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999997103519261	WITHOUT_CLASSIFICATION	2.896480739517983E-7	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999990261583431	WITHOUT_CLASSIFICATION	9.738416568788789E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9895876861459	WITHOUT_CLASSIFICATION	0.010412313854099893	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999995590220766	WITHOUT_CLASSIFICATION	4.409779233719246E-7	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999998130171636	WITHOUT_CLASSIFICATION	1.869828364808038E-7	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999987625281392	WITHOUT_CLASSIFICATION	1.237471860733834E-6	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999905120224107	WITHOUT_CLASSIFICATION	9.487977589199926E-6	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9999313139943065	WITHOUT_CLASSIFICATION	6.868600569349086E-5	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999999682726155	WITHOUT_CLASSIFICATION	3.172738441658523E-8	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999739705806876	WITHOUT_CLASSIFICATION	2.6029419312346795E-5	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999975764268426	WITHOUT_CLASSIFICATION	2.4235731574308424E-6	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999995933977022	WITHOUT_CLASSIFICATION	4.0660229781953886E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999968990801552	WITHOUT_CLASSIFICATION	3.1009198448063125E-6	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999994136821497	WITHOUT_CLASSIFICATION	5.863178502715054E-7	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999555218065193	WITHOUT_CLASSIFICATION	4.4478193480826545E-5	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9999689780936601	WITHOUT_CLASSIFICATION	3.102190633988307E-5	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999999734221919	WITHOUT_CLASSIFICATION	2.6577808063776475E-8	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999958141376549	WITHOUT_CLASSIFICATION	4.1858623450670834E-6	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999958141376549	WITHOUT_CLASSIFICATION	4.1858623450670834E-6	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999926365717707	WITHOUT_CLASSIFICATION	7.363428229293061E-6	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9999994711388376	WITHOUT_CLASSIFICATION	5.288611625225391E-7	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999876626984677	WITHOUT_CLASSIFICATION	1.233730153231332E-5	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999876626984677	WITHOUT_CLASSIFICATION	1.233730153231332E-5	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999992951042852	WITHOUT_CLASSIFICATION	7.048957147928962E-7	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999854848630655	WITHOUT_CLASSIFICATION	1.451513693458259E-5	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.999999926158497	WITHOUT_CLASSIFICATION	7.384150308955632E-8	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999997245152109	WITHOUT_CLASSIFICATION	2.7548478916683567E-7	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999995780232403	WITHOUT_CLASSIFICATION	4.2197675969706765E-6	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999964338159888	WITHOUT_CLASSIFICATION	3.5661840111253477E-6	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999995081383907	WITHOUT_CLASSIFICATION	4.918616093248045E-7	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999995081383907	WITHOUT_CLASSIFICATION	4.918616093248045E-7	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999971236985579	WITHOUT_CLASSIFICATION	2.87630144207282E-6	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9999947133833733	WITHOUT_CLASSIFICATION	5.2866166267368326E-6	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999803421785329	WITHOUT_CLASSIFICATION	1.9657821467010153E-5	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999975377897968	WITHOUT_CLASSIFICATION	2.4622102031779864E-6	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999975377897968	WITHOUT_CLASSIFICATION	2.4622102031779864E-6	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999969847173911	WITHOUT_CLASSIFICATION	3.015282608810385E-6	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999970559603489	WITHOUT_CLASSIFICATION	2.94403965094654E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999997627325136	WITHOUT_CLASSIFICATION	2.3726748649888773E-7	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.999995768304518	WITHOUT_CLASSIFICATION	4.231695482033597E-6	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999997260936045	WITHOUT_CLASSIFICATION	2.73906395424879E-7	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.999999658813224	WITHOUT_CLASSIFICATION	3.41186776059263E-7	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.999999464224926	WITHOUT_CLASSIFICATION	5.3577507397427E-7	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999989958185536	WITHOUT_CLASSIFICATION	1.004181446449844E-6	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999999356243038	WITHOUT_CLASSIFICATION	6.437569625339797E-8	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999982034703067	WITHOUT_CLASSIFICATION	1.7965296933460467E-6	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9999839515438717	WITHOUT_CLASSIFICATION	1.6048456128366773E-5	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999997885431561	WITHOUT_CLASSIFICATION	2.1145684390058475E-7	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9999864322206046	WITHOUT_CLASSIFICATION	1.3567779395372328E-5	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999999987608087	WITHOUT_CLASSIFICATION	1.2391913272158328E-9	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999653731188265	WITHOUT_CLASSIFICATION	3.4626881173537346E-5	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999984466787207	WITHOUT_CLASSIFICATION	1.5533212792916407E-6	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999975770897175	WITHOUT_CLASSIFICATION	2.42291028247228E-6	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999999271400787	WITHOUT_CLASSIFICATION	7.285992126948074E-8	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.999993700389397	WITHOUT_CLASSIFICATION	6.299610603048363E-6	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999953694669911	WITHOUT_CLASSIFICATION	4.630533008868269E-6	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999977796649505	WITHOUT_CLASSIFICATION	2.220335049533238E-6	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999983952636511	WITHOUT_CLASSIFICATION	1.604736348818411E-6	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9999748947018571	WITHOUT_CLASSIFICATION	2.5105298142973073E-5	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999860426391031	WITHOUT_CLASSIFICATION	1.3957360896987822E-5	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9999839116734432	WITHOUT_CLASSIFICATION	1.6088326556689698E-5	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.999997563186968	WITHOUT_CLASSIFICATION	2.436813032134709E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999990007175693	WITHOUT_CLASSIFICATION	9.992824306614778E-7	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9999699730145938	WITHOUT_CLASSIFICATION	3.002698540617033E-5	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999977715238689	WITHOUT_CLASSIFICATION	2.2284761310781937E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999995414116575	WITHOUT_CLASSIFICATION	4.5858834259022325E-7	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999999075010187	WITHOUT_CLASSIFICATION	9.249898134325334E-8	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999942058138939	WITHOUT_CLASSIFICATION	5.794186106148878E-6	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999987560854937	WITHOUT_CLASSIFICATION	1.2439145062769787E-6	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9997618146123979	WITHOUT_CLASSIFICATION	2.3818538760217553E-4	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999999111735468	WITHOUT_CLASSIFICATION	8.882645326065784E-8	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9999906327436596	WITHOUT_CLASSIFICATION	9.367256340342846E-6	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9999141028126036	WITHOUT_CLASSIFICATION	8.589718739631661E-5	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999993668045181	WITHOUT_CLASSIFICATION	6.331954818414368E-7	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999871149633558	WITHOUT_CLASSIFICATION	1.2885036644284312E-5	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999996806151151	WITHOUT_CLASSIFICATION	3.193848848235762E-7	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999999199559798	WITHOUT_CLASSIFICATION	8.004402017957354E-8	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9999945346395428	WITHOUT_CLASSIFICATION	5.465360457197657E-6	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999976734110323	WITHOUT_CLASSIFICATION	2.326588967793121E-6	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.9999984669610574	WITHOUT_CLASSIFICATION	1.5330389426066742E-6	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.9999976372405037	WITHOUT_CLASSIFICATION	2.362759496319523E-6	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999988851303359	WITHOUT_CLASSIFICATION	1.1148696642048375E-6	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999974090770481	WITHOUT_CLASSIFICATION	2.5909229518033527E-6	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999992620982899	WITHOUT_CLASSIFICATION	7.379017099945E-7	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999992284862053	WITHOUT_CLASSIFICATION	7.715137947480324E-7	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999981960824583	WITHOUT_CLASSIFICATION	1.8039175417939788E-6	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999949334811727	WITHOUT_CLASSIFICATION	5.066518827305049E-6	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999988583878185	WITHOUT_CLASSIFICATION	1.1416121815073901E-6	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999997110211909	WITHOUT_CLASSIFICATION	2.8897880908925255E-7	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999936800199	WITHOUT_CLASSIFICATION	6.319980165368981E-9	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999986657787192	WITHOUT_CLASSIFICATION	1.3342212806945249E-6	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9999996416429381	WITHOUT_CLASSIFICATION	3.5835706193538846E-7	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9999965777508202	WITHOUT_CLASSIFICATION	3.422249179780227E-6	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999962904943267	WITHOUT_CLASSIFICATION	3.709505673297533E-6	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999997974325858	WITHOUT_CLASSIFICATION	2.0256741420727448E-7	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999998655149512	WITHOUT_CLASSIFICATION	1.344850488202802E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.99999870658259	WITHOUT_CLASSIFICATION	1.2934174099224256E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.99999870658259	WITHOUT_CLASSIFICATION	1.2934174099224256E-6	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999979086341445	WITHOUT_CLASSIFICATION	2.0913658555863957E-6	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9999991314136534	WITHOUT_CLASSIFICATION	8.685863466911528E-7	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999972295934787	WITHOUT_CLASSIFICATION	2.7704065214159004E-6	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.999999767539277	WITHOUT_CLASSIFICATION	2.3246072308378305E-7	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999999478953109	WITHOUT_CLASSIFICATION	5.210468919820643E-8	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999824746322271	WITHOUT_CLASSIFICATION	1.752536777284518E-5	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999992936158899	WITHOUT_CLASSIFICATION	7.063841101182364E-7	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999988785898	WITHOUT_CLASSIFICATION	1.1214101773352568E-9	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999910950693672	WITHOUT_CLASSIFICATION	8.904930632697503E-6	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999942997923573	WITHOUT_CLASSIFICATION	5.700207642750523E-6	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999999512002353	WITHOUT_CLASSIFICATION	4.879976476178099E-8	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9999967197333897	WITHOUT_CLASSIFICATION	3.280266610422365E-6	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999989869121755	WITHOUT_CLASSIFICATION	1.0130878244830413E-6	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999996117963376	WITHOUT_CLASSIFICATION	3.882036625008503E-7	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999971537201112	WITHOUT_CLASSIFICATION	2.8462798888207013E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999971537201112	WITHOUT_CLASSIFICATION	2.8462798888207013E-6	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.999999814424803	WITHOUT_CLASSIFICATION	1.855751968600945E-7	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.999999857502623	WITHOUT_CLASSIFICATION	1.4249737711931041E-7	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999959089258907	WITHOUT_CLASSIFICATION	4.0910741092424705E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.99999906662902	WITHOUT_CLASSIFICATION	9.333709800002702E-7	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999747409429125	WITHOUT_CLASSIFICATION	2.5259057087434518E-5	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999833946843804	WITHOUT_CLASSIFICATION	1.6605315619664093E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999900012896452	WITHOUT_CLASSIFICATION	9.9987103547193E-6	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.999999526012185	WITHOUT_CLASSIFICATION	4.739878149155593E-7	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999998337295329	WITHOUT_CLASSIFICATION	1.6627046716327255E-7	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999999718433661	WITHOUT_CLASSIFICATION	2.8156633924997143E-8	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999997194221756	WITHOUT_CLASSIFICATION	2.8057782443498597E-7	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999708340296767	WITHOUT_CLASSIFICATION	2.9165970323396528E-5	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999989780813326	WITHOUT_CLASSIFICATION	1.0219186673434826E-6	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999998648875594	WITHOUT_CLASSIFICATION	1.3511244063348602E-7	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999716276004736	WITHOUT_CLASSIFICATION	2.8372399526359616E-5	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999999620798252	WITHOUT_CLASSIFICATION	3.7920174772082106E-8	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999999923066977	WITHOUT_CLASSIFICATION	7.693302361995237E-9	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999992921528617	WITHOUT_CLASSIFICATION	7.078471383195199E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999999105068308	WITHOUT_CLASSIFICATION	8.949316912547166E-8	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999999902539727	WITHOUT_CLASSIFICATION	9.746027358782319E-9	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999979781383046	WITHOUT_CLASSIFICATION	2.0218616954971564E-6	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999922110109	WITHOUT_CLASSIFICATION	7.78898919496042E-9	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999997072950122	WITHOUT_CLASSIFICATION	2.9270498782092777E-7	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9999876473811332	WITHOUT_CLASSIFICATION	1.2352618866733241E-5	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999990218495879	WITHOUT_CLASSIFICATION	9.781504120583463E-7	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999993204875482	WITHOUT_CLASSIFICATION	6.795124517391526E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.999999809563959	WITHOUT_CLASSIFICATION	1.904360408981977E-7	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999992036909704	WITHOUT_CLASSIFICATION	7.963090295656277E-7	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999999934481842	WITHOUT_CLASSIFICATION	6.551815673804458E-9	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999994760438591	WITHOUT_CLASSIFICATION	5.239561409469493E-7	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.999982608415846	WITHOUT_CLASSIFICATION	1.7391584154141224E-5	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999995951809165	WITHOUT_CLASSIFICATION	4.048190835196157E-7	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999999579765042	WITHOUT_CLASSIFICATION	4.20234958288838E-8	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999949155651	WITHOUT_CLASSIFICATION	5.084434834550388E-9	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9999974919205015	WITHOUT_CLASSIFICATION	2.5080794986134773E-6	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999996744299986	WITHOUT_CLASSIFICATION	3.255700013519717E-7	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999989124666571	WITHOUT_CLASSIFICATION	1.0875333429660944E-6	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999998207383356	WITHOUT_CLASSIFICATION	1.7926166428769234E-7	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999976863700597	WITHOUT_CLASSIFICATION	2.313629940236627E-6	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.999999954746891	WITHOUT_CLASSIFICATION	4.525310910627656E-8	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999972561620274	WITHOUT_CLASSIFICATION	2.7438379725783405E-6	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999972561620274	WITHOUT_CLASSIFICATION	2.7438379725783405E-6	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999999315112276	WITHOUT_CLASSIFICATION	6.848877241034423E-8	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999999176865875	WITHOUT_CLASSIFICATION	8.23134126014083E-8	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9999990060644591	WITHOUT_CLASSIFICATION	9.939355408588148E-7	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.999999534242025	WITHOUT_CLASSIFICATION	4.6575797495685894E-7	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999999017661187	WITHOUT_CLASSIFICATION	9.823388129126408E-8	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999999458569904	WITHOUT_CLASSIFICATION	5.414300965439134E-8	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999990761209863	WITHOUT_CLASSIFICATION	9.238790138278066E-7	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999980414707745	WITHOUT_CLASSIFICATION	1.958529225532722E-6	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999999295128386	WITHOUT_CLASSIFICATION	7.048716142387883E-8	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999995279721222	WITHOUT_CLASSIFICATION	4.720278777961767E-6	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999967783620116	WITHOUT_CLASSIFICATION	3.221637988381709E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999973499926949	WITHOUT_CLASSIFICATION	2.6500073050615875E-6	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999982528287263	WITHOUT_CLASSIFICATION	1.747171273730445E-6	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999998978392765	WITHOUT_CLASSIFICATION	1.0216072357625813E-7	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999999660271963	WITHOUT_CLASSIFICATION	3.397280364139259E-8	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9999940346489088	WITHOUT_CLASSIFICATION	5.965351091149634E-6	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999998732614216	WITHOUT_CLASSIFICATION	1.2673857837155408E-7	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999997151852393	WITHOUT_CLASSIFICATION	2.8481476067403857E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999928174653858	WITHOUT_CLASSIFICATION	7.1825346141247085E-6	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999995437675545	WITHOUT_CLASSIFICATION	4.562324455188209E-7	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999998422182517	WITHOUT_CLASSIFICATION	1.5778174834342627E-7	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999997475105407	WITHOUT_CLASSIFICATION	2.524894594009374E-7	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999990252337678	WITHOUT_CLASSIFICATION	9.74766232255519E-7	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9999397848161585	WITHOUT_CLASSIFICATION	6.021518384153719E-5	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9999917520491092	WITHOUT_CLASSIFICATION	8.247950890835241E-6	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999985046810126	WITHOUT_CLASSIFICATION	1.4953189874179875E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999996297626126	WITHOUT_CLASSIFICATION	3.702373874815747E-7	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999977020841084	WITHOUT_CLASSIFICATION	2.2979158916430257E-6	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999997658903307	WITHOUT_CLASSIFICATION	2.3410966935037442E-7	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9999997686332789	WITHOUT_CLASSIFICATION	2.3136672108943803E-7	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999996334550231	WITHOUT_CLASSIFICATION	3.665449769574124E-7	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999948224584978	WITHOUT_CLASSIFICATION	5.177541502119757E-6	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999999940381218	WITHOUT_CLASSIFICATION	5.961878222758309E-9	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999993426888888	WITHOUT_CLASSIFICATION	6.57311111260944E-7	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999997466000836	WITHOUT_CLASSIFICATION	2.533999163771496E-7	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999998683090447	WITHOUT_CLASSIFICATION	1.3169095527584685E-7	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999996363219045	WITHOUT_CLASSIFICATION	3.636780955200207E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999991813516591	WITHOUT_CLASSIFICATION	8.186483408518917E-7	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999998548726512	WITHOUT_CLASSIFICATION	1.451273487977974E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9999897335884814	WITHOUT_CLASSIFICATION	1.0266411518559614E-5	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999998745923508	WITHOUT_CLASSIFICATION	1.254076491400254E-7	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999993784230974	WITHOUT_CLASSIFICATION	6.215769026246397E-7	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999999205254072	WITHOUT_CLASSIFICATION	7.947459274029004E-8	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.999999688491594	WITHOUT_CLASSIFICATION	3.1150840598817897E-7	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999997986457226	WITHOUT_CLASSIFICATION	2.013542772728216E-7	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9999998418560533	WITHOUT_CLASSIFICATION	1.5814394668554636E-7	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999898873374866	WITHOUT_CLASSIFICATION	1.0112662513330846E-5	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999989869121755	WITHOUT_CLASSIFICATION	1.0130878244830413E-6	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999999969675765	WITHOUT_CLASSIFICATION	3.0324235751877494E-9	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.999999938272701	WITHOUT_CLASSIFICATION	6.172729904552602E-8	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.999985436233969	WITHOUT_CLASSIFICATION	1.4563766030900327E-5	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999972645928749	WITHOUT_CLASSIFICATION	2.7354071250297084E-6	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.999987717760472	WITHOUT_CLASSIFICATION	1.2282239527944486E-5	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999997966166302	WITHOUT_CLASSIFICATION	2.033833698128829E-7	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9999993874021484	WITHOUT_CLASSIFICATION	6.125978515061004E-7	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9999801345241732	WITHOUT_CLASSIFICATION	1.9865475826778055E-5	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999957446252656	WITHOUT_CLASSIFICATION	4.255374734376373E-6	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.999999339264879	WITHOUT_CLASSIFICATION	6.607351209496835E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999988432191439	WITHOUT_CLASSIFICATION	1.156780856141175E-6	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999975623324582	WITHOUT_CLASSIFICATION	2.4376675417897065E-6	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999876302832142	WITHOUT_CLASSIFICATION	1.2369716785733395E-5	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999999615255458	WITHOUT_CLASSIFICATION	3.847445414706964E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983359797755	WITHOUT_CLASSIFICATION	1.66402022454644E-6	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999980792553078	WITHOUT_CLASSIFICATION	1.9207446922996426E-6	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999971618446821	WITHOUT_CLASSIFICATION	2.838155317856632E-6	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999999786407202	WITHOUT_CLASSIFICATION	2.1359279726310922E-8	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999951078010779	WITHOUT_CLASSIFICATION	4.892198922137072E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983359797755	WITHOUT_CLASSIFICATION	1.66402022454644E-6	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9999455212389272	WITHOUT_CLASSIFICATION	5.447876107272491E-5	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9999941395684144	WITHOUT_CLASSIFICATION	5.860431585591821E-6	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999999871624432	WITHOUT_CLASSIFICATION	1.2837556654608095E-8	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999999581040008	WITHOUT_CLASSIFICATION	4.189599927069572E-8	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999420338794084	WITHOUT_CLASSIFICATION	5.796612059165189E-5	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999987742445454	WITHOUT_CLASSIFICATION	1.2257554545577805E-6	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999999272659679	WITHOUT_CLASSIFICATION	7.273403208001059E-8	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999963876183916	WITHOUT_CLASSIFICATION	3.6123816083769632E-6	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999926657688485	WITHOUT_CLASSIFICATION	7.3342311514974235E-6	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999994934053035	WITHOUT_CLASSIFICATION	5.065946965043132E-7	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999994468284127	WITHOUT_CLASSIFICATION	5.531715873127997E-7	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9999998012171111	WITHOUT_CLASSIFICATION	1.9878288887423272E-7	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999996851515969	WITHOUT_CLASSIFICATION	3.148484030983399E-7	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9998660723813977	WITHOUT_CLASSIFICATION	1.3392761860240814E-4	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999958962387108	WITHOUT_CLASSIFICATION	4.103761289225337E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999990261583431	WITHOUT_CLASSIFICATION	9.738416568788789E-7	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999938125213331	WITHOUT_CLASSIFICATION	6.187478666863644E-6	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999875791629499	WITHOUT_CLASSIFICATION	1.2420837050135749E-5	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9999981894948224	WITHOUT_CLASSIFICATION	1.810505177579114E-6	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999997313947574	WITHOUT_CLASSIFICATION	2.686052425815477E-7	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999897374573692	WITHOUT_CLASSIFICATION	1.0262542630839296E-5	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999999864228772	WITHOUT_CLASSIFICATION	1.3577122827775283E-8	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999998536788092	WITHOUT_CLASSIFICATION	1.4632119075347197E-7	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999928106352	WITHOUT_CLASSIFICATION	7.189364777516726E-9	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999999641317945	WITHOUT_CLASSIFICATION	3.586820553073556E-8	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999998777708381	WITHOUT_CLASSIFICATION	1.2222916190407763E-7	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.999999912047815	WITHOUT_CLASSIFICATION	8.795218495306779E-8	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.99999953289127	WITHOUT_CLASSIFICATION	4.671087300514485E-7	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999994791309937	WITHOUT_CLASSIFICATION	5.208690063001252E-7	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999837124373846	WITHOUT_CLASSIFICATION	1.6287562615336892E-5	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999991219938184	WITHOUT_CLASSIFICATION	8.780061815715983E-7	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999754914218792	WITHOUT_CLASSIFICATION	2.4508578120805276E-5	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.999998451139818	WITHOUT_CLASSIFICATION	1.5488601819838366E-6	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999995527943429	WITHOUT_CLASSIFICATION	4.472056569897291E-7	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999998876712078	WITHOUT_CLASSIFICATION	1.123287921708073E-7	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999997129538442	WITHOUT_CLASSIFICATION	2.8704615576852834E-7	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999999856813434	WITHOUT_CLASSIFICATION	1.4318656675473417E-8	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999999498933826	WITHOUT_CLASSIFICATION	5.010661741353263E-8	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999999249100436	WITHOUT_CLASSIFICATION	7.508995643048057E-8	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999697472975732	WITHOUT_CLASSIFICATION	3.0252702426901358E-5	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999964524218237	WITHOUT_CLASSIFICATION	3.5475781761968002E-6	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999964524218237	WITHOUT_CLASSIFICATION	3.5475781761968002E-6	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999923556515583	WITHOUT_CLASSIFICATION	7.644348441683853E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999998735034196	WITHOUT_CLASSIFICATION	1.264965803483468E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999996671102385	WITHOUT_CLASSIFICATION	3.328897614798741E-7	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9900281998726481	DOCUMENTATION	0.009971800127352002	WITHOUT_CLASSIFICATION
// ignore	WITHOUT_CLASSIFICATION	0.9999944383784461	WITHOUT_CLASSIFICATION	5.561621553786838E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999944383784461	WITHOUT_CLASSIFICATION	5.561621553786838E-6	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.9999568164081277	WITHOUT_CLASSIFICATION	4.3183591872383633E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999990754174163	WITHOUT_CLASSIFICATION	9.245825836014325E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998182115900057	WITHOUT_CLASSIFICATION	1.8178840999428223E-4	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999995350413389	WITHOUT_CLASSIFICATION	4.649586610900555E-7	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999991513462897	WITHOUT_CLASSIFICATION	8.486537102691673E-7	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999976597039766	WITHOUT_CLASSIFICATION	2.3402960234759156E-6	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.999994402570666	WITHOUT_CLASSIFICATION	5.5974293340019565E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999985463863194	WITHOUT_CLASSIFICATION	1.4536136806834194E-6	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999998892247681	WITHOUT_CLASSIFICATION	1.1077523184889871E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995266270579	WITHOUT_CLASSIFICATION	4.733729420555013E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995266270579	WITHOUT_CLASSIFICATION	4.733729420555013E-7	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9999985780486439	WITHOUT_CLASSIFICATION	1.4219513560669336E-6	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999803174614768	WITHOUT_CLASSIFICATION	1.9682538523252744E-5	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999962981353077	WITHOUT_CLASSIFICATION	3.70186469232142E-6	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9999407127009057	WITHOUT_CLASSIFICATION	5.9287299094296154E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999315825153977	WITHOUT_CLASSIFICATION	6.84174846023659E-5	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999996437414448	WITHOUT_CLASSIFICATION	3.562585552802949E-7	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996564088116	WITHOUT_CLASSIFICATION	3.435911883648585E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999315825153977	WITHOUT_CLASSIFICATION	6.84174846023659E-5	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.999999669507614	WITHOUT_CLASSIFICATION	3.3049238596622384E-7	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9999714780874658	WITHOUT_CLASSIFICATION	2.8521912534142814E-5	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999998814394597	WITHOUT_CLASSIFICATION	1.1856054025645546E-7	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999996333044293	WITHOUT_CLASSIFICATION	3.666955706837876E-7	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999994934053035	WITHOUT_CLASSIFICATION	5.065946965043132E-7	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999993341054605	WITHOUT_CLASSIFICATION	6.658945395294227E-7	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9999688993093986	WITHOUT_CLASSIFICATION	3.110069060136892E-5	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999935075298745	WITHOUT_CLASSIFICATION	6.492470125493718E-6	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999931631263576	WITHOUT_CLASSIFICATION	6.836873642511576E-6	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999979464773566	WITHOUT_CLASSIFICATION	2.053522643424686E-6	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9999978406456314	WITHOUT_CLASSIFICATION	2.1593543687008877E-6	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999921446143438	WITHOUT_CLASSIFICATION	7.855385656153363E-6	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.999999954502277	WITHOUT_CLASSIFICATION	4.549772306557324E-8	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999885497297937	WITHOUT_CLASSIFICATION	1.1450270206286727E-5	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999963436448828	WITHOUT_CLASSIFICATION	3.6563551172416195E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999963436448828	WITHOUT_CLASSIFICATION	3.6563551172416195E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999992457062946	WITHOUT_CLASSIFICATION	7.542937053672381E-7	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999999711107325	WITHOUT_CLASSIFICATION	2.8889267573476484E-8	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996893424041088	WITHOUT_CLASSIFICATION	3.1065759589115135E-4	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999992850989294	WITHOUT_CLASSIFICATION	7.149010704746957E-7	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999959115198714	WITHOUT_CLASSIFICATION	4.0884801285894196E-6	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999982162610795	WITHOUT_CLASSIFICATION	1.7837389204333653E-6	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999993987213412	WITHOUT_CLASSIFICATION	6.012786587146594E-7	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.999999981349902	WITHOUT_CLASSIFICATION	1.865009795155718E-8	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999995948530381	WITHOUT_CLASSIFICATION	4.051469617848586E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999999586340662	WITHOUT_CLASSIFICATION	4.136593380480025E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999905358688802	WITHOUT_CLASSIFICATION	9.464131119787124E-6	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999999873956009	WITHOUT_CLASSIFICATION	1.260439912358499E-8	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9999982317002799	WITHOUT_CLASSIFICATION	1.7682997200865578E-6	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999510313793	WITHOUT_CLASSIFICATION	4.8968620712359736E-8	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999999610832273	WITHOUT_CLASSIFICATION	3.8916772712152305E-8	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.999998466595353	WITHOUT_CLASSIFICATION	1.533404647051027E-6	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.9999999654309225	WITHOUT_CLASSIFICATION	3.456907741521564E-8	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.999999026857116	WITHOUT_CLASSIFICATION	9.73142884119552E-7	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999984842232105	WITHOUT_CLASSIFICATION	1.515776789581613E-6	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999999913341994	WITHOUT_CLASSIFICATION	8.665800623115811E-9	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999998132768009	WITHOUT_CLASSIFICATION	1.8672319923718032E-7	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999999106750538	WITHOUT_CLASSIFICATION	8.932494627371558E-8	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999997627325136	WITHOUT_CLASSIFICATION	2.3726748649888773E-7	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999999990714806	WITHOUT_CLASSIFICATION	9.285193888150697E-10	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9995674363043365	WITHOUT_CLASSIFICATION	4.325636956633687E-4	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9995674363043365	WITHOUT_CLASSIFICATION	4.325636956633687E-4	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999989374729131	WITHOUT_CLASSIFICATION	1.0625270869000934E-6	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999995528561472	WITHOUT_CLASSIFICATION	4.4714385287247937E-7	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999928132625311	WITHOUT_CLASSIFICATION	7.186737468918576E-6	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999999915475108	WITHOUT_CLASSIFICATION	8.452489199436168E-9	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999449738473483	WITHOUT_CLASSIFICATION	5.502615265166421E-5	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.9476583238207393	WITHOUT_CLASSIFICATION	0.05234167617926058	DOCUMENTATION
