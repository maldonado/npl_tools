//test out the optimizer:	WITHOUT_CLASSIFICATION	0.999994212397546	WITHOUT_CLASSIFICATION	5.787602453948448E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999996904953231	WITHOUT_CLASSIFICATION	3.095046768951634E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999996904953231	WITHOUT_CLASSIFICATION	3.095046768951634E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999996904953231	WITHOUT_CLASSIFICATION	3.095046768951634E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999996904953231	WITHOUT_CLASSIFICATION	3.095046768951634E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999996904953231	WITHOUT_CLASSIFICATION	3.095046768951634E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999996904953231	WITHOUT_CLASSIFICATION	3.095046768951634E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999996904953231	WITHOUT_CLASSIFICATION	3.095046768951634E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999986514455479	WITHOUT_CLASSIFICATION	1.3485544520174205E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999986514455479	WITHOUT_CLASSIFICATION	1.3485544520174205E-6	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9999748104685615	WITHOUT_CLASSIFICATION	2.518953143856074E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999984293839661	WITHOUT_CLASSIFICATION	1.5706160338877137E-6	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999994041157971	WITHOUT_CLASSIFICATION	5.958842029025382E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999902047713061	WITHOUT_CLASSIFICATION	9.79522869391238E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999902047713061	WITHOUT_CLASSIFICATION	9.79522869391238E-6	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999996509653629	WITHOUT_CLASSIFICATION	3.490346371355868E-7	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999466738819	WITHOUT_CLASSIFICATION	5.332611818199638E-8	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.999999449251871	WITHOUT_CLASSIFICATION	5.50748129080364E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999934439186623	WITHOUT_CLASSIFICATION	6.55608133777661E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999990958579305	WITHOUT_CLASSIFICATION	9.041420694825545E-7	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999990958579305	WITHOUT_CLASSIFICATION	9.041420694825545E-7	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999975877047625	WITHOUT_CLASSIFICATION	2.4122952374726695E-6	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9999929269848992	WITHOUT_CLASSIFICATION	7.07301510092293E-6	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999996251976778	WITHOUT_CLASSIFICATION	3.7480232222452144E-7	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999997188290592	WITHOUT_CLASSIFICATION	2.8117094070372693E-7	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999928236665	WITHOUT_CLASSIFICATION	7.176333560730411E-9	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999912061560584	WITHOUT_CLASSIFICATION	8.793843941610123E-6	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9999849292814403	WITHOUT_CLASSIFICATION	1.5070718559698134E-5	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999852963995125	WITHOUT_CLASSIFICATION	1.4703600487509397E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999745754300245	WITHOUT_CLASSIFICATION	2.5424569975409975E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9996445841617092	WITHOUT_CLASSIFICATION	3.5541583829073E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.999988107986954	WITHOUT_CLASSIFICATION	1.189201304606327E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999819671309699	WITHOUT_CLASSIFICATION	1.803286903019433E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999998833855418	WITHOUT_CLASSIFICATION	1.166144581616906E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999773916290734	WITHOUT_CLASSIFICATION	2.260837092657301E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999773916290734	WITHOUT_CLASSIFICATION	2.260837092657301E-5	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999999823635648	WITHOUT_CLASSIFICATION	1.763643520068178E-8	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999754818841533	WITHOUT_CLASSIFICATION	2.4518115846736275E-5	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999997242322859	WITHOUT_CLASSIFICATION	2.757677140435232E-7	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999999932536042	WITHOUT_CLASSIFICATION	6.746395729680104E-9	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9998984054981771	WITHOUT_CLASSIFICATION	1.0159450182285172E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9899100100869849	DOCUMENTATION	0.010089989913015157	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9899100100869849	DOCUMENTATION	0.010089989913015157	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999999540708381	WITHOUT_CLASSIFICATION	4.5929161860270255E-8	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999998956372181	WITHOUT_CLASSIFICATION	1.0436278183128955E-7	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999999689501925	WITHOUT_CLASSIFICATION	3.1049807478205756E-8	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999989834367591	WITHOUT_CLASSIFICATION	1.016563240953444E-6	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.999996833088937	WITHOUT_CLASSIFICATION	3.1669110630359757E-6	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971993821754	WITHOUT_CLASSIFICATION	2.8006178247911654E-6	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999973894752905	WITHOUT_CLASSIFICATION	2.6105247095616883E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999943913151929	WITHOUT_CLASSIFICATION	5.608684807228435E-6	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999178861506384	WITHOUT_CLASSIFICATION	8.211384936161104E-5	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999999724405623	WITHOUT_CLASSIFICATION	2.7559437768531998E-8	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999691991176525	WITHOUT_CLASSIFICATION	3.0800882347552095E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999178861506384	WITHOUT_CLASSIFICATION	8.211384936161104E-5	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999691991176525	WITHOUT_CLASSIFICATION	3.0800882347552095E-5	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999951613367224	WITHOUT_CLASSIFICATION	4.838663277560947E-6	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9999995369370241	WITHOUT_CLASSIFICATION	4.630629759263142E-7	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999998470778604	WITHOUT_CLASSIFICATION	1.5292213950911934E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999999501820886	WITHOUT_CLASSIFICATION	4.981791121733102E-8	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999989745183764	WITHOUT_CLASSIFICATION	1.0254816236810864E-6	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999999287969694	WITHOUT_CLASSIFICATION	7.120303059256245E-8	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9999304592111169	WITHOUT_CLASSIFICATION	6.954078888308353E-5	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.999958682338879	WITHOUT_CLASSIFICATION	4.131766112111089E-5	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999999775878285	WITHOUT_CLASSIFICATION	2.24121714198295E-8	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9999970869453729	WITHOUT_CLASSIFICATION	2.9130546270467456E-6	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999992604625686	WITHOUT_CLASSIFICATION	7.395374313711163E-7	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999953931724654	WITHOUT_CLASSIFICATION	4.60682753455943E-6	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999898420798	WITHOUT_CLASSIFICATION	1.0157920164123567E-8	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.999999577275864	WITHOUT_CLASSIFICATION	4.2272413593455536E-7	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999999739214358	WITHOUT_CLASSIFICATION	2.6078564163154958E-8	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999999377260266	WITHOUT_CLASSIFICATION	6.227397342158804E-8	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999997229564553	WITHOUT_CLASSIFICATION	2.770435446539161E-7	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999998992444384	WITHOUT_CLASSIFICATION	1.0075556145047446E-7	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999997462571738	WITHOUT_CLASSIFICATION	2.537428261582839E-7	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999995083153876	WITHOUT_CLASSIFICATION	4.916846123714502E-7	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999995370928292	WITHOUT_CLASSIFICATION	4.629071708398045E-7	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999998171237873	WITHOUT_CLASSIFICATION	1.828762126813291E-7	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999993383055868	WITHOUT_CLASSIFICATION	6.616944131055099E-7	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999988811530713	WITHOUT_CLASSIFICATION	1.1188469286656453E-6	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9999999648881959	WITHOUT_CLASSIFICATION	3.511180405365681E-8	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999979076754243	WITHOUT_CLASSIFICATION	2.092324575721208E-6	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999996644044729	WITHOUT_CLASSIFICATION	3.355955272205336E-7	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9999997468623246	WITHOUT_CLASSIFICATION	2.5313767531872456E-7	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999997761607022	WITHOUT_CLASSIFICATION	2.238392978056392E-7	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999996251496681	WITHOUT_CLASSIFICATION	3.748503318689062E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999980985755216	WITHOUT_CLASSIFICATION	1.9014244784596558E-6	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999998240948309	WITHOUT_CLASSIFICATION	1.7590516907144476E-7	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999966662458523	WITHOUT_CLASSIFICATION	3.3337541476776496E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999993050169046	WITHOUT_CLASSIFICATION	6.94983095382279E-7	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999996934833697	WITHOUT_CLASSIFICATION	3.0651663028947486E-7	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999941237817637	WITHOUT_CLASSIFICATION	5.876218236413954E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999993050169046	WITHOUT_CLASSIFICATION	6.94983095382279E-7	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999999963050055	WITHOUT_CLASSIFICATION	3.694994408522475E-9	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999999915176898	WITHOUT_CLASSIFICATION	8.482310186744603E-9	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999965688910631	WITHOUT_CLASSIFICATION	3.431108936898857E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999983001184527	WITHOUT_CLASSIFICATION	1.699881547280927E-6	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.999999565765686	WITHOUT_CLASSIFICATION	4.342343139602851E-7	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9998827526792144	WITHOUT_CLASSIFICATION	1.1724732078547483E-4	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9998827526792144	WITHOUT_CLASSIFICATION	1.1724732078547483E-4	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999842714773555	WITHOUT_CLASSIFICATION	1.5728522644550345E-5	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999996036505943	WITHOUT_CLASSIFICATION	3.963494057909028E-7	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9999863043926048	WITHOUT_CLASSIFICATION	1.369560739519163E-5	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999999400761649	WITHOUT_CLASSIFICATION	5.992383510853276E-8	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999998205500952	WITHOUT_CLASSIFICATION	1.7944990485898358E-7	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999995678138368	WITHOUT_CLASSIFICATION	4.321861632434907E-7	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.999998906283117	WITHOUT_CLASSIFICATION	1.0937168829583916E-6	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999989142701698	WITHOUT_CLASSIFICATION	1.0857298301121584E-6	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999998015979017	WITHOUT_CLASSIFICATION	1.9840209830708729E-7	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999994662063751	WITHOUT_CLASSIFICATION	5.337936248777241E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999992543063958	WITHOUT_CLASSIFICATION	7.45693604137172E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999992543063958	WITHOUT_CLASSIFICATION	7.45693604137172E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999986067883244	WITHOUT_CLASSIFICATION	1.393211675634097E-6	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999980409995542	WITHOUT_CLASSIFICATION	1.9590004457956333E-6	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9999993332045166	WITHOUT_CLASSIFICATION	6.667954835009283E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999992543063958	WITHOUT_CLASSIFICATION	7.45693604137172E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999986067883244	WITHOUT_CLASSIFICATION	1.393211675634097E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999986067883244	WITHOUT_CLASSIFICATION	1.393211675634097E-6	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999999115875741	WITHOUT_CLASSIFICATION	8.841242603377509E-8	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999994963295159	WITHOUT_CLASSIFICATION	5.036704840852501E-7	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999992995168601	WITHOUT_CLASSIFICATION	7.004831400194443E-7	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.999999854630433	WITHOUT_CLASSIFICATION	1.453695670319562E-7	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999969482166088	WITHOUT_CLASSIFICATION	3.0517833911684348E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999969482166088	WITHOUT_CLASSIFICATION	3.0517833911684348E-6	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999966759441673	WITHOUT_CLASSIFICATION	3.324055832730575E-6	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999950798154725	WITHOUT_CLASSIFICATION	4.920184527387742E-6	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999991130156719	WITHOUT_CLASSIFICATION	8.869843281531616E-7	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999997334699408	WITHOUT_CLASSIFICATION	2.665300592405293E-7	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999997334699408	WITHOUT_CLASSIFICATION	2.665300592405293E-7	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999702405212945	WITHOUT_CLASSIFICATION	2.9759478705457297E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999996351949391	WITHOUT_CLASSIFICATION	3.648050609673784E-7	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999974046107736	WITHOUT_CLASSIFICATION	2.595389226382808E-6	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999999667823076	WITHOUT_CLASSIFICATION	3.321769232341265E-8	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999984251567999	WITHOUT_CLASSIFICATION	1.5748431999988476E-6	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.999997778466256	WITHOUT_CLASSIFICATION	2.2215337440486496E-6	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9999962921882237	WITHOUT_CLASSIFICATION	3.7078117762167327E-6	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999992893152023	WITHOUT_CLASSIFICATION	7.106847976828424E-7	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9999986621323248	WITHOUT_CLASSIFICATION	1.3378676752006503E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999974046107736	WITHOUT_CLASSIFICATION	2.595389226382808E-6	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9999363907081018	WITHOUT_CLASSIFICATION	6.360929189828955E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999912186401781	WITHOUT_CLASSIFICATION	8.781359821855933E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999912186401781	WITHOUT_CLASSIFICATION	8.781359821855933E-6	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999999511638626	WITHOUT_CLASSIFICATION	4.8836137254606525E-8	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999999536511129	WITHOUT_CLASSIFICATION	4.634888714094608E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999999467077176	WITHOUT_CLASSIFICATION	5.329228242907107E-8	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9995700237845715	WITHOUT_CLASSIFICATION	4.29976215428531E-4	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9999938845010639	WITHOUT_CLASSIFICATION	6.1154989361280185E-6	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9999662217963493	WITHOUT_CLASSIFICATION	3.377820365059275E-5	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.999996350280422	WITHOUT_CLASSIFICATION	3.6497195780384846E-6	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999996947399445	WITHOUT_CLASSIFICATION	3.052600554567958E-7	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999997302609763	WITHOUT_CLASSIFICATION	2.697390236475398E-7	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999997302609763	WITHOUT_CLASSIFICATION	2.697390236475398E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999741366282607	WITHOUT_CLASSIFICATION	2.5863371739220792E-5	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.999994212397546	WITHOUT_CLASSIFICATION	5.787602453948448E-6	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999992584681848	WITHOUT_CLASSIFICATION	7.415318151500721E-7	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999996904953231	WITHOUT_CLASSIFICATION	3.095046768951634E-6	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999949773768705	WITHOUT_CLASSIFICATION	5.022623129537875E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999986514455479	WITHOUT_CLASSIFICATION	1.3485544520174205E-6	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999990517309965	WITHOUT_CLASSIFICATION	9.482690035423634E-7	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999987874592937	WITHOUT_CLASSIFICATION	1.212540706301524E-6	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999990415408553	WITHOUT_CLASSIFICATION	9.584591446693856E-7	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999996127204832	WITHOUT_CLASSIFICATION	3.87279516702913E-7	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999996359750171	WITHOUT_CLASSIFICATION	3.6402498294676416E-7	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9999901786941022	WITHOUT_CLASSIFICATION	9.821305897728058E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999925968153888	WITHOUT_CLASSIFICATION	7.40318461122163E-6	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999989714820335	WITHOUT_CLASSIFICATION	1.0285179663834011E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999984293839661	WITHOUT_CLASSIFICATION	1.5706160338877137E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999986822411714	WITHOUT_CLASSIFICATION	1.3177588285852638E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999986822411714	WITHOUT_CLASSIFICATION	1.3177588285852638E-6	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9999995861478692	WITHOUT_CLASSIFICATION	4.138521307601889E-7	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9999765448034738	WITHOUT_CLASSIFICATION	2.3455196526150857E-5	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999999389862178	WITHOUT_CLASSIFICATION	6.101378219712059E-8	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999991097020956	WITHOUT_CLASSIFICATION	8.902979044782237E-7	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.999998948118825	WITHOUT_CLASSIFICATION	1.0518811750997214E-6	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999994443712759	WITHOUT_CLASSIFICATION	5.556287240824678E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999902047713061	WITHOUT_CLASSIFICATION	9.79522869391238E-6	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999996697969358	WITHOUT_CLASSIFICATION	3.3020306428315647E-7	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999911596736332	WITHOUT_CLASSIFICATION	8.840326366874596E-6	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999990743399156	WITHOUT_CLASSIFICATION	9.256600842880488E-7	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999996488310671	WITHOUT_CLASSIFICATION	3.511689329609061E-7	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999970664871313	WITHOUT_CLASSIFICATION	2.9335128686792176E-6	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.99999722448122	WITHOUT_CLASSIFICATION	2.7755187799887682E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999963018184823	WITHOUT_CLASSIFICATION	3.6981815177207477E-6	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999994170597792	WITHOUT_CLASSIFICATION	5.829402208095909E-7	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999944614345432	WITHOUT_CLASSIFICATION	5.538565456918421E-6	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999923668897451	WITHOUT_CLASSIFICATION	7.633110254824477E-6	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999992819549868	WITHOUT_CLASSIFICATION	7.180450133469973E-7	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.9999998752918782	WITHOUT_CLASSIFICATION	1.2470812183523467E-7	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999996904953231	WITHOUT_CLASSIFICATION	3.095046768951634E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999996904953231	WITHOUT_CLASSIFICATION	3.095046768951634E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999986514455479	WITHOUT_CLASSIFICATION	1.3485544520174205E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999986514455479	WITHOUT_CLASSIFICATION	1.3485544520174205E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999925968153888	WITHOUT_CLASSIFICATION	7.40318461122163E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999986822411714	WITHOUT_CLASSIFICATION	1.3177588285852638E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999963018184823	WITHOUT_CLASSIFICATION	3.6981815177207477E-6	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999996509653629	WITHOUT_CLASSIFICATION	3.490346371355868E-7	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999992932406213	WITHOUT_CLASSIFICATION	7.067593787405303E-7	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999986111610267	WITHOUT_CLASSIFICATION	1.388838973229763E-6	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999986262594794	WITHOUT_CLASSIFICATION	1.3737405206514364E-6	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999985607190729	WITHOUT_CLASSIFICATION	1.4392809271290803E-6	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999985902052343	WITHOUT_CLASSIFICATION	1.4097947657768192E-6	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9999960007970908	WITHOUT_CLASSIFICATION	3.999202909156545E-6	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999970840573602	WITHOUT_CLASSIFICATION	2.9159426398522173E-6	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9999652097987844	WITHOUT_CLASSIFICATION	3.4790201215511827E-5	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999973926611808	WITHOUT_CLASSIFICATION	2.607338819180083E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999916715863656	WITHOUT_CLASSIFICATION	8.32841363444817E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999916715863656	WITHOUT_CLASSIFICATION	8.32841363444817E-6	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999998936737544	WITHOUT_CLASSIFICATION	1.063262455398967E-7	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999998542684255	WITHOUT_CLASSIFICATION	1.4573157458601137E-7	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9999973451708034	WITHOUT_CLASSIFICATION	2.6548291966394523E-6	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999995665055776	WITHOUT_CLASSIFICATION	4.3349442234979E-7	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999998246531742	WITHOUT_CLASSIFICATION	1.7534682586920008E-7	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999998744099841	WITHOUT_CLASSIFICATION	1.2559001590480811E-7	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999997635054303	WITHOUT_CLASSIFICATION	2.3649456972485207E-7	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999466738819	WITHOUT_CLASSIFICATION	5.332611818199638E-8	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999986276615465	WITHOUT_CLASSIFICATION	1.3723384536034343E-6	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999989864736228	WITHOUT_CLASSIFICATION	1.013526377131814E-6	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999989864736228	WITHOUT_CLASSIFICATION	1.013526377131814E-6	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999993690045714	WITHOUT_CLASSIFICATION	6.309954286219038E-7	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999995332611648	WITHOUT_CLASSIFICATION	4.6673883533368166E-7	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999990622137795	WITHOUT_CLASSIFICATION	9.377862204272923E-7	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999995755590869	WITHOUT_CLASSIFICATION	4.244409131452237E-7	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999873028276091	WITHOUT_CLASSIFICATION	1.2697172390884475E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999986514455479	WITHOUT_CLASSIFICATION	1.3485544520174205E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999925968153888	WITHOUT_CLASSIFICATION	7.40318461122163E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999984293839661	WITHOUT_CLASSIFICATION	1.5706160338877137E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999963018184823	WITHOUT_CLASSIFICATION	3.6981815177207477E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999963018184823	WITHOUT_CLASSIFICATION	3.6981815177207477E-6	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999518566243	WITHOUT_CLASSIFICATION	4.814337575173878E-8	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999518566243	WITHOUT_CLASSIFICATION	4.814337575173878E-8	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999997183517922	WITHOUT_CLASSIFICATION	2.8164820768425724E-7	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.999998525630612	WITHOUT_CLASSIFICATION	1.4743693879706456E-6	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.999998525630612	WITHOUT_CLASSIFICATION	1.4743693879706456E-6	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.999999213098833	WITHOUT_CLASSIFICATION	7.86901167119388E-7	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.999998796728673	WITHOUT_CLASSIFICATION	1.2032713270378438E-6	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999995739045564	WITHOUT_CLASSIFICATION	4.260954435698131E-7	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999996308703644	WITHOUT_CLASSIFICATION	3.6912963556789983E-7	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999999048385384	WITHOUT_CLASSIFICATION	9.51614616651457E-8	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999934439186623	WITHOUT_CLASSIFICATION	6.55608133777661E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999934439186623	WITHOUT_CLASSIFICATION	6.55608133777661E-6	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.9999980394369724	WITHOUT_CLASSIFICATION	1.9605630275145104E-6	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999935926480824	WITHOUT_CLASSIFICATION	6.407351917574547E-6	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.9999981135721222	WITHOUT_CLASSIFICATION	1.886427877875224E-6	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999935163008624	WITHOUT_CLASSIFICATION	6.483699137577019E-6	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999985676508878	WITHOUT_CLASSIFICATION	1.432349112242497E-6	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9999957736794381	WITHOUT_CLASSIFICATION	4.226320561816179E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999990958579305	WITHOUT_CLASSIFICATION	9.041420694825545E-7	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.999996727087923	WITHOUT_CLASSIFICATION	3.272912077055994E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.999996727087923	WITHOUT_CLASSIFICATION	3.272912077055994E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999975877047625	WITHOUT_CLASSIFICATION	2.4122952374726695E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999975877047625	WITHOUT_CLASSIFICATION	2.4122952374726695E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.99999500489189	WITHOUT_CLASSIFICATION	4.995108109969959E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.99999500489189	WITHOUT_CLASSIFICATION	4.995108109969959E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.999999650346179	WITHOUT_CLASSIFICATION	3.496538210351869E-7	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.999999650346179	WITHOUT_CLASSIFICATION	3.496538210351869E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999934439186623	WITHOUT_CLASSIFICATION	6.55608133777661E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999990958579305	WITHOUT_CLASSIFICATION	9.041420694825545E-7	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.999996727087923	WITHOUT_CLASSIFICATION	3.272912077055994E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.999996727087923	WITHOUT_CLASSIFICATION	3.272912077055994E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999975877047625	WITHOUT_CLASSIFICATION	2.4122952374726695E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.99999500489189	WITHOUT_CLASSIFICATION	4.995108109969959E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.99999500489189	WITHOUT_CLASSIFICATION	4.995108109969959E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.999999650346179	WITHOUT_CLASSIFICATION	3.496538210351869E-7	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999991667964464	WITHOUT_CLASSIFICATION	8.332035536372288E-7	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9999792301257867	WITHOUT_CLASSIFICATION	2.076987421328269E-5	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.999979308661256	WITHOUT_CLASSIFICATION	2.069133874411134E-5	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999990605155533	WITHOUT_CLASSIFICATION	9.394844467127888E-7	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999979222187191	WITHOUT_CLASSIFICATION	2.0777812809238856E-6	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999930282145794	WITHOUT_CLASSIFICATION	6.971785420722583E-6	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999977196552017	WITHOUT_CLASSIFICATION	2.28034479839696E-6	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9999999929361132	WITHOUT_CLASSIFICATION	7.063886880873457E-9	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999966363069753	WITHOUT_CLASSIFICATION	3.363693024631078E-6	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999999945302093	WITHOUT_CLASSIFICATION	5.469790803712619E-9	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999998908192276	WITHOUT_CLASSIFICATION	1.0918077235981083E-7	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999999521307438	WITHOUT_CLASSIFICATION	4.786925618020389E-8	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999842714773555	WITHOUT_CLASSIFICATION	1.5728522644550345E-5	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999930282145794	WITHOUT_CLASSIFICATION	6.971785420722583E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9998547647979489	WITHOUT_CLASSIFICATION	1.4523520205108673E-4	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9998547647979489	WITHOUT_CLASSIFICATION	1.4523520205108673E-4	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.999999916603965	WITHOUT_CLASSIFICATION	8.339603488172647E-8	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999993598957552	WITHOUT_CLASSIFICATION	6.401042448806346E-7	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999993598957552	WITHOUT_CLASSIFICATION	6.401042448806346E-7	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999958585915881	WITHOUT_CLASSIFICATION	4.1414084118977795E-6	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999996206016912	WITHOUT_CLASSIFICATION	3.7939830875252575E-7	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999999226265233	WITHOUT_CLASSIFICATION	7.737347671906412E-8	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.999998947755495	WITHOUT_CLASSIFICATION	1.0522445049792833E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.999998947755495	WITHOUT_CLASSIFICATION	1.0522445049792833E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999928236665	WITHOUT_CLASSIFICATION	7.176333560730411E-9	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999999790360871	WITHOUT_CLASSIFICATION	2.096391291360164E-8	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999999790360871	WITHOUT_CLASSIFICATION	2.096391291360164E-8	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999985527709722	WITHOUT_CLASSIFICATION	1.4472290278594469E-6	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999998624776579	WITHOUT_CLASSIFICATION	1.3752234197345627E-7	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999997901797174	WITHOUT_CLASSIFICATION	2.0982028268107945E-7	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999811508470384	WITHOUT_CLASSIFICATION	1.8849152961573294E-5	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999906734427766	WITHOUT_CLASSIFICATION	9.326557223357019E-6	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9999915897428405	WITHOUT_CLASSIFICATION	8.41025715949445E-6	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999912061560584	WITHOUT_CLASSIFICATION	8.793843941610123E-6	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999906583737661	WITHOUT_CLASSIFICATION	9.34162623390959E-6	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9983889700439664	WITHOUT_CLASSIFICATION	0.0016110299560335248	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.9999838285341683	WITHOUT_CLASSIFICATION	1.617146583165219E-5	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999844070674238	WITHOUT_CLASSIFICATION	1.5592932576257993E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999745754300245	WITHOUT_CLASSIFICATION	2.5424569975409975E-5	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999992070102721	WITHOUT_CLASSIFICATION	7.929897277589492E-7	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999995102020709	WITHOUT_CLASSIFICATION	4.897979291881437E-7	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999999560944636	WITHOUT_CLASSIFICATION	4.3905536397942935E-8	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999745754300245	WITHOUT_CLASSIFICATION	2.5424569975409975E-5	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999999295278768	WITHOUT_CLASSIFICATION	7.047212325315522E-8	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999993902530991	WITHOUT_CLASSIFICATION	6.097469008428935E-7	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999885351284624	WITHOUT_CLASSIFICATION	1.1464871537640534E-5	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.9999838187797427	WITHOUT_CLASSIFICATION	1.6181220257265226E-5	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999793362753561	WITHOUT_CLASSIFICATION	2.0663724643884183E-5	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999806113114527	WITHOUT_CLASSIFICATION	1.9388688547422893E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999690546551105	WITHOUT_CLASSIFICATION	3.094534488943276E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999819671309699	WITHOUT_CLASSIFICATION	1.803286903019433E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999794299144615	WITHOUT_CLASSIFICATION	2.0570085538447346E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999998833855418	WITHOUT_CLASSIFICATION	1.166144581616906E-7	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999968649849817	WITHOUT_CLASSIFICATION	3.135015018338155E-6	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999992288114102	WITHOUT_CLASSIFICATION	7.711885897719768E-7	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999879376155757	WITHOUT_CLASSIFICATION	1.2062384424246177E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999912061560584	WITHOUT_CLASSIFICATION	8.793843941610123E-6	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999794299144615	WITHOUT_CLASSIFICATION	2.0570085538447346E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999968649849817	WITHOUT_CLASSIFICATION	3.135015018338155E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999879376155757	WITHOUT_CLASSIFICATION	1.2062384424246177E-5	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999997777224069	WITHOUT_CLASSIFICATION	2.222775930979034E-7	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999818676612673	WITHOUT_CLASSIFICATION	1.8132338732755422E-5	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999997296469494	WITHOUT_CLASSIFICATION	2.7035305062445697E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999773916290734	WITHOUT_CLASSIFICATION	2.260837092657301E-5	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999955248199692	WITHOUT_CLASSIFICATION	4.47518003071902E-6	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.9999987301867336	WITHOUT_CLASSIFICATION	1.2698132664638106E-6	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.9999823864671277	WITHOUT_CLASSIFICATION	1.7613532872410994E-5	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999996960904707	WITHOUT_CLASSIFICATION	3.03909529305031E-7	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999868164487805	WITHOUT_CLASSIFICATION	1.318355121953307E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999998378917835	WITHOUT_CLASSIFICATION	1.621082164634611E-7	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999998568350407	WITHOUT_CLASSIFICATION	1.431649592279595E-7	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999998824543885	WITHOUT_CLASSIFICATION	1.1754561140525406E-7	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999984532898352	WITHOUT_CLASSIFICATION	1.546710164745745E-6	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999998188582133	WITHOUT_CLASSIFICATION	1.8114178665695027E-7	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999932914677669	WITHOUT_CLASSIFICATION	6.708532232958653E-6	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999813372895848	WITHOUT_CLASSIFICATION	1.8662710415159024E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999754818841533	WITHOUT_CLASSIFICATION	2.4518115846736275E-5	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999998114333875	WITHOUT_CLASSIFICATION	1.8856661244387999E-7	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999788786227236	WITHOUT_CLASSIFICATION	2.1121377276325334E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999794299144615	WITHOUT_CLASSIFICATION	2.0570085538447346E-5	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999999286217356	WITHOUT_CLASSIFICATION	7.137826444407453E-8	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999991747195619	WITHOUT_CLASSIFICATION	8.252804381501039E-7	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999990998118798	WITHOUT_CLASSIFICATION	9.001881201820537E-7	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9999999472429951	WITHOUT_CLASSIFICATION	5.275700480200734E-8	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999995054742381	WITHOUT_CLASSIFICATION	4.945257619102163E-7	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999970729650948	WITHOUT_CLASSIFICATION	2.9270349051135642E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999992381110753	WITHOUT_CLASSIFICATION	7.618889247534724E-7	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999998134721729	WITHOUT_CLASSIFICATION	1.865278270278564E-7	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.999974178553196	WITHOUT_CLASSIFICATION	2.5821446804012143E-5	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999775710242679	WITHOUT_CLASSIFICATION	2.242897573202737E-5	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999944370709242	WITHOUT_CLASSIFICATION	5.562929075903883E-6	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999936552459214	WITHOUT_CLASSIFICATION	6.3447540786130455E-6	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9999991948030891	WITHOUT_CLASSIFICATION	8.051969107952951E-7	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999999932536042	WITHOUT_CLASSIFICATION	6.746395729680104E-9	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999991501663085	WITHOUT_CLASSIFICATION	8.498336914902557E-7	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999994663846853	WITHOUT_CLASSIFICATION	5.336153146687017E-7	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9999955560344038	WITHOUT_CLASSIFICATION	4.443965596269111E-6	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999987212492676	WITHOUT_CLASSIFICATION	1.2787507323088385E-6	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999997409313032	WITHOUT_CLASSIFICATION	2.590686967921458E-7	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999998606884593	WITHOUT_CLASSIFICATION	1.3931154074133702E-7	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999979669896	WITHOUT_CLASSIFICATION	2.033010502808598E-9	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999997870352004	WITHOUT_CLASSIFICATION	2.1296479964915307E-7	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999995724711408	WITHOUT_CLASSIFICATION	4.2752885922083484E-7	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9999901354772268	WITHOUT_CLASSIFICATION	9.86452277319477E-6	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999504627638216	WITHOUT_CLASSIFICATION	4.953723617844814E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999504627638216	WITHOUT_CLASSIFICATION	4.953723617844814E-5	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999820658357562	WITHOUT_CLASSIFICATION	1.793416424375251E-5	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999997394559781	WITHOUT_CLASSIFICATION	2.605440219044105E-7	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999969497763712	WITHOUT_CLASSIFICATION	3.0502236289032893E-6	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.99999425759314	WITHOUT_CLASSIFICATION	5.742406859957606E-6	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9999876008343503	WITHOUT_CLASSIFICATION	1.239916564959441E-5	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9999978867885534	WITHOUT_CLASSIFICATION	2.113211446534219E-6	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999997106209987	WITHOUT_CLASSIFICATION	2.8937900131214116E-7	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999998814972271	WITHOUT_CLASSIFICATION	1.1850277292702917E-7	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9999869091627707	WITHOUT_CLASSIFICATION	1.3090837229276785E-5	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999932951097811	WITHOUT_CLASSIFICATION	6.704890218861975E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.9999892120396221	WITHOUT_CLASSIFICATION	1.0787960377917271E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999994527912511	WITHOUT_CLASSIFICATION	5.472087488953595E-7	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9999985209170378	WITHOUT_CLASSIFICATION	1.479082962170532E-6	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.99999881517581	WITHOUT_CLASSIFICATION	1.1848241900417398E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994392554016	WITHOUT_CLASSIFICATION	5.607445983744385E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994260822084	WITHOUT_CLASSIFICATION	5.739177914971344E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999999512181241	WITHOUT_CLASSIFICATION	4.878187594682704E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999997509168268	WITHOUT_CLASSIFICATION	2.4908317311962554E-7	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9999992938911411	WITHOUT_CLASSIFICATION	7.061088588762654E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999993030266726	WITHOUT_CLASSIFICATION	6.969733273453587E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999951357061423	WITHOUT_CLASSIFICATION	4.864293857796109E-6	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999951357061423	WITHOUT_CLASSIFICATION	4.864293857796109E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999683659178692	WITHOUT_CLASSIFICATION	3.163408213080694E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999683659178692	WITHOUT_CLASSIFICATION	3.163408213080694E-5	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999995724711408	WITHOUT_CLASSIFICATION	4.2752885922083484E-7	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999976582960955	WITHOUT_CLASSIFICATION	2.341703904524769E-6	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999968876527726	WITHOUT_CLASSIFICATION	3.112347227393222E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999998510823	WITHOUT_CLASSIFICATION	1.489177000354369E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999741366282607	WITHOUT_CLASSIFICATION	2.5863371739220792E-5	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999968876527726	WITHOUT_CLASSIFICATION	3.112347227393222E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999998510823	WITHOUT_CLASSIFICATION	1.489177000354369E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.99999146846035	WITHOUT_CLASSIFICATION	8.53153964991503E-6	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999979187658562	WITHOUT_CLASSIFICATION	2.081234143805658E-6	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999998998406332	WITHOUT_CLASSIFICATION	1.0015936672251885E-7	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999998031334678	WITHOUT_CLASSIFICATION	1.9686653214002157E-7	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.999999842205914	WITHOUT_CLASSIFICATION	1.5779408603673686E-7	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9999840033039497	WITHOUT_CLASSIFICATION	1.5996696050371126E-5	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999991411534563	WITHOUT_CLASSIFICATION	8.58846543615708E-7	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999941579706191	WITHOUT_CLASSIFICATION	5.84202938094898E-6	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.999986812208079	WITHOUT_CLASSIFICATION	1.3187791921100112E-5	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.999999916532097	WITHOUT_CLASSIFICATION	8.346790305229303E-8	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999993670897726	WITHOUT_CLASSIFICATION	6.329102275240718E-7	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999998975093667	WITHOUT_CLASSIFICATION	1.0249063333460452E-7	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999999143443361	WITHOUT_CLASSIFICATION	8.565566392412793E-8	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9999984521844637	WITHOUT_CLASSIFICATION	1.5478155362842616E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999741366282607	WITHOUT_CLASSIFICATION	2.5863371739220792E-5	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9999986909988384	WITHOUT_CLASSIFICATION	1.309001161648268E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999943548363174	WITHOUT_CLASSIFICATION	5.645163682508298E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999943548363174	WITHOUT_CLASSIFICATION	5.645163682508298E-6	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.999999857174828	WITHOUT_CLASSIFICATION	1.4282517202308003E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.99999146846035	WITHOUT_CLASSIFICATION	8.53153964991503E-6	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9999974160231924	WITHOUT_CLASSIFICATION	2.583976807672865E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999999682488382	WITHOUT_CLASSIFICATION	3.175116181046696E-8	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9999972685402829	WITHOUT_CLASSIFICATION	2.7314597170399036E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999972994034936	WITHOUT_CLASSIFICATION	2.700596506404381E-6	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999964977771956	WITHOUT_CLASSIFICATION	3.5022228042884937E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.99999146846035	WITHOUT_CLASSIFICATION	8.53153964991503E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999972994034936	WITHOUT_CLASSIFICATION	2.700596506404381E-6	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999964977771956	WITHOUT_CLASSIFICATION	3.5022228042884937E-6	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9999725170924122	WITHOUT_CLASSIFICATION	2.7482907587830755E-5	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999982245451648	WITHOUT_CLASSIFICATION	1.775454835200885E-6	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.999998646427434	WITHOUT_CLASSIFICATION	1.3535725660211875E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.99999146846035	WITHOUT_CLASSIFICATION	8.53153964991503E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.99999146846035	WITHOUT_CLASSIFICATION	8.53153964991503E-6	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999982050751979	WITHOUT_CLASSIFICATION	1.7949248021871197E-6	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999992569182882	WITHOUT_CLASSIFICATION	7.43081711821098E-7	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999887882528277	WITHOUT_CLASSIFICATION	1.121174717238994E-5	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999999024081507	WITHOUT_CLASSIFICATION	9.75918491933033E-8	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999935736815448	WITHOUT_CLASSIFICATION	6.426318455090595E-6	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.999999935400089	WITHOUT_CLASSIFICATION	6.459991104828954E-8	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999999851087948	WITHOUT_CLASSIFICATION	1.4891205184076522E-8	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999995956382272	WITHOUT_CLASSIFICATION	4.043617728872066E-7	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999986350800535	WITHOUT_CLASSIFICATION	1.3649199464659196E-6	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9999971319109918	WITHOUT_CLASSIFICATION	2.8680890081350137E-6	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999959903744464	WITHOUT_CLASSIFICATION	4.009625553578868E-6	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.999999084516388	WITHOUT_CLASSIFICATION	9.154836120084511E-7	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999998516108886	WITHOUT_CLASSIFICATION	1.4838911139240437E-7	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9999998599495682	WITHOUT_CLASSIFICATION	1.4005043182458836E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999968345041623	WITHOUT_CLASSIFICATION	3.1654958375688144E-6	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999999959473106	WITHOUT_CLASSIFICATION	4.052689403658676E-9	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999989834367591	WITHOUT_CLASSIFICATION	1.016563240953444E-6	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9999502628691018	WITHOUT_CLASSIFICATION	4.973713089810244E-5	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.999820486635031	WITHOUT_CLASSIFICATION	1.795133649691133E-4	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.999999783634697	WITHOUT_CLASSIFICATION	2.1636530294564482E-7	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999958758640396	WITHOUT_CLASSIFICATION	4.124135960332633E-6	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999873379573959	WITHOUT_CLASSIFICATION	1.2662042604043364E-5	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999873379573959	WITHOUT_CLASSIFICATION	1.2662042604043364E-5	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999989834367591	WITHOUT_CLASSIFICATION	1.016563240953444E-6	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999998041526703	WITHOUT_CLASSIFICATION	1.9584732972136332E-7	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999999926019005	WITHOUT_CLASSIFICATION	7.398099523078628E-9	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9999976686274975	WITHOUT_CLASSIFICATION	2.3313725024419727E-6	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999967623704878	WITHOUT_CLASSIFICATION	3.2376295121830913E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999933767978997	WITHOUT_CLASSIFICATION	6.623202100268419E-6	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999972240172472	WITHOUT_CLASSIFICATION	2.775982752659901E-6	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999954743753753	WITHOUT_CLASSIFICATION	4.52562462475545E-6	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999997775823338	WITHOUT_CLASSIFICATION	2.2241766614835732E-7	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999991013910438	WITHOUT_CLASSIFICATION	8.986089563005106E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.999998199433001	WITHOUT_CLASSIFICATION	1.8005669991240624E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999992217549875	WITHOUT_CLASSIFICATION	7.78245012515362E-7	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999970236433784	WITHOUT_CLASSIFICATION	2.9763566216398755E-6	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999849350905138	WITHOUT_CLASSIFICATION	1.5064909486087531E-5	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999999611340064	WITHOUT_CLASSIFICATION	3.886599362793282E-8	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999875189238	WITHOUT_CLASSIFICATION	1.2481076198132203E-7	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9999995514789113	WITHOUT_CLASSIFICATION	4.485210888041004E-7	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999999537746898	WITHOUT_CLASSIFICATION	4.6225310155979216E-8	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9998346497955454	WITHOUT_CLASSIFICATION	1.653502044546761E-4	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998206184121	WITHOUT_CLASSIFICATION	1.7938158795400775E-7	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999999165514888	WITHOUT_CLASSIFICATION	8.344851112504351E-8	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9999985555937543	WITHOUT_CLASSIFICATION	1.4444062457194562E-6	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.999998660983789	WITHOUT_CLASSIFICATION	1.3390162109747701E-6	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993951187279	WITHOUT_CLASSIFICATION	6.048812720920932E-7	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983686359503	WITHOUT_CLASSIFICATION	1.6313640497446545E-6	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971877437451	WITHOUT_CLASSIFICATION	2.8122562548765928E-6	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999973071350692	WITHOUT_CLASSIFICATION	2.69286493070554E-6	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957797961103	WITHOUT_CLASSIFICATION	4.220203889613296E-6	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999961692534675	WITHOUT_CLASSIFICATION	3.830746532599007E-6	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999944769324945	WITHOUT_CLASSIFICATION	5.523067505479702E-6	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996914426063	WITHOUT_CLASSIFICATION	3.085573937549478E-7	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9999977322090193	WITHOUT_CLASSIFICATION	2.267790980577126E-6	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9999973221360858	WITHOUT_CLASSIFICATION	2.6778639140923664E-6	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997387901289	WITHOUT_CLASSIFICATION	2.6120987107809697E-7	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998631695569	WITHOUT_CLASSIFICATION	1.36830443064428E-7	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997924634683	WITHOUT_CLASSIFICATION	2.075365316822213E-7	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972443354226	WITHOUT_CLASSIFICATION	2.7556645773175385E-6	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999995745132025	WITHOUT_CLASSIFICATION	4.25486797497948E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995692159168	WITHOUT_CLASSIFICATION	4.307840831969591E-7	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987456207278	WITHOUT_CLASSIFICATION	1.2543792722530039E-6	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952949109552	WITHOUT_CLASSIFICATION	4.7050890448479585E-6	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.999997871227132	WITHOUT_CLASSIFICATION	2.128772867882329E-6	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999915026932538	WITHOUT_CLASSIFICATION	8.497306746263449E-6	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9999999282121719	WITHOUT_CLASSIFICATION	7.178782819161905E-8	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.999996850479586	WITHOUT_CLASSIFICATION	3.149520413904908E-6	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999943464835409	WITHOUT_CLASSIFICATION	5.653516459126607E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999998695274322	WITHOUT_CLASSIFICATION	1.3047256780946125E-6	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9999802265140901	WITHOUT_CLASSIFICATION	1.9773485909846077E-5	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.999996635125577	WITHOUT_CLASSIFICATION	3.364874423061717E-6	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9999969634043452	WITHOUT_CLASSIFICATION	3.0365956547549604E-6	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999939947266449	WITHOUT_CLASSIFICATION	6.00527335524838E-6	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999903834582973	WITHOUT_CLASSIFICATION	9.616541702761153E-6	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999894437157281	WITHOUT_CLASSIFICATION	1.0556284271871273E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999921799278639	WITHOUT_CLASSIFICATION	7.820072135998954E-6	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999896947044951	WITHOUT_CLASSIFICATION	1.0305295504994954E-5	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999999482211872	WITHOUT_CLASSIFICATION	5.1778812663827804E-8	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999997506608056	WITHOUT_CLASSIFICATION	2.4933919447354475E-7	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9999968407323044	WITHOUT_CLASSIFICATION	3.159267695582675E-6	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999906668647809	WITHOUT_CLASSIFICATION	9.333135219057688E-6	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999997121697487	WITHOUT_CLASSIFICATION	2.8783025132842545E-7	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999949021201272	WITHOUT_CLASSIFICATION	5.097879872762703E-6	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999923405151118	WITHOUT_CLASSIFICATION	7.659484888351704E-6	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999304705985896	WITHOUT_CLASSIFICATION	6.952940141040912E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999923452865555	WITHOUT_CLASSIFICATION	7.654713444574914E-6	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999996086266913	WITHOUT_CLASSIFICATION	3.913733086620624E-7	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999997944702409	WITHOUT_CLASSIFICATION	2.055297589771159E-7	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9999997297055068	WITHOUT_CLASSIFICATION	2.702944932382938E-7	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999995221560883	WITHOUT_CLASSIFICATION	4.778439117460271E-7	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998059793789	WITHOUT_CLASSIFICATION	1.940206211427604E-7	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999995685342652	WITHOUT_CLASSIFICATION	4.3146573485481027E-7	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9999979647746204	WITHOUT_CLASSIFICATION	2.0352253795860992E-6	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999993865785861	WITHOUT_CLASSIFICATION	6.134214138943064E-7	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999989637746647	WITHOUT_CLASSIFICATION	1.0362253353238146E-6	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999975730071072	WITHOUT_CLASSIFICATION	2.4269928927662174E-6	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.999999986464149	WITHOUT_CLASSIFICATION	1.3535851060496142E-8	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999919145073237	WITHOUT_CLASSIFICATION	8.085492676266752E-6	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.999988575087397	WITHOUT_CLASSIFICATION	1.1424912602981675E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999998695274322	WITHOUT_CLASSIFICATION	1.3047256780946125E-6	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999999619736051	WITHOUT_CLASSIFICATION	3.802639487608905E-8	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999998810636537	WITHOUT_CLASSIFICATION	1.189363463222632E-7	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.999999796849429	WITHOUT_CLASSIFICATION	2.031505709397792E-7	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999970698255943	WITHOUT_CLASSIFICATION	2.9301744057061105E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999999436119836	WITHOUT_CLASSIFICATION	5.638801644461153E-8	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999987542536399	WITHOUT_CLASSIFICATION	1.245746360112983E-6	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9999968052532578	WITHOUT_CLASSIFICATION	3.194746742252527E-6	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9999948900348737	WITHOUT_CLASSIFICATION	5.109965126260313E-6	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999975105301898	WITHOUT_CLASSIFICATION	2.4894698100616945E-6	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999999462399503	WITHOUT_CLASSIFICATION	5.376004970400034E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999999040178528	WITHOUT_CLASSIFICATION	9.598214718901762E-8	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999999375872786	WITHOUT_CLASSIFICATION	6.241272148253267E-8	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999997751110842	WITHOUT_CLASSIFICATION	2.2488891588475842E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999998733684161	WITHOUT_CLASSIFICATION	1.2663158381435284E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999995844786581	WITHOUT_CLASSIFICATION	4.155213418004633E-7	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999995764392265	WITHOUT_CLASSIFICATION	4.235607733589292E-7	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9999949100019109	WITHOUT_CLASSIFICATION	5.08999808916918E-6	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999936107828127	WITHOUT_CLASSIFICATION	6.389217187301975E-6	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999999478829202	WITHOUT_CLASSIFICATION	5.2117079732726385E-8	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999978188264692	WITHOUT_CLASSIFICATION	2.1811735307169705E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999999147559299	WITHOUT_CLASSIFICATION	8.52440701020422E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9999983043119574	WITHOUT_CLASSIFICATION	1.6956880425880702E-6	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999936655596691	WITHOUT_CLASSIFICATION	6.334440330908094E-6	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999794883510845	WITHOUT_CLASSIFICATION	2.0511648915534047E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9999996808113601	WITHOUT_CLASSIFICATION	3.191886398898851E-7	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999966121306095	WITHOUT_CLASSIFICATION	3.387869390491434E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9996445841617092	WITHOUT_CLASSIFICATION	3.5541583829073E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999705257220142	WITHOUT_CLASSIFICATION	2.9474277985763514E-5	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9999708989259483	WITHOUT_CLASSIFICATION	2.9101074051669197E-5	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999976986094654	WITHOUT_CLASSIFICATION	2.301390534625869E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999998695274322	WITHOUT_CLASSIFICATION	1.3047256780946125E-6	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.999999809192747	WITHOUT_CLASSIFICATION	1.9080725299271272E-7	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999999786031903	WITHOUT_CLASSIFICATION	2.1396809620930202E-8	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999958018831331	WITHOUT_CLASSIFICATION	4.19811686690348E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999998695274322	WITHOUT_CLASSIFICATION	1.3047256780946125E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999896509699501	WITHOUT_CLASSIFICATION	1.0349030050003098E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999999147559299	WITHOUT_CLASSIFICATION	8.52440701020422E-8	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9999983475749099	WITHOUT_CLASSIFICATION	1.6524250900902848E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.999999549595408	WITHOUT_CLASSIFICATION	4.5040459195536977E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999999924948074	WITHOUT_CLASSIFICATION	7.505192516406906E-9	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999999462399503	WITHOUT_CLASSIFICATION	5.376004970400034E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999999040178528	WITHOUT_CLASSIFICATION	9.598214718901762E-8	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999999375872786	WITHOUT_CLASSIFICATION	6.241272148253267E-8	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999997225823104	WITHOUT_CLASSIFICATION	2.7741768954791013E-7	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.999995238728655	WITHOUT_CLASSIFICATION	4.761271344963097E-6	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999823879754172	WITHOUT_CLASSIFICATION	1.7612024582831847E-5	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999989764097431	WITHOUT_CLASSIFICATION	1.0235902568473398E-6	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999999982688806	WITHOUT_CLASSIFICATION	1.7311192973114183E-9	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999998695274322	WITHOUT_CLASSIFICATION	1.3047256780946125E-6	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999997751110842	WITHOUT_CLASSIFICATION	2.2488891588475842E-7	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999998733684161	WITHOUT_CLASSIFICATION	1.2663158381435284E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997114087405	WITHOUT_CLASSIFICATION	2.8859125949251005E-6	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998673703729	WITHOUT_CLASSIFICATION	1.3262962710072686E-6	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999997474830521	WITHOUT_CLASSIFICATION	2.525169479373195E-7	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999981661061124	WITHOUT_CLASSIFICATION	1.8338938876230104E-6	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.99999928398175	WITHOUT_CLASSIFICATION	7.160182500508084E-7	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999999981801836	WITHOUT_CLASSIFICATION	1.819816458586888E-9	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952949109552	WITHOUT_CLASSIFICATION	4.7050890448479585E-6	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999997770295672	WITHOUT_CLASSIFICATION	2.2297043274774859E-7	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999995144184624	WITHOUT_CLASSIFICATION	4.855815376456299E-7	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999994896007804	WITHOUT_CLASSIFICATION	5.103992195696057E-7	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999991994691796	WITHOUT_CLASSIFICATION	8.005308204498977E-7	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999997746165239	WITHOUT_CLASSIFICATION	2.2538347618610177E-7	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957797961103	WITHOUT_CLASSIFICATION	4.220203889613296E-6	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999961692534675	WITHOUT_CLASSIFICATION	3.830746532599007E-6	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998631695569	WITHOUT_CLASSIFICATION	1.36830443064428E-7	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999997746165239	WITHOUT_CLASSIFICATION	2.2538347618610177E-7	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.99999610307516	WITHOUT_CLASSIFICATION	3.896924839967731E-6	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999979938094985	WITHOUT_CLASSIFICATION	2.0061905014603634E-6	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972122977966	WITHOUT_CLASSIFICATION	2.7877022033912624E-6	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996835653923	WITHOUT_CLASSIFICATION	3.164346076922649E-6	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999999661501663	WITHOUT_CLASSIFICATION	3.384983373991012E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.999845536258824	WITHOUT_CLASSIFICATION	1.5446374117598623E-4	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997924634683	WITHOUT_CLASSIFICATION	2.075365316822213E-7	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995692159168	WITHOUT_CLASSIFICATION	4.307840831969591E-7	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999989637746647	WITHOUT_CLASSIFICATION	1.0362253353238146E-6	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999993578363929	WITHOUT_CLASSIFICATION	6.421636071222481E-7	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999999710170746	WITHOUT_CLASSIFICATION	2.8982925515155537E-8	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999982316791086	WITHOUT_CLASSIFICATION	1.7683208913891118E-6	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999975546382622	WITHOUT_CLASSIFICATION	2.4453617377774013E-6	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999991984446452	WITHOUT_CLASSIFICATION	8.015553548359869E-7	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999997505165708	WITHOUT_CLASSIFICATION	2.49483429319599E-7	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.999992757203717	WITHOUT_CLASSIFICATION	7.24279628292945E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998550751436128	WITHOUT_CLASSIFICATION	1.4492485638716525E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999991013910438	WITHOUT_CLASSIFICATION	8.986089563005106E-7	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999962694771988	WITHOUT_CLASSIFICATION	3.7305228011841015E-6	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999999888212198	WITHOUT_CLASSIFICATION	1.1178780186646633E-8	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999999565671087	WITHOUT_CLASSIFICATION	4.3432891315972715E-8	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999991035691255	WITHOUT_CLASSIFICATION	8.964308744545617E-7	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999999275160117	WITHOUT_CLASSIFICATION	7.248398833082494E-8	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999919829880266	WITHOUT_CLASSIFICATION	8.017011973340467E-6	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999881702790957	WITHOUT_CLASSIFICATION	1.1829720904273492E-5	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999968912947822	WITHOUT_CLASSIFICATION	3.1087052177720512E-6	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999995767105909	WITHOUT_CLASSIFICATION	4.2328940917952276E-7	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999999625333443	WITHOUT_CLASSIFICATION	3.7466655736828495E-8	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9995284686496206	WITHOUT_CLASSIFICATION	4.7153135037939474E-4	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999984885713139	WITHOUT_CLASSIFICATION	1.5114286861782146E-6	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999996848634127	WITHOUT_CLASSIFICATION	3.1513658724665616E-7	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999991616051861	WITHOUT_CLASSIFICATION	8.383948138031975E-7	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999995207202029	WITHOUT_CLASSIFICATION	4.79279797009326E-7	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.999999962363689	WITHOUT_CLASSIFICATION	3.763631082977533E-8	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.999995241733769	WITHOUT_CLASSIFICATION	4.758266231099707E-6	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999999866620343	WITHOUT_CLASSIFICATION	1.333796569632516E-7	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999945280089847	WITHOUT_CLASSIFICATION	5.471991015286531E-6	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999995670437373	WITHOUT_CLASSIFICATION	4.329562627630647E-7	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998616634334	WITHOUT_CLASSIFICATION	1.3833656665956366E-7	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999997977477042	WITHOUT_CLASSIFICATION	2.0225229576095737E-7	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999999191356576	WITHOUT_CLASSIFICATION	8.08643424252E-8	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999887212730036	WITHOUT_CLASSIFICATION	1.1278726996295076E-5	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9999986949111835	WITHOUT_CLASSIFICATION	1.3050888163995671E-6	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999963262129998	WITHOUT_CLASSIFICATION	3.6737870001560897E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999951670736781	WITHOUT_CLASSIFICATION	4.832926322016265E-6	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999998322686938	WITHOUT_CLASSIFICATION	1.677313062051416E-7	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999998308107689	WITHOUT_CLASSIFICATION	1.6918923112413346E-7	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999957768057773	WITHOUT_CLASSIFICATION	4.22319422263863E-6	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999995173696091	WITHOUT_CLASSIFICATION	4.826303908810809E-7	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999999650306887	WITHOUT_CLASSIFICATION	3.496931138248955E-8	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999950415003753	WITHOUT_CLASSIFICATION	4.958499624632571E-6	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999940781939609	WITHOUT_CLASSIFICATION	5.9218060391481446E-6	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999997900306419	WITHOUT_CLASSIFICATION	2.0996935808824929E-7	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999981168331541	WITHOUT_CLASSIFICATION	1.8831668458311131E-6	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999998527525774	WITHOUT_CLASSIFICATION	1.472474225590084E-7	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999975169723565	WITHOUT_CLASSIFICATION	2.4830276434883367E-6	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999761691941201	WITHOUT_CLASSIFICATION	2.3830805879877567E-5	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.999999847650053	WITHOUT_CLASSIFICATION	1.5234994705810061E-7	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9999998006909412	WITHOUT_CLASSIFICATION	1.993090587537126E-7	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.999980625584561	WITHOUT_CLASSIFICATION	1.937441543894972E-5	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9999955315761923	WITHOUT_CLASSIFICATION	4.4684238077468035E-6	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999983725969909	WITHOUT_CLASSIFICATION	1.6274030091362722E-6	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.999996902371596	WITHOUT_CLASSIFICATION	3.0976284039874016E-6	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999993237906818	WITHOUT_CLASSIFICATION	6.762093181739889E-7	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999992750164892	WITHOUT_CLASSIFICATION	7.249835107447709E-7	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999996569317777	WITHOUT_CLASSIFICATION	3.430682222463714E-7	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.999996501506921	WITHOUT_CLASSIFICATION	3.4984930789236354E-6	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999999544128814	WITHOUT_CLASSIFICATION	4.5587118729744025E-8	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999998895205928	WITHOUT_CLASSIFICATION	1.1047940710542234E-7	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999998098850905	WITHOUT_CLASSIFICATION	1.901149094739831E-7	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.99999856873545	WITHOUT_CLASSIFICATION	1.4312645500267022E-6	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999998967459007	WITHOUT_CLASSIFICATION	1.03254099325699E-7	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999998908237331	WITHOUT_CLASSIFICATION	1.0917626684653875E-7	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.999998545020814	WITHOUT_CLASSIFICATION	1.4549791859959265E-6	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999967504457176	WITHOUT_CLASSIFICATION	3.249554282513751E-6	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999984519393627	WITHOUT_CLASSIFICATION	1.5480606373520617E-6	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999910246905931	WITHOUT_CLASSIFICATION	8.975309406960862E-6	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999946318410676	WITHOUT_CLASSIFICATION	5.368158932273439E-6	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.9999955318813524	WITHOUT_CLASSIFICATION	4.468118647675446E-6	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999956378148116	WITHOUT_CLASSIFICATION	4.362185188470144E-6	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999974630433656	WITHOUT_CLASSIFICATION	2.536956634534594E-6	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999993682388362	WITHOUT_CLASSIFICATION	6.317611638641881E-7	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9999978720048597	WITHOUT_CLASSIFICATION	2.1279951403017563E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999983618411984	WITHOUT_CLASSIFICATION	1.6381588015671506E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999974074137544	WITHOUT_CLASSIFICATION	2.592586245638135E-6	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999997044082108	WITHOUT_CLASSIFICATION	2.95591789089798E-7	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9999842492911815	WITHOUT_CLASSIFICATION	1.5750708818566227E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9999882712776578	WITHOUT_CLASSIFICATION	1.172872234232929E-5	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999990752481395	WITHOUT_CLASSIFICATION	9.247518606293332E-7	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999783636849099	WITHOUT_CLASSIFICATION	2.163631509011004E-5	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999919576139823	WITHOUT_CLASSIFICATION	8.042386017775128E-6	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999990400243737	WITHOUT_CLASSIFICATION	9.599756262465514E-7	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999994348370513	WITHOUT_CLASSIFICATION	5.651629486912394E-7	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9999837236971049	WITHOUT_CLASSIFICATION	1.627630289515184E-5	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999995517527923	WITHOUT_CLASSIFICATION	4.4824720764785615E-7	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999858959078073	WITHOUT_CLASSIFICATION	1.4104092192734196E-5	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999973151534536	WITHOUT_CLASSIFICATION	2.684846546543107E-6	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999964073531793	WITHOUT_CLASSIFICATION	3.592646820787721E-6	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.999971146243753	WITHOUT_CLASSIFICATION	2.8853756246958993E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999952502624974	WITHOUT_CLASSIFICATION	4.749737502559718E-6	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999985070803206	WITHOUT_CLASSIFICATION	1.492919679414281E-6	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999823880615732	WITHOUT_CLASSIFICATION	1.7611938426730734E-5	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999760212615462	WITHOUT_CLASSIFICATION	2.397873845383064E-5	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.999988737943246	WITHOUT_CLASSIFICATION	1.1262056754032173E-5	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999904701687076	WITHOUT_CLASSIFICATION	9.529831292387359E-6	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9999822173444761	WITHOUT_CLASSIFICATION	1.778265552389811E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999965300159415	WITHOUT_CLASSIFICATION	3.4699840584233926E-6	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.999999984151165	WITHOUT_CLASSIFICATION	1.5848834984122075E-8	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999928166522378	WITHOUT_CLASSIFICATION	7.183347762178548E-6	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.999993261496674	WITHOUT_CLASSIFICATION	6.738503325879471E-6	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999975739592142	WITHOUT_CLASSIFICATION	2.426040785878992E-6	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999928166522378	WITHOUT_CLASSIFICATION	7.183347762178548E-6	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999999865457079	WITHOUT_CLASSIFICATION	1.3454292058711695E-8	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.999999780880744	WITHOUT_CLASSIFICATION	2.1911925596234056E-7	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999874364587026	WITHOUT_CLASSIFICATION	1.2563541297497508E-5	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.999993110656356	WITHOUT_CLASSIFICATION	6.889343644045697E-6	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.9999989196299851	WITHOUT_CLASSIFICATION	1.0803700148808096E-6	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999998879427041	WITHOUT_CLASSIFICATION	1.1205729586739958E-7	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9999299311482336	WITHOUT_CLASSIFICATION	7.006885176636814E-5	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999997276482595	WITHOUT_CLASSIFICATION	2.7235174042924145E-7	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999999357012365	WITHOUT_CLASSIFICATION	6.429876350821727E-8	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999803647772646	WITHOUT_CLASSIFICATION	1.9635222735476185E-5	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999990130610087	WITHOUT_CLASSIFICATION	9.86938991286829E-7	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999999696205013	WITHOUT_CLASSIFICATION	3.037949867616739E-8	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999989937987631	WITHOUT_CLASSIFICATION	1.0062012369076896E-6	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999999355382843	WITHOUT_CLASSIFICATION	6.446171572833879E-8	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999942405992	WITHOUT_CLASSIFICATION	5.759400761249015E-9	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9999993635704344	WITHOUT_CLASSIFICATION	6.364295656834709E-7	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999866632788108	WITHOUT_CLASSIFICATION	1.3336721189273932E-5	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999866632788108	WITHOUT_CLASSIFICATION	1.3336721189273932E-5	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999902599973	WITHOUT_CLASSIFICATION	9.740002613339145E-9	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9997930970032535	WITHOUT_CLASSIFICATION	2.0690299674657047E-4	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9998859939804643	WITHOUT_CLASSIFICATION	1.140060195357425E-4	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.9999772037053892	WITHOUT_CLASSIFICATION	2.279629461086372E-5	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.999995055088628	WITHOUT_CLASSIFICATION	4.944911371997982E-6	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9999409773486392	WITHOUT_CLASSIFICATION	5.9022651360824034E-5	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999617471410497	WITHOUT_CLASSIFICATION	3.8252858950381225E-5	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999996489839698	WITHOUT_CLASSIFICATION	3.510160302449633E-7	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999996497529758	WITHOUT_CLASSIFICATION	3.502470242615623E-7	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999991044122596	WITHOUT_CLASSIFICATION	8.955877403389612E-7	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9999989209513854	WITHOUT_CLASSIFICATION	1.0790486145723625E-6	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999942881452865	WITHOUT_CLASSIFICATION	5.71185471352891E-6	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9999934187429133	WITHOUT_CLASSIFICATION	6.581257086702667E-6	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9999995764146515	WITHOUT_CLASSIFICATION	4.2358534835693043E-7	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999989247558788	WITHOUT_CLASSIFICATION	1.0752441211863792E-6	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999919829880266	WITHOUT_CLASSIFICATION	8.017011973340467E-6	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999995639647329	WITHOUT_CLASSIFICATION	4.360352670624756E-7	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999964832270389	WITHOUT_CLASSIFICATION	3.5167729609859295E-6	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9999561114068884	WITHOUT_CLASSIFICATION	4.388859311162264E-5	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9999521010582119	WITHOUT_CLASSIFICATION	4.789894178826035E-5	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.999999468616453	WITHOUT_CLASSIFICATION	5.313835469569137E-7	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999921055063536	WITHOUT_CLASSIFICATION	7.89449364641514E-6	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999988392347324	WITHOUT_CLASSIFICATION	1.160765267657736E-6	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999973854092733	WITHOUT_CLASSIFICATION	2.6145907267467294E-6	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999997951510026	WITHOUT_CLASSIFICATION	2.0484899754022835E-7	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999998487476149	WITHOUT_CLASSIFICATION	1.512523849943876E-7	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999999026539854	WITHOUT_CLASSIFICATION	9.734601460622705E-8	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999998866072243	WITHOUT_CLASSIFICATION	1.1339277575893685E-7	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999998873326179	WITHOUT_CLASSIFICATION	1.1266738205806764E-7	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999870169595874	WITHOUT_CLASSIFICATION	1.2983040412608692E-5	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999832431768226	WITHOUT_CLASSIFICATION	1.6756823177344943E-5	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999974409982113	WITHOUT_CLASSIFICATION	2.559001788595366E-6	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9999141456747787	WITHOUT_CLASSIFICATION	8.58543252214242E-5	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999938967424552	WITHOUT_CLASSIFICATION	6.1032575448136546E-6	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999736755266532	WITHOUT_CLASSIFICATION	2.6324473346817767E-5	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999964690040269	WITHOUT_CLASSIFICATION	3.5309959730454025E-6	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.999987785576925	WITHOUT_CLASSIFICATION	1.22144230748822E-5	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.999989232658421	WITHOUT_CLASSIFICATION	1.076734157896263E-5	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999994671638947	WITHOUT_CLASSIFICATION	5.328361053470719E-7	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999989237698658	WITHOUT_CLASSIFICATION	1.0762301342985118E-6	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.999997998161344	WITHOUT_CLASSIFICATION	2.001838656071513E-6	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.999993620972659	WITHOUT_CLASSIFICATION	6.379027340930207E-6	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999978386160396	WITHOUT_CLASSIFICATION	2.161383960398607E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.999999744812573	WITHOUT_CLASSIFICATION	2.55187426999778E-7	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999980700028787	WITHOUT_CLASSIFICATION	1.9299971214037473E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999999690901452	WITHOUT_CLASSIFICATION	3.090985470447189E-8	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972412692524	WITHOUT_CLASSIFICATION	2.758730747646668E-6	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996807256082	WITHOUT_CLASSIFICATION	3.192743918341369E-7	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988619694686	WITHOUT_CLASSIFICATION	1.1380305313717853E-6	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999999998494447	WITHOUT_CLASSIFICATION	1.5055535910554872E-10	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999977620428916	WITHOUT_CLASSIFICATION	2.2379571084151824E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998550751436128	WITHOUT_CLASSIFICATION	1.4492485638716525E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998550751436128	WITHOUT_CLASSIFICATION	1.4492485638716525E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999964150627442	WITHOUT_CLASSIFICATION	3.5849372557923196E-6	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.999999995477848	WITHOUT_CLASSIFICATION	4.52215201220696E-9	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999990896737501	WITHOUT_CLASSIFICATION	9.103262500053862E-7	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999945951486792	WITHOUT_CLASSIFICATION	5.4048513207275566E-6	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999990896737501	WITHOUT_CLASSIFICATION	9.103262500053862E-7	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999997990800832	WITHOUT_CLASSIFICATION	2.0091991689530963E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999994841380953	WITHOUT_CLASSIFICATION	5.158619047658963E-7	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9999996869174729	WITHOUT_CLASSIFICATION	3.130825272037739E-7	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999999362693414	WITHOUT_CLASSIFICATION	6.37306586826327E-8	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999971260995595	WITHOUT_CLASSIFICATION	2.8739004405461148E-6	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.999996862862839	WITHOUT_CLASSIFICATION	3.1371371610374503E-6	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999997921491917	WITHOUT_CLASSIFICATION	2.0785080826144915E-7	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.999998182278034	WITHOUT_CLASSIFICATION	1.8177219659433147E-6	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999997468980313	WITHOUT_CLASSIFICATION	2.531019686976312E-7	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9999922567159119	WITHOUT_CLASSIFICATION	7.743284088139015E-6	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999977454191048	WITHOUT_CLASSIFICATION	2.2545808951610297E-6	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9999999348934802	WITHOUT_CLASSIFICATION	6.510651983620733E-8	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999912954993315	WITHOUT_CLASSIFICATION	8.704500668530834E-6	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9999999774303093	WITHOUT_CLASSIFICATION	2.2569690730339038E-8	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.9999878206662556	WITHOUT_CLASSIFICATION	1.2179333744391804E-5	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.999999661663689	WITHOUT_CLASSIFICATION	3.383363109674484E-7	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.999962180337224	WITHOUT_CLASSIFICATION	3.781966277604121E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.999962180337224	WITHOUT_CLASSIFICATION	3.781966277604121E-5	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999868450312906	WITHOUT_CLASSIFICATION	1.3154968709315735E-5	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999999281368227	WITHOUT_CLASSIFICATION	7.18631773032618E-8	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999999740534139	WITHOUT_CLASSIFICATION	2.5946586114212557E-8	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999999704929802	WITHOUT_CLASSIFICATION	2.9507019803101974E-8	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999999720902362	WITHOUT_CLASSIFICATION	2.790976384515141E-8	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999999125526046	WITHOUT_CLASSIFICATION	8.744739533484915E-8	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999999306090009	WITHOUT_CLASSIFICATION	6.93909990541384E-8	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999974103849533	WITHOUT_CLASSIFICATION	2.5896150467848073E-6	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999994992978868	WITHOUT_CLASSIFICATION	5.007021132313123E-7	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999981119759898	WITHOUT_CLASSIFICATION	1.888024010214292E-6	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999991968397457	WITHOUT_CLASSIFICATION	8.031602543174721E-7	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999989238562631	WITHOUT_CLASSIFICATION	1.0761437368761686E-6	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999999756833737	WITHOUT_CLASSIFICATION	2.4316626251593546E-8	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999998626765239	WITHOUT_CLASSIFICATION	1.3732347615271144E-7	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999956816978083	WITHOUT_CLASSIFICATION	4.318302191783693E-6	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999998903832936	WITHOUT_CLASSIFICATION	1.0961670636646899E-7	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999980353156401	WITHOUT_CLASSIFICATION	1.964684359954242E-6	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9999870540504922	WITHOUT_CLASSIFICATION	1.2945949507794448E-5	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.9999909605281931	WITHOUT_CLASSIFICATION	9.039471806832158E-6	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999999674056032	WITHOUT_CLASSIFICATION	3.259439684969331E-8	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999996449695927	WITHOUT_CLASSIFICATION	3.550304073123552E-7	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999996536708023	WITHOUT_CLASSIFICATION	3.46329197623775E-7	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999999583368855	WITHOUT_CLASSIFICATION	4.1663114402405796E-8	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999998305681086	WITHOUT_CLASSIFICATION	1.6943189135803038E-7	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9999876527577258	WITHOUT_CLASSIFICATION	1.2347242274250346E-5	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999994716702838	WITHOUT_CLASSIFICATION	5.283297162510677E-7	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999982474886214	WITHOUT_CLASSIFICATION	1.7525113786775456E-6	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9999976759621337	WITHOUT_CLASSIFICATION	2.324037866340642E-6	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999873777654761	WITHOUT_CLASSIFICATION	1.2622234523941824E-5	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999971803895389	WITHOUT_CLASSIFICATION	2.8196104610868452E-6	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999194818550324	WITHOUT_CLASSIFICATION	8.051814496747614E-5	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.99999795388282	WITHOUT_CLASSIFICATION	2.0461171799607763E-6	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999969137202654	WITHOUT_CLASSIFICATION	3.0862797346308748E-6	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999861348391889	WITHOUT_CLASSIFICATION	1.3865160811175682E-5	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999922905368046	WITHOUT_CLASSIFICATION	7.70946319537609E-6	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999995681936645	WITHOUT_CLASSIFICATION	4.3180633552491965E-7	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999993283080538	WITHOUT_CLASSIFICATION	6.716919461958536E-7	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999963243622813	WITHOUT_CLASSIFICATION	3.6756377188590725E-6	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999982827518908	WITHOUT_CLASSIFICATION	1.7172481091757572E-6	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999993134811754	WITHOUT_CLASSIFICATION	6.865188245467905E-7	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999996086723301	WITHOUT_CLASSIFICATION	3.9132766995232905E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999965812700099	WITHOUT_CLASSIFICATION	3.418729990045862E-6	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.999976718877925	WITHOUT_CLASSIFICATION	2.3281122074954057E-5	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9999965492418468	WITHOUT_CLASSIFICATION	3.4507581531760844E-6	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999999753306786	WITHOUT_CLASSIFICATION	2.466932138220088E-8	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999999932615518	WITHOUT_CLASSIFICATION	6.738448303440958E-9	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.999955443436143	WITHOUT_CLASSIFICATION	4.455656385696819E-5	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.999999910245677	WITHOUT_CLASSIFICATION	8.975432291527626E-8	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999996860266022	WITHOUT_CLASSIFICATION	3.1397339782028496E-7	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999988113902667	WITHOUT_CLASSIFICATION	1.1886097332761408E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999930588210381	WITHOUT_CLASSIFICATION	6.941178961973455E-6	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999996640116302	WITHOUT_CLASSIFICATION	3.3598836985032917E-7	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999999918111955	WITHOUT_CLASSIFICATION	8.188804531473491E-9	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999990270189355	WITHOUT_CLASSIFICATION	9.729810644956629E-7	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999924142777109	WITHOUT_CLASSIFICATION	7.585722289078672E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999896509699501	WITHOUT_CLASSIFICATION	1.0349030050003098E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999896509699501	WITHOUT_CLASSIFICATION	1.0349030050003098E-5	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999990512511775	WITHOUT_CLASSIFICATION	9.487488225961983E-7	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999843186026967	WITHOUT_CLASSIFICATION	1.5681397303341062E-5	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999917120712052	WITHOUT_CLASSIFICATION	8.287928794754008E-6	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999988010268984	WITHOUT_CLASSIFICATION	1.1989731014865593E-6	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999998819738881	WITHOUT_CLASSIFICATION	1.1802611187659267E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999999113178066	WITHOUT_CLASSIFICATION	8.868219333617504E-8	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999994012707673	WITHOUT_CLASSIFICATION	5.987292327234845E-7	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999999058387499	WITHOUT_CLASSIFICATION	9.41612501508261E-8	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.999987563963598	WITHOUT_CLASSIFICATION	1.2436036401944783E-5	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999989998830273	WITHOUT_CLASSIFICATION	1.0001169727201856E-6	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999871469883358	WITHOUT_CLASSIFICATION	1.285301166428323E-5	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9999812594432297	WITHOUT_CLASSIFICATION	1.874055677024453E-5	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9999491870981554	WITHOUT_CLASSIFICATION	5.081290184455825E-5	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999972481274038	WITHOUT_CLASSIFICATION	2.751872596183122E-6	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.999999797831634	WITHOUT_CLASSIFICATION	2.0216836592280747E-7	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999998555776558	WITHOUT_CLASSIFICATION	1.4442234425828433E-7	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999999774951882	WITHOUT_CLASSIFICATION	2.250481177445855E-8	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.9999658113420989	WITHOUT_CLASSIFICATION	3.418865790105544E-5	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999863011440396	WITHOUT_CLASSIFICATION	1.3698855960325243E-5	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999977685437823	WITHOUT_CLASSIFICATION	2.2314562177268826E-6	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999998912648418	WITHOUT_CLASSIFICATION	1.0873515825993126E-7	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999977511496861	WITHOUT_CLASSIFICATION	2.2488503138542944E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999205196798456	WITHOUT_CLASSIFICATION	7.948032015439767E-5	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999998088706152	WITHOUT_CLASSIFICATION	1.911293847317913E-7	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9999998970138155	WITHOUT_CLASSIFICATION	1.0298618448227994E-7	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999999633750466	WITHOUT_CLASSIFICATION	3.662495342124558E-8	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9996556629046133	WITHOUT_CLASSIFICATION	3.443370953867659E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998987962007199	WITHOUT_CLASSIFICATION	1.0120379928014505E-4	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999995047173377	WITHOUT_CLASSIFICATION	4.952826623213813E-7	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999205196798456	WITHOUT_CLASSIFICATION	7.948032015439767E-5	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999995665868099	WITHOUT_CLASSIFICATION	4.33413190062557E-7	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.99999902689933	WITHOUT_CLASSIFICATION	9.731006700467015E-7	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9997721496474771	WITHOUT_CLASSIFICATION	2.2785035252290692E-4	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999914665779495	WITHOUT_CLASSIFICATION	8.533422050593641E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.99999976153707	WITHOUT_CLASSIFICATION	2.3846292993198724E-7	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999996584409541	WITHOUT_CLASSIFICATION	3.4155904597361183E-7	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999999827553865	WITHOUT_CLASSIFICATION	1.7244613445568985E-8	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999993067022965	WITHOUT_CLASSIFICATION	6.93297703445933E-7	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999988767217982	WITHOUT_CLASSIFICATION	1.1232782018225384E-6	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999914665779495	WITHOUT_CLASSIFICATION	8.533422050593641E-6	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999980336442181	WITHOUT_CLASSIFICATION	1.9663557818378993E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999990780336365	WITHOUT_CLASSIFICATION	9.219663634744418E-7	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999975465929465	WITHOUT_CLASSIFICATION	2.4534070534534686E-6	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999402615215793	WITHOUT_CLASSIFICATION	5.973847842073264E-5	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9999997550873249	WITHOUT_CLASSIFICATION	2.4491267520910597E-7	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999991968397457	WITHOUT_CLASSIFICATION	8.031602543174721E-7	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999995397745798	WITHOUT_CLASSIFICATION	4.6022542024641564E-7	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999995858705294	WITHOUT_CLASSIFICATION	4.1412947059525934E-7	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.99999044747667	WITHOUT_CLASSIFICATION	9.552523330054982E-6	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9999978788989006	WITHOUT_CLASSIFICATION	2.121101099339786E-6	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999654691803911	WITHOUT_CLASSIFICATION	3.453081960894928E-5	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999985013093328	WITHOUT_CLASSIFICATION	1.4986906672588353E-6	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999881960194855	WITHOUT_CLASSIFICATION	1.1803980514493424E-5	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999991844105136	WITHOUT_CLASSIFICATION	8.155894863528958E-7	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999929938310693	WITHOUT_CLASSIFICATION	7.006168930657711E-6	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999984979358385	WITHOUT_CLASSIFICATION	1.502064161514304E-6	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999420078826524	WITHOUT_CLASSIFICATION	5.799211734768471E-5	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999999420798266	WITHOUT_CLASSIFICATION	5.7920173413146174E-8	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999999870948557	WITHOUT_CLASSIFICATION	1.2905144242612954E-8	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999957109832797	WITHOUT_CLASSIFICATION	4.2890167203335705E-6	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999998143410967	WITHOUT_CLASSIFICATION	1.856589031842044E-7	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999992060347206	WITHOUT_CLASSIFICATION	7.939652794532455E-7	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999987898683976	WITHOUT_CLASSIFICATION	1.2101316023280145E-6	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999997815151977	WITHOUT_CLASSIFICATION	2.184848021406427E-7	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999997669717785	WITHOUT_CLASSIFICATION	2.330282214247206E-7	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9999881838276174	WITHOUT_CLASSIFICATION	1.1816172382501916E-5	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9999932935595126	WITHOUT_CLASSIFICATION	6.7064404874234155E-6	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999994866165275	WITHOUT_CLASSIFICATION	5.133834724785437E-7	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999994779246424	WITHOUT_CLASSIFICATION	5.220753576091749E-7	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999999379882099	WITHOUT_CLASSIFICATION	6.201179013564619E-8	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999926985462775	WITHOUT_CLASSIFICATION	7.301453722457679E-6	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9999814500201484	WITHOUT_CLASSIFICATION	1.854997985164719E-5	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.999999653076092	WITHOUT_CLASSIFICATION	3.4692390808402765E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996185746306	WITHOUT_CLASSIFICATION	3.8142536941712966E-7	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999932177572011	WITHOUT_CLASSIFICATION	6.7822427989364835E-6	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9999999981294996	WITHOUT_CLASSIFICATION	1.8705004420279735E-9	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999989925860261	WITHOUT_CLASSIFICATION	1.0074139739007972E-6	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999976927974839	WITHOUT_CLASSIFICATION	2.307202516127097E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993894200938	WITHOUT_CLASSIFICATION	6.105799062748339E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993894200938	WITHOUT_CLASSIFICATION	6.105799062748339E-7	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999978701256715	WITHOUT_CLASSIFICATION	2.129874328391878E-6	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999991518928646	WITHOUT_CLASSIFICATION	8.48107135392911E-7	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999981670335699	WITHOUT_CLASSIFICATION	1.8329664301664677E-6	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999999044209517	WITHOUT_CLASSIFICATION	9.557904833312235E-8	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999979457688258	WITHOUT_CLASSIFICATION	2.0542311741317517E-6	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999995408204018	WITHOUT_CLASSIFICATION	4.5917959827889506E-7	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999980832378494	WITHOUT_CLASSIFICATION	1.9167621506237823E-6	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999994095514666	WITHOUT_CLASSIFICATION	5.904485334440916E-7	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999990344745918	WITHOUT_CLASSIFICATION	9.65525408151326E-7	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999999613423551	WITHOUT_CLASSIFICATION	3.865764485075806E-8	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.999999435905183	WITHOUT_CLASSIFICATION	5.640948170335952E-7	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999999101193472	WITHOUT_CLASSIFICATION	8.988065276672114E-8	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999998531891255	WITHOUT_CLASSIFICATION	1.4681087448547145E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993894200938	WITHOUT_CLASSIFICATION	6.105799062748339E-7	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999946168709551	WITHOUT_CLASSIFICATION	5.383129044915787E-6	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999961606360916	WITHOUT_CLASSIFICATION	3.839363908390753E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999994772557458	WITHOUT_CLASSIFICATION	5.227442541681239E-7	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999986053427425	WITHOUT_CLASSIFICATION	1.3946572574823107E-6	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999998767698375	WITHOUT_CLASSIFICATION	1.232301625026606E-7	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9999932462132627	WITHOUT_CLASSIFICATION	6.753786737326435E-6	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999999091279561	WITHOUT_CLASSIFICATION	9.087204390445758E-8	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999998819309366	WITHOUT_CLASSIFICATION	1.1806906335181401E-7	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999999922443212	WITHOUT_CLASSIFICATION	7.75567877557888E-9	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999988185355102	WITHOUT_CLASSIFICATION	1.1814644898134384E-6	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999998119651454	WITHOUT_CLASSIFICATION	1.8803485457624607E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996185746306	WITHOUT_CLASSIFICATION	3.8142536941712966E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993894200938	WITHOUT_CLASSIFICATION	6.105799062748339E-7	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999972067494871	WITHOUT_CLASSIFICATION	2.7932505129929814E-6	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999996143181114	WITHOUT_CLASSIFICATION	3.856818886230293E-7	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999968644855065	WITHOUT_CLASSIFICATION	3.1355144935700644E-6	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999942858663153	WITHOUT_CLASSIFICATION	5.71413368466243E-6	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999995678991239	WITHOUT_CLASSIFICATION	4.3210087599550926E-7	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999996415177367	WITHOUT_CLASSIFICATION	3.584822633189516E-7	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999832367953763	WITHOUT_CLASSIFICATION	1.676320462371573E-5	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999996793291149	WITHOUT_CLASSIFICATION	3.2067088511531015E-7	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999992787849775	WITHOUT_CLASSIFICATION	7.212150225766174E-7	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999998384755221	WITHOUT_CLASSIFICATION	1.6152447787162922E-7	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999993547483764	WITHOUT_CLASSIFICATION	6.452516236085516E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997638512203302	WITHOUT_CLASSIFICATION	2.361487796696841E-4	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999998019202369	WITHOUT_CLASSIFICATION	1.9807976322668547E-7	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999998644500436	WITHOUT_CLASSIFICATION	1.3554995643236055E-7	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999997990800832	WITHOUT_CLASSIFICATION	2.0091991689530963E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999998699432251	WITHOUT_CLASSIFICATION	1.3005677485217122E-7	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999999921096611	WITHOUT_CLASSIFICATION	7.890338956839706E-9	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999997710616557	WITHOUT_CLASSIFICATION	2.2893834429118085E-7	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999986829038233	WITHOUT_CLASSIFICATION	1.3170961767014343E-6	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999996738854923	WITHOUT_CLASSIFICATION	3.2611450774680406E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999801933268982	WITHOUT_CLASSIFICATION	1.980667310177733E-5	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999801933268982	WITHOUT_CLASSIFICATION	1.980667310177733E-5	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999998687005055	WITHOUT_CLASSIFICATION	1.31299494604805E-7	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.999999987130284	WITHOUT_CLASSIFICATION	1.2869715922403018E-8	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9999998184130154	WITHOUT_CLASSIFICATION	1.8158698461626223E-7	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.999999962612143	WITHOUT_CLASSIFICATION	3.738785695462566E-8	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999978511539097	WITHOUT_CLASSIFICATION	2.148846090384992E-6	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999857929945728	WITHOUT_CLASSIFICATION	1.4207005427295908E-5	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999927053245927	WITHOUT_CLASSIFICATION	7.294675407334888E-6	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999998414666287	WITHOUT_CLASSIFICATION	1.5853337119653004E-7	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999998414666287	WITHOUT_CLASSIFICATION	1.5853337119653004E-7	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999831987552472	WITHOUT_CLASSIFICATION	1.6801244752775248E-5	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999938106669509	WITHOUT_CLASSIFICATION	6.189333049078154E-6	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.999998331515992	WITHOUT_CLASSIFICATION	1.6684840080425558E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999964899293846	WITHOUT_CLASSIFICATION	3.5100706153860843E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999964899293846	WITHOUT_CLASSIFICATION	3.5100706153860843E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999964899293846	WITHOUT_CLASSIFICATION	3.5100706153860843E-6	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9999999418211347	WITHOUT_CLASSIFICATION	5.8178865203438535E-8	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.999999195226418	WITHOUT_CLASSIFICATION	8.04773582109875E-7	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9999965343987599	WITHOUT_CLASSIFICATION	3.4656012401533487E-6	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9999999077515045	WITHOUT_CLASSIFICATION	9.224849553216304E-8	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999999711332823	WITHOUT_CLASSIFICATION	2.886671757897702E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993894200938	WITHOUT_CLASSIFICATION	6.105799062748339E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993894200938	WITHOUT_CLASSIFICATION	6.105799062748339E-7	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999999983117086	WITHOUT_CLASSIFICATION	1.6882914056842586E-9	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999999885504768	WITHOUT_CLASSIFICATION	1.1449523188237752E-8	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999998993219243	WITHOUT_CLASSIFICATION	1.0067807564355457E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999963532858465	WITHOUT_CLASSIFICATION	3.646714153514868E-6	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999987413982241	WITHOUT_CLASSIFICATION	1.2586017758783843E-6	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999967908009455	WITHOUT_CLASSIFICATION	3.209199054446526E-6	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999969471941854	WITHOUT_CLASSIFICATION	3.0528058145084793E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999999778123234	WITHOUT_CLASSIFICATION	2.218767652604511E-8	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999981317578419	WITHOUT_CLASSIFICATION	1.8682421580803288E-6	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999993656433048	WITHOUT_CLASSIFICATION	6.343566951541228E-7	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999323375663245	WITHOUT_CLASSIFICATION	6.766243367552327E-5	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999972469922074	WITHOUT_CLASSIFICATION	2.753007792638814E-6	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999972469922074	WITHOUT_CLASSIFICATION	2.753007792638814E-6	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999981134425842	WITHOUT_CLASSIFICATION	1.8865574158051002E-6	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999981134425842	WITHOUT_CLASSIFICATION	1.8865574158050983E-6	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999981669395979	WITHOUT_CLASSIFICATION	1.833060402065207E-6	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999971335748742	WITHOUT_CLASSIFICATION	2.8664251258826487E-6	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999971335748742	WITHOUT_CLASSIFICATION	2.8664251258826487E-6	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999969214834902	WITHOUT_CLASSIFICATION	3.0785165097242173E-6	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999957214009354	WITHOUT_CLASSIFICATION	4.278599064599419E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999996126666533	WITHOUT_CLASSIFICATION	3.873333468084782E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999801933268982	WITHOUT_CLASSIFICATION	1.980667310177733E-5	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999998619054477	WITHOUT_CLASSIFICATION	1.3809455232736027E-7	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999957214009354	WITHOUT_CLASSIFICATION	4.278599064599419E-6	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9999946072903585	WITHOUT_CLASSIFICATION	5.392709641542536E-6	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999986581547242	WITHOUT_CLASSIFICATION	1.3418452757377153E-6	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999976429841737	WITHOUT_CLASSIFICATION	2.357015826229898E-6	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999978198872569	WITHOUT_CLASSIFICATION	2.1801127430970533E-6	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.999999992481879	WITHOUT_CLASSIFICATION	7.518120982478416E-9	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999949065523165	WITHOUT_CLASSIFICATION	5.093447683530391E-6	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999994638988289	WITHOUT_CLASSIFICATION	5.361011710607776E-7	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9999999207332365	WITHOUT_CLASSIFICATION	7.926676340335769E-8	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9999972122555895	WITHOUT_CLASSIFICATION	2.7877444104930883E-6	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9999980015131551	WITHOUT_CLASSIFICATION	1.9984868449257534E-6	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999998500121344	WITHOUT_CLASSIFICATION	1.4998786552675636E-7	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9999944634209366	WITHOUT_CLASSIFICATION	5.536579063393854E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999972302070829	WITHOUT_CLASSIFICATION	2.769792917122951E-6	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999986807075625	WITHOUT_CLASSIFICATION	1.3192924374870721E-6	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9999999932065647	WITHOUT_CLASSIFICATION	6.793435161134889E-9	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.99999955158593	WITHOUT_CLASSIFICATION	4.484140698886537E-7	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999997699176644	WITHOUT_CLASSIFICATION	2.300823355985803E-7	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999996534280233	WITHOUT_CLASSIFICATION	3.4657197665002974E-7	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999996534280233	WITHOUT_CLASSIFICATION	3.4657197665002974E-7	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999988771555308	WITHOUT_CLASSIFICATION	1.1228444692892767E-6	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999989503720553	WITHOUT_CLASSIFICATION	1.0496279446757347E-6	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999996583728297	WITHOUT_CLASSIFICATION	3.4162717032633657E-7	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999973785327465	WITHOUT_CLASSIFICATION	2.6214672535774324E-6	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999988366143925	WITHOUT_CLASSIFICATION	1.1633856075878825E-6	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999999203873453	WITHOUT_CLASSIFICATION	7.961265475010242E-8	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9999998077093736	WITHOUT_CLASSIFICATION	1.9229062643780828E-7	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999990381437832	WITHOUT_CLASSIFICATION	9.61856216786864E-7	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999972265072953	WITHOUT_CLASSIFICATION	2.7734927047556843E-6	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999998072282561	WITHOUT_CLASSIFICATION	1.9277174388278589E-7	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999997105156756	WITHOUT_CLASSIFICATION	2.894843243709677E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997638512203302	WITHOUT_CLASSIFICATION	2.361487796696841E-4	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999997073892489	WITHOUT_CLASSIFICATION	2.926107511398658E-7	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999941287910431	WITHOUT_CLASSIFICATION	5.87120895693281E-6	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999994707147283	WITHOUT_CLASSIFICATION	5.292852717278683E-7	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999961762956165	WITHOUT_CLASSIFICATION	3.823704383438798E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999998985745414	WITHOUT_CLASSIFICATION	1.0142545857672696E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999998985745414	WITHOUT_CLASSIFICATION	1.0142545857672696E-7	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9999985476110334	WITHOUT_CLASSIFICATION	1.452388966641025E-6	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9999997609218563	WITHOUT_CLASSIFICATION	2.3907814371673824E-7	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9999978953043277	WITHOUT_CLASSIFICATION	2.1046956723423295E-6	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999951625452818	WITHOUT_CLASSIFICATION	4.8374547182151575E-6	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999924849413142	WITHOUT_CLASSIFICATION	7.5150586857078445E-6	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999971896637895	WITHOUT_CLASSIFICATION	2.8103362105469816E-6	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999987337419468	WITHOUT_CLASSIFICATION	1.2662580531383074E-6	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999992763668613	WITHOUT_CLASSIFICATION	7.236331386282064E-7	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999987016320541	WITHOUT_CLASSIFICATION	1.2983679459288159E-6	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999999164034246	WITHOUT_CLASSIFICATION	8.359657541992255E-8	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999990412404246	WITHOUT_CLASSIFICATION	9.587595754398054E-7	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999992763668613	WITHOUT_CLASSIFICATION	7.236331386282064E-7	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9999999181353264	WITHOUT_CLASSIFICATION	8.186467354691099E-8	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999923631345848	WITHOUT_CLASSIFICATION	7.636865415245978E-6	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999999759738599	WITHOUT_CLASSIFICATION	2.4026140060580208E-8	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999994669644661	WITHOUT_CLASSIFICATION	5.330355340421767E-7	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999998977138902	WITHOUT_CLASSIFICATION	1.02286109790137E-7	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.999999703486784	WITHOUT_CLASSIFICATION	2.9651321599585215E-7	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999917368696495	WITHOUT_CLASSIFICATION	8.263130350571297E-6	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999989370414993	WITHOUT_CLASSIFICATION	1.0629585007041675E-6	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999987275307082	WITHOUT_CLASSIFICATION	1.272469291840332E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999925106085094	WITHOUT_CLASSIFICATION	7.4893914907285035E-6	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999945659923662	WITHOUT_CLASSIFICATION	5.434007633794696E-6	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999998545870764	WITHOUT_CLASSIFICATION	1.4541292356316316E-7	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999825184813578	WITHOUT_CLASSIFICATION	1.74815186422214E-5	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.999999928194815	WITHOUT_CLASSIFICATION	7.18051850476272E-8	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.999998528470374	WITHOUT_CLASSIFICATION	1.4715296260578508E-6	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999988065093404	WITHOUT_CLASSIFICATION	1.1934906596091043E-6	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999993431351841	WITHOUT_CLASSIFICATION	6.568648157932512E-7	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.999992523310089	WITHOUT_CLASSIFICATION	7.476689911048536E-6	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9999902316951997	WITHOUT_CLASSIFICATION	9.768304800373445E-6	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999949711428205	WITHOUT_CLASSIFICATION	5.028857179409438E-6	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9999997788759131	WITHOUT_CLASSIFICATION	2.2112408705603217E-7	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9999996621774887	WITHOUT_CLASSIFICATION	3.378225113236267E-7	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9999988807712603	WITHOUT_CLASSIFICATION	1.1192287397717673E-6	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9999884993423142	WITHOUT_CLASSIFICATION	1.1500657685828038E-5	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999970951509789	WITHOUT_CLASSIFICATION	2.9048490210139777E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999912186401781	WITHOUT_CLASSIFICATION	8.781359821855933E-6	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999998447261553	WITHOUT_CLASSIFICATION	1.5527384467579648E-7	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999935074727448	WITHOUT_CLASSIFICATION	6.49252725516665E-6	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999994129672098	WITHOUT_CLASSIFICATION	5.870327902080615E-7	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999999564281056	WITHOUT_CLASSIFICATION	4.357189440513105E-8	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999996520016772	WITHOUT_CLASSIFICATION	3.479983228540439E-7	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999987242062902	WITHOUT_CLASSIFICATION	1.2757937097762588E-6	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999991441975694	WITHOUT_CLASSIFICATION	8.558024304942985E-7	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999999993334898	WITHOUT_CLASSIFICATION	6.665101035181754E-10	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999999288967342	WITHOUT_CLASSIFICATION	7.110326589031458E-8	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999987133556166	WITHOUT_CLASSIFICATION	1.286644383323747E-6	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.999999797938869	WITHOUT_CLASSIFICATION	2.0206113103420838E-7	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999988085931386	WITHOUT_CLASSIFICATION	1.191406861347001E-6	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999989282083458	WITHOUT_CLASSIFICATION	1.0717916542437334E-6	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999989606406962	WITHOUT_CLASSIFICATION	1.0393593038486468E-6	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999876025411559	WITHOUT_CLASSIFICATION	1.2397458844165396E-5	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999995352701925	WITHOUT_CLASSIFICATION	4.6472980750303613E-7	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999982841827871	WITHOUT_CLASSIFICATION	1.7158172128499782E-6	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999999929066018	WITHOUT_CLASSIFICATION	7.093398239256424E-9	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999980831805495	WITHOUT_CLASSIFICATION	1.9168194504486327E-6	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999998936767034	WITHOUT_CLASSIFICATION	1.0632329670946546E-7	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999999982435953	WITHOUT_CLASSIFICATION	1.7564046864965984E-9	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999988509751404	WITHOUT_CLASSIFICATION	1.1490248595780252E-6	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999992411072313	WITHOUT_CLASSIFICATION	7.588927688104478E-7	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999960088703597	WITHOUT_CLASSIFICATION	3.991129640318449E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996788755413	WITHOUT_CLASSIFICATION	3.211244586423459E-7	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999999168261976	WITHOUT_CLASSIFICATION	8.31738024703179E-8	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999999554054348	WITHOUT_CLASSIFICATION	4.459456517829983E-8	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999995996223744	WITHOUT_CLASSIFICATION	4.003776256612324E-7	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999999649251533	WITHOUT_CLASSIFICATION	3.507484673392675E-8	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999983899497819	WITHOUT_CLASSIFICATION	1.6100502181850592E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999995466816386	WITHOUT_CLASSIFICATION	4.5331836142722253E-7	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999996441566211	WITHOUT_CLASSIFICATION	3.558433789004495E-7	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999990670689006	WITHOUT_CLASSIFICATION	9.329310993705219E-7	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999997797532145	WITHOUT_CLASSIFICATION	2.2024678540745206E-7	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999992510993828	WITHOUT_CLASSIFICATION	7.489006171255597E-7	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999999230001164	WITHOUT_CLASSIFICATION	7.699988361626222E-8	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999965837953356	WITHOUT_CLASSIFICATION	3.416204664432163E-6	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9999995089377022	WITHOUT_CLASSIFICATION	4.910622978896741E-7	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9999985302974618	WITHOUT_CLASSIFICATION	1.4697025383104628E-6	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.999990287247313	WITHOUT_CLASSIFICATION	9.712752686932558E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996788755413	WITHOUT_CLASSIFICATION	3.211244586423459E-7	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999998957976471	WITHOUT_CLASSIFICATION	1.0420235286910413E-7	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999998794945123	WITHOUT_CLASSIFICATION	1.2050548770162018E-7	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999978645857935	WITHOUT_CLASSIFICATION	2.1354142064001384E-6	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.999997401088729	WITHOUT_CLASSIFICATION	2.598911270865049E-6	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999971574847871	WITHOUT_CLASSIFICATION	2.842515212832972E-6	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999993657435453	WITHOUT_CLASSIFICATION	6.342564547301246E-7	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999987016320541	WITHOUT_CLASSIFICATION	1.2983679459288159E-6	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999997042072182	WITHOUT_CLASSIFICATION	2.957927818591667E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999999288967342	WITHOUT_CLASSIFICATION	7.110326589031458E-8	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9999994912261637	WITHOUT_CLASSIFICATION	5.08773836214696E-7	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999990781548153	WITHOUT_CLASSIFICATION	9.218451846921561E-7	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999951161840192	WITHOUT_CLASSIFICATION	4.883815980829495E-6	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999940835179534	WITHOUT_CLASSIFICATION	5.916482046662695E-6	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999991514205777	WITHOUT_CLASSIFICATION	8.485794222608005E-7	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999980622141816	WITHOUT_CLASSIFICATION	1.937785818314772E-6	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999979150467391	WITHOUT_CLASSIFICATION	2.0849532610022346E-6	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999999728630706	WITHOUT_CLASSIFICATION	2.713692941023991E-8	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999993563217326	WITHOUT_CLASSIFICATION	6.436782674514038E-7	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999993811174799	WITHOUT_CLASSIFICATION	6.188825201070435E-7	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999973621028104	WITHOUT_CLASSIFICATION	2.6378971895035446E-6	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.999998652547918	WITHOUT_CLASSIFICATION	1.3474520821043255E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999960401646654	WITHOUT_CLASSIFICATION	3.959835334676013E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999960401646654	WITHOUT_CLASSIFICATION	3.959835334676013E-6	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.999999829983478	WITHOUT_CLASSIFICATION	1.7001652192725543E-7	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999928616397201	WITHOUT_CLASSIFICATION	7.1383602799778866E-6	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999999872858765	WITHOUT_CLASSIFICATION	1.2714123584752802E-8	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999998737521376	WITHOUT_CLASSIFICATION	1.262478624131707E-7	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.999999848912499	WITHOUT_CLASSIFICATION	1.5108750093766047E-7	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.999993657414007	WITHOUT_CLASSIFICATION	6.342585992956647E-6	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999974883962099	WITHOUT_CLASSIFICATION	2.511603789917253E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999995406665876	WITHOUT_CLASSIFICATION	4.593334123253172E-7	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999999312659776	WITHOUT_CLASSIFICATION	6.8734022283453E-8	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999998229164855	WITHOUT_CLASSIFICATION	1.7708351453845097E-7	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999987024187561	WITHOUT_CLASSIFICATION	1.2975812438556728E-6	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999980165024859	WITHOUT_CLASSIFICATION	1.983497514172368E-6	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999985147470182	WITHOUT_CLASSIFICATION	1.4852529818414817E-6	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999998935945101	WITHOUT_CLASSIFICATION	1.0640548990637173E-7	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999989284641577	WITHOUT_CLASSIFICATION	1.0715358422359432E-6	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999932945571447	WITHOUT_CLASSIFICATION	6.7054428552302925E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9999986952290011	WITHOUT_CLASSIFICATION	1.304770998986728E-6	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999999332871062	WITHOUT_CLASSIFICATION	6.671289381000755E-8	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999982240958893	WITHOUT_CLASSIFICATION	1.7759041105842313E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999997412779704	WITHOUT_CLASSIFICATION	2.587220295345268E-7	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999882419396914	WITHOUT_CLASSIFICATION	1.1758060308503917E-5	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999930399356577	WITHOUT_CLASSIFICATION	6.960064342346165E-6	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999995272505224	WITHOUT_CLASSIFICATION	4.7274947753599456E-7	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.9999527689083806	WITHOUT_CLASSIFICATION	4.723109161933713E-5	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9999993753405705	WITHOUT_CLASSIFICATION	6.246594295189091E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870760621985	WITHOUT_CLASSIFICATION	1.2923937801580964E-5	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999992217549875	WITHOUT_CLASSIFICATION	7.78245012515362E-7	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999998429393862	WITHOUT_CLASSIFICATION	1.570606139110612E-7	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999903906169485	WITHOUT_CLASSIFICATION	9.609383051558628E-6	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999957866708529	WITHOUT_CLASSIFICATION	4.213329147077298E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9996445841617092	WITHOUT_CLASSIFICATION	3.5541583829073E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9999595880170278	WITHOUT_CLASSIFICATION	4.041198297223109E-5	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999999986317051	WITHOUT_CLASSIFICATION	1.3682949359444231E-9	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.999999975680202	WITHOUT_CLASSIFICATION	2.4319797993266896E-8	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999993416129404	WITHOUT_CLASSIFICATION	6.583870596685871E-7	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999998303511964	WITHOUT_CLASSIFICATION	1.696488035531311E-7	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999978677069127	WITHOUT_CLASSIFICATION	2.132293087345632E-6	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.99999659441225	WITHOUT_CLASSIFICATION	3.405587749949352E-6	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999931283131623	WITHOUT_CLASSIFICATION	6.8716868376669624E-6	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999913884835185	WITHOUT_CLASSIFICATION	8.61151648145451E-6	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993344678667	WITHOUT_CLASSIFICATION	6.655321333056543E-6	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999999167765503	WITHOUT_CLASSIFICATION	8.322344973113132E-8	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999821318489742	WITHOUT_CLASSIFICATION	1.7868151025780903E-5	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.999996051420431	WITHOUT_CLASSIFICATION	3.94857956902363E-6	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999996735332518	WITHOUT_CLASSIFICATION	3.264667481497847E-7	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972122977966	WITHOUT_CLASSIFICATION	2.7877022033912624E-6	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9969718904222565	WITHOUT_CLASSIFICATION	0.0030281095777434457	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999992145446576	WITHOUT_CLASSIFICATION	7.854553424729405E-7	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.999999982023274	WITHOUT_CLASSIFICATION	1.7976726069908205E-8	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999997048265876	WITHOUT_CLASSIFICATION	2.951734123259862E-7	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999981916392179	WITHOUT_CLASSIFICATION	1.8083607820883423E-6	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999990070313259	WITHOUT_CLASSIFICATION	9.929686741202176E-7	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999991400156965	WITHOUT_CLASSIFICATION	8.599843035257472E-7	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.999997483436855	WITHOUT_CLASSIFICATION	2.5165631448579185E-6	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999968427848451	WITHOUT_CLASSIFICATION	3.157215154977467E-6	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999999663762756	WITHOUT_CLASSIFICATION	3.3623724394699515E-8	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.999991664572749	WITHOUT_CLASSIFICATION	8.335427250995992E-6	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9999990829010282	WITHOUT_CLASSIFICATION	9.17098971806842E-7	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999984392662465	WITHOUT_CLASSIFICATION	1.560733753433878E-6	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999965762007341	WITHOUT_CLASSIFICATION	3.4237992658355797E-6	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999997392572151	WITHOUT_CLASSIFICATION	2.607427848865563E-7	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999978988951432	WITHOUT_CLASSIFICATION	2.1011048568138398E-6	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999972145881948	WITHOUT_CLASSIFICATION	2.785411805242971E-6	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999997344789057	WITHOUT_CLASSIFICATION	2.655210942239833E-7	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999937765746802	WITHOUT_CLASSIFICATION	6.223425319765907E-6	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999968764519688	WITHOUT_CLASSIFICATION	3.123548031136383E-6	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999981434541443	WITHOUT_CLASSIFICATION	1.8565458556290087E-6	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999995263626621	WITHOUT_CLASSIFICATION	4.7363733789166176E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999987196456827	WITHOUT_CLASSIFICATION	1.2803543174264909E-6	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999998611858718	WITHOUT_CLASSIFICATION	1.3881412820013292E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999987196456827	WITHOUT_CLASSIFICATION	1.2803543174264909E-6	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999999752430359	WITHOUT_CLASSIFICATION	2.4756964136199943E-8	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999995823573662	WITHOUT_CLASSIFICATION	4.176426337501821E-7	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999641117740582	WITHOUT_CLASSIFICATION	3.588822594177757E-5	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999998352269622	WITHOUT_CLASSIFICATION	1.6477303782193914E-7	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999999492873104	WITHOUT_CLASSIFICATION	5.0712689504520824E-8	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999529761496415	WITHOUT_CLASSIFICATION	4.702385035844174E-5	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.999999601781192	WITHOUT_CLASSIFICATION	3.9821880801794894E-7	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999988273710964	WITHOUT_CLASSIFICATION	1.1726289036471784E-6	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999985200573004	WITHOUT_CLASSIFICATION	1.4799426995673653E-6	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999999368966545	WITHOUT_CLASSIFICATION	6.310334553225351E-8	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999991528945013	WITHOUT_CLASSIFICATION	8.471054987970445E-7	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.999999046667077	WITHOUT_CLASSIFICATION	9.533329230741738E-7	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999999439975632	WITHOUT_CLASSIFICATION	5.600243676821286E-8	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9999989044333415	WITHOUT_CLASSIFICATION	1.0955666585456628E-6	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999974155999237	WITHOUT_CLASSIFICATION	2.584400076303035E-6	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999998856009213	WITHOUT_CLASSIFICATION	1.1439907870063813E-7	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999998292095774	WITHOUT_CLASSIFICATION	1.7079042257351715E-7	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999996569252534	WITHOUT_CLASSIFICATION	3.430747466903824E-7	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.999999985552516	WITHOUT_CLASSIFICATION	1.4447484006428491E-8	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9999985828138235	WITHOUT_CLASSIFICATION	1.4171861766138903E-6	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999994785721141	WITHOUT_CLASSIFICATION	5.214278859027668E-7	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9999974404022501	WITHOUT_CLASSIFICATION	2.5595977498595366E-6	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.999997964656252	WITHOUT_CLASSIFICATION	2.0353437480496748E-6	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999999706210534	WITHOUT_CLASSIFICATION	2.937894667164561E-8	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999982484826104	WITHOUT_CLASSIFICATION	1.7515173895789624E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.999992852349145	WITHOUT_CLASSIFICATION	7.147650854935341E-6	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999971335879199	WITHOUT_CLASSIFICATION	2.866412080106671E-6	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9999947489905427	WITHOUT_CLASSIFICATION	5.251009457187575E-6	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999957065891949	WITHOUT_CLASSIFICATION	4.293410805108104E-6	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999992887908141	WITHOUT_CLASSIFICATION	7.112091858127505E-7	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9999922628425595	WITHOUT_CLASSIFICATION	7.737157440516752E-6	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999105034997137	WITHOUT_CLASSIFICATION	8.949650028634439E-5	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999999878188525	WITHOUT_CLASSIFICATION	1.2181147659094136E-8	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999973064066098	WITHOUT_CLASSIFICATION	2.693593390231348E-6	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999967802274002	WITHOUT_CLASSIFICATION	3.2197725998011164E-6	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9999901524860657	WITHOUT_CLASSIFICATION	9.84751393435317E-6	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999879414001577	WITHOUT_CLASSIFICATION	1.2058599842458882E-5	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.999994396950418	WITHOUT_CLASSIFICATION	5.603049582046997E-6	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.9999381841758468	WITHOUT_CLASSIFICATION	6.181582415317267E-5	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999998585473636	WITHOUT_CLASSIFICATION	1.4145263630756766E-7	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999822784939639	WITHOUT_CLASSIFICATION	1.7721506036095492E-5	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9999976301787543	WITHOUT_CLASSIFICATION	2.3698212456305737E-6	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999958018831331	WITHOUT_CLASSIFICATION	4.19811686690348E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.999992852349145	WITHOUT_CLASSIFICATION	7.147650854935341E-6	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9997919302948955	WITHOUT_CLASSIFICATION	2.0806970510447515E-4	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999996021195191	WITHOUT_CLASSIFICATION	3.978804808886499E-7	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9999298519797533	WITHOUT_CLASSIFICATION	7.014802024668644E-5	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999994738113672	WITHOUT_CLASSIFICATION	5.261886328025158E-7	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999896792832654	WITHOUT_CLASSIFICATION	1.0320716734558727E-5	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999866635368166	WITHOUT_CLASSIFICATION	1.3336463183268521E-5	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999977352719398	WITHOUT_CLASSIFICATION	2.2647280602676305E-6	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999998220215659	WITHOUT_CLASSIFICATION	1.7797843415938526E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999986126027415	WITHOUT_CLASSIFICATION	1.387397258580868E-6	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999998971311285	WITHOUT_CLASSIFICATION	1.028688715024654E-7	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9999982171001289	WITHOUT_CLASSIFICATION	1.782899870966231E-6	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.999996689855866	WITHOUT_CLASSIFICATION	3.3101441339398375E-6	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9999893470543921	WITHOUT_CLASSIFICATION	1.0652945607935867E-5	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9999796029685448	WITHOUT_CLASSIFICATION	2.039703145520094E-5	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999898116743439	WITHOUT_CLASSIFICATION	1.0188325656096417E-5	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999999721083347	WITHOUT_CLASSIFICATION	2.789166540569524E-8	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999949183279541	WITHOUT_CLASSIFICATION	5.081672045884448E-6	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999990764458003	WITHOUT_CLASSIFICATION	9.235541996568692E-7	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999999358207189	WITHOUT_CLASSIFICATION	6.41792810998098E-8	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9997919302948955	WITHOUT_CLASSIFICATION	2.0806970510447515E-4	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9999959130963337	WITHOUT_CLASSIFICATION	4.086903666171251E-6	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999998155270554	WITHOUT_CLASSIFICATION	1.8447294462106962E-7	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999894477921623	WITHOUT_CLASSIFICATION	1.0552207837803664E-5	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999988395562821	WITHOUT_CLASSIFICATION	1.1604437178809926E-6	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.999999604712306	WITHOUT_CLASSIFICATION	3.9528769401510327E-7	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999919066416946	WITHOUT_CLASSIFICATION	8.093358305375238E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999919066416946	WITHOUT_CLASSIFICATION	8.093358305375238E-6	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999974690766431	WITHOUT_CLASSIFICATION	2.53092335697582E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999919066416946	WITHOUT_CLASSIFICATION	8.093358305375238E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999919066416946	WITHOUT_CLASSIFICATION	8.093358305375238E-6	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9998274350985179	WITHOUT_CLASSIFICATION	1.725649014821409E-4	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999992078834302	WITHOUT_CLASSIFICATION	7.921165698475818E-7	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999997984736027	WITHOUT_CLASSIFICATION	2.0152639747733534E-7	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999995464132557	WITHOUT_CLASSIFICATION	4.5358674420374956E-7	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999964494449031	WITHOUT_CLASSIFICATION	3.5505550970441986E-6	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9999920980885554	WITHOUT_CLASSIFICATION	7.901911444650474E-6	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9999866532846468	WITHOUT_CLASSIFICATION	1.3346715353213422E-5	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999779084702592	WITHOUT_CLASSIFICATION	2.2091529740665605E-5	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999840693896793	WITHOUT_CLASSIFICATION	1.593061032068595E-5	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9999766025995782	WITHOUT_CLASSIFICATION	2.339740042177918E-5	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9999955188062462	WITHOUT_CLASSIFICATION	4.4811937538191606E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999912549801379	WITHOUT_CLASSIFICATION	8.745019862188361E-6	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999983734011344	WITHOUT_CLASSIFICATION	1.6265988655647156E-6	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.999983357294961	WITHOUT_CLASSIFICATION	1.6642705038914922E-5	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999963539600923	WITHOUT_CLASSIFICATION	3.64603990776406E-6	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.999987522666837	WITHOUT_CLASSIFICATION	1.2477333162963037E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999964150627442	WITHOUT_CLASSIFICATION	3.5849372557923196E-6	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999824178910236	WITHOUT_CLASSIFICATION	1.7582108976418715E-5	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999067120380593	WITHOUT_CLASSIFICATION	9.328796194073891E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9999807992800201	WITHOUT_CLASSIFICATION	1.9200719979877965E-5	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999975964612101	WITHOUT_CLASSIFICATION	2.403538789932493E-6	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999615301929566	WITHOUT_CLASSIFICATION	3.846980704329392E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999964150627442	WITHOUT_CLASSIFICATION	3.5849372557923196E-6	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999971335879199	WITHOUT_CLASSIFICATION	2.866412080106671E-6	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999923156632523	WITHOUT_CLASSIFICATION	7.684336747670652E-6	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999995207202029	WITHOUT_CLASSIFICATION	4.79279797009326E-7	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999999866620343	WITHOUT_CLASSIFICATION	1.333796569632516E-7	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.99994253443935	WITHOUT_CLASSIFICATION	5.746556065014991E-5	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.999999219051002	WITHOUT_CLASSIFICATION	7.809489980033793E-7	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.9999991999189874	WITHOUT_CLASSIFICATION	8.000810126192433E-7	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999986976198042	WITHOUT_CLASSIFICATION	1.3023801958495974E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999938718001322	WITHOUT_CLASSIFICATION	6.128199867819945E-6	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.999995802758268	WITHOUT_CLASSIFICATION	4.197241731964881E-6	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9999957031235748	WITHOUT_CLASSIFICATION	4.296876425253685E-6	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999998721231855	WITHOUT_CLASSIFICATION	1.278768144611531E-7	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999994238079507	WITHOUT_CLASSIFICATION	5.761920493363841E-7	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999992983799418	WITHOUT_CLASSIFICATION	7.016200581565116E-7	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9999964618895952	WITHOUT_CLASSIFICATION	3.5381104047502625E-6	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999999437811292	WITHOUT_CLASSIFICATION	5.621887073486946E-8	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999995506371973	WITHOUT_CLASSIFICATION	4.4936280273759104E-7	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999991445165148	WITHOUT_CLASSIFICATION	8.554834851894696E-7	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999999580177743	WITHOUT_CLASSIFICATION	4.198222566705947E-8	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999998850047307	WITHOUT_CLASSIFICATION	1.1499526927434324E-7	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9999981333674719	WITHOUT_CLASSIFICATION	1.8666325281351194E-6	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999992263272885	WITHOUT_CLASSIFICATION	7.736727115586896E-7	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999998165609707	WITHOUT_CLASSIFICATION	1.834390292412873E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999938718001322	WITHOUT_CLASSIFICATION	6.128199867819945E-6	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999895895989139	WITHOUT_CLASSIFICATION	1.0410401086121535E-5	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9999920075694746	WITHOUT_CLASSIFICATION	7.992430525381315E-6	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9999902538428971	WITHOUT_CLASSIFICATION	9.746157103016593E-6	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999995700235452	WITHOUT_CLASSIFICATION	4.2997645484318333E-7	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992891207821	WITHOUT_CLASSIFICATION	7.108792179289357E-7	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9999967414207672	WITHOUT_CLASSIFICATION	3.258579232747315E-6	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9999962226849665	WITHOUT_CLASSIFICATION	3.777315033509492E-6	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.999982345830695	WITHOUT_CLASSIFICATION	1.7654169304968253E-5	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.9999971376416554	WITHOUT_CLASSIFICATION	2.8623583445808757E-6	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9999654441289827	WITHOUT_CLASSIFICATION	3.455587101736939E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999895448054321	WITHOUT_CLASSIFICATION	1.0455194567874318E-5	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999999959119981	WITHOUT_CLASSIFICATION	4.0880019713809055E-9	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999963276699138	WITHOUT_CLASSIFICATION	3.672330086252465E-6	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999992642950565	WITHOUT_CLASSIFICATION	7.357049435069282E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999741366282607	WITHOUT_CLASSIFICATION	2.5863371739220792E-5	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999605490891108	WITHOUT_CLASSIFICATION	3.945091088913015E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.999996267291446	WITHOUT_CLASSIFICATION	3.7327085540118845E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999895448054321	WITHOUT_CLASSIFICATION	1.0455194567874318E-5	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999998050190617	WITHOUT_CLASSIFICATION	1.9498093826690715E-7	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9999982345502746	WITHOUT_CLASSIFICATION	1.7654497253908686E-6	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.999998932489873	WITHOUT_CLASSIFICATION	1.0675101270016417E-6	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999921673635476	WITHOUT_CLASSIFICATION	7.832636452393059E-6	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999989836354648	WITHOUT_CLASSIFICATION	1.016364535225634E-6	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999999105633078	WITHOUT_CLASSIFICATION	8.943669226560202E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999741366282607	WITHOUT_CLASSIFICATION	2.5863371739220792E-5	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999999428916161	WITHOUT_CLASSIFICATION	5.71083840437942E-8	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992950944683	WITHOUT_CLASSIFICATION	7.049055316423494E-7	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999821730906	WITHOUT_CLASSIFICATION	1.7826909395189985E-7	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989351412183	WITHOUT_CLASSIFICATION	1.0648587816872197E-6	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989273514888	WITHOUT_CLASSIFICATION	1.072648511335929E-6	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996048462324	WITHOUT_CLASSIFICATION	3.951537676357652E-7	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999986712501137	WITHOUT_CLASSIFICATION	1.3287498864284005E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999986712501137	WITHOUT_CLASSIFICATION	1.3287498864284005E-6	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999986075370839	WITHOUT_CLASSIFICATION	1.3924629160644583E-6	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999961802557865	WITHOUT_CLASSIFICATION	3.819744213451464E-6	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999982173544584	WITHOUT_CLASSIFICATION	1.7826455417143683E-6	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9999993221160359	WITHOUT_CLASSIFICATION	6.778839642106154E-7	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9999997137199268	WITHOUT_CLASSIFICATION	2.862800731258106E-7	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990349240075	WITHOUT_CLASSIFICATION	9.650759923825364E-7	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999807118385113	WITHOUT_CLASSIFICATION	1.9288161488588377E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997044373836	WITHOUT_CLASSIFICATION	2.955626164869735E-7	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999977842510837	WITHOUT_CLASSIFICATION	2.2157489163793558E-6	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999982990559303	WITHOUT_CLASSIFICATION	1.7009440696610236E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990349240075	WITHOUT_CLASSIFICATION	9.650759923825364E-7	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999807118385113	WITHOUT_CLASSIFICATION	1.9288161488588377E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997044373836	WITHOUT_CLASSIFICATION	2.955626164869735E-7	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999954395434518	WITHOUT_CLASSIFICATION	4.560456548140402E-6	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9999734413990754	WITHOUT_CLASSIFICATION	2.6558600924589964E-5	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999998732460665	WITHOUT_CLASSIFICATION	1.267539334164411E-7	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999985578683883	WITHOUT_CLASSIFICATION	1.442131611712517E-6	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999999498639351	WITHOUT_CLASSIFICATION	5.013606476930887E-8	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999999232851335	WITHOUT_CLASSIFICATION	7.671486652303226E-8	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9999871180493971	WITHOUT_CLASSIFICATION	1.2881950602814934E-5	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.9999949391647276	WITHOUT_CLASSIFICATION	5.0608352723570785E-6	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9999459783127598	WITHOUT_CLASSIFICATION	5.402168724014237E-5	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999991593356315	WITHOUT_CLASSIFICATION	8.406643685638274E-7	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999997277880969	WITHOUT_CLASSIFICATION	2.722119031605759E-7	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.999998163145142	WITHOUT_CLASSIFICATION	1.8368548580307215E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9999548549497563	WITHOUT_CLASSIFICATION	4.5145050243596165E-5	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999982703867407	WITHOUT_CLASSIFICATION	1.7296132592301186E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999996595385164	WITHOUT_CLASSIFICATION	3.4046148349496243E-7	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999925349166932	WITHOUT_CLASSIFICATION	7.4650833068374015E-6	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9998374137432836	WITHOUT_CLASSIFICATION	1.625862567163437E-4	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999564125766977	WITHOUT_CLASSIFICATION	4.358742330220717E-5	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999998619251217	WITHOUT_CLASSIFICATION	1.3807487834429497E-7	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999967358232368	WITHOUT_CLASSIFICATION	3.2641767633218794E-6	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999994757022163	WITHOUT_CLASSIFICATION	5.242977836594145E-7	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999998327448557	WITHOUT_CLASSIFICATION	1.6725514429947646E-7	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999959934523202	WITHOUT_CLASSIFICATION	4.006547679810518E-6	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.999999904462722	WITHOUT_CLASSIFICATION	9.553727805827426E-8	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999999938209443	WITHOUT_CLASSIFICATION	6.179055816514074E-9	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9997374603393868	WITHOUT_CLASSIFICATION	2.6253966061319344E-4	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986117632567	WITHOUT_CLASSIFICATION	1.3882367433430552E-6	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999978675088603	WITHOUT_CLASSIFICATION	2.132491139717115E-6	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999356081032971	WITHOUT_CLASSIFICATION	6.439189670296603E-5	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963134938941	WITHOUT_CLASSIFICATION	3.686506105919455E-6	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999958658742383	WITHOUT_CLASSIFICATION	4.1341257616802646E-6	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999952502624974	WITHOUT_CLASSIFICATION	4.749737502559718E-6	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999952502624974	WITHOUT_CLASSIFICATION	4.749737502559718E-6	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999994972561866	WITHOUT_CLASSIFICATION	5.027438134214101E-7	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999999858221348	WITHOUT_CLASSIFICATION	1.4177865171297565E-8	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999996791798039	WITHOUT_CLASSIFICATION	3.20820196002187E-7	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997638512203302	WITHOUT_CLASSIFICATION	2.361487796696841E-4	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999987794563867	WITHOUT_CLASSIFICATION	1.2205436132549602E-6	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9999974283831607	WITHOUT_CLASSIFICATION	2.5716168392060554E-6	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9999489518873232	WITHOUT_CLASSIFICATION	5.1048112676702194E-5	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999991753102876	WITHOUT_CLASSIFICATION	8.246897123438149E-7	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999965300159415	WITHOUT_CLASSIFICATION	3.4699840584233926E-6	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998870852934	WITHOUT_CLASSIFICATION	1.1291470659773478E-6	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993010389087	WITHOUT_CLASSIFICATION	6.989610913217919E-7	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993572662019	WITHOUT_CLASSIFICATION	6.427337979900456E-7	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999113857402	WITHOUT_CLASSIFICATION	8.861425980885347E-7	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995966569784	WITHOUT_CLASSIFICATION	4.033430216381813E-7	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991841996783	WITHOUT_CLASSIFICATION	8.158003217363642E-7	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986496215651	WITHOUT_CLASSIFICATION	1.3503784347862225E-6	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997713070249	WITHOUT_CLASSIFICATION	2.2869297520366546E-7	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998175129539	WITHOUT_CLASSIFICATION	1.824870462366608E-7	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993576703231	WITHOUT_CLASSIFICATION	6.423296768227547E-7	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991738430961	WITHOUT_CLASSIFICATION	8.261569038390861E-7	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999992861638257	WITHOUT_CLASSIFICATION	7.13836174227154E-7	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9999901300291999	WITHOUT_CLASSIFICATION	9.869970800057208E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.999999446293137	WITHOUT_CLASSIFICATION	5.537068630469817E-7	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999985713991684	WITHOUT_CLASSIFICATION	1.4286008315632912E-6	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999936058269677	WITHOUT_CLASSIFICATION	6.3941730322058656E-6	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999996104651778	WITHOUT_CLASSIFICATION	3.895348221320273E-7	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999997908357544	WITHOUT_CLASSIFICATION	2.0916424563820885E-7	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9999997725156914	WITHOUT_CLASSIFICATION	2.274843087286078E-7	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.999999446293137	WITHOUT_CLASSIFICATION	5.537068630469817E-7	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.999999446293137	WITHOUT_CLASSIFICATION	5.537068630469817E-7	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9999923879291117	WITHOUT_CLASSIFICATION	7.612070888305399E-6	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999999735479231	WITHOUT_CLASSIFICATION	2.6452076874897292E-8	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999993494729201	WITHOUT_CLASSIFICATION	6.505270799504105E-7	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999989287763387	WITHOUT_CLASSIFICATION	1.07122366141095E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999972302070829	WITHOUT_CLASSIFICATION	2.769792917122951E-6	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999967358232368	WITHOUT_CLASSIFICATION	3.2641767633218794E-6	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999737409438223	WITHOUT_CLASSIFICATION	2.6259056177590978E-5	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999996163702262	WITHOUT_CLASSIFICATION	3.8362977373910525E-7	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999999581219893	WITHOUT_CLASSIFICATION	4.187801066732397E-8	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998008644644	WITHOUT_CLASSIFICATION	1.991355356397681E-7	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999998471200339	WITHOUT_CLASSIFICATION	1.5287996616900937E-7	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999913530552474	WITHOUT_CLASSIFICATION	8.64694475262292E-6	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999860931666608	WITHOUT_CLASSIFICATION	1.390683333918191E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999860931666608	WITHOUT_CLASSIFICATION	1.390683333918191E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999932549504615	WITHOUT_CLASSIFICATION	6.7450495384733226E-6	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999932549504615	WITHOUT_CLASSIFICATION	6.7450495384733226E-6	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995301376459	WITHOUT_CLASSIFICATION	4.698623542183965E-7	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977748095564	WITHOUT_CLASSIFICATION	2.2251904435193676E-6	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999958137452358	WITHOUT_CLASSIFICATION	4.1862547641953816E-6	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999500969001	WITHOUT_CLASSIFICATION	4.990309990008359E-7	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9999999564749298	WITHOUT_CLASSIFICATION	4.3525070179589484E-8	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999997459338464	WITHOUT_CLASSIFICATION	2.540661536051143E-7	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963774143333	WITHOUT_CLASSIFICATION	3.6225856665761926E-6	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988987086097	WITHOUT_CLASSIFICATION	1.1012913903707515E-6	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9999952096446101	WITHOUT_CLASSIFICATION	4.790355390006434E-6	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999997259895064	WITHOUT_CLASSIFICATION	2.7401049355369415E-7	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999950152299473	WITHOUT_CLASSIFICATION	4.9847700527014385E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998550751436128	WITHOUT_CLASSIFICATION	1.4492485638716525E-4	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999991537491217	WITHOUT_CLASSIFICATION	8.462508782746868E-7	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999972760524726	WITHOUT_CLASSIFICATION	2.7239475274036853E-6	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999988951677086	WITHOUT_CLASSIFICATION	1.1048322915057893E-6	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.9999776445059432	WITHOUT_CLASSIFICATION	2.2355494056844134E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999967468060244	WITHOUT_CLASSIFICATION	3.253193975526989E-6	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999967468060244	WITHOUT_CLASSIFICATION	3.253193975526989E-6	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999999663943709	WITHOUT_CLASSIFICATION	3.360562906603191E-8	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9999937721212195	WITHOUT_CLASSIFICATION	6.227878780429974E-6	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999845046196219	WITHOUT_CLASSIFICATION	1.549538037808562E-5	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999843485073177	WITHOUT_CLASSIFICATION	1.5651492682349643E-5	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998852167429	WITHOUT_CLASSIFICATION	1.1478325713687786E-7	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99999978694566	WITHOUT_CLASSIFICATION	2.130543400770897E-7	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999993745420956	WITHOUT_CLASSIFICATION	6.254579042584587E-7	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994815949722	WITHOUT_CLASSIFICATION	5.184050277555769E-7	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999995802194693	WITHOUT_CLASSIFICATION	4.1978053072873355E-7	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999994270526988	WITHOUT_CLASSIFICATION	5.729473012117653E-7	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.999999766590081	WITHOUT_CLASSIFICATION	2.3340991896209021E-7	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.99999894906291	WITHOUT_CLASSIFICATION	1.0509370899942237E-6	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999968345041623	WITHOUT_CLASSIFICATION	3.1654958375688144E-6	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999996765591291	WITHOUT_CLASSIFICATION	3.234408707698536E-7	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999998903705146	WITHOUT_CLASSIFICATION	1.0962948538127041E-7	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999977513710635	WITHOUT_CLASSIFICATION	2.2486289364714953E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999998768185618	WITHOUT_CLASSIFICATION	1.23181438245087E-7	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999957771985472	WITHOUT_CLASSIFICATION	4.222801452789941E-6	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999909441570336	WITHOUT_CLASSIFICATION	9.055842966332946E-6	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999975506437957	WITHOUT_CLASSIFICATION	2.4493562042915167E-6	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999997286800898	WITHOUT_CLASSIFICATION	2.7131991024477967E-7	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.999999958755197	WITHOUT_CLASSIFICATION	4.1244803036770835E-8	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999987463773352	WITHOUT_CLASSIFICATION	1.2536226647485124E-6	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999991724414526	WITHOUT_CLASSIFICATION	8.275585473631826E-7	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999992509437395	WITHOUT_CLASSIFICATION	7.490562604211632E-7	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999979207568973	WITHOUT_CLASSIFICATION	2.079243102745485E-6	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999997683669806	WITHOUT_CLASSIFICATION	2.316330194483447E-7	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9999926411706999	WITHOUT_CLASSIFICATION	7.3588293001140925E-6	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999957751225891	WITHOUT_CLASSIFICATION	4.224877410886644E-6	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999938967424552	WITHOUT_CLASSIFICATION	6.1032575448136546E-6	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999999878422376	WITHOUT_CLASSIFICATION	1.2157762404160147E-8	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999961475896997	WITHOUT_CLASSIFICATION	3.852410300258481E-6	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999599748819966	WITHOUT_CLASSIFICATION	4.002511800332921E-5	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9994295872058101	WITHOUT_CLASSIFICATION	5.704127941898184E-4	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999993414540318	WITHOUT_CLASSIFICATION	6.585459680923704E-7	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9999933745744707	WITHOUT_CLASSIFICATION	6.625425529318984E-6	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999999774951882	WITHOUT_CLASSIFICATION	2.250481177445855E-8	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999995770308526	WITHOUT_CLASSIFICATION	4.229691473418819E-7	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999985369621158	WITHOUT_CLASSIFICATION	1.4630378841323385E-6	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.999998660179441	WITHOUT_CLASSIFICATION	1.3398205591166638E-6	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999999930171337	WITHOUT_CLASSIFICATION	6.982866206798372E-9	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999999032813722	WITHOUT_CLASSIFICATION	9.671862787973393E-8	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999998227961394	WITHOUT_CLASSIFICATION	1.7720386059598689E-7	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999999023665718	WITHOUT_CLASSIFICATION	9.763342817879447E-8	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999994529964329	WITHOUT_CLASSIFICATION	5.470035671585707E-7	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999825818442674	WITHOUT_CLASSIFICATION	1.74181557325598E-5	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999960973517324	WITHOUT_CLASSIFICATION	3.902648267534308E-6	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.999962180337224	WITHOUT_CLASSIFICATION	3.781966277604121E-5	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999956014499519	WITHOUT_CLASSIFICATION	4.3985500480620915E-6	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9999912384183467	WITHOUT_CLASSIFICATION	8.761581653346442E-6	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999972378769469	WITHOUT_CLASSIFICATION	2.762123052975667E-6	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9999335189381856	WITHOUT_CLASSIFICATION	6.648106181444309E-5	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999894238771463	WITHOUT_CLASSIFICATION	1.057612285368124E-5	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999924451769869	WITHOUT_CLASSIFICATION	7.5548230130094194E-6	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999448195810603	WITHOUT_CLASSIFICATION	5.5180418939811455E-5	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999988187487511	WITHOUT_CLASSIFICATION	1.1812512488690592E-6	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9999745428844952	WITHOUT_CLASSIFICATION	2.545711550477794E-5	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9998515402228155	WITHOUT_CLASSIFICATION	1.4845977718449404E-4	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999980661039198	WITHOUT_CLASSIFICATION	1.933896080165152E-6	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9999502695143163	WITHOUT_CLASSIFICATION	4.9730485683732E-5	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999993606118283	WITHOUT_CLASSIFICATION	6.393881716508762E-7	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999991314259257	WITHOUT_CLASSIFICATION	8.685740744229211E-7	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999762456782	WITHOUT_CLASSIFICATION	2.3754321931203437E-8	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999952024631794	WITHOUT_CLASSIFICATION	4.797536820614782E-6	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999995418014552	WITHOUT_CLASSIFICATION	4.5819854469196676E-7	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999996949610885	WITHOUT_CLASSIFICATION	3.050389114724208E-7	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999999981679911	WITHOUT_CLASSIFICATION	1.8320088285336033E-9	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999986785286211	WITHOUT_CLASSIFICATION	1.3214713788518396E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999205196798456	WITHOUT_CLASSIFICATION	7.948032015439767E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999205196798456	WITHOUT_CLASSIFICATION	7.948032015439767E-5	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999881972957357	WITHOUT_CLASSIFICATION	1.1802704264237046E-5	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9999995913021795	WITHOUT_CLASSIFICATION	4.086978205427006E-7	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999997398536906	WITHOUT_CLASSIFICATION	2.601463094086465E-7	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999950255599451	WITHOUT_CLASSIFICATION	4.974440054863148E-6	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999992343804116	WITHOUT_CLASSIFICATION	7.656195883494919E-7	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999979088536701	WITHOUT_CLASSIFICATION	2.091146329859477E-6	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999989771360437	WITHOUT_CLASSIFICATION	1.0228639563676677E-6	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999999905004766	WITHOUT_CLASSIFICATION	9.499523283589825E-9	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9999935244512925	WITHOUT_CLASSIFICATION	6.475548707374407E-6	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999999462456524	WITHOUT_CLASSIFICATION	5.375434764763543E-8	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999941093417899	WITHOUT_CLASSIFICATION	5.89065821006658E-6	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999976705564155	WITHOUT_CLASSIFICATION	2.329443584485272E-6	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9999942723618312	WITHOUT_CLASSIFICATION	5.727638168742716E-6	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999995483850702	WITHOUT_CLASSIFICATION	4.5161492981072995E-7	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999989545747807	WITHOUT_CLASSIFICATION	1.0454252193090528E-6	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999926512559467	WITHOUT_CLASSIFICATION	7.3487440532740415E-6	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999854543439365	WITHOUT_CLASSIFICATION	1.4545656063637875E-5	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999995099694735	WITHOUT_CLASSIFICATION	4.900305264928307E-7	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999998342296125	WITHOUT_CLASSIFICATION	1.657703875990672E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999998786063465	WITHOUT_CLASSIFICATION	1.2139365335713735E-7	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999965698482212	WITHOUT_CLASSIFICATION	3.4301517787848264E-6	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999616698559874	WITHOUT_CLASSIFICATION	3.833014401258288E-5	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9995159997654962	WITHOUT_CLASSIFICATION	4.840002345037486E-4	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9999992344660619	WITHOUT_CLASSIFICATION	7.655339381575859E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999852232534969	WITHOUT_CLASSIFICATION	1.477674650306818E-5	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9999975945097083	WITHOUT_CLASSIFICATION	2.405490291870685E-6	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999965070562221	WITHOUT_CLASSIFICATION	3.4929437778066734E-6	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999973631527939	WITHOUT_CLASSIFICATION	2.63684720615504E-6	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999998758694632	WITHOUT_CLASSIFICATION	1.2413053696087714E-7	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999998460625725	WITHOUT_CLASSIFICATION	1.5393742744961157E-7	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999995768496982	WITHOUT_CLASSIFICATION	4.2315030177895517E-7	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999992969791055	WITHOUT_CLASSIFICATION	7.030208945519168E-7	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999991165646593	WITHOUT_CLASSIFICATION	8.834353407660674E-7	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.9999937772113712	WITHOUT_CLASSIFICATION	6.222788628802768E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999937113449018	WITHOUT_CLASSIFICATION	6.288655098206338E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999937113449018	WITHOUT_CLASSIFICATION	6.288655098206338E-6	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999945517594444	WITHOUT_CLASSIFICATION	5.448240555665602E-6	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9999965763870902	WITHOUT_CLASSIFICATION	3.4236129099599736E-6	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999994742359023	WITHOUT_CLASSIFICATION	5.257640977877071E-7	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999960391919068	WITHOUT_CLASSIFICATION	3.960808093204776E-6	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999992834452621	WITHOUT_CLASSIFICATION	7.165547379338124E-7	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999965429913448	WITHOUT_CLASSIFICATION	3.457008655179794E-6	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999983103916096	WITHOUT_CLASSIFICATION	1.6896083904357612E-6	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999999799883553	WITHOUT_CLASSIFICATION	2.0011644665846538E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.999990903014138	WITHOUT_CLASSIFICATION	9.096985861998939E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999999563770314	WITHOUT_CLASSIFICATION	4.3622968628926783E-8	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999999764193359	WITHOUT_CLASSIFICATION	2.3580664085442672E-8	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9999997202397182	WITHOUT_CLASSIFICATION	2.7976028181373484E-7	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.999998327595386	WITHOUT_CLASSIFICATION	1.6724046139517446E-6	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999989903795536	WITHOUT_CLASSIFICATION	1.0096204462922131E-6	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999998716357736	WITHOUT_CLASSIFICATION	1.283642263852868E-7	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999884331186947	WITHOUT_CLASSIFICATION	1.1566881305422785E-5	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999884331186947	WITHOUT_CLASSIFICATION	1.1566881305422785E-5	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999989377187087	WITHOUT_CLASSIFICATION	1.0622812913165635E-6	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999979482853035	WITHOUT_CLASSIFICATION	2.0517146963767003E-6	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999998492012546	WITHOUT_CLASSIFICATION	1.507987454641762E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999998752813987	WITHOUT_CLASSIFICATION	1.2471860132886086E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998550751436128	WITHOUT_CLASSIFICATION	1.4492485638716525E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998987962007199	WITHOUT_CLASSIFICATION	1.0120379928014505E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999992882702594	WITHOUT_CLASSIFICATION	7.117297405207485E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999967374507733	WITHOUT_CLASSIFICATION	3.2625492267596235E-6	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999967374507733	WITHOUT_CLASSIFICATION	3.2625492267596235E-6	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999993040820486	WITHOUT_CLASSIFICATION	6.959179514381684E-7	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999999903579311	WITHOUT_CLASSIFICATION	9.642068931126128E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999988812658958	WITHOUT_CLASSIFICATION	1.1187341042462988E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999998334509704	WITHOUT_CLASSIFICATION	1.6654902949703914E-7	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9999971382830021	WITHOUT_CLASSIFICATION	2.86171699789418E-6	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999402615215793	WITHOUT_CLASSIFICATION	5.973847842073264E-5	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999997627760598	WITHOUT_CLASSIFICATION	2.372239400567621E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999996126666533	WITHOUT_CLASSIFICATION	3.873333468084782E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999993894200938	WITHOUT_CLASSIFICATION	6.105799062748339E-7	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9999987188565783	WITHOUT_CLASSIFICATION	1.2811434216597427E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999994772557458	WITHOUT_CLASSIFICATION	5.227442541681239E-7	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999942858663153	WITHOUT_CLASSIFICATION	5.71413368466243E-6	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999998920747052	WITHOUT_CLASSIFICATION	1.0792529486366051E-7	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999981669395979	WITHOUT_CLASSIFICATION	1.8330604020652088E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999903906169485	WITHOUT_CLASSIFICATION	9.609383051558628E-6	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999992200937559	WITHOUT_CLASSIFICATION	7.799062441304803E-7	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999991557174961	WITHOUT_CLASSIFICATION	8.442825040027971E-7	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999879371970738	WITHOUT_CLASSIFICATION	1.2062802926154725E-5	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999991234316439	WITHOUT_CLASSIFICATION	8.765683560437863E-7	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999993685823886	WITHOUT_CLASSIFICATION	6.314176113471077E-7	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999992046100172	WITHOUT_CLASSIFICATION	7.953899826690525E-7	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999969214834902	WITHOUT_CLASSIFICATION	3.0785165097242173E-6	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999997521248463	WITHOUT_CLASSIFICATION	2.478751538021242E-7	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999996799809998	WITHOUT_CLASSIFICATION	3.2001900022999544E-7	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999994521503484	WITHOUT_CLASSIFICATION	5.478496515909903E-7	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999980581684518	WITHOUT_CLASSIFICATION	1.9418315481234833E-6	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999995084155385	WITHOUT_CLASSIFICATION	4.915844614516613E-7	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999994328523966	WITHOUT_CLASSIFICATION	5.671476034275376E-7	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999998698294991	WITHOUT_CLASSIFICATION	1.3017050104296024E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999998985745414	WITHOUT_CLASSIFICATION	1.0142545857672696E-7	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9999810686922926	WITHOUT_CLASSIFICATION	1.8931307707343894E-5	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9999898861675531	WITHOUT_CLASSIFICATION	1.0113832446904905E-5	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999998742243488	WITHOUT_CLASSIFICATION	1.2577565124851725E-7	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999975875159295	WITHOUT_CLASSIFICATION	2.412484070501164E-6	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999974825098277	WITHOUT_CLASSIFICATION	2.5174901723007606E-6	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999889739697962	WITHOUT_CLASSIFICATION	1.1026030203625885E-5	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.9999921353967504	WITHOUT_CLASSIFICATION	7.864603249567747E-6	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.9999991087588692	WITHOUT_CLASSIFICATION	8.912411308801354E-7	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999971952003016	WITHOUT_CLASSIFICATION	2.804799698452862E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999949380511453	WITHOUT_CLASSIFICATION	5.061948854860798E-6	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999997900934993	WITHOUT_CLASSIFICATION	2.0990650075132605E-7	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999987358964814	WITHOUT_CLASSIFICATION	1.2641035185636688E-6	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999910458217813	WITHOUT_CLASSIFICATION	8.954178218745045E-6	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999992902382291	WITHOUT_CLASSIFICATION	7.097617708956918E-7	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999998208621517	WITHOUT_CLASSIFICATION	1.7913784844374204E-7	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999994634815553	WITHOUT_CLASSIFICATION	5.365184447203707E-7	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999971952003016	WITHOUT_CLASSIFICATION	2.804799698452862E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999949380511453	WITHOUT_CLASSIFICATION	5.061948854860798E-6	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999999054865152	WITHOUT_CLASSIFICATION	9.451348491984762E-8	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9999365842664405	WITHOUT_CLASSIFICATION	6.341573355954048E-5	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999963010973707	WITHOUT_CLASSIFICATION	3.698902629284576E-6	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999999402844187	WITHOUT_CLASSIFICATION	5.971558123694511E-8	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999992105278354	WITHOUT_CLASSIFICATION	7.894721646611188E-7	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.999999903029903	WITHOUT_CLASSIFICATION	9.697009689246824E-8	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999917681325065	WITHOUT_CLASSIFICATION	8.231867493519205E-6	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.999986104218903	WITHOUT_CLASSIFICATION	1.3895781097156913E-5	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999918555889019	WITHOUT_CLASSIFICATION	8.144411098080348E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999799588417985	WITHOUT_CLASSIFICATION	2.0041158201540596E-5	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999997678287739	WITHOUT_CLASSIFICATION	2.3217122620163968E-7	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999799588417985	WITHOUT_CLASSIFICATION	2.0041158201540596E-5	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999999828922049	WITHOUT_CLASSIFICATION	1.710779508301344E-8	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999923137908244	WITHOUT_CLASSIFICATION	7.686209175528871E-6	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999999684578251	WITHOUT_CLASSIFICATION	3.1542174893744784E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988627726211	WITHOUT_CLASSIFICATION	1.1372273788548088E-6	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999979706120773	WITHOUT_CLASSIFICATION	2.029387922617415E-6	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9997466418769837	WITHOUT_CLASSIFICATION	2.5335812301628994E-4	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9997466418769837	WITHOUT_CLASSIFICATION	2.5335812301628994E-4	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999995137511002	WITHOUT_CLASSIFICATION	4.862488998200705E-7	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9999995822056182	WITHOUT_CLASSIFICATION	4.177943816704829E-7	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999994444634102	WITHOUT_CLASSIFICATION	5.555365898172944E-7	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999879676814154	WITHOUT_CLASSIFICATION	1.20323185845097E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9999672758895267	WITHOUT_CLASSIFICATION	3.272411047330979E-5	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9999998006263864	WITHOUT_CLASSIFICATION	1.9937361358931438E-7	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999956857427075	WITHOUT_CLASSIFICATION	4.314257292504465E-6	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999992038796095	WITHOUT_CLASSIFICATION	7.9612039055125E-7	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999879376155757	WITHOUT_CLASSIFICATION	1.2062384424246177E-5	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9999382277537207	WITHOUT_CLASSIFICATION	6.177224627935729E-5	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.9999723236962451	WITHOUT_CLASSIFICATION	2.7676303754897907E-5	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9999692344098532	WITHOUT_CLASSIFICATION	3.076559014679352E-5	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9998944768696741	WITHOUT_CLASSIFICATION	1.0552313032585476E-4	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999986687886623	WITHOUT_CLASSIFICATION	1.3312113377235806E-6	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9999948166519373	WITHOUT_CLASSIFICATION	5.183348062563518E-6	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.999997988147169	WITHOUT_CLASSIFICATION	2.0118528309679007E-6	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999996278085261	WITHOUT_CLASSIFICATION	3.7219147392387593E-7	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999984903872133	WITHOUT_CLASSIFICATION	1.5096127865811818E-6	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999997929065594	WITHOUT_CLASSIFICATION	2.070934405680199E-7	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9998538885021215	WITHOUT_CLASSIFICATION	1.461114978784964E-4	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999979587288856	WITHOUT_CLASSIFICATION	2.041271114327045E-6	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999823050353206	WITHOUT_CLASSIFICATION	1.769496467940812E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999990634050931	WITHOUT_CLASSIFICATION	9.365949069565523E-7	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9999974259446156	WITHOUT_CLASSIFICATION	2.5740553843438556E-6	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999984363941535	WITHOUT_CLASSIFICATION	1.5636058464787866E-6	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9999368472455414	WITHOUT_CLASSIFICATION	6.315275445862865E-5	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9999994802147207	WITHOUT_CLASSIFICATION	5.197852793089423E-7	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.999996117904724	WITHOUT_CLASSIFICATION	3.882095276057753E-6	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9999984476751822	WITHOUT_CLASSIFICATION	1.5523248177636107E-6	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.999998107179705	WITHOUT_CLASSIFICATION	1.8928202949390233E-6	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.9999980742048868	WITHOUT_CLASSIFICATION	1.925795113047973E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999939600738063	WITHOUT_CLASSIFICATION	6.039926193729443E-6	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999956857427075	WITHOUT_CLASSIFICATION	4.314257292504465E-6	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.999999801735897	WITHOUT_CLASSIFICATION	1.982641030625724E-7	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.9999728973104673	WITHOUT_CLASSIFICATION	2.7102689532659966E-5	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9994051669581228	WITHOUT_CLASSIFICATION	5.948330418771839E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9999875869310255	WITHOUT_CLASSIFICATION	1.2413068974630286E-5	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999996683809329	WITHOUT_CLASSIFICATION	3.31619067117301E-7	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999869682752727	WITHOUT_CLASSIFICATION	1.3031724727348237E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999879676814154	WITHOUT_CLASSIFICATION	1.20323185845097E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999879676814154	WITHOUT_CLASSIFICATION	1.20323185845097E-5	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999946414083305	WITHOUT_CLASSIFICATION	5.358591669497707E-6	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999983722321865	WITHOUT_CLASSIFICATION	1.6277678135228988E-6	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.999985919370619	WITHOUT_CLASSIFICATION	1.4080629381050078E-5	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999979973950793	WITHOUT_CLASSIFICATION	2.002604920587014E-6	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9999991173163575	WITHOUT_CLASSIFICATION	8.826836424777476E-7	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999997447870563	WITHOUT_CLASSIFICATION	2.552129436450857E-7	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.999999216204918	WITHOUT_CLASSIFICATION	7.837950818624165E-7	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999997837175364	WITHOUT_CLASSIFICATION	2.1628246352426153E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999895550138967	WITHOUT_CLASSIFICATION	1.0444986103201496E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999997112747933	WITHOUT_CLASSIFICATION	2.8872520671063443E-7	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9999967004010084	WITHOUT_CLASSIFICATION	3.2995989915947984E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998245530958043	WITHOUT_CLASSIFICATION	1.7544690419564013E-4	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9999780087186765	WITHOUT_CLASSIFICATION	2.199128132361611E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999997112747933	WITHOUT_CLASSIFICATION	2.8872520671063443E-7	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999890972848198	WITHOUT_CLASSIFICATION	1.0902715180287864E-5	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999998486030542	WITHOUT_CLASSIFICATION	1.5139694578720773E-7	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999948074909356	WITHOUT_CLASSIFICATION	5.1925090644741814E-6	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9930181601137718	WITHOUT_CLASSIFICATION	0.006981839886228234	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998245530958043	WITHOUT_CLASSIFICATION	1.7544690419564013E-4	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.999992858450063	WITHOUT_CLASSIFICATION	7.141549936990751E-6	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999985303973932	WITHOUT_CLASSIFICATION	1.4696026068702243E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998173685208	WITHOUT_CLASSIFICATION	1.8263147907382758E-7	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999998311021656	WITHOUT_CLASSIFICATION	1.6889783432548304E-7	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9998322357535899	WITHOUT_CLASSIFICATION	1.6776424641014106E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999987145086672	WITHOUT_CLASSIFICATION	1.2854913327923408E-6	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999997574852854	WITHOUT_CLASSIFICATION	2.425147146341475E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999891325966391	WITHOUT_CLASSIFICATION	1.0867403360951768E-5	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999998032072046	WITHOUT_CLASSIFICATION	1.96792795386436E-7	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999997369138965	WITHOUT_CLASSIFICATION	2.630861034323433E-7	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999993173608578	WITHOUT_CLASSIFICATION	6.826391421712322E-7	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9999435838169165	WITHOUT_CLASSIFICATION	5.6416183083404296E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999997112747933	WITHOUT_CLASSIFICATION	2.8872520671063443E-7	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.999992858450063	WITHOUT_CLASSIFICATION	7.141549936990751E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998173685208	WITHOUT_CLASSIFICATION	1.8263147907382758E-7	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999931810242179	WITHOUT_CLASSIFICATION	6.818975782161907E-6	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999997688403223	WITHOUT_CLASSIFICATION	2.3115967780089647E-7	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999990082812913	WITHOUT_CLASSIFICATION	9.91718708781629E-7	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998245530958043	WITHOUT_CLASSIFICATION	1.7544690419564013E-4	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9999979607502051	WITHOUT_CLASSIFICATION	2.0392497949620176E-6	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999876348942404	WITHOUT_CLASSIFICATION	1.236510575971213E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999745754300245	WITHOUT_CLASSIFICATION	2.5424569975409975E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999773916290734	WITHOUT_CLASSIFICATION	2.260837092657301E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999891325966391	WITHOUT_CLASSIFICATION	1.0867403360951768E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999890972848198	WITHOUT_CLASSIFICATION	1.0902715180287864E-5	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.9999864924926225	WITHOUT_CLASSIFICATION	1.3507507377439086E-5	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999956862805881	WITHOUT_CLASSIFICATION	4.31371941184105E-6	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.999990485456667	WITHOUT_CLASSIFICATION	9.51454333298978E-6	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9999942034502746	WITHOUT_CLASSIFICATION	5.796549725495626E-6	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9999741909926263	WITHOUT_CLASSIFICATION	2.580900737372273E-5	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9999482404261508	WITHOUT_CLASSIFICATION	5.175957384918863E-5	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9999807203263613	WITHOUT_CLASSIFICATION	1.927967363861262E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988627726211	WITHOUT_CLASSIFICATION	1.1372273788548088E-6	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998751149897	WITHOUT_CLASSIFICATION	1.2488501040802634E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999654199722748	WITHOUT_CLASSIFICATION	3.458002772523721E-5	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999972273297932	WITHOUT_CLASSIFICATION	2.7726702067261582E-6	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9998827462322694	WITHOUT_CLASSIFICATION	1.1725376773066353E-4	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999701094950083	WITHOUT_CLASSIFICATION	2.9890504991655545E-5	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999885231229355	WITHOUT_CLASSIFICATION	1.1476877064373966E-5	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999997457631385	WITHOUT_CLASSIFICATION	2.5423686147414514E-7	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999983231507364	WITHOUT_CLASSIFICATION	1.6768492635901711E-6	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999994324945404	WITHOUT_CLASSIFICATION	5.675054596420112E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999773916290734	WITHOUT_CLASSIFICATION	2.260837092657301E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999654199722748	WITHOUT_CLASSIFICATION	3.458002772523721E-5	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.999988415539376	WITHOUT_CLASSIFICATION	1.1584460624067344E-5	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9999902030374556	WITHOUT_CLASSIFICATION	9.796962544433273E-6	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9999334828823028	WITHOUT_CLASSIFICATION	6.65171176972187E-5	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.999982682522428	WITHOUT_CLASSIFICATION	1.7317477572015758E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9999635356053157	WITHOUT_CLASSIFICATION	3.6464394684275905E-5	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999997496206686	WITHOUT_CLASSIFICATION	2.5037933132155764E-7	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999978502695739	WITHOUT_CLASSIFICATION	2.14973042609871E-6	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9999921073298126	WITHOUT_CLASSIFICATION	7.892670187337668E-6	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.999999865343789	WITHOUT_CLASSIFICATION	1.3465621088059827E-7	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999972022462928	WITHOUT_CLASSIFICATION	2.7977537071351407E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999969052909261	WITHOUT_CLASSIFICATION	3.0947090740177295E-6	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999985096884312	WITHOUT_CLASSIFICATION	1.490311568836475E-6	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9999997358639358	WITHOUT_CLASSIFICATION	2.6413606425790554E-7	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9999969012820131	WITHOUT_CLASSIFICATION	3.0987179869492663E-6	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9999892197771604	WITHOUT_CLASSIFICATION	1.0780222839616094E-5	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999989891602342	WITHOUT_CLASSIFICATION	1.0108397657200295E-6	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9999967342323134	WITHOUT_CLASSIFICATION	3.2657676866203754E-6	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999689129632969	WITHOUT_CLASSIFICATION	3.1087036703094634E-5	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999992620652123	WITHOUT_CLASSIFICATION	7.379347876752064E-7	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9999815594009075	WITHOUT_CLASSIFICATION	1.8440599092454996E-5	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999902570370112	WITHOUT_CLASSIFICATION	9.742962988797547E-6	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999993802189775	WITHOUT_CLASSIFICATION	6.197810225318642E-7	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999998423654257	WITHOUT_CLASSIFICATION	1.576345743732653E-7	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999997220574891	WITHOUT_CLASSIFICATION	2.779425108369224E-7	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999998584939278	WITHOUT_CLASSIFICATION	1.4150607230027714E-7	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.9993713967969216	WITHOUT_CLASSIFICATION	6.286032030785474E-4	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999964966462649	WITHOUT_CLASSIFICATION	3.503353735198342E-6	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999897698571678	WITHOUT_CLASSIFICATION	1.023014283223613E-5	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999999049872791	WITHOUT_CLASSIFICATION	9.501272091831372E-8	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.9990367426361554	WITHOUT_CLASSIFICATION	9.632573638445679E-4	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999968544775394	WITHOUT_CLASSIFICATION	3.1455224606377247E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999925106085094	WITHOUT_CLASSIFICATION	7.4893914907285035E-6	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999989229103511	WITHOUT_CLASSIFICATION	1.0770896488992792E-6	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999997042072182	WITHOUT_CLASSIFICATION	2.957927818591667E-7	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999998335442268	WITHOUT_CLASSIFICATION	1.6645577325044778E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999956241657609	WITHOUT_CLASSIFICATION	4.375834239061574E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999955316653685	WITHOUT_CLASSIFICATION	4.468334631545365E-6	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999995458839859	WITHOUT_CLASSIFICATION	4.5411601418997534E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999956241657609	WITHOUT_CLASSIFICATION	4.375834239061574E-6	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999998335442268	WITHOUT_CLASSIFICATION	1.6645577325044778E-7	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999955316653685	WITHOUT_CLASSIFICATION	4.468334631545365E-6	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.9999918594170105	WITHOUT_CLASSIFICATION	8.140582989384924E-6	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999981010509058	WITHOUT_CLASSIFICATION	1.8989490942260722E-6	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999999823749136	WITHOUT_CLASSIFICATION	1.7625086447568363E-8	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9999979530892525	WITHOUT_CLASSIFICATION	2.046910747463064E-6	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999998769083058	WITHOUT_CLASSIFICATION	1.2309169407550142E-7	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9999855867912931	WITHOUT_CLASSIFICATION	1.4413208706884329E-5	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.999995082605008	WITHOUT_CLASSIFICATION	4.9173949919413025E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999834738660578	WITHOUT_CLASSIFICATION	1.6526133942280272E-5	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9999992379853058	WITHOUT_CLASSIFICATION	7.620146942351424E-7	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999988507915883	WITHOUT_CLASSIFICATION	1.1492084116897852E-6	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999987186736732	WITHOUT_CLASSIFICATION	1.281326326838287E-6	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.999998050410671	WITHOUT_CLASSIFICATION	1.9495893288943107E-6	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.99999881643658	WITHOUT_CLASSIFICATION	1.1835634200842061E-6	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9999837054143413	WITHOUT_CLASSIFICATION	1.6294585658613525E-5	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999989536294166	WITHOUT_CLASSIFICATION	1.0463705834255256E-6	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999998607146087	WITHOUT_CLASSIFICATION	1.3928539140128068E-7	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999994127678964	WITHOUT_CLASSIFICATION	5.872321036373132E-7	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999999291159314	WITHOUT_CLASSIFICATION	7.088406864492882E-8	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999998598277912	WITHOUT_CLASSIFICATION	1.4017220878818762E-7	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999912476798917	WITHOUT_CLASSIFICATION	8.752320108322086E-6	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9999979857511682	WITHOUT_CLASSIFICATION	2.014248831889106E-6	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999994118138344	WITHOUT_CLASSIFICATION	5.881861655451316E-7	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999992655727462	WITHOUT_CLASSIFICATION	7.344272538485747E-7	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.999999738220074	WITHOUT_CLASSIFICATION	2.617799260240584E-7	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999934321291593	WITHOUT_CLASSIFICATION	6.567870840723448E-6	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999934321291593	WITHOUT_CLASSIFICATION	6.567870840723448E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999998654680051	WITHOUT_CLASSIFICATION	1.3453199495305612E-7	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999998654680051	WITHOUT_CLASSIFICATION	1.3453199495305612E-7	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.9999995391906542	WITHOUT_CLASSIFICATION	4.6080934579845954E-7	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999994127678964	WITHOUT_CLASSIFICATION	5.872321036373132E-7	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9999367812971779	WITHOUT_CLASSIFICATION	6.321870282213779E-5	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999998825316612	WITHOUT_CLASSIFICATION	1.1746833894056435E-7	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.999961644109251	WITHOUT_CLASSIFICATION	3.8355890749028534E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.999961644109251	WITHOUT_CLASSIFICATION	3.8355890749028534E-5	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.999994946742328	WITHOUT_CLASSIFICATION	5.053257671960543E-6	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999996709486915	WITHOUT_CLASSIFICATION	3.2905130847716064E-7	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999997648579682	WITHOUT_CLASSIFICATION	2.3514203183577422E-7	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999991695103417	WITHOUT_CLASSIFICATION	8.304896583562384E-7	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999988992365596	WITHOUT_CLASSIFICATION	1.10076344040941E-6	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999999474628508	WITHOUT_CLASSIFICATION	5.2537149086717864E-8	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9999866142220399	WITHOUT_CLASSIFICATION	1.3385777959984307E-5	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999996962389627	WITHOUT_CLASSIFICATION	3.0376103726173103E-7	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9999940549059723	WITHOUT_CLASSIFICATION	5.945094027762234E-6	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999838645023161	WITHOUT_CLASSIFICATION	1.613549768379686E-5	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999993138331407	WITHOUT_CLASSIFICATION	6.861668592914844E-7	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9999989952468863	WITHOUT_CLASSIFICATION	1.0047531136817166E-6	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999991058488553	WITHOUT_CLASSIFICATION	8.941511446988683E-7	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999932885720296	WITHOUT_CLASSIFICATION	6.711427970425301E-6	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9999887239574329	WITHOUT_CLASSIFICATION	1.127604256713791E-5	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999993582442114	WITHOUT_CLASSIFICATION	6.417557886661716E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963150693602	WITHOUT_CLASSIFICATION	3.684930639904128E-6	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999964443361791	WITHOUT_CLASSIFICATION	3.5556638209799347E-6	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999999839031448	WITHOUT_CLASSIFICATION	1.6096855234273655E-8	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999998362139126	WITHOUT_CLASSIFICATION	1.637860872574914E-7	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999997492481267	WITHOUT_CLASSIFICATION	2.5075187321816473E-7	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999997789762072	WITHOUT_CLASSIFICATION	2.2102379276476018E-7	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999991263604735	WITHOUT_CLASSIFICATION	8.736395265289647E-7	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999986569022676	WITHOUT_CLASSIFICATION	1.3430977323065695E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997638512203302	WITHOUT_CLASSIFICATION	2.361487796696841E-4	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999965763837957	WITHOUT_CLASSIFICATION	3.4236162043163304E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999654199722748	WITHOUT_CLASSIFICATION	3.458002772523721E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999985096884312	WITHOUT_CLASSIFICATION	1.490311568836475E-6	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999812347943807	WITHOUT_CLASSIFICATION	1.8765205619225762E-5	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999995700686704	WITHOUT_CLASSIFICATION	4.2993132959382625E-7	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999904430842115	WITHOUT_CLASSIFICATION	9.556915788549757E-6	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983025569094	WITHOUT_CLASSIFICATION	1.6974430906291588E-6	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999676600488531	WITHOUT_CLASSIFICATION	3.233995114689336E-5	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999676600488531	WITHOUT_CLASSIFICATION	3.233995114689336E-5	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999998655069265	WITHOUT_CLASSIFICATION	1.3449307349952583E-7	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.999997103261732	WITHOUT_CLASSIFICATION	2.896738267969397E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999958525486652	WITHOUT_CLASSIFICATION	4.1474513348195395E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999958525486652	WITHOUT_CLASSIFICATION	4.1474513348195395E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999995466816386	WITHOUT_CLASSIFICATION	4.5331836142722253E-7	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9999427352317548	WITHOUT_CLASSIFICATION	5.7264768245097115E-5	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9999756871862328	WITHOUT_CLASSIFICATION	2.4312813767199066E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999972302070829	WITHOUT_CLASSIFICATION	2.769792917122951E-6	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.9999920177437407	WITHOUT_CLASSIFICATION	7.98225625944043E-6	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999967058700691	WITHOUT_CLASSIFICATION	3.294129930878423E-6	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999992226635959	WITHOUT_CLASSIFICATION	7.773364041290101E-7	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999991667964464	WITHOUT_CLASSIFICATION	8.332035536372288E-7	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999992318213168	WITHOUT_CLASSIFICATION	7.681786832548578E-7	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999992318213168	WITHOUT_CLASSIFICATION	7.681786832548578E-7	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999999895216012	WITHOUT_CLASSIFICATION	1.0478398849559391E-8	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999997875500823	WITHOUT_CLASSIFICATION	2.1244991774438964E-7	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999997875500823	WITHOUT_CLASSIFICATION	2.1244991774438964E-7	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.999999149421412	WITHOUT_CLASSIFICATION	8.505785879553511E-7	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999982334113771	WITHOUT_CLASSIFICATION	1.7665886230488008E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9940513538015344	WITHOUT_CLASSIFICATION	0.0059486461984654985	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999997706203999	WITHOUT_CLASSIFICATION	2.2937960003598708E-7	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999997471358851	WITHOUT_CLASSIFICATION	2.5286411483316236E-7	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999991917169364	WITHOUT_CLASSIFICATION	8.082830635884193E-7	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999829744540935	WITHOUT_CLASSIFICATION	1.702554590661164E-5	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999988217106532	WITHOUT_CLASSIFICATION	1.1782893467890138E-6	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999968832789001	WITHOUT_CLASSIFICATION	3.1167210997487425E-6	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.999998651190968	WITHOUT_CLASSIFICATION	1.348809032133361E-6	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999999981318314	WITHOUT_CLASSIFICATION	1.868168627204128E-9	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9999997520174467	WITHOUT_CLASSIFICATION	2.479825532213727E-7	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999933767978997	WITHOUT_CLASSIFICATION	6.623202100268419E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999933767978997	WITHOUT_CLASSIFICATION	6.623202100268419E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999933767978997	WITHOUT_CLASSIFICATION	6.623202100268419E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999933767978997	WITHOUT_CLASSIFICATION	6.623202100268419E-6	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999953392257431	WITHOUT_CLASSIFICATION	4.660774256835849E-6	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999995393765951	WITHOUT_CLASSIFICATION	4.606234048920497E-7	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9999695686102834	WITHOUT_CLASSIFICATION	3.04313897165949E-5	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.999944093331733	WITHOUT_CLASSIFICATION	5.590666826703651E-5	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999985758856217	WITHOUT_CLASSIFICATION	1.4241143782735248E-6	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9999971369794645	WITHOUT_CLASSIFICATION	2.863020535487721E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998550751436128	WITHOUT_CLASSIFICATION	1.4492485638716525E-4	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999995742835193	WITHOUT_CLASSIFICATION	4.2571648073447155E-7	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999742482828243	WITHOUT_CLASSIFICATION	2.5751717175611488E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998550751436128	WITHOUT_CLASSIFICATION	1.4492485638716525E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998550751436128	WITHOUT_CLASSIFICATION	1.4492485638716525E-4	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999998527142403	WITHOUT_CLASSIFICATION	1.4728575977402073E-7	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999863811828961	WITHOUT_CLASSIFICATION	1.3618817103881756E-5	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999976555514202	WITHOUT_CLASSIFICATION	2.3444485798468103E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999992578084135	WITHOUT_CLASSIFICATION	7.421915865431185E-7	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999986383544922	WITHOUT_CLASSIFICATION	1.3616455078741944E-6	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999917304577325	WITHOUT_CLASSIFICATION	8.269542267625988E-6	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999967686167458	WITHOUT_CLASSIFICATION	3.2313832541239532E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999992578084135	WITHOUT_CLASSIFICATION	7.421915865431185E-7	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9999901422992307	WITHOUT_CLASSIFICATION	9.857700769291412E-6	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999995318774886	WITHOUT_CLASSIFICATION	4.6812251146878016E-7	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999904185472714	WITHOUT_CLASSIFICATION	9.581452728546023E-6	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999880445392044	WITHOUT_CLASSIFICATION	1.195546079562733E-5	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999957710117046	WITHOUT_CLASSIFICATION	4.228988295373916E-6	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9999998249812498	WITHOUT_CLASSIFICATION	1.7501875014143685E-7	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999999137236549	WITHOUT_CLASSIFICATION	8.627634506268337E-8	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9999970358537481	WITHOUT_CLASSIFICATION	2.964146251915461E-6	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998686552163	WITHOUT_CLASSIFICATION	1.313447837616886E-7	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.999999240343621	WITHOUT_CLASSIFICATION	7.59656378993139E-7	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998161233358	WITHOUT_CLASSIFICATION	1.8387666427378675E-7	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999990339208333	WITHOUT_CLASSIFICATION	9.660791666709443E-7	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999961624748626	WITHOUT_CLASSIFICATION	3.837525137439886E-6	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9997926790690999	WITHOUT_CLASSIFICATION	2.0732093090023403E-4	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999998853926896	WITHOUT_CLASSIFICATION	1.1460731043574587E-7	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9999967943800916	WITHOUT_CLASSIFICATION	3.2056199083677504E-6	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999997641065087	WITHOUT_CLASSIFICATION	2.3589349135213747E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.999998914067037	WITHOUT_CLASSIFICATION	1.085932962990167E-6	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999997995364579	WITHOUT_CLASSIFICATION	2.0046354221156958E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.999998914067037	WITHOUT_CLASSIFICATION	1.085932962990167E-6	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999998610795586	WITHOUT_CLASSIFICATION	1.3892044142849916E-7	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999999043805007	WITHOUT_CLASSIFICATION	9.561949932862979E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999969216303956	WITHOUT_CLASSIFICATION	3.078369604428102E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999751882772929	WITHOUT_CLASSIFICATION	2.4811722707131394E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999997641065087	WITHOUT_CLASSIFICATION	2.3589349135213747E-7	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999997995364579	WITHOUT_CLASSIFICATION	2.0046354221156958E-7	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999998610795586	WITHOUT_CLASSIFICATION	1.3892044142849916E-7	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.999999649598516	WITHOUT_CLASSIFICATION	3.5040148404848893E-7	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9999841629385291	WITHOUT_CLASSIFICATION	1.583706147094946E-5	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.9999971474799105	WITHOUT_CLASSIFICATION	2.8525200895772514E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9999969808132897	WITHOUT_CLASSIFICATION	3.019186710359406E-6	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999992243093035	WITHOUT_CLASSIFICATION	7.75690696354432E-7	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999962748038034	WITHOUT_CLASSIFICATION	3.725196196506966E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963150693602	WITHOUT_CLASSIFICATION	3.684930639904128E-6	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999999043805007	WITHOUT_CLASSIFICATION	9.561949932862979E-8	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999999470902856	WITHOUT_CLASSIFICATION	5.290971427698406E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9999962268388883	WITHOUT_CLASSIFICATION	3.773161111551002E-6	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999990888368829	WITHOUT_CLASSIFICATION	9.111631170780762E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963150693602	WITHOUT_CLASSIFICATION	3.684930639904128E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999654199722748	WITHOUT_CLASSIFICATION	3.458002772523721E-5	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999997262933081	WITHOUT_CLASSIFICATION	2.7370669186461385E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963150693602	WITHOUT_CLASSIFICATION	3.684930639904128E-6	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999994404594778	WITHOUT_CLASSIFICATION	5.595405221342807E-7	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999913884835185	WITHOUT_CLASSIFICATION	8.61151648145451E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999654199722748	WITHOUT_CLASSIFICATION	3.458002772523721E-5	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9999894523285585	WITHOUT_CLASSIFICATION	1.0547671441416985E-5	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999997449299278	WITHOUT_CLASSIFICATION	2.5507007211725484E-7	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999992145446576	WITHOUT_CLASSIFICATION	7.854553424729405E-7	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999970328269907	WITHOUT_CLASSIFICATION	2.967173009172819E-6	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.999997643333361	WITHOUT_CLASSIFICATION	2.3566666390213114E-6	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999999085754981	WITHOUT_CLASSIFICATION	9.142450184474124E-8	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999991491095773	WITHOUT_CLASSIFICATION	8.508904227343493E-7	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9999870586603709	WITHOUT_CLASSIFICATION	1.2941339629076575E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999205196798456	WITHOUT_CLASSIFICATION	7.948032015439767E-5	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999988088710687	WITHOUT_CLASSIFICATION	1.1911289312855042E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9940513538015344	WITHOUT_CLASSIFICATION	0.0059486461984654985	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.99998787562578	WITHOUT_CLASSIFICATION	1.212437421995887E-5	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9999942643824495	WITHOUT_CLASSIFICATION	5.73561755037103E-6	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9999989635741303	WITHOUT_CLASSIFICATION	1.0364258696710283E-6	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999821318489742	WITHOUT_CLASSIFICATION	1.7868151025780903E-5	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999996684252673	WITHOUT_CLASSIFICATION	3.315747327161647E-7	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999999642047291	WITHOUT_CLASSIFICATION	3.5795270897652805E-8	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999999653451761	WITHOUT_CLASSIFICATION	3.4654823877207114E-8	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9999938679363071	WITHOUT_CLASSIFICATION	6.132063692964562E-6	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999998289423822	WITHOUT_CLASSIFICATION	1.710576179359989E-7	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999994220124158	WITHOUT_CLASSIFICATION	5.779875842414771E-7	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9921996128402726	WITHOUT_CLASSIFICATION	0.007800387159727408	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999992703746011	WITHOUT_CLASSIFICATION	7.29625398763513E-7	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999986914922478	WITHOUT_CLASSIFICATION	1.3085077520868812E-6	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999993546758449	WITHOUT_CLASSIFICATION	6.453241551702169E-7	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999963239619247	WITHOUT_CLASSIFICATION	3.6760380752563674E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9998547647979489	WITHOUT_CLASSIFICATION	1.4523520205108673E-4	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999998534465794	WITHOUT_CLASSIFICATION	1.465534206989827E-7	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.999998280847582	WITHOUT_CLASSIFICATION	1.7191524179862429E-6	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999997758180019	WITHOUT_CLASSIFICATION	2.2418199817046833E-7	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9999884152529279	WITHOUT_CLASSIFICATION	1.1584747072146255E-5	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999996925697193	WITHOUT_CLASSIFICATION	3.074302806757629E-7	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9974642680858514	WITHOUT_CLASSIFICATION	0.0025357319141485956	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999981434541443	WITHOUT_CLASSIFICATION	1.8565458556290087E-6	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999945326976019	WITHOUT_CLASSIFICATION	5.467302398179798E-6	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9999181364255465	WITHOUT_CLASSIFICATION	8.18635744534418E-5	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999572112529471	WITHOUT_CLASSIFICATION	4.278874705293374E-5	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999996570873325	WITHOUT_CLASSIFICATION	3.429126674904941E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9919497386922921	WITHOUT_CLASSIFICATION	0.008050261307707866	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999998787607015	WITHOUT_CLASSIFICATION	1.2123929841035397E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999654199722748	WITHOUT_CLASSIFICATION	3.458002772523721E-5	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.999999471103578	WITHOUT_CLASSIFICATION	5.288964220582222E-7	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999299347446431	WITHOUT_CLASSIFICATION	7.00652553569562E-5	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999299347446431	WITHOUT_CLASSIFICATION	7.00652553569562E-5	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.999999943067739	WITHOUT_CLASSIFICATION	5.693226110749252E-8	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999999085754981	WITHOUT_CLASSIFICATION	9.142450184474124E-8	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9999899684198132	WITHOUT_CLASSIFICATION	1.003158018675242E-5	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999985985689638	WITHOUT_CLASSIFICATION	1.4014310361812267E-6	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999997700097963	WITHOUT_CLASSIFICATION	2.2999020361971782E-7	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999999890478626	WITHOUT_CLASSIFICATION	1.0952137362271821E-8	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9999958752340927	WITHOUT_CLASSIFICATION	4.1247659071887486E-6	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9998117596252132	WITHOUT_CLASSIFICATION	1.882403747868944E-4	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9999995528390678	WITHOUT_CLASSIFICATION	4.4716093210525023E-7	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9999999645622956	WITHOUT_CLASSIFICATION	3.5437704327070617E-8	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.999999740063131	WITHOUT_CLASSIFICATION	2.599368690676431E-7	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.9999997141457765	WITHOUT_CLASSIFICATION	2.858542235728068E-7	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999999319307552	WITHOUT_CLASSIFICATION	6.806924478953896E-8	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999883430448979	WITHOUT_CLASSIFICATION	1.1656955102078682E-5	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999992977115327	WITHOUT_CLASSIFICATION	7.022884672662138E-7	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999892715431	WITHOUT_CLASSIFICATION	1.0728456840666338E-8	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999989900065634	WITHOUT_CLASSIFICATION	1.0099934364944487E-6	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999996200342133	WITHOUT_CLASSIFICATION	3.7996578670580973E-7	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999960241868435	WITHOUT_CLASSIFICATION	3.975813156439585E-6	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999998394520682	WITHOUT_CLASSIFICATION	1.6054793187321347E-7	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999999646814641	WITHOUT_CLASSIFICATION	3.531853594619862E-8	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999990611966566	WITHOUT_CLASSIFICATION	9.388033434630296E-7	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.999999946021751	WITHOUT_CLASSIFICATION	5.397824903089521E-8	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999997064293259	WITHOUT_CLASSIFICATION	2.935706740789926E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9919497386922921	WITHOUT_CLASSIFICATION	0.008050261307707866	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999997918403205	WITHOUT_CLASSIFICATION	2.081596794086297E-7	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999998992569893	WITHOUT_CLASSIFICATION	1.0074301075329969E-7	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999995772916749	WITHOUT_CLASSIFICATION	4.2270832507040037E-7	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999951014567314	WITHOUT_CLASSIFICATION	4.898543268607049E-6	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9999868654476712	WITHOUT_CLASSIFICATION	1.3134552328732785E-5	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999999932228684	WITHOUT_CLASSIFICATION	6.777131623604061E-9	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999815259701795	WITHOUT_CLASSIFICATION	1.8474029820394787E-5	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999988819233079	WITHOUT_CLASSIFICATION	1.118076692064014E-6	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999997857218347	WITHOUT_CLASSIFICATION	2.1427816523097392E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.999998705827223	WITHOUT_CLASSIFICATION	1.2941727769683837E-6	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.999999775981814	WITHOUT_CLASSIFICATION	2.2401818597210027E-7	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999827549189898	WITHOUT_CLASSIFICATION	1.7245081010187526E-5	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9999796855043049	WITHOUT_CLASSIFICATION	2.0314495695091896E-5	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999999618436433	WITHOUT_CLASSIFICATION	3.8156356644405986E-8	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999990559311099	WITHOUT_CLASSIFICATION	9.440688899616819E-7	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999990559311099	WITHOUT_CLASSIFICATION	9.440688899616819E-7	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999973323116349	WITHOUT_CLASSIFICATION	2.6676883651181797E-6	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9999998538342308	WITHOUT_CLASSIFICATION	1.4616576916956765E-7	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9997968575868303	WITHOUT_CLASSIFICATION	2.0314241316974542E-4	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9997968575868303	WITHOUT_CLASSIFICATION	2.0314241316974542E-4	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.999999737783775	WITHOUT_CLASSIFICATION	2.622162249880156E-7	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999912549801379	WITHOUT_CLASSIFICATION	8.745019862188361E-6	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.9999999925869412	WITHOUT_CLASSIFICATION	7.413058882740856E-9	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999998555617511	WITHOUT_CLASSIFICATION	1.4443824899055375E-7	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999978230637346	WITHOUT_CLASSIFICATION	2.1769362653062596E-6	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983068872684	WITHOUT_CLASSIFICATION	1.693112731549429E-6	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.999999763749609	WITHOUT_CLASSIFICATION	2.3625039096571288E-7	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.999999763749609	WITHOUT_CLASSIFICATION	2.3625039096571288E-7	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989654974067	WITHOUT_CLASSIFICATION	1.0345025932666834E-6	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9999988898410845	WITHOUT_CLASSIFICATION	1.11015891545488E-6	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999889701229226	WITHOUT_CLASSIFICATION	1.1029877077328426E-5	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999990862026297	WITHOUT_CLASSIFICATION	9.13797370380073E-7	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999990862026297	WITHOUT_CLASSIFICATION	9.13797370380073E-7	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999984264690358	WITHOUT_CLASSIFICATION	1.573530964127335E-6	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999975948416177	WITHOUT_CLASSIFICATION	2.4051583824567607E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999999057908533	WITHOUT_CLASSIFICATION	9.420914673413547E-8	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999986871717221	WITHOUT_CLASSIFICATION	1.3128282778453627E-6	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999995861974683	WITHOUT_CLASSIFICATION	4.138025317594761E-7	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999999023622119	WITHOUT_CLASSIFICATION	9.763778800485081E-8	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999996956683982	WITHOUT_CLASSIFICATION	3.0433160181827476E-7	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999993851578298	WITHOUT_CLASSIFICATION	6.148421701547118E-7	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999999735618548	WITHOUT_CLASSIFICATION	2.6438145239703103E-8	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999986646048585	WITHOUT_CLASSIFICATION	1.3353951414931953E-6	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9999918802906729	WITHOUT_CLASSIFICATION	8.119709327045358E-6	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999998861321682	WITHOUT_CLASSIFICATION	1.1386783181872501E-7	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9999940842976531	WITHOUT_CLASSIFICATION	5.915702346783789E-6	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999999991724134	WITHOUT_CLASSIFICATION	8.275866178807451E-10	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.999984249676273	WITHOUT_CLASSIFICATION	1.57503237270479E-5	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999987210022595	WITHOUT_CLASSIFICATION	1.2789977405019483E-6	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999991814052748	WITHOUT_CLASSIFICATION	8.185947253372862E-7	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999998986646662	WITHOUT_CLASSIFICATION	1.0133533385918965E-7	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999972409614104	WITHOUT_CLASSIFICATION	2.7590385895970022E-6	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999983233466286	WITHOUT_CLASSIFICATION	1.6766533712957669E-6	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999992484211001	WITHOUT_CLASSIFICATION	7.515789000282655E-7	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999995476240545	WITHOUT_CLASSIFICATION	4.523759454954896E-7	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9999683676887176	WITHOUT_CLASSIFICATION	3.163231128245528E-5	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999909767712866	WITHOUT_CLASSIFICATION	9.023228713433034E-6	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9999897134809476	WITHOUT_CLASSIFICATION	1.0286519052382541E-5	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.99999833031129	WITHOUT_CLASSIFICATION	1.6696887099236448E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999996345178619	WITHOUT_CLASSIFICATION	3.654821381651296E-7	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9999897875943653	WITHOUT_CLASSIFICATION	1.0212405634659444E-5	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999986681222769	WITHOUT_CLASSIFICATION	1.331877723174739E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999996595385164	WITHOUT_CLASSIFICATION	3.4046148349496243E-7	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999998327448557	WITHOUT_CLASSIFICATION	1.6725514429947646E-7	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999989660612142	WITHOUT_CLASSIFICATION	1.0339387858740827E-6	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999994918154639	WITHOUT_CLASSIFICATION	5.081845360715184E-7	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.999897904484846	WITHOUT_CLASSIFICATION	1.0209551515412379E-4	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999997668374052	WITHOUT_CLASSIFICATION	2.331625947661401E-7	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.999992722938217	WITHOUT_CLASSIFICATION	7.2770617831321364E-6	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9999737089568779	WITHOUT_CLASSIFICATION	2.62910431220802E-5	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.999999749091159	WITHOUT_CLASSIFICATION	2.509088410124287E-7	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999933775698254	WITHOUT_CLASSIFICATION	6.622430174601849E-6	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999997543546372	WITHOUT_CLASSIFICATION	2.4564536293050666E-7	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999999602298986	WITHOUT_CLASSIFICATION	3.977010133952779E-8	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9999962310163168	WITHOUT_CLASSIFICATION	3.7689836832320883E-6	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999990704732115	WITHOUT_CLASSIFICATION	9.295267885087485E-7	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.9999988171498154	WITHOUT_CLASSIFICATION	1.1828501845475772E-6	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.999998684030326	WITHOUT_CLASSIFICATION	1.3159696739321373E-6	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999995093272813	WITHOUT_CLASSIFICATION	4.906727186516999E-7	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999984751863323	WITHOUT_CLASSIFICATION	1.5248136677113496E-6	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999991915554381	WITHOUT_CLASSIFICATION	8.084445618112392E-7	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999994994250023	WITHOUT_CLASSIFICATION	5.005749976333382E-7	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999989916588382	WITHOUT_CLASSIFICATION	1.0083411618859108E-6	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999961888445423	WITHOUT_CLASSIFICATION	3.8111554575730366E-6	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999996425499706	WITHOUT_CLASSIFICATION	3.574500294037129E-7	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999997989545106	WITHOUT_CLASSIFICATION	2.0104548943964733E-7	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999991525893	WITHOUT_CLASSIFICATION	8.4741063729652E-10	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999993198691326	WITHOUT_CLASSIFICATION	6.801308673197839E-7	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9999995511542367	WITHOUT_CLASSIFICATION	4.488457633786601E-7	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9999970508177352	WITHOUT_CLASSIFICATION	2.9491822648808576E-6	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.999997111617478	WITHOUT_CLASSIFICATION	2.888382521995072E-6	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999998708114511	WITHOUT_CLASSIFICATION	1.2918854894052718E-7	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999999150118033	WITHOUT_CLASSIFICATION	8.498819673085455E-8	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999992222809274	WITHOUT_CLASSIFICATION	7.777190725548792E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999992222809274	WITHOUT_CLASSIFICATION	7.777190725548792E-7	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999994593832565	WITHOUT_CLASSIFICATION	5.406167435618695E-7	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9999981955329845	WITHOUT_CLASSIFICATION	1.8044670154613095E-6	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999997197560903	WITHOUT_CLASSIFICATION	2.8024390971430883E-7	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999998569799909	WITHOUT_CLASSIFICATION	1.4302000912763211E-7	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999999485949184	WITHOUT_CLASSIFICATION	5.140508171272913E-8	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999921841479364	WITHOUT_CLASSIFICATION	7.815852063508853E-6	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999995459996527	WITHOUT_CLASSIFICATION	4.540003473366711E-7	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999997282202	WITHOUT_CLASSIFICATION	2.7177983323173156E-10	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.999998266727964	WITHOUT_CLASSIFICATION	1.7332720360872463E-6	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999977597404957	WITHOUT_CLASSIFICATION	2.240259504296201E-6	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999999647279257	WITHOUT_CLASSIFICATION	3.5272074243598454E-8	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9999941396407087	WITHOUT_CLASSIFICATION	5.8603592913139905E-6	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999994693893092	WITHOUT_CLASSIFICATION	5.306106907974588E-7	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999997704109036	WITHOUT_CLASSIFICATION	2.2958909647724294E-7	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.999996267291446	WITHOUT_CLASSIFICATION	3.7327085540118845E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.999996267291446	WITHOUT_CLASSIFICATION	3.7327085540118845E-6	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.999999950987892	WITHOUT_CLASSIFICATION	4.901210796926013E-8	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.999999938626563	WITHOUT_CLASSIFICATION	6.137343696937163E-8	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999987064579684	WITHOUT_CLASSIFICATION	1.293542031594675E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.999986932675452	WITHOUT_CLASSIFICATION	1.3067324548010234E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999895448054321	WITHOUT_CLASSIFICATION	1.0455194567874318E-5	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999895305448725	WITHOUT_CLASSIFICATION	1.0469455127505932E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999946424728386	WITHOUT_CLASSIFICATION	5.357527161268256E-6	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999996563118173	WITHOUT_CLASSIFICATION	3.436881826982936E-7	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999998494352601	WITHOUT_CLASSIFICATION	1.5056473979735571E-7	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.999999986777158	WITHOUT_CLASSIFICATION	1.3222841963011247E-8	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999998965337566	WITHOUT_CLASSIFICATION	1.0346624336544658E-7	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999905620145922	WITHOUT_CLASSIFICATION	9.437985407649326E-6	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.999999119135105	WITHOUT_CLASSIFICATION	8.80864894926553E-7	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999999135033355	WITHOUT_CLASSIFICATION	8.649666452076254E-8	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999926794641572	WITHOUT_CLASSIFICATION	7.320535842770406E-6	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999999619736051	WITHOUT_CLASSIFICATION	3.802639487608905E-8	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999999924948074	WITHOUT_CLASSIFICATION	7.505192516406906E-9	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999993277964169	WITHOUT_CLASSIFICATION	6.7220358319184E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999998722832063	WITHOUT_CLASSIFICATION	1.2771679366027719E-7	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999999979561628	WITHOUT_CLASSIFICATION	2.0438372225539275E-9	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999994576198568	WITHOUT_CLASSIFICATION	5.423801432609398E-7	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.999999977889246	WITHOUT_CLASSIFICATION	2.211075401835538E-8	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999998661923445	WITHOUT_CLASSIFICATION	1.338076555710123E-7	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.999995310300557	WITHOUT_CLASSIFICATION	4.689699442960915E-6	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.999998163145142	WITHOUT_CLASSIFICATION	1.8368548580307215E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.999999800333246	WITHOUT_CLASSIFICATION	1.9966675410369437E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999999608150961	WITHOUT_CLASSIFICATION	3.918490386984508E-8	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999997117782983	WITHOUT_CLASSIFICATION	2.882217016819169E-7	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999999985327992	WITHOUT_CLASSIFICATION	1.467200856008355E-9	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999996156097424	WITHOUT_CLASSIFICATION	3.8439025764034213E-7	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9999899768851703	WITHOUT_CLASSIFICATION	1.0023114829634542E-5	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999999231795703	WITHOUT_CLASSIFICATION	7.682042971575857E-8	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999999123224566	WITHOUT_CLASSIFICATION	8.767754353542662E-8	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999928929726	WITHOUT_CLASSIFICATION	7.107027438993313E-9	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9999989391008254	WITHOUT_CLASSIFICATION	1.0608991746394665E-6	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.999999929024284	WITHOUT_CLASSIFICATION	7.097571600246161E-8	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999992507265473	WITHOUT_CLASSIFICATION	7.492734527057706E-7	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999999198017075	WITHOUT_CLASSIFICATION	8.019829246298437E-8	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999990459500729	WITHOUT_CLASSIFICATION	9.540499270403646E-7	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9999999914015681	WITHOUT_CLASSIFICATION	8.598431836842412E-9	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999991969704868	WITHOUT_CLASSIFICATION	8.03029513262797E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999991969704868	WITHOUT_CLASSIFICATION	8.03029513262797E-7	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999999230561545	WITHOUT_CLASSIFICATION	7.69438456045127E-8	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999999414926626	WITHOUT_CLASSIFICATION	5.8507337420375504E-8	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9999995068720655	WITHOUT_CLASSIFICATION	4.9312793458318E-7	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999998947920972	WITHOUT_CLASSIFICATION	1.0520790282035243E-7	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999999751968753	WITHOUT_CLASSIFICATION	2.480312466936481E-8	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999999792353657	WITHOUT_CLASSIFICATION	2.0764634354598207E-8	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999993747006692	WITHOUT_CLASSIFICATION	6.252993308311411E-7	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999991746306909	WITHOUT_CLASSIFICATION	8.253693090354342E-7	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999997769150076	WITHOUT_CLASSIFICATION	2.2308499247011693E-7	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999981884161079	WITHOUT_CLASSIFICATION	1.8115838921010897E-6	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987374766001	WITHOUT_CLASSIFICATION	1.2625233999880231E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.999999446293137	WITHOUT_CLASSIFICATION	5.537068630469817E-7	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999965077479009	WITHOUT_CLASSIFICATION	3.492252099116598E-6	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999999407407013	WITHOUT_CLASSIFICATION	5.9259298703878275E-8	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999999578101342	WITHOUT_CLASSIFICATION	4.2189865917802784E-8	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.999993890033952	WITHOUT_CLASSIFICATION	6.1099660480052055E-6	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999999475776828	WITHOUT_CLASSIFICATION	5.242231715869227E-8	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.999999913182796	WITHOUT_CLASSIFICATION	8.681720393768273E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999981464347093	WITHOUT_CLASSIFICATION	1.85356529082174E-6	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999998662512195	WITHOUT_CLASSIFICATION	1.3374878039496777E-7	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999997640812183	WITHOUT_CLASSIFICATION	2.359187816195671E-7	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999997187656781	WITHOUT_CLASSIFICATION	2.8123432196086887E-7	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.999999191507582	WITHOUT_CLASSIFICATION	8.084924181029339E-7	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.999946060454642	WITHOUT_CLASSIFICATION	5.3939545358143085E-5	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9999981129829618	WITHOUT_CLASSIFICATION	1.8870170382145292E-6	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999974163541664	WITHOUT_CLASSIFICATION	2.583645833575131E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999997114432884	WITHOUT_CLASSIFICATION	2.8855671168790295E-7	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.999999213104154	WITHOUT_CLASSIFICATION	7.868958461354573E-7	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999995889038178	WITHOUT_CLASSIFICATION	4.110961821959888E-7	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9999999545370422	WITHOUT_CLASSIFICATION	4.546295792537335E-8	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999998435495948	WITHOUT_CLASSIFICATION	1.564504050832421E-7	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999975322945458	WITHOUT_CLASSIFICATION	2.46770545421892E-6	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999999968880818	WITHOUT_CLASSIFICATION	3.111918098417838E-9	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999993811174799	WITHOUT_CLASSIFICATION	6.188825201070435E-7	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999735903511	WITHOUT_CLASSIFICATION	2.640964888973292E-8	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999999706210534	WITHOUT_CLASSIFICATION	2.937894667164561E-8	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999995768496838	WITHOUT_CLASSIFICATION	4.2315031621195825E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999992338686604	WITHOUT_CLASSIFICATION	7.661313396051745E-7	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.99999977912454	WITHOUT_CLASSIFICATION	2.2087545999884594E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9999970170749208	WITHOUT_CLASSIFICATION	2.9829250791219857E-6	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999999613836329	WITHOUT_CLASSIFICATION	3.861636721522028E-8	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999994723018936	WITHOUT_CLASSIFICATION	5.276981064063971E-7	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999999485445478	WITHOUT_CLASSIFICATION	5.1455452176625075E-8	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999998579369753	WITHOUT_CLASSIFICATION	1.4206302470635793E-7	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999994524307189	WITHOUT_CLASSIFICATION	5.475692811711637E-7	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9999999605076021	WITHOUT_CLASSIFICATION	3.9492397924910425E-8	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999983395401671	WITHOUT_CLASSIFICATION	1.6604598328012142E-6	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999994693893092	WITHOUT_CLASSIFICATION	5.306106907974588E-7	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999999982322102	WITHOUT_CLASSIFICATION	1.7677899216185706E-9	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999999474439982	WITHOUT_CLASSIFICATION	5.2556001694052254E-8	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9999948953363665	WITHOUT_CLASSIFICATION	5.104663633473928E-6	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999989413085514	WITHOUT_CLASSIFICATION	1.0586914486942204E-6	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.999993228567249	WITHOUT_CLASSIFICATION	6.771432750853445E-6	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999998761447774	WITHOUT_CLASSIFICATION	1.2385522260605181E-7	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9999996209648905	WITHOUT_CLASSIFICATION	3.790351095109453E-7	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9999921474307454	WITHOUT_CLASSIFICATION	7.852569254637464E-6	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999950152299473	WITHOUT_CLASSIFICATION	4.9847700527014385E-6	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999994949223504	WITHOUT_CLASSIFICATION	5.050776496443275E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999996630690634	WITHOUT_CLASSIFICATION	3.3693093665004733E-7	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999988395562821	WITHOUT_CLASSIFICATION	1.1604437178809926E-6	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999953416055509	WITHOUT_CLASSIFICATION	4.658394449026963E-6	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999999893883872	WITHOUT_CLASSIFICATION	1.0611612789678063E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987537648853	WITHOUT_CLASSIFICATION	1.2462351145647644E-6	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999993627287971	WITHOUT_CLASSIFICATION	6.372712029063511E-7	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999992535569119	WITHOUT_CLASSIFICATION	7.464430880532618E-7	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999999886343819	WITHOUT_CLASSIFICATION	1.1365618246373194E-8	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999935788380754	WITHOUT_CLASSIFICATION	6.421161924552381E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987537648853	WITHOUT_CLASSIFICATION	1.2462351145647644E-6	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.999888265945143	WITHOUT_CLASSIFICATION	1.1173405485699979E-4	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9999982749731764	WITHOUT_CLASSIFICATION	1.725026823735776E-6	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999999932740516	WITHOUT_CLASSIFICATION	6.7259483019004146E-9	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999999783600777	WITHOUT_CLASSIFICATION	2.163992228667986E-8	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999741374977344	WITHOUT_CLASSIFICATION	2.5862502265442684E-5	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999995774188033	WITHOUT_CLASSIFICATION	4.2258119672770455E-7	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.999999878870156	WITHOUT_CLASSIFICATION	1.2112984400788618E-7	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999997148402976	WITHOUT_CLASSIFICATION	2.851597024642824E-7	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999988573194886	WITHOUT_CLASSIFICATION	1.1426805114504318E-6	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999998992063676	WITHOUT_CLASSIFICATION	1.0079363246630615E-7	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999986810021654	WITHOUT_CLASSIFICATION	1.3189978345431402E-6	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9999997433398599	WITHOUT_CLASSIFICATION	2.566601401642349E-7	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999998342329048	WITHOUT_CLASSIFICATION	1.6576709525059735E-7	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9999649224212948	WITHOUT_CLASSIFICATION	3.507757870518708E-5	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999992444754151	WITHOUT_CLASSIFICATION	7.555245848693137E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999997064293259	WITHOUT_CLASSIFICATION	2.935706740789926E-7	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999980670978489	WITHOUT_CLASSIFICATION	1.9329021510937433E-6	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999978942428824	WITHOUT_CLASSIFICATION	2.105757117530522E-6	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.999999240996943	WITHOUT_CLASSIFICATION	7.590030570183511E-7	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999997994347478	WITHOUT_CLASSIFICATION	2.005652521096021E-7	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999986317330178	WITHOUT_CLASSIFICATION	1.3682669821563036E-6	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999999470390551	WITHOUT_CLASSIFICATION	5.2960944927560656E-8	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999994313863676	WITHOUT_CLASSIFICATION	5.686136323914286E-7	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999924738224	WITHOUT_CLASSIFICATION	7.526177513389198E-9	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999999640073864	WITHOUT_CLASSIFICATION	3.5992613479799155E-8	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999999033994335	WITHOUT_CLASSIFICATION	9.660056654347491E-8	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999999339298162	WITHOUT_CLASSIFICATION	6.607018383486619E-8	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999998768185618	WITHOUT_CLASSIFICATION	1.23181438245087E-7	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999999719186219	WITHOUT_CLASSIFICATION	2.8081378056961493E-8	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999932414742864	WITHOUT_CLASSIFICATION	6.758525713698047E-6	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999991218553019	WITHOUT_CLASSIFICATION	8.781446981437306E-7	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999721139175853	WITHOUT_CLASSIFICATION	2.788608241467623E-5	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999984475166432	WITHOUT_CLASSIFICATION	1.5524833567852562E-6	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.99999950069759	WITHOUT_CLASSIFICATION	4.993024098994506E-7	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999999614744074	WITHOUT_CLASSIFICATION	3.852559260267143E-8	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999998259354075	WITHOUT_CLASSIFICATION	1.7406459252355791E-7	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.999999986127594	WITHOUT_CLASSIFICATION	1.3872406024733386E-8	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999999111961871	WITHOUT_CLASSIFICATION	8.88038128378289E-8	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999999025031061	WITHOUT_CLASSIFICATION	9.749689384615465E-8	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999852232534969	WITHOUT_CLASSIFICATION	1.477674650306818E-5	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999906771127114	WITHOUT_CLASSIFICATION	9.322887288583193E-6	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999906771127114	WITHOUT_CLASSIFICATION	9.322887288583193E-6	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999965429913448	WITHOUT_CLASSIFICATION	3.457008655179794E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999999563770314	WITHOUT_CLASSIFICATION	4.3622968628926783E-8	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999998752813987	WITHOUT_CLASSIFICATION	1.2471860132886086E-7	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9899100100869849	DOCUMENTATION	0.010089989913015157	WITHOUT_CLASSIFICATION
// ignore	WITHOUT_CLASSIFICATION	0.9999972302070829	WITHOUT_CLASSIFICATION	2.769792917122951E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999972302070829	WITHOUT_CLASSIFICATION	2.769792917122951E-6	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.9999827595478	WITHOUT_CLASSIFICATION	1.7240452200009186E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999992200937559	WITHOUT_CLASSIFICATION	7.799062441304803E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998771967365686	WITHOUT_CLASSIFICATION	1.2280326343145303E-4	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999997521248463	WITHOUT_CLASSIFICATION	2.478751538021242E-7	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999998426124156	WITHOUT_CLASSIFICATION	1.5738758444025517E-7	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.999998874735849	WITHOUT_CLASSIFICATION	1.1252641510567456E-6	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999980063850058	WITHOUT_CLASSIFICATION	1.9936149941580862E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999993537207891	WITHOUT_CLASSIFICATION	6.46279210957756E-7	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.999999972589816	WITHOUT_CLASSIFICATION	2.741018394163416E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999869813521	WITHOUT_CLASSIFICATION	1.3018647896073525E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999869813521	WITHOUT_CLASSIFICATION	1.3018647896073525E-7	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9999990376243378	WITHOUT_CLASSIFICATION	9.623756621211097E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999891325966391	WITHOUT_CLASSIFICATION	1.0867403360951768E-5	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999987145086672	WITHOUT_CLASSIFICATION	1.2854913327923408E-6	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9999650993532406	WITHOUT_CLASSIFICATION	3.490064675932005E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999654199722748	WITHOUT_CLASSIFICATION	3.458002772523721E-5	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999995086869962	WITHOUT_CLASSIFICATION	4.913130038493033E-7	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998751149897	WITHOUT_CLASSIFICATION	1.2488501040802634E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999654199722748	WITHOUT_CLASSIFICATION	3.458002772523721E-5	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999998882159205	WITHOUT_CLASSIFICATION	1.1178407955924827E-7	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9999934861399332	WITHOUT_CLASSIFICATION	6.513860066755225E-6	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999999771262112	WITHOUT_CLASSIFICATION	2.287378876674073E-8	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999994649581704	WITHOUT_CLASSIFICATION	5.350418295925933E-7	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999998992063676	WITHOUT_CLASSIFICATION	1.0079363246630615E-7	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999997322398881	WITHOUT_CLASSIFICATION	2.6776011192922907E-7	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9999692965531308	WITHOUT_CLASSIFICATION	3.0703446869193295E-5	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999962029905568	WITHOUT_CLASSIFICATION	3.797009443315045E-6	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999954115313909	WITHOUT_CLASSIFICATION	4.58846860905181E-6	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999993788521002	WITHOUT_CLASSIFICATION	6.21147899832771E-7	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9999989728275268	WITHOUT_CLASSIFICATION	1.0271724731653405E-6	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999953130009838	WITHOUT_CLASSIFICATION	4.686999016252723E-6	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9999999502175648	WITHOUT_CLASSIFICATION	4.9782435069377165E-8	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999943038947204	WITHOUT_CLASSIFICATION	5.696105279528487E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999972721812227	WITHOUT_CLASSIFICATION	2.7278187774245784E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999972721812227	WITHOUT_CLASSIFICATION	2.7278187774245784E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999992578084135	WITHOUT_CLASSIFICATION	7.421915865431185E-7	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999999834915297	WITHOUT_CLASSIFICATION	1.650847021526766E-8	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998550751436128	WITHOUT_CLASSIFICATION	1.4492485638716525E-4	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999994070195873	WITHOUT_CLASSIFICATION	5.929804126033803E-7	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999983001184527	WITHOUT_CLASSIFICATION	1.699881547280927E-6	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999986235367506	WITHOUT_CLASSIFICATION	1.3764632494362453E-6	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999998853926896	WITHOUT_CLASSIFICATION	1.1460731043574587E-7	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999999926096947	WITHOUT_CLASSIFICATION	7.390305347311977E-9	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.999999649598516	WITHOUT_CLASSIFICATION	3.5040148404848893E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999999501820886	WITHOUT_CLASSIFICATION	4.981791121733102E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963150693602	WITHOUT_CLASSIFICATION	3.684930639904128E-6	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999999974640612	WITHOUT_CLASSIFICATION	2.535938785896843E-9	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9999985619499129	WITHOUT_CLASSIFICATION	1.4380500870894805E-6	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999898420798	WITHOUT_CLASSIFICATION	1.0157920164123567E-8	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999999541603136	WITHOUT_CLASSIFICATION	4.583968630394733E-8	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999993383055868	WITHOUT_CLASSIFICATION	6.616944131055099E-7	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.9999999659962544	WITHOUT_CLASSIFICATION	3.400374548679787E-8	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999988811530713	WITHOUT_CLASSIFICATION	1.1188469286656453E-6	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999994023996711	WITHOUT_CLASSIFICATION	5.976003289290425E-7	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999999902334111	WITHOUT_CLASSIFICATION	9.766588765774014E-9	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999998913880633	WITHOUT_CLASSIFICATION	1.0861193673001938E-7	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999997756192228	WITHOUT_CLASSIFICATION	2.243807772470041E-7	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999999057908533	WITHOUT_CLASSIFICATION	9.420914673413547E-8	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999999995521522	WITHOUT_CLASSIFICATION	4.4784772293363475E-10	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9998827526792144	WITHOUT_CLASSIFICATION	1.1724732078547483E-4	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9998827526792144	WITHOUT_CLASSIFICATION	1.1724732078547483E-4	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999996351949391	WITHOUT_CLASSIFICATION	3.648050609673784E-7	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999999467077176	WITHOUT_CLASSIFICATION	5.329228242907107E-8	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999943797701066	WITHOUT_CLASSIFICATION	5.620229893378215E-6	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999999919288501	WITHOUT_CLASSIFICATION	8.071149777929767E-9	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999741366282607	WITHOUT_CLASSIFICATION	2.5863371739220792E-5	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.839182475423713	WITHOUT_CLASSIFICATION	0.16081752457628695	DOCUMENTATION
