//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999926670018294	WITHOUT_CLASSIFICATION	7.332998170556273E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999958719573383	WITHOUT_CLASSIFICATION	4.128042661716424E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999958719573383	WITHOUT_CLASSIFICATION	4.128042661716424E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999958719573383	WITHOUT_CLASSIFICATION	4.128042661716424E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999958719573383	WITHOUT_CLASSIFICATION	4.128042661716424E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999958719573383	WITHOUT_CLASSIFICATION	4.128042661716424E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999958719573383	WITHOUT_CLASSIFICATION	4.128042661716424E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999958719573383	WITHOUT_CLASSIFICATION	4.128042661716424E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999983456347143	WITHOUT_CLASSIFICATION	1.6543652857107718E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999983456347143	WITHOUT_CLASSIFICATION	1.6543652857107718E-6	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9999414379552122	WITHOUT_CLASSIFICATION	5.85620447877637E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999977138266303	WITHOUT_CLASSIFICATION	2.2861733696825363E-6	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999992616619299	WITHOUT_CLASSIFICATION	7.383380701988332E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999837369323151	WITHOUT_CLASSIFICATION	1.6263067684808218E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999837369323151	WITHOUT_CLASSIFICATION	1.6263067684808218E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999991597658756	WITHOUT_CLASSIFICATION	8.402341243522404E-7	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999539579333	WITHOUT_CLASSIFICATION	4.6042066695607515E-8	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999990676849364	WITHOUT_CLASSIFICATION	9.32315063518266E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999955777700281	WITHOUT_CLASSIFICATION	4.422229971929194E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999988531534115	WITHOUT_CLASSIFICATION	1.14684658848387E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999988531534115	WITHOUT_CLASSIFICATION	1.14684658848387E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999965996132001	WITHOUT_CLASSIFICATION	3.4003867998984133E-6	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.999994282512054	WITHOUT_CLASSIFICATION	5.717487945907631E-6	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999994798211027	WITHOUT_CLASSIFICATION	5.201788971968423E-7	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999995976187005	WITHOUT_CLASSIFICATION	4.023812994993416E-7	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999930709976	WITHOUT_CLASSIFICATION	6.929002356912926E-9	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999885408448126	WITHOUT_CLASSIFICATION	1.1459155187370622E-5	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9999814177700622	WITHOUT_CLASSIFICATION	1.858222993779397E-5	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999835054770555	WITHOUT_CLASSIFICATION	1.6494522944472903E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999969083035857	WITHOUT_CLASSIFICATION	3.0916964142978176E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.999635088918073	WITHOUT_CLASSIFICATION	3.6491108192707584E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999854512750355	WITHOUT_CLASSIFICATION	1.4548724964527428E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.999975370099583	WITHOUT_CLASSIFICATION	2.4629900416992497E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999997885731936	WITHOUT_CLASSIFICATION	2.114268064518747E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999704426645029	WITHOUT_CLASSIFICATION	2.9557335497155822E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999704426645029	WITHOUT_CLASSIFICATION	2.9557335497155822E-5	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999999716310243	WITHOUT_CLASSIFICATION	2.8368975638677254E-8	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999692335518172	WITHOUT_CLASSIFICATION	3.0766448182736505E-5	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999996265867965	WITHOUT_CLASSIFICATION	3.734132035330962E-7	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999999906157188	WITHOUT_CLASSIFICATION	9.384281218582543E-9	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9999487251000916	WITHOUT_CLASSIFICATION	5.127489990842488E-5	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9900164380406397	DOCUMENTATION	0.009983561959360407	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9900164380406397	DOCUMENTATION	0.009983561959360407	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999999404538729	WITHOUT_CLASSIFICATION	5.95461270945808E-8	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999998693001091	WITHOUT_CLASSIFICATION	1.3069989095311948E-7	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999999679845304	WITHOUT_CLASSIFICATION	3.2015469568612185E-8	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999988424219245	WITHOUT_CLASSIFICATION	1.1575780754429098E-6	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999953329915454	WITHOUT_CLASSIFICATION	4.667008454483545E-6	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999947720369662	WITHOUT_CLASSIFICATION	5.227963033874909E-6	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999956189479176	WITHOUT_CLASSIFICATION	4.381052082505523E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999915596351654	WITHOUT_CLASSIFICATION	8.440364834706413E-6	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999056496992046	WITHOUT_CLASSIFICATION	9.435030079545825E-5	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999999727513851	WITHOUT_CLASSIFICATION	2.7248614931213345E-8	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999528467526712	WITHOUT_CLASSIFICATION	4.715324732885992E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999056496992046	WITHOUT_CLASSIFICATION	9.435030079545825E-5	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999528467526712	WITHOUT_CLASSIFICATION	4.715324732885992E-5	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999919236623215	WITHOUT_CLASSIFICATION	8.076337678546397E-6	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9999997602266989	WITHOUT_CLASSIFICATION	2.397733011572041E-7	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999997546477357	WITHOUT_CLASSIFICATION	2.453522643041556E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999999431482041	WITHOUT_CLASSIFICATION	5.685179606225904E-8	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999988643032861	WITHOUT_CLASSIFICATION	1.1356967138759865E-6	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999999660775757	WITHOUT_CLASSIFICATION	3.392242429391269E-8	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.99990342145282	WITHOUT_CLASSIFICATION	9.657854717997777E-5	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999494623446049	WITHOUT_CLASSIFICATION	5.053765539512965E-5	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999999719489557	WITHOUT_CLASSIFICATION	2.8051044357556647E-8	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9999948964716538	WITHOUT_CLASSIFICATION	5.103528346217229E-6	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999994096275088	WITHOUT_CLASSIFICATION	5.903724911303811E-7	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999927013116331	WITHOUT_CLASSIFICATION	7.2986883668442755E-6	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999903531447	WITHOUT_CLASSIFICATION	9.646855279512682E-9	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999993448002096	WITHOUT_CLASSIFICATION	6.551997905041735E-7	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999999673873745	WITHOUT_CLASSIFICATION	3.261262544173812E-8	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999999508809139	WITHOUT_CLASSIFICATION	4.911908613890254E-8	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999996176607253	WITHOUT_CLASSIFICATION	3.823392747946641E-7	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999998256864454	WITHOUT_CLASSIFICATION	1.7431355463916456E-7	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999997137596811	WITHOUT_CLASSIFICATION	2.862403189122254E-7	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999994714570447	WITHOUT_CLASSIFICATION	5.28542955344847E-7	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999996196398525	WITHOUT_CLASSIFICATION	3.8036014739150054E-7	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999999328715772	WITHOUT_CLASSIFICATION	6.712842283094423E-8	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999992033030708	WITHOUT_CLASSIFICATION	7.966969292649415E-7	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999990298703042	WITHOUT_CLASSIFICATION	9.701296957903365E-7	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.999999918390432	WITHOUT_CLASSIFICATION	8.160956804565781E-8	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999980348557161	WITHOUT_CLASSIFICATION	1.9651442838602884E-6	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999998199194647	WITHOUT_CLASSIFICATION	1.8008053521177313E-7	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9999998142615608	WITHOUT_CLASSIFICATION	1.8573843923205423E-7	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999997529097229	WITHOUT_CLASSIFICATION	2.4709027709955874E-7	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999997242600117	WITHOUT_CLASSIFICATION	2.7573998832960584E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999990589713124	WITHOUT_CLASSIFICATION	9.410286875725138E-7	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.999999830204892	WITHOUT_CLASSIFICATION	1.6979510790776035E-7	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999933778660226	WITHOUT_CLASSIFICATION	6.62213397734897E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999989593557624	WITHOUT_CLASSIFICATION	1.0406442375652957E-6	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999995526576382	WITHOUT_CLASSIFICATION	4.473423618526413E-7	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999913238942282	WITHOUT_CLASSIFICATION	8.676105771845887E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999989593557624	WITHOUT_CLASSIFICATION	1.0406442375652957E-6	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999999979247552	WITHOUT_CLASSIFICATION	2.0752446690507944E-9	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999999900498242	WITHOUT_CLASSIFICATION	9.950175787054517E-9	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999955566894121	WITHOUT_CLASSIFICATION	4.4433105878916985E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999975032746384	WITHOUT_CLASSIFICATION	2.4967253614508203E-6	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.9999993970960835	WITHOUT_CLASSIFICATION	6.029039164293935E-7	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9997789740277702	WITHOUT_CLASSIFICATION	2.2102597222989435E-4	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9997789740277702	WITHOUT_CLASSIFICATION	2.2102597222989435E-4	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999765644420388	WITHOUT_CLASSIFICATION	2.3435557961285426E-5	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999994421626552	WITHOUT_CLASSIFICATION	5.578373447875935E-7	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9999843630805022	WITHOUT_CLASSIFICATION	1.5636919497837443E-5	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999998918166496	WITHOUT_CLASSIFICATION	1.0818335035393373E-7	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999998023089729	WITHOUT_CLASSIFICATION	1.9769102706275798E-7	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999994156279722	WITHOUT_CLASSIFICATION	5.843720278642253E-7	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999981696775888	WITHOUT_CLASSIFICATION	1.8303224112358908E-6	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999988934969709	WITHOUT_CLASSIFICATION	1.10650302911625E-6	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999998031710547	WITHOUT_CLASSIFICATION	1.9682894526201782E-7	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999993425582645	WITHOUT_CLASSIFICATION	6.574417355224988E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999994966112924	WITHOUT_CLASSIFICATION	5.033887075039275E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999994966112924	WITHOUT_CLASSIFICATION	5.033887075039275E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999982193903865	WITHOUT_CLASSIFICATION	1.7806096134859923E-6	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999976394161698	WITHOUT_CLASSIFICATION	2.3605838301426436E-6	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9999993188328741	WITHOUT_CLASSIFICATION	6.811671258886386E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999994966112924	WITHOUT_CLASSIFICATION	5.033887075039275E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999982193903865	WITHOUT_CLASSIFICATION	1.7806096134859923E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999982193903865	WITHOUT_CLASSIFICATION	1.7806096134859923E-6	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999999032108426	WITHOUT_CLASSIFICATION	9.6789157343119E-8	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999992639059873	WITHOUT_CLASSIFICATION	7.360940127682267E-7	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999992718171987	WITHOUT_CLASSIFICATION	7.281828012167814E-7	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999997802306351	WITHOUT_CLASSIFICATION	2.197693649970671E-7	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999959637616479	WITHOUT_CLASSIFICATION	4.036238352025844E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999959637616479	WITHOUT_CLASSIFICATION	4.036238352025844E-6	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999957677812684	WITHOUT_CLASSIFICATION	4.232218731629698E-6	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999961949588869	WITHOUT_CLASSIFICATION	3.8050411130104616E-6	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999985309886278	WITHOUT_CLASSIFICATION	1.469011372143775E-6	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999995280470126	WITHOUT_CLASSIFICATION	4.7195298741719583E-7	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999995280470126	WITHOUT_CLASSIFICATION	4.7195298741719583E-7	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999465906077706	WITHOUT_CLASSIFICATION	5.3409392229449627E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999997425893362	WITHOUT_CLASSIFICATION	2.574106637638107E-7	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999967805683516	WITHOUT_CLASSIFICATION	3.21943164827286E-6	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999999887966871	WITHOUT_CLASSIFICATION	1.1203313020615589E-8	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999963518821784	WITHOUT_CLASSIFICATION	3.648117821521468E-6	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999987256931835	WITHOUT_CLASSIFICATION	1.2743068164734791E-6	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9999948523236363	WITHOUT_CLASSIFICATION	5.1476763636860185E-6	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.999999201742012	WITHOUT_CLASSIFICATION	7.982579880306924E-7	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9999982713209062	WITHOUT_CLASSIFICATION	1.7286790938608397E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999967805683516	WITHOUT_CLASSIFICATION	3.21943164827286E-6	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9998976118475027	WITHOUT_CLASSIFICATION	1.0238815249733917E-4	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999905486774432	WITHOUT_CLASSIFICATION	9.451322556704967E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999905486774432	WITHOUT_CLASSIFICATION	9.451322556704967E-6	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999999902977377	WITHOUT_CLASSIFICATION	9.702262414673826E-9	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999999636561242	WITHOUT_CLASSIFICATION	3.634387582043663E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999999176716686	WITHOUT_CLASSIFICATION	8.23283313830102E-8	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.999718955030629	WITHOUT_CLASSIFICATION	2.8104496937093925E-4	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9999921287172772	WITHOUT_CLASSIFICATION	7.87128272284944E-6	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9999486305923154	WITHOUT_CLASSIFICATION	5.136940768444674E-5	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.9999958195293666	WITHOUT_CLASSIFICATION	4.1804706334309735E-6	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999995824986588	WITHOUT_CLASSIFICATION	4.17501341249544E-7	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999993760831808	WITHOUT_CLASSIFICATION	6.239168192789385E-7	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999993760831808	WITHOUT_CLASSIFICATION	6.239168192789385E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999632519147811	WITHOUT_CLASSIFICATION	3.674808521893098E-5	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999926670018294	WITHOUT_CLASSIFICATION	7.332998170556273E-6	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999994042901725	WITHOUT_CLASSIFICATION	5.957098274234811E-7	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999958719573383	WITHOUT_CLASSIFICATION	4.128042661716424E-6	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999906614716862	WITHOUT_CLASSIFICATION	9.338528313784772E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999983456347143	WITHOUT_CLASSIFICATION	1.6543652857107718E-6	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999987775597982	WITHOUT_CLASSIFICATION	1.2224402018015521E-6	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999985971767447	WITHOUT_CLASSIFICATION	1.4028232552448714E-6	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999990092093413	WITHOUT_CLASSIFICATION	9.90790658723331E-7	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999991148993362	WITHOUT_CLASSIFICATION	8.851006636898491E-7	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999994597612419	WITHOUT_CLASSIFICATION	5.402387580804983E-7	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.999986304356297	WITHOUT_CLASSIFICATION	1.3695643702982596E-5	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999910787659344	WITHOUT_CLASSIFICATION	8.92123406554976E-6	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999987138288793	WITHOUT_CLASSIFICATION	1.2861711207274892E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999977138266303	WITHOUT_CLASSIFICATION	2.2861733696825363E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999979091581969	WITHOUT_CLASSIFICATION	2.090841803195465E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999979091581969	WITHOUT_CLASSIFICATION	2.090841803195465E-6	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9999992011181433	WITHOUT_CLASSIFICATION	7.988818566037227E-7	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9999411131862069	WITHOUT_CLASSIFICATION	5.8886813793161946E-5	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.999999907334774	WITHOUT_CLASSIFICATION	9.266522601169168E-8	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999985795227018	WITHOUT_CLASSIFICATION	1.4204772982186398E-6	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999989303194683	WITHOUT_CLASSIFICATION	1.069680531659052E-6	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999994129946083	WITHOUT_CLASSIFICATION	5.87005391787892E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999837369323151	WITHOUT_CLASSIFICATION	1.6263067684808218E-5	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.999999727656671	WITHOUT_CLASSIFICATION	2.723433290218217E-7	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999845310092904	WITHOUT_CLASSIFICATION	1.5468990709668313E-5	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999988412384356	WITHOUT_CLASSIFICATION	1.1587615644001931E-6	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999992344855338	WITHOUT_CLASSIFICATION	7.655144662052542E-7	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999957646263102	WITHOUT_CLASSIFICATION	4.2353736897951165E-6	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.9999965705346283	WITHOUT_CLASSIFICATION	3.4294653715821037E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999941861460866	WITHOUT_CLASSIFICATION	5.813853913434532E-6	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999991262338297	WITHOUT_CLASSIFICATION	8.737661704269861E-7	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999975880105054	WITHOUT_CLASSIFICATION	2.411989494583512E-6	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999874981127396	WITHOUT_CLASSIFICATION	1.2501887260397007E-5	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999994553011579	WITHOUT_CLASSIFICATION	5.446988421321895E-7	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.9999998266844142	WITHOUT_CLASSIFICATION	1.7331558577134586E-7	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999958719573383	WITHOUT_CLASSIFICATION	4.128042661716424E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999958719573383	WITHOUT_CLASSIFICATION	4.128042661716424E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999983456347143	WITHOUT_CLASSIFICATION	1.6543652857107718E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999983456347143	WITHOUT_CLASSIFICATION	1.6543652857107718E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999910787659344	WITHOUT_CLASSIFICATION	8.92123406554976E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999979091581969	WITHOUT_CLASSIFICATION	2.090841803195465E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999941861460866	WITHOUT_CLASSIFICATION	5.813853913434532E-6	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999991597658756	WITHOUT_CLASSIFICATION	8.402341243522404E-7	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999988958414259	WITHOUT_CLASSIFICATION	1.1041585740825116E-6	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999979330775792	WITHOUT_CLASSIFICATION	2.0669224207051016E-6	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999979560940474	WITHOUT_CLASSIFICATION	2.0439059525959186E-6	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999978325282733	WITHOUT_CLASSIFICATION	2.1674717266518987E-6	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999976044749683	WITHOUT_CLASSIFICATION	2.3955250317083296E-6	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9999952411336064	WITHOUT_CLASSIFICATION	4.758866393607813E-6	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999970734380028	WITHOUT_CLASSIFICATION	2.9265619970969185E-6	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9999569935349644	WITHOUT_CLASSIFICATION	4.30064650355464E-5	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999935394076328	WITHOUT_CLASSIFICATION	6.460592367162292E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999861440701713	WITHOUT_CLASSIFICATION	1.3855929828733226E-5	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999861440701713	WITHOUT_CLASSIFICATION	1.3855929828733226E-5	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999998444925171	WITHOUT_CLASSIFICATION	1.5550748279455747E-7	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999997793456394	WITHOUT_CLASSIFICATION	2.2065436052915913E-7	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.999992128774707	WITHOUT_CLASSIFICATION	7.871225292997902E-6	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999993037487921	WITHOUT_CLASSIFICATION	6.962512080316447E-7	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999997199722789	WITHOUT_CLASSIFICATION	2.8002772117806744E-7	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.999999769113219	WITHOUT_CLASSIFICATION	2.308867810548485E-7	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.999999695592047	WITHOUT_CLASSIFICATION	3.044079529565547E-7	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999539579333	WITHOUT_CLASSIFICATION	4.6042066695607515E-8	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999979346681445	WITHOUT_CLASSIFICATION	2.065331855554564E-6	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.999998500958969	WITHOUT_CLASSIFICATION	1.499041030888413E-6	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.999998500958969	WITHOUT_CLASSIFICATION	1.499041030888413E-6	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999989110988147	WITHOUT_CLASSIFICATION	1.0889011853516671E-6	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999995082053151	WITHOUT_CLASSIFICATION	4.917946847713992E-7	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999984911343899	WITHOUT_CLASSIFICATION	1.5088656100931332E-6	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999993958682275	WITHOUT_CLASSIFICATION	6.041317725819103E-7	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.999982861834815	WITHOUT_CLASSIFICATION	1.7138165185050274E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999983456347143	WITHOUT_CLASSIFICATION	1.6543652857107718E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999910787659344	WITHOUT_CLASSIFICATION	8.92123406554976E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999977138266303	WITHOUT_CLASSIFICATION	2.2861733696825363E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999941861460866	WITHOUT_CLASSIFICATION	5.813853913434532E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999941861460866	WITHOUT_CLASSIFICATION	5.813853913434532E-6	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999583821524	WITHOUT_CLASSIFICATION	4.1617847659190444E-8	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999583821524	WITHOUT_CLASSIFICATION	4.1617847659190444E-8	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999997106145572	WITHOUT_CLASSIFICATION	2.893854427807204E-7	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999980233974171	WITHOUT_CLASSIFICATION	1.976602582955951E-6	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999980233974171	WITHOUT_CLASSIFICATION	1.976602582955951E-6	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999987615379714	WITHOUT_CLASSIFICATION	1.2384620285860185E-6	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.9999983850830187	WITHOUT_CLASSIFICATION	1.6149169812850146E-6	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999993279118935	WITHOUT_CLASSIFICATION	6.720881064857707E-7	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999994202880371	WITHOUT_CLASSIFICATION	5.797119629025709E-7	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999998811058862	WITHOUT_CLASSIFICATION	1.188941138070616E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999955777700281	WITHOUT_CLASSIFICATION	4.422229971929194E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999955777700281	WITHOUT_CLASSIFICATION	4.422229971929194E-6	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.9999968561911243	WITHOUT_CLASSIFICATION	3.143808875628843E-6	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999957299197082	WITHOUT_CLASSIFICATION	4.270080291740319E-6	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.9999978090142345	WITHOUT_CLASSIFICATION	2.1909857654202683E-6	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999918067038692	WITHOUT_CLASSIFICATION	8.193296130688101E-6	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999981442855806	WITHOUT_CLASSIFICATION	1.8557144192757242E-6	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9999948231680507	WITHOUT_CLASSIFICATION	5.176831949233153E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999988531534115	WITHOUT_CLASSIFICATION	1.14684658848387E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999959041339593	WITHOUT_CLASSIFICATION	4.095866040617161E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999959041339593	WITHOUT_CLASSIFICATION	4.095866040617161E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999965996132001	WITHOUT_CLASSIFICATION	3.4003867998984133E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999965996132001	WITHOUT_CLASSIFICATION	3.4003867998984133E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999929586500592	WITHOUT_CLASSIFICATION	7.04134994075744E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999929586500592	WITHOUT_CLASSIFICATION	7.04134994075744E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999995217221941	WITHOUT_CLASSIFICATION	4.782778058885463E-7	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999995217221941	WITHOUT_CLASSIFICATION	4.782778058885463E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999955777700281	WITHOUT_CLASSIFICATION	4.422229971929194E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999988531534115	WITHOUT_CLASSIFICATION	1.14684658848387E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999959041339593	WITHOUT_CLASSIFICATION	4.095866040617161E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999959041339593	WITHOUT_CLASSIFICATION	4.095866040617161E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999965996132001	WITHOUT_CLASSIFICATION	3.4003867998984133E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999929586500592	WITHOUT_CLASSIFICATION	7.04134994075744E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999929586500592	WITHOUT_CLASSIFICATION	7.04134994075744E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999995217221941	WITHOUT_CLASSIFICATION	4.782778058885463E-7	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999986296973481	WITHOUT_CLASSIFICATION	1.370302651932283E-6	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.99996810652076	WITHOUT_CLASSIFICATION	3.189347923999212E-5	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.9999733953399297	WITHOUT_CLASSIFICATION	2.660466007030135E-5	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999983630114487	WITHOUT_CLASSIFICATION	1.6369885513815924E-6	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999971050696213	WITHOUT_CLASSIFICATION	2.8949303787251537E-6	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999901588578961	WITHOUT_CLASSIFICATION	9.841142103837196E-6	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999964527410257	WITHOUT_CLASSIFICATION	3.5472589743796117E-6	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9999999907632785	WITHOUT_CLASSIFICATION	9.23672158195846E-9	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999964548423417	WITHOUT_CLASSIFICATION	3.545157658385333E-6	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999999961930969	WITHOUT_CLASSIFICATION	3.806903096640384E-9	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999998880673123	WITHOUT_CLASSIFICATION	1.1193268769109655E-7	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999999553802567	WITHOUT_CLASSIFICATION	4.461974325274359E-8	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999765644420388	WITHOUT_CLASSIFICATION	2.3435557961285426E-5	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999901588578961	WITHOUT_CLASSIFICATION	9.841142103837196E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9998247781057182	WITHOUT_CLASSIFICATION	1.7522189428171783E-4	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9998247781057182	WITHOUT_CLASSIFICATION	1.7522189428171783E-4	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999998430031135	WITHOUT_CLASSIFICATION	1.5699688653517677E-7	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.999998761985485	WITHOUT_CLASSIFICATION	1.2380145150652561E-6	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.999998761985485	WITHOUT_CLASSIFICATION	1.2380145150652561E-6	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999952787775341	WITHOUT_CLASSIFICATION	4.721222465875624E-6	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999993338679615	WITHOUT_CLASSIFICATION	6.661320385293069E-7	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999998858224083	WITHOUT_CLASSIFICATION	1.1417759160006868E-7	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999988432844287	WITHOUT_CLASSIFICATION	1.15671557135295E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999988432844287	WITHOUT_CLASSIFICATION	1.15671557135295E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999930709976	WITHOUT_CLASSIFICATION	6.929002356912926E-9	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999999827447645	WITHOUT_CLASSIFICATION	1.7255235375951947E-8	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999999827447645	WITHOUT_CLASSIFICATION	1.7255235375951947E-8	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999981140867695	WITHOUT_CLASSIFICATION	1.8859132304552236E-6	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999998253355921	WITHOUT_CLASSIFICATION	1.746644079825942E-7	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999996362762106	WITHOUT_CLASSIFICATION	3.637237894658926E-7	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999798817121783	WITHOUT_CLASSIFICATION	2.0118287821674202E-5	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.999989472629652	WITHOUT_CLASSIFICATION	1.052737034797569E-5	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9999886874315885	WITHOUT_CLASSIFICATION	1.131256841143624E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999885408448126	WITHOUT_CLASSIFICATION	1.1459155187370622E-5	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999876978590565	WITHOUT_CLASSIFICATION	1.2302140943543983E-5	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9981643221065798	WITHOUT_CLASSIFICATION	0.0018356778934202848	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.9999809783016491	WITHOUT_CLASSIFICATION	1.902169835091443E-5	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999842477626169	WITHOUT_CLASSIFICATION	1.575223738304743E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999969083035857	WITHOUT_CLASSIFICATION	3.0916964142978176E-5	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999984930821598	WITHOUT_CLASSIFICATION	1.5069178401666652E-6	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.999999220148468	WITHOUT_CLASSIFICATION	7.798515320896592E-7	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999999373890999	WITHOUT_CLASSIFICATION	6.261090006761098E-8	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999969083035857	WITHOUT_CLASSIFICATION	3.0916964142978176E-5	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999999036884162	WITHOUT_CLASSIFICATION	9.631158377219344E-8	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999993563162551	WITHOUT_CLASSIFICATION	6.43683744927599E-7	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999870041753025	WITHOUT_CLASSIFICATION	1.2995824697445576E-5	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.9999806424910724	WITHOUT_CLASSIFICATION	1.935750892747897E-5	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999726784597633	WITHOUT_CLASSIFICATION	2.7321540236719615E-5	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999775464363653	WITHOUT_CLASSIFICATION	2.245356363478701E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999745018748528	WITHOUT_CLASSIFICATION	2.549812514725884E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.999975370099583	WITHOUT_CLASSIFICATION	2.4629900416992497E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999739190184108	WITHOUT_CLASSIFICATION	2.6080981589244668E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999997885731936	WITHOUT_CLASSIFICATION	2.114268064518747E-7	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.999994983616654	WITHOUT_CLASSIFICATION	5.016383346021817E-6	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999987151901696	WITHOUT_CLASSIFICATION	1.2848098304059433E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999856558449235	WITHOUT_CLASSIFICATION	1.4344155076563555E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999885408448126	WITHOUT_CLASSIFICATION	1.1459155187370622E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999739190184108	WITHOUT_CLASSIFICATION	2.6080981589244668E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.999994983616654	WITHOUT_CLASSIFICATION	5.016383346021817E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999856558449235	WITHOUT_CLASSIFICATION	1.4344155076563555E-5	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999996730824557	WITHOUT_CLASSIFICATION	3.269175443382909E-7	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999784046643762	WITHOUT_CLASSIFICATION	2.1595335623934558E-5	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999996014377507	WITHOUT_CLASSIFICATION	3.985622492513453E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999704426645029	WITHOUT_CLASSIFICATION	2.9557335497155822E-5	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999950481185778	WITHOUT_CLASSIFICATION	4.9518814221387666E-6	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.9999977919871159	WITHOUT_CLASSIFICATION	2.2080128840734615E-6	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.9999720546900702	WITHOUT_CLASSIFICATION	2.7945309929748882E-5	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999997705793272	WITHOUT_CLASSIFICATION	2.2942067286646767E-7	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999839830973578	WITHOUT_CLASSIFICATION	1.6016902642212254E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999997429810616	WITHOUT_CLASSIFICATION	2.5701893837976465E-7	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999997675624887	WITHOUT_CLASSIFICATION	2.32437511236504E-7	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999998512386251	WITHOUT_CLASSIFICATION	1.4876137491300498E-7	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999986397218679	WITHOUT_CLASSIFICATION	1.3602781321652762E-6	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999997318022209	WITHOUT_CLASSIFICATION	2.68197779000292E-7	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999917710680686	WITHOUT_CLASSIFICATION	8.228931931336747E-6	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999824026396271	WITHOUT_CLASSIFICATION	1.7597360372914823E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999692335518172	WITHOUT_CLASSIFICATION	3.0766448182736505E-5	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999997434601055	WITHOUT_CLASSIFICATION	2.5653989450902125E-7	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999719016604504	WITHOUT_CLASSIFICATION	2.8098339549637533E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999739190184108	WITHOUT_CLASSIFICATION	2.6080981589244668E-5	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999999052328798	WITHOUT_CLASSIFICATION	9.476712007719577E-8	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999992382352567	WITHOUT_CLASSIFICATION	7.617647432955015E-7	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999990393529793	WITHOUT_CLASSIFICATION	9.606470206857512E-7	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9999999532488325	WITHOUT_CLASSIFICATION	4.6751167408582366E-8	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999992022048599	WITHOUT_CLASSIFICATION	7.977951401086986E-7	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999960746820077	WITHOUT_CLASSIFICATION	3.9253179922458585E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999996545020214	WITHOUT_CLASSIFICATION	3.4549797849188817E-7	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999997912896201	WITHOUT_CLASSIFICATION	2.0871037990095977E-7	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999576613455617	WITHOUT_CLASSIFICATION	4.2338654438220324E-5	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999692938881536	WITHOUT_CLASSIFICATION	3.070611184635727E-5	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999931679019295	WITHOUT_CLASSIFICATION	6.832098070495519E-6	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999927994603278	WITHOUT_CLASSIFICATION	7.200539672072036E-6	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9999993329762566	WITHOUT_CLASSIFICATION	6.670237433359343E-7	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999999906157188	WITHOUT_CLASSIFICATION	9.384281218582543E-9	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999989008748481	WITHOUT_CLASSIFICATION	1.0991251518787523E-6	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999993757374789	WITHOUT_CLASSIFICATION	6.242625211599704E-7	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9999946807920511	WITHOUT_CLASSIFICATION	5.319207948856073E-6	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999985778414067	WITHOUT_CLASSIFICATION	1.4221585934072024E-6	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999996527496471	WITHOUT_CLASSIFICATION	3.4725035281834637E-7	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999998462967203	WITHOUT_CLASSIFICATION	1.537032796018349E-7	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999986630228	WITHOUT_CLASSIFICATION	1.3369771843841167E-9	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999998698032373	WITHOUT_CLASSIFICATION	1.3019676264917743E-7	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999997473738849	WITHOUT_CLASSIFICATION	2.5262611516557694E-7	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9999899385039077	WITHOUT_CLASSIFICATION	1.0061496092365134E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999718116398788	WITHOUT_CLASSIFICATION	2.818836012124958E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999718116398788	WITHOUT_CLASSIFICATION	2.818836012124958E-5	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999825779439883	WITHOUT_CLASSIFICATION	1.742205601174687E-5	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999996466775325	WITHOUT_CLASSIFICATION	3.5332246743923523E-7	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999964945821644	WITHOUT_CLASSIFICATION	3.5054178354840378E-6	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999934191627942	WITHOUT_CLASSIFICATION	6.580837205749729E-6	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9999871209783195	WITHOUT_CLASSIFICATION	1.287902168047989E-5	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9999973094050609	WITHOUT_CLASSIFICATION	2.6905949390997005E-6	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999995559324727	WITHOUT_CLASSIFICATION	4.44067527368658E-7	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.999999847359086	WITHOUT_CLASSIFICATION	1.5264091402373257E-7	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9999858622446435	WITHOUT_CLASSIFICATION	1.4137755356476154E-5	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999940582182187	WITHOUT_CLASSIFICATION	5.941781781242363E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.9999860548460875	WITHOUT_CLASSIFICATION	1.3945153912471336E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999992359355884	WITHOUT_CLASSIFICATION	7.64064411563956E-7	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9999977971707085	WITHOUT_CLASSIFICATION	2.2028292915978663E-6	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9999994686410056	WITHOUT_CLASSIFICATION	5.313589944541273E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995370470305	WITHOUT_CLASSIFICATION	4.629529695670664E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995396713462	WITHOUT_CLASSIFICATION	4.6032865370511303E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999999490056276	WITHOUT_CLASSIFICATION	5.09943722747943E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999996202618705	WITHOUT_CLASSIFICATION	3.797381295436368E-7	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9999994846526133	WITHOUT_CLASSIFICATION	5.153473866522626E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999985730568717	WITHOUT_CLASSIFICATION	1.4269431282642629E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999940478800441	WITHOUT_CLASSIFICATION	5.952119955856287E-6	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999940478800441	WITHOUT_CLASSIFICATION	5.952119955856287E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999539098133355	WITHOUT_CLASSIFICATION	4.609018666450101E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999539098133355	WITHOUT_CLASSIFICATION	4.609018666450101E-5	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999997473738849	WITHOUT_CLASSIFICATION	2.5262611516557694E-7	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999972473476909	WITHOUT_CLASSIFICATION	2.752652309105989E-6	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999972770065279	WITHOUT_CLASSIFICATION	2.7229934721961034E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999999085679436	WITHOUT_CLASSIFICATION	9.143205630506425E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999632519147811	WITHOUT_CLASSIFICATION	3.674808521893098E-5	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999972770065279	WITHOUT_CLASSIFICATION	2.7229934721961034E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999999085679436	WITHOUT_CLASSIFICATION	9.143205630506425E-8	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999890561443788	WITHOUT_CLASSIFICATION	1.0943855621135088E-5	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999974755851597	WITHOUT_CLASSIFICATION	2.524414840192211E-6	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999999079915896	WITHOUT_CLASSIFICATION	9.200841046301393E-8	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999997950425934	WITHOUT_CLASSIFICATION	2.0495740662865456E-7	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9999997562924396	WITHOUT_CLASSIFICATION	2.437075603675547E-7	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9999751786068213	WITHOUT_CLASSIFICATION	2.4821393178677382E-5	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999987677880374	WITHOUT_CLASSIFICATION	1.2322119625767915E-6	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999920385755973	WITHOUT_CLASSIFICATION	7.961424402718217E-6	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999916591177586	WITHOUT_CLASSIFICATION	8.340882241371331E-6	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999998868374759	WITHOUT_CLASSIFICATION	1.1316252411611637E-7	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999993853980191	WITHOUT_CLASSIFICATION	6.146019809400011E-7	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999998887052894	WITHOUT_CLASSIFICATION	1.1129471056333947E-7	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999998735943576	WITHOUT_CLASSIFICATION	1.264056423233167E-7	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9999967014775983	WITHOUT_CLASSIFICATION	3.298522401654676E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999632519147811	WITHOUT_CLASSIFICATION	3.674808521893098E-5	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9999973751406698	WITHOUT_CLASSIFICATION	2.62485933015098E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999922884704078	WITHOUT_CLASSIFICATION	7.711529592283494E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999922884704078	WITHOUT_CLASSIFICATION	7.711529592283494E-6	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999998226390675	WITHOUT_CLASSIFICATION	1.7736093258620685E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999890561443788	WITHOUT_CLASSIFICATION	1.0943855621135088E-5	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9999955101996172	WITHOUT_CLASSIFICATION	4.4898003827543266E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999999319195024	WITHOUT_CLASSIFICATION	6.808049756966218E-8	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9999968915565852	WITHOUT_CLASSIFICATION	3.108443414814144E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999971424601909	WITHOUT_CLASSIFICATION	2.857539809123606E-6	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999958788083814	WITHOUT_CLASSIFICATION	4.121191618600247E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999890561443788	WITHOUT_CLASSIFICATION	1.0943855621135088E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999971424601909	WITHOUT_CLASSIFICATION	2.857539809123606E-6	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999958788083814	WITHOUT_CLASSIFICATION	4.121191618600247E-6	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9999744894626087	WITHOUT_CLASSIFICATION	2.5510537391214625E-5	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999979640084968	WITHOUT_CLASSIFICATION	2.0359915031823834E-6	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999979793055224	WITHOUT_CLASSIFICATION	2.020694477709908E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999890561443788	WITHOUT_CLASSIFICATION	1.0943855621135088E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999890561443788	WITHOUT_CLASSIFICATION	1.0943855621135088E-5	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.99999698271919	WITHOUT_CLASSIFICATION	3.017280809942776E-6	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999990253415281	WITHOUT_CLASSIFICATION	9.746584719105411E-7	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999866327577013	WITHOUT_CLASSIFICATION	1.3367242298570503E-5	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999998796443228	WITHOUT_CLASSIFICATION	1.2035567725317785E-7	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999903203987464	WITHOUT_CLASSIFICATION	9.679601253667635E-6	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999999288043655	WITHOUT_CLASSIFICATION	7.119563456204992E-8	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999999751532346	WITHOUT_CLASSIFICATION	2.4846765444045954E-8	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999994081411122	WITHOUT_CLASSIFICATION	5.91858887786963E-7	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999978627067391	WITHOUT_CLASSIFICATION	2.1372932609753766E-6	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9999964039251055	WITHOUT_CLASSIFICATION	3.5960748945335168E-6	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999948860200019	WITHOUT_CLASSIFICATION	5.113979998194269E-6	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.999998749508807	WITHOUT_CLASSIFICATION	1.2504911931017664E-6	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999996596373212	WITHOUT_CLASSIFICATION	3.403626787137017E-7	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9999997525371133	WITHOUT_CLASSIFICATION	2.4746288679717464E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952615085224	WITHOUT_CLASSIFICATION	4.7384914776051355E-6	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999999972531526	WITHOUT_CLASSIFICATION	2.7468474340058196E-9	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999988424219245	WITHOUT_CLASSIFICATION	1.1575780754429098E-6	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9999403966948169	WITHOUT_CLASSIFICATION	5.9603305183089925E-5	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.999757005994336	WITHOUT_CLASSIFICATION	2.4299400566404235E-4	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9999996925796127	WITHOUT_CLASSIFICATION	3.074203873631076E-7	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.999995001796969	WITHOUT_CLASSIFICATION	4.998203030998129E-6	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999862967567752	WITHOUT_CLASSIFICATION	1.3703243224802638E-5	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999862967567752	WITHOUT_CLASSIFICATION	1.3703243224802638E-5	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999988424219245	WITHOUT_CLASSIFICATION	1.1575780754429098E-6	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999997291234517	WITHOUT_CLASSIFICATION	2.708765482570411E-7	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999999898701867	WITHOUT_CLASSIFICATION	1.012981339876741E-8	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9999982249605806	WITHOUT_CLASSIFICATION	1.7750394194840024E-6	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999956948379305	WITHOUT_CLASSIFICATION	4.305162069535766E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.99999283625066	WITHOUT_CLASSIFICATION	7.16374933998955E-6	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999979612567365	WITHOUT_CLASSIFICATION	2.0387432635782706E-6	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999938647084388	WITHOUT_CLASSIFICATION	6.135291561155081E-6	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999996823868409	WITHOUT_CLASSIFICATION	3.1761315906429676E-7	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999987930284574	WITHOUT_CLASSIFICATION	1.2069715425730791E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999984361823818	WITHOUT_CLASSIFICATION	1.563817618232213E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999993826836036	WITHOUT_CLASSIFICATION	6.173163964827575E-7	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999952756245585	WITHOUT_CLASSIFICATION	4.724375441527158E-6	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999866700473133	WITHOUT_CLASSIFICATION	1.3329952686644558E-5	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999999567839531	WITHOUT_CLASSIFICATION	4.3216046800609615E-8	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999873612017	WITHOUT_CLASSIFICATION	1.2638798293587148E-7	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9999993395226678	WITHOUT_CLASSIFICATION	6.604773320835229E-7	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.999999942533875	WITHOUT_CLASSIFICATION	5.746612506689102E-8	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9997474261333675	WITHOUT_CLASSIFICATION	2.5257386663250564E-4	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997766879759	WITHOUT_CLASSIFICATION	2.2331202407598266E-7	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.999999912009364	WITHOUT_CLASSIFICATION	8.799063600052681E-8	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9999979352487243	WITHOUT_CLASSIFICATION	2.0647512757004968E-6	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999982685479346	WITHOUT_CLASSIFICATION	1.7314520654519437E-6	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993743104054	WITHOUT_CLASSIFICATION	6.256895945708828E-7	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986644423878	WITHOUT_CLASSIFICATION	1.3355576122132066E-6	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999967073594488	WITHOUT_CLASSIFICATION	3.2926405512456928E-6	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960937403056	WITHOUT_CLASSIFICATION	3.906259694304681E-6	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960640736381	WITHOUT_CLASSIFICATION	3.935926361937191E-6	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960381959486	WITHOUT_CLASSIFICATION	3.961804051318583E-6	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999947159812181	WITHOUT_CLASSIFICATION	5.284018781832641E-6	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999563813544	WITHOUT_CLASSIFICATION	4.36186455955449E-7	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.999997413986839	WITHOUT_CLASSIFICATION	2.5860131611313592E-6	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9999971186799402	WITHOUT_CLASSIFICATION	2.881320059811599E-6	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997174728271	WITHOUT_CLASSIFICATION	2.8252717280964723E-7	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998275950045	WITHOUT_CLASSIFICATION	1.7240499537337614E-7	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998029605773	WITHOUT_CLASSIFICATION	1.9703942266246726E-7	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972648094098	WITHOUT_CLASSIFICATION	2.7351905902265174E-6	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999953200651048	WITHOUT_CLASSIFICATION	4.679934895200931E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995061906246	WITHOUT_CLASSIFICATION	4.93809375372893E-7	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988106471414	WITHOUT_CLASSIFICATION	1.1893528586488866E-6	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999953370226914	WITHOUT_CLASSIFICATION	4.6629773085644E-6	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999988919245084	WITHOUT_CLASSIFICATION	1.1080754915765073E-6	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999886446373694	WITHOUT_CLASSIFICATION	1.135536263052207E-5	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9999999119449834	WITHOUT_CLASSIFICATION	8.80550165396749E-8	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999949405392965	WITHOUT_CLASSIFICATION	5.059460703426111E-6	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999954709078462	WITHOUT_CLASSIFICATION	4.529092153834274E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999970633980904	WITHOUT_CLASSIFICATION	2.936601909631217E-6	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9999645125516478	WITHOUT_CLASSIFICATION	3.548744835231873E-5	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.999994862451333	WITHOUT_CLASSIFICATION	5.137548667098821E-6	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9999967841006261	WITHOUT_CLASSIFICATION	3.215899373885963E-6	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999922282855896	WITHOUT_CLASSIFICATION	7.771714410428893E-6	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999881560258738	WITHOUT_CLASSIFICATION	1.1843974126279808E-5	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999922251934137	WITHOUT_CLASSIFICATION	7.774806586245521E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999912501481207	WITHOUT_CLASSIFICATION	8.749851879249378E-6	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999859993954586	WITHOUT_CLASSIFICATION	1.4000604541297493E-5	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999999233966436	WITHOUT_CLASSIFICATION	7.660335654023654E-8	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999995475049106	WITHOUT_CLASSIFICATION	4.524950893535239E-7	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.999996012884699	WITHOUT_CLASSIFICATION	3.987115301026326E-6	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999847218906525	WITHOUT_CLASSIFICATION	1.527810934751852E-5	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.999999653973082	WITHOUT_CLASSIFICATION	3.4602691798831277E-7	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999941729924445	WITHOUT_CLASSIFICATION	5.827007555435738E-6	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999927476907375	WITHOUT_CLASSIFICATION	7.252309262590324E-6	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999617769527581	WITHOUT_CLASSIFICATION	3.8223047242005084E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999915248794852	WITHOUT_CLASSIFICATION	8.475120514811702E-6	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999992071184809	WITHOUT_CLASSIFICATION	7.928815190562054E-7	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999996194140375	WITHOUT_CLASSIFICATION	3.805859625376713E-7	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9999996365239172	WITHOUT_CLASSIFICATION	3.6347608280834524E-7	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999995557857462	WITHOUT_CLASSIFICATION	4.4421425371118125E-7	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997012538241	WITHOUT_CLASSIFICATION	2.9874617586359656E-7	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999994769569386	WITHOUT_CLASSIFICATION	5.230430613587004E-7	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9999968235281324	WITHOUT_CLASSIFICATION	3.176471867586566E-6	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999990717688648	WITHOUT_CLASSIFICATION	9.282311350949011E-7	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999981957427464	WITHOUT_CLASSIFICATION	1.80425725352309E-6	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.999998107374621	WITHOUT_CLASSIFICATION	1.8926253789834578E-6	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.99999997404508	WITHOUT_CLASSIFICATION	2.5954920080240808E-8	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999917114199086	WITHOUT_CLASSIFICATION	8.28858009138222E-6	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999882179525156	WITHOUT_CLASSIFICATION	1.178204748435409E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999970633980904	WITHOUT_CLASSIFICATION	2.936601909631217E-6	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999999559980282	WITHOUT_CLASSIFICATION	4.40019718172729E-8	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999998860986454	WITHOUT_CLASSIFICATION	1.1390135462145543E-7	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999997767394325	WITHOUT_CLASSIFICATION	2.232605674203441E-7	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999953339762089	WITHOUT_CLASSIFICATION	4.666023791148638E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999999379301264	WITHOUT_CLASSIFICATION	6.206987357576301E-8	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999983418429651	WITHOUT_CLASSIFICATION	1.6581570349608145E-6	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9999939159328257	WITHOUT_CLASSIFICATION	6.0840671742088805E-6	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9999951484831153	WITHOUT_CLASSIFICATION	4.851516884727544E-6	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999971389538597	WITHOUT_CLASSIFICATION	2.8610461403645214E-6	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999999489364383	WITHOUT_CLASSIFICATION	5.106356159950548E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999998881073909	WITHOUT_CLASSIFICATION	1.1189260900737492E-7	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999999382308058	WITHOUT_CLASSIFICATION	6.176919416326261E-8	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999994897327469	WITHOUT_CLASSIFICATION	5.102672530871146E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.999999937796286	WITHOUT_CLASSIFICATION	6.220371390633244E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999991391757204	WITHOUT_CLASSIFICATION	8.608242796823961E-7	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999994104482746	WITHOUT_CLASSIFICATION	5.895517254574929E-7	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9999962621358605	WITHOUT_CLASSIFICATION	3.7378641396398574E-6	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999877768159074	WITHOUT_CLASSIFICATION	1.222318409244843E-5	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999999273184512	WITHOUT_CLASSIFICATION	7.26815487687982E-8	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999973266222444	WITHOUT_CLASSIFICATION	2.673377755714554E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999998327843717	WITHOUT_CLASSIFICATION	1.6721562836994964E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9999975927095415	WITHOUT_CLASSIFICATION	2.4072904585516697E-6	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999920033971222	WITHOUT_CLASSIFICATION	7.996602877664528E-6	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999882405425695	WITHOUT_CLASSIFICATION	1.1759457430546404E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9999995620249896	WITHOUT_CLASSIFICATION	4.379750103453474E-7	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999959398424092	WITHOUT_CLASSIFICATION	4.060157590815826E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.999635088918073	WITHOUT_CLASSIFICATION	3.6491108192707584E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.999960694718121	WITHOUT_CLASSIFICATION	3.9305281879035234E-5	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9999649319542248	WITHOUT_CLASSIFICATION	3.506804577525136E-5	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999959647275842	WITHOUT_CLASSIFICATION	4.035272415792591E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999970633980904	WITHOUT_CLASSIFICATION	2.936601909631217E-6	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999998906827916	WITHOUT_CLASSIFICATION	1.0931720848650085E-7	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999999849883723	WITHOUT_CLASSIFICATION	1.5011627619697866E-8	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999955815285325	WITHOUT_CLASSIFICATION	4.418471467463156E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999970633980904	WITHOUT_CLASSIFICATION	2.936601909631217E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999785951606229	WITHOUT_CLASSIFICATION	2.1404839377015868E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999998327843717	WITHOUT_CLASSIFICATION	1.6721562836994964E-7	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9999974793639049	WITHOUT_CLASSIFICATION	2.5206360950982887E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9999991677935437	WITHOUT_CLASSIFICATION	8.322064563462543E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999999943989494	WITHOUT_CLASSIFICATION	5.6010505297762335E-9	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999999489364383	WITHOUT_CLASSIFICATION	5.106356159950548E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999998881073909	WITHOUT_CLASSIFICATION	1.1189260900737492E-7	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999999382308058	WITHOUT_CLASSIFICATION	6.176919416326261E-8	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999996980296125	WITHOUT_CLASSIFICATION	3.019703875324964E-7	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999931532798989	WITHOUT_CLASSIFICATION	6.846720101112139E-6	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.999979122884481	WITHOUT_CLASSIFICATION	2.087711551907884E-5	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.999998490417147	WITHOUT_CLASSIFICATION	1.5095828531124028E-6	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999999969817333	WITHOUT_CLASSIFICATION	3.0182666799900356E-9	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999970633980904	WITHOUT_CLASSIFICATION	2.936601909631217E-6	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999994897327469	WITHOUT_CLASSIFICATION	5.102672530871146E-7	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.999999937796286	WITHOUT_CLASSIFICATION	6.220371390633244E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993897411655	WITHOUT_CLASSIFICATION	6.102588344493972E-7	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989941522118	WITHOUT_CLASSIFICATION	1.0058477880875069E-6	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999997029082058	WITHOUT_CLASSIFICATION	2.9709179418841117E-7	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.999997536813793	WITHOUT_CLASSIFICATION	2.463186206958397E-6	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9999990229792417	WITHOUT_CLASSIFICATION	9.770207582729122E-7	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999999988275283	WITHOUT_CLASSIFICATION	1.1724717326239071E-9	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999953370226914	WITHOUT_CLASSIFICATION	4.6629773085644E-6	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999998641264662	WITHOUT_CLASSIFICATION	1.3587353388116251E-7	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.999999310211104	WITHOUT_CLASSIFICATION	6.897888960743655E-7	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999992147585441	WITHOUT_CLASSIFICATION	7.852414557932745E-7	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999984230286896	WITHOUT_CLASSIFICATION	1.576971310450819E-6	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.999999638868125	WITHOUT_CLASSIFICATION	3.6113187504253707E-7	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960640736381	WITHOUT_CLASSIFICATION	3.935926361937191E-6	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960381959486	WITHOUT_CLASSIFICATION	3.961804051318583E-6	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998275950045	WITHOUT_CLASSIFICATION	1.7240499537337614E-7	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.999999638868125	WITHOUT_CLASSIFICATION	3.6113187504253707E-7	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999936318895425	WITHOUT_CLASSIFICATION	6.368110457446087E-6	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999972396627639	WITHOUT_CLASSIFICATION	2.760337236067363E-6	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999961512632708	WITHOUT_CLASSIFICATION	3.848736729200724E-6	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999975407133613	WITHOUT_CLASSIFICATION	2.4592866385809663E-6	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999999766785579	WITHOUT_CLASSIFICATION	2.332144199517837E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.9997489242727869	WITHOUT_CLASSIFICATION	2.5107572721310117E-4	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998029605773	WITHOUT_CLASSIFICATION	1.9703942266246726E-7	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995061906246	WITHOUT_CLASSIFICATION	4.93809375372893E-7	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999981957427464	WITHOUT_CLASSIFICATION	1.80425725352309E-6	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999994390954363	WITHOUT_CLASSIFICATION	5.609045636838287E-7	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999999598298135	WITHOUT_CLASSIFICATION	4.017018649298537E-8	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999984333780048	WITHOUT_CLASSIFICATION	1.5666219952053829E-6	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999973137797069	WITHOUT_CLASSIFICATION	2.6862202930763067E-6	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999987682410437	WITHOUT_CLASSIFICATION	1.231758956253935E-6	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999998149845947	WITHOUT_CLASSIFICATION	1.8501540539353988E-7	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9999915186185596	WITHOUT_CLASSIFICATION	8.481381440490168E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997244880912447	WITHOUT_CLASSIFICATION	2.7551190875527664E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999987930284574	WITHOUT_CLASSIFICATION	1.2069715425730791E-6	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999950629760719	WITHOUT_CLASSIFICATION	4.9370239282184836E-6	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999999893560031	WITHOUT_CLASSIFICATION	1.0643996813021012E-8	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999999621542929	WITHOUT_CLASSIFICATION	3.784570708474254E-8	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999989696534108	WITHOUT_CLASSIFICATION	1.0303465891931254E-6	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999999252971654	WITHOUT_CLASSIFICATION	7.470283464394459E-8	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999886201366939	WITHOUT_CLASSIFICATION	1.1379863306148581E-5	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999843680427648	WITHOUT_CLASSIFICATION	1.5631957235179593E-5	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950814541732	WITHOUT_CLASSIFICATION	4.918545826816979E-6	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999994826339159	WITHOUT_CLASSIFICATION	5.173660839855796E-7	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999999694951232	WITHOUT_CLASSIFICATION	3.0504876903334196E-8	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9995046427391666	WITHOUT_CLASSIFICATION	4.953572608334475E-4	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999997680682014	WITHOUT_CLASSIFICATION	2.319317986001731E-6	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999995606615274	WITHOUT_CLASSIFICATION	4.393384725440584E-7	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999987391314481	WITHOUT_CLASSIFICATION	1.2608685518949388E-6	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999993493371981	WITHOUT_CLASSIFICATION	6.506628018735131E-7	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.999999970091746	WITHOUT_CLASSIFICATION	2.990825393887101E-8	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999941561600463	WITHOUT_CLASSIFICATION	5.843839953779964E-6	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999998222094141	WITHOUT_CLASSIFICATION	1.7779058594334598E-7	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999961099497914	WITHOUT_CLASSIFICATION	3.8900502086410625E-6	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999994482916421	WITHOUT_CLASSIFICATION	5.517083579179571E-7	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997344837434	WITHOUT_CLASSIFICATION	2.6551625667735804E-7	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999997320289191	WITHOUT_CLASSIFICATION	2.67971080879391E-7	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.999999970051911	WITHOUT_CLASSIFICATION	2.994808895588384E-8	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999828883343259	WITHOUT_CLASSIFICATION	1.7111665674125403E-5	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9999978868475373	WITHOUT_CLASSIFICATION	2.113152462798708E-6	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999950025948549	WITHOUT_CLASSIFICATION	4.99740514507551E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999937406532777	WITHOUT_CLASSIFICATION	6.259346722189596E-6	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999997966540296	WITHOUT_CLASSIFICATION	2.0334597037313302E-7	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999997058340935	WITHOUT_CLASSIFICATION	2.941659065400729E-7	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.999992628516042	WITHOUT_CLASSIFICATION	7.371483958118038E-6	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999994624441269	WITHOUT_CLASSIFICATION	5.375558731882419E-7	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999999634316066	WITHOUT_CLASSIFICATION	3.656839344139267E-8	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.999995680199109	WITHOUT_CLASSIFICATION	4.319800890990996E-6	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999923033253981	WITHOUT_CLASSIFICATION	7.696674601979406E-6	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999997106378485	WITHOUT_CLASSIFICATION	2.8936215150572294E-7	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999972847077885	WITHOUT_CLASSIFICATION	2.7152922114184096E-6	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999998053661232	WITHOUT_CLASSIFICATION	1.9463387684525063E-7	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999978874648805	WITHOUT_CLASSIFICATION	2.1125351195053624E-6	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999700187629956	WITHOUT_CLASSIFICATION	2.9981237004406304E-5	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999998502667967	WITHOUT_CLASSIFICATION	1.4973320335313296E-7	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9999997429152117	WITHOUT_CLASSIFICATION	2.5708478835717053E-7	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999780628428087	WITHOUT_CLASSIFICATION	2.1937157191378465E-5	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.999994085424031	WITHOUT_CLASSIFICATION	5.9145759690547984E-6	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999979400968564	WITHOUT_CLASSIFICATION	2.059903143679773E-6	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9999955947186739	WITHOUT_CLASSIFICATION	4.405281326059781E-6	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.999999328301451	WITHOUT_CLASSIFICATION	6.716985490352081E-7	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999991113871189	WITHOUT_CLASSIFICATION	8.886128811903684E-7	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999994499610373	WITHOUT_CLASSIFICATION	5.500389626474759E-7	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999948503271626	WITHOUT_CLASSIFICATION	5.1496728372792435E-6	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999999614870649	WITHOUT_CLASSIFICATION	3.851293509512457E-8	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999997965036689	WITHOUT_CLASSIFICATION	2.0349633114705397E-7	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999996768788448	WITHOUT_CLASSIFICATION	3.231211551677524E-7	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999982505612303	WITHOUT_CLASSIFICATION	1.74943876966057E-6	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999998830167058	WITHOUT_CLASSIFICATION	1.1698329411596943E-7	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999998635904619	WITHOUT_CLASSIFICATION	1.3640953809564104E-7	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9999982917509848	WITHOUT_CLASSIFICATION	1.7082490152870119E-6	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999952705518855	WITHOUT_CLASSIFICATION	4.729448114378231E-6	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999979969546275	WITHOUT_CLASSIFICATION	2.0030453724492925E-6	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999877623127248	WITHOUT_CLASSIFICATION	1.2237687275211385E-5	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.999993239534292	WITHOUT_CLASSIFICATION	6.7604657080545544E-6	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.9999952893560853	WITHOUT_CLASSIFICATION	4.710643914681888E-6	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999949781154069	WITHOUT_CLASSIFICATION	5.021884593061131E-6	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999953882699024	WITHOUT_CLASSIFICATION	4.611730097510915E-6	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999993136120797	WITHOUT_CLASSIFICATION	6.8638792017387E-7	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9999968810978591	WITHOUT_CLASSIFICATION	3.118902140894137E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999977562185032	WITHOUT_CLASSIFICATION	2.243781496761349E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999956698347792	WITHOUT_CLASSIFICATION	4.330165220766721E-6	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999998716961457	WITHOUT_CLASSIFICATION	1.2830385429993914E-7	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9999788071162555	WITHOUT_CLASSIFICATION	2.1192883744418672E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9999850368038985	WITHOUT_CLASSIFICATION	1.4963196101568685E-5	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999992576882735	WITHOUT_CLASSIFICATION	7.423117264836842E-7	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999827451230139	WITHOUT_CLASSIFICATION	1.7254876986083974E-5	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999905638544971	WITHOUT_CLASSIFICATION	9.436145502836963E-6	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999988807860406	WITHOUT_CLASSIFICATION	1.1192139594193263E-6	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999991368637826	WITHOUT_CLASSIFICATION	8.631362174934654E-7	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.999979910293315	WITHOUT_CLASSIFICATION	2.0089706685022787E-5	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999994972289677	WITHOUT_CLASSIFICATION	5.02771032320155E-7	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999845206260907	WITHOUT_CLASSIFICATION	1.547937390937737E-5	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999971053503904	WITHOUT_CLASSIFICATION	2.8946496095463935E-6	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999956979714161	WITHOUT_CLASSIFICATION	4.302028583911756E-6	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9999458349803995	WITHOUT_CLASSIFICATION	5.416501960060099E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999925140018676	WITHOUT_CLASSIFICATION	7.485998132404892E-6	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999966331016668	WITHOUT_CLASSIFICATION	3.3668983333056553E-6	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999674509203875	WITHOUT_CLASSIFICATION	3.254907961236636E-5	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999733432852341	WITHOUT_CLASSIFICATION	2.6656714765920313E-5	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9999834170767994	WITHOUT_CLASSIFICATION	1.6582923200586258E-5	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.99999378154456	WITHOUT_CLASSIFICATION	6.218455440047412E-6	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9999727434046477	WITHOUT_CLASSIFICATION	2.7256595352330495E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999954922461125	WITHOUT_CLASSIFICATION	4.507753887519599E-6	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999999955897766	WITHOUT_CLASSIFICATION	4.410223415623411E-9	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999920794476642	WITHOUT_CLASSIFICATION	7.920552335800929E-6	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.9999945881296747	WITHOUT_CLASSIFICATION	5.411870325266317E-6	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999985882104869	WITHOUT_CLASSIFICATION	1.4117895130679555E-6	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999920794476642	WITHOUT_CLASSIFICATION	7.920552335800929E-6	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999999814300682	WITHOUT_CLASSIFICATION	1.856993181738212E-8	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999997081738154	WITHOUT_CLASSIFICATION	2.9182618457296523E-7	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999831161127415	WITHOUT_CLASSIFICATION	1.6883887258457732E-5	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9999915886274899	WITHOUT_CLASSIFICATION	8.411372510124915E-6	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.9999983792768767	WITHOUT_CLASSIFICATION	1.6207231232455186E-6	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999998402394823	WITHOUT_CLASSIFICATION	1.597605176120528E-7	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9999338760405931	WITHOUT_CLASSIFICATION	6.61239594069354E-5	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999996879852062	WITHOUT_CLASSIFICATION	3.1201479382087045E-7	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999999171102437	WITHOUT_CLASSIFICATION	8.288975628528803E-8	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999831015388193	WITHOUT_CLASSIFICATION	1.6898461180781477E-5	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999997471751609	WITHOUT_CLASSIFICATION	2.5282483909925144E-7	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999999855931209	WITHOUT_CLASSIFICATION	1.4406879070032658E-8	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.999999253105538	WITHOUT_CLASSIFICATION	7.468944618578244E-7	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999999390390607	WITHOUT_CLASSIFICATION	6.096093925746076E-8	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999953586322	WITHOUT_CLASSIFICATION	4.6413678779852065E-9	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9999996507472603	WITHOUT_CLASSIFICATION	3.4925273972749025E-7	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999878003943878	WITHOUT_CLASSIFICATION	1.2199605612184854E-5	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999878003943878	WITHOUT_CLASSIFICATION	1.2199605612184854E-5	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999930285034	WITHOUT_CLASSIFICATION	6.971496621935721E-9	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9997153557721822	WITHOUT_CLASSIFICATION	2.8464422781780723E-4	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9998437902039508	WITHOUT_CLASSIFICATION	1.5620979604933377E-4	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.9999675654786715	WITHOUT_CLASSIFICATION	3.2434521328580926E-5	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999949142822233	WITHOUT_CLASSIFICATION	5.08571777665988E-6	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9999437262307518	WITHOUT_CLASSIFICATION	5.6273769248172256E-5	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999438592468005	WITHOUT_CLASSIFICATION	5.614075319949564E-5	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999994701757955	WITHOUT_CLASSIFICATION	5.298242045902729E-7	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999993924187001	WITHOUT_CLASSIFICATION	6.075812999329362E-7	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999989375224657	WITHOUT_CLASSIFICATION	1.0624775342258868E-6	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9999988858252057	WITHOUT_CLASSIFICATION	1.1141747942699897E-6	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999986857237155	WITHOUT_CLASSIFICATION	1.3142762844832332E-6	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9999928330632105	WITHOUT_CLASSIFICATION	7.16693678958371E-6	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9999995939930074	WITHOUT_CLASSIFICATION	4.060069925704031E-7	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.99999891709063	WITHOUT_CLASSIFICATION	1.0829093699720453E-6	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999886201366939	WITHOUT_CLASSIFICATION	1.1379863306148581E-5	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999994290011268	WITHOUT_CLASSIFICATION	5.709988730673838E-7	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999939677183936	WITHOUT_CLASSIFICATION	6.032281606540149E-6	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9999426730897795	WITHOUT_CLASSIFICATION	5.7326910220558823E-5	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9999339454308713	WITHOUT_CLASSIFICATION	6.605456912875488E-5	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999992518321653	WITHOUT_CLASSIFICATION	7.48167834779864E-7	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999873495723652	WITHOUT_CLASSIFICATION	1.2650427634762283E-5	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999989459038354	WITHOUT_CLASSIFICATION	1.054096164615906E-6	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.999996100470494	WITHOUT_CLASSIFICATION	3.899529505957374E-6	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999998188947661	WITHOUT_CLASSIFICATION	1.8110523394582312E-7	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.999999869042051	WITHOUT_CLASSIFICATION	1.3095794908483252E-7	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999998909817822	WITHOUT_CLASSIFICATION	1.0901821772898049E-7	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999998739887773	WITHOUT_CLASSIFICATION	1.260112227347785E-7	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999999028170592	WITHOUT_CLASSIFICATION	9.718294079417747E-8	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999815433664723	WITHOUT_CLASSIFICATION	1.8456633527666926E-5	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999763167274733	WITHOUT_CLASSIFICATION	2.36832725267262E-5	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999971005054242	WITHOUT_CLASSIFICATION	2.899494575849547E-6	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9999005547131882	WITHOUT_CLASSIFICATION	9.944528681193231E-5	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999900153953586	WITHOUT_CLASSIFICATION	9.98460464151719E-6	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999588331640338	WITHOUT_CLASSIFICATION	4.11668359661194E-5	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999962366196925	WITHOUT_CLASSIFICATION	3.763380307474607E-6	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.999984484186007	WITHOUT_CLASSIFICATION	1.551581399294535E-5	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999840294720197	WITHOUT_CLASSIFICATION	1.5970527980209413E-5	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999995778374973	WITHOUT_CLASSIFICATION	4.221625028351937E-7	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999977440809256	WITHOUT_CLASSIFICATION	2.255919074393519E-6	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999970579440255	WITHOUT_CLASSIFICATION	2.942055974517136E-6	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9999948442889833	WITHOUT_CLASSIFICATION	5.155711016635958E-6	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999989057095181	WITHOUT_CLASSIFICATION	1.0942904819167752E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.999999738406749	WITHOUT_CLASSIFICATION	2.615932510209569E-7	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999982098199187	WITHOUT_CLASSIFICATION	1.7901800811691413E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999999763739097	WITHOUT_CLASSIFICATION	2.362609032581642E-8	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999964314364368	WITHOUT_CLASSIFICATION	3.568563563097517E-6	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995794622849	WITHOUT_CLASSIFICATION	4.2053771516385106E-7	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984497462288	WITHOUT_CLASSIFICATION	1.5502537712451872E-6	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999999998730074	WITHOUT_CLASSIFICATION	1.2699257808036602E-10	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999973547909545	WITHOUT_CLASSIFICATION	2.6452090454422293E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997244880912447	WITHOUT_CLASSIFICATION	2.7551190875527664E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997244880912447	WITHOUT_CLASSIFICATION	2.7551190875527664E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999914688768201	WITHOUT_CLASSIFICATION	8.531123179934479E-6	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9999999956837167	WITHOUT_CLASSIFICATION	4.3162832821011554E-9	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999987274624372	WITHOUT_CLASSIFICATION	1.2725375627367046E-6	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999925966358638	WITHOUT_CLASSIFICATION	7.403364136204526E-6	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999987274624372	WITHOUT_CLASSIFICATION	1.2725375627367046E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999997145366405	WITHOUT_CLASSIFICATION	2.854633595093883E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.99999946081052	WITHOUT_CLASSIFICATION	5.391894799232378E-7	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9999996592282389	WITHOUT_CLASSIFICATION	3.407717612185941E-7	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999999407231001	WITHOUT_CLASSIFICATION	5.9276899873848084E-8	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999965633790157	WITHOUT_CLASSIFICATION	3.436620984436834E-6	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.999995206093064	WITHOUT_CLASSIFICATION	4.793906935931883E-6	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999998232398115	WITHOUT_CLASSIFICATION	1.767601884677604E-7	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999982830871311	WITHOUT_CLASSIFICATION	1.7169128689117697E-6	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999998431936644	WITHOUT_CLASSIFICATION	1.5680633570422357E-7	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9999930305629853	WITHOUT_CLASSIFICATION	6.969437014743587E-6	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999970811835481	WITHOUT_CLASSIFICATION	2.918816451900729E-6	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9999999775618916	WITHOUT_CLASSIFICATION	2.2438108427741716E-8	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999869531265831	WITHOUT_CLASSIFICATION	1.3046873416963212E-5	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9999999766339751	WITHOUT_CLASSIFICATION	2.3366024917569867E-8	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.999992930940666	WITHOUT_CLASSIFICATION	7.069059334068963E-6	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.99999970271426	WITHOUT_CLASSIFICATION	2.9728574010218943E-7	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999538005754582	WITHOUT_CLASSIFICATION	4.619942454178861E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999538005754582	WITHOUT_CLASSIFICATION	4.619942454178861E-5	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999842274168398	WITHOUT_CLASSIFICATION	1.577258316018576E-5	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999999021862815	WITHOUT_CLASSIFICATION	9.78137185115522E-8	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999999479592511	WITHOUT_CLASSIFICATION	5.204074900264352E-8	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999999651890306	WITHOUT_CLASSIFICATION	3.481096941754809E-8	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999999661672315	WITHOUT_CLASSIFICATION	3.383276859595491E-8	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999999424812337	WITHOUT_CLASSIFICATION	5.7518766310192186E-8	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999999615397356	WITHOUT_CLASSIFICATION	3.8460264439440024E-8	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999971163285232	WITHOUT_CLASSIFICATION	2.883671476730517E-6	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999993685373796	WITHOUT_CLASSIFICATION	6.314626204225421E-7	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999973247377469	WITHOUT_CLASSIFICATION	2.675262253050775E-6	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999985828394407	WITHOUT_CLASSIFICATION	1.4171605592968399E-6	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999990062352777	WITHOUT_CLASSIFICATION	9.937647223239298E-7	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999999791136145	WITHOUT_CLASSIFICATION	2.0886385505859084E-8	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.99999987528341	WITHOUT_CLASSIFICATION	1.24716590037659E-7	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999955908947563	WITHOUT_CLASSIFICATION	4.409105243786022E-6	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999998758526404	WITHOUT_CLASSIFICATION	1.2414735957343084E-7	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999981029457986	WITHOUT_CLASSIFICATION	1.8970542013109778E-6	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9999888913715912	WITHOUT_CLASSIFICATION	1.1108628408758246E-5	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.9999898398495592	WITHOUT_CLASSIFICATION	1.0160150440712675E-5	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999999728647694	WITHOUT_CLASSIFICATION	2.7135230546894997E-8	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999996405511773	WITHOUT_CLASSIFICATION	3.5944882264847426E-7	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999994896672966	WITHOUT_CLASSIFICATION	5.103327034512917E-7	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.999999943095393	WITHOUT_CLASSIFICATION	5.6904607025005587E-8	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999998781989653	WITHOUT_CLASSIFICATION	1.218010346734881E-7	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9999796435045203	WITHOUT_CLASSIFICATION	2.0356495479668423E-5	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999993091433542	WITHOUT_CLASSIFICATION	6.908566458146799E-7	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999985113170705	WITHOUT_CLASSIFICATION	1.4886829294548265E-6	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9999972489093156	WITHOUT_CLASSIFICATION	2.751090684310233E-6	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999799311272796	WITHOUT_CLASSIFICATION	2.0068872720398723E-5	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999967174371236	WITHOUT_CLASSIFICATION	3.2825628763083286E-6	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999521266617699	WITHOUT_CLASSIFICATION	4.7873338230157377E-5	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999978401373912	WITHOUT_CLASSIFICATION	2.159862608814582E-6	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999963608880736	WITHOUT_CLASSIFICATION	3.6391119264780877E-6	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999883354431142	WITHOUT_CLASSIFICATION	1.1664556885825621E-5	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999919972887649	WITHOUT_CLASSIFICATION	8.002711235084881E-6	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999997202855052	WITHOUT_CLASSIFICATION	2.797144947778808E-7	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999993062639442	WITHOUT_CLASSIFICATION	6.937360558521799E-7	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.999994392388319	WITHOUT_CLASSIFICATION	5.60761168095182E-6	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999977980136567	WITHOUT_CLASSIFICATION	2.201986343264859E-6	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999995097034899	WITHOUT_CLASSIFICATION	4.902965099586587E-7	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999993843636223	WITHOUT_CLASSIFICATION	6.156363777138916E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999956899951448	WITHOUT_CLASSIFICATION	4.3100048551533695E-6	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.999959026690353	WITHOUT_CLASSIFICATION	4.0973309647056845E-5	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9999971919545773	WITHOUT_CLASSIFICATION	2.8080454226841687E-6	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999999770543099	WITHOUT_CLASSIFICATION	2.2945690062225535E-8	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999999915377792	WITHOUT_CLASSIFICATION	8.462220785936273E-9	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9999671643676645	WITHOUT_CLASSIFICATION	3.283563233555901E-5	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999999008262809	WITHOUT_CLASSIFICATION	9.917371911159683E-8	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999995686252197	WITHOUT_CLASSIFICATION	4.313747803929445E-7	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999986127031021	WITHOUT_CLASSIFICATION	1.3872968979394662E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999991735795934	WITHOUT_CLASSIFICATION	8.2642040659791E-6	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999995562538343	WITHOUT_CLASSIFICATION	4.43746165702999E-7	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999999936209906	WITHOUT_CLASSIFICATION	6.3790094336242054E-9	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999997872442814	WITHOUT_CLASSIFICATION	2.1275571864349965E-7	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999898979162525	WITHOUT_CLASSIFICATION	1.0102083747572991E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999785951606229	WITHOUT_CLASSIFICATION	2.1404839377015868E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999785951606229	WITHOUT_CLASSIFICATION	2.1404839377015868E-5	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.999998228045856	WITHOUT_CLASSIFICATION	1.771954143982357E-6	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999805070665407	WITHOUT_CLASSIFICATION	1.9492933459301814E-5	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999909328829951	WITHOUT_CLASSIFICATION	9.067117004866126E-6	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999974651759647	WITHOUT_CLASSIFICATION	2.534824035318387E-6	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999998985866543	WITHOUT_CLASSIFICATION	1.0141334570422837E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999998746218243	WITHOUT_CLASSIFICATION	1.253781756852746E-7	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999995411519644	WITHOUT_CLASSIFICATION	4.5884803555617435E-7	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999999077277479	WITHOUT_CLASSIFICATION	9.227225207049973E-8	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999832205119596	WITHOUT_CLASSIFICATION	1.677948804043477E-5	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999992965542936	WITHOUT_CLASSIFICATION	7.034457063323352E-7	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999789356667305	WITHOUT_CLASSIFICATION	2.106433326943555E-5	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9999800870796527	WITHOUT_CLASSIFICATION	1.9912920347370477E-5	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9999534685618332	WITHOUT_CLASSIFICATION	4.653143816677253E-5	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999959945572952	WITHOUT_CLASSIFICATION	4.005442704850951E-6	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999997353566165	WITHOUT_CLASSIFICATION	2.6464338352678224E-7	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999998106642377	WITHOUT_CLASSIFICATION	1.8933576226898344E-7	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.999999973558883	WITHOUT_CLASSIFICATION	2.6441116928924194E-8	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.9999563254024942	WITHOUT_CLASSIFICATION	4.367459750572932E-5	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999935434925488	WITHOUT_CLASSIFICATION	6.456507451286684E-6	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999972162789618	WITHOUT_CLASSIFICATION	2.783721038300268E-6	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999999657046239	WITHOUT_CLASSIFICATION	3.4295376159398397E-8	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999977063360268	WITHOUT_CLASSIFICATION	2.293663973142116E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999032970767772	WITHOUT_CLASSIFICATION	9.670292322276538E-5	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.99999979847464	WITHOUT_CLASSIFICATION	2.0152535992922167E-7	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9999999426191004	WITHOUT_CLASSIFICATION	5.738089959276223E-8	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999999850058644	WITHOUT_CLASSIFICATION	1.499413562248316E-8	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9996774027639977	WITHOUT_CLASSIFICATION	3.225972360022814E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999120612622894	WITHOUT_CLASSIFICATION	8.793873771066453E-5	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999995157919828	WITHOUT_CLASSIFICATION	4.842080171678073E-7	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999032970767772	WITHOUT_CLASSIFICATION	9.670292322276538E-5	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999997272127902	WITHOUT_CLASSIFICATION	2.7278720981633773E-7	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999997112556619	WITHOUT_CLASSIFICATION	2.8874433810796413E-7	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9997652827791303	WITHOUT_CLASSIFICATION	2.3471722086953933E-4	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999872439897959	WITHOUT_CLASSIFICATION	1.2756010204117061E-5	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999997025037602	WITHOUT_CLASSIFICATION	2.974962397029144E-7	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999996443192248	WITHOUT_CLASSIFICATION	3.556807752102113E-7	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999999853436078	WITHOUT_CLASSIFICATION	1.4656392291662195E-8	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999988441544685	WITHOUT_CLASSIFICATION	1.1558455315663666E-6	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999984866797309	WITHOUT_CLASSIFICATION	1.5133202690751762E-6	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999872439897959	WITHOUT_CLASSIFICATION	1.2756010204117061E-5	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999985234017825	WITHOUT_CLASSIFICATION	1.476598217518152E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999984617434284	WITHOUT_CLASSIFICATION	1.5382565715501948E-6	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999974333153038	WITHOUT_CLASSIFICATION	2.5666846962218497E-6	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999269084707857	WITHOUT_CLASSIFICATION	7.309152921432085E-5	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9999998061056683	WITHOUT_CLASSIFICATION	1.9389433172487252E-7	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999985828394407	WITHOUT_CLASSIFICATION	1.4171605592968399E-6	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999995492593916	WITHOUT_CLASSIFICATION	4.5074060846983245E-7	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999995744225317	WITHOUT_CLASSIFICATION	4.255774682605001E-7	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999867456959851	WITHOUT_CLASSIFICATION	1.3254304014959127E-5	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.999997648716827	WITHOUT_CLASSIFICATION	2.3512831731016042E-6	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999653916254257	WITHOUT_CLASSIFICATION	3.4608374574212045E-5	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999983376318697	WITHOUT_CLASSIFICATION	1.6623681301968453E-6	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999789692968715	WITHOUT_CLASSIFICATION	2.103070312855716E-5	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999993606370756	WITHOUT_CLASSIFICATION	6.393629244388292E-7	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999913405939996	WITHOUT_CLASSIFICATION	8.659406000354002E-6	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999985549676169	WITHOUT_CLASSIFICATION	1.4450323831239501E-6	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999320270474936	WITHOUT_CLASSIFICATION	6.797295250641394E-5	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999999102693825	WITHOUT_CLASSIFICATION	8.97306175345823E-8	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999999907046812	WITHOUT_CLASSIFICATION	9.295318892607977E-9	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999958680953274	WITHOUT_CLASSIFICATION	4.131904672606555E-6	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999995915751423	WITHOUT_CLASSIFICATION	4.084248576360241E-7	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999988215567225	WITHOUT_CLASSIFICATION	1.1784432775595927E-6	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999981994849068	WITHOUT_CLASSIFICATION	1.8005150932102293E-6	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999996788176808	WITHOUT_CLASSIFICATION	3.2118231921892897E-7	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999998042127585	WITHOUT_CLASSIFICATION	1.9578724161896372E-7	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9999903436230615	WITHOUT_CLASSIFICATION	9.656376938450752E-6	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9999920243421653	WITHOUT_CLASSIFICATION	7.97565783471739E-6	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999991434815304	WITHOUT_CLASSIFICATION	8.565184697370522E-7	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999992286767305	WITHOUT_CLASSIFICATION	7.713232695133246E-7	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999998991242754	WITHOUT_CLASSIFICATION	1.008757245484285E-7	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999904518489006	WITHOUT_CLASSIFICATION	9.548151099418165E-6	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9999711876242049	WITHOUT_CLASSIFICATION	2.8812375795054625E-5	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999995876062822	WITHOUT_CLASSIFICATION	4.1239371786673815E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99999965732003	WITHOUT_CLASSIFICATION	3.426799699180256E-7	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999930151074912	WITHOUT_CLASSIFICATION	6.984892508884847E-6	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.999999999150377	WITHOUT_CLASSIFICATION	8.496230263060903E-10	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.999999073687729	WITHOUT_CLASSIFICATION	9.263122710924628E-7	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999969985507624	WITHOUT_CLASSIFICATION	3.001449237473179E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999991549010441	WITHOUT_CLASSIFICATION	8.450989559802724E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999991549010441	WITHOUT_CLASSIFICATION	8.450989559802724E-7	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999994261675704	WITHOUT_CLASSIFICATION	5.738324296108542E-7	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999994032701459	WITHOUT_CLASSIFICATION	5.967298539800903E-7	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999976097052689	WITHOUT_CLASSIFICATION	2.3902947311678475E-6	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999999034602709	WITHOUT_CLASSIFICATION	9.653972913642528E-8	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999965043044036	WITHOUT_CLASSIFICATION	3.495695596583969E-6	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999993811345378	WITHOUT_CLASSIFICATION	6.18865462240344E-7	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999974377705595	WITHOUT_CLASSIFICATION	2.562229440607927E-6	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999991508000814	WITHOUT_CLASSIFICATION	8.491999187045046E-7	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.999998542915353	WITHOUT_CLASSIFICATION	1.4570846470512608E-6	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999999494656745	WITHOUT_CLASSIFICATION	5.053432558396504E-8	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999991606050207	WITHOUT_CLASSIFICATION	8.393949793107832E-7	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999998739758413	WITHOUT_CLASSIFICATION	1.2602415861532537E-7	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999998467263841	WITHOUT_CLASSIFICATION	1.5327361587875735E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999991549010441	WITHOUT_CLASSIFICATION	8.450989559802724E-7	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999891830131826	WITHOUT_CLASSIFICATION	1.0816986817357087E-5	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999955921808575	WITHOUT_CLASSIFICATION	4.407819142468971E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999988575427528	WITHOUT_CLASSIFICATION	1.1424572473179094E-6	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.999997639788841	WITHOUT_CLASSIFICATION	2.360211159018106E-6	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999999498719067	WITHOUT_CLASSIFICATION	5.0128093356696933E-8	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.999993847138868	WITHOUT_CLASSIFICATION	6.152861132126614E-6	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999998763555744	WITHOUT_CLASSIFICATION	1.2364442559397246E-7	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999998813130822	WITHOUT_CLASSIFICATION	1.1868691776111873E-7	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.99999999143254	WITHOUT_CLASSIFICATION	8.567460083891383E-9	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.999998500662176	WITHOUT_CLASSIFICATION	1.4993378239214442E-6	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999997881797944	WITHOUT_CLASSIFICATION	2.1182020563067535E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99999965732003	WITHOUT_CLASSIFICATION	3.426799699180256E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999991549010441	WITHOUT_CLASSIFICATION	8.450989559802724E-7	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999981214971689	WITHOUT_CLASSIFICATION	1.878502831074265E-6	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999998517038889	WITHOUT_CLASSIFICATION	1.482961111321355E-7	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999950213664659	WITHOUT_CLASSIFICATION	4.978633534105946E-6	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999937486066806	WITHOUT_CLASSIFICATION	6.251393319365954E-6	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999994624349969	WITHOUT_CLASSIFICATION	5.375650031585496E-7	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999995749057856	WITHOUT_CLASSIFICATION	4.250942143697624E-7	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999813786058278	WITHOUT_CLASSIFICATION	1.862139417218634E-5	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999994065720995	WITHOUT_CLASSIFICATION	5.934279004670389E-7	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999994034318044	WITHOUT_CLASSIFICATION	5.965681956190662E-7	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999997414437812	WITHOUT_CLASSIFICATION	2.585562187704145E-7	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999989147237973	WITHOUT_CLASSIFICATION	1.0852762027121543E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997238329002608	WITHOUT_CLASSIFICATION	2.7616709973924037E-4	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999998881822729	WITHOUT_CLASSIFICATION	1.118177271002758E-7	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999998616062152	WITHOUT_CLASSIFICATION	1.383937847021011E-7	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999997145366405	WITHOUT_CLASSIFICATION	2.854633595093883E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999999456596057	WITHOUT_CLASSIFICATION	5.434039425030445E-8	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999999962732046	WITHOUT_CLASSIFICATION	3.7267953689412814E-9	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999996681697728	WITHOUT_CLASSIFICATION	3.3183022715895844E-7	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999978697090262	WITHOUT_CLASSIFICATION	2.130290973884006E-6	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999997839441731	WITHOUT_CLASSIFICATION	2.1605582695804285E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999971211173491	WITHOUT_CLASSIFICATION	2.878882650905994E-5	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999971211173491	WITHOUT_CLASSIFICATION	2.878882650905994E-5	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999998421283566	WITHOUT_CLASSIFICATION	1.5787164344050774E-7	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9999999653891093	WITHOUT_CLASSIFICATION	3.46108907032427E-8	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9999995763083607	WITHOUT_CLASSIFICATION	4.2369163931651543E-7	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.999999950870583	WITHOUT_CLASSIFICATION	4.912941706660824E-8	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999976487233235	WITHOUT_CLASSIFICATION	2.3512766764516675E-6	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999896818160008	WITHOUT_CLASSIFICATION	1.0318183999204718E-5	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999920397035812	WITHOUT_CLASSIFICATION	7.960296418689329E-6	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999997469943146	WITHOUT_CLASSIFICATION	2.5300568548510364E-7	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999997469943146	WITHOUT_CLASSIFICATION	2.5300568548510364E-7	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999784342361079	WITHOUT_CLASSIFICATION	2.1565763892160787E-5	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999925880783039	WITHOUT_CLASSIFICATION	7.411921696021702E-6	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999980173818798	WITHOUT_CLASSIFICATION	1.982618120243665E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999955564794627	WITHOUT_CLASSIFICATION	4.443520537311619E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999955564794627	WITHOUT_CLASSIFICATION	4.443520537311619E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999955564794627	WITHOUT_CLASSIFICATION	4.443520537311619E-6	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9999999285895688	WITHOUT_CLASSIFICATION	7.141043121772262E-8	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999986235088503	WITHOUT_CLASSIFICATION	1.3764911497026137E-6	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.999994880919197	WITHOUT_CLASSIFICATION	5.119080803003913E-6	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.999999935381949	WITHOUT_CLASSIFICATION	6.461805102031384E-8	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999999627050656	WITHOUT_CLASSIFICATION	3.7294934406912454E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999991549010441	WITHOUT_CLASSIFICATION	8.450989559802724E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999991549010441	WITHOUT_CLASSIFICATION	8.450989559802724E-7	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999999981728432	WITHOUT_CLASSIFICATION	1.8271567619362E-9	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999999836865648	WITHOUT_CLASSIFICATION	1.6313435195609764E-8	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999999133561364	WITHOUT_CLASSIFICATION	8.664386370261295E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.999994733078971	WITHOUT_CLASSIFICATION	5.266921028917966E-6	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999983271610643	WITHOUT_CLASSIFICATION	1.6728389357440274E-6	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999960963649719	WITHOUT_CLASSIFICATION	3.903635028162298E-6	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999947238422204	WITHOUT_CLASSIFICATION	5.276157779511549E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999999751787287	WITHOUT_CLASSIFICATION	2.4821271203069923E-8	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999983644938022	WITHOUT_CLASSIFICATION	1.6355061978484913E-6	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999992467237042	WITHOUT_CLASSIFICATION	7.532762958908507E-7	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999210526453444	WITHOUT_CLASSIFICATION	7.89473546556923E-5	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999976567860763	WITHOUT_CLASSIFICATION	2.3432139237104032E-6	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999976567860763	WITHOUT_CLASSIFICATION	2.3432139237104032E-6	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999984544080595	WITHOUT_CLASSIFICATION	1.5455919405850061E-6	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999984544080595	WITHOUT_CLASSIFICATION	1.5455919405850061E-6	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.999998470701608	WITHOUT_CLASSIFICATION	1.5292983920871893E-6	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999977085815874	WITHOUT_CLASSIFICATION	2.2914184125351987E-6	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999977085815874	WITHOUT_CLASSIFICATION	2.2914184125351987E-6	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999974304318252	WITHOUT_CLASSIFICATION	2.569568174745292E-6	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999963240613331	WITHOUT_CLASSIFICATION	3.6759386669682117E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999997253050126	WITHOUT_CLASSIFICATION	2.746949874316888E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999971211173491	WITHOUT_CLASSIFICATION	2.878882650905994E-5	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999997956289177	WITHOUT_CLASSIFICATION	2.043710823479537E-7	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999963240613331	WITHOUT_CLASSIFICATION	3.6759386669682117E-6	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9999924662754077	WITHOUT_CLASSIFICATION	7.533724592190988E-6	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999982721183381	WITHOUT_CLASSIFICATION	1.727881661797959E-6	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999980578367235	WITHOUT_CLASSIFICATION	1.9421632764253914E-6	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999981234886203	WITHOUT_CLASSIFICATION	1.876511379718534E-6	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999999965415481	WITHOUT_CLASSIFICATION	3.458451796628559E-9	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999936741142329	WITHOUT_CLASSIFICATION	6.325885767132369E-6	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999993158346889	WITHOUT_CLASSIFICATION	6.841653110571726E-7	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9999999250142585	WITHOUT_CLASSIFICATION	7.498574151310326E-8	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9999987132155879	WITHOUT_CLASSIFICATION	1.2867844121433393E-6	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9999973488702275	WITHOUT_CLASSIFICATION	2.651129772583875E-6	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999998285914152	WITHOUT_CLASSIFICATION	1.7140858473350784E-7	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9999932504165144	WITHOUT_CLASSIFICATION	6.749583485550814E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999963688647693	WITHOUT_CLASSIFICATION	3.631135230585061E-6	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.999998069865894	WITHOUT_CLASSIFICATION	1.9301341059966976E-6	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9999999955604089	WITHOUT_CLASSIFICATION	4.439591077653818E-9	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9999994198712371	WITHOUT_CLASSIFICATION	5.801287629553017E-7	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999998331229423	WITHOUT_CLASSIFICATION	1.6687705781290913E-7	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999993025869672	WITHOUT_CLASSIFICATION	6.974130327355201E-7	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999993025869672	WITHOUT_CLASSIFICATION	6.974130327355201E-7	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999988478385794	WITHOUT_CLASSIFICATION	1.1521614206422604E-6	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999995172213667	WITHOUT_CLASSIFICATION	4.827786332291936E-7	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999996592264508	WITHOUT_CLASSIFICATION	3.407735491670474E-7	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999959759211157	WITHOUT_CLASSIFICATION	4.0240788843099185E-6	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.999997917349727	WITHOUT_CLASSIFICATION	2.0826502730961665E-6	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999998974333913	WITHOUT_CLASSIFICATION	1.025666086034986E-7	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.999999723312149	WITHOUT_CLASSIFICATION	2.7668785095535735E-7	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999989768631169	WITHOUT_CLASSIFICATION	1.0231368831170103E-6	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999966811310236	WITHOUT_CLASSIFICATION	3.3188689764450805E-6	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999996249093736	WITHOUT_CLASSIFICATION	3.7509062645075335E-7	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999995493061788	WITHOUT_CLASSIFICATION	4.506938211696502E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997238329002608	WITHOUT_CLASSIFICATION	2.7616709973924037E-4	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999997823813375	WITHOUT_CLASSIFICATION	2.1761866251287604E-7	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999962240792765	WITHOUT_CLASSIFICATION	3.7759207235453753E-6	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999990083420501	WITHOUT_CLASSIFICATION	9.91657949857431E-7	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999922721032003	WITHOUT_CLASSIFICATION	7.727896799808013E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999999896864575	WITHOUT_CLASSIFICATION	1.0313542502402777E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999999896864575	WITHOUT_CLASSIFICATION	1.0313542502402777E-7	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.999997715445697	WITHOUT_CLASSIFICATION	2.284554302982426E-6	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9999998378063679	WITHOUT_CLASSIFICATION	1.621936320128105E-7	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9999958353434111	WITHOUT_CLASSIFICATION	4.164656588845475E-6	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999914390643557	WITHOUT_CLASSIFICATION	8.56093564424211E-6	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999855319078366	WITHOUT_CLASSIFICATION	1.4468092163436345E-5	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999934783805715	WITHOUT_CLASSIFICATION	6.521619428493189E-6	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999990438510002	WITHOUT_CLASSIFICATION	9.561489997534132E-7	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999984595179799	WITHOUT_CLASSIFICATION	1.5404820200511145E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999979760557484	WITHOUT_CLASSIFICATION	2.023944251746472E-6	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999998774568548	WITHOUT_CLASSIFICATION	1.225431451027139E-7	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999985963290234	WITHOUT_CLASSIFICATION	1.4036709764535243E-6	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999984595179799	WITHOUT_CLASSIFICATION	1.5404820200511145E-6	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9999999061897554	WITHOUT_CLASSIFICATION	9.381024465071248E-8	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999922329551941	WITHOUT_CLASSIFICATION	7.767044805919614E-6	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999999662712167	WITHOUT_CLASSIFICATION	3.372878340950372E-8	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999990541695954	WITHOUT_CLASSIFICATION	9.458304044187029E-7	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999998424313651	WITHOUT_CLASSIFICATION	1.575686349965671E-7	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.999999698708318	WITHOUT_CLASSIFICATION	3.012916821460238E-7	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999900670636235	WITHOUT_CLASSIFICATION	9.932936376471157E-6	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999991989637185	WITHOUT_CLASSIFICATION	8.010362815207743E-7	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999994641312867	WITHOUT_CLASSIFICATION	5.35868713253624E-7	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999868614207019	WITHOUT_CLASSIFICATION	1.313857929799313E-5	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.999995868451404	WITHOUT_CLASSIFICATION	4.1315485959584605E-6	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.999999701133627	WITHOUT_CLASSIFICATION	2.9886637290802043E-7	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999770209265476	WITHOUT_CLASSIFICATION	2.2979073452396354E-5	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999999411564463	WITHOUT_CLASSIFICATION	5.884355367558759E-8	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999979685390192	WITHOUT_CLASSIFICATION	2.0314609808284523E-6	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999990012862671	WITHOUT_CLASSIFICATION	9.987137328977223E-7	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.999999269357126	WITHOUT_CLASSIFICATION	7.306428740309562E-7	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9999899696805027	WITHOUT_CLASSIFICATION	1.0030319497328835E-5	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9999868856724161	WITHOUT_CLASSIFICATION	1.3114327583859798E-5	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999936128467187	WITHOUT_CLASSIFICATION	6.387153281249923E-6	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9999998565619703	WITHOUT_CLASSIFICATION	1.4343802965063157E-7	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9999996916049743	WITHOUT_CLASSIFICATION	3.08395025738003E-7	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.999998340620512	WITHOUT_CLASSIFICATION	1.6593794880163724E-6	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.999984450745421	WITHOUT_CLASSIFICATION	1.5549254579106758E-5	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999955879313185	WITHOUT_CLASSIFICATION	4.412068681470226E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999905486774432	WITHOUT_CLASSIFICATION	9.451322556704967E-6	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.999999695930844	WITHOUT_CLASSIFICATION	3.0406915596145514E-7	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999934619428392	WITHOUT_CLASSIFICATION	6.538057160728402E-6	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999991663692788	WITHOUT_CLASSIFICATION	8.336307212098757E-7	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999999489619136	WITHOUT_CLASSIFICATION	5.103808636943917E-8	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999994701066567	WITHOUT_CLASSIFICATION	5.298933432967523E-7	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999979201912232	WITHOUT_CLASSIFICATION	2.07980877678243E-6	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999981944667257	WITHOUT_CLASSIFICATION	1.8055332743606055E-6	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999999993183424	WITHOUT_CLASSIFICATION	6.816576787165148E-10	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999998575884416	WITHOUT_CLASSIFICATION	1.4241155852108318E-7	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999979025695253	WITHOUT_CLASSIFICATION	2.097430474692791E-6	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999998756685863	WITHOUT_CLASSIFICATION	1.2433141365503648E-7	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999986899018641	WITHOUT_CLASSIFICATION	1.3100981358099287E-6	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.999998752850829	WITHOUT_CLASSIFICATION	1.2471491711014227E-6	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999986209381434	WITHOUT_CLASSIFICATION	1.3790618565865805E-6	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999835578112185	WITHOUT_CLASSIFICATION	1.644218878142875E-5	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.999999440210804	WITHOUT_CLASSIFICATION	5.597891959905723E-7	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999977424003739	WITHOUT_CLASSIFICATION	2.257599626058079E-6	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999999888083453	WITHOUT_CLASSIFICATION	1.1191654837331231E-8	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.999998041564991	WITHOUT_CLASSIFICATION	1.958435009006345E-6	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999998489423051	WITHOUT_CLASSIFICATION	1.5105769492303515E-7	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999999971135581	WITHOUT_CLASSIFICATION	2.886441927296743E-9	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999988546919764	WITHOUT_CLASSIFICATION	1.145308023568838E-6	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999993336036281	WITHOUT_CLASSIFICATION	6.663963719119032E-7	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999947693562069	WITHOUT_CLASSIFICATION	5.230643793058867E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995995566257	WITHOUT_CLASSIFICATION	4.004433743372375E-7	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999998349145125	WITHOUT_CLASSIFICATION	1.6508548738947363E-7	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999999371799732	WITHOUT_CLASSIFICATION	6.282002689643993E-8	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999997926798476	WITHOUT_CLASSIFICATION	2.0732015232296766E-7	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999999768926283	WITHOUT_CLASSIFICATION	2.310737170497267E-8	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999969148385776	WITHOUT_CLASSIFICATION	3.0851614225358302E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999998189415238	WITHOUT_CLASSIFICATION	1.81058476234222E-7	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999995783436375	WITHOUT_CLASSIFICATION	4.2165636248467433E-7	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999986570969528	WITHOUT_CLASSIFICATION	1.3429030471902345E-6	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999996100940032	WITHOUT_CLASSIFICATION	3.899059967936084E-7	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999986010892287	WITHOUT_CLASSIFICATION	1.398910771418523E-6	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999999529073534	WITHOUT_CLASSIFICATION	4.709264662901092E-8	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999957236742374	WITHOUT_CLASSIFICATION	4.276325762636481E-6	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.999998960991944	WITHOUT_CLASSIFICATION	1.0390080559704332E-6	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9999984071619609	WITHOUT_CLASSIFICATION	1.5928380391823175E-6	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999870810151971	WITHOUT_CLASSIFICATION	1.2918984802919125E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995995566257	WITHOUT_CLASSIFICATION	4.004433743372375E-7	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999999331754938	WITHOUT_CLASSIFICATION	6.682450616673622E-8	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999998622894428	WITHOUT_CLASSIFICATION	1.377105572235113E-7	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999977891717499	WITHOUT_CLASSIFICATION	2.2108282502467626E-6	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.999994730543678	WITHOUT_CLASSIFICATION	5.269456322029626E-6	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.999996737317025	WITHOUT_CLASSIFICATION	3.262682974966445E-6	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999990707493337	WITHOUT_CLASSIFICATION	9.292506663428168E-7	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999979760557484	WITHOUT_CLASSIFICATION	2.023944251746472E-6	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999997513820009	WITHOUT_CLASSIFICATION	2.4861799909896024E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999998575884416	WITHOUT_CLASSIFICATION	1.4241155852108318E-7	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9999993196365607	WITHOUT_CLASSIFICATION	6.803634392301335E-7	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999981876957195	WITHOUT_CLASSIFICATION	1.812304280509114E-6	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999939930666796	WITHOUT_CLASSIFICATION	6.006933320385525E-6	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999919933855691	WITHOUT_CLASSIFICATION	8.006614430997246E-6	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999989935234226	WITHOUT_CLASSIFICATION	1.006476577382062E-6	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999970334696537	WITHOUT_CLASSIFICATION	2.9665303462681364E-6	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999975172838462	WITHOUT_CLASSIFICATION	2.482716153737668E-6	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999999634175695	WITHOUT_CLASSIFICATION	3.6582430465235594E-8	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.999999741091666	WITHOUT_CLASSIFICATION	2.5890833408020293E-7	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999993035520091	WITHOUT_CLASSIFICATION	6.964479908354476E-7	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999956886046336	WITHOUT_CLASSIFICATION	4.311395366433311E-6	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999983186188153	WITHOUT_CLASSIFICATION	1.6813811847946917E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999956956095025	WITHOUT_CLASSIFICATION	4.3043904974859E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999956956095025	WITHOUT_CLASSIFICATION	4.3043904974859E-6	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999996969411318	WITHOUT_CLASSIFICATION	3.0305886825935856E-7	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999892215261754	WITHOUT_CLASSIFICATION	1.0778473824523861E-5	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.999999988140362	WITHOUT_CLASSIFICATION	1.185963799092771E-8	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.999999713698205	WITHOUT_CLASSIFICATION	2.8630179509394963E-7	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999998628917893	WITHOUT_CLASSIFICATION	1.3710821066820733E-7	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999901077492176	WITHOUT_CLASSIFICATION	9.892250782322532E-6	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999963841301938	WITHOUT_CLASSIFICATION	3.6158698062606625E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999989335322765	WITHOUT_CLASSIFICATION	1.0664677234799528E-6	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999998630081894	WITHOUT_CLASSIFICATION	1.3699181065690974E-7	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999997621916978	WITHOUT_CLASSIFICATION	2.3780830209233384E-7	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999981002936131	WITHOUT_CLASSIFICATION	1.8997063868764306E-6	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999971831368993	WITHOUT_CLASSIFICATION	2.816863100599348E-6	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999978133370695	WITHOUT_CLASSIFICATION	2.1866629304777585E-6	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999791140807	WITHOUT_CLASSIFICATION	2.088591928326594E-8	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.999998260325835	WITHOUT_CLASSIFICATION	1.7396741649083235E-6	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999846210774792	WITHOUT_CLASSIFICATION	1.5378922520789076E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9999982731081669	WITHOUT_CLASSIFICATION	1.7268918331111556E-6	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999999355034359	WITHOUT_CLASSIFICATION	6.449656403861339E-8	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999970470207874	WITHOUT_CLASSIFICATION	2.9529792125762182E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999996604631547	WITHOUT_CLASSIFICATION	3.395368453493759E-7	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.999981706437255	WITHOUT_CLASSIFICATION	1.8293562745032152E-5	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999947318574433	WITHOUT_CLASSIFICATION	5.268142556669296E-6	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999991254746531	WITHOUT_CLASSIFICATION	8.745253468859312E-7	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.9999065533592968	WITHOUT_CLASSIFICATION	9.344664070313556E-5	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9999994301986028	WITHOUT_CLASSIFICATION	5.698013972110922E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793167280829	WITHOUT_CLASSIFICATION	2.0683271917056612E-5	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999993826836036	WITHOUT_CLASSIFICATION	6.173163964827575E-7	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.999999676490798	WITHOUT_CLASSIFICATION	3.235092019553982E-7	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999736848724792	WITHOUT_CLASSIFICATION	2.6315127520845633E-5	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999943363907571	WITHOUT_CLASSIFICATION	5.66360924291743E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.999635088918073	WITHOUT_CLASSIFICATION	3.6491108192707584E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9999240296782201	WITHOUT_CLASSIFICATION	7.597032177985548E-5	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999999994164347	WITHOUT_CLASSIFICATION	5.835653149352272E-10	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999999968834203	WITHOUT_CLASSIFICATION	3.116579687409885E-9	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999987407198667	WITHOUT_CLASSIFICATION	1.2592801332175267E-6	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999998647557884	WITHOUT_CLASSIFICATION	1.3524421169144455E-7	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999954665693904	WITHOUT_CLASSIFICATION	4.533430609643075E-6	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9999952119727266	WITHOUT_CLASSIFICATION	4.788027273481255E-6	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999910387626418	WITHOUT_CLASSIFICATION	8.961237358060496E-6	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999898391841953	WITHOUT_CLASSIFICATION	1.0160815804690879E-5	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928607180144	WITHOUT_CLASSIFICATION	7.139281985616036E-6	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999999193031588	WITHOUT_CLASSIFICATION	8.069684124837123E-8	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999506784401246	WITHOUT_CLASSIFICATION	4.932155987542105E-5	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999880615084893	WITHOUT_CLASSIFICATION	1.1938491510681764E-5	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999990931197132	WITHOUT_CLASSIFICATION	9.068802867654057E-7	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999961512632708	WITHOUT_CLASSIFICATION	3.848736729200724E-6	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9971161691226125	WITHOUT_CLASSIFICATION	0.002883830877387455	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999984834066356	WITHOUT_CLASSIFICATION	1.5165933644081486E-6	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999999806227061	WITHOUT_CLASSIFICATION	1.9377293873642543E-8	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999995601109216	WITHOUT_CLASSIFICATION	4.3988907835284703E-7	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999982563733505	WITHOUT_CLASSIFICATION	1.7436266495403828E-6	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999990175296303	WITHOUT_CLASSIFICATION	9.824703697215688E-7	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999988186985417	WITHOUT_CLASSIFICATION	1.1813014583595617E-6	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999957248454768	WITHOUT_CLASSIFICATION	4.275154523220453E-6	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999971649442887	WITHOUT_CLASSIFICATION	2.8350557112880354E-6	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999999589114043	WITHOUT_CLASSIFICATION	4.108859572094239E-8	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.999988113739969	WITHOUT_CLASSIFICATION	1.1886260031019514E-5	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9999988369504335	WITHOUT_CLASSIFICATION	1.1630495664992327E-6	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999981496371518	WITHOUT_CLASSIFICATION	1.850362848161521E-6	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999943334171776	WITHOUT_CLASSIFICATION	5.666582822437384E-6	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.999999650622186	WITHOUT_CLASSIFICATION	3.493778140869409E-7	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999973259462953	WITHOUT_CLASSIFICATION	2.674053704774339E-6	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999951095795072	WITHOUT_CLASSIFICATION	4.890420492862428E-6	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.999999500921652	WITHOUT_CLASSIFICATION	4.990783479963851E-7	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999946656626678	WITHOUT_CLASSIFICATION	5.334337332198873E-6	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999956628550628	WITHOUT_CLASSIFICATION	4.337144937181938E-6	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999978825744864	WITHOUT_CLASSIFICATION	2.117425513697042E-6	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999995870448564	WITHOUT_CLASSIFICATION	4.129551436508267E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999991305400104	WITHOUT_CLASSIFICATION	8.69459989709173E-7	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999998504132498	WITHOUT_CLASSIFICATION	1.4958675024647427E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999991305400104	WITHOUT_CLASSIFICATION	8.69459989709173E-7	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999999847681703	WITHOUT_CLASSIFICATION	1.5231829745301923E-8	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999998469773199	WITHOUT_CLASSIFICATION	1.530226800750814E-7	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999694985752209	WITHOUT_CLASSIFICATION	3.0501424779174303E-5	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999998070952735	WITHOUT_CLASSIFICATION	1.9290472656205483E-7	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999999568045238	WITHOUT_CLASSIFICATION	4.3195476122112025E-8	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999462160335476	WITHOUT_CLASSIFICATION	5.378396645241674E-5	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.999999814699299	WITHOUT_CLASSIFICATION	1.8530070089453058E-7	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.999998811741736	WITHOUT_CLASSIFICATION	1.1882582640486666E-6	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999989685407547	WITHOUT_CLASSIFICATION	1.031459245259589E-6	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999998933771992	WITHOUT_CLASSIFICATION	1.0662280088397365E-7	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999987256097314	WITHOUT_CLASSIFICATION	1.2743902686397596E-6	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999986807179867	WITHOUT_CLASSIFICATION	1.3192820132389134E-6	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.999999918755368	WITHOUT_CLASSIFICATION	8.124463195441255E-8	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9999994870527548	WITHOUT_CLASSIFICATION	5.129472453238719E-7	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.999997504506856	WITHOUT_CLASSIFICATION	2.4954931440783435E-6	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.99999970654945	WITHOUT_CLASSIFICATION	2.9345054995254017E-7	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999997454957549	WITHOUT_CLASSIFICATION	2.5450424510416033E-7	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999997694891106	WITHOUT_CLASSIFICATION	2.3051088945914155E-7	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999999831971856	WITHOUT_CLASSIFICATION	1.6802814399651888E-8	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9999982870757053	WITHOUT_CLASSIFICATION	1.712924294719032E-6	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999994292947361	WITHOUT_CLASSIFICATION	5.707052638242044E-7	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9999953415231619	WITHOUT_CLASSIFICATION	4.6584768381102214E-6	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999972164411318	WITHOUT_CLASSIFICATION	2.783558868164121E-6	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.999999966093614	WITHOUT_CLASSIFICATION	3.390638604391688E-8	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999984114081952	WITHOUT_CLASSIFICATION	1.5885918047556991E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999905015840976	WITHOUT_CLASSIFICATION	9.498415902423128E-6	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999969696753059	WITHOUT_CLASSIFICATION	3.030324694019474E-6	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9999928925712661	WITHOUT_CLASSIFICATION	7.107428733918751E-6	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999947827424507	WITHOUT_CLASSIFICATION	5.217257549391194E-6	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999994813282409	WITHOUT_CLASSIFICATION	5.186717590553725E-7	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9999918851180446	WITHOUT_CLASSIFICATION	8.11488195538677E-6	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999267393650895	WITHOUT_CLASSIFICATION	7.326063491054439E-5	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999999916318894	WITHOUT_CLASSIFICATION	8.368110665906118E-9	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999961488085878	WITHOUT_CLASSIFICATION	3.851191412215711E-6	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999971504525565	WITHOUT_CLASSIFICATION	2.8495474433962376E-6	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9999853687638841	WITHOUT_CLASSIFICATION	1.463123611600038E-5	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999864798043908	WITHOUT_CLASSIFICATION	1.3520195609140393E-5	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999919827548225	WITHOUT_CLASSIFICATION	8.017245177542605E-6	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.9999272805333944	WITHOUT_CLASSIFICATION	7.271946660568368E-5	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999998060323521	WITHOUT_CLASSIFICATION	1.939676479067206E-7	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999796779882683	WITHOUT_CLASSIFICATION	2.0322011731703834E-5	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9999974068818605	WITHOUT_CLASSIFICATION	2.593118139578282E-6	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999955815285325	WITHOUT_CLASSIFICATION	4.418471467463156E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999905015840976	WITHOUT_CLASSIFICATION	9.498415902423128E-6	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9997285772343961	WITHOUT_CLASSIFICATION	2.7142276560382914E-4	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999992616321874	WITHOUT_CLASSIFICATION	7.383678124499171E-7	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9999577632525668	WITHOUT_CLASSIFICATION	4.223674743331842E-5	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999991350763758	WITHOUT_CLASSIFICATION	8.649236241481934E-7	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999805159553015	WITHOUT_CLASSIFICATION	1.9484044698625784E-5	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999916897142394	WITHOUT_CLASSIFICATION	8.310285760568445E-6	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999965653154822	WITHOUT_CLASSIFICATION	3.434684517955785E-6	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999998477216193	WITHOUT_CLASSIFICATION	1.5227838070657443E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.99999863860973	WITHOUT_CLASSIFICATION	1.361390269985515E-6	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999999024307336	WITHOUT_CLASSIFICATION	9.756926650188935E-8	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9999975908240727	WITHOUT_CLASSIFICATION	2.4091759272087138E-6	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999950526620113	WITHOUT_CLASSIFICATION	4.947337988724728E-6	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9999877745028337	WITHOUT_CLASSIFICATION	1.2225497166242393E-5	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9999814866282203	WITHOUT_CLASSIFICATION	1.8513371779690703E-5	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999837866260599	WITHOUT_CLASSIFICATION	1.6213373940129867E-5	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999999719503474	WITHOUT_CLASSIFICATION	2.804965265436346E-8	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999929315590919	WITHOUT_CLASSIFICATION	7.068440908192447E-6	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999987289512025	WITHOUT_CLASSIFICATION	1.2710487975305466E-6	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999999557768731	WITHOUT_CLASSIFICATION	4.422312689030619E-8	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9997285772343961	WITHOUT_CLASSIFICATION	2.7142276560382914E-4	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9999950172167478	WITHOUT_CLASSIFICATION	4.9827832522647865E-6	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999998077804758	WITHOUT_CLASSIFICATION	1.9221952425628126E-7	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999852175270384	WITHOUT_CLASSIFICATION	1.4782472961683611E-5	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999979837188918	WITHOUT_CLASSIFICATION	2.0162811080905603E-6	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9999994196380022	WITHOUT_CLASSIFICATION	5.803619978296044E-7	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999885618475429	WITHOUT_CLASSIFICATION	1.1438152457080778E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999885618475429	WITHOUT_CLASSIFICATION	1.1438152457080778E-5	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999984150363765	WITHOUT_CLASSIFICATION	1.584963623419663E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999885618475429	WITHOUT_CLASSIFICATION	1.1438152457080778E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999885618475429	WITHOUT_CLASSIFICATION	1.1438152457080778E-5	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9998242695086792	WITHOUT_CLASSIFICATION	1.7573049132086328E-4	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999987768115405	WITHOUT_CLASSIFICATION	1.2231884595010996E-6	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999996948139139	WITHOUT_CLASSIFICATION	3.0518608602998866E-7	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.999999325694596	WITHOUT_CLASSIFICATION	6.743054040526178E-7	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999954929643814	WITHOUT_CLASSIFICATION	4.5070356186330526E-6	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9999979437403046	WITHOUT_CLASSIFICATION	2.056259695391804E-6	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9999835482541466	WITHOUT_CLASSIFICATION	1.6451745853387395E-5	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999801064522511	WITHOUT_CLASSIFICATION	1.9893547748841843E-5	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999767187274479	WITHOUT_CLASSIFICATION	2.3281272552106487E-5	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9999629617168933	WITHOUT_CLASSIFICATION	3.7038283106724316E-5	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9999945140148087	WITHOUT_CLASSIFICATION	5.48598519136143E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999910803938313	WITHOUT_CLASSIFICATION	8.919606168634714E-6	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999972633277385	WITHOUT_CLASSIFICATION	2.7366722614695274E-6	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.999978704965447	WITHOUT_CLASSIFICATION	2.1295034552983086E-5	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999945851417913	WITHOUT_CLASSIFICATION	5.4148582086848054E-6	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999771444491802	WITHOUT_CLASSIFICATION	2.2855550819876378E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999914688768201	WITHOUT_CLASSIFICATION	8.531123179934479E-6	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.999973670862877	WITHOUT_CLASSIFICATION	2.6329137122924375E-5	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999236690356365	WITHOUT_CLASSIFICATION	7.633096436344302E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9999725888573154	WITHOUT_CLASSIFICATION	2.7411142684464835E-5	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.999997996419211	WITHOUT_CLASSIFICATION	2.003580788925699E-6	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999489206984661	WITHOUT_CLASSIFICATION	5.1079301533988984E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999914688768201	WITHOUT_CLASSIFICATION	8.531123179934479E-6	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999969696753059	WITHOUT_CLASSIFICATION	3.030324694019474E-6	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.999987642749761	WITHOUT_CLASSIFICATION	1.2357250238984641E-5	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999993493371981	WITHOUT_CLASSIFICATION	6.506628018735131E-7	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999998222094141	WITHOUT_CLASSIFICATION	1.7779058594334598E-7	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9999231053766611	WITHOUT_CLASSIFICATION	7.689462333888633E-5	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999987248978394	WITHOUT_CLASSIFICATION	1.2751021605479027E-6	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.9999984529106317	WITHOUT_CLASSIFICATION	1.547089368295581E-6	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999981400056405	WITHOUT_CLASSIFICATION	1.8599943595386445E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999924485276578	WITHOUT_CLASSIFICATION	7.551472342284214E-6	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999977533672634	WITHOUT_CLASSIFICATION	2.2466327367503E-6	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9999937062117151	WITHOUT_CLASSIFICATION	6.293788284895653E-6	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999998480715041	WITHOUT_CLASSIFICATION	1.519284958044177E-7	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.999999324283175	WITHOUT_CLASSIFICATION	6.757168250724663E-7	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999993967744202	WITHOUT_CLASSIFICATION	6.032255798707943E-7	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9999960236452313	WITHOUT_CLASSIFICATION	3.976354768756457E-6	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.999999927931677	WITHOUT_CLASSIFICATION	7.206832292116684E-8	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999994825404882	WITHOUT_CLASSIFICATION	5.174595117419816E-7	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999987095191964	WITHOUT_CLASSIFICATION	1.2904808035744504E-6	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999999657054653	WITHOUT_CLASSIFICATION	3.429453459126445E-8	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.999999840794834	WITHOUT_CLASSIFICATION	1.592051660188266E-7	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.999997522037386	WITHOUT_CLASSIFICATION	2.4779626141080276E-6	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999990930778516	WITHOUT_CLASSIFICATION	9.069221484580517E-7	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999998602609155	WITHOUT_CLASSIFICATION	1.3973908456682946E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999924485276578	WITHOUT_CLASSIFICATION	7.551472342284214E-6	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999858803122748	WITHOUT_CLASSIFICATION	1.411968772524807E-5	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9999891935944791	WITHOUT_CLASSIFICATION	1.0806405520851676E-5	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9999875968935392	WITHOUT_CLASSIFICATION	1.2403106460772082E-5	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999992426913135	WITHOUT_CLASSIFICATION	7.57308686470747E-7	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998901832625	WITHOUT_CLASSIFICATION	1.0981673750661167E-6	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.999994548773888	WITHOUT_CLASSIFICATION	5.451226111955741E-6	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9999921368154823	WITHOUT_CLASSIFICATION	7.86318451776647E-6	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999830682071759	WITHOUT_CLASSIFICATION	1.6931792824225942E-5	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.9999955805291604	WITHOUT_CLASSIFICATION	4.4194708396773794E-6	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9999495689093382	WITHOUT_CLASSIFICATION	5.043109066174242E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999822984477589	WITHOUT_CLASSIFICATION	1.7701552241107334E-5	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999999942208007	WITHOUT_CLASSIFICATION	5.779199340331787E-9	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999955682519556	WITHOUT_CLASSIFICATION	4.4317480443613905E-6	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999991834410181	WITHOUT_CLASSIFICATION	8.165589818391929E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999632519147811	WITHOUT_CLASSIFICATION	3.674808521893098E-5	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999521171424072	WITHOUT_CLASSIFICATION	4.788285759276353E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999972957734314	WITHOUT_CLASSIFICATION	2.704226568494894E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999822984477589	WITHOUT_CLASSIFICATION	1.7701552241107334E-5	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999998115893254	WITHOUT_CLASSIFICATION	1.8841067457371406E-7	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9999993314293645	WITHOUT_CLASSIFICATION	6.685706355542335E-7	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999986600596533	WITHOUT_CLASSIFICATION	1.3399403467560884E-6	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.999990913081358	WITHOUT_CLASSIFICATION	9.086918641978604E-6	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.999998476691276	WITHOUT_CLASSIFICATION	1.5233087240868185E-6	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.99999991336793	WITHOUT_CLASSIFICATION	8.663206996042642E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999632519147811	WITHOUT_CLASSIFICATION	3.674808521893098E-5	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999999163459784	WITHOUT_CLASSIFICATION	8.365402156024754E-8	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999088483757	WITHOUT_CLASSIFICATION	9.115162431589523E-7	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999784626352	WITHOUT_CLASSIFICATION	2.1537364811771053E-7	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999982278382366	WITHOUT_CLASSIFICATION	1.7721617634784394E-6	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985762638703	WITHOUT_CLASSIFICATION	1.4237361296071783E-6	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995101661326	WITHOUT_CLASSIFICATION	4.898338674519095E-7	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.999998529187474	WITHOUT_CLASSIFICATION	1.470812525999244E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.999998529187474	WITHOUT_CLASSIFICATION	1.470812525999244E-6	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999978520648121	WITHOUT_CLASSIFICATION	2.1479351879694115E-6	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.999994361647568	WITHOUT_CLASSIFICATION	5.638352431957726E-6	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999970430531199	WITHOUT_CLASSIFICATION	2.956946880181257E-6	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9999991280823091	WITHOUT_CLASSIFICATION	8.719176910951948E-7	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9999994579182335	WITHOUT_CLASSIFICATION	5.420817664306525E-7	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986825765765	WITHOUT_CLASSIFICATION	1.3174234234533708E-6	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999759099673082	WITHOUT_CLASSIFICATION	2.4090032691850408E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995587835813	WITHOUT_CLASSIFICATION	4.412164187513497E-7	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999966040774612	WITHOUT_CLASSIFICATION	3.3959225388242793E-6	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972158343725	WITHOUT_CLASSIFICATION	2.784165627466707E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986825765765	WITHOUT_CLASSIFICATION	1.3174234234533708E-6	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999759099673082	WITHOUT_CLASSIFICATION	2.4090032691850408E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995587835813	WITHOUT_CLASSIFICATION	4.412164187513497E-7	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999933281496809	WITHOUT_CLASSIFICATION	6.671850319085046E-6	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9999668248418871	WITHOUT_CLASSIFICATION	3.317515811277959E-5	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999997201212185	WITHOUT_CLASSIFICATION	2.7987878144351917E-7	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999986531735697	WITHOUT_CLASSIFICATION	1.3468264302202022E-6	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.999999960956649	WITHOUT_CLASSIFICATION	3.904335103061451E-8	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999998876004047	WITHOUT_CLASSIFICATION	1.123995952412754E-7	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9999867196954513	WITHOUT_CLASSIFICATION	1.3280304548737283E-5	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.999995880449005	WITHOUT_CLASSIFICATION	4.119550994994829E-6	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9999321462509072	WITHOUT_CLASSIFICATION	6.785374909271256E-5	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999991603262888	WITHOUT_CLASSIFICATION	8.396737112475574E-7	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999996960716065	WITHOUT_CLASSIFICATION	3.039283933644297E-7	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999979452345611	WITHOUT_CLASSIFICATION	2.0547654389024018E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9999143056505935	WITHOUT_CLASSIFICATION	8.569434940661638E-5	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.999998652514622	WITHOUT_CLASSIFICATION	1.3474853779399542E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999995844226732	WITHOUT_CLASSIFICATION	4.155773267520205E-7	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999912330387224	WITHOUT_CLASSIFICATION	8.766961277615009E-6	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.999712377020968	WITHOUT_CLASSIFICATION	2.876229790319485E-4	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999486239709846	WITHOUT_CLASSIFICATION	5.137602901540265E-5	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999998286056633	WITHOUT_CLASSIFICATION	1.7139433685935773E-7	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999944663904247	WITHOUT_CLASSIFICATION	5.533609575300294E-6	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999993400912311	WITHOUT_CLASSIFICATION	6.599087688601932E-7	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999999774546708	WITHOUT_CLASSIFICATION	2.254532923498391E-8	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999963831788096	WITHOUT_CLASSIFICATION	3.616821190352149E-6	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999998947902539	WITHOUT_CLASSIFICATION	1.0520974625614634E-7	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999999913082162	WITHOUT_CLASSIFICATION	8.69178377866928E-9	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9996093196774327	WITHOUT_CLASSIFICATION	3.9068032256737696E-4	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976997080159	WITHOUT_CLASSIFICATION	2.30029198418287E-6	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971557809862	WITHOUT_CLASSIFICATION	2.8442190137167166E-6	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999814052449439	WITHOUT_CLASSIFICATION	1.8594755056137766E-5	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999951290435802	WITHOUT_CLASSIFICATION	4.870956419721153E-6	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999954163981271	WITHOUT_CLASSIFICATION	4.58360187301947E-6	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999925140018676	WITHOUT_CLASSIFICATION	7.485998132404892E-6	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999925140018676	WITHOUT_CLASSIFICATION	7.485998132404892E-6	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999988840455418	WITHOUT_CLASSIFICATION	1.1159544581638424E-6	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999999862279029	WITHOUT_CLASSIFICATION	1.3772097136823833E-8	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999994472905195	WITHOUT_CLASSIFICATION	5.527094805840714E-7	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997238329002608	WITHOUT_CLASSIFICATION	2.7616709973924037E-4	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999987651204336	WITHOUT_CLASSIFICATION	1.2348795663634017E-6	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9999969875477098	WITHOUT_CLASSIFICATION	3.01245229008318E-6	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9999447710189885	WITHOUT_CLASSIFICATION	5.522898101150677E-5	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999987263381989	WITHOUT_CLASSIFICATION	1.2736618011239461E-6	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999954922461125	WITHOUT_CLASSIFICATION	4.507753887519599E-6	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985647727799	WITHOUT_CLASSIFICATION	1.435227220042317E-6	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991340028163	WITHOUT_CLASSIFICATION	8.659971837847874E-7	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990066202715	WITHOUT_CLASSIFICATION	9.93379728436232E-7	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988579354006	WITHOUT_CLASSIFICATION	1.1420645994945754E-6	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994984571243	WITHOUT_CLASSIFICATION	5.015428756314073E-7	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987618266991	WITHOUT_CLASSIFICATION	1.2381733009966577E-6	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999981579159666	WITHOUT_CLASSIFICATION	1.8420840334407611E-6	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999715571383	WITHOUT_CLASSIFICATION	2.844286170233204E-7	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997180296747	WITHOUT_CLASSIFICATION	2.8197032537473266E-7	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991263001202	WITHOUT_CLASSIFICATION	8.736998798645378E-7	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988469828774	WITHOUT_CLASSIFICATION	1.153017122487666E-6	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999991424097014	WITHOUT_CLASSIFICATION	8.575902985154359E-7	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9999871087378903	WITHOUT_CLASSIFICATION	1.2891262109755825E-5	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999988422897593	WITHOUT_CLASSIFICATION	1.1577102407055577E-6	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999992335392709	WITHOUT_CLASSIFICATION	7.66460729038178E-7	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999952168799999	WITHOUT_CLASSIFICATION	4.783119999986538E-6	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999995227325245	WITHOUT_CLASSIFICATION	4.772674755385668E-7	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999998105891266	WITHOUT_CLASSIFICATION	1.894108734901925E-7	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9999999452026657	WITHOUT_CLASSIFICATION	5.479733421214475E-8	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999988422897593	WITHOUT_CLASSIFICATION	1.1577102407055577E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999988422897593	WITHOUT_CLASSIFICATION	1.1577102407055577E-6	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9999959899661983	WITHOUT_CLASSIFICATION	4.010033801695281E-6	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999999703882285	WITHOUT_CLASSIFICATION	2.961177151744212E-8	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999991699468223	WITHOUT_CLASSIFICATION	8.30053177793214E-7	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999986872026351	WITHOUT_CLASSIFICATION	1.3127973649943541E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999963688647693	WITHOUT_CLASSIFICATION	3.631135230585061E-6	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999944663904247	WITHOUT_CLASSIFICATION	5.533609575300294E-6	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999747286437923	WITHOUT_CLASSIFICATION	2.527135620773015E-5	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999995572472193	WITHOUT_CLASSIFICATION	4.42752780675866E-7	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999999482900116	WITHOUT_CLASSIFICATION	5.170998847728084E-8	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998428702771	WITHOUT_CLASSIFICATION	1.5712972285551244E-7	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999998000261425	WITHOUT_CLASSIFICATION	1.9997385749282097E-7	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999867129340521	WITHOUT_CLASSIFICATION	1.3287065947916114E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999855856718665	WITHOUT_CLASSIFICATION	1.4414328133514033E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999855856718665	WITHOUT_CLASSIFICATION	1.4414328133514033E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999915439629335	WITHOUT_CLASSIFICATION	8.456037066340267E-6	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999915439629335	WITHOUT_CLASSIFICATION	8.456037066340267E-6	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996666049391	WITHOUT_CLASSIFICATION	3.333950608971297E-7	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963258618865	WITHOUT_CLASSIFICATION	3.674138113434077E-6	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999954700982363	WITHOUT_CLASSIFICATION	4.52990176371479E-6	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995515094354	WITHOUT_CLASSIFICATION	4.4849056463296104E-7	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9999999440694506	WITHOUT_CLASSIFICATION	5.593054951439299E-8	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999997122550873	WITHOUT_CLASSIFICATION	2.8774491260937486E-7	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999939133492349	WITHOUT_CLASSIFICATION	6.086650765005614E-6	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984454788492	WITHOUT_CLASSIFICATION	1.5545211508651948E-6	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9999925380948483	WITHOUT_CLASSIFICATION	7.461905151609456E-6	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999994788867607	WITHOUT_CLASSIFICATION	5.211132393951667E-7	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999938097906323	WITHOUT_CLASSIFICATION	6.19020936769945E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997244880912447	WITHOUT_CLASSIFICATION	2.7551190875527664E-4	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999990271384775	WITHOUT_CLASSIFICATION	9.728615224363475E-7	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999980006486846	WITHOUT_CLASSIFICATION	1.9993513154134613E-6	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999984448284754	WITHOUT_CLASSIFICATION	1.5551715244861732E-6	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.9999716434639471	WITHOUT_CLASSIFICATION	2.8356536052909066E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999955530908288	WITHOUT_CLASSIFICATION	4.44690917121719E-6	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999955530908288	WITHOUT_CLASSIFICATION	4.44690917121719E-6	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999999636734096	WITHOUT_CLASSIFICATION	3.632659050215604E-8	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9999921232897899	WITHOUT_CLASSIFICATION	7.876710210086291E-6	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999741801731116	WITHOUT_CLASSIFICATION	2.5819826888468773E-5	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999805070665407	WITHOUT_CLASSIFICATION	1.9492933459301814E-5	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997606910684	WITHOUT_CLASSIFICATION	2.393089315346554E-7	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996599625063	WITHOUT_CLASSIFICATION	3.4003749375270104E-7	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.999999522338188	WITHOUT_CLASSIFICATION	4.776618119787646E-7	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992502394729	WITHOUT_CLASSIFICATION	7.497605270612064E-7	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999995075978868	WITHOUT_CLASSIFICATION	4.924021132163928E-7	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.999999476293657	WITHOUT_CLASSIFICATION	5.237063430504712E-7	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999997853162641	WITHOUT_CLASSIFICATION	2.146837359415641E-7	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999977374492499	WITHOUT_CLASSIFICATION	2.262550750160968E-6	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952615085224	WITHOUT_CLASSIFICATION	4.7384914776051355E-6	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999997357911613	WITHOUT_CLASSIFICATION	2.642088385895354E-7	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999998623882395	WITHOUT_CLASSIFICATION	1.3761176048898842E-7	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.999997063676504	WITHOUT_CLASSIFICATION	2.9363234960502408E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999997568322934	WITHOUT_CLASSIFICATION	2.431677066210791E-7	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999947149591758	WITHOUT_CLASSIFICATION	5.2850408241882294E-6	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999899204826944	WITHOUT_CLASSIFICATION	1.0079517305584238E-5	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999964811254095	WITHOUT_CLASSIFICATION	3.518874590458684E-6	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999994364117352	WITHOUT_CLASSIFICATION	5.635882648654886E-7	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999999197112306	WITHOUT_CLASSIFICATION	8.028876935557094E-8	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999990322066422	WITHOUT_CLASSIFICATION	9.677933577316993E-7	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.999999498818962	WITHOUT_CLASSIFICATION	5.01181038047821E-7	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999984522391342	WITHOUT_CLASSIFICATION	1.5477608658267516E-6	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999975320054689	WITHOUT_CLASSIFICATION	2.4679945310754385E-6	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999996243488782	WITHOUT_CLASSIFICATION	3.756511218072467E-7	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9999903056094028	WITHOUT_CLASSIFICATION	9.694390597249752E-6	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.999997118289436	WITHOUT_CLASSIFICATION	2.8817105640741917E-6	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999900153953586	WITHOUT_CLASSIFICATION	9.98460464151719E-6	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999999884212241	WITHOUT_CLASSIFICATION	1.1578775824945458E-8	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.999994720740791	WITHOUT_CLASSIFICATION	5.2792592090790055E-6	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.999927071201495	WITHOUT_CLASSIFICATION	7.292879850504074E-5	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9997797546846592	WITHOUT_CLASSIFICATION	2.2024531534082053E-4	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999985843922512	WITHOUT_CLASSIFICATION	1.4156077488300603E-6	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9999948575672525	WITHOUT_CLASSIFICATION	5.142432747600256E-6	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.999999973558883	WITHOUT_CLASSIFICATION	2.6441116928924194E-8	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.999999503818959	WITHOUT_CLASSIFICATION	4.961810410188066E-7	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999981230997766	WITHOUT_CLASSIFICATION	1.8769002233971168E-6	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.99999831666372	WITHOUT_CLASSIFICATION	1.6833362801028748E-6	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999999949638955	WITHOUT_CLASSIFICATION	5.0361045811704566E-9	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999998768157743	WITHOUT_CLASSIFICATION	1.2318422571821014E-7	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999997732154685	WITHOUT_CLASSIFICATION	2.2678453144959322E-7	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999997891512543	WITHOUT_CLASSIFICATION	2.108487456640839E-7	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999990089364728	WITHOUT_CLASSIFICATION	9.910635272173178E-7	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999797935910775	WITHOUT_CLASSIFICATION	2.0206408922604145E-5	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999935718724294	WITHOUT_CLASSIFICATION	6.4281275706687615E-6	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999538005754582	WITHOUT_CLASSIFICATION	4.619942454178861E-5	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999948399613402	WITHOUT_CLASSIFICATION	5.160038659832818E-6	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9999949479265765	WITHOUT_CLASSIFICATION	5.052073423571146E-6	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999973258458449	WITHOUT_CLASSIFICATION	2.6741541550849273E-6	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9998843764012655	WITHOUT_CLASSIFICATION	1.1562359873448278E-4	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999854551418331	WITHOUT_CLASSIFICATION	1.4544858166773474E-5	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999917704350837	WITHOUT_CLASSIFICATION	8.229564916298594E-6	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999382935632427	WITHOUT_CLASSIFICATION	6.170643675727802E-5	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.999997918223845	WITHOUT_CLASSIFICATION	2.0817761550642353E-6	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9999688301185902	WITHOUT_CLASSIFICATION	3.1169881409795166E-5	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9997304019827152	WITHOUT_CLASSIFICATION	2.695980172847588E-4	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.999997551950715	WITHOUT_CLASSIFICATION	2.448049284994076E-6	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9999367507053926	WITHOUT_CLASSIFICATION	6.324929460746602E-5	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999993218362477	WITHOUT_CLASSIFICATION	6.781637522271189E-7	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999987632448645	WITHOUT_CLASSIFICATION	1.2367551355168895E-6	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999307395023	WITHOUT_CLASSIFICATION	6.9260497604008E-8	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999966984337043	WITHOUT_CLASSIFICATION	3.301566295664627E-6	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999994730253936	WITHOUT_CLASSIFICATION	5.269746063771057E-7	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.999999703652368	WITHOUT_CLASSIFICATION	2.963476319003985E-7	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999999987070023	WITHOUT_CLASSIFICATION	1.2929976308977703E-9	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999985496944188	WITHOUT_CLASSIFICATION	1.4503055811577073E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999032970767772	WITHOUT_CLASSIFICATION	9.670292322276538E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999032970767772	WITHOUT_CLASSIFICATION	9.670292322276538E-5	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999836877781823	WITHOUT_CLASSIFICATION	1.631222181773628E-5	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9999995671670051	WITHOUT_CLASSIFICATION	4.328329948946425E-7	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999996168790406	WITHOUT_CLASSIFICATION	3.831209594039978E-7	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.999993918183722	WITHOUT_CLASSIFICATION	6.081816278042193E-6	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999989122979501	WITHOUT_CLASSIFICATION	1.0877020498128004E-6	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999987253981081	WITHOUT_CLASSIFICATION	1.2746018919941287E-6	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999978518833458	WITHOUT_CLASSIFICATION	2.148116654272083E-6	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999999870761314	WITHOUT_CLASSIFICATION	1.292386863983993E-8	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9999938887604048	WITHOUT_CLASSIFICATION	6.1112395951746664E-6	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999999451662026	WITHOUT_CLASSIFICATION	5.483379741349887E-8	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999912075948603	WITHOUT_CLASSIFICATION	8.792405139625337E-6	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999987688091986	WITHOUT_CLASSIFICATION	1.2311908013691994E-6	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9999896971466724	WITHOUT_CLASSIFICATION	1.030285332765492E-5	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999995898790146	WITHOUT_CLASSIFICATION	4.1012098540887895E-7	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999987090138006	WITHOUT_CLASSIFICATION	1.290986199447399E-6	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999908155969617	WITHOUT_CLASSIFICATION	9.18440303839724E-6	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999868248826688	WITHOUT_CLASSIFICATION	1.3175117331223623E-5	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999995411787257	WITHOUT_CLASSIFICATION	4.5882127434016604E-7	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999998805223727	WITHOUT_CLASSIFICATION	1.1947762742849078E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.999999877083101	WITHOUT_CLASSIFICATION	1.2291689902264568E-7	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999957576889891	WITHOUT_CLASSIFICATION	4.242311010910447E-6	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999367507322295	WITHOUT_CLASSIFICATION	6.32492677705158E-5	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9995338274506623	WITHOUT_CLASSIFICATION	4.66172549337622E-4	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.999999355458863	WITHOUT_CLASSIFICATION	6.445411368905877E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999743605572334	WITHOUT_CLASSIFICATION	2.5639442766556847E-5	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9999959937984889	WITHOUT_CLASSIFICATION	4.006201511094195E-6	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.999995409535984	WITHOUT_CLASSIFICATION	4.590464016091922E-6	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999952791380375	WITHOUT_CLASSIFICATION	4.720861962402591E-6	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999998412680025	WITHOUT_CLASSIFICATION	1.5873199744348767E-7	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999998179912152	WITHOUT_CLASSIFICATION	1.820087849174116E-7	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999995315150334	WITHOUT_CLASSIFICATION	4.684849666024189E-7	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999989606744921	WITHOUT_CLASSIFICATION	1.0393255078366386E-6	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999988991042641	WITHOUT_CLASSIFICATION	1.1008957359062382E-6	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.999991664162245	WITHOUT_CLASSIFICATION	8.33583775500189E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999933630739698	WITHOUT_CLASSIFICATION	6.636926030190653E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999933630739698	WITHOUT_CLASSIFICATION	6.636926030190653E-6	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999944319187714	WITHOUT_CLASSIFICATION	5.568081228642883E-6	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9999943092878679	WITHOUT_CLASSIFICATION	5.690712132114642E-6	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.999999506080436	WITHOUT_CLASSIFICATION	4.939195639957225E-7	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999916529717751	WITHOUT_CLASSIFICATION	8.347028224900742E-6	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999996839761048	WITHOUT_CLASSIFICATION	3.160238951477006E-7	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999954372690091	WITHOUT_CLASSIFICATION	4.562730990826752E-6	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999970406635793	WITHOUT_CLASSIFICATION	2.959336420570055E-6	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.999999978557805	WITHOUT_CLASSIFICATION	2.1442194971819615E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9999852532203632	WITHOUT_CLASSIFICATION	1.4746779636708764E-5	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999999398673131	WITHOUT_CLASSIFICATION	6.013268687678917E-8	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999999747752605	WITHOUT_CLASSIFICATION	2.5224739477614806E-8	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9999997329465719	WITHOUT_CLASSIFICATION	2.6705342817965616E-7	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999979930903945	WITHOUT_CLASSIFICATION	2.006909605467537E-6	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999991847691649	WITHOUT_CLASSIFICATION	8.152308349570185E-7	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999997638720965	WITHOUT_CLASSIFICATION	2.3612790354462482E-7	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999902507595405	WITHOUT_CLASSIFICATION	9.74924045943599E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999902507595405	WITHOUT_CLASSIFICATION	9.74924045943599E-6	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999993411182158	WITHOUT_CLASSIFICATION	6.588817843206277E-7	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999985931385652	WITHOUT_CLASSIFICATION	1.4068614347784359E-6	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999998690009357	WITHOUT_CLASSIFICATION	1.3099906414759506E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999998374653174	WITHOUT_CLASSIFICATION	1.6253468256590584E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997244880912447	WITHOUT_CLASSIFICATION	2.7551190875527664E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999120612622894	WITHOUT_CLASSIFICATION	8.793873771066453E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999990715096054	WITHOUT_CLASSIFICATION	9.284903946235173E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.999996155179145	WITHOUT_CLASSIFICATION	3.8448208549540484E-6	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.999996155179145	WITHOUT_CLASSIFICATION	3.8448208549540484E-6	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999990296717035	WITHOUT_CLASSIFICATION	9.70328296422722E-7	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999999822008636	WITHOUT_CLASSIFICATION	1.7799136407861508E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999987803068626	WITHOUT_CLASSIFICATION	1.2196931373715344E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999999711123007	WITHOUT_CLASSIFICATION	2.8887699333804574E-8	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9999968471483679	WITHOUT_CLASSIFICATION	3.1528516319718914E-6	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999269084707857	WITHOUT_CLASSIFICATION	7.309152921432085E-5	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999997036943095	WITHOUT_CLASSIFICATION	2.9630569047539636E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999997253050126	WITHOUT_CLASSIFICATION	2.746949874316888E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999991549010441	WITHOUT_CLASSIFICATION	8.450989559802724E-7	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9999989819011678	WITHOUT_CLASSIFICATION	1.0180988323306129E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999988575427528	WITHOUT_CLASSIFICATION	1.1424572473179094E-6	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999937486066806	WITHOUT_CLASSIFICATION	6.251393319365954E-6	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999999410580187	WITHOUT_CLASSIFICATION	5.8941981302028884E-8	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.999998470701608	WITHOUT_CLASSIFICATION	1.5292983920871893E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999736848724792	WITHOUT_CLASSIFICATION	2.6315127520845633E-5	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999995331593359	WITHOUT_CLASSIFICATION	4.668406641108872E-7	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999978896395578	WITHOUT_CLASSIFICATION	2.110360442058572E-6	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999804662956253	WITHOUT_CLASSIFICATION	1.953370437468992E-5	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999985726151589	WITHOUT_CLASSIFICATION	1.4273848410865685E-6	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999990639755617	WITHOUT_CLASSIFICATION	9.360244383652414E-7	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999987426691084	WITHOUT_CLASSIFICATION	1.2573308916972224E-6	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999974304318252	WITHOUT_CLASSIFICATION	2.569568174745292E-6	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999997182205276	WITHOUT_CLASSIFICATION	2.8177947242762815E-7	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999995908766011	WITHOUT_CLASSIFICATION	4.0912339898084874E-7	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999990968016133	WITHOUT_CLASSIFICATION	9.031983867195418E-7	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999963305828722	WITHOUT_CLASSIFICATION	3.6694171277394495E-6	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999995910788525	WITHOUT_CLASSIFICATION	4.089211475532719E-7	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999993704177098	WITHOUT_CLASSIFICATION	6.295822900879264E-7	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999998562068787	WITHOUT_CLASSIFICATION	1.4379312136531497E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999999896864575	WITHOUT_CLASSIFICATION	1.0313542502402777E-7	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.99997986595931	WITHOUT_CLASSIFICATION	2.0134040689999625E-5	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9999802414081954	WITHOUT_CLASSIFICATION	1.9758591804580326E-5	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.999999830454666	WITHOUT_CLASSIFICATION	1.6954533399454656E-7	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999989546987351	WITHOUT_CLASSIFICATION	1.0453012648753972E-6	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999973552974587	WITHOUT_CLASSIFICATION	2.64470254139364E-6	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999818907879746	WITHOUT_CLASSIFICATION	1.8109212025407938E-5	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.9999863494722213	WITHOUT_CLASSIFICATION	1.3650527778724022E-5	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.9999983513068699	WITHOUT_CLASSIFICATION	1.648693130092777E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999958123912449	WITHOUT_CLASSIFICATION	4.1876087551650054E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999906848311593	WITHOUT_CLASSIFICATION	9.315168840595644E-6	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999997924676651	WITHOUT_CLASSIFICATION	2.075323349030802E-7	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.999998158016014	WITHOUT_CLASSIFICATION	1.8419839859947717E-6	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999873314592007	WITHOUT_CLASSIFICATION	1.2668540799298689E-5	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999993360563315	WITHOUT_CLASSIFICATION	6.639436684618604E-7	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999998441233792	WITHOUT_CLASSIFICATION	1.5587662080724727E-7	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999993347185282	WITHOUT_CLASSIFICATION	6.652814717706618E-7	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999958123912449	WITHOUT_CLASSIFICATION	4.1876087551650054E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999906848311593	WITHOUT_CLASSIFICATION	9.315168840595644E-6	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999999237703546	WITHOUT_CLASSIFICATION	7.622964538537664E-8	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9999087185759339	WITHOUT_CLASSIFICATION	9.128142406613058E-5	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999933715780024	WITHOUT_CLASSIFICATION	6.628421997555872E-6	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999999216714268	WITHOUT_CLASSIFICATION	7.832857321861915E-8	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.999998537543783	WITHOUT_CLASSIFICATION	1.462456216999173E-6	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.999999808467562	WITHOUT_CLASSIFICATION	1.9153243802356393E-7	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999833633910702	WITHOUT_CLASSIFICATION	1.663660892971364E-5	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9999819398688987	WITHOUT_CLASSIFICATION	1.8060131101219554E-5	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999918839930939	WITHOUT_CLASSIFICATION	8.116006906152752E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999826275345647	WITHOUT_CLASSIFICATION	1.7372465435276487E-5	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999994711530544	WITHOUT_CLASSIFICATION	5.288469455084198E-7	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999826275345647	WITHOUT_CLASSIFICATION	1.7372465435276487E-5	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999999671293106	WITHOUT_CLASSIFICATION	3.2870689353331026E-8	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999889767968665	WITHOUT_CLASSIFICATION	1.1023203133401675E-5	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999999303606699	WITHOUT_CLASSIFICATION	6.963933007859125E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980261221189	WITHOUT_CLASSIFICATION	1.973877881256492E-6	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999965740926545	WITHOUT_CLASSIFICATION	3.4259073454256556E-6	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9997023453987063	WITHOUT_CLASSIFICATION	2.976546012936793E-4	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9997023453987063	WITHOUT_CLASSIFICATION	2.976546012936793E-4	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999995070371691	WITHOUT_CLASSIFICATION	4.929628308277666E-7	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9999995348344745	WITHOUT_CLASSIFICATION	4.651655255351114E-7	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999993276724122	WITHOUT_CLASSIFICATION	6.723275879180073E-7	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999806876876698	WITHOUT_CLASSIFICATION	1.931231233023843E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9999569642883486	WITHOUT_CLASSIFICATION	4.3035711651420326E-5	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9999998638287418	WITHOUT_CLASSIFICATION	1.361712581475061E-7	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999940193201472	WITHOUT_CLASSIFICATION	5.98067985282093E-6	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999989474748592	WITHOUT_CLASSIFICATION	1.052525140883487E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999856558449235	WITHOUT_CLASSIFICATION	1.4344155076563555E-5	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.999916637608523	WITHOUT_CLASSIFICATION	8.336239147687774E-5	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.9999617930325024	WITHOUT_CLASSIFICATION	3.82069674976296E-5	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.999957854630774	WITHOUT_CLASSIFICATION	4.2145369226024454E-5	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9998505680667886	WITHOUT_CLASSIFICATION	1.494319332113062E-4	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999978310522383	WITHOUT_CLASSIFICATION	2.168947761846877E-6	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9999941101279285	WITHOUT_CLASSIFICATION	5.88987207148958E-6	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999974250365327	WITHOUT_CLASSIFICATION	2.5749634673896585E-6	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999995652168426	WITHOUT_CLASSIFICATION	4.3478315738528633E-7	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999986743764715	WITHOUT_CLASSIFICATION	1.325623528502467E-6	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999996820390967	WITHOUT_CLASSIFICATION	3.1796090329724706E-7	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9998638990076459	WITHOUT_CLASSIFICATION	1.3610099235415426E-4	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999986504609235	WITHOUT_CLASSIFICATION	1.349539076493392E-6	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.999981118746566	WITHOUT_CLASSIFICATION	1.8881253434012153E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999991596836836	WITHOUT_CLASSIFICATION	8.403163163890513E-7	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9999972437998079	WITHOUT_CLASSIFICATION	2.7562001920720785E-6	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999983093189422	WITHOUT_CLASSIFICATION	1.6906810578917906E-6	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9999210658042413	WITHOUT_CLASSIFICATION	7.893419575871345E-5	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.999999322185827	WITHOUT_CLASSIFICATION	6.778141730130786E-7	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9999954997119558	WITHOUT_CLASSIFICATION	4.5002880442514995E-6	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9999976894804744	WITHOUT_CLASSIFICATION	2.310519525514091E-6	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999970478795612	WITHOUT_CLASSIFICATION	2.9521204387862243E-6	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.9999976257168665	WITHOUT_CLASSIFICATION	2.3742831335249825E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999954689959892	WITHOUT_CLASSIFICATION	4.53100401076486E-6	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999940193201472	WITHOUT_CLASSIFICATION	5.98067985282093E-6	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999996447416427	WITHOUT_CLASSIFICATION	3.5525835728732267E-7	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.9999563488194745	WITHOUT_CLASSIFICATION	4.3651180525460926E-5	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9992465130559632	WITHOUT_CLASSIFICATION	7.534869440367585E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9999840595806152	WITHOUT_CLASSIFICATION	1.5940419384741026E-5	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999995445211352	WITHOUT_CLASSIFICATION	4.554788648350431E-7	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999807995677896	WITHOUT_CLASSIFICATION	1.920043221030274E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999806876876698	WITHOUT_CLASSIFICATION	1.931231233023843E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999806876876698	WITHOUT_CLASSIFICATION	1.931231233023843E-5	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999932671415436	WITHOUT_CLASSIFICATION	6.732858456369038E-6	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999976005045684	WITHOUT_CLASSIFICATION	2.399495431555309E-6	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.9999783375697694	WITHOUT_CLASSIFICATION	2.1662430230680085E-5	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999978358730595	WITHOUT_CLASSIFICATION	2.164126940618357E-6	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9999987829169256	WITHOUT_CLASSIFICATION	1.2170830744001189E-6	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999995996186737	WITHOUT_CLASSIFICATION	4.003813263409769E-7	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.999998541842071	WITHOUT_CLASSIFICATION	1.458157928959095E-6	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999997543109603	WITHOUT_CLASSIFICATION	2.456890397334126E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999798213667732	WITHOUT_CLASSIFICATION	2.0178633226781546E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999994527923258	WITHOUT_CLASSIFICATION	5.472076742347769E-7	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9999960395008023	WITHOUT_CLASSIFICATION	3.960499197686605E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998030304637906	WITHOUT_CLASSIFICATION	1.9696953620950032E-4	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9999683025323092	WITHOUT_CLASSIFICATION	3.169746769080108E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999994527923258	WITHOUT_CLASSIFICATION	5.472076742347769E-7	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999868661659614	WITHOUT_CLASSIFICATION	1.3133834038455514E-5	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999997818032665	WITHOUT_CLASSIFICATION	2.1819673337710557E-7	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999950844294414	WITHOUT_CLASSIFICATION	4.915570558522912E-6	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9914595082941482	WITHOUT_CLASSIFICATION	0.008540491705851817	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998030304637906	WITHOUT_CLASSIFICATION	1.9696953620950032E-4	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.999989604495164	WITHOUT_CLASSIFICATION	1.0395504836052248E-5	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999982497655804	WITHOUT_CLASSIFICATION	1.7502344195400902E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999997516879374	WITHOUT_CLASSIFICATION	2.4831206251431485E-7	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999998058185985	WITHOUT_CLASSIFICATION	1.9418140148930754E-7	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9998216906595367	WITHOUT_CLASSIFICATION	1.7830934046336044E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999978996375852	WITHOUT_CLASSIFICATION	2.100362414694577E-6	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999996117525729	WITHOUT_CLASSIFICATION	3.882474269897562E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999849135461071	WITHOUT_CLASSIFICATION	1.5086453892766477E-5	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999998037985763	WITHOUT_CLASSIFICATION	1.9620142367411228E-7	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999996885464293	WITHOUT_CLASSIFICATION	3.114535706785571E-7	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999990008338785	WITHOUT_CLASSIFICATION	9.991661215058465E-7	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9999221078515819	WITHOUT_CLASSIFICATION	7.78921484180849E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999994527923258	WITHOUT_CLASSIFICATION	5.472076742347769E-7	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.999989604495164	WITHOUT_CLASSIFICATION	1.0395504836052248E-5	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999997516879374	WITHOUT_CLASSIFICATION	2.4831206251431485E-7	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999939687852426	WITHOUT_CLASSIFICATION	6.031214757344967E-6	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.999999841720689	WITHOUT_CLASSIFICATION	1.5827931102023196E-7	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999987981162002	WITHOUT_CLASSIFICATION	1.2018837997496522E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998030304637906	WITHOUT_CLASSIFICATION	1.9696953620950032E-4	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9999972931161053	WITHOUT_CLASSIFICATION	2.70688389482543E-6	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999830526338818	WITHOUT_CLASSIFICATION	1.694736611830884E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999969083035857	WITHOUT_CLASSIFICATION	3.0916964142978176E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999704426645029	WITHOUT_CLASSIFICATION	2.9557335497155822E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999849135461071	WITHOUT_CLASSIFICATION	1.5086453892766477E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999868661659614	WITHOUT_CLASSIFICATION	1.3133834038455514E-5	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.999984125849922	WITHOUT_CLASSIFICATION	1.5874150078040684E-5	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.999994500849105	WITHOUT_CLASSIFICATION	5.499150894993455E-6	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9999859471232083	WITHOUT_CLASSIFICATION	1.4052876791754339E-5	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.999994847602736	WITHOUT_CLASSIFICATION	5.152397263911211E-6	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9999682472297893	WITHOUT_CLASSIFICATION	3.175277021073535E-5	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9999343934737903	WITHOUT_CLASSIFICATION	6.560652620962727E-5	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9999759955846361	WITHOUT_CLASSIFICATION	2.4004415363913917E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980261221189	WITHOUT_CLASSIFICATION	1.973877881256492E-6	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998111585399	WITHOUT_CLASSIFICATION	1.8884146010984621E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999542230004832	WITHOUT_CLASSIFICATION	4.577699951669108E-5	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999972482263639	WITHOUT_CLASSIFICATION	2.7517736360975203E-6	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.999787826834806	WITHOUT_CLASSIFICATION	2.121731651939348E-4	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999466073101686	WITHOUT_CLASSIFICATION	5.33926898314737E-5	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999805839008814	WITHOUT_CLASSIFICATION	1.9416099118593712E-5	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999996568457319	WITHOUT_CLASSIFICATION	3.4315426815673664E-7	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999973086256221	WITHOUT_CLASSIFICATION	2.6913743779274683E-6	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.999999429384044	WITHOUT_CLASSIFICATION	5.706159559134063E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999704426645029	WITHOUT_CLASSIFICATION	2.9557335497155822E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999542230004832	WITHOUT_CLASSIFICATION	4.577699951669108E-5	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999870049069213	WITHOUT_CLASSIFICATION	1.2995093078665354E-5	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9999886710791063	WITHOUT_CLASSIFICATION	1.1328920893816153E-5	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9999115550009189	WITHOUT_CLASSIFICATION	8.84449990812046E-5	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999772210135852	WITHOUT_CLASSIFICATION	2.2778986414717656E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9999645149299624	WITHOUT_CLASSIFICATION	3.548507003762556E-5	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.999999629671831	WITHOUT_CLASSIFICATION	3.7032816908653425E-7	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999977740895782	WITHOUT_CLASSIFICATION	2.2259104216565693E-6	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9999904517321644	WITHOUT_CLASSIFICATION	9.548267835506885E-6	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999998639327345	WITHOUT_CLASSIFICATION	1.3606726550673815E-7	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999976189338277	WITHOUT_CLASSIFICATION	2.3810661723034E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999957541848171	WITHOUT_CLASSIFICATION	4.245815182883832E-6	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999979191748813	WITHOUT_CLASSIFICATION	2.0808251186489817E-6	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9999996526764924	WITHOUT_CLASSIFICATION	3.473235076525466E-7	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9999951266685605	WITHOUT_CLASSIFICATION	4.873331439558439E-6	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9999970139168914	WITHOUT_CLASSIFICATION	2.986083108522005E-6	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.999999452719052	WITHOUT_CLASSIFICATION	5.472809479739011E-7	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9999974338505603	WITHOUT_CLASSIFICATION	2.56614943979452E-6	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999646056304848	WITHOUT_CLASSIFICATION	3.539436951507216E-5	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999990322519302	WITHOUT_CLASSIFICATION	9.677480697432994E-7	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9999811791332436	WITHOUT_CLASSIFICATION	1.882086675648258E-5	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999892669825403	WITHOUT_CLASSIFICATION	1.0733017459661265E-5	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999994462594837	WITHOUT_CLASSIFICATION	5.537405162821505E-7	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.999999722603301	WITHOUT_CLASSIFICATION	2.773966990095346E-7	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999997632910728	WITHOUT_CLASSIFICATION	2.3670892726972492E-7	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999998544540277	WITHOUT_CLASSIFICATION	1.4554597219795385E-7	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.9989382009172265	WITHOUT_CLASSIFICATION	0.0010617990827735163	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999955376075612	WITHOUT_CLASSIFICATION	4.462392438708651E-6	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999829716055936	WITHOUT_CLASSIFICATION	1.7028394406354158E-5	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999998821368286	WITHOUT_CLASSIFICATION	1.1786317140456014E-7	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.9989483253085457	WITHOUT_CLASSIFICATION	0.0010516746914543073	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999945871294966	WITHOUT_CLASSIFICATION	5.41287050337347E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999868614207019	WITHOUT_CLASSIFICATION	1.313857929799313E-5	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999983252863733	WITHOUT_CLASSIFICATION	1.6747136266363732E-6	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999997513820009	WITHOUT_CLASSIFICATION	2.4861799909896024E-7	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999998275765998	WITHOUT_CLASSIFICATION	1.724234001970791E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999934677587342	WITHOUT_CLASSIFICATION	6.5322412658019E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999948221805238	WITHOUT_CLASSIFICATION	5.17781947620112E-6	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999994580100211	WITHOUT_CLASSIFICATION	5.419899789211828E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999934677587342	WITHOUT_CLASSIFICATION	6.5322412658019E-6	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999998275765998	WITHOUT_CLASSIFICATION	1.724234001970791E-7	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999948221805238	WITHOUT_CLASSIFICATION	5.17781947620112E-6	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.99998744343003	WITHOUT_CLASSIFICATION	1.2556569969946504E-5	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.999997222808916	WITHOUT_CLASSIFICATION	2.777191083965523E-6	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.999999972117632	WITHOUT_CLASSIFICATION	2.788236794072757E-8	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9999968581954274	WITHOUT_CLASSIFICATION	3.1418045725414508E-6	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999998050104087	WITHOUT_CLASSIFICATION	1.9498959125455937E-7	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9999872383193772	WITHOUT_CLASSIFICATION	1.2761680622751608E-5	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9999943116171381	WITHOUT_CLASSIFICATION	5.68838286189364E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999837314326249	WITHOUT_CLASSIFICATION	1.6268567375107838E-5	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9999987228212466	WITHOUT_CLASSIFICATION	1.2771787533869563E-6	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.999998768355786	WITHOUT_CLASSIFICATION	1.231644213914259E-6	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999981195788479	WITHOUT_CLASSIFICATION	1.880421152062862E-6	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999960609352143	WITHOUT_CLASSIFICATION	3.939064785673233E-6	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999989154656276	WITHOUT_CLASSIFICATION	1.08453437249172E-6	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9999762780539315	WITHOUT_CLASSIFICATION	2.3721946068471263E-5	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999987375347036	WITHOUT_CLASSIFICATION	1.2624652964124082E-6	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999999088100495	WITHOUT_CLASSIFICATION	9.118995046314874E-8	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999991110230307	WITHOUT_CLASSIFICATION	8.889769692977046E-7	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999999775365026	WITHOUT_CLASSIFICATION	2.2463497407944183E-8	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999997932490614	WITHOUT_CLASSIFICATION	2.067509386827591E-7	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999953408251009	WITHOUT_CLASSIFICATION	4.6591748990928305E-6	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.999998548422899	WITHOUT_CLASSIFICATION	1.451577101008257E-6	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999995169447887	WITHOUT_CLASSIFICATION	4.830552113022316E-7	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999987281581322	WITHOUT_CLASSIFICATION	1.2718418678738553E-6	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999998840046832	WITHOUT_CLASSIFICATION	1.1599531684450279E-7	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999962753268069	WITHOUT_CLASSIFICATION	3.7246731931864135E-6	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999962753268069	WITHOUT_CLASSIFICATION	3.7246731931864135E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999998858069666	WITHOUT_CLASSIFICATION	1.1419303345493775E-7	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999998858069666	WITHOUT_CLASSIFICATION	1.1419303345493775E-7	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.999999447464358	WITHOUT_CLASSIFICATION	5.525356421369099E-7	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999991110230307	WITHOUT_CLASSIFICATION	8.889769692977046E-7	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.999925323123264	WITHOUT_CLASSIFICATION	7.467687673605011E-5	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999998090421747	WITHOUT_CLASSIFICATION	1.9095782530709667E-7	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999674288464654	WITHOUT_CLASSIFICATION	3.2571153534624105E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999674288464654	WITHOUT_CLASSIFICATION	3.2571153534624105E-5	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999936422270491	WITHOUT_CLASSIFICATION	6.3577729509017875E-6	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999996266999834	WITHOUT_CLASSIFICATION	3.7330001652777627E-7	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999997383138927	WITHOUT_CLASSIFICATION	2.616861073109688E-7	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999990535441888	WITHOUT_CLASSIFICATION	9.464558111076696E-7	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999992616915094	WITHOUT_CLASSIFICATION	7.38308490544157E-7	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.999999919399106	WITHOUT_CLASSIFICATION	8.060089396216015E-8	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9999874917416298	WITHOUT_CLASSIFICATION	1.2508258370208525E-5	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999994243715236	WITHOUT_CLASSIFICATION	5.756284763911715E-7	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9999939663082138	WITHOUT_CLASSIFICATION	6.033691786147195E-6	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999760941785052	WITHOUT_CLASSIFICATION	2.390582149488469E-5	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999992569583754	WITHOUT_CLASSIFICATION	7.430416245262956E-7	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9999986889156993	WITHOUT_CLASSIFICATION	1.311084300615062E-6	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999988688093099	WITHOUT_CLASSIFICATION	1.1311906901591066E-6	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999900220178448	WITHOUT_CLASSIFICATION	9.977982155118171E-6	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9999903482100841	WITHOUT_CLASSIFICATION	9.651789915908708E-6	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999995369511073	WITHOUT_CLASSIFICATION	4.6304889271110153E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948397511528	WITHOUT_CLASSIFICATION	5.160248847255344E-6	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999902474817569	WITHOUT_CLASSIFICATION	9.752518243132872E-6	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.999999982412468	WITHOUT_CLASSIFICATION	1.7587531966840766E-8	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999999265480037	WITHOUT_CLASSIFICATION	7.345199630732722E-8	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999995814467841	WITHOUT_CLASSIFICATION	4.185532157491094E-7	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999997257818869	WITHOUT_CLASSIFICATION	2.742181131188128E-7	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999985463325225	WITHOUT_CLASSIFICATION	1.4536674775682683E-6	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.999998097916252	WITHOUT_CLASSIFICATION	1.9020837479018914E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997238329002608	WITHOUT_CLASSIFICATION	2.7616709973924037E-4	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999988800944771	WITHOUT_CLASSIFICATION	1.1199055227801482E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999542230004832	WITHOUT_CLASSIFICATION	4.577699951669108E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999979191748813	WITHOUT_CLASSIFICATION	2.0808251186489817E-6	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.999972020452923	WITHOUT_CLASSIFICATION	2.7979547077068276E-5	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999994792131662	WITHOUT_CLASSIFICATION	5.207868337161272E-7	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999856835416373	WITHOUT_CLASSIFICATION	1.4316458362586979E-5	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999975396450865	WITHOUT_CLASSIFICATION	2.460354913532008E-6	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999610831531125	WITHOUT_CLASSIFICATION	3.891684688748529E-5	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999610831531125	WITHOUT_CLASSIFICATION	3.891684688748529E-5	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999998289402372	WITHOUT_CLASSIFICATION	1.7105976283969874E-7	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999953863091586	WITHOUT_CLASSIFICATION	4.6136908413566836E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999948365794593	WITHOUT_CLASSIFICATION	5.163420540642221E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999948365794593	WITHOUT_CLASSIFICATION	5.163420540642221E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999998189415238	WITHOUT_CLASSIFICATION	1.81058476234222E-7	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9999337287381652	WITHOUT_CLASSIFICATION	6.627126183479773E-5	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9999771745989077	WITHOUT_CLASSIFICATION	2.2825401092331964E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999963688647693	WITHOUT_CLASSIFICATION	3.631135230585061E-6	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.9999884992018132	WITHOUT_CLASSIFICATION	1.1500798186702028E-5	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.999995957702654	WITHOUT_CLASSIFICATION	4.0422973459481655E-6	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999988402572462	WITHOUT_CLASSIFICATION	1.1597427538856914E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999986296973481	WITHOUT_CLASSIFICATION	1.370302651932283E-6	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999988360855854	WITHOUT_CLASSIFICATION	1.1639144145934717E-6	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999988360855854	WITHOUT_CLASSIFICATION	1.1639144145934717E-6	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999999760812808	WITHOUT_CLASSIFICATION	2.3918719220242255E-8	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.999999766385292	WITHOUT_CLASSIFICATION	2.336147079290078E-7	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.999999766385292	WITHOUT_CLASSIFICATION	2.336147079290078E-7	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999987476498707	WITHOUT_CLASSIFICATION	1.2523501291798718E-6	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999974294957893	WITHOUT_CLASSIFICATION	2.570504210611373E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9942125415822974	WITHOUT_CLASSIFICATION	0.005787458417702658	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999996607276872	WITHOUT_CLASSIFICATION	3.392723128136712E-7	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999996405027893	WITHOUT_CLASSIFICATION	3.5949721061520474E-7	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999980552492279	WITHOUT_CLASSIFICATION	1.9447507720727014E-6	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999857169728714	WITHOUT_CLASSIFICATION	1.4283027128616987E-5	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999980426029695	WITHOUT_CLASSIFICATION	1.957397030430627E-6	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999954307844039	WITHOUT_CLASSIFICATION	4.569215596078112E-6	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9999982410320596	WITHOUT_CLASSIFICATION	1.7589679403846237E-6	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999999979113874	WITHOUT_CLASSIFICATION	2.088612722208537E-9	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.999999775742953	WITHOUT_CLASSIFICATION	2.242570470599432E-7	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.99999283625066	WITHOUT_CLASSIFICATION	7.16374933998955E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.99999283625066	WITHOUT_CLASSIFICATION	7.16374933998955E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.99999283625066	WITHOUT_CLASSIFICATION	7.16374933998955E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.99999283625066	WITHOUT_CLASSIFICATION	7.16374933998955E-6	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999950230464695	WITHOUT_CLASSIFICATION	4.976953530496881E-6	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999992769293409	WITHOUT_CLASSIFICATION	7.230706592223203E-7	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9999677628143601	WITHOUT_CLASSIFICATION	3.223718563997758E-5	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.9999289529146985	WITHOUT_CLASSIFICATION	7.104708530153207E-5	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999978179110613	WITHOUT_CLASSIFICATION	2.18208893869453E-6	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9999953542573763	WITHOUT_CLASSIFICATION	4.645742623676812E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997244880912447	WITHOUT_CLASSIFICATION	2.7551190875527664E-4	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999993881382505	WITHOUT_CLASSIFICATION	6.118617494863111E-7	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999665954692079	WITHOUT_CLASSIFICATION	3.3404530792123044E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997244880912447	WITHOUT_CLASSIFICATION	2.7551190875527664E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997244880912447	WITHOUT_CLASSIFICATION	2.7551190875527664E-4	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999998462410317	WITHOUT_CLASSIFICATION	1.5375896821904236E-7	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999859282445994	WITHOUT_CLASSIFICATION	1.4071755400516473E-5	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999969368032297	WITHOUT_CLASSIFICATION	3.063196770324229E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999993239448227	WITHOUT_CLASSIFICATION	6.760551773327054E-7	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999986914795552	WITHOUT_CLASSIFICATION	1.3085204448500665E-6	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999963268078266	WITHOUT_CLASSIFICATION	3.6731921735207407E-6	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999972095931662	WITHOUT_CLASSIFICATION	2.790406833761371E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999993239448227	WITHOUT_CLASSIFICATION	6.760551773327054E-7	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9999899517647004	WITHOUT_CLASSIFICATION	1.0048235299575766E-5	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999995619010333	WITHOUT_CLASSIFICATION	4.3809896669977155E-7	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999807375813893	WITHOUT_CLASSIFICATION	1.9262418610652194E-5	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999782755598716	WITHOUT_CLASSIFICATION	2.1724440128339262E-5	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999964960239843	WITHOUT_CLASSIFICATION	3.503976015735272E-6	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.999999777139508	WITHOUT_CLASSIFICATION	2.2286049199236946E-7	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999998655822718	WITHOUT_CLASSIFICATION	1.344177282928424E-7	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9999964104537343	WITHOUT_CLASSIFICATION	3.5895462657334472E-6	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997434717217	WITHOUT_CLASSIFICATION	2.565282782044199E-7	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999991040991116	WITHOUT_CLASSIFICATION	8.959008884024573E-7	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996620863445	WITHOUT_CLASSIFICATION	3.379136555101169E-7	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999987983389746	WITHOUT_CLASSIFICATION	1.2016610253619821E-6	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999929023652309	WITHOUT_CLASSIFICATION	7.097634769109333E-6	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9998407979280111	WITHOUT_CLASSIFICATION	1.5920207198893377E-4	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999997803792755	WITHOUT_CLASSIFICATION	2.1962072446798783E-7	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9999972299028258	WITHOUT_CLASSIFICATION	2.770097174164473E-6	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999996264573707	WITHOUT_CLASSIFICATION	3.7354262932136436E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999985631445519	WITHOUT_CLASSIFICATION	1.436855448068003E-6	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999996187824006	WITHOUT_CLASSIFICATION	3.812175992717916E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999985631445519	WITHOUT_CLASSIFICATION	1.436855448068003E-6	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.999999799759282	WITHOUT_CLASSIFICATION	2.0024071804841194E-7	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999999069238839	WITHOUT_CLASSIFICATION	9.307611621609644E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999959124605938	WITHOUT_CLASSIFICATION	4.087539406252811E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999698300440099	WITHOUT_CLASSIFICATION	3.0169955990215608E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999996264573707	WITHOUT_CLASSIFICATION	3.7354262932136436E-7	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999996187824006	WITHOUT_CLASSIFICATION	3.812175992717916E-7	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.999999799759282	WITHOUT_CLASSIFICATION	2.0024071804841194E-7	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999994725785575	WITHOUT_CLASSIFICATION	5.274214424789296E-7	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9999819780865815	WITHOUT_CLASSIFICATION	1.8021913418523682E-5	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.9999955976250736	WITHOUT_CLASSIFICATION	4.4023749263758474E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9999956043266996	WITHOUT_CLASSIFICATION	4.395673300285709E-6	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999984736902451	WITHOUT_CLASSIFICATION	1.5263097549598418E-6	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999975274517954	WITHOUT_CLASSIFICATION	2.4725482046972314E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948397511528	WITHOUT_CLASSIFICATION	5.160248847255344E-6	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999999069238839	WITHOUT_CLASSIFICATION	9.307611621609644E-8	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999999573401729	WITHOUT_CLASSIFICATION	4.2659827186818735E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.999993445183087	WITHOUT_CLASSIFICATION	6.554816912987037E-6	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.999998787013025	WITHOUT_CLASSIFICATION	1.212986975006119E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948397511528	WITHOUT_CLASSIFICATION	5.160248847255344E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999542230004832	WITHOUT_CLASSIFICATION	4.577699951669108E-5	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999997037168917	WITHOUT_CLASSIFICATION	2.9628310824286367E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948397511528	WITHOUT_CLASSIFICATION	5.160248847255344E-6	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999994774356479	WITHOUT_CLASSIFICATION	5.22564352125711E-7	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999898391841953	WITHOUT_CLASSIFICATION	1.0160815804690879E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999542230004832	WITHOUT_CLASSIFICATION	4.577699951669108E-5	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9999890875510947	WITHOUT_CLASSIFICATION	1.0912448905147717E-5	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999996688353567	WITHOUT_CLASSIFICATION	3.311646432941357E-7	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999984834066356	WITHOUT_CLASSIFICATION	1.5165933644081486E-6	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999952615369606	WITHOUT_CLASSIFICATION	4.738463039312633E-6	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999974625507992	WITHOUT_CLASSIFICATION	2.5374492007030554E-6	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999998776130573	WITHOUT_CLASSIFICATION	1.2238694279872168E-7	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999988215577875	WITHOUT_CLASSIFICATION	1.1784422124623678E-6	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9999764925505104	WITHOUT_CLASSIFICATION	2.3507449489636135E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999032970767772	WITHOUT_CLASSIFICATION	9.670292322276538E-5	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999986814333004	WITHOUT_CLASSIFICATION	1.318566699600578E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9942125415822974	WITHOUT_CLASSIFICATION	0.005787458417702658	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9999828303931737	WITHOUT_CLASSIFICATION	1.71696068262988E-5	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9999895648215417	WITHOUT_CLASSIFICATION	1.043517845834638E-5	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9999981184804096	WITHOUT_CLASSIFICATION	1.8815195903545608E-6	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999506784401246	WITHOUT_CLASSIFICATION	4.932155987542105E-5	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999993707755659	WITHOUT_CLASSIFICATION	6.292244340129158E-7	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999999771247718	WITHOUT_CLASSIFICATION	2.2875228236607127E-8	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999999668499872	WITHOUT_CLASSIFICATION	3.3150012755991205E-8	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9999970354190978	WITHOUT_CLASSIFICATION	2.9645809022244992E-6	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999998064571107	WITHOUT_CLASSIFICATION	1.9354288931384455E-7	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999996930779651	WITHOUT_CLASSIFICATION	3.069220349645946E-7	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9924782893891204	WITHOUT_CLASSIFICATION	0.007521710610879691	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.999998828183675	WITHOUT_CLASSIFICATION	1.1718163249386354E-6	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999980796550229	WITHOUT_CLASSIFICATION	1.9203449771710224E-6	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999991738983721	WITHOUT_CLASSIFICATION	8.261016278208129E-7	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999975555370761	WITHOUT_CLASSIFICATION	2.4444629239929877E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9998247781057182	WITHOUT_CLASSIFICATION	1.7522189428171783E-4	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999998130079812	WITHOUT_CLASSIFICATION	1.8699201876052378E-7	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9999994279956445	WITHOUT_CLASSIFICATION	5.720043556324008E-7	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.999999800288281	WITHOUT_CLASSIFICATION	1.9971171903803829E-7	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9999838580792839	WITHOUT_CLASSIFICATION	1.614192071612901E-5	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999997335087928	WITHOUT_CLASSIFICATION	2.6649120723435346E-7	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9976760980779551	WITHOUT_CLASSIFICATION	0.0023239019220449336	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999978825744864	WITHOUT_CLASSIFICATION	2.117425513697042E-6	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999972285865616	WITHOUT_CLASSIFICATION	2.7714134383137987E-6	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9998665731655269	WITHOUT_CLASSIFICATION	1.3342683447308372E-4	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999432139458733	WITHOUT_CLASSIFICATION	5.6786054126783765E-5	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999997528248119	WITHOUT_CLASSIFICATION	2.4717518808961744E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9912541508243983	WITHOUT_CLASSIFICATION	0.008745849175601773	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999998926165788	WITHOUT_CLASSIFICATION	1.0738342117903024E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999542230004832	WITHOUT_CLASSIFICATION	4.577699951669108E-5	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999994620195577	WITHOUT_CLASSIFICATION	5.379804423319911E-7	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999313118310462	WITHOUT_CLASSIFICATION	6.868816895380774E-5	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999313118310462	WITHOUT_CLASSIFICATION	6.868816895380774E-5	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999999701182825	WITHOUT_CLASSIFICATION	2.9881717540756575E-8	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999998776130573	WITHOUT_CLASSIFICATION	1.2238694279872168E-7	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9999827440926662	WITHOUT_CLASSIFICATION	1.7255907333789397E-5	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999978738016047	WITHOUT_CLASSIFICATION	2.126198395364785E-6	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999997937602856	WITHOUT_CLASSIFICATION	2.0623971437229909E-7	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999999853658151	WITHOUT_CLASSIFICATION	1.4634184903634924E-8	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9999935347535686	WITHOUT_CLASSIFICATION	6.465246431507632E-6	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9997942159196684	WITHOUT_CLASSIFICATION	2.0578408033169326E-4	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9999994016054702	WITHOUT_CLASSIFICATION	5.983945299131161E-7	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.99999995447355	WITHOUT_CLASSIFICATION	4.5526450047955655E-8	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999997783418794	WITHOUT_CLASSIFICATION	2.2165812058189866E-7	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.9999995379641613	WITHOUT_CLASSIFICATION	4.6203583865428035E-7	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999999226314971	WITHOUT_CLASSIFICATION	7.736850282508029E-8	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999895600667883	WITHOUT_CLASSIFICATION	1.0439933211685368E-5	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999990131841973	WITHOUT_CLASSIFICATION	9.86815802743421E-7	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999929170846	WITHOUT_CLASSIFICATION	7.082915411683144E-9	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999985535006416	WITHOUT_CLASSIFICATION	1.4464993583588741E-6	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.999999270775958	WITHOUT_CLASSIFICATION	7.292240420248599E-7	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999962438168248	WITHOUT_CLASSIFICATION	3.7561831752203575E-6	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999997955351213	WITHOUT_CLASSIFICATION	2.044648787301761E-7	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999999628661789	WITHOUT_CLASSIFICATION	3.713382110821719E-8	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999990460559416	WITHOUT_CLASSIFICATION	9.539440584060661E-7	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999999044509212	WITHOUT_CLASSIFICATION	9.554907868638E-8	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.999999591502433	WITHOUT_CLASSIFICATION	4.084975669616034E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9912541508243983	WITHOUT_CLASSIFICATION	0.008745849175601773	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999997683294363	WITHOUT_CLASSIFICATION	2.3167056364203103E-7	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999998839433294	WITHOUT_CLASSIFICATION	1.1605667063981719E-7	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999991904169395	WITHOUT_CLASSIFICATION	8.095830604383116E-7	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999943182102538	WITHOUT_CLASSIFICATION	5.681789746264206E-6	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9999800511853597	WITHOUT_CLASSIFICATION	1.994881464027487E-5	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999999894443218	WITHOUT_CLASSIFICATION	1.0555678293513846E-8	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999728871829463	WITHOUT_CLASSIFICATION	2.711281705363948E-5	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999984430081634	WITHOUT_CLASSIFICATION	1.5569918364650915E-6	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999997642052364	WITHOUT_CLASSIFICATION	2.3579476361649301E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999981140500867	WITHOUT_CLASSIFICATION	1.8859499133995619E-6	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999996350675989	WITHOUT_CLASSIFICATION	3.649324011340061E-7	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999727489172814	WITHOUT_CLASSIFICATION	2.72510827186114E-5	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9999716422766766	WITHOUT_CLASSIFICATION	2.8357723323403943E-5	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999999815199293	WITHOUT_CLASSIFICATION	1.84800706088319E-8	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999985501539049	WITHOUT_CLASSIFICATION	1.4498460950937635E-6	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999985501539049	WITHOUT_CLASSIFICATION	1.4498460950937635E-6	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999964737448656	WITHOUT_CLASSIFICATION	3.5262551344521124E-6	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9999997872377329	WITHOUT_CLASSIFICATION	2.1276226722136208E-7	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9997131177116197	WITHOUT_CLASSIFICATION	2.8688228838015235E-4	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9997131177116197	WITHOUT_CLASSIFICATION	2.8688228838015235E-4	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999996835701286	WITHOUT_CLASSIFICATION	3.164298713462836E-7	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999910803938313	WITHOUT_CLASSIFICATION	8.919606168634714E-6	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.9999999913003994	WITHOUT_CLASSIFICATION	8.699600574943259E-9	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999998310159981	WITHOUT_CLASSIFICATION	1.6898400201718543E-7	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999997541455572	WITHOUT_CLASSIFICATION	2.4585444279776757E-6	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999974676165436	WITHOUT_CLASSIFICATION	2.5323834562858654E-6	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999995595421883	WITHOUT_CLASSIFICATION	4.4045781158245873E-7	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999995595421883	WITHOUT_CLASSIFICATION	4.4045781158245873E-7	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984356084141	WITHOUT_CLASSIFICATION	1.5643915858906137E-6	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9999974491786828	WITHOUT_CLASSIFICATION	2.5508213172621558E-6	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999881525844714	WITHOUT_CLASSIFICATION	1.1847415528566171E-5	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999987206467454	WITHOUT_CLASSIFICATION	1.2793532545860168E-6	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999987206467454	WITHOUT_CLASSIFICATION	1.2793532545860168E-6	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999974595801807	WITHOUT_CLASSIFICATION	2.5404198191940513E-6	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.999996856745877	WITHOUT_CLASSIFICATION	3.1432541230422595E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999998413307185	WITHOUT_CLASSIFICATION	1.586692815485192E-7	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999982327160604	WITHOUT_CLASSIFICATION	1.7672839395872196E-6	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999995301127746	WITHOUT_CLASSIFICATION	4.698872253791639E-7	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999998756162766	WITHOUT_CLASSIFICATION	1.2438372348597932E-7	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999996465475053	WITHOUT_CLASSIFICATION	3.5345249468633266E-7	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999994308495318	WITHOUT_CLASSIFICATION	5.691504682496457E-7	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999999651962216	WITHOUT_CLASSIFICATION	3.480377851191623E-8	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999985192860581	WITHOUT_CLASSIFICATION	1.480713941931335E-6	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9999861996196366	WITHOUT_CLASSIFICATION	1.380038036341396E-5	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999998502867904	WITHOUT_CLASSIFICATION	1.497132096702843E-7	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9999926298756319	WITHOUT_CLASSIFICATION	7.370124368110578E-6	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999999991874834	WITHOUT_CLASSIFICATION	8.125166099278836E-10	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999786843879277	WITHOUT_CLASSIFICATION	2.1315612072293777E-5	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999983476528216	WITHOUT_CLASSIFICATION	1.6523471784194525E-6	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999989963303003	WITHOUT_CLASSIFICATION	1.0036696997427102E-6	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999999540240878	WITHOUT_CLASSIFICATION	4.59759121894049E-8	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.999997713779694	WITHOUT_CLASSIFICATION	2.286220306034695E-6	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999971415951862	WITHOUT_CLASSIFICATION	2.8584048137246905E-6	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.999998775589983	WITHOUT_CLASSIFICATION	1.224410016975603E-6	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999993164041018	WITHOUT_CLASSIFICATION	6.835958982846731E-7	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9999652964185248	WITHOUT_CLASSIFICATION	3.470358147520689E-5	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999834358033932	WITHOUT_CLASSIFICATION	1.656419660680781E-5	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.999988363012754	WITHOUT_CLASSIFICATION	1.1636987246052114E-5	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999985276163941	WITHOUT_CLASSIFICATION	1.4723836060128388E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999995572410892	WITHOUT_CLASSIFICATION	4.427589108400421E-7	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9999828354616576	WITHOUT_CLASSIFICATION	1.716453834247975E-5	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999984027513308	WITHOUT_CLASSIFICATION	1.597248669129121E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999995844226732	WITHOUT_CLASSIFICATION	4.155773267520205E-7	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999999774546708	WITHOUT_CLASSIFICATION	2.254532923498391E-8	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999980859288211	WITHOUT_CLASSIFICATION	1.914071178857145E-6	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.999999219037796	WITHOUT_CLASSIFICATION	7.809622039190714E-7	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9998516059373261	WITHOUT_CLASSIFICATION	1.48394062673879E-4	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.999999952299601	WITHOUT_CLASSIFICATION	4.7700399009292946E-8	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9999940994721961	WITHOUT_CLASSIFICATION	5.900527803966624E-6	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9999533871003247	WITHOUT_CLASSIFICATION	4.661289967530275E-5	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999996508375668	WITHOUT_CLASSIFICATION	3.49162433114585E-7	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999936050489923	WITHOUT_CLASSIFICATION	6.3949510077685575E-6	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999996745697567	WITHOUT_CLASSIFICATION	3.2543024337063097E-7	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.999999950031816	WITHOUT_CLASSIFICATION	4.996818406802361E-8	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9999960982786197	WITHOUT_CLASSIFICATION	3.9017213804038495E-6	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999988384226115	WITHOUT_CLASSIFICATION	1.1615773885600573E-6	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.9999985983665605	WITHOUT_CLASSIFICATION	1.4016334395930034E-6	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.9999980814418951	WITHOUT_CLASSIFICATION	1.9185581050271077E-6	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999993730781175	WITHOUT_CLASSIFICATION	6.269218826091075E-7	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999987573982019	WITHOUT_CLASSIFICATION	1.2426017981193198E-6	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.999998853456701	WITHOUT_CLASSIFICATION	1.1465432989942959E-6	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999992684982635	WITHOUT_CLASSIFICATION	7.315017365849426E-7	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999986288569438	WITHOUT_CLASSIFICATION	1.3711430562854982E-6	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999942797612669	WITHOUT_CLASSIFICATION	5.72023873314441E-6	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999995152445424	WITHOUT_CLASSIFICATION	4.847554575328399E-7	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999998501125706	WITHOUT_CLASSIFICATION	1.498874293028937E-7	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999986556627	WITHOUT_CLASSIFICATION	1.3443372578636213E-9	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999993888537198	WITHOUT_CLASSIFICATION	6.111462803089828E-7	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9999996455282273	WITHOUT_CLASSIFICATION	3.54471772668454E-7	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9999972912791419	WITHOUT_CLASSIFICATION	2.7087208579555414E-6	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999969560970575	WITHOUT_CLASSIFICATION	3.0439029424334217E-6	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999998567326798	WITHOUT_CLASSIFICATION	1.4326732024227E-7	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999999492367282	WITHOUT_CLASSIFICATION	5.07632717544346E-8	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999992133874669	WITHOUT_CLASSIFICATION	7.866125330864105E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999992133874669	WITHOUT_CLASSIFICATION	7.866125330864105E-7	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999989744277257	WITHOUT_CLASSIFICATION	1.0255722743628018E-6	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.999999564051521	WITHOUT_CLASSIFICATION	4.359484790391626E-7	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999994527893931	WITHOUT_CLASSIFICATION	5.472106068994759E-7	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999999251986844	WITHOUT_CLASSIFICATION	7.480131560028678E-8	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999999584210293	WITHOUT_CLASSIFICATION	4.157897070001395E-8	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999893348045584	WITHOUT_CLASSIFICATION	1.066519544153313E-5	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.999999687864299	WITHOUT_CLASSIFICATION	3.121357009997945E-7	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999997273867	WITHOUT_CLASSIFICATION	2.726132555812823E-10	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999958317882577	WITHOUT_CLASSIFICATION	4.16821174230551E-6	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.999995629096037	WITHOUT_CLASSIFICATION	4.370903962970028E-6	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999999706691792	WITHOUT_CLASSIFICATION	2.9330820868577553E-8	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9999976477991529	WITHOUT_CLASSIFICATION	2.352200847178041E-6	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999990894482994	WITHOUT_CLASSIFICATION	9.105517006836512E-7	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999998219834835	WITHOUT_CLASSIFICATION	1.780165164719049E-7	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999972957734314	WITHOUT_CLASSIFICATION	2.704226568494894E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999972957734314	WITHOUT_CLASSIFICATION	2.704226568494894E-6	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999999079440782	WITHOUT_CLASSIFICATION	9.205592183676085E-8	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999999207928532	WITHOUT_CLASSIFICATION	7.92071468675232E-8	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999982707935946	WITHOUT_CLASSIFICATION	1.7292064054269314E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.999991646614738	WITHOUT_CLASSIFICATION	8.353385261979887E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999822984477589	WITHOUT_CLASSIFICATION	1.7701552241107334E-5	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999856406889468	WITHOUT_CLASSIFICATION	1.4359311053183916E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999933754085402	WITHOUT_CLASSIFICATION	6.624591459769815E-6	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999998170891602	WITHOUT_CLASSIFICATION	1.8291083976390372E-7	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999999133857204	WITHOUT_CLASSIFICATION	8.661427965104813E-8	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999999896631854	WITHOUT_CLASSIFICATION	1.033681469415383E-8	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999998889433123	WITHOUT_CLASSIFICATION	1.110566878363446E-7	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999879577955597	WITHOUT_CLASSIFICATION	1.2042204440302404E-5	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999981576267679	WITHOUT_CLASSIFICATION	1.84237323207458E-6	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999999024423969	WITHOUT_CLASSIFICATION	9.755760308343302E-8	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999880747255798	WITHOUT_CLASSIFICATION	1.1925274420118433E-5	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999999559980282	WITHOUT_CLASSIFICATION	4.40019718172729E-8	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999999943989494	WITHOUT_CLASSIFICATION	5.6010505297762335E-9	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999992475088478	WITHOUT_CLASSIFICATION	7.5249115218513E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999998980499578	WITHOUT_CLASSIFICATION	1.0195004220490451E-7	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999999974107521	WITHOUT_CLASSIFICATION	2.5892478896525186E-9	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999991143686842	WITHOUT_CLASSIFICATION	8.856313158021807E-7	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999979813419	WITHOUT_CLASSIFICATION	2.0186581683431523E-9	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999998813497563	WITHOUT_CLASSIFICATION	1.1865024378466057E-7	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9999942262866078	WITHOUT_CLASSIFICATION	5.773713392064196E-6	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999979452345611	WITHOUT_CLASSIFICATION	2.0547654389024018E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999997241625291	WITHOUT_CLASSIFICATION	2.7583747087974647E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999999483622336	WITHOUT_CLASSIFICATION	5.163776648987711E-8	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999997046381415	WITHOUT_CLASSIFICATION	2.953618584813068E-7	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999999979495291	WITHOUT_CLASSIFICATION	2.050470875721618E-9	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999997407486477	WITHOUT_CLASSIFICATION	2.5925135218660737E-7	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9999839335445545	WITHOUT_CLASSIFICATION	1.6066455445526262E-5	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999998339434474	WITHOUT_CLASSIFICATION	1.6605655265241207E-7	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999999844585918	WITHOUT_CLASSIFICATION	1.5541408143614705E-8	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999954953629	WITHOUT_CLASSIFICATION	4.504637117796317E-9	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9999990109215342	WITHOUT_CLASSIFICATION	9.890784658403347E-7	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.99999989738452	WITHOUT_CLASSIFICATION	1.0261548006930127E-7	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999996426469413	WITHOUT_CLASSIFICATION	3.573530586356939E-7	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999998825408314	WITHOUT_CLASSIFICATION	1.174591685993841E-7	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999986541320716	WITHOUT_CLASSIFICATION	1.3458679284255051E-6	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9999999857936215	WITHOUT_CLASSIFICATION	1.4206378619182485E-8	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999985685769227	WITHOUT_CLASSIFICATION	1.4314230772652072E-6	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999985685769227	WITHOUT_CLASSIFICATION	1.4314230772652072E-6	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999999641010616	WITHOUT_CLASSIFICATION	3.589893835582752E-8	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.999999949467425	WITHOUT_CLASSIFICATION	5.053257507009742E-8	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9999993892252711	WITHOUT_CLASSIFICATION	6.107747289139987E-7	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999998178781654	WITHOUT_CLASSIFICATION	1.8212183466198476E-7	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999999645046901	WITHOUT_CLASSIFICATION	3.54953099129065E-8	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999999886495845	WITHOUT_CLASSIFICATION	1.1350415395259372E-8	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999992898759228	WITHOUT_CLASSIFICATION	7.101240772375389E-7	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999990661981745	WITHOUT_CLASSIFICATION	9.338018255453867E-7	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999998833605565	WITHOUT_CLASSIFICATION	1.1663944345935409E-7	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997405600087	WITHOUT_CLASSIFICATION	2.594399913048731E-6	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999981096319848	WITHOUT_CLASSIFICATION	1.8903680151839318E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999988422897593	WITHOUT_CLASSIFICATION	1.1577102407055577E-6	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999965770066396	WITHOUT_CLASSIFICATION	3.4229933604275735E-6	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.999999929111204	WITHOUT_CLASSIFICATION	7.088879604941144E-8	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999999824130436	WITHOUT_CLASSIFICATION	1.758695652811363E-8	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9999974694552543	WITHOUT_CLASSIFICATION	2.530544745771983E-6	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999999532534022	WITHOUT_CLASSIFICATION	4.6746597768293104E-8	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999998788384488	WITHOUT_CLASSIFICATION	1.2116155122076905E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999978372190004	WITHOUT_CLASSIFICATION	2.1627809996269853E-6	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.999999748538616	WITHOUT_CLASSIFICATION	2.514613840818656E-7	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999997668674767	WITHOUT_CLASSIFICATION	2.3313252335060644E-7	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999998272683465	WITHOUT_CLASSIFICATION	1.727316534442187E-7	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999997156852927	WITHOUT_CLASSIFICATION	2.843147073524645E-7	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9999546116847956	WITHOUT_CLASSIFICATION	4.5388315204328214E-5	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9999978132401336	WITHOUT_CLASSIFICATION	2.1867598664370638E-6	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999973099344532	WITHOUT_CLASSIFICATION	2.690065546753186E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999998146545608	WITHOUT_CLASSIFICATION	1.8534543922445613E-7	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999997034031576	WITHOUT_CLASSIFICATION	2.965968423974747E-7	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999998262721757	WITHOUT_CLASSIFICATION	1.7372782446401347E-7	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9999999308180405	WITHOUT_CLASSIFICATION	6.918195951401154E-8	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999997816962233	WITHOUT_CLASSIFICATION	2.1830377674406704E-7	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.999997658495683	WITHOUT_CLASSIFICATION	2.341504316957597E-6	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999999971231257	WITHOUT_CLASSIFICATION	2.8768742808535435E-9	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999993035520091	WITHOUT_CLASSIFICATION	6.964479908354476E-7	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999565549369	WITHOUT_CLASSIFICATION	4.344506319480273E-8	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.999999966093614	WITHOUT_CLASSIFICATION	3.390638604391688E-8	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999997585414159	WITHOUT_CLASSIFICATION	2.4145858413421157E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.999999264141037	WITHOUT_CLASSIFICATION	7.358589630590755E-7	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999998391382178	WITHOUT_CLASSIFICATION	1.6086178223312465E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9999946942579309	WITHOUT_CLASSIFICATION	5.305742069076709E-6	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999999167220032	WITHOUT_CLASSIFICATION	8.32779968994021E-8	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999996022922438	WITHOUT_CLASSIFICATION	3.977077561917725E-7	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999999659089064	WITHOUT_CLASSIFICATION	3.409109361206387E-8	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999998215754446	WITHOUT_CLASSIFICATION	1.78424555371219E-7	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999998259497053	WITHOUT_CLASSIFICATION	1.7405029466877662E-7	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.999999952134621	WITHOUT_CLASSIFICATION	4.786537901410683E-8	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999965765995092	WITHOUT_CLASSIFICATION	3.423400490881905E-6	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999990894482994	WITHOUT_CLASSIFICATION	9.105517006836512E-7	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999999978622424	WITHOUT_CLASSIFICATION	2.137757605036097E-9	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999999443423079	WITHOUT_CLASSIFICATION	5.565769219502537E-8	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9999891763472213	WITHOUT_CLASSIFICATION	1.0823652778622566E-5	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999987835571376	WITHOUT_CLASSIFICATION	1.2164428623825764E-6	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9999918907931649	WITHOUT_CLASSIFICATION	8.109206835194439E-6	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999999174047439	WITHOUT_CLASSIFICATION	8.259525611295969E-8	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9999997151691845	WITHOUT_CLASSIFICATION	2.8483081547815506E-7	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9999952180638455	WITHOUT_CLASSIFICATION	4.781936154439034E-6	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999938097906323	WITHOUT_CLASSIFICATION	6.19020936769945E-6	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.999999234653595	WITHOUT_CLASSIFICATION	7.653464050797184E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999996356541124	WITHOUT_CLASSIFICATION	3.6434588754925863E-7	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999979837188918	WITHOUT_CLASSIFICATION	2.0162811080905603E-6	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999911937232201	WITHOUT_CLASSIFICATION	8.806276779825603E-6	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999999803891082	WITHOUT_CLASSIFICATION	1.961089184763827E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990252174872	WITHOUT_CLASSIFICATION	9.74782512863077E-7	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999992214274469	WITHOUT_CLASSIFICATION	7.785725530778707E-7	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999985125451255	WITHOUT_CLASSIFICATION	1.4874548745067082E-6	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.999999995376813	WITHOUT_CLASSIFICATION	4.62318710416043E-9	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999958851432792	WITHOUT_CLASSIFICATION	4.114856720826037E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990252174872	WITHOUT_CLASSIFICATION	9.74782512863077E-7	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9998931782330405	WITHOUT_CLASSIFICATION	1.06821766959507E-4	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9999973658786101	WITHOUT_CLASSIFICATION	2.6341213899835165E-6	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999999955819429	WITHOUT_CLASSIFICATION	4.418057144516633E-9	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999999750704778	WITHOUT_CLASSIFICATION	2.4929522300253998E-8	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.999960230275084	WITHOUT_CLASSIFICATION	3.9769724915993544E-5	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999993301852321	WITHOUT_CLASSIFICATION	6.698147679390507E-7	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999998681400188	WITHOUT_CLASSIFICATION	1.3185998109270273E-7	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999994900936702	WITHOUT_CLASSIFICATION	5.099063298694168E-7	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999981897460449	WITHOUT_CLASSIFICATION	1.810253955058385E-6	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.999999832758543	WITHOUT_CLASSIFICATION	1.672414570729002E-7	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999994475525552	WITHOUT_CLASSIFICATION	5.524474449069174E-7	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9999997968581125	WITHOUT_CLASSIFICATION	2.0314188742615704E-7	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999999045459235	WITHOUT_CLASSIFICATION	9.545407662229674E-8	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9999573687677642	WITHOUT_CLASSIFICATION	4.263123223576243E-5	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999984603228058	WITHOUT_CLASSIFICATION	1.539677194248799E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.999999591502433	WITHOUT_CLASSIFICATION	4.084975669616034E-7	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999985993248806	WITHOUT_CLASSIFICATION	1.4006751194795719E-6	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999966321488091	WITHOUT_CLASSIFICATION	3.3678511909057088E-6	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9999988189784098	WITHOUT_CLASSIFICATION	1.1810215900983244E-6	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999999215844964	WITHOUT_CLASSIFICATION	7.841550366435128E-8	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999980994712296	WITHOUT_CLASSIFICATION	1.900528770316917E-6	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999999733794943	WITHOUT_CLASSIFICATION	2.662050574595138E-8	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999998943584884	WITHOUT_CLASSIFICATION	1.0564151163481125E-7	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999972411248	WITHOUT_CLASSIFICATION	2.758875233919775E-9	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999999753830073	WITHOUT_CLASSIFICATION	2.4616992718310884E-8	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.999999883591155	WITHOUT_CLASSIFICATION	1.1640884502736701E-7	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999999278643535	WITHOUT_CLASSIFICATION	7.213564641158725E-8	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999997568322934	WITHOUT_CLASSIFICATION	2.431677066210791E-7	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999999498637432	WITHOUT_CLASSIFICATION	5.0136256869192436E-8	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999959671283143	WITHOUT_CLASSIFICATION	4.032871685666462E-6	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999993063001854	WITHOUT_CLASSIFICATION	6.936998146169014E-7	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999765996879092	WITHOUT_CLASSIFICATION	2.340031209087167E-5	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999989344592988	WITHOUT_CLASSIFICATION	1.065540701228385E-6	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999993643506645	WITHOUT_CLASSIFICATION	6.356493354532189E-7	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999999562021491	WITHOUT_CLASSIFICATION	4.379785089296548E-8	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.999999711105405	WITHOUT_CLASSIFICATION	2.888945949792608E-7	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999999864686266	WITHOUT_CLASSIFICATION	1.353137331126117E-8	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999999614471256	WITHOUT_CLASSIFICATION	3.855287455905442E-8	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999999163198099	WITHOUT_CLASSIFICATION	8.368019018960551E-8	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999743605572334	WITHOUT_CLASSIFICATION	2.5639442766556847E-5	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999953582069508	WITHOUT_CLASSIFICATION	4.641793049061909E-6	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999953582069508	WITHOUT_CLASSIFICATION	4.641793049061909E-6	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999954372690091	WITHOUT_CLASSIFICATION	4.562730990826752E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999999398673131	WITHOUT_CLASSIFICATION	6.013268687678917E-8	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999998374653174	WITHOUT_CLASSIFICATION	1.6253468256590584E-7	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9900164380406397	DOCUMENTATION	0.009983561959360407	WITHOUT_CLASSIFICATION
// ignore	WITHOUT_CLASSIFICATION	0.9999963688647693	WITHOUT_CLASSIFICATION	3.631135230585061E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999963688647693	WITHOUT_CLASSIFICATION	3.631135230585061E-6	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.9999758009345762	WITHOUT_CLASSIFICATION	2.4199065423890558E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999995331593359	WITHOUT_CLASSIFICATION	4.668406641108872E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544689737964	WITHOUT_CLASSIFICATION	1.4553102620367363E-4	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999997182205276	WITHOUT_CLASSIFICATION	2.8177947242762815E-7	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999998174171892	WITHOUT_CLASSIFICATION	1.8258281081681358E-7	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999985678947647	WITHOUT_CLASSIFICATION	1.4321052352950155E-6	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999979294898155	WITHOUT_CLASSIFICATION	2.07051018457991E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999992192812079	WITHOUT_CLASSIFICATION	7.807187920850201E-7	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999999674729273	WITHOUT_CLASSIFICATION	3.252707259645364E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999787946929	WITHOUT_CLASSIFICATION	2.1205307099928721E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999787946929	WITHOUT_CLASSIFICATION	2.1205307099928721E-7	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9999992085331411	WITHOUT_CLASSIFICATION	7.914668588221615E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999849135461071	WITHOUT_CLASSIFICATION	1.5086453892766477E-5	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999978996375852	WITHOUT_CLASSIFICATION	2.100362414694577E-6	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9999470010496097	WITHOUT_CLASSIFICATION	5.299895039030813E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999542230004832	WITHOUT_CLASSIFICATION	4.577699951669108E-5	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999998187022653	WITHOUT_CLASSIFICATION	1.8129773471008651E-7	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998111585399	WITHOUT_CLASSIFICATION	1.8884146010984621E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999542230004832	WITHOUT_CLASSIFICATION	4.577699951669108E-5	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999998168750203	WITHOUT_CLASSIFICATION	1.8312497965192994E-7	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9999824352600901	WITHOUT_CLASSIFICATION	1.7564739909926117E-5	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999999721281869	WITHOUT_CLASSIFICATION	2.7871813105030394E-8	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999997817766386	WITHOUT_CLASSIFICATION	2.1822336133118792E-7	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.999999832758543	WITHOUT_CLASSIFICATION	1.672414570729002E-7	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999997630311468	WITHOUT_CLASSIFICATION	2.369688531004763E-7	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.999961596385669	WITHOUT_CLASSIFICATION	3.8403614331021625E-5	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999946528503283	WITHOUT_CLASSIFICATION	5.347149671629829E-6	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999937352374936	WITHOUT_CLASSIFICATION	6.264762506337761E-6	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.999998487366963	WITHOUT_CLASSIFICATION	1.512633037023587E-6	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.999998681705394	WITHOUT_CLASSIFICATION	1.3182946059360755E-6	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999936121509476	WITHOUT_CLASSIFICATION	6.387849052338547E-6	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9999999672055397	WITHOUT_CLASSIFICATION	3.2794460349469426E-8	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999912980754845	WITHOUT_CLASSIFICATION	8.701924515468447E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999978600721888	WITHOUT_CLASSIFICATION	2.139927811185874E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999978600721888	WITHOUT_CLASSIFICATION	2.139927811185874E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999993239448227	WITHOUT_CLASSIFICATION	6.760551773327054E-7	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999999931963154	WITHOUT_CLASSIFICATION	6.803684624099579E-9	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9997244880912447	WITHOUT_CLASSIFICATION	2.7551190875527664E-4	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999993976329367	WITHOUT_CLASSIFICATION	6.02367063205657E-7	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999975032746384	WITHOUT_CLASSIFICATION	2.4967253614508203E-6	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999992603959988	WITHOUT_CLASSIFICATION	7.396040010872609E-7	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999997803792755	WITHOUT_CLASSIFICATION	2.1962072446798783E-7	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999999939124972	WITHOUT_CLASSIFICATION	6.087502843992782E-9	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999994725785575	WITHOUT_CLASSIFICATION	5.274214424789296E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999999431482041	WITHOUT_CLASSIFICATION	5.685179606225904E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948397511528	WITHOUT_CLASSIFICATION	5.160248847255344E-6	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999999952930726	WITHOUT_CLASSIFICATION	4.7069274296879675E-9	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9999983512938518	WITHOUT_CLASSIFICATION	1.6487061482171403E-6	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999903531447	WITHOUT_CLASSIFICATION	9.646855279512682E-9	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999999575586158	WITHOUT_CLASSIFICATION	4.24413841204472E-8	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999992033030708	WITHOUT_CLASSIFICATION	7.966969292649415E-7	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.999999983155084	WITHOUT_CLASSIFICATION	1.6844916094880306E-8	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999990298703042	WITHOUT_CLASSIFICATION	9.701296957903365E-7	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999989034469657	WITHOUT_CLASSIFICATION	1.0965530342470144E-6	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999999937505483	WITHOUT_CLASSIFICATION	6.249451662909489E-9	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999999592395977	WITHOUT_CLASSIFICATION	4.076040231478504E-8	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999998341068312	WITHOUT_CLASSIFICATION	1.6589316880235457E-7	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999998413307185	WITHOUT_CLASSIFICATION	1.586692815485192E-7	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.999999999794002	WITHOUT_CLASSIFICATION	2.059979979015985E-10	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9997789740277702	WITHOUT_CLASSIFICATION	2.2102597222989435E-4	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9997789740277702	WITHOUT_CLASSIFICATION	2.2102597222989435E-4	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999997425893362	WITHOUT_CLASSIFICATION	2.574106637638107E-7	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999999176716686	WITHOUT_CLASSIFICATION	8.23283313830102E-8	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999971515188182	WITHOUT_CLASSIFICATION	2.8484811818443654E-6	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999999950165965	WITHOUT_CLASSIFICATION	4.983403456719735E-9	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999632519147811	WITHOUT_CLASSIFICATION	3.674808521893098E-5	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.9449636656034078	WITHOUT_CLASSIFICATION	0.055036334396592085	DOCUMENTATION
