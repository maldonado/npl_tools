//test out the optimizer:	WITHOUT_CLASSIFICATION	0.999996333202732	WITHOUT_CLASSIFICATION	3.666797268125735E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101496	WITHOUT_CLASSIFICATION	1.8963898503210835E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101496	WITHOUT_CLASSIFICATION	1.8963898503210835E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101496	WITHOUT_CLASSIFICATION	1.8963898503210835E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101496	WITHOUT_CLASSIFICATION	1.8963898503210835E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101496	WITHOUT_CLASSIFICATION	1.8963898503210835E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101496	WITHOUT_CLASSIFICATION	1.8963898503210835E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101496	WITHOUT_CLASSIFICATION	1.8963898503210835E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999991300092996	WITHOUT_CLASSIFICATION	8.69990700272126E-7	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999991300092996	WITHOUT_CLASSIFICATION	8.69990700272126E-7	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9999812583258124	WITHOUT_CLASSIFICATION	1.8741674187583492E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.999998820634051	WITHOUT_CLASSIFICATION	1.179365948987707E-6	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999995572459544	WITHOUT_CLASSIFICATION	4.4275404569147384E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999914713137821	WITHOUT_CLASSIFICATION	8.528686217890252E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999914713137821	WITHOUT_CLASSIFICATION	8.528686217890252E-6	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999997250035177	WITHOUT_CLASSIFICATION	2.749964822571405E-7	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999630679262	WITHOUT_CLASSIFICATION	3.6932073781158106E-8	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.999999559681741	WITHOUT_CLASSIFICATION	4.403182590238569E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999953723148567	WITHOUT_CLASSIFICATION	4.627685143230586E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999994549385145	WITHOUT_CLASSIFICATION	5.450614855309303E-7	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999994549385145	WITHOUT_CLASSIFICATION	5.450614855309303E-7	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999985416058281	WITHOUT_CLASSIFICATION	1.4583941717881E-6	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9999950689762173	WITHOUT_CLASSIFICATION	4.931023782828015E-6	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999996844095688	WITHOUT_CLASSIFICATION	3.155904312366545E-7	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999997527224659	WITHOUT_CLASSIFICATION	2.472775340625378E-7	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999954173446	WITHOUT_CLASSIFICATION	4.582655438900819E-9	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999943563117815	WITHOUT_CLASSIFICATION	5.643688218580597E-6	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9999914589273304	WITHOUT_CLASSIFICATION	8.541072669505125E-6	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999889113377082	WITHOUT_CLASSIFICATION	1.1088662291767563E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999830969455875	WITHOUT_CLASSIFICATION	1.690305441249914E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998180358554077	WITHOUT_CLASSIFICATION	1.819641445922577E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999919849429271	WITHOUT_CLASSIFICATION	8.015057073013726E-6	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.999987333234408	WITHOUT_CLASSIFICATION	1.2666765591893455E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999998913855325	WITHOUT_CLASSIFICATION	1.0861446762444244E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.999984016951114	WITHOUT_CLASSIFICATION	1.5983048885896242E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.999984016951114	WITHOUT_CLASSIFICATION	1.5983048885896242E-5	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999999883674644	WITHOUT_CLASSIFICATION	1.1632535621192106E-8	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999872286193873	WITHOUT_CLASSIFICATION	1.2771380612627973E-5	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999997957990161	WITHOUT_CLASSIFICATION	2.042009839021562E-7	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999999948163762	WITHOUT_CLASSIFICATION	5.183623753537424E-9	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9998931756045899	WITHOUT_CLASSIFICATION	1.0682439541015333E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9150981351149046	DOCUMENTATION	0.08490186488509546	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9150981351149046	DOCUMENTATION	0.08490186488509546	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999999646993561	WITHOUT_CLASSIFICATION	3.530064381583695E-8	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999999381820546	WITHOUT_CLASSIFICATION	6.181794536271142E-8	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999999810909871	WITHOUT_CLASSIFICATION	1.8909012905576997E-8	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999992409976898	WITHOUT_CLASSIFICATION	7.590023101537465E-7	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999975204914945	WITHOUT_CLASSIFICATION	2.47950850554762E-6	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976091106807	WITHOUT_CLASSIFICATION	2.39088931937412E-6	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976749577077	WITHOUT_CLASSIFICATION	2.325042292346019E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999960696029445	WITHOUT_CLASSIFICATION	3.930397055456787E-6	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999450985574688	WITHOUT_CLASSIFICATION	5.490144253117418E-5	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999999804454143	WITHOUT_CLASSIFICATION	1.955458571005876E-8	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999767151101095	WITHOUT_CLASSIFICATION	2.3284889890400863E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999450985574688	WITHOUT_CLASSIFICATION	5.490144253117418E-5	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999767151101095	WITHOUT_CLASSIFICATION	2.3284889890400863E-5	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999963533163543	WITHOUT_CLASSIFICATION	3.6466836457430156E-6	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.999999619658688	WITHOUT_CLASSIFICATION	3.803413120118707E-7	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999998735510877	WITHOUT_CLASSIFICATION	1.2644891238228973E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999999642694375	WITHOUT_CLASSIFICATION	3.573056249297627E-8	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999992904024726	WITHOUT_CLASSIFICATION	7.09597527360577E-7	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999999425786517	WITHOUT_CLASSIFICATION	5.7421348404386863E-8	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9999539232527215	WITHOUT_CLASSIFICATION	4.607674727860289E-5	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999697718120673	WITHOUT_CLASSIFICATION	3.0228187932722077E-5	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999999858782825	WITHOUT_CLASSIFICATION	1.4121717545769238E-8	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.999998014484928	WITHOUT_CLASSIFICATION	1.9855150719886908E-6	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999993569672149	WITHOUT_CLASSIFICATION	6.430327851393292E-7	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999964538126151	WITHOUT_CLASSIFICATION	3.546187384815089E-6	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999892637771	WITHOUT_CLASSIFICATION	1.0736222804264904E-8	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999997078049787	WITHOUT_CLASSIFICATION	2.9219502123203284E-7	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999999808062007	WITHOUT_CLASSIFICATION	1.9193799279195263E-8	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999999565517933	WITHOUT_CLASSIFICATION	4.344820664086713E-8	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999997671083581	WITHOUT_CLASSIFICATION	2.3289164187844324E-7	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999999302526833	WITHOUT_CLASSIFICATION	6.974731673274494E-8	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999998165803425	WITHOUT_CLASSIFICATION	1.834196575625577E-7	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999996274531063	WITHOUT_CLASSIFICATION	3.725468937019778E-7	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999995713439872	WITHOUT_CLASSIFICATION	4.286560127965153E-7	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999998834478603	WITHOUT_CLASSIFICATION	1.1655213982579038E-7	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.999999463444856	WITHOUT_CLASSIFICATION	5.36555144089461E-7	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.999999106388276	WITHOUT_CLASSIFICATION	8.936117238878094E-7	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9999999750715228	WITHOUT_CLASSIFICATION	2.4928477097281376E-8	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999985443076028	WITHOUT_CLASSIFICATION	1.4556923971788435E-6	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999997455164832	WITHOUT_CLASSIFICATION	2.5448351678699073E-7	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9999998338685465	WITHOUT_CLASSIFICATION	1.66131453489265E-7	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.999999879724803	WITHOUT_CLASSIFICATION	1.2027519701181345E-7	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999997683931727	WITHOUT_CLASSIFICATION	2.3160682738220977E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999989322505255	WITHOUT_CLASSIFICATION	1.0677494745751742E-6	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999998603924279	WITHOUT_CLASSIFICATION	1.3960757200910624E-7	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999974160966477	WITHOUT_CLASSIFICATION	2.583903352186622E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999994497501506	WITHOUT_CLASSIFICATION	5.502498493080873E-7	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999997137484682	WITHOUT_CLASSIFICATION	2.8625153179577523E-7	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.999996042101283	WITHOUT_CLASSIFICATION	3.957898717014187E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999994497501506	WITHOUT_CLASSIFICATION	5.502498493080873E-7	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999999974328689	WITHOUT_CLASSIFICATION	2.567131189108122E-9	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999999933368396	WITHOUT_CLASSIFICATION	6.663160326498042E-9	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999975077225688	WITHOUT_CLASSIFICATION	2.4922774312424134E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999985662790583	WITHOUT_CLASSIFICATION	1.4337209417595783E-6	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.9999996663966766	WITHOUT_CLASSIFICATION	3.336033234601952E-7	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999012118020714	WITHOUT_CLASSIFICATION	9.878819792865447E-5	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999012118020714	WITHOUT_CLASSIFICATION	9.878819792865447E-5	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999891305555471	WITHOUT_CLASSIFICATION	1.0869444452845538E-5	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999996982602246	WITHOUT_CLASSIFICATION	3.017397753586826E-7	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9999917281283033	WITHOUT_CLASSIFICATION	8.271871696773133E-6	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999999548102912	WITHOUT_CLASSIFICATION	4.5189708738390684E-8	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999998762563403	WITHOUT_CLASSIFICATION	1.2374365960571255E-7	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999996260393444	WITHOUT_CLASSIFICATION	3.739606554692044E-7	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999990552168505	WITHOUT_CLASSIFICATION	9.447831493611915E-7	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.999999162180388	WITHOUT_CLASSIFICATION	8.378196118909266E-7	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999998252620298	WITHOUT_CLASSIFICATION	1.7473797010231362E-7	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999995196883216	WITHOUT_CLASSIFICATION	4.803116784069617E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999993488368443	WITHOUT_CLASSIFICATION	6.511631557643422E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999993488368443	WITHOUT_CLASSIFICATION	6.511631557643422E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.99999887369609	WITHOUT_CLASSIFICATION	1.126303910017123E-6	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999985152535493	WITHOUT_CLASSIFICATION	1.4847464506043162E-6	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9999993490237121	WITHOUT_CLASSIFICATION	6.509762878086864E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999993488368443	WITHOUT_CLASSIFICATION	6.511631557643422E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.99999887369609	WITHOUT_CLASSIFICATION	1.126303910017123E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.99999887369609	WITHOUT_CLASSIFICATION	1.126303910017123E-6	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999999251296577	WITHOUT_CLASSIFICATION	7.487034229769253E-8	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999995003504271	WITHOUT_CLASSIFICATION	4.996495729184966E-7	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999994829985861	WITHOUT_CLASSIFICATION	5.170014138230774E-7	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999998841223393	WITHOUT_CLASSIFICATION	1.1587766064178033E-7	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999972394050326	WITHOUT_CLASSIFICATION	2.760594967513866E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999972394050326	WITHOUT_CLASSIFICATION	2.760594967513866E-6	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999977116778951	WITHOUT_CLASSIFICATION	2.2883221049896177E-6	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999960975279862	WITHOUT_CLASSIFICATION	3.90247201378129E-6	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999993034880281	WITHOUT_CLASSIFICATION	6.965119717965366E-7	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999997863877783	WITHOUT_CLASSIFICATION	2.1361222172431638E-7	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999997863877783	WITHOUT_CLASSIFICATION	2.1361222172431638E-7	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999724188970462	WITHOUT_CLASSIFICATION	2.7581102953736606E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.999999777065318	WITHOUT_CLASSIFICATION	2.229346821660988E-7	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999982712745933	WITHOUT_CLASSIFICATION	1.7287254067369508E-6	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999999818866337	WITHOUT_CLASSIFICATION	1.8113366316828037E-8	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999985648100643	WITHOUT_CLASSIFICATION	1.4351899356734283E-6	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999990028527191	WITHOUT_CLASSIFICATION	9.971472809229925E-7	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9999969607073099	WITHOUT_CLASSIFICATION	3.039292690049113E-6	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999995109125485	WITHOUT_CLASSIFICATION	4.890874515746464E-7	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9999987645429855	WITHOUT_CLASSIFICATION	1.235457014532332E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999982712745933	WITHOUT_CLASSIFICATION	1.7287254067369508E-6	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9999479359299897	WITHOUT_CLASSIFICATION	5.206407001044304E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999943488815735	WITHOUT_CLASSIFICATION	5.6511184264938385E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999943488815735	WITHOUT_CLASSIFICATION	5.6511184264938385E-6	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999999668184983	WITHOUT_CLASSIFICATION	3.3181501619974856E-8	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999999628692101	WITHOUT_CLASSIFICATION	3.7130789981773223E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999999702060357	WITHOUT_CLASSIFICATION	2.979396421495588E-8	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9996844036325544	WITHOUT_CLASSIFICATION	3.1559636744560174E-4	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9999946062756374	WITHOUT_CLASSIFICATION	5.393724362617282E-6	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9999719587195224	WITHOUT_CLASSIFICATION	2.8041280477638325E-5	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.9999977591559724	WITHOUT_CLASSIFICATION	2.2408440275291634E-6	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999997628945959	WITHOUT_CLASSIFICATION	2.371054040301467E-7	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.999999776389514	WITHOUT_CLASSIFICATION	2.2361048596577425E-7	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.999999776389514	WITHOUT_CLASSIFICATION	2.2361048596577425E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999811486188311	WITHOUT_CLASSIFICATION	1.8851381168850924E-5	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.999996333202732	WITHOUT_CLASSIFICATION	3.666797268125735E-6	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.999999463214536	WITHOUT_CLASSIFICATION	5.36785463929216E-7	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101496	WITHOUT_CLASSIFICATION	1.8963898503210835E-6	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999959156746371	WITHOUT_CLASSIFICATION	4.084325362892887E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999991300092996	WITHOUT_CLASSIFICATION	8.69990700272126E-7	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999992979848801	WITHOUT_CLASSIFICATION	7.020151199320905E-7	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999990725420482	WITHOUT_CLASSIFICATION	9.274579518186553E-7	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.999999236319679	WITHOUT_CLASSIFICATION	7.636803209956099E-7	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999997029078257	WITHOUT_CLASSIFICATION	2.97092174301937E-7	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.999999775557447	WITHOUT_CLASSIFICATION	2.2444255300250392E-7	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9999940342728382	WITHOUT_CLASSIFICATION	5.965727161793929E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999958532121642	WITHOUT_CLASSIFICATION	4.1467878357559115E-6	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999992239490131	WITHOUT_CLASSIFICATION	7.760509869597285E-7	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.999998820634051	WITHOUT_CLASSIFICATION	1.179365948987707E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999988983968798	WITHOUT_CLASSIFICATION	1.101603120264374E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999988983968798	WITHOUT_CLASSIFICATION	1.101603120264374E-6	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.999999677656177	WITHOUT_CLASSIFICATION	3.2234382296999525E-7	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9999836262019675	WITHOUT_CLASSIFICATION	1.637379803253118E-5	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999999605934504	WITHOUT_CLASSIFICATION	3.940654958874044E-8	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999992864835745	WITHOUT_CLASSIFICATION	7.135164255245148E-7	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.999999228802903	WITHOUT_CLASSIFICATION	7.711970970400749E-7	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999996229383785	WITHOUT_CLASSIFICATION	3.7706162148896816E-7	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999914713137821	WITHOUT_CLASSIFICATION	8.528686217890252E-6	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999997336814705	WITHOUT_CLASSIFICATION	2.6631852937473026E-7	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999936039015804	WITHOUT_CLASSIFICATION	6.396098419508072E-6	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.999999293045606	WITHOUT_CLASSIFICATION	7.069543940703907E-7	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999997059718988	WITHOUT_CLASSIFICATION	2.94028101127139E-7	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999978793496442	WITHOUT_CLASSIFICATION	2.1206503557136696E-6	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.9999983105932895	WITHOUT_CLASSIFICATION	1.6894067104394084E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999970925789725	WITHOUT_CLASSIFICATION	2.9074210274537306E-6	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999995719126497	WITHOUT_CLASSIFICATION	4.2808735030937575E-7	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.999996164002205	WITHOUT_CLASSIFICATION	3.835997795013294E-6	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.999993330882213	WITHOUT_CLASSIFICATION	6.669117787093988E-6	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999994115094291	WITHOUT_CLASSIFICATION	5.884905709237277E-7	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.9999999096798886	WITHOUT_CLASSIFICATION	9.032011145417646E-8	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101496	WITHOUT_CLASSIFICATION	1.8963898503210835E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999981036101496	WITHOUT_CLASSIFICATION	1.8963898503210835E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999991300092996	WITHOUT_CLASSIFICATION	8.69990700272126E-7	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999991300092996	WITHOUT_CLASSIFICATION	8.69990700272126E-7	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999958532121642	WITHOUT_CLASSIFICATION	4.1467878357559115E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999988983968798	WITHOUT_CLASSIFICATION	1.101603120264374E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999970925789725	WITHOUT_CLASSIFICATION	2.9074210274537306E-6	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999997250035177	WITHOUT_CLASSIFICATION	2.749964822571405E-7	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999994126236909	WITHOUT_CLASSIFICATION	5.873763090509234E-7	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999987414583893	WITHOUT_CLASSIFICATION	1.2585416106617128E-6	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999988897057511	WITHOUT_CLASSIFICATION	1.110294248803588E-6	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999989795759685	WITHOUT_CLASSIFICATION	1.0204240315255632E-6	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999986579576097	WITHOUT_CLASSIFICATION	1.3420423903205753E-6	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9999974818943452	WITHOUT_CLASSIFICATION	2.5181056547231866E-6	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.999997277146111	WITHOUT_CLASSIFICATION	2.722853889070312E-6	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9999781939262103	WITHOUT_CLASSIFICATION	2.18060737896999E-5	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999979669306628	WITHOUT_CLASSIFICATION	2.033069337252687E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999935631962439	WITHOUT_CLASSIFICATION	6.4368037561945275E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999935631962439	WITHOUT_CLASSIFICATION	6.4368037561945275E-6	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999998996484699	WITHOUT_CLASSIFICATION	1.0035153007746274E-7	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999998797714218	WITHOUT_CLASSIFICATION	1.2022857822594108E-7	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9999979075320253	WITHOUT_CLASSIFICATION	2.0924679746884887E-6	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999996598581884	WITHOUT_CLASSIFICATION	3.4014181163682275E-7	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999998323372439	WITHOUT_CLASSIFICATION	1.6766275615780578E-7	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999998968516843	WITHOUT_CLASSIFICATION	1.0314831559465483E-7	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999997878253817	WITHOUT_CLASSIFICATION	2.1217461818488662E-7	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999630679262	WITHOUT_CLASSIFICATION	3.6932073781158106E-8	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999990210009028	WITHOUT_CLASSIFICATION	9.78999097281344E-7	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999991664820509	WITHOUT_CLASSIFICATION	8.33517949124891E-7	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999991664820509	WITHOUT_CLASSIFICATION	8.33517949124891E-7	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999994761531239	WITHOUT_CLASSIFICATION	5.238468760310199E-7	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.999999617212393	WITHOUT_CLASSIFICATION	3.827876069516075E-7	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999992650943771	WITHOUT_CLASSIFICATION	7.349056228726278E-7	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999997069078348	WITHOUT_CLASSIFICATION	2.930921651638743E-7	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999924785572741	WITHOUT_CLASSIFICATION	7.521442725866149E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999991300092996	WITHOUT_CLASSIFICATION	8.69990700272126E-7	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999958532121642	WITHOUT_CLASSIFICATION	4.1467878357559115E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.999998820634051	WITHOUT_CLASSIFICATION	1.179365948987707E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999970925789725	WITHOUT_CLASSIFICATION	2.9074210274537306E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999970925789725	WITHOUT_CLASSIFICATION	2.9074210274537306E-6	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999668708769	WITHOUT_CLASSIFICATION	3.312912306998527E-8	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999999668708769	WITHOUT_CLASSIFICATION	3.312912306998527E-8	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999997578224663	WITHOUT_CLASSIFICATION	2.4217753367007025E-7	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999991462885592	WITHOUT_CLASSIFICATION	8.537114409012412E-7	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999991462885592	WITHOUT_CLASSIFICATION	8.537114409012412E-7	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999993699382066	WITHOUT_CLASSIFICATION	6.300617934855839E-7	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.9999990566364911	WITHOUT_CLASSIFICATION	9.433635087896871E-7	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999996460835473	WITHOUT_CLASSIFICATION	3.539164526966432E-7	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999996963724647	WITHOUT_CLASSIFICATION	3.0362753533541354E-7	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999999372295603	WITHOUT_CLASSIFICATION	6.277043970607752E-8	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999953723148567	WITHOUT_CLASSIFICATION	4.627685143230586E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999953723148567	WITHOUT_CLASSIFICATION	4.627685143230586E-6	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.9999984553796814	WITHOUT_CLASSIFICATION	1.5446203186895755E-6	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999952348877588	WITHOUT_CLASSIFICATION	4.765112241311085E-6	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.9999987544359614	WITHOUT_CLASSIFICATION	1.2455640385524495E-6	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999959012849275	WITHOUT_CLASSIFICATION	4.098715072434883E-6	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999990875733998	WITHOUT_CLASSIFICATION	9.124266002164596E-7	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9999970579757855	WITHOUT_CLASSIFICATION	2.9420242144880074E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999994549385145	WITHOUT_CLASSIFICATION	5.450614855309303E-7	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999979377595769	WITHOUT_CLASSIFICATION	2.0622404231146117E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999979377595769	WITHOUT_CLASSIFICATION	2.0622404231146117E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999985416058281	WITHOUT_CLASSIFICATION	1.4583941717881E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999985416058281	WITHOUT_CLASSIFICATION	1.4583941717881E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999962594417146	WITHOUT_CLASSIFICATION	3.7405582853843154E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999962594417146	WITHOUT_CLASSIFICATION	3.7405582853843154E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999996751499457	WITHOUT_CLASSIFICATION	3.24850054239851E-7	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999996751499457	WITHOUT_CLASSIFICATION	3.24850054239851E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999953723148567	WITHOUT_CLASSIFICATION	4.627685143230586E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999994549385145	WITHOUT_CLASSIFICATION	5.450614855309303E-7	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999979377595769	WITHOUT_CLASSIFICATION	2.0622404231146117E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999979377595769	WITHOUT_CLASSIFICATION	2.0622404231146117E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999985416058281	WITHOUT_CLASSIFICATION	1.4583941717881E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999962594417146	WITHOUT_CLASSIFICATION	3.7405582853843154E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999962594417146	WITHOUT_CLASSIFICATION	3.7405582853843154E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999996751499457	WITHOUT_CLASSIFICATION	3.24850054239851E-7	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999992429430037	WITHOUT_CLASSIFICATION	7.570569962787271E-7	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9999803933428139	WITHOUT_CLASSIFICATION	1.9606657186139412E-5	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.9999852185259476	WITHOUT_CLASSIFICATION	1.4781474052407419E-5	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999994218762918	WITHOUT_CLASSIFICATION	5.781237082633162E-7	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999985737302044	WITHOUT_CLASSIFICATION	1.4262697956585823E-6	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999958528463117	WITHOUT_CLASSIFICATION	4.1471536883288415E-6	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.999997860750302	WITHOUT_CLASSIFICATION	2.139249697990552E-6	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9999999948059145	WITHOUT_CLASSIFICATION	5.19408557231367E-9	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999975942944579	WITHOUT_CLASSIFICATION	2.4057055421915867E-6	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999999967790373	WITHOUT_CLASSIFICATION	3.2209628625292275E-9	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999999243657997	WITHOUT_CLASSIFICATION	7.563420032253315E-8	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999999644876787	WITHOUT_CLASSIFICATION	3.551232130841869E-8	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999891305555471	WITHOUT_CLASSIFICATION	1.0869444452845538E-5	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999958528463117	WITHOUT_CLASSIFICATION	4.1471536883288415E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9999186457595879	WITHOUT_CLASSIFICATION	8.135424041220137E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9999186457595879	WITHOUT_CLASSIFICATION	8.135424041220137E-5	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999999275878263	WITHOUT_CLASSIFICATION	7.241217379396629E-8	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999994914881161	WITHOUT_CLASSIFICATION	5.085118838634762E-7	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999994914881161	WITHOUT_CLASSIFICATION	5.085118838634762E-7	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999972701693722	WITHOUT_CLASSIFICATION	2.7298306276915604E-6	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999996329033931	WITHOUT_CLASSIFICATION	3.670966069265811E-7	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.999999945811751	WITHOUT_CLASSIFICATION	5.418824898540136E-8	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999991195465442	WITHOUT_CLASSIFICATION	8.804534557999117E-7	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999991195465442	WITHOUT_CLASSIFICATION	8.804534557999117E-7	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999999954173446	WITHOUT_CLASSIFICATION	4.582655438900819E-9	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.999999981464526	WITHOUT_CLASSIFICATION	1.8535474113030084E-8	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.999999981464526	WITHOUT_CLASSIFICATION	1.8535474113030084E-8	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999987391753897	WITHOUT_CLASSIFICATION	1.2608246102560877E-6	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999998978417218	WITHOUT_CLASSIFICATION	1.0215827806940106E-7	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999998052595239	WITHOUT_CLASSIFICATION	1.9474047611513787E-7	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999874706780176	WITHOUT_CLASSIFICATION	1.2529321982351393E-5	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999947202696318	WITHOUT_CLASSIFICATION	5.279730368223808E-6	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.99999500319964	WITHOUT_CLASSIFICATION	4.9968003600927296E-6	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999943563117815	WITHOUT_CLASSIFICATION	5.643688218580597E-6	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999934836278754	WITHOUT_CLASSIFICATION	6.516372124678752E-6	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9989064307459097	WITHOUT_CLASSIFICATION	0.001093569254090216	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.999991148375784	WITHOUT_CLASSIFICATION	8.851624216016928E-6	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999889335448487	WITHOUT_CLASSIFICATION	1.1066455151205759E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999830969455875	WITHOUT_CLASSIFICATION	1.690305441249914E-5	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999992856049442	WITHOUT_CLASSIFICATION	7.143950558482328E-7	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999996841484586	WITHOUT_CLASSIFICATION	3.1585154134918916E-7	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999999758199268	WITHOUT_CLASSIFICATION	2.4180073203925103E-8	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999830969455875	WITHOUT_CLASSIFICATION	1.690305441249914E-5	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999999479539012	WITHOUT_CLASSIFICATION	5.204609874862669E-8	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999996097342332	WITHOUT_CLASSIFICATION	3.9026576678780015E-7	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999923173179419	WITHOUT_CLASSIFICATION	7.682682058028942E-6	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.9999908277318489	WITHOUT_CLASSIFICATION	9.172268151116581E-6	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999848275675252	WITHOUT_CLASSIFICATION	1.517243247476687E-5	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999853371315185	WITHOUT_CLASSIFICATION	1.4662868481624791E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999770398689216	WITHOUT_CLASSIFICATION	2.2960131078339853E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.999987333234408	WITHOUT_CLASSIFICATION	1.2666765591893455E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999852071757456	WITHOUT_CLASSIFICATION	1.4792824254439496E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999998913855325	WITHOUT_CLASSIFICATION	1.0861446762444244E-7	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999976324208746	WITHOUT_CLASSIFICATION	2.367579125466287E-6	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999993019446871	WITHOUT_CLASSIFICATION	6.98055312836063E-7	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999929129237243	WITHOUT_CLASSIFICATION	7.087076275676858E-6	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999943563117815	WITHOUT_CLASSIFICATION	5.643688218580597E-6	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999852071757456	WITHOUT_CLASSIFICATION	1.4792824254439496E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999976324208746	WITHOUT_CLASSIFICATION	2.367579125466287E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999929129237243	WITHOUT_CLASSIFICATION	7.087076275676858E-6	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.999999839211216	WITHOUT_CLASSIFICATION	1.6078878391465662E-7	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999891826943632	WITHOUT_CLASSIFICATION	1.081730563687288E-5	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.999999801201681	WITHOUT_CLASSIFICATION	1.9879831904843308E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.999984016951114	WITHOUT_CLASSIFICATION	1.5983048885896242E-5	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999968005087364	WITHOUT_CLASSIFICATION	3.1994912636929634E-6	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.9999991340844918	WITHOUT_CLASSIFICATION	8.659155081282822E-7	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.9999877853864315	WITHOUT_CLASSIFICATION	1.22146135684335E-5	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999997137112373	WITHOUT_CLASSIFICATION	2.86288762628094E-7	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999894355499451	WITHOUT_CLASSIFICATION	1.0564450054920148E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999998925917556	WITHOUT_CLASSIFICATION	1.0740824448929163E-7	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.999999886384838	WITHOUT_CLASSIFICATION	1.1361516191438623E-7	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999999285601536	WITHOUT_CLASSIFICATION	7.14398464426624E-8	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999988290410113	WITHOUT_CLASSIFICATION	1.1709589886712406E-6	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999998609660222	WITHOUT_CLASSIFICATION	1.3903397776226996E-7	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999957042761355	WITHOUT_CLASSIFICATION	4.2957238645285185E-6	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999865998553253	WITHOUT_CLASSIFICATION	1.3400144674647285E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999872286193873	WITHOUT_CLASSIFICATION	1.2771380612627973E-5	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999998700471358	WITHOUT_CLASSIFICATION	1.299528642012514E-7	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999875675062891	WITHOUT_CLASSIFICATION	1.2432493710852486E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999852071757456	WITHOUT_CLASSIFICATION	1.4792824254439496E-5	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999999450611166	WITHOUT_CLASSIFICATION	5.493888348730003E-8	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999994250113555	WITHOUT_CLASSIFICATION	5.74988644542857E-7	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999992606523523	WITHOUT_CLASSIFICATION	7.393476476486949E-7	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9999999640665176	WITHOUT_CLASSIFICATION	3.593348250456788E-8	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999995446423138	WITHOUT_CLASSIFICATION	4.5535768623892565E-7	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999972351947722	WITHOUT_CLASSIFICATION	2.764805227802272E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999993088115571	WITHOUT_CLASSIFICATION	6.911884429197723E-7	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999998504197273	WITHOUT_CLASSIFICATION	1.4958027262790822E-7	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999798418362815	WITHOUT_CLASSIFICATION	2.0158163718534764E-5	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999853844118628	WITHOUT_CLASSIFICATION	1.4615588137049025E-5	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999965398024799	WITHOUT_CLASSIFICATION	3.4601975200246654E-6	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999957516071888	WITHOUT_CLASSIFICATION	4.248392811237068E-6	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9999992032927165	WITHOUT_CLASSIFICATION	7.967072835619818E-7	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999999948163762	WITHOUT_CLASSIFICATION	5.183623753537424E-9	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999992183556242	WITHOUT_CLASSIFICATION	7.816443758601551E-7	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.999999458630073	WITHOUT_CLASSIFICATION	5.413699270680136E-7	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9999964700034468	WITHOUT_CLASSIFICATION	3.5299965531274558E-6	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999989535563536	WITHOUT_CLASSIFICATION	1.0464436464417393E-6	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999997766788534	WITHOUT_CLASSIFICATION	2.2332114665883604E-7	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999998935344976	WITHOUT_CLASSIFICATION	1.064655024269419E-7	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999986763018	WITHOUT_CLASSIFICATION	1.3236980537968073E-9	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999998490924155	WITHOUT_CLASSIFICATION	1.509075844913483E-7	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999996032386094	WITHOUT_CLASSIFICATION	3.9676139067092095E-7	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9999904391639614	WITHOUT_CLASSIFICATION	9.560836038652727E-6	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999617194474001	WITHOUT_CLASSIFICATION	3.828055259987856E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999617194474001	WITHOUT_CLASSIFICATION	3.828055259987856E-5	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999876788688644	WITHOUT_CLASSIFICATION	1.2321131135579152E-5	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999998063824644	WITHOUT_CLASSIFICATION	1.936175354769831E-7	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999975757522789	WITHOUT_CLASSIFICATION	2.4242477210817753E-6	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999950789306703	WITHOUT_CLASSIFICATION	4.921069329660687E-6	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9999898776704126	WITHOUT_CLASSIFICATION	1.0122329587375608E-5	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9999981800442044	WITHOUT_CLASSIFICATION	1.8199557956152676E-6	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.999999725436397	WITHOUT_CLASSIFICATION	2.745636030137378E-7	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999999082213428	WITHOUT_CLASSIFICATION	9.177865718836398E-8	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9999902181424437	WITHOUT_CLASSIFICATION	9.781857556352737E-6	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999950511626218	WITHOUT_CLASSIFICATION	4.948837378243354E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.9999915741859385	WITHOUT_CLASSIFICATION	8.425814061474888E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999995207038	WITHOUT_CLASSIFICATION	4.792961999308166E-7	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9999989844354467	WITHOUT_CLASSIFICATION	1.0155645533747313E-6	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9999990060425271	WITHOUT_CLASSIFICATION	9.939574729338418E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995561580598	WITHOUT_CLASSIFICATION	4.438419402208924E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995486751236	WITHOUT_CLASSIFICATION	4.5132487639235604E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999999693205415	WITHOUT_CLASSIFICATION	3.0679458482620395E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.999999816900051	WITHOUT_CLASSIFICATION	1.8309994902408826E-7	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9999995423766047	WITHOUT_CLASSIFICATION	4.5762339524456877E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999993651070516	WITHOUT_CLASSIFICATION	6.348929484351988E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999972947086241	WITHOUT_CLASSIFICATION	2.705291375909254E-6	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999972947086241	WITHOUT_CLASSIFICATION	2.705291375909254E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999777391386175	WITHOUT_CLASSIFICATION	2.226086138244684E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999777391386175	WITHOUT_CLASSIFICATION	2.226086138244684E-5	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999996032386094	WITHOUT_CLASSIFICATION	3.9676139067092095E-7	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999980553217895	WITHOUT_CLASSIFICATION	1.9446782104404132E-6	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999969934717039	WITHOUT_CLASSIFICATION	3.00652829609808E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.999999884897135	WITHOUT_CLASSIFICATION	1.1510286491631752E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999811486188311	WITHOUT_CLASSIFICATION	1.8851381168850924E-5	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999969934717039	WITHOUT_CLASSIFICATION	3.00652829609808E-6	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.999999884897135	WITHOUT_CLASSIFICATION	1.1510286491631752E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999921946647574	WITHOUT_CLASSIFICATION	7.805335242669983E-6	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999980682798306	WITHOUT_CLASSIFICATION	1.931720169469705E-6	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999999045594518	WITHOUT_CLASSIFICATION	9.544054825206784E-8	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.999999855817749	WITHOUT_CLASSIFICATION	1.4418225104893015E-7	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9999998614462136	WITHOUT_CLASSIFICATION	1.385537865171863E-7	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9999855853047753	WITHOUT_CLASSIFICATION	1.441469522471157E-5	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999991692615231	WITHOUT_CLASSIFICATION	8.30738476983635E-7	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999943116755453	WITHOUT_CLASSIFICATION	5.688324454668694E-6	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999893170554337	WITHOUT_CLASSIFICATION	1.068294456634583E-5	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999999266101115	WITHOUT_CLASSIFICATION	7.338988855947596E-8	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999995516416847	WITHOUT_CLASSIFICATION	4.483583152224135E-7	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999999169197584	WITHOUT_CLASSIFICATION	8.308024156987616E-8	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999999318038219	WITHOUT_CLASSIFICATION	6.819617817504868E-8	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9999987566997852	WITHOUT_CLASSIFICATION	1.2433002147691592E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999811486188311	WITHOUT_CLASSIFICATION	1.8851381168850924E-5	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9999988810526508	WITHOUT_CLASSIFICATION	1.118947349120672E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999956982401819	WITHOUT_CLASSIFICATION	4.301759818139596E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999956982401819	WITHOUT_CLASSIFICATION	4.301759818139596E-6	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999998786907367	WITHOUT_CLASSIFICATION	1.2130926334754762E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999921946647574	WITHOUT_CLASSIFICATION	7.805335242669983E-6	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9999981467230937	WITHOUT_CLASSIFICATION	1.8532769062626266E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.999999975340238	WITHOUT_CLASSIFICATION	2.4659761932441824E-8	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9999975214503162	WITHOUT_CLASSIFICATION	2.4785496838973683E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999977714162483	WITHOUT_CLASSIFICATION	2.228583751633324E-6	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999973903858747	WITHOUT_CLASSIFICATION	2.60961412536841E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999921946647574	WITHOUT_CLASSIFICATION	7.805335242669983E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999977714162483	WITHOUT_CLASSIFICATION	2.228583751633324E-6	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999973903858747	WITHOUT_CLASSIFICATION	2.60961412536841E-6	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9999815922047327	WITHOUT_CLASSIFICATION	1.840779526732587E-5	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999987665451744	WITHOUT_CLASSIFICATION	1.2334548255866504E-6	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999989725119284	WITHOUT_CLASSIFICATION	1.0274880716456866E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999921946647574	WITHOUT_CLASSIFICATION	7.805335242669983E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999921946647574	WITHOUT_CLASSIFICATION	7.805335242669983E-6	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.999998644175761	WITHOUT_CLASSIFICATION	1.3558242390119018E-6	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999993933201847	WITHOUT_CLASSIFICATION	6.066798153395174E-7	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999934140084383	WITHOUT_CLASSIFICATION	6.585991561671706E-6	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.999999927482512	WITHOUT_CLASSIFICATION	7.2517488063762E-8	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999942864546547	WITHOUT_CLASSIFICATION	5.7135453452260495E-6	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999999516084056	WITHOUT_CLASSIFICATION	4.839159448759225E-8	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999999889510182	WITHOUT_CLASSIFICATION	1.104898194320939E-8	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999996666887637	WITHOUT_CLASSIFICATION	3.3331123626434045E-7	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999989183641917	WITHOUT_CLASSIFICATION	1.0816358082409402E-6	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9999977119559255	WITHOUT_CLASSIFICATION	2.2880440744314946E-6	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999970765113847	WITHOUT_CLASSIFICATION	2.923488615325946E-6	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999992471408333	WITHOUT_CLASSIFICATION	7.528591667656782E-7	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.999999869782772	WITHOUT_CLASSIFICATION	1.3021722802560016E-7	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9999998755594197	WITHOUT_CLASSIFICATION	1.2444058031549426E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997278961609	WITHOUT_CLASSIFICATION	2.7210383909200387E-6	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999999977650922	WITHOUT_CLASSIFICATION	2.234907801168456E-9	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999992409976898	WITHOUT_CLASSIFICATION	7.590023101537465E-7	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9999638021677622	WITHOUT_CLASSIFICATION	3.619783223786368E-5	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9998752262912864	WITHOUT_CLASSIFICATION	1.247737087135076E-4	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9999998405302098	WITHOUT_CLASSIFICATION	1.59469790221542E-7	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999966410903142	WITHOUT_CLASSIFICATION	3.3589096857766433E-6	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999906183091369	WITHOUT_CLASSIFICATION	9.381690862999369E-6	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999906183091369	WITHOUT_CLASSIFICATION	9.381690862999369E-6	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999992409976898	WITHOUT_CLASSIFICATION	7.590023101537465E-7	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999998573939157	WITHOUT_CLASSIFICATION	1.4260608430559412E-7	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999999951605641	WITHOUT_CLASSIFICATION	4.83943577848661E-9	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9999980992882258	WITHOUT_CLASSIFICATION	1.90071177422275E-6	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999974377575692	WITHOUT_CLASSIFICATION	2.5622424307007565E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999943762800277	WITHOUT_CLASSIFICATION	5.62371997215139E-6	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.999997663020359	WITHOUT_CLASSIFICATION	2.336979641029352E-6	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999968638185556	WITHOUT_CLASSIFICATION	3.136181444434354E-6	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999998435149542	WITHOUT_CLASSIFICATION	1.5648504569116419E-7	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999992955093361	WITHOUT_CLASSIFICATION	7.044906638214541E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999985857257498	WITHOUT_CLASSIFICATION	1.4142742501497145E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999995228042863	WITHOUT_CLASSIFICATION	4.771957137953281E-7	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999981117983742	WITHOUT_CLASSIFICATION	1.8882016258023319E-6	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999870207348948	WITHOUT_CLASSIFICATION	1.297926510516298E-5	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999999764386988	WITHOUT_CLASSIFICATION	2.3561301223964903E-8	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999918322286	WITHOUT_CLASSIFICATION	8.16777140806912E-8	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9999996277234146	WITHOUT_CLASSIFICATION	3.722765853825491E-7	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999999691135206	WITHOUT_CLASSIFICATION	3.088647949125391E-8	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9998702515716144	WITHOUT_CLASSIFICATION	1.2974842838561537E-4	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998433300226	WITHOUT_CLASSIFICATION	1.5666997745669863E-7	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999999305856404	WITHOUT_CLASSIFICATION	6.941435953076311E-8	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9999987862814367	WITHOUT_CLASSIFICATION	1.21371856324084E-6	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999990614042256	WITHOUT_CLASSIFICATION	9.385957744603949E-7	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996337336982	WITHOUT_CLASSIFICATION	3.6626630184984E-7	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989459148539	WITHOUT_CLASSIFICATION	1.054085145967128E-6	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997906417949	WITHOUT_CLASSIFICATION	2.093582051082999E-6	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979808414652	WITHOUT_CLASSIFICATION	2.019158534870839E-6	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972172133063	WITHOUT_CLASSIFICATION	2.782786693793026E-6	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999974467177958	WITHOUT_CLASSIFICATION	2.5532822041474955E-6	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999962556125425	WITHOUT_CLASSIFICATION	3.7443874576001227E-6	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999734832089	WITHOUT_CLASSIFICATION	2.651679108658136E-7	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9999978821057751	WITHOUT_CLASSIFICATION	2.1178942249045883E-6	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9999977492578749	WITHOUT_CLASSIFICATION	2.2507421251064963E-6	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999822178818	WITHOUT_CLASSIFICATION	1.7782118198334883E-7	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999075784008	WITHOUT_CLASSIFICATION	9.242159916477555E-8	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998426261334	WITHOUT_CLASSIFICATION	1.5737386647525487E-7	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980183245414	WITHOUT_CLASSIFICATION	1.9816754586686247E-6	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999970330313397	WITHOUT_CLASSIFICATION	2.9669686603328864E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999633363093	WITHOUT_CLASSIFICATION	3.66636906954702E-7	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991679580401	WITHOUT_CLASSIFICATION	8.320419599006477E-7	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999968277464246	WITHOUT_CLASSIFICATION	3.1722535754048215E-6	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999985325580455	WITHOUT_CLASSIFICATION	1.4674419544957481E-6	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999944267250686	WITHOUT_CLASSIFICATION	5.573274931362277E-6	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9999999572603361	WITHOUT_CLASSIFICATION	4.273966389431131E-8	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999976729207892	WITHOUT_CLASSIFICATION	2.327079210735737E-6	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999956452049663	WITHOUT_CLASSIFICATION	4.354795033657769E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999989743295212	WITHOUT_CLASSIFICATION	1.0256704787395392E-6	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9999852111225838	WITHOUT_CLASSIFICATION	1.4788877416269582E-5	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999976530497329	WITHOUT_CLASSIFICATION	2.3469502670584608E-6	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9999978311787332	WITHOUT_CLASSIFICATION	2.168821266811683E-6	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999956756125487	WITHOUT_CLASSIFICATION	4.324387451308621E-6	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999938577591355	WITHOUT_CLASSIFICATION	6.1422408644770805E-6	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999926813495055	WITHOUT_CLASSIFICATION	7.318650494519384E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999951129707342	WITHOUT_CLASSIFICATION	4.887029265855574E-6	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999932441705662	WITHOUT_CLASSIFICATION	6.755829433759276E-6	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999999713837737	WITHOUT_CLASSIFICATION	2.8616226206905048E-8	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.999999811596107	WITHOUT_CLASSIFICATION	1.884038929582462E-7	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9999977651171952	WITHOUT_CLASSIFICATION	2.2348828047298594E-6	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999935164205028	WITHOUT_CLASSIFICATION	6.483579497207923E-6	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999996698075729	WITHOUT_CLASSIFICATION	3.3019242698165267E-7	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996621823158	WITHOUT_CLASSIFICATION	3.3781768421087236E-6	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99999497349226	WITHOUT_CLASSIFICATION	5.026507740088233E-6	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999594901394185	WITHOUT_CLASSIFICATION	4.05098605814568E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999946396561133	WITHOUT_CLASSIFICATION	5.360343886701239E-6	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999996627747966	WITHOUT_CLASSIFICATION	3.3722520339136016E-7	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999997971345896	WITHOUT_CLASSIFICATION	2.028654103503716E-7	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9999998133230172	WITHOUT_CLASSIFICATION	1.866769826987418E-7	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999996225670521	WITHOUT_CLASSIFICATION	3.774329479567184E-7	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999835796749	WITHOUT_CLASSIFICATION	1.6420325106034942E-7	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999997068414063	WITHOUT_CLASSIFICATION	2.9315859384536656E-7	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9999985678768893	WITHOUT_CLASSIFICATION	1.4321231106775082E-6	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999995362288572	WITHOUT_CLASSIFICATION	4.637711428350489E-7	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999992866158629	WITHOUT_CLASSIFICATION	7.13384137144648E-7	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999985902835913	WITHOUT_CLASSIFICATION	1.4097164086239116E-6	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999999911760273	WITHOUT_CLASSIFICATION	8.823972594283818E-9	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999929069105497	WITHOUT_CLASSIFICATION	7.093089450357825E-6	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999930667862149	WITHOUT_CLASSIFICATION	6.933213785110805E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999989743295212	WITHOUT_CLASSIFICATION	1.0256704787395392E-6	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999999718124412	WITHOUT_CLASSIFICATION	2.8187558759871297E-8	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999999144193285	WITHOUT_CLASSIFICATION	8.558067158086012E-8	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999998632801618	WITHOUT_CLASSIFICATION	1.367198382386807E-7	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999979121378086	WITHOUT_CLASSIFICATION	2.0878621914119423E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999999592140268	WITHOUT_CLASSIFICATION	4.0785973204979346E-8	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999989746979099	WITHOUT_CLASSIFICATION	1.0253020901312146E-6	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9999974069411673	WITHOUT_CLASSIFICATION	2.5930588327382794E-6	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9999968380308575	WITHOUT_CLASSIFICATION	3.1619691425417327E-6	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.999997920313673	WITHOUT_CLASSIFICATION	2.079686327110164E-6	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999999617634293	WITHOUT_CLASSIFICATION	3.823657066579145E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999999310078617	WITHOUT_CLASSIFICATION	6.899213832291777E-8	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999999577822918	WITHOUT_CLASSIFICATION	4.221770821454317E-8	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999997952964242	WITHOUT_CLASSIFICATION	2.047035757746001E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999999301006052	WITHOUT_CLASSIFICATION	6.989939484261763E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999996416645016	WITHOUT_CLASSIFICATION	3.583354983390499E-7	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.999999648582828	WITHOUT_CLASSIFICATION	3.5141717204532263E-7	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9999962586662735	WITHOUT_CLASSIFICATION	3.7413337266016007E-6	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999955003955454	WITHOUT_CLASSIFICATION	4.499604454649438E-6	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999999569783009	WITHOUT_CLASSIFICATION	4.302169910829094E-8	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999982132120924	WITHOUT_CLASSIFICATION	1.7867879075753758E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999999263961669	WITHOUT_CLASSIFICATION	7.360383316799282E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9999988898986955	WITHOUT_CLASSIFICATION	1.1101013045354176E-6	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999960491615294	WITHOUT_CLASSIFICATION	3.950838470544866E-6	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999862775968997	WITHOUT_CLASSIFICATION	1.3722403100313705E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9999997785001055	WITHOUT_CLASSIFICATION	2.2149989455306527E-7	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999974335215625	WITHOUT_CLASSIFICATION	2.5664784374819214E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998180358554077	WITHOUT_CLASSIFICATION	1.819641445922577E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999779687960539	WITHOUT_CLASSIFICATION	2.2031203946083003E-5	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9999791261848231	WITHOUT_CLASSIFICATION	2.0873815176925824E-5	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999984108591626	WITHOUT_CLASSIFICATION	1.5891408373013154E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999989743295212	WITHOUT_CLASSIFICATION	1.0256704787395392E-6	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999998940432945	WITHOUT_CLASSIFICATION	1.0595670549272911E-7	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999999880265128	WITHOUT_CLASSIFICATION	1.1973487190322939E-8	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.999997070208583	WITHOUT_CLASSIFICATION	2.9297914170137825E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999989743295212	WITHOUT_CLASSIFICATION	1.0256704787395392E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999990883974456	WITHOUT_CLASSIFICATION	9.116025543977226E-6	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999999263961669	WITHOUT_CLASSIFICATION	7.360383316799282E-8	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9999985565731614	WITHOUT_CLASSIFICATION	1.4434268385720712E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9999996519821754	WITHOUT_CLASSIFICATION	3.480178245678491E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999999969663911	WITHOUT_CLASSIFICATION	3.033608865094433E-9	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999999617634293	WITHOUT_CLASSIFICATION	3.823657066579145E-8	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999999310078617	WITHOUT_CLASSIFICATION	6.899213832291777E-8	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999999577822918	WITHOUT_CLASSIFICATION	4.221770821454317E-8	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999997501170899	WITHOUT_CLASSIFICATION	2.4988291021566876E-7	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.999995847465729	WITHOUT_CLASSIFICATION	4.152534271057768E-6	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999870409117457	WITHOUT_CLASSIFICATION	1.295908825417771E-5	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999992247957527	WITHOUT_CLASSIFICATION	7.752042474138765E-7	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999999985770234	WITHOUT_CLASSIFICATION	1.4229766370614877E-9	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999989743295212	WITHOUT_CLASSIFICATION	1.0256704787395392E-6	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999997952964242	WITHOUT_CLASSIFICATION	2.047035757746001E-7	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999999301006052	WITHOUT_CLASSIFICATION	6.989939484261763E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999978566640937	WITHOUT_CLASSIFICATION	2.143335906291603E-6	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989462113641	WITHOUT_CLASSIFICATION	1.0537886358471267E-6	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999998169543242	WITHOUT_CLASSIFICATION	1.8304567589308988E-7	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.999998633245331	WITHOUT_CLASSIFICATION	1.3667546688911268E-6	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9999995278290182	WITHOUT_CLASSIFICATION	4.7217098180279155E-7	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999999986297334	WITHOUT_CLASSIFICATION	1.3702664734018022E-9	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999968277464246	WITHOUT_CLASSIFICATION	3.1722535754048215E-6	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999997980555548	WITHOUT_CLASSIFICATION	2.0194444523719185E-7	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999996149100558	WITHOUT_CLASSIFICATION	3.850899441306319E-7	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999996053938406	WITHOUT_CLASSIFICATION	3.94606159378842E-7	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999994656005913	WITHOUT_CLASSIFICATION	5.343994087373643E-7	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999998002323289	WITHOUT_CLASSIFICATION	1.9976767115105386E-7	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972172133063	WITHOUT_CLASSIFICATION	2.782786693793026E-6	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999974467177958	WITHOUT_CLASSIFICATION	2.5532822041474955E-6	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999075784008	WITHOUT_CLASSIFICATION	9.242159916477555E-8	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999998002323289	WITHOUT_CLASSIFICATION	1.9976767115105386E-7	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999976424241905	WITHOUT_CLASSIFICATION	2.3575758095418126E-6	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999985770635943	WITHOUT_CLASSIFICATION	1.4229364057251803E-6	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979472639736	WITHOUT_CLASSIFICATION	2.0527360263449583E-6	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976880660102	WITHOUT_CLASSIFICATION	2.3119339898532E-6	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999999814109678	WITHOUT_CLASSIFICATION	1.8589032263039013E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.9998856099886433	WITHOUT_CLASSIFICATION	1.1439001135681278E-4	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998426261334	WITHOUT_CLASSIFICATION	1.5737386647525487E-7	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999633363093	WITHOUT_CLASSIFICATION	3.66636906954702E-7	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999992866158629	WITHOUT_CLASSIFICATION	7.13384137144648E-7	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999995573651377	WITHOUT_CLASSIFICATION	4.426348623768644E-7	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.99999997786967	WITHOUT_CLASSIFICATION	2.2130330066988626E-8	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999989859786649	WITHOUT_CLASSIFICATION	1.0140213351213014E-6	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999983399471168	WITHOUT_CLASSIFICATION	1.6600528831387144E-6	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999993431936824	WITHOUT_CLASSIFICATION	6.568063174870875E-7	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.999999845426246	WITHOUT_CLASSIFICATION	1.54573754024249E-7	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9999940570649033	WITHOUT_CLASSIFICATION	5.942935096644111E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224069685	WITHOUT_CLASSIFICATION	1.1917759303148885E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999992955093361	WITHOUT_CLASSIFICATION	7.044906638214541E-7	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999970416509691	WITHOUT_CLASSIFICATION	2.958349030816646E-6	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999999936569365	WITHOUT_CLASSIFICATION	6.343063560537069E-9	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999999685977246	WITHOUT_CLASSIFICATION	3.140227541601795E-8	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999992231119604	WITHOUT_CLASSIFICATION	7.768880395532247E-7	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999999440684041	WITHOUT_CLASSIFICATION	5.593159582609882E-8	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.999994297334091	WITHOUT_CLASSIFICATION	5.702665909078962E-6	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999906487218955	WITHOUT_CLASSIFICATION	9.351278104633358E-6	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999978869166251	WITHOUT_CLASSIFICATION	2.1130833748910424E-6	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999996827774351	WITHOUT_CLASSIFICATION	3.1722256489597E-7	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999999720173928	WITHOUT_CLASSIFICATION	2.7982607190689507E-8	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9995957435959288	WITHOUT_CLASSIFICATION	4.0425640407108803E-4	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999988992306487	WITHOUT_CLASSIFICATION	1.1007693514394369E-6	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999997543156695	WITHOUT_CLASSIFICATION	2.456843304818395E-7	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999994434971803	WITHOUT_CLASSIFICATION	5.565028197309322E-7	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999996835561871	WITHOUT_CLASSIFICATION	3.1644381291052654E-7	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999999729449353	WITHOUT_CLASSIFICATION	2.7055064739115047E-8	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999960221590106	WITHOUT_CLASSIFICATION	3.977840989384148E-6	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999999125221779	WITHOUT_CLASSIFICATION	8.747782202496252E-8	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999960461784284	WITHOUT_CLASSIFICATION	3.953821571583011E-6	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999999672517859	WITHOUT_CLASSIFICATION	3.274821408891193E-7	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998791092851	WITHOUT_CLASSIFICATION	1.2089071483364182E-7	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999998425789546	WITHOUT_CLASSIFICATION	1.574210453803792E-7	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999999672889722	WITHOUT_CLASSIFICATION	3.271102785886024E-8	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999928365342462	WITHOUT_CLASSIFICATION	7.163465753772625E-6	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.999999043456227	WITHOUT_CLASSIFICATION	9.565437730028104E-7	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999974754079374	WITHOUT_CLASSIFICATION	2.5245920625536747E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999967160548372	WITHOUT_CLASSIFICATION	3.2839451629017794E-6	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999998790200416	WITHOUT_CLASSIFICATION	1.2097995833032447E-7	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999998651845751	WITHOUT_CLASSIFICATION	1.348154250066393E-7	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999975043463984	WITHOUT_CLASSIFICATION	2.495653601503026E-6	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999996325610889	WITHOUT_CLASSIFICATION	3.6743891116551133E-7	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999999700000147	WITHOUT_CLASSIFICATION	2.999998531056237E-8	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.999996142617633	WITHOUT_CLASSIFICATION	3.8573823669327945E-6	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999967822936001	WITHOUT_CLASSIFICATION	3.2177063999165474E-6	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999998187602737	WITHOUT_CLASSIFICATION	1.8123972628963268E-7	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999985662288957	WITHOUT_CLASSIFICATION	1.4337711042828573E-6	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999998929131609	WITHOUT_CLASSIFICATION	1.0708683900733186E-7	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999979466788049	WITHOUT_CLASSIFICATION	2.0533211951912586E-6	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.99998382239435	WITHOUT_CLASSIFICATION	1.6177605649935512E-5	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999998997271365	WITHOUT_CLASSIFICATION	1.0027286347871246E-7	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9999998384056165	WITHOUT_CLASSIFICATION	1.6159438347176998E-7	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999845156679004	WITHOUT_CLASSIFICATION	1.5484332099691937E-5	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9999962412447324	WITHOUT_CLASSIFICATION	3.75875526765659E-6	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999986804414868	WITHOUT_CLASSIFICATION	1.3195585133078247E-6	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9999974755498935	WITHOUT_CLASSIFICATION	2.524450106628834E-6	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999994586192191	WITHOUT_CLASSIFICATION	5.41380780928159E-7	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999994600316131	WITHOUT_CLASSIFICATION	5.399683869047149E-7	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999997594457494	WITHOUT_CLASSIFICATION	2.40554250655026E-7	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999972482278843	WITHOUT_CLASSIFICATION	2.7517721157820734E-6	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.999999973063789	WITHOUT_CLASSIFICATION	2.6936211092743677E-8	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999999197314912	WITHOUT_CLASSIFICATION	8.026850886875846E-8	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999998077527236	WITHOUT_CLASSIFICATION	1.9224727644897467E-7	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999991068829449	WITHOUT_CLASSIFICATION	8.931170551369687E-7	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.999999938019751	WITHOUT_CLASSIFICATION	6.198024909939124E-8	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999999212481506	WITHOUT_CLASSIFICATION	7.875184943480078E-8	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9999990628525279	WITHOUT_CLASSIFICATION	9.371474720732705E-7	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999974589875581	WITHOUT_CLASSIFICATION	2.5410124419779402E-6	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.999998795940135	WITHOUT_CLASSIFICATION	1.2040598650470017E-6	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999944219373158	WITHOUT_CLASSIFICATION	5.57806268418854E-6	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999966844219061	WITHOUT_CLASSIFICATION	3.315578093785834E-6	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.999997009252416	WITHOUT_CLASSIFICATION	2.99074758403366E-6	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999963759740944	WITHOUT_CLASSIFICATION	3.624025905450285E-6	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999980620787537	WITHOUT_CLASSIFICATION	1.9379212462196995E-6	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999993818378896	WITHOUT_CLASSIFICATION	6.181621103624906E-7	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9999982238124543	WITHOUT_CLASSIFICATION	1.7761875456782486E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999987975374737	WITHOUT_CLASSIFICATION	1.2024625263419562E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999979098792876	WITHOUT_CLASSIFICATION	2.0901207124320676E-6	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999997536808208	WITHOUT_CLASSIFICATION	2.463191791514151E-7	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9999878740232426	WITHOUT_CLASSIFICATION	1.2125976757501122E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9999910236340358	WITHOUT_CLASSIFICATION	8.976365964310353E-6	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999994230045711	WITHOUT_CLASSIFICATION	5.769954289457984E-7	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999853241633364	WITHOUT_CLASSIFICATION	1.467583666361741E-5	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999947917677391	WITHOUT_CLASSIFICATION	5.208232260895836E-6	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999992174107161	WITHOUT_CLASSIFICATION	7.825892838171296E-7	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999995314279142	WITHOUT_CLASSIFICATION	4.6857208577508286E-7	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9999898527834309	WITHOUT_CLASSIFICATION	1.014721656903938E-5	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999996359787025	WITHOUT_CLASSIFICATION	3.6402129748013024E-7	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999882897877103	WITHOUT_CLASSIFICATION	1.1710212289686553E-5	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999982781894656	WITHOUT_CLASSIFICATION	1.7218105343426956E-6	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999972949124072	WITHOUT_CLASSIFICATION	2.7050875927618016E-6	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9999770651104966	WITHOUT_CLASSIFICATION	2.2934889503394763E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999959028502458	WITHOUT_CLASSIFICATION	4.097149754306688E-6	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999985732654497	WITHOUT_CLASSIFICATION	1.4267345502818009E-6	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.999986421080864	WITHOUT_CLASSIFICATION	1.357891913598461E-5	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.999983603824181	WITHOUT_CLASSIFICATION	1.6396175818956176E-5	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9999926365898298	WITHOUT_CLASSIFICATION	7.363410170173653E-6	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999919404120842	WITHOUT_CLASSIFICATION	8.059587915904914E-6	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9999864076205355	WITHOUT_CLASSIFICATION	1.3592379464591474E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999973135850356	WITHOUT_CLASSIFICATION	2.686414964283002E-6	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999999900748268	WITHOUT_CLASSIFICATION	9.92517317222402E-9	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999944629293994	WITHOUT_CLASSIFICATION	5.537070600616792E-6	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.9999949715180012	WITHOUT_CLASSIFICATION	5.028481998827141E-6	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999978694774043	WITHOUT_CLASSIFICATION	2.1305225957670392E-6	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999944629293994	WITHOUT_CLASSIFICATION	5.537070600616792E-6	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999999897402743	WITHOUT_CLASSIFICATION	1.0259725726002326E-8	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999998180169305	WITHOUT_CLASSIFICATION	1.8198306957501687E-7	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999880860293525	WITHOUT_CLASSIFICATION	1.19139706475334E-5	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9999931776756608	WITHOUT_CLASSIFICATION	6.822324339211849E-6	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.9999991194364859	WITHOUT_CLASSIFICATION	8.805635142085126E-7	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999999147449119	WITHOUT_CLASSIFICATION	8.525508812352125E-8	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.999944741975715	WITHOUT_CLASSIFICATION	5.5258024285000374E-5	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999997822005787	WITHOUT_CLASSIFICATION	2.1779942128185283E-7	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999999410744899	WITHOUT_CLASSIFICATION	5.8925510066506615E-8	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999863525241339	WITHOUT_CLASSIFICATION	1.3647475866127292E-5	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999993693888477	WITHOUT_CLASSIFICATION	6.306111522827467E-7	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999999809446031	WITHOUT_CLASSIFICATION	1.9055396949965266E-8	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999994419643765	WITHOUT_CLASSIFICATION	5.580356234182739E-7	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999999478503748	WITHOUT_CLASSIFICATION	5.214962527496747E-8	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999956320942	WITHOUT_CLASSIFICATION	4.367905845260607E-9	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9999994970905135	WITHOUT_CLASSIFICATION	5.029094865152857E-7	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999886096446967	WITHOUT_CLASSIFICATION	1.1390355303254987E-5	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999886096446967	WITHOUT_CLASSIFICATION	1.1390355303254987E-5	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999922673454	WITHOUT_CLASSIFICATION	7.732654672083759E-9	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9998492001549768	WITHOUT_CLASSIFICATION	1.5079984502327086E-4	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9999170939598875	WITHOUT_CLASSIFICATION	8.290604011243958E-5	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.9999816568373754	WITHOUT_CLASSIFICATION	1.834316262459832E-5	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999964622058812	WITHOUT_CLASSIFICATION	3.537794118804557E-6	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9999527946426657	WITHOUT_CLASSIFICATION	4.720535733426203E-5	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999681664780015	WITHOUT_CLASSIFICATION	3.183352199853323E-5	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999997638936322	WITHOUT_CLASSIFICATION	2.3610636791179602E-7	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999996887286319	WITHOUT_CLASSIFICATION	3.1127136816090174E-7	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999993959845492	WITHOUT_CLASSIFICATION	6.040154507469E-7	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9999991488831014	WITHOUT_CLASSIFICATION	8.511168985655371E-7	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999943050540547	WITHOUT_CLASSIFICATION	5.694945945249619E-6	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9999939134416445	WITHOUT_CLASSIFICATION	6.086558355535935E-6	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9999996588202832	WITHOUT_CLASSIFICATION	3.411797167095249E-7	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999990886279548	WITHOUT_CLASSIFICATION	9.113720452726954E-7	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.999994297334091	WITHOUT_CLASSIFICATION	5.702665909078962E-6	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999996812213275	WITHOUT_CLASSIFICATION	3.18778672407399E-7	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.999996982321581	WITHOUT_CLASSIFICATION	3.017678419080144E-6	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9999663581536108	WITHOUT_CLASSIFICATION	3.364184638925224E-5	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9999678526893451	WITHOUT_CLASSIFICATION	3.214731065498555E-5	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999995883741775	WITHOUT_CLASSIFICATION	4.116258224468789E-7	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999940470743359	WITHOUT_CLASSIFICATION	5.952925664077971E-6	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999993557142631	WITHOUT_CLASSIFICATION	6.442857369525899E-7	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999979037775331	WITHOUT_CLASSIFICATION	2.096222466945303E-6	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999998618306766	WITHOUT_CLASSIFICATION	1.381693234555632E-7	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999999041122113	WITHOUT_CLASSIFICATION	9.588778862656597E-8	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999999469425557	WITHOUT_CLASSIFICATION	5.30574444468838E-8	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.999999928171203	WITHOUT_CLASSIFICATION	7.18287970819362E-8	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999999256342443	WITHOUT_CLASSIFICATION	7.436575561904495E-8	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999912656998032	WITHOUT_CLASSIFICATION	8.73430019679973E-6	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999877599817695	WITHOUT_CLASSIFICATION	1.2240018230498096E-5	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999976729690654	WITHOUT_CLASSIFICATION	2.3270309345462106E-6	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9999496942795156	WITHOUT_CLASSIFICATION	5.0305720484382286E-5	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999945047910694	WITHOUT_CLASSIFICATION	5.4952089305797605E-6	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999807162667904	WITHOUT_CLASSIFICATION	1.928373320954049E-5	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999971747208126	WITHOUT_CLASSIFICATION	2.8252791873416582E-6	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9999910082527156	WITHOUT_CLASSIFICATION	8.991747284344264E-6	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999919045039516	WITHOUT_CLASSIFICATION	8.095496048398127E-6	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999996719026326	WITHOUT_CLASSIFICATION	3.2809736749808053E-7	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999992962843759	WITHOUT_CLASSIFICATION	7.037156239877932E-7	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999984233011755	WITHOUT_CLASSIFICATION	1.5766988244779708E-6	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9999952979674074	WITHOUT_CLASSIFICATION	4.702032592606395E-6	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999979204327113	WITHOUT_CLASSIFICATION	2.0795672886357633E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999998124718796	WITHOUT_CLASSIFICATION	1.8752812048698825E-7	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999985520396497	WITHOUT_CLASSIFICATION	1.4479603502712362E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999999782545383	WITHOUT_CLASSIFICATION	2.1745461622171463E-8	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999978409545772	WITHOUT_CLASSIFICATION	2.1590454227893113E-6	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997595600381	WITHOUT_CLASSIFICATION	2.4043996194757345E-7	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989103640562	WITHOUT_CLASSIFICATION	1.0896359438630778E-6	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999999999343234	WITHOUT_CLASSIFICATION	6.567652130957967E-11	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.999998482899777	WITHOUT_CLASSIFICATION	1.5171002229640927E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224069685	WITHOUT_CLASSIFICATION	1.1917759303148885E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224069685	WITHOUT_CLASSIFICATION	1.1917759303148885E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999969870463353	WITHOUT_CLASSIFICATION	3.0129536646350014E-6	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9999999971752069	WITHOUT_CLASSIFICATION	2.8247930387956408E-9	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999993708872246	WITHOUT_CLASSIFICATION	6.291127754889428E-7	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999955046824186	WITHOUT_CLASSIFICATION	4.495317581363403E-6	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999993708872246	WITHOUT_CLASSIFICATION	6.291127754889428E-7	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999998357582114	WITHOUT_CLASSIFICATION	1.6424178866496308E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999996570974553	WITHOUT_CLASSIFICATION	3.4290254466298216E-7	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9999997664934636	WITHOUT_CLASSIFICATION	2.3350653642622853E-7	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999999537343464	WITHOUT_CLASSIFICATION	4.626565363064374E-8	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999976753279656	WITHOUT_CLASSIFICATION	2.3246720344703785E-6	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999978878776213	WITHOUT_CLASSIFICATION	2.1121223787302374E-6	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999998513179511	WITHOUT_CLASSIFICATION	1.4868204895864068E-7	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999986538170965	WITHOUT_CLASSIFICATION	1.346182903407999E-6	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999998593757429	WITHOUT_CLASSIFICATION	1.406242571039083E-7	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9999932435673095	WITHOUT_CLASSIFICATION	6.756432690579858E-6	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999984049796428	WITHOUT_CLASSIFICATION	1.59502035726699E-6	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.999999946440234	WITHOUT_CLASSIFICATION	5.355976603577643E-8	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999928071866808	WITHOUT_CLASSIFICATION	7.192813319131304E-6	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9999999860837204	WITHOUT_CLASSIFICATION	1.3916279506470974E-8	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.99998874868518	WITHOUT_CLASSIFICATION	1.1251314820156973E-5	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999997399415196	WITHOUT_CLASSIFICATION	2.600584804080201E-7	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999745163268501	WITHOUT_CLASSIFICATION	2.548367314997331E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999745163268501	WITHOUT_CLASSIFICATION	2.548367314997331E-5	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999887589863184	WITHOUT_CLASSIFICATION	1.1241013681606969E-5	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999999555080037	WITHOUT_CLASSIFICATION	4.44919962847735E-8	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999999850288346	WITHOUT_CLASSIFICATION	1.4971165450760317E-8	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.999999985236123	WITHOUT_CLASSIFICATION	1.4763877051031379E-8	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999999845061707	WITHOUT_CLASSIFICATION	1.54938293529859E-8	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999999333554664	WITHOUT_CLASSIFICATION	6.664453355354373E-8	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999999493683656	WITHOUT_CLASSIFICATION	5.063163446762725E-8	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999980042935945	WITHOUT_CLASSIFICATION	1.9957064055205907E-6	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999996169566274	WITHOUT_CLASSIFICATION	3.8304337263058784E-7	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999988598532368	WITHOUT_CLASSIFICATION	1.1401467632096157E-6	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999993345117644	WITHOUT_CLASSIFICATION	6.654882356895889E-7	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999994008906297	WITHOUT_CLASSIFICATION	5.991093703164224E-7	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999999830761301	WITHOUT_CLASSIFICATION	1.6923869818596623E-8	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.999999881312235	WITHOUT_CLASSIFICATION	1.1868776493313611E-7	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999967537371564	WITHOUT_CLASSIFICATION	3.24626284364795E-6	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999999384699975	WITHOUT_CLASSIFICATION	6.153000253766638E-8	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999988223226941	WITHOUT_CLASSIFICATION	1.1776773059444861E-6	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9999902847879985	WITHOUT_CLASSIFICATION	9.715212001484418E-6	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.9999934337425682	WITHOUT_CLASSIFICATION	6.5662574317556E-6	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999999771426571	WITHOUT_CLASSIFICATION	2.2857342913144253E-8	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999997557839777	WITHOUT_CLASSIFICATION	2.4421602225294444E-7	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999997605295948	WITHOUT_CLASSIFICATION	2.3947040516302457E-7	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999999714679487	WITHOUT_CLASSIFICATION	2.8532051358928908E-8	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999998726176351	WITHOUT_CLASSIFICATION	1.2738236491029248E-7	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9999890429947118	WITHOUT_CLASSIFICATION	1.095700528814776E-5	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999996382276692	WITHOUT_CLASSIFICATION	3.617723306864155E-7	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999983678737698	WITHOUT_CLASSIFICATION	1.6321262300841325E-6	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9999985254935745	WITHOUT_CLASSIFICATION	1.4745064255061743E-6	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999914059072925	WITHOUT_CLASSIFICATION	8.594092707444251E-6	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999972516772021	WITHOUT_CLASSIFICATION	2.7483227979193272E-6	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999465263756042	WITHOUT_CLASSIFICATION	5.347362439574972E-5	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999983839232717	WITHOUT_CLASSIFICATION	1.6160767282791077E-6	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999977358789878	WITHOUT_CLASSIFICATION	2.2641210121317768E-6	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999898129632991	WITHOUT_CLASSIFICATION	1.0187036700861403E-5	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999936509440756	WITHOUT_CLASSIFICATION	6.349055924512811E-6	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999996829040414	WITHOUT_CLASSIFICATION	3.170959585375013E-7	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999994210947786	WITHOUT_CLASSIFICATION	5.789052214354788E-7	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999977124716266	WITHOUT_CLASSIFICATION	2.2875283733515102E-6	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999984668887021	WITHOUT_CLASSIFICATION	1.533111297890198E-6	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999994755132291	WITHOUT_CLASSIFICATION	5.244867708307932E-7	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999996773965831	WITHOUT_CLASSIFICATION	3.2260341682307197E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997579201366	WITHOUT_CLASSIFICATION	2.420798633998342E-6	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.9999808427630289	WITHOUT_CLASSIFICATION	1.9157236971116876E-5	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9999971706105506	WITHOUT_CLASSIFICATION	2.8293894493272136E-6	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999999831170419	WITHOUT_CLASSIFICATION	1.6882958216246376E-8	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999999963855026	WITHOUT_CLASSIFICATION	3.6144973256517437E-9	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9999704942886763	WITHOUT_CLASSIFICATION	2.9505711323647092E-5	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999999511639873	WITHOUT_CLASSIFICATION	4.883601262582261E-8	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999997671832219	WITHOUT_CLASSIFICATION	2.3281677806759342E-7	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999991845003594	WITHOUT_CLASSIFICATION	8.154996405522614E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999951111827794	WITHOUT_CLASSIFICATION	4.888817220580102E-6	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999997979540215	WITHOUT_CLASSIFICATION	2.020459785606974E-7	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999999936945336	WITHOUT_CLASSIFICATION	6.305466434302616E-9	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999993094779969	WITHOUT_CLASSIFICATION	6.905220032025611E-7	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.999994027083009	WITHOUT_CLASSIFICATION	5.972916991022072E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999990883974456	WITHOUT_CLASSIFICATION	9.116025543977226E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999990883974456	WITHOUT_CLASSIFICATION	9.116025543977226E-6	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999992827044024	WITHOUT_CLASSIFICATION	7.172955975290312E-7	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999893836123798	WITHOUT_CLASSIFICATION	1.0616387620137476E-5	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999946925519869	WITHOUT_CLASSIFICATION	5.307448013106349E-6	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999990594638389	WITHOUT_CLASSIFICATION	9.405361611052217E-7	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999999112022677	WITHOUT_CLASSIFICATION	8.879773218305555E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999999311159067	WITHOUT_CLASSIFICATION	6.888409329557244E-8	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999995708789866	WITHOUT_CLASSIFICATION	4.291210133605144E-7	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999999340705229	WITHOUT_CLASSIFICATION	6.592947718358336E-8	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999898676070668	WITHOUT_CLASSIFICATION	1.0132392933197109E-5	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999992870439437	WITHOUT_CLASSIFICATION	7.129560562643204E-7	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999913460561671	WITHOUT_CLASSIFICATION	8.653943832882955E-6	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9999873723855299	WITHOUT_CLASSIFICATION	1.2627614469982688E-5	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9999669746877266	WITHOUT_CLASSIFICATION	3.3025312273420524E-5	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999979396544187	WITHOUT_CLASSIFICATION	2.0603455812910728E-6	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999998819085485	WITHOUT_CLASSIFICATION	1.180914514601973E-7	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999999208392577	WITHOUT_CLASSIFICATION	7.916074226227378E-8	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999999809900099	WITHOUT_CLASSIFICATION	1.9009990111342983E-8	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.9999744686142126	WITHOUT_CLASSIFICATION	2.5531385787375414E-5	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999901809736762	WITHOUT_CLASSIFICATION	9.819026323858163E-6	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999980358062499	WITHOUT_CLASSIFICATION	1.9641937500578237E-6	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999999352312332	WITHOUT_CLASSIFICATION	6.47687667094214E-8	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999982927196578	WITHOUT_CLASSIFICATION	1.707280342225074E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999468347999475	WITHOUT_CLASSIFICATION	5.316520005242232E-5	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999998235422907	WITHOUT_CLASSIFICATION	1.7645770931359172E-7	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9999998905594006	WITHOUT_CLASSIFICATION	1.0944059932488984E-7	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999999676623713	WITHOUT_CLASSIFICATION	3.233762869747883E-8	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9997193206329087	WITHOUT_CLASSIFICATION	2.806793670913023E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999267748080627	WITHOUT_CLASSIFICATION	7.322519193725074E-5	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999995826033525	WITHOUT_CLASSIFICATION	4.173966475841471E-7	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999468347999475	WITHOUT_CLASSIFICATION	5.316520005242232E-5	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.999999738518124	WITHOUT_CLASSIFICATION	2.614818760620028E-7	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999993969096392	WITHOUT_CLASSIFICATION	6.030903607093445E-7	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.999873972278993	WITHOUT_CLASSIFICATION	1.2602772100706535E-4	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999935671815564	WITHOUT_CLASSIFICATION	6.432818443621022E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999998335232454	WITHOUT_CLASSIFICATION	1.6647675456615422E-7	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999997862619668	WITHOUT_CLASSIFICATION	2.1373803309689503E-7	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999999865642972	WITHOUT_CLASSIFICATION	1.3435702871499176E-8	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999995040326285	WITHOUT_CLASSIFICATION	4.959673714373157E-7	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999991759452028	WITHOUT_CLASSIFICATION	8.24054797149905E-7	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999935671815564	WITHOUT_CLASSIFICATION	6.432818443621022E-6	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999983984317924	WITHOUT_CLASSIFICATION	1.6015682075691306E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999993176239443	WITHOUT_CLASSIFICATION	6.823760556039821E-7	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999984475240726	WITHOUT_CLASSIFICATION	1.5524759273564084E-6	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999610211592531	WITHOUT_CLASSIFICATION	3.8978840746796454E-5	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9999998133124294	WITHOUT_CLASSIFICATION	1.866875706254402E-7	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999993345117644	WITHOUT_CLASSIFICATION	6.654882356895889E-7	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999997038233615	WITHOUT_CLASSIFICATION	2.9617663858329037E-7	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999997052954607	WITHOUT_CLASSIFICATION	2.9470453932272677E-7	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999930931733514	WITHOUT_CLASSIFICATION	6.906826648622439E-6	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9999982838858634	WITHOUT_CLASSIFICATION	1.716114136624095E-6	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999701607486096	WITHOUT_CLASSIFICATION	2.9839251390398038E-5	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999990862947068	WITHOUT_CLASSIFICATION	9.137052931486004E-7	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999914536360935	WITHOUT_CLASSIFICATION	8.546363906429754E-6	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999994382960852	WITHOUT_CLASSIFICATION	5.617039148704833E-7	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999952532322248	WITHOUT_CLASSIFICATION	4.746767775179592E-6	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999990599953466	WITHOUT_CLASSIFICATION	9.400046533015842E-7	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999617143378359	WITHOUT_CLASSIFICATION	3.8285662164054494E-5	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999999493905087	WITHOUT_CLASSIFICATION	5.06094913397067E-8	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999999903066078	WITHOUT_CLASSIFICATION	9.693392260406223E-9	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999964945986382	WITHOUT_CLASSIFICATION	3.505401361807936E-6	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999998560730832	WITHOUT_CLASSIFICATION	1.4392691693305563E-7	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999993888426	WITHOUT_CLASSIFICATION	6.111573999065648E-7	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.999998878051008	WITHOUT_CLASSIFICATION	1.1219489919931111E-6	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999998057305082	WITHOUT_CLASSIFICATION	1.942694918982176E-7	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999997971605874	WITHOUT_CLASSIFICATION	2.0283941259939166E-7	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9999901584941813	WITHOUT_CLASSIFICATION	9.841505818795102E-6	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9999947842824122	WITHOUT_CLASSIFICATION	5.215717587826915E-6	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.999999528457163	WITHOUT_CLASSIFICATION	4.715428370398527E-7	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999996050585362	WITHOUT_CLASSIFICATION	3.949414638086772E-7	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999999470671632	WITHOUT_CLASSIFICATION	5.293283682796941E-8	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.999994209882703	WITHOUT_CLASSIFICATION	5.790117296937475E-6	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9999889891618561	WITHOUT_CLASSIFICATION	1.1010838143898904E-5	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999997316537297	WITHOUT_CLASSIFICATION	2.6834627032694663E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999743605555	WITHOUT_CLASSIFICATION	2.5639444502072283E-7	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999994631029623	WITHOUT_CLASSIFICATION	5.36897037700904E-6	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9999999989742059	WITHOUT_CLASSIFICATION	1.0257940686307886E-9	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999993129917719	WITHOUT_CLASSIFICATION	6.870082280900545E-7	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999979826433963	WITHOUT_CLASSIFICATION	2.017356603632516E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122041	WITHOUT_CLASSIFICATION	4.200877958646482E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122041	WITHOUT_CLASSIFICATION	4.200877958646482E-7	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999988166029904	WITHOUT_CLASSIFICATION	1.1833970095839774E-6	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999994627438265	WITHOUT_CLASSIFICATION	5.372561734960808E-7	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999985594389695	WITHOUT_CLASSIFICATION	1.4405610304630864E-6	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999999416108603	WITHOUT_CLASSIFICATION	5.8389139707211414E-8	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999983928679725	WITHOUT_CLASSIFICATION	1.6071320274964702E-6	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.999999749799235	WITHOUT_CLASSIFICATION	2.5020076496830204E-7	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999983236438775	WITHOUT_CLASSIFICATION	1.676356122393498E-6	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.99999947629354	WITHOUT_CLASSIFICATION	5.237064600079976E-7	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999990310332448	WITHOUT_CLASSIFICATION	9.68966755148926E-7	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999999677871433	WITHOUT_CLASSIFICATION	3.2212856749043874E-8	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999996218724131	WITHOUT_CLASSIFICATION	3.7812758689965025E-7	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999999338211069	WITHOUT_CLASSIFICATION	6.617889317917021E-8	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999999354902697	WITHOUT_CLASSIFICATION	6.450973030394662E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122041	WITHOUT_CLASSIFICATION	4.200877958646482E-7	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999963477832773	WITHOUT_CLASSIFICATION	3.6522167226591914E-6	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999967615452211	WITHOUT_CLASSIFICATION	3.2384547788742367E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999996081942167	WITHOUT_CLASSIFICATION	3.918057833227659E-7	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999989132635145	WITHOUT_CLASSIFICATION	1.0867364854665657E-6	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999999245851957	WITHOUT_CLASSIFICATION	7.54148043307813E-8	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9999943016856113	WITHOUT_CLASSIFICATION	5.698314388710588E-6	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999999145722712	WITHOUT_CLASSIFICATION	8.542772878574291E-8	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999999083952463	WITHOUT_CLASSIFICATION	9.160475362825135E-8	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999999928309645	WITHOUT_CLASSIFICATION	7.169035513062347E-9	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999993464582623	WITHOUT_CLASSIFICATION	6.53541737742092E-7	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.999999884397876	WITHOUT_CLASSIFICATION	1.1560212403564978E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999743605555	WITHOUT_CLASSIFICATION	2.5639444502072283E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122041	WITHOUT_CLASSIFICATION	4.200877958646482E-7	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999977684094205	WITHOUT_CLASSIFICATION	2.231590579461382E-6	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999997387021442	WITHOUT_CLASSIFICATION	2.6129785578569727E-7	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999978131710808	WITHOUT_CLASSIFICATION	2.1868289191377E-6	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999960147070008	WITHOUT_CLASSIFICATION	3.9852929991868905E-6	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999997234162461	WITHOUT_CLASSIFICATION	2.7658375383558536E-7	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.999999746526926	WITHOUT_CLASSIFICATION	2.534730739828923E-7	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999986471142846	WITHOUT_CLASSIFICATION	1.352885715402688E-5	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999997242071521	WITHOUT_CLASSIFICATION	2.757928478162386E-7	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999994627093499	WITHOUT_CLASSIFICATION	5.372906500573373E-7	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999998873350878	WITHOUT_CLASSIFICATION	1.1266491224835801E-7	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999996117538212	WITHOUT_CLASSIFICATION	3.882461788372539E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998450466049889	WITHOUT_CLASSIFICATION	1.5495339501124948E-4	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999998433628832	WITHOUT_CLASSIFICATION	1.566371168667055E-7	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999998866808457	WITHOUT_CLASSIFICATION	1.1331915417497723E-7	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999998357582114	WITHOUT_CLASSIFICATION	1.6424178866496308E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.999999916622151	WITHOUT_CLASSIFICATION	8.33778489720066E-8	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999999945622194	WITHOUT_CLASSIFICATION	5.437780647794076E-9	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999998476891072	WITHOUT_CLASSIFICATION	1.5231089283207953E-7	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999987806912587	WITHOUT_CLASSIFICATION	1.2193087413170929E-6	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999997736387901	WITHOUT_CLASSIFICATION	2.2636120999389513E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999841282517997	WITHOUT_CLASSIFICATION	1.5871748200303807E-5	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999841282517997	WITHOUT_CLASSIFICATION	1.5871748200303807E-5	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999999052148242	WITHOUT_CLASSIFICATION	9.478517580485845E-8	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9999999926021613	WITHOUT_CLASSIFICATION	7.397838664497064E-9	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9999998884920314	WITHOUT_CLASSIFICATION	1.115079686015079E-7	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9999999709822565	WITHOUT_CLASSIFICATION	2.9017743576354437E-8	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999984678181291	WITHOUT_CLASSIFICATION	1.5321818708746287E-6	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999902884545168	WITHOUT_CLASSIFICATION	9.711545483200285E-6	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999949406901549	WITHOUT_CLASSIFICATION	5.059309845052087E-6	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999998540192335	WITHOUT_CLASSIFICATION	1.4598076650890643E-7	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999998540192335	WITHOUT_CLASSIFICATION	1.4598076650890643E-7	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999867855529105	WITHOUT_CLASSIFICATION	1.3214447089398165E-5	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999964638035373	WITHOUT_CLASSIFICATION	3.5361964625710952E-6	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999989303476385	WITHOUT_CLASSIFICATION	1.0696523615228438E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999997734774832	WITHOUT_CLASSIFICATION	2.265225167978507E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999997734774832	WITHOUT_CLASSIFICATION	2.265225167978507E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.999997734774832	WITHOUT_CLASSIFICATION	2.265225167978507E-6	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9999999565192581	WITHOUT_CLASSIFICATION	4.34807419862535E-8	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999993769559021	WITHOUT_CLASSIFICATION	6.230440979545721E-7	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9999974701241129	WITHOUT_CLASSIFICATION	2.5298758871333806E-6	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9999999366069753	WITHOUT_CLASSIFICATION	6.339302482689286E-8	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999999811473829	WITHOUT_CLASSIFICATION	1.8852617203332288E-8	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122041	WITHOUT_CLASSIFICATION	4.200877958646482E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122041	WITHOUT_CLASSIFICATION	4.200877958646482E-7	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.999999998733164	WITHOUT_CLASSIFICATION	1.2668360175567364E-9	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999999922676113	WITHOUT_CLASSIFICATION	7.732388725373417E-9	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999999396472533	WITHOUT_CLASSIFICATION	6.035274670179668E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999969178847288	WITHOUT_CLASSIFICATION	3.082115271186704E-6	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999990799611232	WITHOUT_CLASSIFICATION	9.200388767058187E-7	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999973176444393	WITHOUT_CLASSIFICATION	2.6823555606992148E-6	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999977873884118	WITHOUT_CLASSIFICATION	2.212611588203689E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999999844641471	WITHOUT_CLASSIFICATION	1.553585295784565E-8	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999985687622016	WITHOUT_CLASSIFICATION	1.4312377983876563E-6	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999995665025632	WITHOUT_CLASSIFICATION	4.3349743680480436E-7	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999574140654657	WITHOUT_CLASSIFICATION	4.258593453440218E-5	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999979999969975	WITHOUT_CLASSIFICATION	2.000003002491037E-6	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999979999969975	WITHOUT_CLASSIFICATION	2.0000030024910347E-6	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999986436958064	WITHOUT_CLASSIFICATION	1.3563041936828306E-6	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999986436958064	WITHOUT_CLASSIFICATION	1.3563041936828306E-6	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999986905325109	WITHOUT_CLASSIFICATION	1.309467489108946E-6	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999979917460495	WITHOUT_CLASSIFICATION	2.0082539504533625E-6	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999979917460495	WITHOUT_CLASSIFICATION	2.0082539504533625E-6	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999979035763131	WITHOUT_CLASSIFICATION	2.096423686745912E-6	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999968570169696	WITHOUT_CLASSIFICATION	3.142983030388342E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999997454075521	WITHOUT_CLASSIFICATION	2.5459244788700495E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999841282517997	WITHOUT_CLASSIFICATION	1.5871748200303807E-5	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999999089303905	WITHOUT_CLASSIFICATION	9.106960950568679E-8	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999968570169696	WITHOUT_CLASSIFICATION	3.142983030388342E-6	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.999996584096217	WITHOUT_CLASSIFICATION	3.4159037830245416E-6	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999990377915756	WITHOUT_CLASSIFICATION	9.622084244546207E-7	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.999998493911412	WITHOUT_CLASSIFICATION	1.506088588009511E-6	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999985360650242	WITHOUT_CLASSIFICATION	1.4639349758557127E-6	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999999944682302	WITHOUT_CLASSIFICATION	5.531769804861525E-9	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999967216888227	WITHOUT_CLASSIFICATION	3.278311177269064E-6	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999996145891089	WITHOUT_CLASSIFICATION	3.854108910060283E-7	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9999999454268739	WITHOUT_CLASSIFICATION	5.457312610233515E-8	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9999977840259509	WITHOUT_CLASSIFICATION	2.215974049185188E-6	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9999987641082455	WITHOUT_CLASSIFICATION	1.2358917544638764E-6	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999998914049959	WITHOUT_CLASSIFICATION	1.085950041206646E-7	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9999963835677129	WITHOUT_CLASSIFICATION	3.61643228704739E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999980556132115	WITHOUT_CLASSIFICATION	1.944386788459111E-6	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.99999899394084	WITHOUT_CLASSIFICATION	1.006059160002938E-6	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9999999955943225	WITHOUT_CLASSIFICATION	4.405677451953407E-9	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.999999683870369	WITHOUT_CLASSIFICATION	3.161296309199109E-7	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999998324968641	WITHOUT_CLASSIFICATION	1.6750313592537301E-7	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999997537937663	WITHOUT_CLASSIFICATION	2.4620623378772044E-7	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999997537937663	WITHOUT_CLASSIFICATION	2.4620623378772044E-7	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999993303738983	WITHOUT_CLASSIFICATION	6.696261015951544E-7	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999993384932281	WITHOUT_CLASSIFICATION	6.615067718246059E-7	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999997608727945	WITHOUT_CLASSIFICATION	2.3912720547625446E-7	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999982704562376	WITHOUT_CLASSIFICATION	1.7295437624836216E-6	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999990709328945	WITHOUT_CLASSIFICATION	9.290671056267283E-7	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999999503465321	WITHOUT_CLASSIFICATION	4.965346788547245E-8	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9999998827541907	WITHOUT_CLASSIFICATION	1.172458093152305E-7	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999993830455828	WITHOUT_CLASSIFICATION	6.169544172062768E-7	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999980857861027	WITHOUT_CLASSIFICATION	1.914213897258986E-6	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999998469414342	WITHOUT_CLASSIFICATION	1.5305856588673765E-7	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999997377036327	WITHOUT_CLASSIFICATION	2.622963672737086E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998450466049889	WITHOUT_CLASSIFICATION	1.5495339501124948E-4	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999998441241628	WITHOUT_CLASSIFICATION	1.5587583714459837E-7	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999962783453548	WITHOUT_CLASSIFICATION	3.721654645293273E-6	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999996522199327	WITHOUT_CLASSIFICATION	3.477800673528424E-7	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.999997533614905	WITHOUT_CLASSIFICATION	2.4663850949381637E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999440663596	WITHOUT_CLASSIFICATION	5.593364033499952E-8	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999440663596	WITHOUT_CLASSIFICATION	5.593364033499952E-8	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9999990947772054	WITHOUT_CLASSIFICATION	9.05222794640454E-7	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9999998468352213	WITHOUT_CLASSIFICATION	1.5316477866113875E-7	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9999983936676636	WITHOUT_CLASSIFICATION	1.6063323364186428E-6	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999969096624497	WITHOUT_CLASSIFICATION	3.0903375502566073E-6	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999943687379588	WITHOUT_CLASSIFICATION	5.631262041218021E-6	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999983422440457	WITHOUT_CLASSIFICATION	1.6577559542610754E-6	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999989712828585	WITHOUT_CLASSIFICATION	1.0287171414968585E-6	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.999999572718255	WITHOUT_CLASSIFICATION	4.272817449720449E-7	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999990913608423	WITHOUT_CLASSIFICATION	9.086391576376159E-7	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999999315365992	WITHOUT_CLASSIFICATION	6.846340082090949E-8	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999992483332292	WITHOUT_CLASSIFICATION	7.516667707614639E-7	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.999999572718255	WITHOUT_CLASSIFICATION	4.272817449720449E-7	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.999999923668102	WITHOUT_CLASSIFICATION	7.633189800203169E-8	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999949343955042	WITHOUT_CLASSIFICATION	5.065604495685289E-6	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999999824781939	WITHOUT_CLASSIFICATION	1.752180611067363E-8	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.999999500178493	WITHOUT_CLASSIFICATION	4.998215069497204E-7	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999999415605013	WITHOUT_CLASSIFICATION	5.843949866189244E-8	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999997669084782	WITHOUT_CLASSIFICATION	2.3309152163700704E-7	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999938900268884	WITHOUT_CLASSIFICATION	6.109973111601596E-6	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999990647610519	WITHOUT_CLASSIFICATION	9.352389481784076E-7	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999989872339252	WITHOUT_CLASSIFICATION	1.0127660747377937E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999939429180692	WITHOUT_CLASSIFICATION	6.057081930870947E-6	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999965373928246	WITHOUT_CLASSIFICATION	3.4626071753199315E-6	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999998851526902	WITHOUT_CLASSIFICATION	1.1484730974738283E-7	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999851953961668	WITHOUT_CLASSIFICATION	1.4804603833158934E-5	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999999485322014	WITHOUT_CLASSIFICATION	5.146779855146458E-8	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999988074388965	WITHOUT_CLASSIFICATION	1.1925611035024803E-6	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999993789379767	WITHOUT_CLASSIFICATION	6.210620233287699E-7	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999994508034041	WITHOUT_CLASSIFICATION	5.491965959380549E-7	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9999936619811877	WITHOUT_CLASSIFICATION	6.33801881235185E-6	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9999923106428801	WITHOUT_CLASSIFICATION	7.689357119967782E-6	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999960463407074	WITHOUT_CLASSIFICATION	3.953659292579875E-6	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9999998304956013	WITHOUT_CLASSIFICATION	1.695043987890859E-7	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9999998034175733	WITHOUT_CLASSIFICATION	1.965824266648891E-7	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9999992831413261	WITHOUT_CLASSIFICATION	7.168586739112874E-7	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.999993413058836	WITHOUT_CLASSIFICATION	6.586941163954976E-6	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999983185479867	WITHOUT_CLASSIFICATION	1.6814520133447155E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999943488815735	WITHOUT_CLASSIFICATION	5.6511184264938385E-6	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999998909612261	WITHOUT_CLASSIFICATION	1.0903877391603385E-7	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999965565785732	WITHOUT_CLASSIFICATION	3.443421426684873E-6	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999995986952628	WITHOUT_CLASSIFICATION	4.013047371400875E-7	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999999748402502	WITHOUT_CLASSIFICATION	2.515974984485509E-8	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999997636194645	WITHOUT_CLASSIFICATION	2.363805355732284E-7	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999988084594561	WITHOUT_CLASSIFICATION	1.1915405439169648E-6	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999994223295837	WITHOUT_CLASSIFICATION	5.776704162206356E-7	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999999995326191	WITHOUT_CLASSIFICATION	4.673808098579547E-10	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999999428370246	WITHOUT_CLASSIFICATION	5.716297540136781E-8	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999992062112765	WITHOUT_CLASSIFICATION	7.937887234487975E-7	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999998594204479	WITHOUT_CLASSIFICATION	1.4057955209540777E-7	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999991240352027	WITHOUT_CLASSIFICATION	8.759647973709826E-7	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.999999385656848	WITHOUT_CLASSIFICATION	6.143431519652327E-7	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999992099286891	WITHOUT_CLASSIFICATION	7.900713108515954E-7	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999927893757641	WITHOUT_CLASSIFICATION	7.210624235852482E-6	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999995983468533	WITHOUT_CLASSIFICATION	4.016531467935561E-7	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999986767215956	WITHOUT_CLASSIFICATION	1.323278404424256E-6	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.999999993182188	WITHOUT_CLASSIFICATION	6.817811970585088E-9	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999984847108051	WITHOUT_CLASSIFICATION	1.5152891949901196E-6	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999999049833409	WITHOUT_CLASSIFICATION	9.501665905843289E-8	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999999987799785	WITHOUT_CLASSIFICATION	1.2200214590724247E-9	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.99999918219717	WITHOUT_CLASSIFICATION	8.178028300305524E-7	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999994511295266	WITHOUT_CLASSIFICATION	5.488704733728285E-7	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999975291437895	WITHOUT_CLASSIFICATION	2.47085621044329E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997412002457	WITHOUT_CLASSIFICATION	2.5879975431954505E-7	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999999389087042	WITHOUT_CLASSIFICATION	6.109129575440824E-8	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999999683869825	WITHOUT_CLASSIFICATION	3.1613017637414615E-8	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999996862112868	WITHOUT_CLASSIFICATION	3.1378871320783276E-7	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999999773768065	WITHOUT_CLASSIFICATION	2.2623193633137407E-8	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999989509475774	WITHOUT_CLASSIFICATION	1.0490524226002595E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999996950915139	WITHOUT_CLASSIFICATION	3.049084860650767E-7	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999996924492008	WITHOUT_CLASSIFICATION	3.075507991337333E-7	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999991851450141	WITHOUT_CLASSIFICATION	8.148549858972126E-7	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999998579162289	WITHOUT_CLASSIFICATION	1.4208377106539008E-7	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999993818262373	WITHOUT_CLASSIFICATION	6.181737626798259E-7	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999999467500746	WITHOUT_CLASSIFICATION	5.3249925423051085E-8	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999972273190565	WITHOUT_CLASSIFICATION	2.7726809435348638E-6	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9999996775539226	WITHOUT_CLASSIFICATION	3.2244607745591606E-7	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.999998488496368	WITHOUT_CLASSIFICATION	1.511503632089009E-6	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999935205063722	WITHOUT_CLASSIFICATION	6.479493627686802E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997412002457	WITHOUT_CLASSIFICATION	2.5879975431954505E-7	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999999134751107	WITHOUT_CLASSIFICATION	8.65248892022381E-8	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999999206843917	WITHOUT_CLASSIFICATION	7.931560832121456E-8	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999986181575069	WITHOUT_CLASSIFICATION	1.3818424930286282E-6	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999983278298201	WITHOUT_CLASSIFICATION	1.6721701798364804E-6	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999980160190913	WITHOUT_CLASSIFICATION	1.983980908655008E-6	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999995892497482	WITHOUT_CLASSIFICATION	4.1075025180570563E-7	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999990913608423	WITHOUT_CLASSIFICATION	9.086391576376159E-7	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999998498440632	WITHOUT_CLASSIFICATION	1.501559369112057E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999999428370246	WITHOUT_CLASSIFICATION	5.716297540136781E-8	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.999999641368889	WITHOUT_CLASSIFICATION	3.586311110180093E-7	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999991411801603	WITHOUT_CLASSIFICATION	8.588198396292139E-7	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.999996752986155	WITHOUT_CLASSIFICATION	3.2470138448974113E-6	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999959217038324	WITHOUT_CLASSIFICATION	4.078296167503325E-6	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999992656832605	WITHOUT_CLASSIFICATION	7.343167394671622E-7	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999984707376295	WITHOUT_CLASSIFICATION	1.5292623704611124E-6	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999986283141064	WITHOUT_CLASSIFICATION	1.3716858936491115E-6	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999999745227122	WITHOUT_CLASSIFICATION	2.5477287841065106E-8	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999995974628859	WITHOUT_CLASSIFICATION	4.0253711403456245E-7	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999995892957037	WITHOUT_CLASSIFICATION	4.1070429632908353E-7	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999975890914021	WITHOUT_CLASSIFICATION	2.410908597842633E-6	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.999999028712594	WITHOUT_CLASSIFICATION	9.712874059092493E-7	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999969813928394	WITHOUT_CLASSIFICATION	3.018607160455723E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999969813928394	WITHOUT_CLASSIFICATION	3.018607160455723E-6	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999998474054282	WITHOUT_CLASSIFICATION	1.5259457168843678E-7	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999937883290986	WITHOUT_CLASSIFICATION	6.211670901400322E-6	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.999999992339276	WITHOUT_CLASSIFICATION	7.66072408928994E-9	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999998846124201	WITHOUT_CLASSIFICATION	1.1538757995087088E-7	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.99999989114739	WITHOUT_CLASSIFICATION	1.0885260999770417E-7	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.999995855866213	WITHOUT_CLASSIFICATION	4.14413378707055E-6	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999984036545229	WITHOUT_CLASSIFICATION	1.5963454771421658E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999996810033959	WITHOUT_CLASSIFICATION	3.1899660416024995E-7	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.999999941212187	WITHOUT_CLASSIFICATION	5.8787812958172395E-8	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999998698096931	WITHOUT_CLASSIFICATION	1.3019030680585635E-7	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999990840875285	WITHOUT_CLASSIFICATION	9.159124715207508E-7	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.99999867127941	WITHOUT_CLASSIFICATION	1.3287205900275409E-6	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999988085680249	WITHOUT_CLASSIFICATION	1.1914319749866808E-6	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999255320489	WITHOUT_CLASSIFICATION	7.446795110635409E-8	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999991979601596	WITHOUT_CLASSIFICATION	8.020398404337578E-7	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999951221215426	WITHOUT_CLASSIFICATION	4.877878457276441E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9999989221720402	WITHOUT_CLASSIFICATION	1.0778279597556525E-6	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999999454336465	WITHOUT_CLASSIFICATION	5.456635358168306E-8	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.999998988689991	WITHOUT_CLASSIFICATION	1.0113100088739526E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999998112201421	WITHOUT_CLASSIFICATION	1.8877985791982551E-7	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999915942888105	WITHOUT_CLASSIFICATION	8.40571118960425E-6	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999949887566549	WITHOUT_CLASSIFICATION	5.011243345022151E-6	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999996131877615	WITHOUT_CLASSIFICATION	3.868122385486414E-7	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.9999647538903369	WITHOUT_CLASSIFICATION	3.524610966311191E-5	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.999999481882415	WITHOUT_CLASSIFICATION	5.181175849153056E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914439840918	WITHOUT_CLASSIFICATION	8.556015908213388E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999995228042863	WITHOUT_CLASSIFICATION	4.771957137953281E-7	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999998714164373	WITHOUT_CLASSIFICATION	1.2858356275137837E-7	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999927538711123	WITHOUT_CLASSIFICATION	7.246128887782859E-6	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999970688735624	WITHOUT_CLASSIFICATION	2.9311264375222E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998180358554077	WITHOUT_CLASSIFICATION	1.819641445922577E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9999730515660905	WITHOUT_CLASSIFICATION	2.6948433909568957E-5	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.999999998989675	WITHOUT_CLASSIFICATION	1.0103250148115496E-9	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999999835675745	WITHOUT_CLASSIFICATION	1.6432425453003005E-8	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999995040285896	WITHOUT_CLASSIFICATION	4.959714103960665E-7	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999998895717245	WITHOUT_CLASSIFICATION	1.1042827552041071E-7	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999985574292034	WITHOUT_CLASSIFICATION	1.442570796565616E-6	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9999976267633872	WITHOUT_CLASSIFICATION	2.37323661284354E-6	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999940355417968	WITHOUT_CLASSIFICATION	5.964458203171629E-6	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999940494759882	WITHOUT_CLASSIFICATION	5.950524011738604E-6	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952650969365	WITHOUT_CLASSIFICATION	4.7349030635634505E-6	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999999588090759	WITHOUT_CLASSIFICATION	4.1190924120701815E-8	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999868305122076	WITHOUT_CLASSIFICATION	1.3169487792362127E-5	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999970110438782	WITHOUT_CLASSIFICATION	2.9889561218702646E-6	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999997955348803	WITHOUT_CLASSIFICATION	2.0446511970447506E-7	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979472639736	WITHOUT_CLASSIFICATION	2.0527360263449583E-6	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9981126715504476	WITHOUT_CLASSIFICATION	0.0018873284495523925	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999995578823834	WITHOUT_CLASSIFICATION	4.4211761663807174E-7	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999999874757953	WITHOUT_CLASSIFICATION	1.2524204626582113E-8	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999997977623492	WITHOUT_CLASSIFICATION	2.022376509873084E-7	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985567358205	WITHOUT_CLASSIFICATION	1.4432641795069325E-6	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999992484354361	WITHOUT_CLASSIFICATION	7.515645640182612E-7	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999994055932842	WITHOUT_CLASSIFICATION	5.94406715878568E-7	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999982714326974	WITHOUT_CLASSIFICATION	1.7285673025283438E-6	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999977198814481	WITHOUT_CLASSIFICATION	2.2801185519147554E-6	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999999722169977	WITHOUT_CLASSIFICATION	2.778300241081639E-8	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9999951080854204	WITHOUT_CLASSIFICATION	4.891914579648304E-6	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9999994322714101	WITHOUT_CLASSIFICATION	5.677285899095952E-7	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999987314562699	WITHOUT_CLASSIFICATION	1.2685437300720887E-6	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999964219360884	WITHOUT_CLASSIFICATION	3.5780639115387377E-6	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.999999846750874	WITHOUT_CLASSIFICATION	1.5324912587196597E-7	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999983102307087	WITHOUT_CLASSIFICATION	1.689769291344496E-6	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999980351387806	WITHOUT_CLASSIFICATION	1.964861219321187E-6	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999998084605646	WITHOUT_CLASSIFICATION	1.9153943550785332E-7	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.999994635477278	WITHOUT_CLASSIFICATION	5.364522722025381E-6	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999972881567523	WITHOUT_CLASSIFICATION	2.7118432477615782E-6	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999988179664097	WITHOUT_CLASSIFICATION	1.1820335903485174E-6	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999996959888752	WITHOUT_CLASSIFICATION	3.040111247301559E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.999998908722609	WITHOUT_CLASSIFICATION	1.0912773910585955E-6	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999998975173194	WITHOUT_CLASSIFICATION	1.0248268059803594E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.999998908722609	WITHOUT_CLASSIFICATION	1.0912773910585955E-6	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999999833879939	WITHOUT_CLASSIFICATION	1.661200615301344E-8	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999996676420889	WITHOUT_CLASSIFICATION	3.323579111906759E-7	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999675615629713	WITHOUT_CLASSIFICATION	3.2438437028766634E-5	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999998478495076	WITHOUT_CLASSIFICATION	1.521504923879725E-7	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999999642058369	WITHOUT_CLASSIFICATION	3.579416295744998E-8	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999590011443522	WITHOUT_CLASSIFICATION	4.0998855647820754E-5	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999997918813539	WITHOUT_CLASSIFICATION	2.0811864602550495E-7	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999992764114285	WITHOUT_CLASSIFICATION	7.235885715102909E-7	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999991630377668	WITHOUT_CLASSIFICATION	8.369622332629278E-7	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.999999955618282	WITHOUT_CLASSIFICATION	4.4381717999937494E-8	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.999999320365332	WITHOUT_CLASSIFICATION	6.796346679879377E-7	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999993620594597	WITHOUT_CLASSIFICATION	6.379405402469304E-7	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999999588553313	WITHOUT_CLASSIFICATION	4.114466863537743E-8	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9999994418498206	WITHOUT_CLASSIFICATION	5.581501795159939E-7	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999984127862217	WITHOUT_CLASSIFICATION	1.5872137782277113E-6	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999999292858228	WITHOUT_CLASSIFICATION	7.071417710974512E-8	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999998965953831	WITHOUT_CLASSIFICATION	1.0340461682781766E-7	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999998162336488	WITHOUT_CLASSIFICATION	1.837663511902665E-7	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999999903447084	WITHOUT_CLASSIFICATION	9.655291505664342E-9	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9999989297035465	WITHOUT_CLASSIFICATION	1.0702964534405752E-6	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999995908473581	WITHOUT_CLASSIFICATION	4.0915264178428875E-7	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9999981336242043	WITHOUT_CLASSIFICATION	1.8663757957211408E-6	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999981823440981	WITHOUT_CLASSIFICATION	1.817655902019927E-6	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999999805122449	WITHOUT_CLASSIFICATION	1.948775508694342E-8	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999986942923362	WITHOUT_CLASSIFICATION	1.3057076636919266E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999957817488816	WITHOUT_CLASSIFICATION	4.218251118462649E-6	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999978372016378	WITHOUT_CLASSIFICATION	2.16279836228106E-6	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.999995656104596	WITHOUT_CLASSIFICATION	4.3438954039858426E-6	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999962792585585	WITHOUT_CLASSIFICATION	3.7207414415510048E-6	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999995068163932	WITHOUT_CLASSIFICATION	4.931836068466501E-7	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.999994182714001	WITHOUT_CLASSIFICATION	5.817285999066236E-6	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999391949215151	WITHOUT_CLASSIFICATION	6.0805078484912164E-5	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999999895189755	WITHOUT_CLASSIFICATION	1.048102446420784E-8	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.999998147355469	WITHOUT_CLASSIFICATION	1.8526445310038956E-6	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999976588135209	WITHOUT_CLASSIFICATION	2.3411864791131457E-6	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9999939308984335	WITHOUT_CLASSIFICATION	6.069101566600364E-6	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999899021324413	WITHOUT_CLASSIFICATION	1.0097867558727632E-5	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999951580431856	WITHOUT_CLASSIFICATION	4.841956814407485E-6	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.9999566479365607	WITHOUT_CLASSIFICATION	4.335206343922469E-5	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999998995510371	WITHOUT_CLASSIFICATION	1.0044896300138933E-7	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999839859937202	WITHOUT_CLASSIFICATION	1.6014006279823368E-5	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9999978843524611	WITHOUT_CLASSIFICATION	2.115647539052141E-6	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.999997070208583	WITHOUT_CLASSIFICATION	2.9297914170137825E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999957817488816	WITHOUT_CLASSIFICATION	4.218251118462649E-6	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9998531485782601	WITHOUT_CLASSIFICATION	1.4685142173987933E-4	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999996846438121	WITHOUT_CLASSIFICATION	3.153561879303682E-7	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9999492496355732	WITHOUT_CLASSIFICATION	5.075036442678872E-5	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999995628566707	WITHOUT_CLASSIFICATION	4.371433293535724E-7	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999917156635567	WITHOUT_CLASSIFICATION	8.284336443330388E-6	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999899283160313	WITHOUT_CLASSIFICATION	1.0071683968693576E-5	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999977356412609	WITHOUT_CLASSIFICATION	2.2643587391412286E-6	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999998631635603	WITHOUT_CLASSIFICATION	1.3683643966906757E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999989619124331	WITHOUT_CLASSIFICATION	1.0380875668213597E-6	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999998949252842	WITHOUT_CLASSIFICATION	1.0507471579545612E-7	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9999986322475138	WITHOUT_CLASSIFICATION	1.367752486233619E-6	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999978009311917	WITHOUT_CLASSIFICATION	2.199068808394499E-6	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9999915459705376	WITHOUT_CLASSIFICATION	8.454029462364095E-6	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.999983834243083	WITHOUT_CLASSIFICATION	1.6165756917031188E-5	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999907881366011	WITHOUT_CLASSIFICATION	9.211863398906385E-6	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999999823473262	WITHOUT_CLASSIFICATION	1.765267379464845E-8	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999958012667262	WITHOUT_CLASSIFICATION	4.1987332739159E-6	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999991594349508	WITHOUT_CLASSIFICATION	8.405650493112602E-7	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999999480735804	WITHOUT_CLASSIFICATION	5.1926419756669384E-8	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9998531485782601	WITHOUT_CLASSIFICATION	1.4685142173987933E-4	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9999968646243723	WITHOUT_CLASSIFICATION	3.1353756277373916E-6	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999998480142982	WITHOUT_CLASSIFICATION	1.519857017733129E-7	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999923411416528	WITHOUT_CLASSIFICATION	7.658858347167714E-6	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.999999210269132	WITHOUT_CLASSIFICATION	7.8973086809189E-7	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9999997358796058	WITHOUT_CLASSIFICATION	2.6412039415382363E-7	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999939864505903	WITHOUT_CLASSIFICATION	6.013549409610506E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999939864505903	WITHOUT_CLASSIFICATION	6.013549409610506E-6	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.999997943560306	WITHOUT_CLASSIFICATION	2.05643969393412E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999939864505903	WITHOUT_CLASSIFICATION	6.013549409610506E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999939864505903	WITHOUT_CLASSIFICATION	6.013549409610506E-6	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9998672184868136	WITHOUT_CLASSIFICATION	1.327815131864694E-4	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999993962380446	WITHOUT_CLASSIFICATION	6.03761955492118E-7	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999998392476815	WITHOUT_CLASSIFICATION	1.6075231848630822E-7	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.999999630054459	WITHOUT_CLASSIFICATION	3.6994554097152373E-7	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999975004832665	WITHOUT_CLASSIFICATION	2.499516733391719E-6	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9999946630797296	WITHOUT_CLASSIFICATION	5.336920270385499E-6	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9999903328292089	WITHOUT_CLASSIFICATION	9.667170791087047E-6	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999868976753263	WITHOUT_CLASSIFICATION	1.3102324673747147E-5	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999888202838001	WITHOUT_CLASSIFICATION	1.117971619989492E-5	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9999825111657008	WITHOUT_CLASSIFICATION	1.7488834299164916E-5	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9999965817016466	WITHOUT_CLASSIFICATION	3.4182983534509915E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999922659729931	WITHOUT_CLASSIFICATION	7.734027006934001E-6	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999985040762209	WITHOUT_CLASSIFICATION	1.4959237790938749E-6	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9999883196908033	WITHOUT_CLASSIFICATION	1.1680309196795795E-5	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999971141107965	WITHOUT_CLASSIFICATION	2.8858892035338235E-6	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999899052860087	WITHOUT_CLASSIFICATION	1.009471399124807E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999969870463353	WITHOUT_CLASSIFICATION	3.0129536646350014E-6	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999884082687334	WITHOUT_CLASSIFICATION	1.1591731266687613E-5	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999194093831502	WITHOUT_CLASSIFICATION	8.0590616849836E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9999863190455364	WITHOUT_CLASSIFICATION	1.3680954463695945E-5	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999984174200472	WITHOUT_CLASSIFICATION	1.5825799527251816E-6	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.999972513528548	WITHOUT_CLASSIFICATION	2.7486471452061683E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999969870463353	WITHOUT_CLASSIFICATION	3.0129536646350014E-6	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999978372016378	WITHOUT_CLASSIFICATION	2.16279836228106E-6	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999939013821483	WITHOUT_CLASSIFICATION	6.098617851777315E-6	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999996835561871	WITHOUT_CLASSIFICATION	3.1644381291052654E-7	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999999125221779	WITHOUT_CLASSIFICATION	8.747782202496252E-8	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9999555586889659	WITHOUT_CLASSIFICATION	4.444131103408396E-5	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999994775560972	WITHOUT_CLASSIFICATION	5.224439028188563E-7	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.9999992777147573	WITHOUT_CLASSIFICATION	7.222852426091816E-7	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999991615798841	WITHOUT_CLASSIFICATION	8.384201159261014E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999954699007001	WITHOUT_CLASSIFICATION	4.53009929998965E-6	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999972194891832	WITHOUT_CLASSIFICATION	2.7805108167347348E-6	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9999968825983931	WITHOUT_CLASSIFICATION	3.1174016069743802E-6	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999999050746117	WITHOUT_CLASSIFICATION	9.492538831000469E-8	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999996080523561	WITHOUT_CLASSIFICATION	3.919476438825855E-7	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999995378522719	WITHOUT_CLASSIFICATION	4.6214772796633924E-7	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.999997194125537	WITHOUT_CLASSIFICATION	2.805874462946012E-6	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.999999955774604	WITHOUT_CLASSIFICATION	4.4225395875467986E-8	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999996222250523	WITHOUT_CLASSIFICATION	3.7777494761214804E-7	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999993603317998	WITHOUT_CLASSIFICATION	6.396682001433737E-7	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999999674859446	WITHOUT_CLASSIFICATION	3.251405549884352E-8	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999999135817957	WITHOUT_CLASSIFICATION	8.64182042355371E-8	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9999984260034183	WITHOUT_CLASSIFICATION	1.573996581694756E-6	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999993503459561	WITHOUT_CLASSIFICATION	6.496540439296569E-7	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.999999889491857	WITHOUT_CLASSIFICATION	1.1050814299582819E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999954699007001	WITHOUT_CLASSIFICATION	4.53009929998965E-6	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999911891529956	WITHOUT_CLASSIFICATION	8.810847004365363E-6	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9999937297470084	WITHOUT_CLASSIFICATION	6.2702529916346845E-6	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9999932274309422	WITHOUT_CLASSIFICATION	6.772569057762631E-6	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999996675368215	WITHOUT_CLASSIFICATION	3.324631785745815E-7	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994594436883	WITHOUT_CLASSIFICATION	5.405563117758749E-7	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9999976274803921	WITHOUT_CLASSIFICATION	2.3725196078596696E-6	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9999971413915288	WITHOUT_CLASSIFICATION	2.8586084711090067E-6	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999892129242717	WITHOUT_CLASSIFICATION	1.0787075728360384E-5	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.9999979749912397	WITHOUT_CLASSIFICATION	2.0250087604291765E-6	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9999746639487125	WITHOUT_CLASSIFICATION	2.533605128753557E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999901655797963	WITHOUT_CLASSIFICATION	9.834420203764794E-6	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999999969611904	WITHOUT_CLASSIFICATION	3.0388096656796958E-9	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999978205129294	WITHOUT_CLASSIFICATION	2.179487070628347E-6	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999995202428438	WITHOUT_CLASSIFICATION	4.797571562063374E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999811486188311	WITHOUT_CLASSIFICATION	1.8851381168850924E-5	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999669585065597	WITHOUT_CLASSIFICATION	3.3041493440312E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.99999696634358	WITHOUT_CLASSIFICATION	3.033656420057309E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999901655797963	WITHOUT_CLASSIFICATION	9.834420203764794E-6	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.999999836074707	WITHOUT_CLASSIFICATION	1.639252928928208E-7	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9999986399820481	WITHOUT_CLASSIFICATION	1.3600179518852505E-6	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999992054413274	WITHOUT_CLASSIFICATION	7.945586726868896E-7	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999942038753198	WITHOUT_CLASSIFICATION	5.796124680121946E-6	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999992682974908	WITHOUT_CLASSIFICATION	7.3170250931889E-7	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999999510786399	WITHOUT_CLASSIFICATION	4.892136004198502E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999811486188311	WITHOUT_CLASSIFICATION	1.8851381168850924E-5	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999999500096514	WITHOUT_CLASSIFICATION	4.999034866744165E-8	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999994416082679	WITHOUT_CLASSIFICATION	5.583917320173274E-7	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998719247636	WITHOUT_CLASSIFICATION	1.2807523633815545E-7	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990509139457	WITHOUT_CLASSIFICATION	9.490860544486341E-7	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991508207792	WITHOUT_CLASSIFICATION	8.491792208898403E-7	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996793900351	WITHOUT_CLASSIFICATION	3.206099648344482E-7	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999991800760171	WITHOUT_CLASSIFICATION	8.19923982967268E-7	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999991800760171	WITHOUT_CLASSIFICATION	8.19923982967268E-7	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999987559516949	WITHOUT_CLASSIFICATION	1.2440483051759273E-6	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999969692096824	WITHOUT_CLASSIFICATION	3.0307903176006905E-6	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999983097530991	WITHOUT_CLASSIFICATION	1.6902469009782585E-6	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9999993890317898	WITHOUT_CLASSIFICATION	6.109682102217509E-7	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.999999791151764	WITHOUT_CLASSIFICATION	2.0884823604352865E-7	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991888368803	WITHOUT_CLASSIFICATION	8.111631196097804E-7	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999863500444818	WITHOUT_CLASSIFICATION	1.3649955518122171E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997405045986	WITHOUT_CLASSIFICATION	2.5949540145941183E-7	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999986814805032	WITHOUT_CLASSIFICATION	1.3185194967588286E-6	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998691058047	WITHOUT_CLASSIFICATION	1.3089419530214038E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991888368803	WITHOUT_CLASSIFICATION	8.111631196097804E-7	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999863500444818	WITHOUT_CLASSIFICATION	1.3649955518122171E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997405045986	WITHOUT_CLASSIFICATION	2.5949540145941183E-7	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999965790498149	WITHOUT_CLASSIFICATION	3.420950185197458E-6	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9999783981889238	WITHOUT_CLASSIFICATION	2.1601811076173928E-5	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999998989731892	WITHOUT_CLASSIFICATION	1.010268107311718E-7	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999990981774258	WITHOUT_CLASSIFICATION	9.018225741563341E-7	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999999676321248	WITHOUT_CLASSIFICATION	3.236787518112305E-8	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999999450059315	WITHOUT_CLASSIFICATION	5.499406860234164E-8	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9999883633812537	WITHOUT_CLASSIFICATION	1.163661874626103E-5	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.999995988732412	WITHOUT_CLASSIFICATION	4.011267587920252E-6	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9999678854224872	WITHOUT_CLASSIFICATION	3.2114577512839746E-5	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999993624305871	WITHOUT_CLASSIFICATION	6.375694128628587E-7	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999997698472449	WITHOUT_CLASSIFICATION	2.301527550014167E-7	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999984762972844	WITHOUT_CLASSIFICATION	1.5237027155833894E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9999688093061251	WITHOUT_CLASSIFICATION	3.119069387486974E-5	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999986166172894	WITHOUT_CLASSIFICATION	1.3833827105618509E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999997237097584	WITHOUT_CLASSIFICATION	2.762902415345785E-7	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999935137445108	WITHOUT_CLASSIFICATION	6.486255489038217E-6	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9998909297615098	WITHOUT_CLASSIFICATION	1.0907023849008655E-4	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999719304206232	WITHOUT_CLASSIFICATION	2.8069579376798777E-5	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999998799390046	WITHOUT_CLASSIFICATION	1.2006099544098935E-7	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999975774825335	WITHOUT_CLASSIFICATION	2.4225174665300933E-6	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999995667574691	WITHOUT_CLASSIFICATION	4.332425307782117E-7	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.999999893399097	WITHOUT_CLASSIFICATION	1.0660090305764022E-7	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999968094902137	WITHOUT_CLASSIFICATION	3.1905097861966484E-6	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999999441941767	WITHOUT_CLASSIFICATION	5.5805823310268265E-8	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999999956872119	WITHOUT_CLASSIFICATION	4.312788051466114E-9	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9998104322829602	WITHOUT_CLASSIFICATION	1.895677170397341E-4	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990168498584	WITHOUT_CLASSIFICATION	9.831501416513857E-7	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984292706204	WITHOUT_CLASSIFICATION	1.5707293795731514E-6	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999345111835897	WITHOUT_CLASSIFICATION	6.548881641029345E-5	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999975300322894	WITHOUT_CLASSIFICATION	2.469967710543177E-6	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971490360788	WITHOUT_CLASSIFICATION	2.8509639212263583E-6	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999959028502458	WITHOUT_CLASSIFICATION	4.097149754306688E-6	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999959028502458	WITHOUT_CLASSIFICATION	4.097149754306688E-6	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999995620468436	WITHOUT_CLASSIFICATION	4.3795315640051634E-7	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999999899787386	WITHOUT_CLASSIFICATION	1.0021261344093248E-8	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999997394383198	WITHOUT_CLASSIFICATION	2.605616802364139E-7	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998450466049889	WITHOUT_CLASSIFICATION	1.5495339501124948E-4	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999989593309732	WITHOUT_CLASSIFICATION	1.04066902677729E-6	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9999984003648688	WITHOUT_CLASSIFICATION	1.5996351312954203E-6	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9999670277472597	WITHOUT_CLASSIFICATION	3.297225274036994E-5	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999993026438434	WITHOUT_CLASSIFICATION	6.973561565282042E-7	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999973135850356	WITHOUT_CLASSIFICATION	2.686414964283002E-6	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992387204345	WITHOUT_CLASSIFICATION	7.612795655600048E-7	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995563930492	WITHOUT_CLASSIFICATION	4.4360695089284873E-7	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995251290642	WITHOUT_CLASSIFICATION	4.748709357644042E-7	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999400861433	WITHOUT_CLASSIFICATION	5.991385669720699E-7	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997147908537	WITHOUT_CLASSIFICATION	2.85209146337014E-7	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999424780021	WITHOUT_CLASSIFICATION	5.752199790578321E-7	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999031975247	WITHOUT_CLASSIFICATION	9.680247529665646E-7	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998350873912	WITHOUT_CLASSIFICATION	1.6491260879849023E-7	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998697686207	WITHOUT_CLASSIFICATION	1.302313793847794E-7	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995524229223	WITHOUT_CLASSIFICATION	4.47577077641554E-7	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993660115001	WITHOUT_CLASSIFICATION	6.339884998268049E-7	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999993917084595	WITHOUT_CLASSIFICATION	6.082915404691362E-7	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.999993850431672	WITHOUT_CLASSIFICATION	6.149568328090102E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999995675331766	WITHOUT_CLASSIFICATION	4.324668233841141E-7	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999990218773371	WITHOUT_CLASSIFICATION	9.781226628537258E-7	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.999996367757382	WITHOUT_CLASSIFICATION	3.6322426178700553E-6	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999996789136778	WITHOUT_CLASSIFICATION	3.210863221547217E-7	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999998668967797	WITHOUT_CLASSIFICATION	1.331032203675803E-7	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9999998341704546	WITHOUT_CLASSIFICATION	1.658295453473596E-7	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999995675331766	WITHOUT_CLASSIFICATION	4.324668233841141E-7	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999995675331766	WITHOUT_CLASSIFICATION	4.324668233841141E-7	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9999953701673545	WITHOUT_CLASSIFICATION	4.629832645519077E-6	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999999757864622	WITHOUT_CLASSIFICATION	2.4213537872971706E-8	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999994161572883	WITHOUT_CLASSIFICATION	5.838427117551553E-7	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999990911907188	WITHOUT_CLASSIFICATION	9.088092811527873E-7	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999980556132115	WITHOUT_CLASSIFICATION	1.944386788459111E-6	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999975774825335	WITHOUT_CLASSIFICATION	2.4225174665300933E-6	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999843916701943	WITHOUT_CLASSIFICATION	1.5608329805693515E-5	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999997293630606	WITHOUT_CLASSIFICATION	2.7063693936003544E-7	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999999683947169	WITHOUT_CLASSIFICATION	3.1605283066826795E-8	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998431704856	WITHOUT_CLASSIFICATION	1.5682951432737839E-7	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.999999881573584	WITHOUT_CLASSIFICATION	1.1842641599484948E-7	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999937760811096	WITHOUT_CLASSIFICATION	6.2239188903587154E-6	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.999989102886549	WITHOUT_CLASSIFICATION	1.0897113451002035E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.999989102886549	WITHOUT_CLASSIFICATION	1.0897113451002035E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999937063924057	WITHOUT_CLASSIFICATION	6.293607594234426E-6	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999937063924057	WITHOUT_CLASSIFICATION	6.293607594234426E-6	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996338729099	WITHOUT_CLASSIFICATION	3.661270901005803E-7	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980949215129	WITHOUT_CLASSIFICATION	1.9050784871209804E-6	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999966278535966	WITHOUT_CLASSIFICATION	3.3721464034891E-6	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999610357804	WITHOUT_CLASSIFICATION	3.896421959310733E-7	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.999999974750396	WITHOUT_CLASSIFICATION	2.52496040648104E-8	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.999999743130394	WITHOUT_CLASSIFICATION	2.568696060246287E-7	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999973500429377	WITHOUT_CLASSIFICATION	2.649957062315649E-6	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991760092449	WITHOUT_CLASSIFICATION	8.239907551214185E-7	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9999966308140035	WITHOUT_CLASSIFICATION	3.3691859964753772E-6	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999997776846069	WITHOUT_CLASSIFICATION	2.223153931985812E-7	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999952281741242	WITHOUT_CLASSIFICATION	4.77182587582907E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224069685	WITHOUT_CLASSIFICATION	1.1917759303148885E-4	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.999999419601087	WITHOUT_CLASSIFICATION	5.803989131140919E-7	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999979844345819	WITHOUT_CLASSIFICATION	2.01556541802549E-6	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999991325670625	WITHOUT_CLASSIFICATION	8.674329373521179E-7	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.999983188664931	WITHOUT_CLASSIFICATION	1.6811335069117836E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999974054815736	WITHOUT_CLASSIFICATION	2.5945184264728037E-6	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999974054815736	WITHOUT_CLASSIFICATION	2.5945184264728037E-6	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999999791741769	WITHOUT_CLASSIFICATION	2.082582310383143E-8	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9999954841411978	WITHOUT_CLASSIFICATION	4.515858802238481E-6	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.999989295660793	WITHOUT_CLASSIFICATION	1.0704339206964606E-5	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.999989402896175	WITHOUT_CLASSIFICATION	1.0597103824920348E-5	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999999067051175	WITHOUT_CLASSIFICATION	9.329488244602056E-8	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998234343245	WITHOUT_CLASSIFICATION	1.765656754368439E-7	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999995014324963	WITHOUT_CLASSIFICATION	4.985675036679249E-7	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995248344399	WITHOUT_CLASSIFICATION	4.751655601813724E-7	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999997276383368	WITHOUT_CLASSIFICATION	2.723616632237857E-7	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999996359789368	WITHOUT_CLASSIFICATION	3.6402106316796355E-7	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999998130532403	WITHOUT_CLASSIFICATION	1.869467596649594E-7	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999990380690043	WITHOUT_CLASSIFICATION	9.619309958087036E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997278961609	WITHOUT_CLASSIFICATION	2.7210383909200387E-6	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999996950521486	WITHOUT_CLASSIFICATION	3.049478513786162E-7	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999999156661885	WITHOUT_CLASSIFICATION	8.433381150946834E-8	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999984278011483	WITHOUT_CLASSIFICATION	1.5721988516460993E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999998937367233	WITHOUT_CLASSIFICATION	1.0626327676091049E-7	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999970829525209	WITHOUT_CLASSIFICATION	2.9170474790626785E-6	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.999993561390551	WITHOUT_CLASSIFICATION	6.438609448950652E-6	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999978412261958	WITHOUT_CLASSIFICATION	2.1587738041400593E-6	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999998037965733	WITHOUT_CLASSIFICATION	1.9620342684102966E-7	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999999709123027	WITHOUT_CLASSIFICATION	2.9087697258490297E-8	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.999999006716549	WITHOUT_CLASSIFICATION	9.932834511367572E-7	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999992978188519	WITHOUT_CLASSIFICATION	7.021811481440644E-7	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999994236334918	WITHOUT_CLASSIFICATION	5.76366508122468E-7	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999987176992267	WITHOUT_CLASSIFICATION	1.2823007733458801E-6	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999997936341433	WITHOUT_CLASSIFICATION	2.0636585664693197E-7	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9999942880770792	WITHOUT_CLASSIFICATION	5.711922920761031E-6	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999967773792497	WITHOUT_CLASSIFICATION	3.2226207503512272E-6	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999945047910694	WITHOUT_CLASSIFICATION	5.4952089305797605E-6	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999999911396817	WITHOUT_CLASSIFICATION	8.860318151998674E-9	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999965479391408	WITHOUT_CLASSIFICATION	3.4520608591516536E-6	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999687324300297	WITHOUT_CLASSIFICATION	3.126756997020365E-5	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9995395985078095	WITHOUT_CLASSIFICATION	4.6040149219048383E-4	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999994737041404	WITHOUT_CLASSIFICATION	5.26295859644833E-7	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9999949780358155	WITHOUT_CLASSIFICATION	5.021964184516538E-6	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999999809900099	WITHOUT_CLASSIFICATION	1.9009990111342983E-8	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999996526066304	WITHOUT_CLASSIFICATION	3.4739336959620964E-7	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999986905506	WITHOUT_CLASSIFICATION	1.309449400037196E-6	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.9999989394566627	WITHOUT_CLASSIFICATION	1.0605433371909579E-6	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999999937273515	WITHOUT_CLASSIFICATION	6.272648562255657E-9	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999999350024142	WITHOUT_CLASSIFICATION	6.499758571987524E-8	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999998899099954	WITHOUT_CLASSIFICATION	1.1009000465002888E-7	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999999044902306	WITHOUT_CLASSIFICATION	9.550976942971181E-8	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999995910392232	WITHOUT_CLASSIFICATION	4.0896077682262605E-7	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999840584155659	WITHOUT_CLASSIFICATION	1.5941584434080824E-5	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999969839609265	WITHOUT_CLASSIFICATION	3.0160390734447327E-6	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999745163268501	WITHOUT_CLASSIFICATION	2.548367314997331E-5	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999960396453459	WITHOUT_CLASSIFICATION	3.960354654102414E-6	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9999943994339988	WITHOUT_CLASSIFICATION	5.600566001199854E-6	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999983372411152	WITHOUT_CLASSIFICATION	1.6627588848626606E-6	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9999560325741986	WITHOUT_CLASSIFICATION	4.396742580137141E-5	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999924133559388	WITHOUT_CLASSIFICATION	7.5866440611711676E-6	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999945854661346	WITHOUT_CLASSIFICATION	5.414533865344747E-6	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999597460618243	WITHOUT_CLASSIFICATION	4.025393817577915E-5	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.999999065366855	WITHOUT_CLASSIFICATION	9.346331450884798E-7	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9999822762717749	WITHOUT_CLASSIFICATION	1.7723728225064556E-5	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9999228943299565	WITHOUT_CLASSIFICATION	7.710567004344235E-5	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.999998568519836	WITHOUT_CLASSIFICATION	1.4314801638462957E-6	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9999649497213196	WITHOUT_CLASSIFICATION	3.505027868039452E-5	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999995292578411	WITHOUT_CLASSIFICATION	4.707421589132403E-7	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999993006756094	WITHOUT_CLASSIFICATION	6.993243907029437E-7	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999817082785	WITHOUT_CLASSIFICATION	1.8291721479627777E-8	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999972460032919	WITHOUT_CLASSIFICATION	2.7539967081340363E-6	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999996463297193	WITHOUT_CLASSIFICATION	3.536702807462318E-7	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999997737145183	WITHOUT_CLASSIFICATION	2.2628548175056877E-7	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999999987847136	WITHOUT_CLASSIFICATION	1.2152863478225375E-9	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999988786930633	WITHOUT_CLASSIFICATION	1.1213069367097701E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999468347999475	WITHOUT_CLASSIFICATION	5.316520005242232E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999468347999475	WITHOUT_CLASSIFICATION	5.316520005242232E-5	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999899231517814	WITHOUT_CLASSIFICATION	1.0076848218640193E-5	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9999997044356544	WITHOUT_CLASSIFICATION	2.9556434549376025E-7	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999997824459386	WITHOUT_CLASSIFICATION	2.1755406149940165E-7	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999962660023469	WITHOUT_CLASSIFICATION	3.733997653176528E-6	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999993506143552	WITHOUT_CLASSIFICATION	6.49385644784276E-7	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999984244802946	WITHOUT_CLASSIFICATION	1.575519705423949E-6	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999991297559945	WITHOUT_CLASSIFICATION	8.702440055171539E-7	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999999923545677	WITHOUT_CLASSIFICATION	7.645432294302162E-9	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9999950600629608	WITHOUT_CLASSIFICATION	4.939937039140731E-6	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999999699288655	WITHOUT_CLASSIFICATION	3.0071134488444475E-8	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999953317927008	WITHOUT_CLASSIFICATION	4.6682072991546385E-6	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999978482088506	WITHOUT_CLASSIFICATION	2.1517911493730556E-6	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9999956595595538	WITHOUT_CLASSIFICATION	4.340440446145184E-6	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999996327516468	WITHOUT_CLASSIFICATION	3.672483531322759E-7	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999991468247417	WITHOUT_CLASSIFICATION	8.531752583302961E-7	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999927597754054	WITHOUT_CLASSIFICATION	7.2402245946595056E-6	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999883692380819	WITHOUT_CLASSIFICATION	1.163076191816013E-5	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999994890758629	WITHOUT_CLASSIFICATION	5.109241370355475E-7	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999998822446573	WITHOUT_CLASSIFICATION	1.1775534266581286E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999999236437246	WITHOUT_CLASSIFICATION	7.635627540106951E-8	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999973168521216	WITHOUT_CLASSIFICATION	2.6831478783864063E-6	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999708096633046	WITHOUT_CLASSIFICATION	2.9190336695338283E-5	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9996583364000249	WITHOUT_CLASSIFICATION	3.4166359997510944E-4	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9999993736305663	WITHOUT_CLASSIFICATION	6.263694336682548E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999891464514319	WITHOUT_CLASSIFICATION	1.085354856803471E-5	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9999983662694837	WITHOUT_CLASSIFICATION	1.633730516360957E-6	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999964608604399	WITHOUT_CLASSIFICATION	3.539139560014139E-6	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999978753798915	WITHOUT_CLASSIFICATION	2.124620108582494E-6	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999999094988663	WITHOUT_CLASSIFICATION	9.050113375730504E-8	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.999999894746268	WITHOUT_CLASSIFICATION	1.0525373201076035E-7	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999997220048011	WITHOUT_CLASSIFICATION	2.779951988883903E-7	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999994765464337	WITHOUT_CLASSIFICATION	5.234535663122383E-7	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999993300051123	WITHOUT_CLASSIFICATION	6.699948876780495E-7	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.9999955321317269	WITHOUT_CLASSIFICATION	4.467868273136064E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999961253103145	WITHOUT_CLASSIFICATION	3.874689685491712E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999961253103145	WITHOUT_CLASSIFICATION	3.874689685491712E-6	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999959284178882	WITHOUT_CLASSIFICATION	4.071582111795872E-6	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9999974493762948	WITHOUT_CLASSIFICATION	2.550623705254039E-6	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999995845598056	WITHOUT_CLASSIFICATION	4.154401943847299E-7	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999972667700915	WITHOUT_CLASSIFICATION	2.73322990851261E-6	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.999999454783048	WITHOUT_CLASSIFICATION	5.45216952068525E-7	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999975682971243	WITHOUT_CLASSIFICATION	2.431702875692814E-6	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999988103185382	WITHOUT_CLASSIFICATION	1.1896814617287135E-6	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999999835787173	WITHOUT_CLASSIFICATION	1.6421282666941966E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9999933691923145	WITHOUT_CLASSIFICATION	6.630807685417576E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.999999972265375	WITHOUT_CLASSIFICATION	2.773462509488327E-8	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999999833590704	WITHOUT_CLASSIFICATION	1.664092959133193E-8	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9999997964133713	WITHOUT_CLASSIFICATION	2.0358662863267375E-7	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999991961436929	WITHOUT_CLASSIFICATION	8.038563071053455E-7	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999993466190282	WITHOUT_CLASSIFICATION	6.533809718945938E-7	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999999181352978	WITHOUT_CLASSIFICATION	8.1864702196883E-8	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999903941083887	WITHOUT_CLASSIFICATION	9.605891611126783E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999903941083887	WITHOUT_CLASSIFICATION	9.605891611126783E-6	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999991630475792	WITHOUT_CLASSIFICATION	8.369524208463097E-7	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999985625320281	WITHOUT_CLASSIFICATION	1.437467971958955E-6	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999998855818472	WITHOUT_CLASSIFICATION	1.144181528557168E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999999247769864	WITHOUT_CLASSIFICATION	7.522301368778234E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224069685	WITHOUT_CLASSIFICATION	1.1917759303148885E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999267748080627	WITHOUT_CLASSIFICATION	7.322519193725074E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999995103759785	WITHOUT_CLASSIFICATION	4.896240215990951E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999971836836201	WITHOUT_CLASSIFICATION	2.816316379895245E-6	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999971836836201	WITHOUT_CLASSIFICATION	2.816316379895245E-6	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999995486049634	WITHOUT_CLASSIFICATION	4.5139503657515456E-7	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999999925828827	WITHOUT_CLASSIFICATION	7.417117254603808E-9	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999991886608086	WITHOUT_CLASSIFICATION	8.113391912994977E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999998965643393	WITHOUT_CLASSIFICATION	1.0343566074708874E-7	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9999978411678182	WITHOUT_CLASSIFICATION	2.1588321816928604E-6	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999610211592531	WITHOUT_CLASSIFICATION	3.8978840746796454E-5	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999998228630793	WITHOUT_CLASSIFICATION	1.7713692068966877E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999997454075521	WITHOUT_CLASSIFICATION	2.5459244788700495E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999995799122041	WITHOUT_CLASSIFICATION	4.200877958646482E-7	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9999991571705947	WITHOUT_CLASSIFICATION	8.428294052758201E-7	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999996081942167	WITHOUT_CLASSIFICATION	3.918057833227659E-7	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999960147070008	WITHOUT_CLASSIFICATION	3.9852929991868905E-6	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999999185925769	WITHOUT_CLASSIFICATION	8.140742310352181E-8	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999986905325109	WITHOUT_CLASSIFICATION	1.309467489108946E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999927538711123	WITHOUT_CLASSIFICATION	7.246128887782859E-6	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999993221417934	WITHOUT_CLASSIFICATION	6.778582065592009E-7	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999993613663329	WITHOUT_CLASSIFICATION	6.386336669652807E-7	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999897930158781	WITHOUT_CLASSIFICATION	1.0206984121953829E-5	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999993307082659	WITHOUT_CLASSIFICATION	6.692917340644332E-7	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999995507849475	WITHOUT_CLASSIFICATION	4.4921505259008E-7	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999994534306296	WITHOUT_CLASSIFICATION	5.465693703192226E-7	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999979035763131	WITHOUT_CLASSIFICATION	2.096423686745912E-6	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999998131415861	WITHOUT_CLASSIFICATION	1.8685841380398497E-7	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999997855168559	WITHOUT_CLASSIFICATION	2.1448314415832594E-7	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999995718798412	WITHOUT_CLASSIFICATION	4.2812015873287645E-7	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999985164057689	WITHOUT_CLASSIFICATION	1.4835942311485865E-6	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999997394261889	WITHOUT_CLASSIFICATION	2.605738111261007E-7	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999996355376419	WITHOUT_CLASSIFICATION	3.6446235804345644E-7	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999999197902278	WITHOUT_CLASSIFICATION	8.020977222493173E-8	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999440663596	WITHOUT_CLASSIFICATION	5.593364033499952E-8	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9999832614717562	WITHOUT_CLASSIFICATION	1.6738528243810576E-5	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9999918998929529	WITHOUT_CLASSIFICATION	8.100107047213394E-6	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999999139581454	WITHOUT_CLASSIFICATION	8.60418546555164E-8	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999985051796636	WITHOUT_CLASSIFICATION	1.4948203363506193E-6	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999978348815797	WITHOUT_CLASSIFICATION	2.1651184202833356E-6	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999916192742595	WITHOUT_CLASSIFICATION	8.380725740586802E-6	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.9999939369488979	WITHOUT_CLASSIFICATION	6.063051102081879E-6	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.9999992965241422	WITHOUT_CLASSIFICATION	7.034758578702552E-7	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999979979946726	WITHOUT_CLASSIFICATION	2.0020053273973233E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999955935372529	WITHOUT_CLASSIFICATION	4.406462747104527E-6	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999998454804968	WITHOUT_CLASSIFICATION	1.5451950321585532E-7	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999990417435283	WITHOUT_CLASSIFICATION	9.582564716926758E-7	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999926619253136	WITHOUT_CLASSIFICATION	7.3380746864527696E-6	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999994526898645	WITHOUT_CLASSIFICATION	5.473101355024272E-7	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999998830454649	WITHOUT_CLASSIFICATION	1.1695453495371032E-7	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999996133706989	WITHOUT_CLASSIFICATION	3.8662930111536697E-7	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999979979946726	WITHOUT_CLASSIFICATION	2.0020053273973233E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999955935372529	WITHOUT_CLASSIFICATION	4.406462747104527E-6	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999999319456195	WITHOUT_CLASSIFICATION	6.805438046794814E-8	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9999469972037163	WITHOUT_CLASSIFICATION	5.300279628372549E-5	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999970522496759	WITHOUT_CLASSIFICATION	2.9477503240218604E-6	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999999551003849	WITHOUT_CLASSIFICATION	4.4899615199074347E-8	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.999999501237176	WITHOUT_CLASSIFICATION	4.987628241456481E-7	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999999435449991	WITHOUT_CLASSIFICATION	5.6455000863600705E-8	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999938767028373	WITHOUT_CLASSIFICATION	6.123297162712787E-6	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9999920943194565	WITHOUT_CLASSIFICATION	7.905680543460965E-6	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999923142096708	WITHOUT_CLASSIFICATION	7.68579032923028E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.999979346923966	WITHOUT_CLASSIFICATION	2.0653076034084004E-5	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999998302435631	WITHOUT_CLASSIFICATION	1.697564368535216E-7	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.999979346923966	WITHOUT_CLASSIFICATION	2.0653076034084004E-5	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999999890623231	WITHOUT_CLASSIFICATION	1.0937677017962352E-8	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999946652646597	WITHOUT_CLASSIFICATION	5.334735340227108E-6	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999999794339204	WITHOUT_CLASSIFICATION	2.0566079645063916E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991340020805	WITHOUT_CLASSIFICATION	8.659979194837741E-7	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999987522002647	WITHOUT_CLASSIFICATION	1.2477997353417424E-6	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9998613133874802	WITHOUT_CLASSIFICATION	1.3868661251981306E-4	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9998613133874802	WITHOUT_CLASSIFICATION	1.3868661251981306E-4	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999996559809585	WITHOUT_CLASSIFICATION	3.4401904142101364E-7	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9999996997828976	WITHOUT_CLASSIFICATION	3.002171024531935E-7	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999996145115116	WITHOUT_CLASSIFICATION	3.854884883479019E-7	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999894349270726	WITHOUT_CLASSIFICATION	1.0565072927428346E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9999760543848688	WITHOUT_CLASSIFICATION	2.3945615131245178E-5	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9999998615873501	WITHOUT_CLASSIFICATION	1.3841264984168193E-7	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999967494975979	WITHOUT_CLASSIFICATION	3.2505024022293855E-6	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999992997953648	WITHOUT_CLASSIFICATION	7.002046352359236E-7	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999929129237243	WITHOUT_CLASSIFICATION	7.087076275676858E-6	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9999663158707375	WITHOUT_CLASSIFICATION	3.368412926257237E-5	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.9999808053960649	WITHOUT_CLASSIFICATION	1.919460393504446E-5	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9999804136315771	WITHOUT_CLASSIFICATION	1.9586368422921686E-5	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9999360254602707	WITHOUT_CLASSIFICATION	6.397453972926322E-5	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999990926770339	WITHOUT_CLASSIFICATION	9.073229661249877E-7	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9999964449125599	WITHOUT_CLASSIFICATION	3.555087440200061E-6	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.999998185632365	WITHOUT_CLASSIFICATION	1.8143676350088358E-6	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999996851965948	WITHOUT_CLASSIFICATION	3.148034052669539E-7	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999988044675836	WITHOUT_CLASSIFICATION	1.1955324163856093E-6	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999998574302571	WITHOUT_CLASSIFICATION	1.4256974296792522E-7	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.99991872528387	WITHOUT_CLASSIFICATION	8.127471613002049E-5	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999982922196139	WITHOUT_CLASSIFICATION	1.7077803860585954E-6	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999883652415553	WITHOUT_CLASSIFICATION	1.1634758444567507E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999992875404456	WITHOUT_CLASSIFICATION	7.12459554444817E-7	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9999981094181805	WITHOUT_CLASSIFICATION	1.8905818195577013E-6	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999988418352781	WITHOUT_CLASSIFICATION	1.1581647218228711E-6	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9999575681054038	WITHOUT_CLASSIFICATION	4.243189459616174E-5	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9999996210497942	WITHOUT_CLASSIFICATION	3.7895020577238514E-7	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9999963534031955	WITHOUT_CLASSIFICATION	3.646596804556495E-6	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9999987283804862	WITHOUT_CLASSIFICATION	1.2716195138382176E-6	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999984372345854	WITHOUT_CLASSIFICATION	1.5627654145799272E-6	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.9999982916847073	WITHOUT_CLASSIFICATION	1.7083152925854279E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.99999607350853	WITHOUT_CLASSIFICATION	3.926491469955456E-6	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999967494975979	WITHOUT_CLASSIFICATION	3.2505024022293855E-6	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999998345753838	WITHOUT_CLASSIFICATION	1.6542461614742306E-7	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.9999781995051095	WITHOUT_CLASSIFICATION	2.1800494890528658E-5	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9994833183063603	WITHOUT_CLASSIFICATION	5.166816936397572E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9999896333097459	WITHOUT_CLASSIFICATION	1.036669025411542E-5	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999997022381623	WITHOUT_CLASSIFICATION	2.977618377318991E-7	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999891642819244	WITHOUT_CLASSIFICATION	1.0835718075637524E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999894349270726	WITHOUT_CLASSIFICATION	1.0565072927428346E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999894349270726	WITHOUT_CLASSIFICATION	1.0565072927428346E-5	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999954498301717	WITHOUT_CLASSIFICATION	4.550169828327711E-6	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999987212814159	WITHOUT_CLASSIFICATION	1.2787185841633988E-6	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.9999894177552315	WITHOUT_CLASSIFICATION	1.0582244768527525E-5	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999984434493336	WITHOUT_CLASSIFICATION	1.5565506662604807E-6	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9999993324599762	WITHOUT_CLASSIFICATION	6.675400238699785E-7	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999997994123727	WITHOUT_CLASSIFICATION	2.0058762723349246E-7	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999992679783601	WITHOUT_CLASSIFICATION	7.320216398823284E-7	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999998108248781	WITHOUT_CLASSIFICATION	1.8917512181938737E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.999992647508647	WITHOUT_CLASSIFICATION	7.352491352982211E-6	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.999999761713182	WITHOUT_CLASSIFICATION	2.3828681818453946E-7	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9999977218599984	WITHOUT_CLASSIFICATION	2.27814000156986E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998793615066861	WITHOUT_CLASSIFICATION	1.2063849331393875E-4	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9999854903545696	WITHOUT_CLASSIFICATION	1.4509645430464907E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.999999761713182	WITHOUT_CLASSIFICATION	2.3828681818453946E-7	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999931140017345	WITHOUT_CLASSIFICATION	6.885998265520088E-6	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999998956197382	WITHOUT_CLASSIFICATION	1.0438026177359802E-7	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999958435481882	WITHOUT_CLASSIFICATION	4.156451811815431E-6	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9947452381664694	WITHOUT_CLASSIFICATION	0.0052547618335305295	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998793615066861	WITHOUT_CLASSIFICATION	1.2063849331393875E-4	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999947144132744	WITHOUT_CLASSIFICATION	5.285586725646618E-6	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999989130077326	WITHOUT_CLASSIFICATION	1.0869922674182222E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998860145427	WITHOUT_CLASSIFICATION	1.139854573228006E-7	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999998721409347	WITHOUT_CLASSIFICATION	1.278590653457079E-7	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9998911830435796	WITHOUT_CLASSIFICATION	1.0881695642035605E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.999999053430501	WITHOUT_CLASSIFICATION	9.465694991120531E-7	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999997763096452	WITHOUT_CLASSIFICATION	2.236903548612745E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999923497715945	WITHOUT_CLASSIFICATION	7.65022840566431E-6	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.999999853926563	WITHOUT_CLASSIFICATION	1.4607343706631568E-7	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999998050057511	WITHOUT_CLASSIFICATION	1.94994248896602E-7	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999994814375287	WITHOUT_CLASSIFICATION	5.185624713142291E-7	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9999469469410354	WITHOUT_CLASSIFICATION	5.305305896451763E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.999999761713182	WITHOUT_CLASSIFICATION	2.3828681818453946E-7	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999947144132744	WITHOUT_CLASSIFICATION	5.285586725646618E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998860145427	WITHOUT_CLASSIFICATION	1.139854573228006E-7	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999948772830507	WITHOUT_CLASSIFICATION	5.12271694936205E-6	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999998828262073	WITHOUT_CLASSIFICATION	1.1717379263005643E-7	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999992785161234	WITHOUT_CLASSIFICATION	7.214838765793825E-7	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9998793615066861	WITHOUT_CLASSIFICATION	1.2063849331393875E-4	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9999984009845942	WITHOUT_CLASSIFICATION	1.5990154056704242E-6	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999911587988864	WITHOUT_CLASSIFICATION	8.841201113567894E-6	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999830969455875	WITHOUT_CLASSIFICATION	1.690305441249914E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.999984016951114	WITHOUT_CLASSIFICATION	1.5983048885896242E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999923497715945	WITHOUT_CLASSIFICATION	7.65022840566431E-6	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999931140017345	WITHOUT_CLASSIFICATION	6.885998265520088E-6	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.9999920354038527	WITHOUT_CLASSIFICATION	7.964596147309325E-6	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999966996436486	WITHOUT_CLASSIFICATION	3.3003563515489057E-6	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9999930179837048	WITHOUT_CLASSIFICATION	6.982016295212606E-6	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9999959023368509	WITHOUT_CLASSIFICATION	4.097663149094591E-6	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9999835305373069	WITHOUT_CLASSIFICATION	1.646946269316058E-5	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9999630231129508	WITHOUT_CLASSIFICATION	3.697688704923717E-5	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9999876230937605	WITHOUT_CLASSIFICATION	1.23769062394381E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991340020805	WITHOUT_CLASSIFICATION	8.659979194837741E-7	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998990735433	WITHOUT_CLASSIFICATION	1.0092645674041395E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164878572	WITHOUT_CLASSIFICATION	2.308351214277571E-5	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999982105453975	WITHOUT_CLASSIFICATION	1.789454602471853E-6	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999245994202016	WITHOUT_CLASSIFICATION	7.540057979830396E-5	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999765475423419	WITHOUT_CLASSIFICATION	2.345245765819192E-5	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999919801679769	WITHOUT_CLASSIFICATION	8.01983202316591E-6	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999997745149402	WITHOUT_CLASSIFICATION	2.2548505994333042E-7	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.999998784354156	WITHOUT_CLASSIFICATION	1.2156458440066025E-6	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999996609634982	WITHOUT_CLASSIFICATION	3.3903650166986463E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.999984016951114	WITHOUT_CLASSIFICATION	1.5983048885896242E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164878572	WITHOUT_CLASSIFICATION	2.308351214277571E-5	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999923838687581	WITHOUT_CLASSIFICATION	7.6161312418581985E-6	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9999943670486084	WITHOUT_CLASSIFICATION	5.632951391534347E-6	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.999954942349311	WITHOUT_CLASSIFICATION	4.505765068887201E-5	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.999986304048754	WITHOUT_CLASSIFICATION	1.3695951246026979E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9999714650401517	WITHOUT_CLASSIFICATION	2.8534959848263142E-5	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999997715432379	WITHOUT_CLASSIFICATION	2.284567620048905E-7	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999980649121472	WITHOUT_CLASSIFICATION	1.93508785282682E-6	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9999929950827354	WITHOUT_CLASSIFICATION	7.004917264632347E-6	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999998881708223	WITHOUT_CLASSIFICATION	1.1182917774800059E-7	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999977469532051	WITHOUT_CLASSIFICATION	2.253046794774794E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999977132768922	WITHOUT_CLASSIFICATION	2.286723107752243E-6	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999990250729928	WITHOUT_CLASSIFICATION	9.7492700726879E-7	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9999997801685844	WITHOUT_CLASSIFICATION	2.198314156422766E-7	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9999973646635711	WITHOUT_CLASSIFICATION	2.635336428777776E-6	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9999927972459951	WITHOUT_CLASSIFICATION	7.202754005007403E-6	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999990125003033	WITHOUT_CLASSIFICATION	9.874996967669488E-7	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9999982012001627	WITHOUT_CLASSIFICATION	1.7987998372301452E-6	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999804527829216	WITHOUT_CLASSIFICATION	1.9547217078387154E-5	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999993300594867	WITHOUT_CLASSIFICATION	6.69940513325916E-7	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9999842960514632	WITHOUT_CLASSIFICATION	1.5703948536832933E-5	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999946159461847	WITHOUT_CLASSIFICATION	5.38405381527991E-6	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999995495826377	WITHOUT_CLASSIFICATION	4.5041736234332685E-7	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999998594688857	WITHOUT_CLASSIFICATION	1.405311142680959E-7	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999997495922343	WITHOUT_CLASSIFICATION	2.504077657415474E-7	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999998969966357	WITHOUT_CLASSIFICATION	1.0300336433177523E-7	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.9993379164329329	WITHOUT_CLASSIFICATION	6.620835670670831E-4	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999971502519088	WITHOUT_CLASSIFICATION	2.849748091080877E-6	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999914287575661	WITHOUT_CLASSIFICATION	8.57124243386547E-6	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999999235357332	WITHOUT_CLASSIFICATION	7.646426678143706E-8	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.999193719722214	WITHOUT_CLASSIFICATION	8.06280277785927E-4	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999982508377719	WITHOUT_CLASSIFICATION	1.7491622279889834E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999939429180692	WITHOUT_CLASSIFICATION	6.057081930870947E-6	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999991458559532	WITHOUT_CLASSIFICATION	8.541440469536936E-7	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999998498440632	WITHOUT_CLASSIFICATION	1.501559369112057E-7	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999998987571527	WITHOUT_CLASSIFICATION	1.0124284737447533E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999960003236378	WITHOUT_CLASSIFICATION	3.999676362200516E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.999996224292951	WITHOUT_CLASSIFICATION	3.7757070491037515E-6	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999996494213761	WITHOUT_CLASSIFICATION	3.505786239034972E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999960003236378	WITHOUT_CLASSIFICATION	3.999676362200516E-6	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999998987571527	WITHOUT_CLASSIFICATION	1.0124284737447533E-7	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.999996224292951	WITHOUT_CLASSIFICATION	3.7757070491037515E-6	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.999993099048275	WITHOUT_CLASSIFICATION	6.9009517249753215E-6	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999986855962457	WITHOUT_CLASSIFICATION	1.3144037542507833E-6	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999999857184535	WITHOUT_CLASSIFICATION	1.4281546406113258E-8	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9999985928622093	WITHOUT_CLASSIFICATION	1.4071377907091842E-6	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999999348651899	WITHOUT_CLASSIFICATION	6.513481009066015E-8	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9999884714228945	WITHOUT_CLASSIFICATION	1.1528577105560182E-5	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.999997064234142	WITHOUT_CLASSIFICATION	2.935765858056146E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999872891964584	WITHOUT_CLASSIFICATION	1.27108035415189E-5	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9999993137640262	WITHOUT_CLASSIFICATION	6.862359737403711E-7	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999991429546864	WITHOUT_CLASSIFICATION	8.570453136084169E-7	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999990499946687	WITHOUT_CLASSIFICATION	9.500053314012382E-7	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999985391869742	WITHOUT_CLASSIFICATION	1.460813025673659E-6	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999991447194881	WITHOUT_CLASSIFICATION	8.552805119229326E-7	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9999890620610193	WITHOUT_CLASSIFICATION	1.0937938980643548E-5	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.999999362557727	WITHOUT_CLASSIFICATION	6.37442273089715E-7	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999999368381578	WITHOUT_CLASSIFICATION	6.316184224046477E-8	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999995583468332	WITHOUT_CLASSIFICATION	4.4165316680412155E-7	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999999546840659	WITHOUT_CLASSIFICATION	4.531593417397506E-8	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999998927644299	WITHOUT_CLASSIFICATION	1.0723557009123775E-7	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999940581093456	WITHOUT_CLASSIFICATION	5.941890654439292E-6	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9999985498678459	WITHOUT_CLASSIFICATION	1.4501321541589242E-6	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999995649884251	WITHOUT_CLASSIFICATION	4.350115748134803E-7	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999993461927523	WITHOUT_CLASSIFICATION	6.53807247625238E-7	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999998576919267	WITHOUT_CLASSIFICATION	1.423080733711849E-7	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999952760569154	WITHOUT_CLASSIFICATION	4.723943084529508E-6	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999952760569154	WITHOUT_CLASSIFICATION	4.723943084529508E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999023478413	WITHOUT_CLASSIFICATION	9.765215877321081E-8	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999999023478413	WITHOUT_CLASSIFICATION	9.765215877321081E-8	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.9999996296841843	WITHOUT_CLASSIFICATION	3.7031581560927536E-7	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999995583468332	WITHOUT_CLASSIFICATION	4.4165316680412155E-7	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9999455464657568	WITHOUT_CLASSIFICATION	5.445353424314302E-5	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999999115786807	WITHOUT_CLASSIFICATION	8.842131921031083E-8	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999756987032881	WITHOUT_CLASSIFICATION	2.430129671195889E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999756987032881	WITHOUT_CLASSIFICATION	2.430129671195889E-5	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999964630233231	WITHOUT_CLASSIFICATION	3.5369766767567607E-6	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999997713383	WITHOUT_CLASSIFICATION	2.2866170000993465E-7	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999998226540252	WITHOUT_CLASSIFICATION	1.7734597480593066E-7	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999994194144605	WITHOUT_CLASSIFICATION	5.805855395355438E-7	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999992156849973	WITHOUT_CLASSIFICATION	7.843150027783365E-7	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999999580008102	WITHOUT_CLASSIFICATION	4.199918992283424E-8	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9999907583584099	WITHOUT_CLASSIFICATION	9.241641590101688E-6	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999997670863175	WITHOUT_CLASSIFICATION	2.329136824652454E-7	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9999955818342916	WITHOUT_CLASSIFICATION	4.418165708436728E-6	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999864201876953	WITHOUT_CLASSIFICATION	1.3579812304549495E-5	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999994237980667	WITHOUT_CLASSIFICATION	5.762019333816239E-7	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9999990920434352	WITHOUT_CLASSIFICATION	9.079565648500768E-7	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999993570730132	WITHOUT_CLASSIFICATION	6.429269866750464E-7	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999949739845221	WITHOUT_CLASSIFICATION	5.02601547793817E-6	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.999991649232042	WITHOUT_CLASSIFICATION	8.35076795804481E-6	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999995239505445	WITHOUT_CLASSIFICATION	4.760494554150284E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971228127675	WITHOUT_CLASSIFICATION	2.8771872324670235E-6	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999974526845997	WITHOUT_CLASSIFICATION	2.5473154002733885E-6	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999999920471688	WITHOUT_CLASSIFICATION	7.952831144070462E-9	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999998951551774	WITHOUT_CLASSIFICATION	1.0484482260325758E-7	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999998214736718	WITHOUT_CLASSIFICATION	1.7852632810011108E-7	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999998327658143	WITHOUT_CLASSIFICATION	1.672341858245802E-7	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999992951379459	WITHOUT_CLASSIFICATION	7.048620541391351E-7	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999990060383808	WITHOUT_CLASSIFICATION	9.939616192578145E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998450466049889	WITHOUT_CLASSIFICATION	1.5495339501124948E-4	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999978811977395	WITHOUT_CLASSIFICATION	2.1188022606168527E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164878572	WITHOUT_CLASSIFICATION	2.308351214277571E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999990250729928	WITHOUT_CLASSIFICATION	9.7492700726879E-7	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999883035438503	WITHOUT_CLASSIFICATION	1.1696456149708315E-5	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999997197759456	WITHOUT_CLASSIFICATION	2.8022405431396107E-7	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999934135856239	WITHOUT_CLASSIFICATION	6.58641437622042E-6	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998769151315	WITHOUT_CLASSIFICATION	1.2308486849137814E-6	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999765678724146	WITHOUT_CLASSIFICATION	2.3432127585328324E-5	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999765678724146	WITHOUT_CLASSIFICATION	2.3432127585328324E-5	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999998915644223	WITHOUT_CLASSIFICATION	1.0843557764215257E-7	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999977475008754	WITHOUT_CLASSIFICATION	2.252499124485527E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999973335242442	WITHOUT_CLASSIFICATION	2.6664757557606754E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999973335242442	WITHOUT_CLASSIFICATION	2.6664757557606754E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999996950915139	WITHOUT_CLASSIFICATION	3.049084860650767E-7	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9999603502481724	WITHOUT_CLASSIFICATION	3.964975182765459E-5	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9999798690403758	WITHOUT_CLASSIFICATION	2.0130959624223362E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999980556132115	WITHOUT_CLASSIFICATION	1.944386788459111E-6	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.9999940464223127	WITHOUT_CLASSIFICATION	5.953577687315054E-6	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999976952925255	WITHOUT_CLASSIFICATION	2.3047074745508822E-6	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999993790340181	WITHOUT_CLASSIFICATION	6.20965981929661E-7	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999992429430037	WITHOUT_CLASSIFICATION	7.570569962787271E-7	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999993307039342	WITHOUT_CLASSIFICATION	6.69296065757158E-7	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999993307039342	WITHOUT_CLASSIFICATION	6.69296065757158E-7	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999999938728596	WITHOUT_CLASSIFICATION	6.1271403307024364E-9	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.999999814942248	WITHOUT_CLASSIFICATION	1.850577519777094E-7	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.999999814942248	WITHOUT_CLASSIFICATION	1.850577519777094E-7	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999992726873388	WITHOUT_CLASSIFICATION	7.273126613324433E-7	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999986561250759	WITHOUT_CLASSIFICATION	1.3438749241733373E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9969178208460916	WITHOUT_CLASSIFICATION	0.0030821791539084402	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999998237992345	WITHOUT_CLASSIFICATION	1.7620076540737218E-7	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999997927672867	WITHOUT_CLASSIFICATION	2.072327132855369E-7	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999993397230801	WITHOUT_CLASSIFICATION	6.602769199689258E-7	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999917689811374	WITHOUT_CLASSIFICATION	8.231018862557991E-6	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999992100209257	WITHOUT_CLASSIFICATION	7.899790743686056E-7	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999977317080838	WITHOUT_CLASSIFICATION	2.268291916173726E-6	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9999988682913683	WITHOUT_CLASSIFICATION	1.1317086317242716E-6	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999999998281273	WITHOUT_CLASSIFICATION	1.7187270105453571E-9	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9999998207262533	WITHOUT_CLASSIFICATION	1.7927374664918498E-7	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999943762800277	WITHOUT_CLASSIFICATION	5.62371997215139E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999943762800277	WITHOUT_CLASSIFICATION	5.62371997215139E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999943762800277	WITHOUT_CLASSIFICATION	5.62371997215139E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999943762800277	WITHOUT_CLASSIFICATION	5.62371997215139E-6	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999964692357788	WITHOUT_CLASSIFICATION	3.5307642212968785E-6	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999996776321594	WITHOUT_CLASSIFICATION	3.223678406282702E-7	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9999766708899428	WITHOUT_CLASSIFICATION	2.332911005721016E-5	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.9999605252385417	WITHOUT_CLASSIFICATION	3.947476145820204E-5	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999989631058567	WITHOUT_CLASSIFICATION	1.0368941433426473E-6	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9999971645164831	WITHOUT_CLASSIFICATION	2.8354835168424023E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224069685	WITHOUT_CLASSIFICATION	1.1917759303148885E-4	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999997123749541	WITHOUT_CLASSIFICATION	2.876250458850321E-7	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999794690027007	WITHOUT_CLASSIFICATION	2.0530997299254676E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224069685	WITHOUT_CLASSIFICATION	1.1917759303148885E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224069685	WITHOUT_CLASSIFICATION	1.1917759303148885E-4	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999999153329716	WITHOUT_CLASSIFICATION	8.46670283222256E-8	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999890028377335	WITHOUT_CLASSIFICATION	1.0997162266547248E-5	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999983012212339	WITHOUT_CLASSIFICATION	1.6987787660950146E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999994738154	WITHOUT_CLASSIFICATION	5.261846000703714E-7	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999989300239688	WITHOUT_CLASSIFICATION	1.069976031129509E-6	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999929238754719	WITHOUT_CLASSIFICATION	7.076124528080603E-6	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999974924340049	WITHOUT_CLASSIFICATION	2.5075659951445524E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999994738154	WITHOUT_CLASSIFICATION	5.261846000703714E-7	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9999949135435086	WITHOUT_CLASSIFICATION	5.086456491451795E-6	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999995699131343	WITHOUT_CLASSIFICATION	4.300868656243754E-7	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.999991606415815	WITHOUT_CLASSIFICATION	8.393584184933745E-6	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999905499959356	WITHOUT_CLASSIFICATION	9.450004064258039E-6	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999968643935223	WITHOUT_CLASSIFICATION	3.1356064776730708E-6	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9999998628448813	WITHOUT_CLASSIFICATION	1.3715511862535131E-7	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999999404993518	WITHOUT_CLASSIFICATION	5.950064821726598E-8	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9999976142722216	WITHOUT_CLASSIFICATION	2.3857277784083377E-6	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998862536307	WITHOUT_CLASSIFICATION	1.1374636931081422E-7	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999994380506273	WITHOUT_CLASSIFICATION	5.61949372813909E-7	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998490863029	WITHOUT_CLASSIFICATION	1.509136970334993E-7	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999992123207393	WITHOUT_CLASSIFICATION	7.876792606685151E-7	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999972321253621	WITHOUT_CLASSIFICATION	2.767874637875693E-6	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.999830538270007	WITHOUT_CLASSIFICATION	1.6946172999307034E-4	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.999999923004947	WITHOUT_CLASSIFICATION	7.699505298790601E-8	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9999969922914044	WITHOUT_CLASSIFICATION	3.007708595661553E-6	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999998229213873	WITHOUT_CLASSIFICATION	1.7707861270019943E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999991803888879	WITHOUT_CLASSIFICATION	8.196111121326088E-7	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999998502953926	WITHOUT_CLASSIFICATION	1.497046073440029E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999991803888879	WITHOUT_CLASSIFICATION	8.196111121326088E-7	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999999125390798	WITHOUT_CLASSIFICATION	8.746092019597778E-8	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999999165086614	WITHOUT_CLASSIFICATION	8.349133858974213E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999974031053869	WITHOUT_CLASSIFICATION	2.5968946131906556E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999792831397873	WITHOUT_CLASSIFICATION	2.0716860212610517E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999998229213873	WITHOUT_CLASSIFICATION	1.7707861270019943E-7	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999998502953926	WITHOUT_CLASSIFICATION	1.497046073440029E-7	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999999125390798	WITHOUT_CLASSIFICATION	8.746092019597778E-8	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999997391498384	WITHOUT_CLASSIFICATION	2.6085016162036657E-7	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9999882050629206	WITHOUT_CLASSIFICATION	1.179493707947713E-5	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.9999979129085301	WITHOUT_CLASSIFICATION	2.087091469882096E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9999978957253602	WITHOUT_CLASSIFICATION	2.1042746397965395E-6	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.999999346122011	WITHOUT_CLASSIFICATION	6.538779890183337E-7	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.999998098687199	WITHOUT_CLASSIFICATION	1.9013128008802298E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971228127675	WITHOUT_CLASSIFICATION	2.8771872324670235E-6	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999999165086614	WITHOUT_CLASSIFICATION	8.349133858974213E-8	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999999545983378	WITHOUT_CLASSIFICATION	4.5401662257053876E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9999965713331823	WITHOUT_CLASSIFICATION	3.428666817614609E-6	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999992281938297	WITHOUT_CLASSIFICATION	7.718061703989097E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971228127675	WITHOUT_CLASSIFICATION	2.8771872324670235E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164878572	WITHOUT_CLASSIFICATION	2.308351214277571E-5	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999998072858212	WITHOUT_CLASSIFICATION	1.9271417889265343E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971228127675	WITHOUT_CLASSIFICATION	2.8771872324670235E-6	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.99999941590418	WITHOUT_CLASSIFICATION	5.840958199962028E-7	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999940494759882	WITHOUT_CLASSIFICATION	5.950524011738604E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164878572	WITHOUT_CLASSIFICATION	2.308351214277571E-5	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9999910862273078	WITHOUT_CLASSIFICATION	8.913772692157145E-6	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999997826329133	WITHOUT_CLASSIFICATION	2.1736708660980158E-7	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999995578823834	WITHOUT_CLASSIFICATION	4.4211761663807174E-7	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999969542835903	WITHOUT_CLASSIFICATION	3.0457164097010524E-6	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999986429937833	WITHOUT_CLASSIFICATION	1.357006216713671E-6	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999999340748132	WITHOUT_CLASSIFICATION	6.59251867873546E-8	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999992211482506	WITHOUT_CLASSIFICATION	7.788517493515408E-7	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9999897297738417	WITHOUT_CLASSIFICATION	1.0270226158157553E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999468347999475	WITHOUT_CLASSIFICATION	5.316520005242232E-5	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999989574077724	WITHOUT_CLASSIFICATION	1.042592227554621E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9969178208460916	WITHOUT_CLASSIFICATION	0.0030821791539084402	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9999907124806464	WITHOUT_CLASSIFICATION	9.287519353579436E-6	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9999958922923474	WITHOUT_CLASSIFICATION	4.1077076525823825E-6	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.999999168613453	WITHOUT_CLASSIFICATION	8.313865469836617E-7	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999868305122076	WITHOUT_CLASSIFICATION	1.3169487792362127E-5	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999997823795735	WITHOUT_CLASSIFICATION	2.1762042646539711E-7	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999999754960909	WITHOUT_CLASSIFICATION	2.4503909128187484E-8	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999999730697301	WITHOUT_CLASSIFICATION	2.6930269989564415E-8	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9999968351261775	WITHOUT_CLASSIFICATION	3.1648738224011197E-6	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999998646961459	WITHOUT_CLASSIFICATION	1.3530385412147798E-7	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999995911898918	WITHOUT_CLASSIFICATION	4.0881010825585095E-7	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9959265330884057	WITHOUT_CLASSIFICATION	0.004073466911594261	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999994207630483	WITHOUT_CLASSIFICATION	5.792369517319876E-7	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999989769626074	WITHOUT_CLASSIFICATION	1.023037392598349E-6	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999995145912721	WITHOUT_CLASSIFICATION	4.854087279509068E-7	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999972054625551	WITHOUT_CLASSIFICATION	2.7945374448181927E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9999186457595879	WITHOUT_CLASSIFICATION	8.135424041220137E-5	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999998884602188	WITHOUT_CLASSIFICATION	1.115397812106784E-7	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9999987457942576	WITHOUT_CLASSIFICATION	1.2542057423561886E-6	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999997984060509	WITHOUT_CLASSIFICATION	2.0159394896282526E-7	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9999910539494091	WITHOUT_CLASSIFICATION	8.946050590871919E-6	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999997917151122	WITHOUT_CLASSIFICATION	2.0828488785706076E-7	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9990817409282665	WITHOUT_CLASSIFICATION	9.182590717334637E-4	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999988179664097	WITHOUT_CLASSIFICATION	1.1820335903485174E-6	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999953407037072	WITHOUT_CLASSIFICATION	4.659296292727228E-6	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9999388414454197	WITHOUT_CLASSIFICATION	6.115855458032688E-5	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999606292001249	WITHOUT_CLASSIFICATION	3.9370799875219686E-5	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999997000398253	WITHOUT_CLASSIFICATION	2.9996017473085787E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.995066271043098	WITHOUT_CLASSIFICATION	0.004933728956902008	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999998847751386	WITHOUT_CLASSIFICATION	1.152248614238723E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164878572	WITHOUT_CLASSIFICATION	2.308351214277571E-5	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999996515418853	WITHOUT_CLASSIFICATION	3.4845811470156745E-7	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999580018718566	WITHOUT_CLASSIFICATION	4.199812814354419E-5	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999580018718566	WITHOUT_CLASSIFICATION	4.199812814354419E-5	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999999649838708	WITHOUT_CLASSIFICATION	3.5016129180604834E-8	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999999340748132	WITHOUT_CLASSIFICATION	6.59251867873546E-8	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9999919107679778	WITHOUT_CLASSIFICATION	8.089232022166513E-6	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999987916851687	WITHOUT_CLASSIFICATION	1.2083148312793056E-6	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999998341017151	WITHOUT_CLASSIFICATION	1.6589828486485708E-7	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999999923735383	WITHOUT_CLASSIFICATION	7.626461580972725E-9	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9999967490564251	WITHOUT_CLASSIFICATION	3.250943574834919E-6	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9998865637067695	WITHOUT_CLASSIFICATION	1.134362932304277E-4	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9999996467706773	WITHOUT_CLASSIFICATION	3.5322932260458355E-7	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9999999732940325	WITHOUT_CLASSIFICATION	2.6705967506784263E-8	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999998182388574	WITHOUT_CLASSIFICATION	1.8176114256828395E-7	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.9999997586883542	WITHOUT_CLASSIFICATION	2.4131164581096196E-7	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999999607036686	WITHOUT_CLASSIFICATION	3.929633132079361E-8	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999912088746374	WITHOUT_CLASSIFICATION	8.791125362609661E-6	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999995267557975	WITHOUT_CLASSIFICATION	4.7324420251497667E-7	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999911876644	WITHOUT_CLASSIFICATION	8.812335576166128E-9	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999991539142025	WITHOUT_CLASSIFICATION	8.460857976102309E-7	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999996977276002	WITHOUT_CLASSIFICATION	3.022723997545101E-7	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999972018603009	WITHOUT_CLASSIFICATION	2.7981396990921196E-6	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999998819556191	WITHOUT_CLASSIFICATION	1.1804438087720252E-7	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999999769114704	WITHOUT_CLASSIFICATION	2.3088529526121612E-8	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999992437152655	WITHOUT_CLASSIFICATION	7.562847344323952E-7	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999999611548286	WITHOUT_CLASSIFICATION	3.884517145270856E-8	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999998019810363	WITHOUT_CLASSIFICATION	1.9801896374061045E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.995066271043098	WITHOUT_CLASSIFICATION	0.004933728956902008	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999998613316081	WITHOUT_CLASSIFICATION	1.3866839178361307E-7	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999999049754426	WITHOUT_CLASSIFICATION	9.502455746639566E-8	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999997049805384	WITHOUT_CLASSIFICATION	2.9501946172790614E-7	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999956809110467	WITHOUT_CLASSIFICATION	4.3190889531939E-6	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.999989596718479	WITHOUT_CLASSIFICATION	1.0403281521006758E-5	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999999945935572	WITHOUT_CLASSIFICATION	5.406442896823945E-9	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.999985583224476	WITHOUT_CLASSIFICATION	1.4416775524080302E-5	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999991225701031	WITHOUT_CLASSIFICATION	8.774298967486317E-7	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999998598321168	WITHOUT_CLASSIFICATION	1.4016788313441247E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999988708068724	WITHOUT_CLASSIFICATION	1.1291931276251657E-6	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999998066674181	WITHOUT_CLASSIFICATION	1.9333258190768081E-7	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999870453935227	WITHOUT_CLASSIFICATION	1.2954606477283184E-5	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9999847420855322	WITHOUT_CLASSIFICATION	1.5257914467631601E-5	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999999608785017	WITHOUT_CLASSIFICATION	3.912149822790202E-8	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999994221994936	WITHOUT_CLASSIFICATION	5.778005064375776E-7	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999994221994936	WITHOUT_CLASSIFICATION	5.778005064375776E-7	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999977964370592	WITHOUT_CLASSIFICATION	2.2035629407761856E-6	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9999998901614578	WITHOUT_CLASSIFICATION	1.0983854216367551E-7	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9998362994184344	WITHOUT_CLASSIFICATION	1.6370058156549077E-4	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9998362994184344	WITHOUT_CLASSIFICATION	1.6370058156549077E-4	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999997609757958	WITHOUT_CLASSIFICATION	2.390242042897193E-7	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999922659729931	WITHOUT_CLASSIFICATION	7.734027006934001E-6	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.9999999932549027	WITHOUT_CLASSIFICATION	6.745097238594947E-9	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.999999881857697	WITHOUT_CLASSIFICATION	1.1814230296289768E-7	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984202053458	WITHOUT_CLASSIFICATION	1.5797946542962078E-6	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987986567948	WITHOUT_CLASSIFICATION	1.2013432052826045E-6	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999997597207787	WITHOUT_CLASSIFICATION	2.4027922126917316E-7	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999997597207787	WITHOUT_CLASSIFICATION	2.4027922126917316E-7	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999992732161748	WITHOUT_CLASSIFICATION	7.267838251544004E-7	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9999989473253926	WITHOUT_CLASSIFICATION	1.0526746073274816E-6	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999905011320883	WITHOUT_CLASSIFICATION	9.498867911595534E-6	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999991747681563	WITHOUT_CLASSIFICATION	8.252318438180757E-7	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999991747681563	WITHOUT_CLASSIFICATION	8.252318438180757E-7	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999988077041041	WITHOUT_CLASSIFICATION	1.192295895902009E-6	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999983869341682	WITHOUT_CLASSIFICATION	1.6130658317893848E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999999100294623	WITHOUT_CLASSIFICATION	8.997053764489761E-8	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999987166693808	WITHOUT_CLASSIFICATION	1.2833306192320424E-6	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999996542078319	WITHOUT_CLASSIFICATION	3.4579216816943126E-7	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999999191489476	WITHOUT_CLASSIFICATION	8.085105245774223E-8	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999997563647958	WITHOUT_CLASSIFICATION	2.4363520426458064E-7	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999995218771804	WITHOUT_CLASSIFICATION	4.781228194479001E-7	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999999792007841	WITHOUT_CLASSIFICATION	2.0799215899312948E-8	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999989292644137	WITHOUT_CLASSIFICATION	1.0707355862750027E-6	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9999941373789268	WITHOUT_CLASSIFICATION	5.8626210731859535E-6	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.99999991743552	WITHOUT_CLASSIFICATION	8.256448004685437E-8	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9999957781220652	WITHOUT_CLASSIFICATION	4.2218779348162255E-6	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.999999999461412	WITHOUT_CLASSIFICATION	5.385879760651033E-10	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999886380202108	WITHOUT_CLASSIFICATION	1.1361979789361842E-5	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999991064775825	WITHOUT_CLASSIFICATION	8.93522417414145E-7	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999991827446513	WITHOUT_CLASSIFICATION	8.172553486837055E-7	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999999464541537	WITHOUT_CLASSIFICATION	5.354584631998968E-8	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999984665021303	WITHOUT_CLASSIFICATION	1.5334978696944326E-6	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999989329283487	WITHOUT_CLASSIFICATION	1.0670716512746776E-6	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999995611476574	WITHOUT_CLASSIFICATION	4.388523426589762E-7	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999996182169555	WITHOUT_CLASSIFICATION	3.817830445425834E-7	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9999710543152577	WITHOUT_CLASSIFICATION	2.8945684742342327E-5	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999938365374912	WITHOUT_CLASSIFICATION	6.163462508837892E-6	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9999932914549394	WITHOUT_CLASSIFICATION	6.708545060625804E-6	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999986448799152	WITHOUT_CLASSIFICATION	1.3551200848603589E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999997054409037	WITHOUT_CLASSIFICATION	2.945590963973929E-7	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9999923842672835	WITHOUT_CLASSIFICATION	7.615732716415687E-6	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999987396332896	WITHOUT_CLASSIFICATION	1.2603667104380526E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999997237097584	WITHOUT_CLASSIFICATION	2.762902415345785E-7	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.999999893399097	WITHOUT_CLASSIFICATION	1.0660090305764022E-7	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999991600626318	WITHOUT_CLASSIFICATION	8.399373683106856E-7	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999995965245773	WITHOUT_CLASSIFICATION	4.034754227595657E-7	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9999243985630795	WITHOUT_CLASSIFICATION	7.560143692058627E-5	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999998378613827	WITHOUT_CLASSIFICATION	1.6213861738701865E-7	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9999949270720189	WITHOUT_CLASSIFICATION	5.072927981113331E-6	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9999806382396516	WITHOUT_CLASSIFICATION	1.9361760348392937E-5	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999998022622385	WITHOUT_CLASSIFICATION	1.977377615069563E-7	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999953025133056	WITHOUT_CLASSIFICATION	4.697486694401607E-6	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999997930326149	WITHOUT_CLASSIFICATION	2.069673851452136E-7	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999999739066329	WITHOUT_CLASSIFICATION	2.609336702837844E-8	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.999996237062633	WITHOUT_CLASSIFICATION	3.7629373671599636E-6	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999992827216228	WITHOUT_CLASSIFICATION	7.17278377233403E-7	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.9999991156293303	WITHOUT_CLASSIFICATION	8.843706697129831E-7	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.9999989235624646	WITHOUT_CLASSIFICATION	1.076437535390948E-6	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.999999638301866	WITHOUT_CLASSIFICATION	3.6169813403423397E-7	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.999998878613513	WITHOUT_CLASSIFICATION	1.1213864869872993E-6	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999994836898178	WITHOUT_CLASSIFICATION	5.16310182151559E-7	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999995729575883	WITHOUT_CLASSIFICATION	4.270424115961333E-7	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999991537955893	WITHOUT_CLASSIFICATION	8.462044106393836E-7	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999966915572926	WITHOUT_CLASSIFICATION	3.3084427074189806E-6	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999996785538467	WITHOUT_CLASSIFICATION	3.2144615328171763E-7	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999998522133127	WITHOUT_CLASSIFICATION	1.4778668735189592E-7	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.999999999104637	WITHOUT_CLASSIFICATION	8.953631029000607E-10	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999994712817022	WITHOUT_CLASSIFICATION	5.287182977387671E-7	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9999996042659225	WITHOUT_CLASSIFICATION	3.95734077529354E-7	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9999969101062243	WITHOUT_CLASSIFICATION	3.0898937758364584E-6	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999974942918869	WITHOUT_CLASSIFICATION	2.505708113181116E-6	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999999014749003	WITHOUT_CLASSIFICATION	9.85250997778858E-8	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999999467243041	WITHOUT_CLASSIFICATION	5.327569584434246E-8	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999995318457162	WITHOUT_CLASSIFICATION	4.6815428385869155E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999995318457162	WITHOUT_CLASSIFICATION	4.6815428385869155E-7	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999996060855028	WITHOUT_CLASSIFICATION	3.9391449731402245E-7	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9999983140787314	WITHOUT_CLASSIFICATION	1.6859212685895532E-6	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999998228551974	WITHOUT_CLASSIFICATION	1.7714480263028755E-7	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.999999809195777	WITHOUT_CLASSIFICATION	1.908042229584136E-7	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.999999965226439	WITHOUT_CLASSIFICATION	3.477356109093256E-8	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999946328805194	WITHOUT_CLASSIFICATION	5.3671194806518945E-6	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999996581913505	WITHOUT_CLASSIFICATION	3.41808649499872E-7	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999997764126	WITHOUT_CLASSIFICATION	2.2358747584528638E-10	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999987234820693	WITHOUT_CLASSIFICATION	1.2765179306965264E-6	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999984798702961	WITHOUT_CLASSIFICATION	1.52012970390601E-6	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999999739101149	WITHOUT_CLASSIFICATION	2.6089885123750313E-8	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9999955400638618	WITHOUT_CLASSIFICATION	4.4599361382353115E-6	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999996243085043	WITHOUT_CLASSIFICATION	3.7569149579287675E-7	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999998351061292	WITHOUT_CLASSIFICATION	1.648938708119149E-7	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.99999696634358	WITHOUT_CLASSIFICATION	3.033656420057309E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.99999696634358	WITHOUT_CLASSIFICATION	3.033656420057309E-6	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999999561107057	WITHOUT_CLASSIFICATION	4.388929428036434E-8	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999999560425419	WITHOUT_CLASSIFICATION	4.395745810483943E-8	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999988103991339	WITHOUT_CLASSIFICATION	1.1896008661058098E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.999986798274909	WITHOUT_CLASSIFICATION	1.3201725091072155E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999901655797963	WITHOUT_CLASSIFICATION	9.834420203764794E-6	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999924679741841	WITHOUT_CLASSIFICATION	7.532025815942511E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999957215524449	WITHOUT_CLASSIFICATION	4.278447555204965E-6	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999997867824253	WITHOUT_CLASSIFICATION	2.1321757474814406E-7	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999999167126153	WITHOUT_CLASSIFICATION	8.328738475043343E-8	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999999905254442	WITHOUT_CLASSIFICATION	9.474555788756468E-9	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999999290979861	WITHOUT_CLASSIFICATION	7.090201389576278E-8	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999923945692103	WITHOUT_CLASSIFICATION	7.605430789701226E-6	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999995076405466	WITHOUT_CLASSIFICATION	4.923594535339567E-7	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999999341908533	WITHOUT_CLASSIFICATION	6.580914661986947E-8	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999949006382237	WITHOUT_CLASSIFICATION	5.0993617762417535E-6	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999999718124412	WITHOUT_CLASSIFICATION	2.8187558759871297E-8	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999999969663911	WITHOUT_CLASSIFICATION	3.033608865094433E-9	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999994868141592	WITHOUT_CLASSIFICATION	5.131858408036023E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999999323780143	WITHOUT_CLASSIFICATION	6.762198577353628E-8	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.999999998837845	WITHOUT_CLASSIFICATION	1.1621550644920353E-9	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999996517373885	WITHOUT_CLASSIFICATION	3.4826261155906273E-7	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999842110443	WITHOUT_CLASSIFICATION	1.578895575897934E-8	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999999089017998	WITHOUT_CLASSIFICATION	9.10982001044245E-8	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9999964467446878	WITHOUT_CLASSIFICATION	3.5532553121921613E-6	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999984762972844	WITHOUT_CLASSIFICATION	1.5237027155833894E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999998430004973	WITHOUT_CLASSIFICATION	1.5699950273256892E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999999747569476	WITHOUT_CLASSIFICATION	2.524305237573224E-8	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999997605249765	WITHOUT_CLASSIFICATION	2.394750235338573E-7	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999999991861886	WITHOUT_CLASSIFICATION	8.138113263460551E-10	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999996832094594	WITHOUT_CLASSIFICATION	3.1679054064570494E-7	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9999945681415632	WITHOUT_CLASSIFICATION	5.431858436866727E-6	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.999999918670311	WITHOUT_CLASSIFICATION	8.132968896750846E-8	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999999108199011	WITHOUT_CLASSIFICATION	8.918009887181026E-8	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999999943647939	WITHOUT_CLASSIFICATION	5.63520610922573E-9	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9999990773074867	WITHOUT_CLASSIFICATION	9.226925132604901E-7	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999999650925818	WITHOUT_CLASSIFICATION	3.490741818563979E-8	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999994244273013	WITHOUT_CLASSIFICATION	5.755726987631376E-7	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999999423992532	WITHOUT_CLASSIFICATION	5.760074690297839E-8	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999992683665446	WITHOUT_CLASSIFICATION	7.31633455326069E-7	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9999999935006393	WITHOUT_CLASSIFICATION	6.499360791120632E-9	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999993261597787	WITHOUT_CLASSIFICATION	6.738402212363723E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999993261597787	WITHOUT_CLASSIFICATION	6.738402212363723E-7	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999999478587254	WITHOUT_CLASSIFICATION	5.2141274555198345E-8	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999999487215022	WITHOUT_CLASSIFICATION	5.127849781802302E-8	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9999997302995997	WITHOUT_CLASSIFICATION	2.6970040035265926E-7	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999999129604669	WITHOUT_CLASSIFICATION	8.70395331360033E-8	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999999826469544	WITHOUT_CLASSIFICATION	1.7353045606364706E-8	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999999847642745	WITHOUT_CLASSIFICATION	1.5235725426639315E-8	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999995140355348	WITHOUT_CLASSIFICATION	4.859644653185187E-7	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999993846700779	WITHOUT_CLASSIFICATION	6.153299222241311E-7	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999998609749625	WITHOUT_CLASSIFICATION	1.390250375221407E-7	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987093450886	WITHOUT_CLASSIFICATION	1.2906549114539883E-6	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991025356864	WITHOUT_CLASSIFICATION	8.974643137057608E-7	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999995675331766	WITHOUT_CLASSIFICATION	4.324668233841141E-7	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999976079146164	WITHOUT_CLASSIFICATION	2.3920853835284003E-6	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999999507578852	WITHOUT_CLASSIFICATION	4.924211477507986E-8	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999999717424777	WITHOUT_CLASSIFICATION	2.8257522323272517E-8	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9999946018165974	WITHOUT_CLASSIFICATION	5.398183402688185E-6	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999999623468208	WITHOUT_CLASSIFICATION	3.765317934232317E-8	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999999392582511	WITHOUT_CLASSIFICATION	6.074174882836438E-8	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.999998708774421	WITHOUT_CLASSIFICATION	1.2912255789531406E-6	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999999118574432	WITHOUT_CLASSIFICATION	8.814255687219955E-8	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999998370943688	WITHOUT_CLASSIFICATION	1.629056312221384E-7	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999998336803976	WITHOUT_CLASSIFICATION	1.6631960250618658E-7	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999994193286319	WITHOUT_CLASSIFICATION	5.806713681013345E-7	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.999961466897129	WITHOUT_CLASSIFICATION	3.853310287110525E-5	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9999984376403115	WITHOUT_CLASSIFICATION	1.562359688498998E-6	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999984331439942	WITHOUT_CLASSIFICATION	1.5668560058799914E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999997646245611	WITHOUT_CLASSIFICATION	2.353754388871482E-7	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999996428128513	WITHOUT_CLASSIFICATION	3.571871487171487E-7	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999997418956472	WITHOUT_CLASSIFICATION	2.581043527515497E-7	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9999999719282421	WITHOUT_CLASSIFICATION	2.8071757976938585E-8	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999998931337707	WITHOUT_CLASSIFICATION	1.0686622929727563E-7	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999972369753535	WITHOUT_CLASSIFICATION	2.7630246464482544E-6	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999999982552318	WITHOUT_CLASSIFICATION	1.7447682440747645E-9	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999995892957037	WITHOUT_CLASSIFICATION	4.1070429632908353E-7	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999809026219	WITHOUT_CLASSIFICATION	1.9097378129409737E-8	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999999805122449	WITHOUT_CLASSIFICATION	1.948775508694342E-8	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999997176861912	WITHOUT_CLASSIFICATION	2.8231380884970776E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999995404256052	WITHOUT_CLASSIFICATION	4.595743948017941E-7	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999998184095116	WITHOUT_CLASSIFICATION	1.8159048847437863E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9999975203315247	WITHOUT_CLASSIFICATION	2.4796684752106934E-6	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999999760449859	WITHOUT_CLASSIFICATION	2.3955014107455777E-8	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999996767388498	WITHOUT_CLASSIFICATION	3.2326115009982933E-7	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999999732487589	WITHOUT_CLASSIFICATION	2.6751241057052288E-8	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999999170452417	WITHOUT_CLASSIFICATION	8.29547582690091E-8	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999996645874095	WITHOUT_CLASSIFICATION	3.3541259046301593E-7	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.999999969894179	WITHOUT_CLASSIFICATION	3.0105820949868267E-8	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999990291496265	WITHOUT_CLASSIFICATION	9.708503734492783E-7	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999996243085043	WITHOUT_CLASSIFICATION	3.7569149579287675E-7	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999999985970938	WITHOUT_CLASSIFICATION	1.4029062889787474E-9	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999999560133256	WITHOUT_CLASSIFICATION	4.398667446527093E-8	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9999961941676531	WITHOUT_CLASSIFICATION	3.8058323469621357E-6	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999991728341725	WITHOUT_CLASSIFICATION	8.271658275084733E-7	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9999943507041954	WITHOUT_CLASSIFICATION	5.649295804535015E-6	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999999203241728	WITHOUT_CLASSIFICATION	7.96758270905396E-8	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9999997537692619	WITHOUT_CLASSIFICATION	2.462307381150424E-7	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9999956923574572	WITHOUT_CLASSIFICATION	4.307642542827114E-6	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999952281741242	WITHOUT_CLASSIFICATION	4.77182587582907E-6	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999996322745958	WITHOUT_CLASSIFICATION	3.6772540424543693E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999997810201782	WITHOUT_CLASSIFICATION	2.1897982186389084E-7	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.999999210269132	WITHOUT_CLASSIFICATION	7.8973086809189E-7	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999971516302965	WITHOUT_CLASSIFICATION	2.848369703583862E-6	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999999944392406	WITHOUT_CLASSIFICATION	5.56075941497219E-9	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991238634236	WITHOUT_CLASSIFICATION	8.761365763906334E-7	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999995136666062	WITHOUT_CLASSIFICATION	4.863333936833983E-7	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999993888815234	WITHOUT_CLASSIFICATION	6.111184766412136E-7	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999999916993068	WITHOUT_CLASSIFICATION	8.300693186069583E-9	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999963122858813	WITHOUT_CLASSIFICATION	3.6877141187949646E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991238634236	WITHOUT_CLASSIFICATION	8.761365763906334E-7	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9999422420876339	WITHOUT_CLASSIFICATION	5.775791236604493E-5	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9999987253850939	WITHOUT_CLASSIFICATION	1.2746149060964556E-6	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999999953652221	WITHOUT_CLASSIFICATION	4.6347778533410835E-9	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.99999998953693	WITHOUT_CLASSIFICATION	1.0463069922334958E-8	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.999983397364649	WITHOUT_CLASSIFICATION	1.66026353509594E-5	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999996813840792	WITHOUT_CLASSIFICATION	3.186159208167769E-7	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999999248460935	WITHOUT_CLASSIFICATION	7.51539064999425E-8	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999998957174816	WITHOUT_CLASSIFICATION	1.0428251834837194E-7	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999989023562914	WITHOUT_CLASSIFICATION	1.0976437086305832E-6	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999999384203955	WITHOUT_CLASSIFICATION	6.1579604518757E-8	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999990366985072	WITHOUT_CLASSIFICATION	9.633014928481496E-7	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9999998304278436	WITHOUT_CLASSIFICATION	1.69572156554155E-7	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999998670238767	WITHOUT_CLASSIFICATION	1.32976123379714E-7	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.999974152343738	WITHOUT_CLASSIFICATION	2.5847656262099783E-5	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999993652650067	WITHOUT_CLASSIFICATION	6.347349933238736E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999998019810363	WITHOUT_CLASSIFICATION	1.9801896374061045E-7	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999983664760256	WITHOUT_CLASSIFICATION	1.6335239745038993E-6	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999988029961895	WITHOUT_CLASSIFICATION	1.1970038104717078E-6	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9999993301072673	WITHOUT_CLASSIFICATION	6.69892732810227E-7	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999998386285878	WITHOUT_CLASSIFICATION	1.6137141223827157E-7	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999989769878455	WITHOUT_CLASSIFICATION	1.0230121544712123E-6	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999999677358512	WITHOUT_CLASSIFICATION	3.226414879650018E-8	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999995120718932	WITHOUT_CLASSIFICATION	4.879281069137823E-7	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999950864049	WITHOUT_CLASSIFICATION	4.913595104481697E-9	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999999743089706	WITHOUT_CLASSIFICATION	2.5691029364742473E-8	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999999367983272	WITHOUT_CLASSIFICATION	6.320167274389724E-8	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999999516986843	WITHOUT_CLASSIFICATION	4.830131563717312E-8	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999998937367233	WITHOUT_CLASSIFICATION	1.0626327676091049E-7	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999999808108612	WITHOUT_CLASSIFICATION	1.9189138808349834E-8	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999946961922287	WITHOUT_CLASSIFICATION	5.3038077713587924E-6	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999994421052338	WITHOUT_CLASSIFICATION	5.578947662982953E-7	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.999982812899106	WITHOUT_CLASSIFICATION	1.7187100893982283E-5	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999991901789662	WITHOUT_CLASSIFICATION	8.098210338552172E-7	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999994795640743	WITHOUT_CLASSIFICATION	5.204359256847644E-7	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.999999963647738	WITHOUT_CLASSIFICATION	3.635226191083282E-8	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999998635104048	WITHOUT_CLASSIFICATION	1.364895951568468E-7	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999999922872346	WITHOUT_CLASSIFICATION	7.712765467575368E-9	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999999318837296	WITHOUT_CLASSIFICATION	6.81162703954185E-8	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999999249148156	WITHOUT_CLASSIFICATION	7.508518430673794E-8	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999891464514319	WITHOUT_CLASSIFICATION	1.085354856803471E-5	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.999993272834612	WITHOUT_CLASSIFICATION	6.72716538804602E-6	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.999993272834612	WITHOUT_CLASSIFICATION	6.72716538804602E-6	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999975682971243	WITHOUT_CLASSIFICATION	2.431702875692814E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.999999972265375	WITHOUT_CLASSIFICATION	2.773462509488327E-8	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999999247769864	WITHOUT_CLASSIFICATION	7.522301368778234E-8	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9150981351149046	DOCUMENTATION	0.08490186488509546	WITHOUT_CLASSIFICATION
// ignore	WITHOUT_CLASSIFICATION	0.9999980556132115	WITHOUT_CLASSIFICATION	1.944386788459111E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999980556132115	WITHOUT_CLASSIFICATION	1.944386788459111E-6	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.9999879361780779	WITHOUT_CLASSIFICATION	1.206382192213675E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999993221417934	WITHOUT_CLASSIFICATION	6.778582065592009E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999340665843067	WITHOUT_CLASSIFICATION	6.593341569336597E-5	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999998131415861	WITHOUT_CLASSIFICATION	1.8685841380398497E-7	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999999279014907	WITHOUT_CLASSIFICATION	7.209850929477384E-8	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999993241769088	WITHOUT_CLASSIFICATION	6.758230911966741E-7	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999986322860255	WITHOUT_CLASSIFICATION	1.3677139745115202E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999994544724761	WITHOUT_CLASSIFICATION	5.455275238741599E-7	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999999855942531	WITHOUT_CLASSIFICATION	1.4405746973468177E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998914430783	WITHOUT_CLASSIFICATION	1.0855692176306162E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998914430783	WITHOUT_CLASSIFICATION	1.0855692176306162E-7	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9999994101815033	WITHOUT_CLASSIFICATION	5.898184967503192E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999923497715945	WITHOUT_CLASSIFICATION	7.65022840566431E-6	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.999999053430501	WITHOUT_CLASSIFICATION	9.465694991120531E-7	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9999745203055926	WITHOUT_CLASSIFICATION	2.5479694407328654E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164878572	WITHOUT_CLASSIFICATION	2.308351214277571E-5	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999996478118489	WITHOUT_CLASSIFICATION	3.5218815107599346E-7	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999998990735433	WITHOUT_CLASSIFICATION	1.0092645674041395E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769164878572	WITHOUT_CLASSIFICATION	2.308351214277571E-5	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999999148825476	WITHOUT_CLASSIFICATION	8.511745252263429E-8	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9999944069294273	WITHOUT_CLASSIFICATION	5.593070572720047E-6	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999999836324986	WITHOUT_CLASSIFICATION	1.636750132460369E-8	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999996602114438	WITHOUT_CLASSIFICATION	3.397885562279275E-7	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999999384203955	WITHOUT_CLASSIFICATION	6.1579604518757E-8	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999998478079049	WITHOUT_CLASSIFICATION	1.5219209506909408E-7	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9999749949846296	WITHOUT_CLASSIFICATION	2.500501537029428E-5	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999971572940155	WITHOUT_CLASSIFICATION	2.842705984532744E-6	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999964934984386	WITHOUT_CLASSIFICATION	3.506501561345458E-6	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.999999521363233	WITHOUT_CLASSIFICATION	4.786367669610124E-7	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9999994038356935	WITHOUT_CLASSIFICATION	5.961643064214166E-7	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.999996295324583	WITHOUT_CLASSIFICATION	3.7046754169381145E-6	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9999999741391467	WITHOUT_CLASSIFICATION	2.5860853421352306E-8	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999941283165316	WITHOUT_CLASSIFICATION	5.871683468392508E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999975434762336	WITHOUT_CLASSIFICATION	2.456523766335302E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999975434762336	WITHOUT_CLASSIFICATION	2.456523766335302E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999994738154	WITHOUT_CLASSIFICATION	5.261846000703714E-7	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999999888447311	WITHOUT_CLASSIFICATION	1.1155268813050896E-8	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998808224069685	WITHOUT_CLASSIFICATION	1.1917759303148885E-4	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999993904045663	WITHOUT_CLASSIFICATION	6.095954337742847E-7	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999985662790583	WITHOUT_CLASSIFICATION	1.4337209417595783E-6	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999991108509635	WITHOUT_CLASSIFICATION	8.891490365369308E-7	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.999999923004947	WITHOUT_CLASSIFICATION	7.699505298790601E-8	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.999999995139412	WITHOUT_CLASSIFICATION	4.860588060809946E-9	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999997391498384	WITHOUT_CLASSIFICATION	2.6085016162036657E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999999642694375	WITHOUT_CLASSIFICATION	3.573056249297627E-8	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971228127675	WITHOUT_CLASSIFICATION	2.8771872324670235E-6	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999999984756444	WITHOUT_CLASSIFICATION	1.5243556431314584E-9	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9999990780155987	WITHOUT_CLASSIFICATION	9.219844012045386E-7	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999892637771	WITHOUT_CLASSIFICATION	1.0736222804264904E-8	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999999651565231	WITHOUT_CLASSIFICATION	3.4843476894873675E-8	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.999999463444856	WITHOUT_CLASSIFICATION	5.36555144089461E-7	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.999999978825427	WITHOUT_CLASSIFICATION	2.1174572964118085E-8	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.999999106388276	WITHOUT_CLASSIFICATION	8.936117238878094E-7	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999994702033409	WITHOUT_CLASSIFICATION	5.297966590984167E-7	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999999942786957	WITHOUT_CLASSIFICATION	5.7213043192987406E-9	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999998962686643	WITHOUT_CLASSIFICATION	1.03731335784451E-7	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.999999905197422	WITHOUT_CLASSIFICATION	9.480257796022983E-8	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999999100294623	WITHOUT_CLASSIFICATION	8.997053764489761E-8	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999999997334184	WITHOUT_CLASSIFICATION	2.6658158529986704E-10	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999012118020714	WITHOUT_CLASSIFICATION	9.878819792865447E-5	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999012118020714	WITHOUT_CLASSIFICATION	9.878819792865447E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.999999777065318	WITHOUT_CLASSIFICATION	2.229346821660988E-7	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999999702060357	WITHOUT_CLASSIFICATION	2.979396421495588E-8	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999967526261856	WITHOUT_CLASSIFICATION	3.2473738144598687E-6	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999999949837423	WITHOUT_CLASSIFICATION	5.0162577814624725E-9	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999811486188311	WITHOUT_CLASSIFICATION	1.8851381168850924E-5	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.8788400077860251	WITHOUT_CLASSIFICATION	0.12115999221397483	DOCUMENTATION
