WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	Is this item a copy? @see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	once one criticism is found, exit
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	user interface
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	issue resolutions
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	design feedback
WITHOUT_CLASSIFICATION	the critiquing thread should wait if disabled.
WITHOUT_CLASSIFICATION	why?
WITHOUT_CLASSIFICATION	Performs critique asap. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	constructor and singeton methods
WITHOUT_CLASSIFICATION	why?
WITHOUT_CLASSIFICATION	&& getAutoCritique()
WITHOUT_CLASSIFICATION	Don't clear everything here, breaks loading!
WITHOUT_CLASSIFICATION	v71
WITHOUT_CLASSIFICATION	Don't let a transient error kill the thread
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	clear out queues! @@@
WITHOUT_CLASSIFICATION	decision model listener
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	end class ChildGenDMElements
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	user interface
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	TODO: This should be the name of the designer that created the todoitem, not the current username!
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "predicate() returned true, creating ToDoItem");
WITHOUT_CLASSIFICATION	corrective automations, wizards
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	TODO: Make use of the constants defined in the ToDoItem class!
WITHOUT_CLASSIFICATION	if wizClass is not a subclass of Wizard, print a warning
WITHOUT_CLASSIFICATION	return getCriticName();
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	design feedback
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	end interface Poster
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Adding resolution for: " + c.getClass() + " " + canCreate);
WITHOUT_CLASSIFICATION	Use this for fast fail instead. Sacrificed for complete fail. d00mst throw new UnresolvableException( "Unable to create ItemUID for class: " + obj.getClass());
WITHOUT_CLASSIFICATION	TODO: values
WITHOUT_CLASSIFICATION	end class Goal
WITHOUT_CLASSIFICATION	check if we are using a supported java version
WITHOUT_CLASSIFICATION	implements java.io.Serialization
WITHOUT_CLASSIFICATION	end class CurDecisionCM
WITHOUT_CLASSIFICATION	end class StandardCM
WITHOUT_CLASSIFICATION	end class CompositeCM
WITHOUT_CLASSIFICATION	end class EnabledCM
WITHOUT_CLASSIFICATION	end class NotSnoozedCM
WITHOUT_CLASSIFICATION	end class AndCM
WITHOUT_CLASSIFICATION	end class DesignGoalsCM
WITHOUT_CLASSIFICATION	end class OrCM
WITHOUT_CLASSIFICATION	Register our last chance exception handler
WITHOUT_CLASSIFICATION	Get the splash screen up as early as possible
WITHOUT_CLASSIFICATION	We have to do this to set the LAF for the splash screen
WITHOUT_CLASSIFICATION	main initialization happens here
WITHOUT_CLASSIFICATION	ToolTipManager.sharedInstance().setInitialDelay(500);
WITHOUT_CLASSIFICATION	Force the configuration to load
WITHOUT_CLASSIFICATION	Synchronize the startup directory
WITHOUT_CLASSIFICATION	then, print out some version info for debuggers...
WITHOUT_CLASSIFICATION	Set the i18n locale
WITHOUT_CLASSIFICATION	set properties for application behaviour
WITHOUT_CLASSIFICATION	now, let's print it
WITHOUT_CLASSIFICATION	nothing else to do (?)
WITHOUT_CLASSIFICATION	We MUST have a project open before continuing. Create if necessary
WITHOUT_CLASSIFICATION	initPreinitialize(); initializeSubsystems(new SimpleTimer(), null); ArgoFrame.getInstance().setVisible(true);
WITHOUT_CLASSIFICATION	Perform one command.
WITHOUT_CLASSIFICATION	Now create a new object.
WITHOUT_CLASSIFICATION	initLogging();
WITHOUT_CLASSIFICATION	On uniprocessors wait until we're sure the splash screen has been painted so that we aren't competing for resources
WITHOUT_CLASSIFICATION	make the projectbrowser
WITHOUT_CLASSIFICATION	end Class Main
WITHOUT_CLASSIFICATION	end class PostLoad
WITHOUT_CLASSIFICATION	We don't care if optional modules aren't found.
WITHOUT_CLASSIFICATION	We don't care if optional modules aren't found.
WITHOUT_CLASSIFICATION	end class LoadModules
WITHOUT_CLASSIFICATION	All tabs are added at the end, except a TabToDoTarget:
WITHOUT_CLASSIFICATION	End interface GUISettingsTabInterface
WITHOUT_CLASSIFICATION	skip pos, we know it's not a valid char from above
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Store in the user configuration, and let gef know also.
WITHOUT_CLASSIFICATION	Use the configuration if it exists, otherwise use what gef thinks.
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	failed to clone
WITHOUT_CLASSIFICATION	Remark: The code in ProjectSettings.init() currently presumes that nobody is using this event.
WITHOUT_CLASSIFICATION	NOTE: This is package scope to force callers to use ResourceLoaderWrapper
WITHOUT_CLASSIFICATION	Strip all characters out of <var>s</var> that could not be part of a valid Java identifier. Return either the given string (if all characters were valid), or a new string with all invalid characters stripped out. This allows automatic conversion of strings containing punctuation and spaces to a resource name that can be looked up.
WITHOUT_CLASSIFICATION	end class ResourceLoader
WITHOUT_CLASSIFICATION	the validity checking thread should wait if disabled.
WITHOUT_CLASSIFICATION	If element has been deleted, it's no longer valid
WITHOUT_CLASSIFICATION	History.TheHistory.addItemResolution(item, "no longer valid"); ((ToDoItem)item).resolve("no longer valid"); notifyObservers("removeElement", item);
WITHOUT_CLASSIFICATION	Notifications and Updates
WITHOUT_CLASSIFICATION	skip any identical items already on the list
WITHOUT_CLASSIFICATION	cat.debug("Checking for inhibitors " + rc);
WITHOUT_CLASSIFICATION	History.TheHistory.addItemResolution(item, reason);
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	end class ArgoJMenu
WITHOUT_CLASSIFICATION	Block added by BobTarling 8-Jan-2002 Set the checkbox on or off according to the SELECTED value of the action. If no SELECTED value is found then this defaults to true in order to remain compatible with previous versions of this code.
WITHOUT_CLASSIFICATION	EventListenerList.add() is synchronized, so we don't need to synchronize ourselves
WITHOUT_CLASSIFICATION	End of block
WITHOUT_CLASSIFICATION	end interface Clarifier
WITHOUT_CLASSIFICATION	Set the checkbox on or off according to the SELECTED value of the action. If no SELECTED value is found then this defaults to true.
WITHOUT_CLASSIFICATION	Extra care to be taken since allOffenders can be reset while this method is running.
WITHOUT_CLASSIFICATION	these are blue in Metal Default Theme
WITHOUT_CLASSIFICATION	Cached expansions
WITHOUT_CLASSIFICATION	these are gray in Metal Default Theme
WITHOUT_CLASSIFICATION	Extra care to be taken since allPosters can be reset while this method is running.
WITHOUT_CLASSIFICATION	set the icon for this poster
WITHOUT_CLASSIFICATION	EventListenerList.remove() is synchronized, so we don't need to synchronize ourselves
WITHOUT_CLASSIFICATION	MVW
WITHOUT_CLASSIFICATION	event related stuff
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	Enable buttons when selection made. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	end class CheckManager
WITHOUT_CLASSIFICATION	Now lets search
WITHOUT_CLASSIFICATION	end class TabChecklist
WITHOUT_CLASSIFICATION	We found it!
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	Enter the class to speed up the next search.
WITHOUT_CLASSIFICATION	Stop updating model when we're not visible
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	instance varables
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	TableModel implemetation
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	static accessors
WITHOUT_CLASSIFICATION	instance varables
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	TableModel implemetation
WITHOUT_CLASSIFICATION	in the past, 0 milliseconds after January 1, 1970, 00:00:00 GMT.
WITHOUT_CLASSIFICATION	in the past, 0 milliseconds after January 1, 1970, 00:00:00 GMT.
WITHOUT_CLASSIFICATION	by default, double the snooze interval each time
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	end class SnoozeOrder
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	wizard actions
WITHOUT_CLASSIFICATION	This changes the complete structure of the table, so we need to set the column widths again.
WITHOUT_CLASSIFICATION	TODO: do all following steps TODO: resolve item from ToDoList
WITHOUT_CLASSIFICATION	end class ActionOpenCritics
WITHOUT_CLASSIFICATION	Dialog box to list all critics and allow editing of some of their properties. <p> TODO: supported goals, critic network.
WITHOUT_CLASSIFICATION	Set initial sorting on Critic Headline
WITHOUT_CLASSIFICATION	Critics Table
WITHOUT_CLASSIFICATION	instead of making a new list, decrement index, return when found and index == 0
WITHOUT_CLASSIFICATION	Critic Details panel
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	TableModel implemetation
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	no maximum set, so it will stretch...
WITHOUT_CLASSIFICATION	and for advanced mode:
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	Set tableSP's preferred height to 0 so that details height is used in pack()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 0; JLabel priLabel = new JLabel("Priority:"); gb.setConstraints(priLabel, c); _mainPanel.add(priLabel);
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 1; JLabel offLabel = new JLabel("Off"); gb.setConstraints(offLabel, c); _mainPanel.add(offLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 2; JLabel lowLabel = new JLabel("Low"); gb.setConstraints(lowLabel, c); _mainPanel.add(lowLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 3; JLabel twoLabel = new JLabel("ad"); gb.setConstraints(twoLabel, c); _mainPanel.add(twoLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 4; JLabel threeLabel = new JLabel("asd"); gb.setConstraints(threeLabel, c); _mainPanel.add(threeLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 5; JLabel fourLabel = new JLabel("asd"); gb.setConstraints(fourLabel, c); _mainPanel.add(fourLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 6; JLabel highLabel = new JLabel("High"); gb.setConstraints(highLabel, c); _mainPanel.add(highLabel);
WITHOUT_CLASSIFICATION	------------ other methods ------------
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeCellRenderer#getTreeCellRendererComponent( javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	TreeModel implementation - todo specific stuff
WITHOUT_CLASSIFICATION	class variables
WITHOUT_CLASSIFICATION	general icons for poster
WITHOUT_CLASSIFICATION	specialised icons for designer
WITHOUT_CLASSIFICATION	TreeCellRenderer implementation
WITHOUT_CLASSIFICATION	end class ToDoTreeRenderer
WITHOUT_CLASSIFICATION	public static Decision decisionUNCATEGORIZED = new Decision("Uncategorized", 1);
WITHOUT_CLASSIFICATION	end class ToDoByDecision
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	instead of making a new list, decrement index, return when found and index == 0
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	c.gridx = 1; c.gridy = 3; c.gridheight = GridBagConstraints.REMAINDER; SpacerPanel spacer2 = new SpacerPanel(); gb.setConstraints(spacer2, c); _mainPanel.add(spacer2);
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	end class WizStepTextField
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	end class WizDescription
WITHOUT_CLASSIFICATION	end class WizStepCue
WITHOUT_CLASSIFICATION	stop/start creating more critics
WITHOUT_CLASSIFICATION	end class ActionGoToCritique
WITHOUT_CLASSIFICATION	Correct lazy initialization of static field without further updates:
WITHOUT_CLASSIFICATION	does nothing
WITHOUT_CLASSIFICATION	end class ActionAutoCritique
WITHOUT_CLASSIFICATION	stop/start cleaning up invalid TodoItems.
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	otherwise parent must be an offending design material
WITHOUT_CLASSIFICATION	end class ActionOpenGoals
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	? inform()
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	Stop updating model when we're not visible
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	instead of making a new list, decrement index, return when found and index == 0
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	the target of description will always be set directly by tabtodo
WITHOUT_CLASSIFICATION	Request that we be made visible if we're not? topLevelTabbedPane.setSelectedComponent(t);
WITHOUT_CLASSIFICATION	------------- MouseListener implementation ---------------
WITHOUT_CLASSIFICATION	end class WizStepConfirm
WITHOUT_CLASSIFICATION	next line coming from projectbrowser
WITHOUT_CLASSIFICATION	------------ ItemListener implementation ----------------------
WITHOUT_CLASSIFICATION	-------------TreeSelectionListener implementation -----------
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	not needed in UML 1.x
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)
WITHOUT_CLASSIFICATION	Prepare for typing in rationale field when window is opened. @see java.awt.Component#setVisible(boolean)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	keep nagging until the user solves the problem: This seems a nice way to nag:
WITHOUT_CLASSIFICATION	Only interrupt for one todoitem
WITHOUT_CLASSIFICATION	end class ActionOpenDecisions
WITHOUT_CLASSIFICATION	blinks?
WITHOUT_CLASSIFICATION	end class ToDoByOffender
WITHOUT_CLASSIFICATION	add the perspectives to a list for the combobox
WITHOUT_CLASSIFICATION	decSlide.setPaintLabels(true);
WITHOUT_CLASSIFICATION	constants instance variables
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	TODO: This looks O(n^2)
WITHOUT_CLASSIFICATION	TODO: make a new history item
WITHOUT_CLASSIFICATION	cat.debug("bad decision");
WITHOUT_CLASSIFICATION	cat.debug("bad goal");
WITHOUT_CLASSIFICATION	end class DismissToDoItemDialog
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	finally, apply profile configuration to the model
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	otherwise parent must be an offending design material
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	end class WizStep
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	This is done for compatibility with previous version: Move the argo.user.properties written before 0.25.4 to the new location, if it exists.
WITHOUT_CLASSIFICATION	Don't allow instantiation
WITHOUT_CLASSIFICATION	ActionListener implementation
WITHOUT_CLASSIFICATION	DocumentListener implementation
WITHOUT_CLASSIFICATION	TargetListener implementation
WITHOUT_CLASSIFICATION	copy to new file and let the regular load code do the actual load
WITHOUT_CLASSIFICATION	Instance variables
WITHOUT_CLASSIFICATION	end class ConfigurationFactory
WITHOUT_CLASSIFICATION	LOG.log(Level.INFO, "Configuration saved to {0}\n", url);
WITHOUT_CLASSIFICATION	check for the older properties file and copy it over if possible
WITHOUT_CLASSIFICATION	Only allow one load
WITHOUT_CLASSIFICATION	add the first point twice
WITHOUT_CLASSIFICATION	add the first point twice
WITHOUT_CLASSIFICATION	Scale everything up
WITHOUT_CLASSIFICATION	Initialize band buffer bounds
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "getData Rectangle = " + clip);
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "getData returning raster = " + translatedRaster);
WITHOUT_CLASSIFICATION	Create a new graphics context so we start with fresh transforms
WITHOUT_CLASSIFICATION	Fill with our background color
WITHOUT_CLASSIFICATION	Translate & clip graphic to match region of interest
WITHOUT_CLASSIFICATION	Ask GEF to print a band of the diagram (translated & clipped)
WITHOUT_CLASSIFICATION	Make sure it isn't caching anything that should be written
WITHOUT_CLASSIFICATION	assert !initialized; GUITestActionOpenProject fails over this...
WITHOUT_CLASSIFICATION	Retain the original one:
WITHOUT_CLASSIFICATION	Retain the original one:
WITHOUT_CLASSIFICATION	Internal initialization method. Handles initialization which is common to both public methods.
WITHOUT_CLASSIFICATION	This is needed for the JUnit tests. Otherwise a "assert initialized" would suffice.
WITHOUT_CLASSIFICATION	This is needed for the JUnit tests. Otherwise a "assert initialized" would suffice.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Flag the command as to whether it is first in a chain
WITHOUT_CLASSIFICATION	end class DelayedChangeNotify
WITHOUT_CLASSIFICATION	Default diagram settings
WITHOUT_CLASSIFICATION	Default notation settings
WITHOUT_CLASSIFICATION	Generation preferences:
WITHOUT_CLASSIFICATION	The next one defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	The next ones defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	This Notation is not available!
WITHOUT_CLASSIFICATION	Always put the model at the top
WITHOUT_CLASSIFICATION	otherwise add the diagram at the start
WITHOUT_CLASSIFICATION	otherwise add the diagram at the start
WITHOUT_CLASSIFICATION	finally, apply profile configuration to the model
WITHOUT_CLASSIFICATION	uri = PersistenceManager.getInstance().fixUriExtension(theProjectUri);
WITHOUT_CLASSIFICATION	Register with the save action with other subsystems so that any changes in those subsystems will enable the save button/menu item etc.
WITHOUT_CLASSIFICATION	not needed in UML 1.x
WITHOUT_CLASSIFICATION	end interface DelayedVChangeListener
WITHOUT_CLASSIFICATION	a profile initially has no applied profiles, we go bottom-up
WITHOUT_CLASSIFICATION	Skip leading underscores:
WITHOUT_CLASSIFICATION	TODO: should just be the directory to write.
WITHOUT_CLASSIFICATION	The preferences with project-scope:
WITHOUT_CLASSIFICATION	The ArgoUML version with which this project was last saved:
WITHOUT_CLASSIFICATION	if diagram added successfully, add the member too
WITHOUT_CLASSIFICATION	Adding a todo member removes any existing one.
WITHOUT_CLASSIFICATION	got past the veto, add the member
WITHOUT_CLASSIFICATION	send indeterminate new value instead of making copy of vector
WITHOUT_CLASSIFICATION	Remove the dependent modelelements, such as the statemachine for a statechartdiagram:
WITHOUT_CLASSIFICATION	Hence, a diagram name was saved in the project that we are loading. So, we use this name to retrieve any matching diagram.
WITHOUT_CLASSIFICATION	Use the first diagram.
WITHOUT_CLASSIFICATION	If there was no diagram at all, then use the (first) UML model.
WITHOUT_CLASSIFICATION	we don't need this HashMap anymore so free up the memory
WITHOUT_CLASSIFICATION	Can not delete the model
WITHOUT_CLASSIFICATION	Can not delete the profile
WITHOUT_CLASSIFICATION	@see java.lang.Object#finalize()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	Make the topmost diagram (that is not the one being deleted) current.
WITHOUT_CLASSIFICATION	trash related methods
WITHOUT_CLASSIFICATION	Fire an event some anyone who cares about diagrams being removed can listen for it
WITHOUT_CLASSIFICATION	If we delete a FigEdge or FigNode we actually call this method with the owner not the Fig itself. However, this method is called by ActionDeleteModelElements for primitive Figs (without owner).
WITHOUT_CLASSIFICATION	there's just one ProfileConfiguration in a project and there's no other way to add another one
WITHOUT_CLASSIFICATION	Tab for the settings dialog that makes it possible to select the modules that are to be enabled. TODO: Header for the table. @author Linus Tolke
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	Access methods for program infrastructure.
WITHOUT_CLASSIFICATION	@see java.io.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	The creation of the actual GUI elements is deferred until they are actually needed. Otherwize we have problems with the initialization.
WITHOUT_CLASSIFICATION	Do nothing! The next time we refresh, we will fetch the values again.
WITHOUT_CLASSIFICATION	Access methods for modules that need to query about the status of other modules.
WITHOUT_CLASSIFICATION	Access methods for the GUI that the user uses to enable and disable modules.
WITHOUT_CLASSIFICATION	Access methods for the program infrastructure
WITHOUT_CLASSIFICATION	Catch all exceptions and errors, however severe
WITHOUT_CLASSIFICATION	TODO: huntForModulesFromJavaWebStart();
WITHOUT_CLASSIFICATION	Load modules specified by a System property. Modules specified by a system property is for running modules from within Eclipse and running from Java Web Start.
WITHOUT_CLASSIFICATION	Try-catch only the JarFile instantiation so we don't accidentally mask anything in ArgoJarClassLoader or processJarFile.
WITHOUT_CLASSIFICATION	We expect all extensions to have a manifest even though we can operate without one if necessary.
WITHOUT_CLASSIFICATION	Look for our specification
WITHOUT_CLASSIFICATION	Add this to search list for I18N properties (Done for both modules & localized property file sets)
WITHOUT_CLASSIFICATION	We havn't found it. Add it.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Utility function to unregister all listeners registered through addElementListener. @see #addElementListener(Object, String)
WITHOUT_CLASSIFICATION	Called after the notation default property gets changed. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	e.g. for an operation: if pce.getSource() == modelElement && event.propertyName = "parameter" if event instanceof AddAssociationEvent Get the parameter instance from event.newValue Call model to add listener on parameter on change of "name", "type" else if event instanceof RemoveAssociationEvent Get the parameter instance from event.oldValue Call model to remove listener on parameter on change of "name", "type" end if end if
WITHOUT_CLASSIFICATION	The following check should have been satisfied before we instantiated the module, but double check again
WITHOUT_CLASSIFICATION	If it didn't have a loadable module class and it doesn't look like a localized property set, warn the user that something funny is in their extension directory
WITHOUT_CLASSIFICATION	Since there is no way to compare the objects as equal, we have to search through the list at this point.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Remark: There is also a java-like notation, which is also part of ArgoUML core distribution.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	This Notation is not available!
WITHOUT_CLASSIFICATION	This is needed for the case when the default notation is not loaded at this point.
WITHOUT_CLASSIFICATION	class accessors
WITHOUT_CLASSIFICATION	Static workers for dealing with notation names.
WITHOUT_CLASSIFICATION	No valid field for above notationLanguage. It's valid if not null.
WITHOUT_CLASSIFICATION	We also show stereotypes
WITHOUT_CLASSIFICATION	We also show stereotypes
WITHOUT_CLASSIFICATION	We also show the type (of which e.g. the name may change)
WITHOUT_CLASSIFICATION	We also show the type (of which e.g. the name may change)
WITHOUT_CLASSIFICATION	We also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	We also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	and when the Operation is replaced:
WITHOUT_CLASSIFICATION	and when the class changes name:
WITHOUT_CLASSIFICATION	mvw: Indeed. The intention of the constructor parameter is to prove that there is a valid UML object to bind the notation to. So, the next statement should fail on a null parameter, and on anything that is not an object of which we can retrieve the multiplicity.
WITHOUT_CLASSIFICATION	We are not interested in the name.
WITHOUT_CLASSIFICATION	And the parameter names and values:
WITHOUT_CLASSIFICATION	And the arguments:
WITHOUT_CLASSIFICATION	We also show parameters
WITHOUT_CLASSIFICATION	We also show types of parameters
WITHOUT_CLASSIFICATION	Listen to the modelelement itself:
WITHOUT_CLASSIFICATION	We also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	If this fails, then there is a problem... dthompson 29/12/2008: It seems that the returned value is irrelevant here, so I assume that the purpose of this call is just to throw an exception in case of a problem.
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the name and body text i.e. when the CallAction is replaced:
WITHOUT_CLASSIFICATION	and when the owner is replaced (unlikely for operations), and when the operation changes name:
WITHOUT_CLASSIFICATION	Listen to the modelelement itself:
WITHOUT_CLASSIFICATION	removed stereotype
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the text i.e. when the Transition is replaced:
WITHOUT_CLASSIFICATION	new stereotype
WITHOUT_CLASSIFICATION	Listen to name changes in the path (useful for e.g. Package):
WITHOUT_CLASSIFICATION	register for the doActivity etc.
WITHOUT_CLASSIFICATION	register for internal transitions:
WITHOUT_CLASSIFICATION	return "parsing.java.help.attribute";
WITHOUT_CLASSIFICATION	TODO: The src_visibility tag doesn't appear to be created anywhere by ArgoUML currently
WITHOUT_CLASSIFICATION	return "parsing.help.fig-association-end-name";
WITHOUT_CLASSIFICATION	TODO: initial value
WITHOUT_CLASSIFICATION	skip spaces
WITHOUT_CLASSIFICATION	the name itself
WITHOUT_CLASSIFICATION	Check the name for validity:
WITHOUT_CLASSIFICATION	TODO: Check the name for validity.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	pick out return type
WITHOUT_CLASSIFICATION	handle multiplicity here since we need the type actually the API of generator is buggy since to generate multiplicity correctly we need the attribute too
WITHOUT_CLASSIFICATION	Build the final string
WITHOUT_CLASSIFICATION	TODO: qualifiers (e.g., const) TODO: stereotypes...
WITHOUT_CLASSIFICATION	name and params
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	check for more attributes (';' separated):
WITHOUT_CLASSIFICATION	For Java notation, we also need to listen to "leaf" changes, since they are shown as "final" on the diagram.
WITHOUT_CLASSIFICATION	Remove bases that aren't there anymore
WITHOUT_CLASSIFICATION	Notation.findNotation("Java");
WITHOUT_CLASSIFICATION	Initialize the NotationUtilityUml:
WITHOUT_CLASSIFICATION	copy - can't iterate modify live collection while iterating it
WITHOUT_CLASSIFICATION	When nothing is generated: omit the space.
WITHOUT_CLASSIFICATION	Loop through all base classes, building a comma separated list
WITHOUT_CLASSIFICATION	yes, there are more:
WITHOUT_CLASSIFICATION	no text? remove attr!
WITHOUT_CLASSIFICATION	no non-whitechars in text? remove attr!
WITHOUT_CLASSIFICATION	We need to set the namespace/owner of the new attribute before parsing:
WITHOUT_CLASSIFICATION	If the 1st attribute is static, then the new ones, too.
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	yes, there are more:
WITHOUT_CLASSIFICATION	Generates a string representation for the provided attribute. The string representation will be of the form: visibility name [multiplicity] : type-expression = initial-value {property-string} Depending on settings in Notation, visibility, multiplicity, type-expression, initial value and properties are shown/not shown.
WITHOUT_CLASSIFICATION	Handle Derived:
WITHOUT_CLASSIFICATION	Handle Derived:
WITHOUT_CLASSIFICATION	Handle Visibility:
WITHOUT_CLASSIFICATION	fix for loading bad projects
WITHOUT_CLASSIFICATION	The "show types" defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	The element was deleted while we were processing it
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	construct bases string (comma separated)
WITHOUT_CLASSIFICATION	no text? remove op!
WITHOUT_CLASSIFICATION	no non-whitechars in text? remove op!
WITHOUT_CLASSIFICATION	check for more operations (';' separated):
WITHOUT_CLASSIFICATION	end while loop
WITHOUT_CLASSIFICATION	parameterlist is guaranteed to contain at least "("
WITHOUT_CLASSIFICATION	Don't create a stereotype for <<signal>> on a Reception but create any other parsed stereotypes as needed
WITHOUT_CLASSIFICATION	lets concatenate it to the resulting string (genStr)
WITHOUT_CLASSIFICATION	The "show types" defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	the parameters
WITHOUT_CLASSIFICATION	the returnparameters
WITHOUT_CLASSIFICATION	The model element was deleted while we were working on it
WITHOUT_CLASSIFICATION	else: we remove only the extra ","
WITHOUT_CLASSIFICATION	the query state
WITHOUT_CLASSIFICATION	Although Operation and Signal are peers in the UML type hierarchy they share the attributes isRoot, isLeaf, isAbstract, and specification. Concurrency is not shared and is specific to Operation.
WITHOUT_CLASSIFICATION	remove last ,
WITHOUT_CLASSIFICATION	end of block
WITHOUT_CLASSIFICATION	A string of the form "name:"
WITHOUT_CLASSIFICATION	this is a Message UML object
WITHOUT_CLASSIFICATION	Supported format: predecessors number ":" action The 3 parts of the string to generate:
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	This may return null:
WITHOUT_CLASSIFICATION	activatorIntNo is now guaranteed not null
WITHOUT_CLASSIFICATION	List<String> args = null;
WITHOUT_CLASSIFICATION	get the ordered list of immediate successors:
WITHOUT_CLASSIFICATION	the condition or iteration expression (recurrence):
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	Now apply the changes to the model:
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	If there are more than one suitable operation, then we pick the first one.
WITHOUT_CLASSIFICATION	Disconnect the message from the call graph Make copies of returned live collections since we're modifying
WITHOUT_CLASSIFICATION	Find the preceding message, if any, on either end of the association.
WITHOUT_CLASSIFICATION	MClassifierRole
WITHOUT_CLASSIFICATION	Connect the message at a new spot
WITHOUT_CLASSIFICATION	case 3 & 4
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	MClassifierRole
WITHOUT_CLASSIFICATION	If no variable name was given, then retain the one in the model.
WITHOUT_CLASSIFICATION	If no function-name was given, then retain the one in the model.
WITHOUT_CLASSIFICATION	Store the guard, i.e. condition or iteration expression, in the recurrence field of the Action:
WITHOUT_CLASSIFICATION	If there was no Action yet, create a CallAction:
WITHOUT_CLASSIFICATION	Things are strange if there are more than one candidate root, it has no obvious interpretation in terms of a call tree.
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	Jaap Branderhorst 2002-23-09 added next lines to link parameters and operations to the figs that represent them
WITHOUT_CLASSIFICATION	We can do nothing if we don't have both the use case and extension point.
WITHOUT_CLASSIFICATION	Parse the string to creat a new extension point.
WITHOUT_CLASSIFICATION	If we got back null we interpret this as meaning delete the reference to the extension point from the use case, otherwise we set the fields of the extension point to the values in newEp.
WITHOUT_CLASSIFICATION	Build a new extension point
WITHOUT_CLASSIFICATION	The empty string. Return null
WITHOUT_CLASSIFICATION	Handle Derived:
WITHOUT_CLASSIFICATION	If we are given the null string, return immediately, so that the extensionpoint is removed.
WITHOUT_CLASSIFICATION	A string of the form "location". This will be confused by the string ":", so we pick this out as an instruction to clear both name and location.
WITHOUT_CLASSIFICATION	A string of the form "name:location". Discard the middle token (":")
WITHOUT_CLASSIFICATION	Read past the colon.
WITHOUT_CLASSIFICATION	The string to build
WITHOUT_CLASSIFICATION	Get the fields we want
WITHOUT_CLASSIFICATION	Put in the name field if it's there
WITHOUT_CLASSIFICATION	Put in the location field if it's there
WITHOUT_CLASSIFICATION	First we decode the string:
WITHOUT_CLASSIFICATION	Secondly we check the previous model structure:
WITHOUT_CLASSIFICATION	And 3rd, we adapt the model:
WITHOUT_CLASSIFICATION	Same class, other operation
WITHOUT_CLASSIFICATION	Other class
WITHOUT_CLASSIFICATION	We found the classifier, now go find the operation:
WITHOUT_CLASSIFICATION	Here we located the new classifier with its operation.
WITHOUT_CLASSIFICATION	the text was: {frozen}
WITHOUT_CLASSIFICATION	the text was: {frozen = false}
WITHOUT_CLASSIFICATION	the text was: {frozen = true}
WITHOUT_CLASSIFICATION	Copy returned parameters because it will be a live collection for MDR
WITHOUT_CLASSIFICATION	Should we be getting this from the GUI? BT 11 aug 2002
WITHOUT_CLASSIFICATION	no type defined yet
WITHOUT_CLASSIFICATION	If the current property occurs a second time in the given list of properties, then skip it:
WITHOUT_CLASSIFICATION	This automatically pulls in a TagDefinition from the profile:
WITHOUT_CLASSIFICATION	The TV existed, but maybe it was not "true":
WITHOUT_CLASSIFICATION	TODO: For UML2: Check if the type of the TV is String.
WITHOUT_CLASSIFICATION	Generate all the existing internal transitions, so that we can compare them as text with the newly entered ones.
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	This would be solution (1): Model.getExtensionMechanismsHelper().setDataValues( taggedValue, new String[] {"false"});
WITHOUT_CLASSIFICATION	There are 2 possibilities: either (1) we follow the traditional notation philosophy, and set the tagged value to false, or (2) we restore to the pristine situation and delete the taggedValue (whatever the value was). I chose the latter (mvw).
WITHOUT_CLASSIFICATION	Allow concatenation order and separator to be localized
WITHOUT_CLASSIFICATION	Parameter etc.
WITHOUT_CLASSIFICATION	"in" is the default
WITHOUT_CLASSIFICATION	"in"
WITHOUT_CLASSIFICATION	return nothing
WITHOUT_CLASSIFICATION	it can still be null if the UML element did not have a multiplicity defined.
WITHOUT_CLASSIFICATION	Let's not be picky about the brackets - just remove them:
WITHOUT_CLASSIFICATION	get the classifier
WITHOUT_CLASSIFICATION	the State of a ClassifierInState is removed, so let's reduce it to a Classifier.
WITHOUT_CLASSIFICATION	the model is changed - job done
WITHOUT_CLASSIFICATION	Strings
WITHOUT_CLASSIFICATION	Remove the states that did not match.
WITHOUT_CLASSIFICATION	Now we have to see if any state in any statemachine of classifier is named [name]. If so, then we only have to link the state to c.
WITHOUT_CLASSIFICATION	the model is changed - our job is done
WITHOUT_CLASSIFICATION	the model is changed - our job is done
WITHOUT_CLASSIFICATION	no state named s is found, so we have to reject the user's input
WITHOUT_CLASSIFICATION	Finally, do the adaptations:
WITHOUT_CLASSIFICATION	then c is a "normal" Classifier UML states
WITHOUT_CLASSIFICATION	let's create a new ClassifierInState with the correct links
WITHOUT_CLASSIFICATION	This updates the diagram - hence as last statement:
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	We can distinguish between 4 cases: 1. A trigger is given. None exists yet. 2. The trigger was present, and it is the same type, or a different type, and its text is changed, or the same. 3. A trigger is not given. None exists yet. 4. The name of the trigger was present, but is removed. The reaction in these cases should be: 1. Find the referred trigger (issue 5988) or create a new one, and hook it to the transition. 2. Rename the trigger. 3. Nop. 4. Unhook and erase the existing trigger.
WITHOUT_CLASSIFICATION	if no classifier has been set, then entering a state is not useful, so the user's input has to be rejected.
WITHOUT_CLASSIFICATION	TODO: If the next line trows an exception, then what do we do with the remainder of the parsed/to be parsed lines?
WITHOUT_CLASSIFICATION	Add this new one, and mark it to be retained:
WITHOUT_CLASSIFICATION	Process the final list of internal transitions, and hook it to the state:
WITHOUT_CLASSIFICATION	don't forget to remove old internals!
WITHOUT_CLASSIFICATION	Make next accesses to this instance predictable:
WITHOUT_CLASSIFICATION	and hook in the new ones:
WITHOUT_CLASSIFICATION	the ActionExpression
WITHOUT_CLASSIFICATION	let's look for a TimeEvent, ChangeEvent, CallEvent or SignalEvent
WITHOUT_CLASSIFICATION	operation(paramlist)
WITHOUT_CLASSIFICATION	the part after the || is for when there's nothing between the ()
WITHOUT_CLASSIFICATION	It is safe to give a null to the next function, since a statemachine is always composed by a model anyhow.
WITHOUT_CLASSIFICATION	else the empty s will do
WITHOUT_CLASSIFICATION	case 1 and 2
WITHOUT_CLASSIFICATION	language
WITHOUT_CLASSIFICATION	Do not set the name.
WITHOUT_CLASSIFICATION	Do not set the name.
WITHOUT_CLASSIFICATION	This case is a bit different, because of the parameters. If the event already exists, the parameters are ignored.
WITHOUT_CLASSIFICATION	when(...)
WITHOUT_CLASSIFICATION	signalname
WITHOUT_CLASSIFICATION	and parse the parameter list
WITHOUT_CLASSIFICATION	And hook it to the transition immediately, so that an exception can not cause it to remain dangling:
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	yes, there are more:
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	Parameter etc.
WITHOUT_CLASSIFICATION	"in" is the default
WITHOUT_CLASSIFICATION	"in"
WITHOUT_CLASSIFICATION	return nothing
WITHOUT_CLASSIFICATION	and parse the parameter list
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	Just change the time expression
WITHOUT_CLASSIFICATION	we have an event without expression
WITHOUT_CLASSIFICATION	It's a time-event now, but was of another type before!
WITHOUT_CLASSIFICATION	Just change the ChangeExpression
WITHOUT_CLASSIFICATION	Create a new expression:
WITHOUT_CLASSIFICATION	The parsed text describes a change-event, but the model contains another type!
WITHOUT_CLASSIFICATION	Just change the Name and linked operation
WITHOUT_CLASSIFICATION	TODO: Change the linked operation.
WITHOUT_CLASSIFICATION	Just change the Name and linked signal
WITHOUT_CLASSIFICATION	case 3 and 4
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	Do not check if the parameters match.
WITHOUT_CLASSIFICATION	case 1
WITHOUT_CLASSIFICATION	NSUML does this (?) Model.getFacade().setGuard(trans, g);
WITHOUT_CLASSIFICATION	No text. We may remove the literal.
WITHOUT_CLASSIFICATION	No non-white chars in text? remove literal!
WITHOUT_CLASSIFICATION	Heuristic algorithm: do not show stereotypes if there is no name.
WITHOUT_CLASSIFICATION	@see javax.swing.JComponent#setVisible(boolean)
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	construct bases string (comma separated)
WITHOUT_CLASSIFICATION	Great! The class already existed - just use it.
WITHOUT_CLASSIFICATION	If no base was typed, then only set the name:
WITHOUT_CLASSIFICATION	Only set the name if the base was found:
WITHOUT_CLASSIFICATION	If the base was not changed, then only set the name:
WITHOUT_CLASSIFICATION	get the associationRole name
WITHOUT_CLASSIFICATION	Let's create a class with the given name, otherwise the user will not understand why we refuse his input!
WITHOUT_CLASSIFICATION	Only instantiate when we need it.
WITHOUT_CLASSIFICATION	If the base is already set to this assoc, then do not set it again. This check is needed, otherwise the setbase() below gives an exception.
WITHOUT_CLASSIFICATION	2002-07-31 Jaap Branderhorst from here made visibility etc. configurable
WITHOUT_CLASSIFICATION	get the base association name
WITHOUT_CLASSIFICATION	no instantiations
WITHOUT_CLASSIFICATION	The next one defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	end of OCLEvaluator
WITHOUT_CLASSIFICATION	look for associations
WITHOUT_CLASSIFICATION	look for associations
WITHOUT_CLASSIFICATION	MAssociationEnd
WITHOUT_CLASSIFICATION	MParameter
WITHOUT_CLASSIFICATION	MAssociationEnd
WITHOUT_CLASSIFICATION	The ocl toolkit does not like void return types
WITHOUT_CLASSIFICATION	MClassifiers cannot be Bag
WITHOUT_CLASSIFICATION	MClassifier
WITHOUT_CLASSIFICATION	first search for appropriate attributes
WITHOUT_CLASSIFICATION	first search for appropriate attributes
WITHOUT_CLASSIFICATION	MClassifier
WITHOUT_CLASSIFICATION	MOperation
WITHOUT_CLASSIFICATION	MOperation
WITHOUT_CLASSIFICATION	... and not incompletely imported
WITHOUT_CLASSIFICATION	Query checking added 05/21/01, sz9
WITHOUT_CLASSIFICATION	Query checking added 05/21/01, sz9
WITHOUT_CLASSIFICATION	end class OCLExpander
WITHOUT_CLASSIFICATION	skip first parameter == return type
WITHOUT_CLASSIFICATION	skip first parameter == return type
WITHOUT_CLASSIFICATION	Only look at classes...
WITHOUT_CLASSIFICATION	abstract classes are hardly ever singletons
WITHOUT_CLASSIFICATION	and not association classes
WITHOUT_CLASSIFICATION	with a name...
WITHOUT_CLASSIFICATION	If there is an attribute which is not static => no problem
WITHOUT_CLASSIFICATION	If there is an outgoing association => no problem
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Only look at classes
WITHOUT_CLASSIFICATION	Only look at classes
WITHOUT_CLASSIFICATION	Check for Singleton stereotype, uninitialised instance variables and outgoing associations, as per JavaDoc above.
WITHOUT_CLASSIFICATION	Found no such attribute
WITHOUT_CLASSIFICATION	We only look at singletons
WITHOUT_CLASSIFICATION	We only look at singletons
WITHOUT_CLASSIFICATION	end class CrSingletonViolatedOnlyPrivateConstructors
WITHOUT_CLASSIFICATION	NOTE: For historical reasons true == hide, so we need to invert the sense of this
WITHOUT_CLASSIFICATION	end class CrEmptyPackage
WITHOUT_CLASSIFICATION	At this stage during loading, the diagrams are not created yet - so we have to store this name for later use.
WITHOUT_CLASSIFICATION	pw.close();
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	project.setFile(file);
WITHOUT_CLASSIFICATION	for AndroMDA profiles
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	Give the parser a map of model elements keyed by their UUID. This is used to allocate figs to their owner using the "href" attribute in PGML.
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	If we get a 2nd error, just ignore it
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Should never happen - something's really wrong
WITHOUT_CLASSIFICATION	main parsing methods
WITHOUT_CLASSIFICATION	@see java.io.InputStream#close()
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read()
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read(byte[], int, int)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	boolean upgradeRequired = !checkVersion(fileVersion, releaseVersion)
WITHOUT_CLASSIFICATION	Upgrade is in the way for UML2 projects, so we turn it off in that case:
WITHOUT_CLASSIFICATION	Load .argo project descriptor
WITHOUT_CLASSIFICATION	Load the rest
WITHOUT_CLASSIFICATION	Copy the todo items after the model and diagrams so that any model elements or figs that the todo items refer to will exist before creating critics.
WITHOUT_CLASSIFICATION	first read the .argo file from Zip
WITHOUT_CLASSIFICATION	Keep reading till we hit the <argo> tag
WITHOUT_CLASSIFICATION	Get the version from the tag.
WITHOUT_CLASSIFICATION	Skip 1 lines
WITHOUT_CLASSIFICATION	Loop round loading the diagrams
WITHOUT_CLASSIFICATION	private EventListenerList listenerList = new EventListenerList();
WITHOUT_CLASSIFICATION	Skip the 2 lines <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE todo SYSTEM "todo.dtd" >
WITHOUT_CLASSIFICATION	Keep reading till we get the left bracket of an opening tag
WITHOUT_CLASSIFICATION	Compare each following character to see that it matches the tag we want
WITHOUT_CLASSIFICATION	We also want to match with the right bracket of the tag or some other terminator
WITHOUT_CLASSIFICATION	We've found the matching tag but do we have the correct instance with matching attributes?
WITHOUT_CLASSIFICATION	Read the name of the child tag and then reset read position back to that child tag.
WITHOUT_CLASSIFICATION	Skip any whitespace till we should be on an equals sign.
WITHOUT_CLASSIFICATION	Skip any whitespace till we should be on a quote symbol.
WITHOUT_CLASSIFICATION	No other uses of string in PGMLHandler
WITHOUT_CLASSIFICATION	Handle other uses of <private> contents
WITHOUT_CLASSIFICATION	Sanity check - the returned path item placement strategy should match the one in the UML. If it doesn't, it could be that the UML was created with an older argo version, and the new argo version use a different placement strategy. If they don't match, just use the default.
WITHOUT_CLASSIFICATION	If any of the values are null, ignore the element.
WITHOUT_CLASSIFICATION	If the PathItemPlacement was unknown, leave the diagram with the default settings.
WITHOUT_CLASSIFICATION	For a match to be found, it has to have the same owner, and the same long class name.
WITHOUT_CLASSIFICATION	A list of the path item attributes for this container. The list is populated during parsing, them processed at endElement() private List<Hashtable<String, String>> pathItemAttrs = new ArrayList<Hashtable<String, String>>();
WITHOUT_CLASSIFICATION	This code has to go within the startElement block after the strings have been matched.
WITHOUT_CLASSIFICATION	Method 1: (collect data and assign later in endElement() method). Hashtable<String, String> ht = new Hashtable<String, String>(); ht.put("classname", classname); ht.put("figclassname", figclassname); ht.put("ownerhref", ownerhref); ht.put("angle", angle); ht.put("offset", offset); pathItemAttrs.add(ht);
WITHOUT_CLASSIFICATION	Create a new diagram wide settings block which is backed by the project-wide defaults that we were passed
WITHOUT_CLASSIFICATION	Ignore non-private elements within FigNode groups
WITHOUT_CLASSIFICATION	Handle ItemUID in container contents
WITHOUT_CLASSIFICATION	Discard class name, x y w h
WITHOUT_CLASSIFICATION	The owner should always have already been set in the constructor
WITHOUT_CLASSIFICATION	happens when 'is' comes from a zip file
WITHOUT_CLASSIFICATION	continue with null stream, readDiagram(...) will take care of it
WITHOUT_CLASSIFICATION	TODO: Localize these
WITHOUT_CLASSIFICATION	If the id does not look like a top-level Fig then we can assume that this is an id of a FigEdgePort inside some FigEdge. So extract the FigEdgePort from the FigEdge and return that as the FigNode.
WITHOUT_CLASSIFICATION	If there is no dot then this must be a top level Fig and can be assumed to be a FigNode.
WITHOUT_CLASSIFICATION	We are looking first to match with 3 different constructor types. We would not expect a Fig to have any mix of these. Any constructor other than these should be deprecated so we look for these first. Fig(DiagramEdgeSettings, DiagramSettings) Fig(Object, Rectangle, DiagramSettings) Fig(Rectangle, DiagramSettings)
WITHOUT_CLASSIFICATION	FigNodeModelElements should match here
WITHOUT_CLASSIFICATION	FigEdgeModelElements should match here (they have no bounds)
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	Fall back to GEF's handling if we couldn't find an appropriate constructor
WITHOUT_CLASSIFICATION	myWriter,
WITHOUT_CLASSIFICATION	Empty constructor
WITHOUT_CLASSIFICATION	Empty constructor
WITHOUT_CLASSIFICATION	for compatibility with older format
WITHOUT_CLASSIFICATION	<model> is not used in current implementation
WITHOUT_CLASSIFICATION	<model> is not used in current implementation
WITHOUT_CLASSIFICATION	|| model == null
WITHOUT_CLASSIFICATION	|| model == null
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	Write out header section
WITHOUT_CLASSIFICATION	Note we assume members are ordered correctly already
WITHOUT_CLASSIFICATION	let's initialize the progressMgr
WITHOUT_CLASSIFICATION	Run through any stylesheet upgrades
WITHOUT_CLASSIFICATION	Don't use systemId here or it will get opened in preference to inputStream.
WITHOUT_CLASSIFICATION	UML 2.x files could also contain a profile model. Try again with uml:Profile as main tag.
WITHOUT_CLASSIFICATION	let's update the progress
WITHOUT_CLASSIFICATION	If we're trying to load a file from a future version complain and refuse.
WITHOUT_CLASSIFICATION	Empty constructor
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	No more we can do here on failure
WITHOUT_CLASSIFICATION	Buffer containing characters which have been decoded from the bytes in inBB.
WITHOUT_CLASSIFICATION	RegEx pattern for XML declaration and, optionally, DOCTYPE Backslashes are doubled up - one for Java, one for Regex
WITHOUT_CLASSIFICATION	Convert from bytes back to characters
WITHOUT_CLASSIFICATION	rewind our character buffer
WITHOUT_CLASSIFICATION	Remove anything that matches our pattern
WITHOUT_CLASSIFICATION	Remove null characters at the end
WITHOUT_CLASSIFICATION	Reencode the remaining characters as bytes again
WITHOUT_CLASSIFICATION	and write them to our output stream
WITHOUT_CLASSIFICATION	Skip the <?xml... first line
WITHOUT_CLASSIFICATION	cat.debug("NOTE: TodoParser handleStartTag:" + e.getName());
WITHOUT_CLASSIFICATION	NOP
WITHOUT_CLASSIFICATION	This is expected to be safe, don't add a try block here
WITHOUT_CLASSIFICATION	cat.debug("Added ToDoItem: " + _headline);
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see org.xml.sax.ContentHandler#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
WITHOUT_CLASSIFICATION	@see org.xml.sax.ContentHandler#endElement(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.xml.sax.ContentHandler#characters(char[], int, int)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	These strings match the XML element names in the argo.tee exactly.
WITHOUT_CLASSIFICATION	The following is deprecated, but can never be removed to preserve backward compatibility with old project files
WITHOUT_CLASSIFICATION	protected methods
WITHOUT_CLASSIFICATION	empty constructor
WITHOUT_CLASSIFICATION	abstract methods
WITHOUT_CLASSIFICATION	non-abstract methods
WITHOUT_CLASSIFICATION	e.g:org.argouml.uml.generator.ui.ClassGenerationDialog -> poseidon.jar
WITHOUT_CLASSIFICATION	convenience methods
WITHOUT_CLASSIFICATION	end class SAXParserBase
WITHOUT_CLASSIFICATION	Stop UI interception
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	Make sure the file doesn't exist so the user will get prompted to choose a new name
WITHOUT_CLASSIFICATION	possibly use the following instead MemberFilePersister persister = new DiagramMemberFilePersister();
WITHOUT_CLASSIFICATION	class methods
WITHOUT_CLASSIFICATION	end class XMLTokenTableBase
WITHOUT_CLASSIFICATION	These are the file formats I know about:
WITHOUT_CLASSIFICATION	If anything goes wrong return the stack trace as a string so that we get some useful feedback.
WITHOUT_CLASSIFICATION	Return just the comment edges for a specific layer. TODO: Document: Diagram / layer? @param diagram The diagram. @return a {@link List} with the edges.
WITHOUT_CLASSIFICATION	make sure this setting exists in the configuration file to facilitate changing:
WITHOUT_CLASSIFICATION	Is row at top of screen?
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	FileFilter API
WITHOUT_CLASSIFICATION	this check for files without extension...
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	end class XMLElement
WITHOUT_CLASSIFICATION	for AndroMDA
WITHOUT_CLASSIFICATION	For some reason, this alleged directory is a single file This could be that there is some confusion or just the normal, that a single file was selected and is supposed to be imported.
WITHOUT_CLASSIFICATION	Get the contents of the directory
WITHOUT_CLASSIFICATION	The following test can cause trouble with links, because links are accepted as directories, even if they link files. Links could also result in infinite loops. For this reason we don't do this traversing recursively.
WITHOUT_CLASSIFICATION	If this file is a directory
WITHOUT_CLASSIFICATION	load profile name
WITHOUT_CLASSIFICATION	Yes, scroll up one row
WITHOUT_CLASSIFICATION	Testing: Works Ok.
WITHOUT_CLASSIFICATION	if there is only one package in the model, we should suppose it's the profile model, if there is more than one, we take the ones marked as <<profile>>
WITHOUT_CLASSIFICATION	load profile dependencies
WITHOUT_CLASSIFICATION	Set up the property panels for critics:
WITHOUT_CLASSIFICATION	init profiles defined in jar files
WITHOUT_CLASSIFICATION	We have our own UML2 profile, but it is not used. Instead, by the following line the build-in eclipse UML2 standard profile and primitive types implementation are used.
WITHOUT_CLASSIFICATION	Missing WFRs
WITHOUT_CLASSIFICATION	Association Class 4.5.3.2 [1]
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	4.5.3.2 [2]
WITHOUT_CLASSIFICATION	Behavioral Feature 4.5.3.5 [2]
WITHOUT_CLASSIFICATION	TODO: Partly overlaps CrOppEndVsAttr.
WITHOUT_CLASSIFICATION	Tested with fabricated XMI - OK.
WITHOUT_CLASSIFICATION	Tested with fabricated XMI - OK.
WITHOUT_CLASSIFICATION	Tested with fabricated XMI - OK.
WITHOUT_CLASSIFICATION	4.5.3.20 [4]
WITHOUT_CLASSIFICATION	+ "a.allConnections->exists(r | r.type.oclIsKindOf(Actor)) and "
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAIfExpression(tudresden.ocl.parser.node.AIfExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALogicalExpressionTail(tudresden.ocl.parser.node.ALogicalExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseARelationalExpressionTail(tudresden.ocl.parser.node.ARelationalExpressionTail)
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [2]
WITHOUT_CLASSIFICATION	Classifier 4.5.3.8 [5]
WITHOUT_CLASSIFICATION	GeneralizableElement 4.5.3.20 [1]
WITHOUT_CLASSIFICATION	DataType 4.5.3.12 [1]
WITHOUT_CLASSIFICATION	Actor 4.11.3.1 [1]
WITHOUT_CLASSIFICATION	Namespace 4.5.3.26 [2]
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [1]
WITHOUT_CLASSIFICATION	Actor 4.11.3.1 [2]
WITHOUT_CLASSIFICATION	Tested OK, except in some cases, depending on the sequence of the EPs. Probably the implementation of "forAll (x, y | ..." does not cover all combinations.
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [4]
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [3]
WITHOUT_CLASSIFICATION	ActionState 4.13.3.2 [3] Issue 715
WITHOUT_CLASSIFICATION	no default type for UML2
WITHOUT_CLASSIFICATION	the UML Profile is always present and default
WITHOUT_CLASSIFICATION	register the built-in profiles
WITHOUT_CLASSIFICATION	if an exception is raised file is unusable
WITHOUT_CLASSIFICATION	if the list does not exist add the code generation and good practices profiles as default
WITHOUT_CLASSIFICATION	this profile could have not been loaded when the default profile configuration was loaded at first, so we need to do it again
WITHOUT_CLASSIFICATION	We assume profile is contained in a single extent
WITHOUT_CLASSIFICATION	Nothing to delete if we couldn't get the packages
WITHOUT_CLASSIFICATION	If we found an old-style name, update it to the new package name
WITHOUT_CLASSIFICATION	Make sure the names didn't change again
WITHOUT_CLASSIFICATION	simply use name as it is
WITHOUT_CLASSIFICATION	if element is an AssociationEnd use the namespace of containing association
WITHOUT_CLASSIFICATION	if one side is null, compare with the equality operator
WITHOUT_CLASSIFICATION	XXX: hypotheses for AFeatureCall: fwd = op, val = head
WITHOUT_CLASSIFICATION	hypotheses no time expression (only invariants)
WITHOUT_CLASSIFICATION	For a iterator call we should provide: (a) the variables (b) the expression to be evaluated on each step (c) the lambda-evaluator to evaluate it
WITHOUT_CLASSIFICATION	XXX hypothesis: no time expression (inv)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAConstraint(tudresden.ocl.parser.node.AConstraint)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAClassifierContext(tudresden.ocl.parser.node.AClassifierContext)
WITHOUT_CLASSIFICATION	these operations are ok for lists too
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "OCL FEATURE CALL: " + subject + ""+ type +""+ feature + "" + parameters);
WITHOUT_CLASSIFICATION	XXX this should be done in CollectionsModelInterpreter but it can't trigger another invokeFeature...
WITHOUT_CLASSIFICATION	Logger. private static final Logger LOG = Logger.getLogger(DefaultOclEvaluator.class.getName());
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "OCL: " + ocl);
WITHOUT_CLASSIFICATION	propagate
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if test fails this element should not be in the result set
WITHOUT_CLASSIFICATION	if test is ok this element should not be in the result set
WITHOUT_CLASSIFICATION	these operations are ok for bags too
WITHOUT_CLASSIFICATION	4.5.2.1 Abstraction
WITHOUT_CLASSIFICATION	4.5.2.3 Association
WITHOUT_CLASSIFICATION	Additional Operation 4.5.3.1 [1]
WITHOUT_CLASSIFICATION	4.5.2.5 AssociationEnd
WITHOUT_CLASSIFICATION	Additional Operation 4.5.3.3 [1]
WITHOUT_CLASSIFICATION	4.5.2.6 Attribute
WITHOUT_CLASSIFICATION	4.5.2.7 BehavioralFeature
WITHOUT_CLASSIFICATION	4.5.2.8 Binding
WITHOUT_CLASSIFICATION	4.5.2.9 Class
WITHOUT_CLASSIFICATION	4.5.2.10 Classifier
WITHOUT_CLASSIFICATION	TODO specifiedEnd??
WITHOUT_CLASSIFICATION	4.5.2.11 Comment
WITHOUT_CLASSIFICATION	4.5.2.12 Component
WITHOUT_CLASSIFICATION	Additional Operation in 4.5.3.9
WITHOUT_CLASSIFICATION	No, scroll down one row
WITHOUT_CLASSIFICATION	4.5.2.14 Dependency
WITHOUT_CLASSIFICATION	4.5.2.18 ElementOwnership
WITHOUT_CLASSIFICATION	4.5.2.19 Enumeration
WITHOUT_CLASSIFICATION	4.5.2.20 EnumerationLiteral
WITHOUT_CLASSIFICATION	4.5.2.21 Feature
WITHOUT_CLASSIFICATION	4.5.2.23 Generalizable Element
WITHOUT_CLASSIFICATION	Additional Operation in 4.5.3.20
WITHOUT_CLASSIFICATION	4.5.2.26 Method
WITHOUT_CLASSIFICATION	4.5.2.27 ModelElement
WITHOUT_CLASSIFICATION	avoiding null names
WITHOUT_CLASSIFICATION	As extended by 4.6.2.2
WITHOUT_CLASSIFICATION	Additional Operations in 4.5.3.25
WITHOUT_CLASSIFICATION	Additional Operations in 4.5.3.26
WITHOUT_CLASSIFICATION	4.5.2.29 Node
WITHOUT_CLASSIFICATION	4.5.2.30 Operation
WITHOUT_CLASSIFICATION	4.5.2.31 Parameter
WITHOUT_CLASSIFICATION	4.5.2.35 ProgrammingLanguageDataType
WITHOUT_CLASSIFICATION	Set the icon:
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize()
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	4.5.2.37 StructuralFeature
WITHOUT_CLASSIFICATION	4.5.2.38 TemplateArgument
WITHOUT_CLASSIFICATION	4.5.2.39 TemplateParameter
WITHOUT_CLASSIFICATION	4.11.3.5 UseCase
WITHOUT_CLASSIFICATION	The operation specificationPath results in a set containing all surrounding Namespaces that are not instances of Package. specificationPath : Set(Namespace) specificationPath = self.allSurroundingNamespaces->select(n | n.oclIsKindOf(Subsystem) or n.oclIsKindOf(Class))
WITHOUT_CLASSIFICATION	4.5.3.2 AssociationClass
WITHOUT_CLASSIFICATION	The operation allConnections results in the set of all AssociationEnds of the AssociationClass, including all connections defined by its parent (transitive closure).
WITHOUT_CLASSIFICATION	4.6.2.3 Stereotype
WITHOUT_CLASSIFICATION	stereotypeConstraint ?
WITHOUT_CLASSIFICATION	4.6.2.4 TagDefinition
WITHOUT_CLASSIFICATION	4.6.2.5 TaggedValue
WITHOUT_CLASSIFICATION	add adapters that do nothing for keyboard and mouse actions
WITHOUT_CLASSIFICATION	discard the event if its source is not from the correct type
WITHOUT_CLASSIFICATION	Guard against error conditions if climb search wasn't successful
WITHOUT_CLASSIFICATION	Sets the mouse cursor to hourglass mode
WITHOUT_CLASSIFICATION	Start receiving all events and consume them if necessary
WITHOUT_CLASSIFICATION	Activate the glass pane capabilities
WITHOUT_CLASSIFICATION	Stop receiving all events
WITHOUT_CLASSIFICATION	Deactivate the glass pane capabilities
WITHOUT_CLASSIFICATION	Sets the mouse cursor back to the regular pointer
WITHOUT_CLASSIFICATION	no initialization required
WITHOUT_CLASSIFICATION	end class SpacerPanel
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferData(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Called when the user has pressed Save. Performs "Save" in all Tabs.
WITHOUT_CLASSIFICATION	Climb the component hierarchy until a RootPaneContainer is found or until the very top
WITHOUT_CLASSIFICATION	end class SplashPanel
WITHOUT_CLASSIFICATION	Retrieve an existing GlassPane if old one already exist or create a new one, otherwise return null
WITHOUT_CLASSIFICATION	Add settings from the settings registry.
WITHOUT_CLASSIFICATION	keep track of the visible window associated w/the component useful during event filtering
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name, only xmi is allowed
WITHOUT_CLASSIFICATION	If a toolbar was requested, create an empty one.
WITHOUT_CLASSIFICATION	Increase width to accommodate all tabs on one row.
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	Called when the user has pressed Cancel. Performs "Cancel" in all Tabs.
WITHOUT_CLASSIFICATION	end class TabText
WITHOUT_CLASSIFICATION	If a recursive call from setVisible(), just return
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	windowOpen state will be changed when window is activated
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	We have to tell the settings tab in which project the settings reside:
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	We only request focus the first time we become visible
WITHOUT_CLASSIFICATION	Use Case
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowOpened(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	Handle the same as an explicit cancel
WITHOUT_CLASSIFICATION	savePosition(prpTodo, TabToDo.class); savePosition(prpProperties, TabProps.class); savePosition(prpDocumentation, TabDocumentation.class); savePosition(prpStyle, TabStyle.class); savePosition(prpSource, TabSrc.class); savePosition(prpConstraints, TabConstraints.class); savePosition(prpTaggedValues, TabTaggedValues.class);
WITHOUT_CLASSIFICATION	defer work until fetched/visible
WITHOUT_CLASSIFICATION	Actor
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	loadPosition(prpTodo, TabToDo.class); loadPosition(prpProperties, TabProps.class); loadPosition(prpDocumentation, TabDocumentation.class); loadPosition(prpStyle, TabStyle.class); loadPosition(prpSource, TabSrc.class); loadPosition(prpConstraints, TabConstraints.class); loadPosition(prpTaggedValues, TabTaggedValues.class);
WITHOUT_CLASSIFICATION	------------- Rule management --------------
WITHOUT_CLASSIFICATION	----------- name -------------------------
WITHOUT_CLASSIFICATION	------ all rules ----------
WITHOUT_CLASSIFICATION	TODO: factor out @param rule the rule to be added
WITHOUT_CLASSIFICATION	Put the current pane in a scroll pane.
WITHOUT_CLASSIFICATION	end class StylePanelFigText
WITHOUT_CLASSIFICATION	NOTE: These must stay in this order to match rendering styles
WITHOUT_CLASSIFICATION	The boundary box as held in the target fig, and as listed in the boundary box style field (null if we don't have anything valid)
WITHOUT_CLASSIFICATION	Only reset the text if the two are not the same (i.e the fig has moved, rather than we've just edited the text, when setTargetBBox() will have made them the same). Note that styleBounds could be null, so we do the test this way round.
WITHOUT_CLASSIFICATION	Change the fill colour
WITHOUT_CLASSIFICATION	Change the line colour
WITHOUT_CLASSIFICATION	Can't do anything if we don't have a fig.
WITHOUT_CLASSIFICATION	Parse the boundary box text. Null is returned if it is empty or invalid, which causes no change. Otherwise we tell GEF we are making a change, make the change and tell GEF we've finished.
WITHOUT_CLASSIFICATION	Get the text in the field, and don't do anything if the field is empty.
WITHOUT_CLASSIFICATION	Parse the string as if possible
WITHOUT_CLASSIFICATION	Empty implementation - we only care about keyTyped
WITHOUT_CLASSIFICATION	Empty implementation - we only care about keyTyped
WITHOUT_CLASSIFICATION	ignored - will never be called
WITHOUT_CLASSIFICATION	add preloading progress bar?
WITHOUT_CLASSIFICATION	JasonsThemes
WITHOUT_CLASSIFICATION	TODO - lets pass in Project as a constructor argument
WITHOUT_CLASSIFICATION	Make up a default
WITHOUT_CLASSIFICATION	lafClass == null ||
WITHOUT_CLASSIFICATION	Set to the default LAF
WITHOUT_CLASSIFICATION	top, left, bottom, right
WITHOUT_CLASSIFICATION	If LAF is Metal (either set explicitly, or as the default)
WITHOUT_CLASSIFICATION	Set a custom LAF
WITHOUT_CLASSIFICATION	@see javax.swing.JTree#fireTreeCollapsed(javax.swing.tree.TreePath)
WITHOUT_CLASSIFICATION	@see javax.swing.JTree#setModel(javax.swing.tree.TreeModel)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getName()
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	It looks better if the height increases, too
WITHOUT_CLASSIFICATION	TODO: 10 and 120 were found by trial and error. Calculate them.
WITHOUT_CLASSIFICATION	pack();
WITHOUT_CLASSIFICATION	Not localized:
WITHOUT_CLASSIFICATION	Alphabetic order!
WITHOUT_CLASSIFICATION	Alphabetic order!
WITHOUT_CLASSIFICATION	end class AboutBox
WITHOUT_CLASSIFICATION	Save project at slightly lower priority to keep UI responsive
WITHOUT_CLASSIFICATION	saves the project
WITHOUT_CLASSIFICATION	MVW: We should use default font sizes as much as possible. BTW, this impacts only the width, and reduces readibility:
WITHOUT_CLASSIFICATION	setFont(LookAndFeelMgr.getInstance().getSmallFont());
WITHOUT_CLASSIFICATION	This enables tooltips for tree; this one won't be shown:
WITHOUT_CLASSIFICATION	The default (16) puts the icons too close together:
WITHOUT_CLASSIFICATION	------------ methods that override JTree methods ---------
WITHOUT_CLASSIFICATION	If the name is too long or multi-line (e.g. for comments) then we reduce to the first line or 80 chars.
WITHOUT_CLASSIFICATION	Look for stereotype
WITHOUT_CLASSIFICATION	Use default formatting for any other type of UML element
WITHOUT_CLASSIFICATION	------------- other methods ------------------
WITHOUT_CLASSIFICATION	Labels at the left ...
WITHOUT_CLASSIFICATION	... and fields at the right.
WITHOUT_CLASSIFICATION	The user's full name:
WITHOUT_CLASSIFICATION	The user's email:
WITHOUT_CLASSIFICATION	The project description:
WITHOUT_CLASSIFICATION	This non-editable field shows the version of the ArgoUML that last saved this project:
WITHOUT_CLASSIFICATION	We need to fill the whole pane, so that the description field can take all available space:
WITHOUT_CLASSIFICATION	There is no default description.
WITHOUT_CLASSIFICATION	Defer all work until we're actually needed
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	these are blue in Metal Default Theme
WITHOUT_CLASSIFICATION	these are gray in Metal Default Theme
WITHOUT_CLASSIFICATION	ActionListener implementation
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary1()
WITHOUT_CLASSIFICATION	private JCheckBox jchbBold = null;
WITHOUT_CLASSIFICATION	find and add all subdirectories
WITHOUT_CLASSIFICATION	private JCheckBox jchbItalic = null;
WITHOUT_CLASSIFICATION	Initialize font faces list
WITHOUT_CLASSIFICATION	Most of this code originates from ActionOpenProject.
WITHOUT_CLASSIFICATION	Initialize font sizes list
WITHOUT_CLASSIFICATION	jContentPane.add(getJchbBold(), gridBagConstraints2); jContentPane.add(getJchbItalic(), gridBagConstraints3);
WITHOUT_CLASSIFICATION	Try adding the extension from the chosen filter.
WITHOUT_CLASSIFICATION	MouseListener implementation
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	these are blue in Metal Default Theme
WITHOUT_CLASSIFICATION	these are gray in Metal Default Theme
WITHOUT_CLASSIFICATION	KeyListener implementation
WITHOUT_CLASSIFICATION	ListSelectionListener implementation
WITHOUT_CLASSIFICATION	diagrams are not placed in search results
WITHOUT_CLASSIFICATION	Only return once per diagram so we don't, for example, find a class as a diagram element and also as a child of a package which is on the diagram
WITHOUT_CLASSIFICATION	no related
WITHOUT_CLASSIFICATION	TODO: tabs for class, state, usecase, help
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	TabResults has really large preferred height, so divide in half to reduce size of dialog which will be sized based on this preferred size.
WITHOUT_CLASSIFICATION	Load project at slightly lower priority to keep UI responsive
WITHOUT_CLASSIFICATION	JTabbedPane tabs = new JTabbedPane(); mainPanel.add(tabs, BorderLayout.CENTER); tabs.addTab("All Diagrams", allDiagrams);
WITHOUT_CLASSIFICATION	The south panel always has tabs - but they are added (later) elsewhere.
WITHOUT_CLASSIFICATION	loads the project
WITHOUT_CLASSIFICATION	default tab todo
WITHOUT_CLASSIFICATION	Special case for backward compatibility
WITHOUT_CLASSIFICATION	default tab todo
WITHOUT_CLASSIFICATION	Select prop panel if current panel is not appropriate for selected target
WITHOUT_CLASSIFICATION	not visible any more - so remove as listener
WITHOUT_CLASSIFICATION	Newly selected tab may have stale target info, so generate a new set target event for it to refresh it
WITHOUT_CLASSIFICATION	update the previously selected tab
WITHOUT_CLASSIFICATION	The other tabs need to be updated depending on the selection.
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	TODO: Quick return here for target == null? - tfm
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	---------------- listener management ----------------
WITHOUT_CLASSIFICATION	--------------- tree nodes -------------------------
WITHOUT_CLASSIFICATION	------------- tree structure -----------------
WITHOUT_CLASSIFICATION	see getValue(), setValue()
WITHOUT_CLASSIFICATION	Create a timer.
WITHOUT_CLASSIFICATION	Mount the glasspane on the component window
WITHOUT_CLASSIFICATION	keep track of the glasspane as an instance variable
WITHOUT_CLASSIFICATION	Start interception UI interactions
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	If action comes in with no modifiers, it is a pure keyboard event (e.g. spacebar), so do it. Anything else is probably a mouse event, so ignore it. Mouse events are dealt with by mousePressed() instead (see bottom of page).
WITHOUT_CLASSIFICATION	end class StylePanel
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	Make sure the correspondence that we depend on doesn't change
WITHOUT_CLASSIFICATION	getContentPane().add(_menuBar, BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	allows me to ask "Do you want to save first?"
WITHOUT_CLASSIFICATION	Add listener for project changes
WITHOUT_CLASSIFICATION	add listener to get notified when active diagram changes
WITHOUT_CLASSIFICATION	Add a listener to focus changes. Rationale: reset the undo manager to start a new chain.
WITHOUT_CLASSIFICATION	We get many many events (why?), so let's filter:
WITHOUT_CLASSIFICATION	create the todopane
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.JFrame#getJMenuBar()
WITHOUT_CLASSIFICATION	@see java.awt.Component#setVisible(boolean)
WITHOUT_CLASSIFICATION	There are various details panes all of which could hold different tabs pages according to users settings. Place each pane in the required border area.
WITHOUT_CLASSIFICATION	Toolbar boundary is the area between the menu and the status bar. It contains the workarea at centre and the toolbar position north, south, east or west.
WITHOUT_CLASSIFICATION	Add target listeners for details panes
WITHOUT_CLASSIFICATION	Convenience methods to return saved width and height values
WITHOUT_CLASSIFICATION	In theory there can be multiple details pane (work in progress). It must first be determined which details page contains the properties tab. Bob Tarling 7 Dec 2002
WITHOUT_CLASSIFICATION	The trySave method results in the save taking place in another thread. If that completes without error the ProjectBrowser.exit() method will be called which will actually exist the system.
WITHOUT_CLASSIFICATION	end class WindowCloser
WITHOUT_CLASSIFICATION	the project changed
WITHOUT_CLASSIFICATION	Designer.TheDesigner.getToDoList().removeAllElements();
WITHOUT_CLASSIFICATION	update all panes
WITHOUT_CLASSIFICATION	/ TargetListener methods implemented so notified when selected diagram changes. Used to update the window title.
WITHOUT_CLASSIFICATION	this method is invoked from several places, so we have to check whether if the project uri is set or not
WITHOUT_CLASSIFICATION	does the file really exists?
WITHOUT_CLASSIFICATION	project file doesn't exist. let's pop up a message dialog..
WITHOUT_CLASSIFICATION	..and let's ask the user whether he wants to save the actual project into a new file or not
WITHOUT_CLASSIFICATION	save action has been cancelled
WITHOUT_CLASSIFICATION	Attempt to save this project under a new name.
WITHOUT_CLASSIFICATION	Prompt the user for the new name.
WITHOUT_CLASSIFICATION	let's call the real save method
WITHOUT_CLASSIFICATION	Repair any errors in the project
WITHOUT_CLASSIFICATION	notification of menu bar
WITHOUT_CLASSIFICATION	Simulate some errors to repair. Replace with junits - Bob
WITHOUT_CLASSIFICATION	Change to true to enable testing
WITHOUT_CLASSIFICATION	A Fig with a null owner
WITHOUT_CLASSIFICATION	A Fig with a null layer
WITHOUT_CLASSIFICATION	A Fig with a removed model element
WITHOUT_CLASSIFICATION	Remove the old project first. It's wasteful to create a temp empty project, but too much of ArgoUML depends on having a current project
WITHOUT_CLASSIFICATION	Let's save this project in the mru list
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	Let's save this project as the last used one in the configuration file
WITHOUT_CLASSIFICATION	an error that can be corrected by the user, so no stack trace, but instead an explanation and a hint how to fix
WITHOUT_CLASSIFICATION	an error that can be corrected by the user, so no stack trace, but instead an explanation and a hint how to fix
WITHOUT_CLASSIFICATION	This is temporary. Load project should create a new project with its own UndoManager and so there should be no Command
WITHOUT_CLASSIFICATION	Make sure save action is always reinstated
WITHOUT_CLASSIFICATION	We clear the save-required flag on the Swing event thread in the hopes that it gets done after any other background work (listener updates) that is being done there
WITHOUT_CLASSIFICATION	adding project files icon
WITHOUT_CLASSIFICATION	end class ProjectBrowser
WITHOUT_CLASSIFICATION	Defer initialization until we're visible
WITHOUT_CLASSIFICATION	Make the result inmediately visible in case of apply:
WITHOUT_CLASSIFICATION	Disabled since it gives various problems: e.g. the toolbar icons get too wide. Also the default does not give the new java 5.0 looks. SwingUtilities.updateComponentTreeUI(SwingUtilities.getRootPane(this));
WITHOUT_CLASSIFICATION	filled in later
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	Create new menu item if it doesn't exist for this class.
WITHOUT_CLASSIFICATION	Make this change persistant
WITHOUT_CLASSIFICATION	If menus don't containt menu item necessary for this class, create it
WITHOUT_CLASSIFICATION	If visibility is already changed for this class, respect it.
WITHOUT_CLASSIFICATION	If there is persistant state for this toolbar, respect it, or add it to persistance data
WITHOUT_CLASSIFICATION	Queue to event thread to prevent race during close
WITHOUT_CLASSIFICATION	Add toolbar.
WITHOUT_CLASSIFICATION	Register popup menu with toolbar.
WITHOUT_CLASSIFICATION	these settings are needed to make the ProgressMonitor pop up early
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowActivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeiconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowIconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	Add settings from the settings registry.
WITHOUT_CLASSIFICATION	Increase width to accommodate all tabs on one row.
WITHOUT_CLASSIFICATION	windowOpen state will be changed when window is activated
WITHOUT_CLASSIFICATION	Called when the user has pressed Save. Performs "Save" in all Tabs.
WITHOUT_CLASSIFICATION	Called when the user has pressed Cancel. Performs "Cancel" in all Tabs.
WITHOUT_CLASSIFICATION	We only request focus the first time we become visible
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	Handle the same as an explicit cancel
WITHOUT_CLASSIFICATION	File load/save gets done on a background thread, so we'll probably have to queue this to the Swing event thread
WITHOUT_CLASSIFICATION	TODO: concatenate? - tfm overwrite for now
WITHOUT_CLASSIFICATION	end class StylePanelFigRRect
WITHOUT_CLASSIFICATION	Let the parent do its refresh.
WITHOUT_CLASSIFICATION	lets redraw the box
WITHOUT_CLASSIFICATION	@see java.awt.Component#getPreferredSize()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize()
WITHOUT_CLASSIFICATION	Called when the user selects a tab, by clicking or otherwise. @see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	We don't know what thread events will be delivered on, so make sure we run Swing methods on the Swing thread
WITHOUT_CLASSIFICATION	This instead of the label ??? displayPane.setBorder(new TitledBorder( Translator.localize("Display: ")));
WITHOUT_CLASSIFICATION	add in front of the others add the label in front of the "pane"
WITHOUT_CLASSIFICATION	and finally, adjust the scrollbars to show the Fig
WITHOUT_CLASSIFICATION	% thresholds for bar color changes
WITHOUT_CLASSIFICATION	making it possible to jump to the modelroots
WITHOUT_CLASSIFICATION	org.argouml.ui.TabTable TabMetrics TabJavaSrc | TabSrc TabUMLDisplay TabHash
WITHOUT_CLASSIFICATION	Timer action method. Periodically update our stats and force a repaint.
WITHOUT_CLASSIFICATION	Virtual memory (heap) stats
WITHOUT_CLASSIFICATION	Thin bar to show current allocated heap size
WITHOUT_CLASSIFICATION	Thin bar to show current used
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	the introducing label
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the MultiEditorPane should only show an empty pane in that case
WITHOUT_CLASSIFICATION	private JPanel constraintsTab = new JPanel();
WITHOUT_CLASSIFICATION	The child is sometimes not found when the tree is being updated
WITHOUT_CLASSIFICATION	private JTabbedPane tabs = new JTabbedPane();
WITHOUT_CLASSIFICATION	tabs.setMinimumSize(new Dimension(300, 250));
WITHOUT_CLASSIFICATION	private JPanel modifiedTab = new JPanel();
WITHOUT_CLASSIFICATION	The ActivityGraph.
WITHOUT_CLASSIFICATION	private JPanel tagValsTab = new JPanel();
WITHOUT_CLASSIFICATION	open space at gridy = 2;
WITHOUT_CLASSIFICATION	mainPanel.add(north, BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	Any type
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	MouseListener implementation
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	This text is for the developers. It doesn't need to be localized.
WITHOUT_CLASSIFICATION	These shouldn't really be <br> instead of <p> elements, but the lines all get run together when pasted into a browser window.
WITHOUT_CLASSIFICATION	JPanel north = new JPanel(); north.setLayout(new BorderLayout()); north.add(tabs, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	initConstraintsTab(); tabs.addTab(Translator.localize("tab.constraints"), constraintsTab); tabs.setEnabledAt(3, false);
WITHOUT_CLASSIFICATION	initTagValsTab(); tabs.addTab(Translator.localize("dialog.find.tab.tagged-values"), tagValsTab); tabs.setEnabledAt(2, false);
WITHOUT_CLASSIFICATION	end class FindDialog
WITHOUT_CLASSIFICATION	name += " in " + dName;
WITHOUT_CLASSIFICATION	Not in UML 2.x (or metatypes) type.addItem(PredicateMType.create( Model.getMetaTypes().getActivityGraph()));
WITHOUT_CLASSIFICATION	Set the name and icon:
WITHOUT_CLASSIFICATION	help tab is 0
WITHOUT_CLASSIFICATION	end runGC_actionPerformed()
WITHOUT_CLASSIFICATION	end class PredicateMType
WITHOUT_CLASSIFICATION	end updateInfo()
WITHOUT_CLASSIFICATION	end class NavigatorPane
WITHOUT_CLASSIFICATION	end copy_actionPerformed()
WITHOUT_CLASSIFICATION	end class ActionGotoDiagram
WITHOUT_CLASSIFICATION	end class SystemInfoDialog
WITHOUT_CLASSIFICATION	clean the history
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	But exclude elements that enclose others, since their algorithms to calculate the minimum size does not take enclosed objects into account:
WITHOUT_CLASSIFICATION	super(Translator.localize("action.size-to-fit-contents"));
WITHOUT_CLASSIFICATION	unsupported.
WITHOUT_CLASSIFICATION	Only resize elements which the user would also be able to resize:
WITHOUT_CLASSIFICATION	if a default action was voided then we have to save it
WITHOUT_CLASSIFICATION	Set the name:
WITHOUT_CLASSIFICATION	let's load the default shortcut for every action
WITHOUT_CLASSIFICATION	end class ActionFind
WITHOUT_CLASSIFICATION	let's load the current shortcut from the configuration (as a string)
WITHOUT_CLASSIFICATION	generate menu
WITHOUT_CLASSIFICATION	it should never go here!
WITHOUT_CLASSIFICATION	view menu
WITHOUT_CLASSIFICATION	file menu
WITHOUT_CLASSIFICATION	align submenu
WITHOUT_CLASSIFICATION	edit menu
WITHOUT_CLASSIFICATION	create menu
WITHOUT_CLASSIFICATION	arrange menu
WITHOUT_CLASSIFICATION	help menu
WITHOUT_CLASSIFICATION	help menu
WITHOUT_CLASSIFICATION	This ID is used as DEFAULT_ID !
WITHOUT_CLASSIFICATION	end class ActionAboutArgoUML
WITHOUT_CLASSIFICATION	distribute submenu
WITHOUT_CLASSIFICATION	end class ActionPageSetup
WITHOUT_CLASSIFICATION	trap focus traversal keys also
WITHOUT_CLASSIFICATION	let's add the key printing logic
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	The "Close window" shortcut (ALT+F4) actually can't be registered as a shortcut, because it closes the configuration dialog!
WITHOUT_CLASSIFICATION	if a not-default current shortcut was added, then we have to save it
WITHOUT_CLASSIFICATION	if the actual is not going to be saved, then try to remove it (as it could have been cancelled)
WITHOUT_CLASSIFICATION	no modifiers - let's check if the key is valid
WITHOUT_CLASSIFICATION	middle of shortcut
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	add last recently used list _before_ exit menu
WITHOUT_CLASSIFICATION	KeyStroke f7 = KeyStroke.getKeyStroke(KeyEvent.VK_F7, 0);
WITHOUT_CLASSIFICATION	and exit menu entry starting with separator.
WITHOUT_CLASSIFICATION	This used to be deferred, but it's only 30-40 msec of work.
WITHOUT_CLASSIFICATION	now, let's set up the "selected action" container
WITHOUT_CLASSIFICATION	generate.add(Actions.GenerateWeb);
WITHOUT_CLASSIFICATION	Add the help menu item.
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the name and icon:
WITHOUT_CLASSIFICATION	clean the history
WITHOUT_CLASSIFICATION	Comment out when we are ready to release undo/redo JMenuItem undoItem = edit.add( ProjectActions.getInstance().getUndoAction()); setMnemonic(undoItem, "Undo"); ShortcutMgr.assignAccelerator(undoItem, ShortcutMgr.ACTION_UNDO); JMenuItem redoItem = edit.add( ProjectActions.getInstance().getRedoAction()); setMnemonic(redoItem, "Redo"); ShortcutMgr.assignAccelerator(redoItem, ShortcutMgr.ACTION_REDO); edit.addSeparator();
WITHOUT_CLASSIFICATION	JMenuItem cutItem = edit.add(ActionCut.getInstance()); setMnemonic(cutItem, "Cut"); setAccelerator(cutItem, ctrlX); JMenuItem copyItem = edit.add(ActionCopy.getInstance()); setMnemonic(copyItem, "Copy"); setAccelerator(copyItem, ctrlC); JMenuItem pasteItem = edit.add(ActionPaste.getInstance()); setMnemonic(pasteItem, "Paste"); setAccelerator(pasteItem, ctrlV); edit.addSeparator();
WITHOUT_CLASSIFICATION	Create the edit toolbar based on the Menu. All menuItems that have an Icon are presumed to be based upon an Action, and these Actions are used in the toolbar.
WITHOUT_CLASSIFICATION	setHelpMenu(help);
WITHOUT_CLASSIFICATION	Component or Action
WITHOUT_CLASSIFICATION	set maximum length of menu entry
WITHOUT_CLASSIFICATION	JMenuItem item = _fileMenu.add(new ActionReopenProject(filename));
WITHOUT_CLASSIFICATION	the text is used by the event handler for opening the project
WITHOUT_CLASSIFICATION	create all nessessary configuration keys for lru
WITHOUT_CLASSIFICATION	holds file menu
WITHOUT_CLASSIFICATION	text is short, tooltip is long
WITHOUT_CLASSIFICATION	read existing file names from configuration
WITHOUT_CLASSIFICATION	empty entry stops reading --> last line!
WITHOUT_CLASSIFICATION	this is the recent count
WITHOUT_CLASSIFICATION	delete all existing entries
WITHOUT_CLASSIFICATION	add new entry as first entry
WITHOUT_CLASSIFICATION	add other existing entries, but filter the just added one
WITHOUT_CLASSIFICATION	save count
WITHOUT_CLASSIFICATION	and store configuration props
WITHOUT_CLASSIFICATION	end class ActionExit
WITHOUT_CLASSIFICATION	box.setLocationRelativeTo(jframe);
WITHOUT_CLASSIFICATION	end class ActionHelp
WITHOUT_CLASSIFICATION	instantiation not allowed
WITHOUT_CLASSIFICATION	end class ActionPrint
WITHOUT_CLASSIFICATION	let's add the table, inside a JScrollPane
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	Do nothing! The next time we refresh, we will fetch the values again.
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	init from config read number, write result as new default and prepare keys
WITHOUT_CLASSIFICATION	get already existing names from menu actions real file names, not action names !
WITHOUT_CLASSIFICATION	let's enable the radiobuttons container
WITHOUT_CLASSIFICATION	updating the radiobuttons container's title
WITHOUT_CLASSIFICATION	let's select the correct radio button
WITHOUT_CLASSIFICATION	no shortcuts --> NONE
WITHOUT_CLASSIFICATION	current shortcut == default --> DEFAULT
WITHOUT_CLASSIFICATION	customized shortcut --> CUSTOM
WITHOUT_CLASSIFICATION	let's reload the shortcuts
WITHOUT_CLASSIFICATION	conflict detected: showing a warning to the user, instead of saving shortcuts
WITHOUT_CLASSIFICATION	saving shortcuts
WITHOUT_CLASSIFICATION	if a shortcut has been select then we have to check if the actual action is in conflict with other ones
WITHOUT_CLASSIFICATION	this shortcut was already been assigned to another action; let's pop-up a message for the user
WITHOUT_CLASSIFICATION	blanking the old action's shortcut.. and now refreshing the table.
WITHOUT_CLASSIFICATION	re-selecting the old row, without changing the target - and without throwing another ListSelectionEvent!
WITHOUT_CLASSIFICATION	let's change the target
WITHOUT_CLASSIFICATION	duplicate shortcut not found; let's check for duplicates
WITHOUT_CLASSIFICATION	there's a duplicate: let's recheck if there is a conflict
WITHOUT_CLASSIFICATION	updating the shortcut field
WITHOUT_CLASSIFICATION	updating the table data
WITHOUT_CLASSIFICATION	updating the actions
WITHOUT_CLASSIFICATION	the shortcut has already been assigned to another action!
WITHOUT_CLASSIFICATION	if the given object is a KeyStroke instance, then we ca
WITHOUT_CLASSIFICATION	let's update also the actions array
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name, only xmi is allowed
WITHOUT_CLASSIFICATION	The default nr of rows is 8, but since we have 9 perspectives by default now, setting to 9 is nicer.
WITHOUT_CLASSIFICATION	Check if multiple items are selected.
WITHOUT_CLASSIFICATION	profile section: dealing with profiles in different states
WITHOUT_CLASSIFICATION	1. a noneditable applied profile
WITHOUT_CLASSIFICATION	just no item added in this case
WITHOUT_CLASSIFICATION	3. the editable unapplied profile
WITHOUT_CLASSIFICATION	end of profile section
WITHOUT_CLASSIFICATION	Can't delete last top level model
WITHOUT_CLASSIFICATION	Determine if only diagrams are in the target list.
WITHOUT_CLASSIFICATION	"x nodes and x edges"
WITHOUT_CLASSIFICATION	Check to see if all targets are classifiers before adding an option to create an association between them all
WITHOUT_CLASSIFICATION	test if this element can be contained by the target
WITHOUT_CLASSIFICATION	iterate through all possible model elements to determine which are valid to be contained by the selected target
WITHOUT_CLASSIFICATION	end class ActionAddExistingRelatedNode
WITHOUT_CLASSIFICATION	this element can be contained add a menu item that allows the user to take that action
WITHOUT_CLASSIFICATION	... otherwise we select the item below the mousepointer.
WITHOUT_CLASSIFICATION	We preserve the current (multiple) selection, if we are over part of it ...
WITHOUT_CLASSIFICATION	unimplemented - we only care about expanding
WITHOUT_CLASSIFICATION	end class ExplorerMouseListener
WITHOUT_CLASSIFICATION	does nothing.
WITHOUT_CLASSIFICATION	need to update the selection state.
WITHOUT_CLASSIFICATION	Perform recursive search of subtree rooted at 'node', selecting all nodes which have a userObject matching one of our targets.
WITHOUT_CLASSIFICATION	get the elements
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	target may appear multiple places in the tree, so we don't stop here (but it's expensive to search the whole tree) - tfm - 20070904 targets.remove(t); break;
WITHOUT_CLASSIFICATION	scan the visible rows for duplicates of this elem and select them
WITHOUT_CLASSIFICATION	check which targetmanager method to call
WITHOUT_CLASSIFICATION	we must call the correct method on targetmanager for each added or removed target
WITHOUT_CLASSIFICATION	we can't remove the targets in one go, we have to do it one by one.
WITHOUT_CLASSIFICATION	setTargets(e.getNewTargets());
WITHOUT_CLASSIFICATION	setTargets(e.getNewTargets());
WITHOUT_CLASSIFICATION	at the top right bottom left bottom
WITHOUT_CLASSIFICATION	the dialog is modal
WITHOUT_CLASSIFICATION	sortJListModel(ruleLibraryList);
WITHOUT_CLASSIFICATION	disable the buttons for now, since no selection has been made yet
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	remove the ones already selected (if a perspective is selected)
WITHOUT_CLASSIFICATION	add them
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	update the label (which shows the number of rules)
WITHOUT_CLASSIFICATION	must add an editable list of new ExplorerPerspective's to the list model so that the original ones are not changed in the case of a cancel action by the user.
WITHOUT_CLASSIFICATION	set the newly selected item in the library list
WITHOUT_CLASSIFICATION	update the label (which shows the number of rules)
WITHOUT_CLASSIFICATION	set the newly selected item in the library list
WITHOUT_CLASSIFICATION	remove the rule from the library list
WITHOUT_CLASSIFICATION	The name of the UMLDiagram represented by this node has changed.
WITHOUT_CLASSIFICATION	uml model events
WITHOUT_CLASSIFICATION	notation events
WITHOUT_CLASSIFICATION	Handle remove for non-UML elements (e.g. diagrams)
WITHOUT_CLASSIFICATION	Get the selected targets (UML ModelElements) from the TargetManager.
WITHOUT_CLASSIFICATION	project events
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name, only xmi is allowed
WITHOUT_CLASSIFICATION	get one of the default profile dirs, if available (as a default value for the following save dialog)
WITHOUT_CLASSIFICATION	save profile
WITHOUT_CLASSIFICATION	register it as a user profile
WITHOUT_CLASSIFICATION	this is safe because getName always returns a string of some type
WITHOUT_CLASSIFICATION	load user perspectives
WITHOUT_CLASSIFICATION	get the perspective name
WITHOUT_CLASSIFICATION	make sure there are some rules...
WITHOUT_CLASSIFICATION	get the rules
WITHOUT_CLASSIFICATION	get the rule name
WITHOUT_CLASSIFICATION	create the rule
WITHOUT_CLASSIFICATION	rule name but no rules
WITHOUT_CLASSIFICATION	add the perspective
WITHOUT_CLASSIFICATION	no user defined perspectives
WITHOUT_CLASSIFICATION	one last check that some loaded.
WITHOUT_CLASSIFICATION	works for both statediagram as activitygraph
WITHOUT_CLASSIFICATION	Enter here go rules only relevant for UML 2 empty for now
WITHOUT_CLASSIFICATION	The drag gesture recognizer fires events in response to drag gestures in a component.
WITHOUT_CLASSIFICATION	specifies valid actions
WITHOUT_CLASSIFICATION	Eliminates right mouse clicks as valid actions
WITHOUT_CLASSIFICATION	First argument: Component to associate the target with Second argument: DropTargetListener
WITHOUT_CLASSIFICATION	Get the cell renderer (which is a JLabel) for the path being dragged.
WITHOUT_CLASSIFICATION	The layout manager would normally do this:
WITHOUT_CLASSIFICATION	Get a buffered image of the selection for dragging a ghost image
WITHOUT_CLASSIFICATION	Ask the cell renderer to paint itself into the BufferedImage. Make the image ghostlike.
WITHOUT_CLASSIFICATION	Now paint a gradient UNDER the ghosted JLabel text (but not under the icon if any).
WITHOUT_CLASSIFICATION	Make the gradient ghostlike:
WITHOUT_CLASSIFICATION	Remember the path being dragged (because if it is being moved, we will have to delete it later).
WITHOUT_CLASSIFICATION	We pass our drag image just in case it IS supported by the platform.
WITHOUT_CLASSIFICATION	If the destination is not a NameSpace, then abort:
WITHOUT_CLASSIFICATION	If the destination is a DataType, then abort:
WITHOUT_CLASSIFICATION	We are sure "dest" is a Namespace now.
WITHOUT_CLASSIFICATION	MVW: These are the WFRs for DataType: [1] A DataType can only contain Operations, which all must be queries. self.allFeatures->forAll(f | f.oclIsKindOf(Operation) and f.oclAsType(Operation).isQuery) [2] A DataType cannot contain any other ModelElements. self.allContents->isEmpty IMHO we should enforce these WFRs here. ... so it is still possible to copy or move query operations, hence we should allow this.
WITHOUT_CLASSIFICATION	Let's check all dragged elements - if one of these may be dropped, then the drag is valid. The others will be ignored when dropping.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	Figure out which row we're on.
WITHOUT_CLASSIFICATION	If we are not on a row then ignore this autoscroll request
WITHOUT_CLASSIFICATION	We are sure "dest" is a Namespace now.
WITHOUT_CLASSIFICATION	Autoscroll Interface... The following code was borrowed from the book: Java Swing By Robert Eckstein, Marc Loy & Dave Wood Paperback - 1221 pages 1 Ed edition (September 1998) O'Reilly & Associates; ISBN: 156592455X The relevant chapter of which can be found at: http:www.oreilly.com/catalog/jswing/chapter/dnd.beta.pdf
WITHOUT_CLASSIFICATION	Now decide if the row is at the top of the screen or at the bottom. We do this to make the previous row (or the next row) visible as appropriate. If were at the absolute top or bottom, just return the first or last row respectively.
WITHOUT_CLASSIFICATION	Set up a hover timer, so that a node will be automatically expanded or collapsed if the user lingers on it for more than a short time.
WITHOUT_CLASSIFICATION	isRootPath
WITHOUT_CLASSIFICATION	Set timer to one-shot mode
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "dragOver");
WITHOUT_CLASSIFICATION	The next condition becomes false when dragging in something from another application.
WITHOUT_CLASSIFICATION	If a drag image is not supported by the platform, then draw my own drag image.
WITHOUT_CLASSIFICATION	Rub out the last ghost image and cue line:
WITHOUT_CLASSIFICATION	And remember where we are about to draw the new ghost image:
WITHOUT_CLASSIFICATION	Just rub out the last cue line
WITHOUT_CLASSIFICATION	In any case draw (over the ghost image if necessary) a cue line indicating where a drop will occur.
WITHOUT_CLASSIFICATION	And include the cue line in the area to be rubbed out next time
WITHOUT_CLASSIFICATION	Testcase: drag something from another application into ArgoUML, and the explorer shows the drop icon, instead of the noDrop.
WITHOUT_CLASSIFICATION	to prohibit dropping onto the drag source:
WITHOUT_CLASSIFICATION	If the destination is not a NameSpace, then reject:
WITHOUT_CLASSIFICATION	If the destination is a DataType, then reject:
WITHOUT_CLASSIFICATION	Prevent hover timer from doing an unwanted expandPath or collapsePath:
WITHOUT_CLASSIFICATION	Clear the ghost image:
WITHOUT_CLASSIFICATION	get new parent node
WITHOUT_CLASSIFICATION	get the model elements that are being transfered.
WITHOUT_CLASSIFICATION	The user-DropActions are: Ctrl + Shift -> ACTION_LINK Ctrl -> ACTION_COPY Shift -> ACTION_MOVE (none) -> ACTION_MOVE
WITHOUT_CLASSIFICATION	Only accept COPY or MOVE gestures (ie LINK is not supported)
WITHOUT_CLASSIFICATION	Only accept COPY or MOVE gestures (ie LINK is not supported)
WITHOUT_CLASSIFICATION	Do this if you want to prohibit dropping onto the drag source...
WITHOUT_CLASSIFICATION	Do this if you want to prohibit dropping onto the drag source...
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	remove references for gc
WITHOUT_CLASSIFICATION	This should only be helpful for old garbage collectors.
WITHOUT_CLASSIFICATION	Avoid doing this too early in the initialization process
WITHOUT_CLASSIFICATION	Avoid recursively updating the same child
WITHOUT_CLASSIFICATION	@see javax.swing.tree.DefaultTreeModel#insertNodeInto(javax.swing.tree.MutableTreeNode, javax.swing.tree.MutableTreeNode, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.DefaultTreeModel#removeNodeFromParent(javax.swing.tree.MutableTreeNode)
WITHOUT_CLASSIFICATION	This is somewhat inconsistent with the design of the constructor that receives the root object by argument. If this is okay then there may be no need for a constructor with that argument.
WITHOUT_CLASSIFICATION	Enumerate the current children of node to find out which now sorts in different order, since these must be moved
WITHOUT_CLASSIFICATION	Avoid our deinitialization here The node will be added back to the tree again
WITHOUT_CLASSIFICATION	For each reordered node, find it's new position among the current children and move it there
WITHOUT_CLASSIFICATION	Avoid our initialization here
WITHOUT_CLASSIFICATION	Collect the current set of objects that should be children to this node
WITHOUT_CLASSIFICATION	Handle WeakExplorerNodes
WITHOUT_CLASSIFICATION	Remove the node from removeSet
WITHOUT_CLASSIFICATION	Remove obj3 from weakNodes and newChildren
WITHOUT_CLASSIFICATION	Remember that children are not TreeNodes but UserObjects
WITHOUT_CLASSIFICATION	Add any remaining nodes
WITHOUT_CLASSIFICATION	it is the combo for "order"
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Order the new children, the dependencies cannot and need not be ordered
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	Sequence diagrams are not shown as children of the collaboration that they show but as children of the classifier/operation the collaboration represents. Statediagrams and activitydiagrams are shown as children of the statemachine or activitygraph they belong to.
WITHOUT_CLASSIFICATION	was ""
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	the name of this instance of diagram
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	Also show unattached sequence diagrams:
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	in UML2, we don't want to see element imports in profiles
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	Rule for Project->Root (Top level) Elements. TODO: As currently implemented it returns all top level elements in the model repository, not just those in a given project. Since we only support a single project at a time currently, these are equivalent but this will need to be enhanced with additional bookkeeping in Project when we support multiple open projects - tfm. TODO: I changed it to get the roots from the project. It was showing the profiles that were loaded but were not applied to the current project - maurelio1234. @author Tom Morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	in UML2, some elements are not to be shown
WITHOUT_CLASSIFICATION	don't show a profile application
WITHOUT_CLASSIFICATION	don't show element imports in profiles
WITHOUT_CLASSIFICATION	don't show extensions in profiles
WITHOUT_CLASSIFICATION	&& Model.getFacade().isAProperty(o)
WITHOUT_CLASSIFICATION	don't show base_... properties in stereotypes
WITHOUT_CLASSIFICATION	"N/A" or "x nodes and x edges"
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	Transition
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: what?
WITHOUT_CLASSIFICATION	Todo: What?
WITHOUT_CLASSIFICATION	First get the collection of ElementResidence
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: what?
WITHOUT_CLASSIFICATION	only targets we didn't have allready count
WITHOUT_CLASSIFICATION	If nothing selected, go to last selected target
WITHOUT_CLASSIFICATION	Needed for Argo startup :-(
WITHOUT_CLASSIFICATION	Remove duplicates and take care of getOwner() and remove nulls:
WITHOUT_CLASSIFICATION	|| !targets.contains(target)
WITHOUT_CLASSIFICATION	targets.remove(target);
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	implement set-like behaviour. The same element may not be added more then once.
WITHOUT_CLASSIFICATION	we put the targets 'backwards' in the history since the first target in the addedTargets array is the first one selected.
WITHOUT_CLASSIFICATION	cannot break here since an object can be multiple times in history
WITHOUT_CLASSIFICATION	CommentEdge - the owner of a FigEdgeNote
WITHOUT_CLASSIFICATION	check if there are new elements in the list if the old and new list are of the same size set the oldTargets to the correct selection
WITHOUT_CLASSIFICATION	If not found, try the parent namespace
WITHOUT_CLASSIFICATION	Listen for the removal of diagrams from project
WITHOUT_CLASSIFICATION	give priority to standard documentation tag
WITHOUT_CLASSIFICATION	Figs on a diagram without an owning model element
WITHOUT_CLASSIFICATION	end class DocumentationManager
WITHOUT_CLASSIFICATION	TODO: Needs localization
WITHOUT_CLASSIFICATION	end class ChildGenRelated
WITHOUT_CLASSIFICATION	Convert the string (e.g. "aaa,bbb,ccc") into separate stereotype-names (e.g. "aaa", "bbb", "ccc").
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the top level namespaces
WITHOUT_CLASSIFICATION	and now remove them
WITHOUT_CLASSIFICATION	collect the to be removed stereotypes
WITHOUT_CLASSIFICATION	the name of this type of diagram
WITHOUT_CLASSIFICATION	add stereotypes
WITHOUT_CLASSIFICATION	Loop through each element in the namespace, recursing.
WITHOUT_CLASSIFICATION	end class UUIDManager
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.ChildGenerator#gen(java.lang.Object)
WITHOUT_CLASSIFICATION	Instance
WITHOUT_CLASSIFICATION	comments
WITHOUT_CLASSIFICATION	For all other model elements, return any elements associated in any way
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current namespace
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current project
WITHOUT_CLASSIFICATION	TableModel implementation
WITHOUT_CLASSIFICATION	the name of this type of ModelElement
WITHOUT_CLASSIFICATION	the name of this instance of ModelElement
WITHOUT_CLASSIFICATION	the name of the parent diagram instance
WITHOUT_CLASSIFICATION	the name of this type of Object
WITHOUT_CLASSIFICATION	not safe to presume the destination is the comment
WITHOUT_CLASSIFICATION	this also sets the target as a convenient side effect
WITHOUT_CLASSIFICATION	This is the tooltip of a comment link
WITHOUT_CLASSIFICATION	Class
WITHOUT_CLASSIFICATION	end class ProjectMemberModel
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	Association
WITHOUT_CLASSIFICATION	Attribute
WITHOUT_CLASSIFICATION	State
WITHOUT_CLASSIFICATION	Operation
WITHOUT_CLASSIFICATION	Interface
WITHOUT_CLASSIFICATION	Link
WITHOUT_CLASSIFICATION	This function will, by design, contain long lists of i18n keys. It might be tempting to shorten these by constructing them from the parts but please then consider that we might loose the possibility to build tools to statically check the property files against this file.
WITHOUT_CLASSIFICATION	umlReserved.add("document");
WITHOUT_CLASSIFICATION	replace all occurances of OFFENDER with the name of the first offender
WITHOUT_CLASSIFICATION	check for all uppercase and/or mixed with underscores
WITHOUT_CLASSIFICATION	umlReserved.add("file");
WITHOUT_CLASSIFICATION	umlReserved.add("node");
WITHOUT_CLASSIFICATION	umlReserved.add("send");
WITHOUT_CLASSIFICATION	The modelelement must have been deleted - ignore this - it will pass.
WITHOUT_CLASSIFICATION	TODO: This could just work off the names in the UML profile TODO: It doesn't look like it matches what's in the UML 1.4 spec
WITHOUT_CLASSIFICATION	umlReserved.add("destroy");
WITHOUT_CLASSIFICATION	self.allConnections->forAll(ar|ar.participant <> self)
WITHOUT_CLASSIFICATION	end class CrCircularAssocClass
WITHOUT_CLASSIFICATION	(MAttribute)
WITHOUT_CLASSIFICATION	If the name is only underscores
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconWidth()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconHeight()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconWidth()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconHeight()
WITHOUT_CLASSIFICATION	umlReserved.add("initial"); umlReserved.add("final"); umlReserved.add("fork"); umlReserved.add("join"); umlReserved.add("history");
WITHOUT_CLASSIFICATION	umlReserved.add("copy"); umlReserved.add("create");
WITHOUT_CLASSIFICATION	Types can probably have associations, but we should not nag at them not having any. utility is a namespace collection - also not strictly required to have associations.
WITHOUT_CLASSIFICATION	end class ClAttributeCompartment
WITHOUT_CLASSIFICATION	check whether constant, constants are often weird and thus not a problem
WITHOUT_CLASSIFICATION	why are we here?
WITHOUT_CLASSIFICATION	If the classifier does not have a name, then no problem - the model is not finished anyhow.
WITHOUT_CLASSIFICATION	added by Eric Lefevre 13 Mar 1999: we must check if the FigText for attributes is drawn before drawing things over it
WITHOUT_CLASSIFICATION	Abstract elements do not necessarily require associations
WITHOUT_CLASSIFICATION	TODO: different critic or special message for classes that inherit all ops but define none of their own.
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	added by Eric Lefevre 13 Mar 1999: we must check if the FigText for operations is drawn before drawing things over it
WITHOUT_CLASSIFICATION	special cases for use cases Extending use cases and use case that are being included are not required to have associations.
WITHOUT_CLASSIFICATION	for use cases we need to check for extend/includes actors cannot have them, so no need to check
WITHOUT_CLASSIFICATION	Get the ends from the association (we know there are two), and the types associated with them.
WITHOUT_CLASSIFICATION	The association that triggered the critic. Its just possible the association is no longer there, in which case we return null
WITHOUT_CLASSIFICATION	end class ClOperationCompartment
WITHOUT_CLASSIFICATION	First step. Create the panel if not already done and options are available. Otherwise it retains its default value of null.
WITHOUT_CLASSIFICATION	Now create the five options
WITHOUT_CLASSIFICATION	Get the names of the two ends. If there are none (i.e they are currently anonymous), use the ArgoUML convention of "(anon)" for the names
WITHOUT_CLASSIFICATION	Default (any other step) is to return nothing
WITHOUT_CLASSIFICATION	Just completed the first step where we make our choices. First see if we have a choice. We always should, so print a rude message if we don't
WITHOUT_CLASSIFICATION	Set the appropriate aggregation on each end
WITHOUT_CLASSIFICATION	It is quite possible that the cause of the problem has by now been deleted, in which case we will throw an exception if we try to change things. Catch this tidily.
WITHOUT_CLASSIFICATION	Start is a composite aggregation of end
WITHOUT_CLASSIFICATION	Start is a shared aggregation of end
WITHOUT_CLASSIFICATION	End is a composite aggregation of start
WITHOUT_CLASSIFICATION	End is a shared aggregation of start
WITHOUT_CLASSIFICATION	No aggregation
WITHOUT_CLASSIFICATION	Someone took our association away.
WITHOUT_CLASSIFICATION	Can't finish if our parent can't
WITHOUT_CLASSIFICATION	Can finish if it's step 0
WITHOUT_CLASSIFICATION	Can finish if we're on step1 and have actually made a choice
WITHOUT_CLASSIFICATION	Otherwise we can't finish
WITHOUT_CLASSIFICATION	TODO: The WFR doesn't restrict this to Classifiers - tfm
WITHOUT_CLASSIFICATION	TODO: The WFR doesn't restrict this to Classifiers - tfm
WITHOUT_CLASSIFICATION	Model.getFacade().getModelElement(
WITHOUT_CLASSIFICATION	)
WITHOUT_CLASSIFICATION	replace all occurances of OFFENDER with the name of the first offender
WITHOUT_CLASSIFICATION	check if there is no OCL_END; if so, the critic expression is not correct and can not be expanded
WITHOUT_CLASSIFICATION	Get the Association and its connections. Iterate over all the AssociationEnds and check that each connected classifier is in the same sub-system or model
WITHOUT_CLASSIFICATION	display related methods
WITHOUT_CLASSIFICATION	end class CrInterfaceAllPublic
WITHOUT_CLASSIFICATION	return original string if no replacements made
WITHOUT_CLASSIFICATION	If we drop out there is no problem
WITHOUT_CLASSIFICATION	Only look at associations
WITHOUT_CLASSIFICATION	end class CrCrossNamespaceAssoc
WITHOUT_CLASSIFICATION	TODO: different critic for packages consisting only of references to elements of other packages?
WITHOUT_CLASSIFICATION	The next AssociationEnd, and its classifier. Check the classifier is in the namespace of the association. If not we have a problem.
WITHOUT_CLASSIFICATION	original class was not abstract
WITHOUT_CLASSIFICATION	theStereotype.setStereotype(???);
WITHOUT_CLASSIFICATION	found a concrete subclass
WITHOUT_CLASSIFICATION	Nothing to do.
WITHOUT_CLASSIFICATION	no concrete subclasses defined, this class is "useless"
WITHOUT_CLASSIFICATION	see if there is already an element with the same name
WITHOUT_CLASSIFICATION	end class CrClassMustBeAbstract
WITHOUT_CLASSIFICATION	end class CrUselessAbstract
WITHOUT_CLASSIFICATION	(MClassifier)
WITHOUT_CLASSIFICATION	Only look at classes
WITHOUT_CLASSIFICATION	TODO: different critic or special message for classes that inherit all ops but define none of their own.
WITHOUT_CLASSIFICATION	utility is a namespace collection - also not strictly required to have operations.
WITHOUT_CLASSIFICATION	end class CrTooManyAssoc
WITHOUT_CLASSIFICATION	end class CrUselessInterface
WITHOUT_CLASSIFICATION	end class CrComponentInstanceWithoutClassifier
WITHOUT_CLASSIFICATION	end class CrTooManyClasses
WITHOUT_CLASSIFICATION	We don't consider secondary stuff.
WITHOUT_CLASSIFICATION	if the object does not have a name, than no problem
WITHOUT_CLASSIFICATION	types can probably contain operations, but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	Types don't need a constructor.
WITHOUT_CLASSIFICATION	Utilities usually do not require a constructor either
WITHOUT_CLASSIFICATION	Check for uninitialised instance variables and constructor.
WITHOUT_CLASSIFICATION	Get all the features (giving up if there are none). Then loop through finding all operations. Each time we find one, we compare its signature with all previous (held in collection operSeen), and then if it doesn't match add it to the collection.
WITHOUT_CLASSIFICATION	There is a constructor.
WITHOUT_CLASSIFICATION	end class CrTooManyStates
WITHOUT_CLASSIFICATION	We have found a non-static one that is not initialized.
WITHOUT_CLASSIFICATION	Compare against all earlier operations. If there's a match we've found the problem
WITHOUT_CLASSIFICATION	Check that the parameter lists match.
WITHOUT_CLASSIFICATION	Add to the collection and round to look at the next one
WITHOUT_CLASSIFICATION	yeah right...we don't have an operation (and thus no
WITHOUT_CLASSIFICATION	This pair of params where the same. Lets check the next pair.
WITHOUT_CLASSIFICATION	Only do this for classifiers
WITHOUT_CLASSIFICATION	Get the next non-return parameter. Null if non left.
WITHOUT_CLASSIFICATION	If we drop out here, there was no match and we have no problem
WITHOUT_CLASSIFICATION	Check that the names match.
WITHOUT_CLASSIFICATION	Both lists have the same length
WITHOUT_CLASSIFICATION	Both lists have the same length.
WITHOUT_CLASSIFICATION	Different lengths:
WITHOUT_CLASSIFICATION	end class CrMultiComposite
WITHOUT_CLASSIFICATION	Compare the type of the parameters. If any of the types is null, then we have a match.
WITHOUT_CLASSIFICATION	normal model elements are not allowed to have spaces, but for States we make an exception
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	end class CrIllegalName
WITHOUT_CLASSIFICATION	dm is a transition
WITHOUT_CLASSIFICATION	initialize new ToDoItem
WITHOUT_CLASSIFICATION	the source of the transition is a pseudostate
WITHOUT_CLASSIFICATION	the source of the transition is a choice
WITHOUT_CLASSIFICATION	end class CrTooManyAttr
WITHOUT_CLASSIFICATION	critiquing API
WITHOUT_CLASSIFICATION	end class CrZeroLengthEdge
WITHOUT_CLASSIFICATION	(MStateVertex)
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	only classes with name need a constructor
WITHOUT_CLASSIFICATION	Forks have their own outgoing transitions critic
WITHOUT_CLASSIFICATION	types can probably have variables, but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	code generation
WITHOUT_CLASSIFICATION	utility is a namespace collection - also not strictly required to have variables.
WITHOUT_CLASSIFICATION	If we find an instance variable that is not a constant we have succeeded
WITHOUT_CLASSIFICATION	I am only prepared to go this far.
WITHOUT_CLASSIFICATION	(Classifier)
WITHOUT_CLASSIFICATION	first element is e.g. the class, but we need to have its namespace to recompute the offenders.
WITHOUT_CLASSIFICATION	Compound critics
WITHOUT_CLASSIFICATION	warn about inherited name conflicts, different critic?
WITHOUT_CLASSIFICATION	warn about inherited name conflicts, different critic?
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	Only look at Associations
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	Iterate over all the AssociationEnds. We only have a problem if 1) there is an end connected to an Interface and 2) an end other than that end is navigable.
WITHOUT_CLASSIFICATION	both ends must be classes, otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	We can give up looking if we've hit both criteria
WITHOUT_CLASSIFICATION	both ends must be navigable, otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	End at an Interface? Navigable other end?
WITHOUT_CLASSIFICATION	end class CrMergeClasses
WITHOUT_CLASSIFICATION	Specify design issue category and knowledge type
WITHOUT_CLASSIFICATION	If we drop out we didn't meet both criteria, and all is well.
WITHOUT_CLASSIFICATION	The next AssociationEnd
WITHOUT_CLASSIFICATION	If its an interface we have an interface end, otherwise its something else and we should see if it is navigable. We don't check that the end is a Classifier, rather than its child ClassifierRole, since we have effectively eliminated that possiblity in rejecting AssociationRoles above.
WITHOUT_CLASSIFICATION	end class CrNavFromInterface
WITHOUT_CLASSIFICATION	(MCompositeState)
WITHOUT_CLASSIFICATION	end class CrNoInitialState
WITHOUT_CLASSIFICATION	critiquing API
WITHOUT_CLASSIFICATION	end class CrInstanceWithoutClassifier
WITHOUT_CLASSIFICATION	Now we are sure dm is a Composite State.
WITHOUT_CLASSIFICATION	In DeploymentDiagrams the situation is not the same as in other diagrams only classes, interfaces and objects can intersect each other while they are not the EnclosingFig, so you have to prouve only these elements.
WITHOUT_CLASSIFICATION	Now we are sure dm is a StateVertex.
WITHOUT_CLASSIFICATION	Now we are sure dm is a State.
WITHOUT_CLASSIFICATION	If dm is the top state of the statemachine, then it is not supposed to have incoming transitions.
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	end class CrInvalidSynch
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	end class CrConflictingComposites
WITHOUT_CLASSIFICATION	end class CrAlreadyRealizes
WITHOUT_CLASSIFICATION	end class CrUnnavigableAssoc
WITHOUT_CLASSIFICATION	TODO: GenNavigableClasses?
WITHOUT_CLASSIFICATION	end class CrDisambigStateName
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	end class WizMEName
WITHOUT_CLASSIFICATION	Only for associations
WITHOUT_CLASSIFICATION	Get the assocations and connections. No problem (there is a separate critic) if this is not a binary association or is an association role.
WITHOUT_CLASSIFICATION	Loop through the associations, counting the ends with aggregations
WITHOUT_CLASSIFICATION	A problem if we found more than 1 aggregation
WITHOUT_CLASSIFICATION	end class CrMultipleAgg
WITHOUT_CLASSIFICATION	end class CrNameConflictAC
WITHOUT_CLASSIFICATION	end class WizNavigable
WITHOUT_CLASSIFICATION	end class CrFinalSubclassed
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	TODO: AssociationRole
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Finding children for " + o.getClass());
WITHOUT_CLASSIFICATION	argument can be an instanceof a Fig which we ignore
WITHOUT_CLASSIFICATION	no need for trigger on "specialization"
WITHOUT_CLASSIFICATION	end class CrCircularInheritance
WITHOUT_CLASSIFICATION	end class CrNonAggDataType
WITHOUT_CLASSIFICATION	test an unknown file
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	(MTransition)
WITHOUT_CLASSIFICATION	WFR Transitions, OMG UML 1.3
WITHOUT_CLASSIFICATION	Only work for associations
WITHOUT_CLASSIFICATION	WFR Transitions, OMG UML 1.3
WITHOUT_CLASSIFICATION	No problem if this is an association role.
WITHOUT_CLASSIFICATION	Loop through all the ends, comparing the name against those already seen (ignoring any with no name). No problem if there are no connections defined, we will fall through immediately.
WITHOUT_CLASSIFICATION	end class CrInterfaceOperOnly
WITHOUT_CLASSIFICATION	Ignore non-existent and empty names
WITHOUT_CLASSIFICATION	Is the name already in the list of those seen, if not add it and go on round.
WITHOUT_CLASSIFICATION	Only work for associatins
WITHOUT_CLASSIFICATION	If we drop out there were no clashes
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconWidth()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconHeight()
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	Now we are sure dm is a StateVertex.
WITHOUT_CLASSIFICATION	Now we are sure dm is a State.
WITHOUT_CLASSIFICATION	Now we are sure dm is a Composite State.
WITHOUT_CLASSIFICATION	end class ClClassName
WITHOUT_CLASSIFICATION	If dm is the top state of the statemachine, then it is not supposed to have outgoing transitions.
WITHOUT_CLASSIFICATION	end class CrTooManyOper
WITHOUT_CLASSIFICATION	end class CrTooManyTransitions
WITHOUT_CLASSIFICATION	general
WITHOUT_CLASSIFICATION	Loop through the associations, looking for one with aggregation
WITHOUT_CLASSIFICATION	If drop out, we're OK
WITHOUT_CLASSIFICATION	end class CrNWayAgg.java
WITHOUT_CLASSIFICATION	end class CrOppEndConflict
WITHOUT_CLASSIFICATION	we could check for base class of the stereotype but the condition normally covers it all.
WITHOUT_CLASSIFICATION	intentional: if there is nonsense in the field, we return false
WITHOUT_CLASSIFICATION	intentional: if there is nonsense in the field, we do not set the value
WITHOUT_CLASSIFICATION	fireNodeRemoved(node);
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Diagram#setName(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#containsNode(java.lang.Object)
WITHOUT_CLASSIFICATION	newEdge.setDiElement( GraphChangeAdapter.getInstance().createElement(gm, edge));
WITHOUT_CLASSIFICATION	/ End GEF methods
WITHOUT_CLASSIFICATION	not allowed
WITHOUT_CLASSIFICATION	return;
WITHOUT_CLASSIFICATION	TODO: Comments are on Element in UML 2.x
WITHOUT_CLASSIFICATION	Create a diagram. This 4-arg version is only for internal use. The 'namespace' argument is deprecated and not used in the new APIs.
WITHOUT_CLASSIFICATION	This shouldn't be possible, but just in case
WITHOUT_CLASSIFICATION	fail silently as we expect users to accidentally drop on to wrong component
WITHOUT_CLASSIFICATION	Create the UML connection of the given type between the given model elements. default aggregation (none)
WITHOUT_CLASSIFICATION	Commentlinks for comments. Iterate over all the comment links to find the comment and annotated elements.
WITHOUT_CLASSIFICATION	The connection is not valid unless both nodes are in this graph model.
WITHOUT_CLASSIFICATION	The diagram are always owned by the model in this first implementation.
WITHOUT_CLASSIFICATION	IMPORTANT - These MUST remain in order!
WITHOUT_CLASSIFICATION	singleton, no instantiation
WITHOUT_CLASSIFICATION	The special value <code>null</code> is used internally to indicate that the default value should be inherited from the next level of settings.
WITHOUT_CLASSIFICATION	Repeat until no faults are fixed
WITHOUT_CLASSIFICATION	Diagram appearance settings with project scope:
WITHOUT_CLASSIFICATION	We can not remove this and have the application manage things directly based on the font, since only the names should be bold.
WITHOUT_CLASSIFICATION	Some cached fonts based on the above settings
WITHOUT_CLASSIFICATION	Since body ever looks at the type of the diagram appearance event, we can simplify from sending every existing event to one event only. But since there is no catch-all event defined, we just use one. Rationale: reduce the number of total refreshes of the drawing.
WITHOUT_CLASSIFICATION	If we've got a local (uninherited) font name or size or if we've got no parent to inherit from recompute our cached fonts
WITHOUT_CLASSIFICATION	This class is a temporary wrapper around the GEF UndoManager. This will be changed when GEF is modified to create commands and provide an observer interface for ArgoUML to receive them. <p> TODO: How does this relate to {@link org.argouml.kernel.DefaultUndoManager}? @author Bob Tarling
WITHOUT_CLASSIFICATION	Listen for name changes so we can veto them if we don't like them
WITHOUT_CLASSIFICATION	get all the classes from the diagram
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	The report
WITHOUT_CLASSIFICATION	The report
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	2. Make sure that all Figs are visible
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	TODO: These should get replaced immediately by the creating initialization code, but make sure we've got a default just in case.
WITHOUT_CLASSIFICATION	1. Make sure all Figs in the Diagrams layer refer back to that layer.
WITHOUT_CLASSIFICATION	maybe we have a modelelement that is part of some other fig
WITHOUT_CLASSIFICATION	Register for notification of any global changes that would affect our rendering
WITHOUT_CLASSIFICATION	Add the diagram as a listener to the namespace so that when the namespace is removed the diagram is deleted also.
WITHOUT_CLASSIFICATION	4. Make sure all FigNodes and FigEdges have an owner The report
WITHOUT_CLASSIFICATION	3. Make sure all FigEdges are attached to a valid FigNode The report
WITHOUT_CLASSIFICATION	5. Make sure all FigNodes and FigEdges have a valid owner The report
WITHOUT_CLASSIFICATION	4. Make sure the only FigGroups on a diagram are also FigNodes The report
WITHOUT_CLASSIFICATION	Do nothing, override in subclass.
WITHOUT_CLASSIFICATION	If we haven't succeeded in getting a namespace then abort
WITHOUT_CLASSIFICATION	This should always be true, but just in case...
WITHOUT_CLASSIFICATION	The diagram to be laid out.
WITHOUT_CLASSIFICATION	List of objects. NOTE: This methods which read/write this don't appear to be used.
WITHOUT_CLASSIFICATION	Point at which to start layout (initial state goes here). The X coordinate must be greater than half the width of the widest figure to be placed (because figures are centered on this location).
WITHOUT_CLASSIFICATION	Amount to increment Y position by for each node placed. We pack them densely on the assumption that the user is going to split them into at least two swimlanes.
WITHOUT_CLASSIFICATION	FinalState element for ActivityDiagram
WITHOUT_CLASSIFICATION	Find our Initial State
WITHOUT_CLASSIFICATION	Place all the nodes
WITHOUT_CLASSIFICATION	Place the final state last with a little separation
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	If we're trying to set the namespace to the existing value then don't do any more work.
WITHOUT_CLASSIFICATION	Recursively place all nodes pointed to by outgoing transitions. Because of the recursive algorithm multiple outgoing transitions will end up very lopsided because one entire subgraph will be done before dealing with the other transition(s). @param seen set of nodes seen so far @param node the node to collect neighbors for
WITHOUT_CLASSIFICATION	figClone.seperator = (FigLine) it.next();
WITHOUT_CLASSIFICATION	Needed for project deletion
WITHOUT_CLASSIFICATION	we want to maintain a minimum size for the partition
WITHOUT_CLASSIFICATION	TODO: midpoints for side handles
WITHOUT_CLASSIFICATION	We removed the last partition, so now remove the pool, too:
WITHOUT_CLASSIFICATION	no action required in case of veto on setName
WITHOUT_CLASSIFICATION	This test needed for project deletion
WITHOUT_CLASSIFICATION	TODO: side handles
WITHOUT_CLASSIFICATION	Listen to activitygraph deletion, delete this diagram.
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	no action required
WITHOUT_CLASSIFICATION	The namespace of the activitygraph is changed!
WITHOUT_CLASSIFICATION	getActionSubactivityState()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	The space between the 2 text figs is: PADDING. @see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	we want to maintain a minimum size for the partition
WITHOUT_CLASSIFICATION	Class to display graphics for a UML ObjectFlowState in a diagram.<p> The Fig of this modelElement may either represent the following UMLelements: <p> (1) an ObjectFlowState with a Classifier as type, or <p> (2) an ObjectFlowState with a ClassifierInState as type. <p> In both cases (1) and (2), the Fig shows the underlined name of the Classifier, and in the latter case (2), it shows also the names of the states of the ClassifierInState. <p> In the examples in the UML standard, this is written like<pre> PurchaseOrder [approved] </pre> i.e. in 2 lines. The first line is underlined, to indicate that it is an instance (object).<p> The fact that the first line is underlined, and the 2nd not, is the reason to implement them in 2 separate Figs.<p> TODO: Allow stereotypes to be shown. @author mvw
WITHOUT_CLASSIFICATION	Model.getActivityGraphsHelper() .isAddingActivityGraphAllowed(base);
WITHOUT_CLASSIFICATION	TODO: We may return the following when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	TODO: We may return something useful when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	register for events from the type
WITHOUT_CLASSIFICATION	Create a map of partitions keyed by x coordinate
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Sort the x coordinates into order
WITHOUT_CLASSIFICATION	the state name
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	If the layer is null, then most likely we are being deleted.
WITHOUT_CLASSIFICATION	Don't listen to all property names We only need to listen to its "type", and "remove".
WITHOUT_CLASSIFICATION	the height of the blank space above and below the text figs:
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	and listen to name changes of the submachine
WITHOUT_CLASSIFICATION	both have the same settings
WITHOUT_CLASSIFICATION	both have the same owner
WITHOUT_CLASSIFICATION	add them back to front
WITHOUT_CLASSIFICATION	Let our superclass sort itself out first
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#getNewNode(int)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	Set up the property panels for activity diagrams:
WITHOUT_CLASSIFICATION	overrule the single-line name-fig created by the parent
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	setBlinkPorts(false); make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	TODO: Do we need to clone the stereotype(s)?
WITHOUT_CLASSIFICATION	(MGeneralization)
WITHOUT_CLASSIFICATION	The stereoDim has height=2, even if it is empty, hence the -2 below:
WITHOUT_CLASSIFICATION	the width needs to be > the height
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	TODO:?
WITHOUT_CLASSIFICATION	((MClassifier)node).setNamespace(_collab.getNamespace());
WITHOUT_CLASSIFICATION	TODO: assumes public, user pref for default visibility?
WITHOUT_CLASSIFICATION	Add the given edge to the graph, if valid. @see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	TODO: We may return the following when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	The NotationProvider for the ClassifierRole. <p> The syntax is for UML is: <pre> baselist := [base] [, base] classifierRole := [name] [/ role] [: baselist] </pre></p> The <code>name</code> is the Instance name, not used currently. See ClassifierRoleNotationUml for details.<p> This syntax is compatible with the UML 1.4 specification.
WITHOUT_CLASSIFICATION	TODO: assumes public
WITHOUT_CLASSIFICATION	The stereotype. Width is the same as the cover, height is its default (since the font is not yet set). The text should be centered.
WITHOUT_CLASSIFICATION	throws PropertyVetoException
WITHOUT_CLASSIFICATION	(MElementImport)
WITHOUT_CLASSIFICATION	getStereotypeFig().setFilled(false);
WITHOUT_CLASSIFICATION	end class CollabDiagramGraphModel
WITHOUT_CLASSIFICATION	In the rather unlikely case that we have no name, we give up.
WITHOUT_CLASSIFICATION	The big port. Color of the big port is irrelevant
WITHOUT_CLASSIFICATION	The name. Width is the same as the cover, height is the default. The text of the name will be centered by default. In the same place as the stereotype, since at this stage the stereotype is not displayed. Being a classifier role it is underlined
WITHOUT_CLASSIFICATION	The cover.
WITHOUT_CLASSIFICATION	At least one stereotype is visible
WITHOUT_CLASSIFICATION	Remember where we are at present, so we can tell GEF later. Then check we are as big as the minimum size
WITHOUT_CLASSIFICATION	Set the bounds of the bigPort and cover
WITHOUT_CLASSIFICATION	Work out the padding each side, depending on whether the stereotype is displayed and set bounds accordingly
WITHOUT_CLASSIFICATION	Record the changes in the instance variables of our parent, tell GEF and trigger the edges to reconsider themselves.
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	this one behaves differently, hence seperated:
WITHOUT_CLASSIFICATION	this one behaves differently, hence seperated:
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	TODO: We may return something useful when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	TODO:?
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	end class FigAssociationRole
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	TODO -> settings
WITHOUT_CLASSIFICATION	the figs that make up this group
WITHOUT_CLASSIFICATION	the figs that make up this group
WITHOUT_CLASSIFICATION	_x = first.getX(); _y = first.getY();
WITHOUT_CLASSIFICATION	_x = first.getX(); _y = first.getY();
WITHOUT_CLASSIFICATION	Set up the property panels for collaboration diagrams:
WITHOUT_CLASSIFICATION	this is neat...
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	TODO: assumes public
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	TODO: assumes public, user pref for default visibility? do I have to check the namespace here? (Toby)
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	Set up the property panels for deployment diagrams:
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	Getters for plugin modules:
WITHOUT_CLASSIFICATION	so it still looks like a cube
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	_bigPort.setBounds(x+1, y+1, w-2, h-2);
WITHOUT_CLASSIFICATION	nothing extra to do currently
WITHOUT_CLASSIFICATION	North, South, West, East, South-West
WITHOUT_CLASSIFICATION	end class PredIsStartpackage
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	If the layer is null, then most likely we are being deleted.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	VetoableChangeListener implementation
WITHOUT_CLASSIFICATION	throws PropertyVetoException
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	end class StateDiagramGraphModel
WITHOUT_CLASSIFICATION	Don't do it for comment.
WITHOUT_CLASSIFICATION	(MElementImport)
WITHOUT_CLASSIFICATION	(MTransition)
WITHOUT_CLASSIFICATION	prevent no changes...
WITHOUT_CLASSIFICATION	If a UML object is found, you can not remove selected elms.
WITHOUT_CLASSIFICATION	check parameter types:
WITHOUT_CLASSIFICATION	If nothing is selected, then not allowed to remove it.
WITHOUT_CLASSIFICATION	If only Figs without owner are selected, then you can remove them!
WITHOUT_CLASSIFICATION	end class PredIsFinalState
WITHOUT_CLASSIFICATION	This presumes that the layer is set after the owner:
WITHOUT_CLASSIFICATION	If it is concurrent and contains concurrent regions, the bottom region has a minimum height
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	The purpose of this method is not explained and it give give NPE depending on z order of figs as they are read. For now ignore if null but for future lets delete this.
WITHOUT_CLASSIFICATION	We only handle the case where a region has been removed:
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	If it is concurrent and contains concurrent regions, the regions are resized
WITHOUT_CLASSIFICATION	None of the menu-items below apply when multiple modelelements are selected:
WITHOUT_CLASSIFICATION	do we need to
WITHOUT_CLASSIFICATION	The returned list of Figs is sorted according layout: from top to bottom.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	This makes dragging connected edges very smooth. @see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	The event source is the owner stub state
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	end class FigCompositeState
WITHOUT_CLASSIFICATION	The event source is the submachine state
WITHOUT_CLASSIFICATION	TargetManager.getInstance().addTargetListener(this);
WITHOUT_CLASSIFICATION	ignored - fixed rendering
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Event handlers
WITHOUT_CLASSIFICATION	Cmd API
WITHOUT_CLASSIFICATION	end class ActionCreatePseudostate
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	The submachine has got a new name
WITHOUT_CLASSIFICATION	The event source is the stub state's referenced state or one of the referenced state's path.
WITHOUT_CLASSIFICATION	This indicates a change in association, not name - tfm
WITHOUT_CLASSIFICATION	All states in the new reference state's path are added as listeners
WITHOUT_CLASSIFICATION	The source was the referenced state that has got a new name.
WITHOUT_CLASSIFICATION	ignored - rendering is fixed
WITHOUT_CLASSIFICATION	The source was one of the referenced state's path which has got a new name.
WITHOUT_CLASSIFICATION	The old submachine container is deleted as listener
WITHOUT_CLASSIFICATION	The Referenced State or one of his path's states has got a new name
WITHOUT_CLASSIFICATION	The new submachine container is added as listener
WITHOUT_CLASSIFICATION	All states in the old reference state's path are deleted as listeners
WITHOUT_CLASSIFICATION	Translate any old style sequence diagrams
WITHOUT_CLASSIFICATION	Just swap order of arguments to get to new form
WITHOUT_CLASSIFICATION	Translate any sequence diagrams create with any previous svn work in progress
WITHOUT_CLASSIFICATION	Get the first existing FigNode and if it exists set the y position and height of _pers to be the same as it.
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	ignored - rendering is fixed
WITHOUT_CLASSIFICATION	ignore mouse clicks
WITHOUT_CLASSIFICATION	ignore mouse clicks
WITHOUT_CLASSIFICATION	The Machine State has got a new name
WITHOUT_CLASSIFICATION	This assert fails for the TestPropertyPanels, file GUITestPropertyPanels.zargo:
WITHOUT_CLASSIFICATION	assert w == h;
WITHOUT_CLASSIFICATION	The Machine State has been deleted from model
WITHOUT_CLASSIFICATION	Ignore w and h from here on.
WITHOUT_CLASSIFICATION	keep d even or odd, just like the line width:
WITHOUT_CLASSIFICATION	leave some space below the "include"
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	both have the same settings
WITHOUT_CLASSIFICATION	both have the same owner
WITHOUT_CLASSIFICATION	TODO -> settings
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	There are one or more regions so find the one that the vertex was dropped in
WITHOUT_CLASSIFICATION	The vertex was dropped onto the diagram. Get the region as the first Region in the StateMachine. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders (java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	noop - fixed rendering
WITHOUT_CLASSIFICATION	There are no regions so create one and place the vertex there.
WITHOUT_CLASSIFICATION	Temporary start private static final Color[] COLOR_ARRAY = { Color.RED, Color.BLUE, Color.CYAN, Color.YELLOW, Color.GREEN}; private int nextColor = 0; Temporary end
WITHOUT_CLASSIFICATION	setBlinkPorts(false); make port invisble unless mouse enters
WITHOUT_CLASSIFICATION	there can only be one
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	We aren't able to resize neither the top bound from the first region nor the bottom bound from the last region.
WITHOUT_CLASSIFICATION	The group must be resized if a text field exceed the bounds
WITHOUT_CLASSIFICATION	if curHandle.index is 0 or 2, the adjacent region is the previous region but if it is 5 or 7, the adjacent region is the next region. curHandle.index show which corner of the bound we are dragging.
WITHOUT_CLASSIFICATION	A Concurrent region cannot have incoming or outgoing transitions so incoming or outgoing transitions are redirected to its concurrent composite state container.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseDragged(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	/ event handlers - MouseListener and MouseMotionListener implementation
WITHOUT_CLASSIFICATION	or just the owner?
WITHOUT_CLASSIFICATION	Listen to machine deletion, to delete the diagram.
WITHOUT_CLASSIFICATION	this in case we are being deleted
WITHOUT_CLASSIFICATION	The namespace of the statemachine is changed!
WITHOUT_CLASSIFICATION	return;
WITHOUT_CLASSIFICATION	return;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	throws PropertyVetoException
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	prevent no changes...
WITHOUT_CLASSIFICATION	check parameter types:
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Model.getStateMachinesHelper() .isAddingStatemachineAllowed(base);
WITHOUT_CLASSIFICATION	Set up the property panels for statechart diagrams:
WITHOUT_CLASSIFICATION	if location is null here the position of the new figNode is set after in org.tigris.gef.base.ModePlace.mousePressed(MouseEvent e)
WITHOUT_CLASSIFICATION	MModelElement modelElement = elementImport.getModelElement();
WITHOUT_CLASSIFICATION	top of the hierarchy is ME:
WITHOUT_CLASSIFICATION	top of the hierarchy is ME:
WITHOUT_CLASSIFICATION	then Generalizable Element
WITHOUT_CLASSIFICATION	then Generalizable Element
WITHOUT_CLASSIFICATION	then Classifier & Package
WITHOUT_CLASSIFICATION	navigable.... only want incoming
WITHOUT_CLASSIFICATION	then Classifier
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	VetoableChangeListener implementation
WITHOUT_CLASSIFICATION	cast the params
WITHOUT_CLASSIFICATION	N.B. A node which is an Association is either a n-ary association or the Class part of an AssociationClass
WITHOUT_CLASSIFICATION	check param types: only some connections are legal uml connections:
WITHOUT_CLASSIFICATION	set the new end type!
WITHOUT_CLASSIFICATION	rerouting the destination:
WITHOUT_CLASSIFICATION	rerouting the source:
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	move down
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	move more right
WITHOUT_CLASSIFICATION	move left
WITHOUT_CLASSIFICATION	use left and right, up and down
WITHOUT_CLASSIFICATION	calculate the higher and lower Figs
WITHOUT_CLASSIFICATION	the amount of the "sidestep"
WITHOUT_CLASSIFICATION	If center points are "close enough" we just adjust the endpoints of the line a little bit. Otherwise we add a jog in the middle to deal with the offset. TODO: Epsilon is currently fixed, but could probably be computed dynamically as 10% of the width of the narrowest figure or some other value which is visually not noticeable.
WITHOUT_CLASSIFICATION	currentEdge.setBetweenNearestPoints(false);
WITHOUT_CLASSIFICATION	LOG.debug(result + " node1: " + this + ", node2 " + node);
WITHOUT_CLASSIFICATION	split = (split == null || split.isStandalone()) ? node : split;
WITHOUT_CLASSIFICATION	(xOffset - curW) / 2;
WITHOUT_CLASSIFICATION	Element is allowed, but only NamedElement can return nonempty list
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	self associations are special cases. No need to let the maze runner find the way.
WITHOUT_CLASSIFICATION	Link does not exist in UML2
WITHOUT_CLASSIFICATION	now we construct the zig zag inheritance line getUnderlyingFig()
WITHOUT_CLASSIFICATION	Class to display graphics for a UML Link in a diagram. <p> The underlined association name is shown next to the middle of the path. TODO: Show more notation as described in the standard: "A rolename may be shown at each end of the link. An association name may be shown near the path. If present, it is underlined to indicate an instance. Links do not have instance names, they take their identity from the instances that they relate. Multiplicity is not shown for links because they are instances. Other association adornments (aggregation, composition, navigation) may be shown on the link ends."
WITHOUT_CLASSIFICATION	Text group to contain name & stereotype
WITHOUT_CLASSIFICATION	end class FigLink
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	Stereotype covers NameFig:
WITHOUT_CLASSIFICATION	Compartments from top to bottom:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	by default, do not show operations nor attributes:
WITHOUT_CLASSIFICATION	We're going to change the name immediately, so just use ""
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	TODO: place comments near connected classes TODO: place from middle towards outer edges? (or place largest groups first)
WITHOUT_CLASSIFICATION	boolean hasPackages = false; TODO: move "package in row" to NodeRow
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	This calls the getters to fetch actions even though the action variables are defined is instances of this class. This is because any number of action getters could have been overridden in a descendant and it is the action from that overridden method that should be returned in the array.
WITHOUT_CLASSIFICATION	since UML2, this must appear before the isAClass clause
WITHOUT_CLASSIFICATION	this rectangle marks the operation section; all operations are inside it
WITHOUT_CLASSIFICATION	2nd compartment, so adjust Y appropriately
WITHOUT_CLASSIFICATION	TODO: We should be able to just call renderingChanged on the child figs here instead of doing an updateOperations...
WITHOUT_CLASSIFICATION	TODO: We just need to get someone to re-render a single line of text which represents the element here, but I'm not sure how to do that. - tfm TODO: Bob replies - we shouldn't be interested in this event here. The FigFeature (or its notation) should be listen for change and the FigFeature should be update from that.
WITHOUT_CLASSIFICATION	Collect the set of model elements that we want to listen to
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#translate(int, int)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	check if any stereotype is defined
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	and the parameter of its operations
WITHOUT_CLASSIFICATION	Update the listeners to match the desired set using the minimal update facility
WITHOUT_CLASSIFICATION	Modifier ...
WITHOUT_CLASSIFICATION	Create a Body that reacts to double-clicks and jumps to a diagram.
WITHOUT_CLASSIFICATION	Add ...
WITHOUT_CLASSIFICATION	Visibility ...
WITHOUT_CLASSIFICATION	Set properties of the stereotype box. Initially not set to be displayed, but this will be changed when we try to render it, if we find we have a stereotype.
WITHOUT_CLASSIFICATION	There are 2 boxes showing lines: the tab and the body.
WITHOUT_CLASSIFICATION	This populates the stereotypes area:
WITHOUT_CLASSIFICATION	else nothing changed
WITHOUT_CLASSIFICATION	else nothing changed
WITHOUT_CLASSIFICATION	we got at least one stereotype
WITHOUT_CLASSIFICATION	the user wants to hide them
WITHOUT_CLASSIFICATION	Modifier ...
WITHOUT_CLASSIFICATION	Visibility ...
WITHOUT_CLASSIFICATION	The figPoly is located at the right of the name text. The nameFig size is increased, so that it fits its text, and the figPoly next to the text, all within the boundaries of the nameFig.
WITHOUT_CLASSIFICATION	If we have any number of stereotypes displayed, then allow some space for that (only width, height is included in nameFig):
WITHOUT_CLASSIFICATION	take into account the tab is not as wide as the body:
WITHOUT_CLASSIFICATION	we want at least some of the package body to be displayed
WITHOUT_CLASSIFICATION	And now aSize has the answer
WITHOUT_CLASSIFICATION	Save our old boundaries (needed later), and get minimum size info. "aSize" will be used to maintain a running calculation of our size at various points.
WITHOUT_CLASSIFICATION	The new size can not be smaller than the minimum.
WITHOUT_CLASSIFICATION	Now resize all sub-figs, including not displayed figs. Start by the name. We override the getMinimumSize if it is less than our view (21 pixels hardcoded!). Add in the shared extra, plus in this case the correction.
WITHOUT_CLASSIFICATION	Now sort out the stereotype display. If the stereotype is displayed, move the upper boundary of the name compartment up and set new bounds for the name and the stereotype compartments and the stereoLineBlinder that blanks out the line between the two
WITHOUT_CLASSIFICATION	Advance currentY to where the start of the body box is, remembering that it overlaps the next box by 1 pixel. Calculate the size of the body box, and update the Y pointer past it if it is displayed.
WITHOUT_CLASSIFICATION	-1 for 1 pixel overlap
WITHOUT_CLASSIFICATION	set bounds of big box
WITHOUT_CLASSIFICATION	The figPoly is located at the right edge of the nameFig. The nameFig size is such that it at least fits its text, and the figPoly next to the text. Making the package bigger, causes the figPoly to stick to the right edge.
WITHOUT_CLASSIFICATION	Now force calculation of the bounds of the figure, update the edges and trigger anyone who's listening to see if the "bounds" property has changed.
WITHOUT_CLASSIFICATION	Only show the menuitems if they make sense:
WITHOUT_CLASSIFICATION	save first
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	If we get here then we didn't get the default diagram.
WITHOUT_CLASSIFICATION	Try to create a new class diagram.
WITHOUT_CLASSIFICATION	if package
WITHOUT_CLASSIFICATION	if doubleclicks
WITHOUT_CLASSIFICATION	change prefix
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	end class FigPackage
WITHOUT_CLASSIFICATION	Readonly class: no generalization, no association to self
WITHOUT_CLASSIFICATION	end class StylePanelFigPackage
WITHOUT_CLASSIFICATION	In the DeploymentDiagram there are no Generalizations
WITHOUT_CLASSIFICATION	Self-association isn't draggable
WITHOUT_CLASSIFICATION	end class StylePanelFigInterface
WITHOUT_CLASSIFICATION	No Generalizations on Deployment Diagram
WITHOUT_CLASSIFICATION	and its stereotypes
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Stereotype covers NameFig:
WITHOUT_CLASSIFICATION	Compartments from top to bottom:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	Collect the set of model elements that we want to listen to
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	and the parameter of its operations
WITHOUT_CLASSIFICATION	Use super because not fully init'd
WITHOUT_CLASSIFICATION	and its enumerationLiterals
WITHOUT_CLASSIFICATION	And now add listeners to them all:
WITHOUT_CLASSIFICATION	Put all the bits together, suppressing bounds calculations until we're all done for efficiency.
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig:
WITHOUT_CLASSIFICATION	Set the bounds of the figure to the total of the above
WITHOUT_CLASSIFICATION	If moved into an Package
WITHOUT_CLASSIFICATION	If default Namespace is not already set
WITHOUT_CLASSIFICATION	The next if-clause is important for the Deployment-diagram it detects if the enclosing fig is a component, in this case the container will be set for the owning Interface
WITHOUT_CLASSIFICATION	Testing: Add a parameter to an operation on an Interface. Does the Interface Fig adapt its width?
WITHOUT_CLASSIFICATION	Set up the property panels for class diagrams:
WITHOUT_CLASSIFICATION	The figure that holds the text of the note.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	Update the listeners to match the desired set using the minimal update facility
WITHOUT_CLASSIFICATION	Get the size of the text field.
WITHOUT_CLASSIFICATION	Mark this as newly created. This is to get round the problem with creating figs for loaded comments that had stereotypes. They are saved with their dimensions INCLUDING the stereotype, but since we pretend the stereotype is not visible, we add height the first time we render such a comment. This is a complete fudge, and really we ought to address how comment objects with stereotypes are saved. But that will be hard work.
WITHOUT_CLASSIFICATION	update the relative sizes and positions of internel Figs
WITHOUT_CLASSIFICATION	update any text, colors, fonts, etc.
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	Resize the text figure
WITHOUT_CLASSIFICATION	resize the FigNode to accomodate the new text
WITHOUT_CLASSIFICATION	Not used, do nothing.
WITHOUT_CLASSIFICATION	Not used, do nothing.
WITHOUT_CLASSIFICATION	Resize the big port around the figure
WITHOUT_CLASSIFICATION	The text element has no border, so the line color doesn't matter.
WITHOUT_CLASSIFICATION	The text is always opaque.
WITHOUT_CLASSIFICATION	? 2LINE_WIDTH?
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	Make a seamless integration of the text in the note figure.
WITHOUT_CLASSIFICATION	user interaction methods
WITHOUT_CLASSIFICATION	accessor methods
WITHOUT_CLASSIFICATION	If we have a stereotype displayed, then allow some space for that (width and height)
WITHOUT_CLASSIFICATION	And add the gaps around the textfield to get the minimum size of the note.
WITHOUT_CLASSIFICATION	Since this is a complex polygon, there's no easy way to resize it.
WITHOUT_CLASSIFICATION	Just move the corner to it's new position.
WITHOUT_CLASSIFICATION	/ Internal methods
WITHOUT_CLASSIFICATION	Remove the commentedge. If there are more then one comment-edges between the 2 objects, then delete them all.
WITHOUT_CLASSIFICATION	all connected edges
WITHOUT_CLASSIFICATION	Only adjust the stereotype height if we are not newly created. This gets round the problem of loading classes with stereotypes defined, which have the height already including the stereotype.
WITHOUT_CLASSIFICATION	Whatever happened we are no longer newly created, so clear the flag. Then set the bounds for the rectangle we have defined.
WITHOUT_CLASSIFICATION	end class StylePanelFigClass
WITHOUT_CLASSIFICATION	TODO: get tip string from comment
WITHOUT_CLASSIFICATION	This one is still usable, so let's retain it,
WITHOUT_CLASSIFICATION	the last one needs extra space below it
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setDestFigNode(org.tigris.gef.presentation.FigNode)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setSourceFigNode(org.tigris.gef.presentation.FigNode)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	contructors
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	Visibility ...
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig:
WITHOUT_CLASSIFICATION	element will normally be null when called from PGML parser It will get it's source & destination set later in attachEdges
WITHOUT_CLASSIFICATION	Unfortunately the Fig and it's associated CommentEdge will not be fully initialized yet here if we're being loaded from a PGML file. The remainder of the initialization will happen when set{Dest|Source}FigNode are called from PGMLStackParser.attachEdges()
WITHOUT_CLASSIFICATION	unimplemented
WITHOUT_CLASSIFICATION	Alternatively, we could just return null here, so that you can not create a comment just linked to a comment this way - which is a bit uncommon, but not illegal, so for consistency, we better allow it.
WITHOUT_CLASSIFICATION	return null;
WITHOUT_CLASSIFICATION	Class to display a Stereotype declaration figure using Classifier box notation.<p> TODO: This is just a place-holder right now! - tfm This needs to show tags and constraints.
WITHOUT_CLASSIFICATION	Add...
WITHOUT_CLASSIFICATION	Show ...
WITHOUT_CLASSIFICATION	register for tagDefinitions:
WITHOUT_CLASSIFICATION	TODO: constraints, ...
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction#isEnabled()
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	Put all the bits together, suppressing bounds calculations until we're all done for efficiency.
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	TODO: Need named Tags and Constraints compartments here addFig(tagsFig); addFig(constraintsFig);
WITHOUT_CLASSIFICATION	If moved into an Package
WITHOUT_CLASSIFICATION	If default Namespace is not already set
WITHOUT_CLASSIFICATION	When this is called from PGMLStackParser.attachEdges, we finished the initialization of owning pseudo element (CommentEdge)
WITHOUT_CLASSIFICATION	If the Operation/Reception is abstract, then the text will be set to italics.
WITHOUT_CLASSIFICATION	avoid GEF calcDrawingArea bug when nothing in a diagram.
WITHOUT_CLASSIFICATION	TODO: Add Tags & Constraints addMenu.add(TargetManager.getInstance().getAddAttributeAction()); addMenu.add(TargetManager.getInstance().getAddOperationAction());
WITHOUT_CLASSIFICATION	avoid GEF calcDrawingArea bug when nothing in a diagram.
WITHOUT_CLASSIFICATION	No generalizations in Deployment Diagrams
WITHOUT_CLASSIFICATION	the diagram image data
WITHOUT_CLASSIFICATION	copy the gif image to the clipboard
WITHOUT_CLASSIFICATION	the diagram image data
WITHOUT_CLASSIFICATION	hide grid, otherwise can't see anything
WITHOUT_CLASSIFICATION	bigPort.setFilled(f);
WITHOUT_CLASSIFICATION	background color.
WITHOUT_CLASSIFICATION	2 Pixel padding after compartment
WITHOUT_CLASSIFICATION	Set up hide all / show all
WITHOUT_CLASSIFICATION	Perform the action
WITHOUT_CLASSIFICATION	Only the bigPort may be filled
WITHOUT_CLASSIFICATION	?LINE_WIDTH?
WITHOUT_CLASSIFICATION	see parent
WITHOUT_CLASSIFICATION	?LINE_WIDTH?
WITHOUT_CLASSIFICATION	We remove all of them:
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.undo.UndoableAction#isEnabled()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	?LINE_WIDTH?
WITHOUT_CLASSIFICATION	If we don't have a fig for this UML object, we'll need to add one. We set the bounds, but they will be reset later.
WITHOUT_CLASSIFICATION	but its position may have been changed:
WITHOUT_CLASSIFICATION	bounds not relevant here, but I am perfectionist...
WITHOUT_CLASSIFICATION	We need to set a new notationprovider, since the Notation language may have been changed:
WITHOUT_CLASSIFICATION	add it again (but now in the right sequence)
WITHOUT_CLASSIFICATION	Now put the text in We must handle the case where the text is null
WITHOUT_CLASSIFICATION	No longer abstract to allow subclasses to remove, so we provide a null default implementation
WITHOUT_CLASSIFICATION	If this is not overridden it will revert to the old behavior All internal subclasses have been updated, but this if for compatibility of non-ArgoUML extensions.
WITHOUT_CLASSIFICATION	Find the compartment fig for this umlObject:
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Fill property cannot be changed.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Line width cannot be changed.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Line width property cannot be changed.
WITHOUT_CLASSIFICATION	aggregation
WITHOUT_CLASSIFICATION	end class ActionSrcMultOneToMany
WITHOUT_CLASSIFICATION	TODO: set font?
WITHOUT_CLASSIFICATION	to circumvent too many registered listeners
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#hit(java.awt.Rectangle)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Calling connect() will add the edge to the GraphModel and any LayerPersectives on that GraphModel will get a edgeAdded event and will add an appropriate FigEdge (determined by the GraphEdgeRenderer).
WITHOUT_CLASSIFICATION	ending editing
WITHOUT_CLASSIFICATION	USED BY PGML.tee
WITHOUT_CLASSIFICATION	Actually return the FigEdge that the FigEdgePort is part of.
WITHOUT_CLASSIFICATION	throw new IllegalArgumentException();
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	If the user selects an Action that is already selected in sticky mode (double clicked) then we turn off sticky mode and make sure no action is selected.
WITHOUT_CLASSIFICATION	Here the actions to divide a region
WITHOUT_CLASSIFICATION	The 1st region has an invisible divider line (the box is always invisible):
WITHOUT_CLASSIFICATION	Throw out any previous elements that were enclosed but are not a concurrent region; let's move them onto the first region:
WITHOUT_CLASSIFICATION	linewidth?
WITHOUT_CLASSIFICATION	The divider line should be visible, so no need to change its color.
WITHOUT_CLASSIFICATION	Make the composite state 1 region higher:
WITHOUT_CLASSIFICATION	TODO: Verify this. IIUC, then this triggers the CompountStateFig to draw itself correctly. Hence, there was a reason to wait this long to make the state concurrent.
WITHOUT_CLASSIFICATION	Look for the dashed edge
WITHOUT_CLASSIFICATION	We have the dashed edge now find the opposite FigNode
WITHOUT_CLASSIFICATION	Prevent triggering too many events by setName().
WITHOUT_CLASSIFICATION	not???
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Consume to stop other modes from trying to take over
WITHOUT_CLASSIFICATION	marker interface only
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	Only reset the text if the two are not the same (i.e the fig has moved, rather than we've just edited the text, when setTargetBBox() will have made them the same). Note that styleBounds could be null, so we do the test this way round.
WITHOUT_CLASSIFICATION	Can't do anything if we don't have a fig.
WITHOUT_CLASSIFICATION	2 Pixel padding after compartment
WITHOUT_CLASSIFICATION	or vice versa?
WITHOUT_CLASSIFICATION	Provide feedback to the user that their name was not accepted
WITHOUT_CLASSIFICATION	Subtract the the offset of the click, to take account of user having not initially clicked in the centre.
WITHOUT_CLASSIFICATION	super returns -1 if any of GEFs buttons was hit (but maybe one of the not-GEF-buttons)
WITHOUT_CLASSIFICATION	Do not show border line, make transparent:
WITHOUT_CLASSIFICATION	cleanup of unused FigText's
WITHOUT_CLASSIFICATION	TODO: This doesn't do anything special with keywords. They should probably go first.
WITHOUT_CLASSIFICATION	There is one fig more in the group than (stereotypes + keyword):
WITHOUT_CLASSIFICATION	The keyword fig already exists.
WITHOUT_CLASSIFICATION	This will contain the Figs that we do not need anymore:
WITHOUT_CLASSIFICATION	bounds not relevant here
WITHOUT_CLASSIFICATION	bounds not relevant here
WITHOUT_CLASSIFICATION	The stereotype fig already exists.
WITHOUT_CLASSIFICATION	The boundary box as held in the target fig, and as listed in the boundary box style field (null if we don't have anything valid)
WITHOUT_CLASSIFICATION	remove all stereotypes that have a graphical icon
WITHOUT_CLASSIFICATION	TODO: check!
WITHOUT_CLASSIFICATION	set new bounds for all included figs
WITHOUT_CLASSIFICATION	StylePanelFigClass relies on getPanelTarget() to return a FigCompartmentBox
WITHOUT_CLASSIFICATION	Get class box, because we will set it's bounding box
WITHOUT_CLASSIFICATION	Get class box, because we will set it's bounding box in text field
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Calling connect() will add the edge to the GraphModel and any LayerPersectives on that GraphModel will get a edgeAdded event and will add an appropriate FigEdge (determined by the GraphEdgeRenderer).
WITHOUT_CLASSIFICATION	The keyword fig does not exist yet. Let's create one:
WITHOUT_CLASSIFICATION	keywords which look like a stereotype (e.g. <<interface>>) have no owner
WITHOUT_CLASSIFICATION	if there are no stereotypes, we return (0,0), preventing double lines in the class (see issue 4939)
WITHOUT_CLASSIFICATION	end class StylePanelFigAssociationClass
WITHOUT_CLASSIFICATION	/ Constructors /
WITHOUT_CLASSIFICATION	/ Main methods /
WITHOUT_CLASSIFICATION	Create the singleton if it does not exist, and then return it
WITHOUT_CLASSIFICATION	When a new target is selected, we have to check if it 's a use case. Then, the icone "add extension point" have to become enabled.
WITHOUT_CLASSIFICATION	Find the target in the project browser. We can only do anything if its a use case.
WITHOUT_CLASSIFICATION	Create a new extension point and make it the browser target. Then invoke the superclass action method.
WITHOUT_CLASSIFICATION	end class ActionAddExtensionPoint
WITHOUT_CLASSIFICATION	We have already confirmed the connection is valid
WITHOUT_CLASSIFICATION	Detach any edges (such as comment edges) already attached to the FigAssociation before the FigAssociation is removed. They'll later be re-attached to the new FigNodeAssociation
WITHOUT_CLASSIFICATION	If there are bits of an association class then remember their location and path.
WITHOUT_CLASSIFICATION	Create the new FigNodeAssociation and locate it.
WITHOUT_CLASSIFICATION	Add the association ends to the graph model
WITHOUT_CLASSIFICATION	Add the edges (such as comment edges) that were on the old FigAssociation to our new FigNodeAssociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragEnter( java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragOver( java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dropActionChanged( java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	get the model elements that are being transfered.
WITHOUT_CLASSIFICATION	multiplicity
WITHOUT_CLASSIFICATION	end class ModeCreateAssociation
WITHOUT_CLASSIFICATION	&& ((UMLDiagram) dia).doesAccept(dtde.getSource())
WITHOUT_CLASSIFICATION	Create a new FigText instance based on the given mouse down event and the state of the parent Editor.
WITHOUT_CLASSIFICATION	System.err.println("NullPointerException ignored.");
WITHOUT_CLASSIFICATION	end class SPFigEdgeModelElement
WITHOUT_CLASSIFICATION	System.err.println("NullPointerException ignored.");
WITHOUT_CLASSIFICATION	Get all our sub Figs and hit them with the big stick too
WITHOUT_CLASSIFICATION	Only show the path item when there is an owning namespace.
WITHOUT_CLASSIFICATION	Only show the path item when there is an owning namespace.
WITHOUT_CLASSIFICATION	enumerate all selected figures and update their path accordingly
WITHOUT_CLASSIFICATION	Force the line-width to 0, since the FigGroup that contains the stereotype may want to show a border, but we don't.
WITHOUT_CLASSIFICATION	compartments
WITHOUT_CLASSIFICATION	TODO: Support commentEdges. TODO: Support associations to self. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	add
WITHOUT_CLASSIFICATION	20 = height of name fig ?
WITHOUT_CLASSIFICATION	Now force calculation of the bounds of the figure, update the edges and trigger anyone who's listening to see if the "bounds" property has changed.
WITHOUT_CLASSIFICATION	2LINE_WIDTH? or extra padding?
WITHOUT_CLASSIFICATION	Set properties of the stereotype box.
WITHOUT_CLASSIFICATION	The nameFig is transparent, since this is a box and the fill color is drawn by the bigPort.
WITHOUT_CLASSIFICATION	Use "aSize" to build up the minimum size. Start with the size of the name compartment and build up.
WITHOUT_CLASSIFICATION	Only take into account the stereotype width, not the height, since the height is included in the name fig:
WITHOUT_CLASSIFICATION	Add the height of all the compartments (if there are any), and check their minimum width:
WITHOUT_CLASSIFICATION	Save our old boundaries so it can be used in property message later
WITHOUT_CLASSIFICATION	Make sure we don't try to set things smaller than the minimum
WITHOUT_CLASSIFICATION	The box for the compartments is somewhere inside the outside bounds:
WITHOUT_CLASSIFICATION	Now the new nameFig height will include the stereotype height:
WITHOUT_CLASSIFICATION	The new height can not be less than the name height:
WITHOUT_CLASSIFICATION	Calculate the minimum needed height for all the compartments:
WITHOUT_CLASSIFICATION	Distribute the extra height over the visible compartments:
WITHOUT_CLASSIFICATION	Increase the height of the fig:
WITHOUT_CLASSIFICATION	Finally set the bounds of the big box and the border fig:
WITHOUT_CLASSIFICATION	hide compartment
WITHOUT_CLASSIFICATION	Hiding one compartment means that the Fig returns to minimal dimensions:
WITHOUT_CLASSIFICATION	@see javax.swing.JComponent#setVisible(boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.PathConv#stuffPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.PathConv#setClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.PathConv#applyOffsetAmount(java.awt.Point, java.awt.Point, int, java.awt.Point)
WITHOUT_CLASSIFICATION	Alternatively, we could reduce the height of the Fig by the height of this one hidden compartment. But that would not be possible for the width - so we better return to minimal dimensions overall.
WITHOUT_CLASSIFICATION	show compartment
WITHOUT_CLASSIFICATION	This sets the lineWidth of all in the group:
WITHOUT_CLASSIFICATION	NameFig and StereotypeFig are handled by parent.
WITHOUT_CLASSIFICATION	forceRepaintShadow();
WITHOUT_CLASSIFICATION	Update the diagram, and other users of these settings:
WITHOUT_CLASSIFICATION	@jve:decl-index=0:visual-constraint="10,10"
WITHOUT_CLASSIFICATION	find the point offset on the line that gives a correct offset
WITHOUT_CLASSIFICATION	default angle is 90 deg.
WITHOUT_CLASSIFICATION	Boundary condition in GEF, make sure this is LESS THAN, not equal
WITHOUT_CLASSIFICATION	If we're using a fixed offset, just add it and return No collision detection is done in this case
WITHOUT_CLASSIFICATION	Check for a collision between our computed position and the edge
WITHOUT_CLASSIFICATION	increase offset by 2px at a time
WITHOUT_CLASSIFICATION	Get the points representing the poly line for our edge
WITHOUT_CLASSIFICATION	increase offset by increments until we're clear
WITHOUT_CLASSIFICATION	limit our retries in case its too hard to get free
WITHOUT_CLASSIFICATION	If we timed out, give it one more try on the other side
WITHOUT_CLASSIFICATION	count >= limit
WITHOUT_CLASSIFICATION	Force the line-width to 0, since the FigGroup that contains the stereotype may want to show a border, but we don't.
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Final point #" + count + " " + result + " offset of " + scaledOffset);
WITHOUT_CLASSIFICATION	segment size for computing slope
WITHOUT_CLASSIFICATION	Two points for line segment used to compute slope of path here NOTE that this is the average slope, not instantaneous, so it will give screwy results near bends in the path
WITHOUT_CLASSIFICATION	If our position was clamped, try to make it up on the other end
WITHOUT_CLASSIFICATION	Can't get the slope of a point. Just return an arbitrary point.
WITHOUT_CLASSIFICATION	Our angle theta is arctan(opposite/adjacent) Because y increases going down the screen, positive angles are clockwise rather than counterclockwise
WITHOUT_CLASSIFICATION	This shouldn't happen, because of our line segment size check
WITHOUT_CLASSIFICATION	"We're going vertical!" - Goose in "Top Gun"
WITHOUT_CLASSIFICATION	Arctan only returns -PI/2 to PI/2 Handle the other two quadrants and normalize to 0 - 2PI
WITHOUT_CLASSIFICATION	Quadrant II & III
WITHOUT_CLASSIFICATION	Quadrant IV
WITHOUT_CLASSIFICATION	Set the following for some backward compatibility with old algorithm
WITHOUT_CLASSIFICATION	Add displacement angle to slope
WITHOUT_CLASSIFICATION	Transform to 0 - 2PI range if we've gone all the way around circle
WITHOUT_CLASSIFICATION	Compute our deltas
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE,result.x + ", " + result.y + " theta = " + theta 180 / Math.PI + " dx = " + dx + " dy = " + dy);
WITHOUT_CLASSIFICATION	Load the standard colour, just add an alpha channel.
WITHOUT_CLASSIFICATION	Should never get here. If we do, return the inner point.
WITHOUT_CLASSIFICATION	Called by propertyChange
WITHOUT_CLASSIFICATION	this does a calcBounds()
WITHOUT_CLASSIFICATION	NOTE: This listener needs to always be active even if this tab isn't visible
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Diagram#getClassAndModelID()
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	The clone method that should clone the JGraph with it's contents and the toolbar with it's contents. Since both JGraph as the toolbar are coming from the GEF framework, cloning them will be hard work and should actually not be placed here but in a clone method of the JGraph and the Toolbar. @see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see java.awt.Component#setVisible(boolean)
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	The following is the default implementation for diagrams of which the owner is a namespace.
WITHOUT_CLASSIFICATION	source source position destination destination position number of objects to be copied
WITHOUT_CLASSIFICATION	"unnamed " +
WITHOUT_CLASSIFICATION	TODO: should update to size of diagram contents
WITHOUT_CLASSIFICATION	This should not be needed if the above is correct, but let's be sure:
WITHOUT_CLASSIFICATION	This should not be needed if the above is correct, but let's be sure:
WITHOUT_CLASSIFICATION	ActionPaste.getInstance().setEnabled( Globals.clipBoard != null && !Globals.clipBoard.isEmpty());
WITHOUT_CLASSIFICATION	next statement gives us a clone JGraph but not a cloned Toolbar
WITHOUT_CLASSIFICATION	@see org.tigris.gef.event.ModeChangeListener#modeChange(org.tigris.gef.event.ModeChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	remains selected
WITHOUT_CLASSIFICATION	the old selection
WITHOUT_CLASSIFICATION	Target might not have been initialised yet.
WITHOUT_CLASSIFICATION	add to selection
WITHOUT_CLASSIFICATION	Optimize for the normal case to minimize target changes
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	Assuming the target is some model element.
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the TabDiagram should only show an empty pane in that case
WITHOUT_CLASSIFICATION	Assuming the target is some model element.
WITHOUT_CLASSIFICATION	was ""
WITHOUT_CLASSIFICATION	Although we register for notification of diagrams being deleted, we currently depend on the TargetManager to assign a new target when this happens When we implement MDI and have our own list of open diagrams we can ressurect the use of this
WITHOUT_CLASSIFICATION	Any Swing work done here needs to be queued to the AWT thread since we don't know what thread our event will arrive on
WITHOUT_CLASSIFICATION	- RedrawManager.lock();
WITHOUT_CLASSIFICATION	- RedrawManager.lock();
WITHOUT_CLASSIFICATION	getLayerManager().getActiveLayer().paint(g);
WITHOUT_CLASSIFICATION	- RedrawManager.unlock(); - _redrawer.repairDamage();
WITHOUT_CLASSIFICATION	getLayerManager().getActiveLayer().paint(g);
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.swing.Action#getValue(java.lang.String)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	This makes the text not touch the text-border line:
WITHOUT_CLASSIFICATION	TODO: We don't currently have any settings that can change on a per-fig basis, so we can just use the project/diagram defaults settings = new DiagramSettings(renderSettings);
WITHOUT_CLASSIFICATION	Certain types of fixed text (e.g. a FigStereotype with a keyword) may not have an owner
WITHOUT_CLASSIFICATION	Now, we link it to the modelelements which are represented by FigNode
WITHOUT_CLASSIFICATION	update all tools' enabled status
WITHOUT_CLASSIFICATION	remember the fig for later
WITHOUT_CLASSIFICATION	Let's build the comment first, unlinked.
WITHOUT_CLASSIFICATION	Prevent e.g. AssociationClasses from being added trice:
WITHOUT_CLASSIFICATION	Select the new comment as target
WITHOUT_CLASSIFICATION	Create the Node Fig for the comment itself and draw it
WITHOUT_CLASSIFICATION	Create the comment links and draw them
WITHOUT_CLASSIFICATION	Place the comment Fig on the nicest spot on the diagram
WITHOUT_CLASSIFICATION	If we're drawing from an edge
WITHOUT_CLASSIFICATION	$NON-NLS-<n>$
WITHOUT_CLASSIFICATION	$NON-NLS-<n>$
WITHOUT_CLASSIFICATION	$NON-NLS-<n>$
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.undo.UndoableAction#isEnabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Calling connect() will add the edge to the GraphModel and any LayerPersectives on that GraphModel will get a edgeAdded event and will add an appropriate FigEdge (determined by the GraphEdgeRenderer).
WITHOUT_CLASSIFICATION	user made a false start
WITHOUT_CLASSIFICATION	So, the target is a MAssociationRole
WITHOUT_CLASSIFICATION	MVW This is not the correct way, but it allows connecting a CommentEdge to it! See e.g. ActionAddNote for the correct way. Testcase: 1. Select the message. 2. Click the Comment tool.
WITHOUT_CLASSIFICATION	end class ActionAddMessage
WITHOUT_CLASSIFICATION	let's use groups to construct the different text sections at the association
WITHOUT_CLASSIFICATION	No further listeners required in this case - the rest is handled by the notationProvider and sub-Figs.
WITHOUT_CLASSIFICATION	This only happens if model-change events arrive before we are completely constructed.
WITHOUT_CLASSIFICATION	x^2 + y^2 = r^2 (equation of a circle)
WITHOUT_CLASSIFICATION	max distance is set at 100 pixels, (rSquared = 100^2)
WITHOUT_CLASSIFICATION	east
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	end class FigAssociation
WITHOUT_CLASSIFICATION	Note that "multiplicity" is what is the notation is listening for in UML1.4 "uppervalue" are listened to in UML2. It is not currently why it is not required to register for "lowerValue" also.
WITHOUT_CLASSIFICATION	no need to listen to these property changes - the notationProvider takes care of this.
WITHOUT_CLASSIFICATION	no need to listen to these property changes - the notationProvider takes care of this.
WITHOUT_CLASSIFICATION	, new String[] {"name", "visibility", "stereotype"}
WITHOUT_CLASSIFICATION	, new String[] {"name", "visibility", "stereotype"}
WITHOUT_CLASSIFICATION	These are a list of arrow types.
WITHOUT_CLASSIFICATION	Added to the arrow type for navigable
WITHOUT_CLASSIFICATION	Finished editing. Parse the text that was edited. Only the role is editable, hence:
WITHOUT_CLASSIFICATION	figEdge.showHelp(role.getParsingHelp()); role.setText();
WITHOUT_CLASSIFICATION	Pass everything else to superclass
WITHOUT_CLASSIFICATION	end class ActionNavigability
WITHOUT_CLASSIFICATION	Nothing yet. Later maybe something like:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	putNotationArgument("showAssociationName", getSettings().isShowAssociationNames());
WITHOUT_CLASSIFICATION	The text the user has filled in the textfield is first checked to see if it's a valid multiplicity. If so then that is the multiplicity to be set. If not the input is rejected.
WITHOUT_CLASSIFICATION	Fonts and colors should get updated automatically for contained figs
WITHOUT_CLASSIFICATION	There is none...
WITHOUT_CLASSIFICATION	only initialized to prevent warning
WITHOUT_CLASSIFICATION	not supported for this target
WITHOUT_CLASSIFICATION	make space for the clarifier margin between text and border
WITHOUT_CLASSIFICATION	This next line presumes that the 1st fig with this owner is the previous port - and consequently nullifies the owner of this 1st fig.
WITHOUT_CLASSIFICATION	Add a listener for changes to any property
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	Show ...
WITHOUT_CLASSIFICATION	popupAddOffset should be equal to the number of items added here:
WITHOUT_CLASSIFICATION	TODO: The following is carried over from setOwner, but probably isn't needed renderingChanged(); It does the following (add as needed): updateNameText(); updateStereotypeText(); updateStereotypeIcon(); updateBounds(); damage();
WITHOUT_CLASSIFICATION	Be careful here since subclasses could have overridden this with the assumption that it wouldn't be called before the constructors finished
WITHOUT_CLASSIFICATION	TODO: MVW: I think this has to be: clone.nameFig = (FigSingleLineText) cloneFig; but have not the means to investigate, since this code is not yet used. Enable the menu-items for Copy/Paste to test... BTW: In some other FigNodeModelElement classes I see the same mistake.
WITHOUT_CLASSIFICATION	this rectangle marks the whole modelelement figure; everything is inside it:
WITHOUT_CLASSIFICATION	Clone this figure. After the base clone method has been called determine which child figs of the clone represent the name, stereotype and port. <p> TODO: enclosedFigs, encloser and eventSenders may also need to be cloned. @see java.lang.Object#clone() @return the cloned figure
WITHOUT_CLASSIFICATION	Idem here: clone.stereotypeFig = (FigStereotypesGroup) cloneFig;
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getEnclosingFig()
WITHOUT_CLASSIFICATION	update any text, colors, fonts, etc.
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	add stereotype view submenu
WITHOUT_CLASSIFICATION	The node's been placed on the diagram
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	Set the namespace of the enclosed model element to the namespace of the encloser.
WITHOUT_CLASSIFICATION	Find all ElementResidences between the class and the component:
WITHOUT_CLASSIFICATION	There was no ElementResidence yet, so let's create one:
WITHOUT_CLASSIFICATION	The node's been placed within some Fig
WITHOUT_CLASSIFICATION	There were 2 ElementResidences .. strange case.
WITHOUT_CLASSIFICATION	There is already a correct ElementResidence
WITHOUT_CLASSIFICATION	The owner is already linked to the component
WITHOUT_CLASSIFICATION	We are getting events we don't want. Filter them out.
WITHOUT_CLASSIFICATION	Only update the bounds if they change:
WITHOUT_CLASSIFICATION	We handle and consume editing events
WITHOUT_CLASSIFICATION	resize the FigNode to accommodate the new text
WITHOUT_CLASSIFICATION	If the source of the event is an UML object, e.g. the owner of this Fig (but not always only the owner is shown, e.g. for a class, also its attributes are shown), then the UML model has been changed.
WITHOUT_CLASSIFICATION	TODO: Should this not be an assert?
WITHOUT_CLASSIFICATION	west
WITHOUT_CLASSIFICATION	If the user double clicks on any part of this FigNode, pass it down to one of the internal Figs. This allows the user to initiate direct text editing. @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	south
WITHOUT_CLASSIFICATION	event handlers - MouseListener implementation
WITHOUT_CLASSIFICATION	Convert null to empty string and clear help message
WITHOUT_CLASSIFICATION	it is done
WITHOUT_CLASSIFICATION	this enables direct text editing for sub figs of a FigGroup object:
WITHOUT_CLASSIFICATION	either layer or owner was null
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	This test needed for a FigPool
WITHOUT_CLASSIFICATION	Get model listeners removed:
WITHOUT_CLASSIFICATION	is used as InstanceSpecification, see UMLDeploymentDiagram
WITHOUT_CLASSIFICATION	TODO: what about ObjectNode? return org.eclipse.uml2.uml.ObjectNode.class;
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TODO: State & Vertex are independent classes in UML 2.1
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	only initialized to prevent warning
WITHOUT_CLASSIFICATION	not supported for this target
WITHOUT_CLASSIFICATION	internal methods
WITHOUT_CLASSIFICATION	TODO assert modelElement != null???
WITHOUT_CLASSIFICATION	Default for name and stereotype is no border
WITHOUT_CLASSIFICATION	Override FigNode implementation to keep setOwner from getting called.
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	Use DiagramInterface to add classes to diagram
WITHOUT_CLASSIFICATION	ActionAddAllClassesFromModel
WITHOUT_CLASSIFICATION	we have an edge (the UML modelelement!)
WITHOUT_CLASSIFICATION	situation 1
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	Text group to contain name & stereotype
WITHOUT_CLASSIFICATION	computeRoute(); this recomputes the route if you reload the diagram.
WITHOUT_CLASSIFICATION	in case someone turns it on
WITHOUT_CLASSIFICATION	Do not allow fill to change. We should see through the text to the color of the main FIg background.
WITHOUT_CLASSIFICATION	Now force minimum dimensions for the text:
WITHOUT_CLASSIFICATION	Now add the areas around the text to return the complete size:
WITHOUT_CLASSIFICATION	calculate the source and dest figs for to self assoc
WITHOUT_CLASSIFICATION	reset the pointIndex
WITHOUT_CLASSIFICATION	check pre-conds
WITHOUT_CLASSIFICATION	Set-up:
WITHOUT_CLASSIFICATION	the fig that was under the mouse when it was released
WITHOUT_CLASSIFICATION	make a nice little target area:
WITHOUT_CLASSIFICATION	and find the Fig:
WITHOUT_CLASSIFICATION	last is the top fig.
WITHOUT_CLASSIFICATION	check intermediate post-condition.
WITHOUT_CLASSIFICATION	delegate the re-routing to graphmodels.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	set it to an invalid number by default to make sure it is set correctly.
WITHOUT_CLASSIFICATION	figPoly.setFillColor(col);
WITHOUT_CLASSIFICATION	figClone._polygon = (Polygon) _polygon.clone();
WITHOUT_CLASSIFICATION	north
WITHOUT_CLASSIFICATION	Do nothing until code is reviewed
WITHOUT_CLASSIFICATION	Do nothing until code is reviewed
WITHOUT_CLASSIFICATION	TODO: Do nothing until code is reviewed
WITHOUT_CLASSIFICATION	Message
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Crazy numbering scheme at work here. Here's how the handle numbers are laid out. Values 0-7 are defined by GEF and go left to right, top to bottom (ie not clockwise or counterclockwise). Values 10-14 zigzag North, South, West, East, Southwest. If you can correctly guess where 15 will go, you should buy a lottery ticket immediately. <pre> 10 0-------1-------2 | | 12 3 4 13 | | 14 5-------6-------7 11 </pre>
WITHOUT_CLASSIFICATION	ClassifierRole ClassifierRole
WITHOUT_CLASSIFICATION	Simulate a press of the mouse above the calculated point:
WITHOUT_CLASSIFICATION	Calculate the drop location, and place every n-th element at an offset proportional to n.
WITHOUT_CLASSIFICATION	super implementation found a hit
WITHOUT_CLASSIFICATION	Take canvas scrolling into account. The implementation below does place the element correctly when the canvas has been scrolled.
WITHOUT_CLASSIFICATION	Simulate a release of the mouse:
WITHOUT_CLASSIFICATION	Overridden in order to implement PathCompartmentContainer.
WITHOUT_CLASSIFICATION	do nothing by default
WITHOUT_CLASSIFICATION	Don't allow drag outside of bounds of diagram
WITHOUT_CLASSIFICATION	Overridden in order to implement PathCompartmentContainer.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	If the user has selected ModePlace either by a diagram tool or AddToDiagram then we don't want to show the clarifiers.
WITHOUT_CLASSIFICATION	If the user has selected ModePlace either by a diagram tool or AddToDiagram then we don't want to show the toolbelt items.
WITHOUT_CLASSIFICATION	Remember what handle was clicked for the case where the drag is released over empty space
WITHOUT_CLASSIFICATION	transparent cyan
WITHOUT_CLASSIFICATION	yellow
WITHOUT_CLASSIFICATION	translucent green
WITHOUT_CLASSIFICATION	super(ModeCreatePolyEdge.class, "edgeClass", Model.getMetaTypes().getAssociation(), name);
WITHOUT_CLASSIFICATION	set this to true on to enable debugging figs
WITHOUT_CLASSIFICATION	anchor position
WITHOUT_CLASSIFICATION	The EnumerationLiteral uses a dedicated notation that supports parsing "name1;name2;name3" and stereotypes. Also supports deleting a literal by erasing text.
WITHOUT_CLASSIFICATION	TODO: The UML does not seem to define this name. Or is it?
WITHOUT_CLASSIFICATION	The serialVersionUID (generated by Eclipse)
WITHOUT_CLASSIFICATION	UML spec for Generalizations doesn't call for name
WITHOUT_CLASSIFICATION	Name & stereotypes get updated by superclass
WITHOUT_CLASSIFICATION	Update the discriminator if it changed
WITHOUT_CLASSIFICATION	show it
WITHOUT_CLASSIFICATION	fig.calcBounds();
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	we only take the filename, not the whole system path
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	event handlers - MouseListener implementation
WITHOUT_CLASSIFICATION	The following does not seem to work - centered the Fig instead. getNameFig().setJustificationByName("center");
WITHOUT_CLASSIFICATION	get the widest of all textfigs calculate the total height
WITHOUT_CLASSIFICATION	Create the new FigAssociation edge to replace the node
WITHOUT_CLASSIFICATION	Center the NameFig, since center justification does not seem to work.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Do nothing, this rect will always be transparent
WITHOUT_CLASSIFICATION	Do nothing, this rect will always be transparent
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	update any text, colors, fonts, etc.
WITHOUT_CLASSIFICATION	update the relative sizes and positions of internel Figs
WITHOUT_CLASSIFICATION	popupAddOffset should be equal to the number of items added here:
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	We handle and consume editing events
WITHOUT_CLASSIFICATION	Detach any non-associationend edges (such as comment edges) already attached before this association node is removed. They'll later be re-attached to the new FigAssociation
WITHOUT_CLASSIFICATION	Now we can remove ourself (which will also remove the attached association ends edges)
WITHOUT_CLASSIFICATION	Add the non-associationend edges (such as comment edges) that were originally attached to this and attach them to the new FigAssociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	List of model element listeners we've registered.
WITHOUT_CLASSIFICATION	Added this part to load the extra menu content
WITHOUT_CLASSIFICATION	Owner related todo items:
WITHOUT_CLASSIFICATION	Fig related todo items:
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	Pass everything except editing events to superclass
WITHOUT_CLASSIFICATION	If the source of the event is an UML object, then the UML model has been changed.
WITHOUT_CLASSIFICATION	The following is a possible future improvement of the modelChanged() function. Michiel: Propose not to do this to keep architecture stable.
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	TODO: Update setting
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	We moused over an object just as it was deleted transient condition - doesn't require I18N
WITHOUT_CLASSIFICATION	TODO: We don't have any settings that can change per-fig currently so we can just use the default settings; settings = new DiagramSettings(renderSettings);
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	No need to update if model element went away
WITHOUT_CLASSIFICATION	Required for KeyListener interface, but not used
WITHOUT_CLASSIFICATION	Required for KeyListener interface, but not used
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	internal methods
WITHOUT_CLASSIFICATION	If the edge is from a circle to a circle (e.g. between use cases) we have our own implementation overriding GEF. Which attempts to keep the edges perpendicular if the edge is already close to perpendicular.
WITHOUT_CLASSIFICATION	newFC = _content;
WITHOUT_CLASSIFICATION	GEF sets a different Fig than the one that we had at construction time, so we need to set its color and width
WITHOUT_CLASSIFICATION	place the edge on the layer and update the diagram
WITHOUT_CLASSIFICATION	end computeRoute
WITHOUT_CLASSIFICATION	TODO: Does this help?
WITHOUT_CLASSIFICATION	If this is not a circle to circle edge we default to let GEF calculate edge route.
WITHOUT_CLASSIFICATION	? two iterations of refinement, maybe should be a for-loop
WITHOUT_CLASSIFICATION	Give up if the assocation ends don't have a type defined
WITHOUT_CLASSIFICATION	Get the two ends of any valid edge
WITHOUT_CLASSIFICATION	Only allow binary associations
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	TODO: assumes public
WITHOUT_CLASSIFICATION	(MElementImport)
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	This sets the lineWidth of all in the group:
WITHOUT_CLASSIFICATION	NameFig and StereotypeFig are handled by parent.
WITHOUT_CLASSIFICATION	If the line angle is less than 3 degrees then snap the line straight
WITHOUT_CLASSIFICATION	/ Methods that implement the MutableGraphModel interface /
WITHOUT_CLASSIFICATION	A dependency potentially has many clients and suppliers. We only consider the first of each (not clear that we should really accept the case where there is more than one of either)
WITHOUT_CLASSIFICATION	Add the node, check that it is an actor or use case and add it to the model namespace.
WITHOUT_CLASSIFICATION	Tell GEF its changed
WITHOUT_CLASSIFICATION	Add the element and place it in the namespace of the model
WITHOUT_CLASSIFICATION	Tell GEF
WITHOUT_CLASSIFICATION	Suggest that actors may not connect (see JavaDoc comment about this).
WITHOUT_CLASSIFICATION	Everything else is OK
WITHOUT_CLASSIFICATION	Remove a node
WITHOUT_CLASSIFICATION	Remove an edge
WITHOUT_CLASSIFICATION	Something was added - nothing for us to worry about
WITHOUT_CLASSIFICATION	Invoke the parent constructor first
WITHOUT_CLASSIFICATION	Invoke the parent refresh first
WITHOUT_CLASSIFICATION	end class StylePanelFigUseCase
WITHOUT_CLASSIFICATION	initialize any other Figs here
WITHOUT_CLASSIFICATION	Only the head should be filled (not the text)
WITHOUT_CLASSIFICATION	Accumulate a bounding box for all the Figs in the group.
WITHOUT_CLASSIFICATION	name updating
WITHOUT_CLASSIFICATION	Text fig to hold the <<include>> label
WITHOUT_CLASSIFICATION	The <<include>> label. It's not a true stereotype, so don't use the stereotype support
WITHOUT_CLASSIFICATION	TRY SOME ACTION ERRORS
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	If the element import is in the old owned, it means it must have been removed. Make sure the associated model element is removed.
WITHOUT_CLASSIFICATION	By default we don't show the attribute check box. Mark this object as a listener for the check box.
WITHOUT_CLASSIFICATION	These are the positions of child figs inside this fig They must be added in the constructor in this order. For now the name must not be last as this would force zero width lines (until GEF is fixed)
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order Put this rectangle behind the rest, so it goes first
WITHOUT_CLASSIFICATION	Make the line dashed
WITHOUT_CLASSIFICATION	Add an arrow with an open arrow head
WITHOUT_CLASSIFICATION	Make the edge go between nearest points
WITHOUT_CLASSIFICATION	Create a new version of the relevant fig
WITHOUT_CLASSIFICATION	The nodes at the two ends
WITHOUT_CLASSIFICATION	The figs for the two end nodes
WITHOUT_CLASSIFICATION	Link the new include relationship in to the ends
WITHOUT_CLASSIFICATION	Link the new dependency in to the ends
WITHOUT_CLASSIFICATION	Side effect: This creates the fig:
WITHOUT_CLASSIFICATION	A use case has an external separator. External means external to the compartment box. This horizontal line sticks out of the box, and touches the ellipse edge.
WITHOUT_CLASSIFICATION	by default, do not show extension points:
WITHOUT_CLASSIFICATION	Use arbitrary dimensions for now.
WITHOUT_CLASSIFICATION	Get the parent vector first
WITHOUT_CLASSIFICATION	Formula for a is described in the overall class description.
WITHOUT_CLASSIFICATION	For an ellipse, we can put the box in the middle:
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	Make the edge go between nearest points
WITHOUT_CLASSIFICATION	Add menu to add an extension point or note. Placed one before last, so the "Properties" entry is always last.
WITHOUT_CLASSIFICATION	Where there is more than one supplier or client, take the first element in each case. There really ought to be a check that there are some here for safety.
WITHOUT_CLASSIFICATION	Modifier menu. Placed one before last, so the "Properties" entry is always last.
WITHOUT_CLASSIFICATION	Work out the radii of the ellipse, a and b. The top right corner of the ellipse (Cartesian coordinates, centered on the origin) will be at (x,y)
WITHOUT_CLASSIFICATION	Result as integers, rounded up. We ensure that the radii are integers for convenience.
WITHOUT_CLASSIFICATION	Use the code from the FigCircle, not the one from Fig.
WITHOUT_CLASSIFICATION	Let's register for events from all modelelements that change the name or body text:
WITHOUT_CLASSIFICATION	Register for name changes, added extensionPoints and abstract makes the text italic. All Figs need to listen to "remove", too:
WITHOUT_CLASSIFICATION	register for extension points:
WITHOUT_CLASSIFICATION	Set bounds will be called from our superclass constructor before our constructor has run, so make sure this gets set up if needed.
WITHOUT_CLASSIFICATION	Set up FigText to hold the condition.
WITHOUT_CLASSIFICATION	Join all into a group
WITHOUT_CLASSIFICATION	UML spec for Extend doesn't call for name nor stereotype
WITHOUT_CLASSIFICATION	Make sure the line is dashed
WITHOUT_CLASSIFICATION	Set up the property panels for use case diagrams:
WITHOUT_CLASSIFICATION	Actions specific to the use case diagram toolbar
WITHOUT_CLASSIFICATION	The renderer should be a singleton
WITHOUT_CLASSIFICATION	Allow all Packages and Classifiers..
WITHOUT_CLASSIFICATION	TRY THE PREDECESSORS
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	TODO: This is using the default platform character encoding specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	The <<extend>> label. It's not a true stereotype, so don't use the stereotype support int y = getNameFig().getBounds().height;
WITHOUT_CLASSIFICATION	Place in the middle of the line and ensure the line is dashed. Add an arrow with an open arrow head. Remember that for an extends relationship, the arrow points to the base use case, but because of the way we draw it, that is still the destination end.
WITHOUT_CLASSIFICATION	Let the group recalculate its bounds and then tell GEF we've finished.
WITHOUT_CLASSIFICATION	We accept a Package, but not a Model or a Subsystem.
WITHOUT_CLASSIFICATION	If we do not exclude a Model here, then dropping the Model on a UseCase diagram causes a package to be drawn.
WITHOUT_CLASSIFICATION	empty list
WITHOUT_CLASSIFICATION	private constructor to enforce singleton
WITHOUT_CLASSIFICATION	some convenience methods
WITHOUT_CLASSIFICATION	read until the end section is found, discard generated content
WITHOUT_CLASSIFICATION	Constructor. <p> TODO: Correct? @param nodes The UML elements, typically classifiers, to generate. @param inModel <code>true</code> if the path is in the model.
WITHOUT_CLASSIFICATION	Class Table
WITHOUT_CLASSIFICATION	Select Buttons
WITHOUT_CLASSIFICATION	Output Directory
WITHOUT_CLASSIFICATION	Compile Checkbox
WITHOUT_CLASSIFICATION	TODO: the last argument (recursive flag) should be a selectable option
WITHOUT_CLASSIFICATION	skip backup files. This is actually a workaround for the cpp generator, which always creates backup files (it's a bug).
WITHOUT_CLASSIFICATION	TODO: Should be improved so that it's recognized whether there is something selected that can actually be generated Nothing selected in the diagram
WITHOUT_CLASSIFICATION	TODO: This is using the default platform character encoding. Specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	TODO: Get saved default directory outputDirectoryComboBox.getModel().setSelectedItem(savedDir);
WITHOUT_CLASSIFICATION	TODO: Get default output directory from user settings Project p = ProjectManager.getManager().getCurrentProject(); p.getProjectSettings().setGenerationOutputDir(path);
WITHOUT_CLASSIFICATION	Generate Button --------------------------------------
WITHOUT_CLASSIFICATION	remove trailing /
WITHOUT_CLASSIFICATION	classify nodes by base path
WITHOUT_CLASSIFICATION	else ignore
WITHOUT_CLASSIFICATION	generate the files
WITHOUT_CLASSIFICATION	Doesn't really matter what set we use.
WITHOUT_CLASSIFICATION	Show Filechooser to select OutputDirectory
WITHOUT_CLASSIFICATION	end class ClassGenerationDialog
WITHOUT_CLASSIFICATION	end class TableModelClassChecks
WITHOUT_CLASSIFICATION	Try Changing the direction of m7
WITHOUT_CLASSIFICATION	private constructor to enforce singleton
WITHOUT_CLASSIFICATION	The diagram already exists in this project. Select it as the current target.
WITHOUT_CLASSIFICATION	TableModel implementation
WITHOUT_CLASSIFICATION	ArgoEventPump.fireEvent( new ArgoImporterEvent(ArgoEventTypes.IMPORTER_ADDED, gen));
WITHOUT_CLASSIFICATION	Check if this diagram already exists in the project
WITHOUT_CLASSIFICATION	Otherwise create a new classdiagram for the package.
WITHOUT_CLASSIFICATION	if the classifier is not in the current diagram, add it:
WITHOUT_CLASSIFICATION	The following calls are ORDER DEPENDENT. Not sure why, but the layer add must come before the model add or we'll end up with duplicate figures in the diagram. - tfm
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	the class is in the diagram so we are on a second pass, find the fig for this class can update its visible state.
WITHOUT_CLASSIFICATION	add edges for a 2-pass r.e. process we might have already added the class but not its edges
WITHOUT_CLASSIFICATION	"Java" is the default module for historical reasons, but it's not required to be there
WITHOUT_CLASSIFICATION	the previous line helps, but we better check again:
WITHOUT_CLASSIFICATION	not a SuffixFilter selected, so we take all
WITHOUT_CLASSIFICATION	filter out all unchanged files
WITHOUT_CLASSIFICATION	set the lastModified value
WITHOUT_CLASSIFICATION	return Arrays.copyOf(selectedFiles, selectedFiles.length);
WITHOUT_CLASSIFICATION	iss.setValue(countFiles + (i + 1) / 10);
WITHOUT_CLASSIFICATION	Roughly equivalent to and derived from old Import.doFile()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.JFileChooser#approveSelection()
WITHOUT_CLASSIFICATION	@see javax.swing.JFileChooser#cancelSelection()
WITHOUT_CLASSIFICATION	New style importers don't create diagrams, so we'll do it based on the list of newElements that they created
WITHOUT_CLASSIFICATION	Do layout even if problems occurred during import
WITHOUT_CLASSIFICATION	Add messages from caught exceptions
WITHOUT_CLASSIFICATION	Select the correct diagram (implicitly creates it)
WITHOUT_CLASSIFICATION	Add the element to the diagram
WITHOUT_CLASSIFICATION	Print an exception trace to a string buffer
WITHOUT_CLASSIFICATION	TODO: Get the list of extended settings from the current language importer and add those too
WITHOUT_CLASSIFICATION	level 0 import detail
WITHOUT_CLASSIFICATION	level 1 import detail
WITHOUT_CLASSIFICATION	level 2 import detail
WITHOUT_CLASSIFICATION	build the configPanel:
WITHOUT_CLASSIFICATION	de-selects the fig minimising & layout if we are not creating diagrams
WITHOUT_CLASSIFICATION	select the level of import 0 - classifiers only 1 - classifiers plus feature specifications 2 - full import, feature detail
WITHOUT_CLASSIFICATION	cp1252 is often the default, but windows-1252 is the name listed by Charset.availableCharsets
WITHOUT_CLASSIFICATION	Get the extension panel for the configuration settings.
WITHOUT_CLASSIFICATION	ExplorerEventAdaptor.getInstance().structureChanged(); ProjectBrowser.getInstance().getStatusBar().showProgress(0);
WITHOUT_CLASSIFICATION	Create chooser for objects we are to import. Old style modules get to provide their own (although I don't believe any of them do), while new style modules get the a chooser provided by us (which matches what the abstract class FileImportSupport used to provide).
WITHOUT_CLASSIFICATION	this is because of the (senseless?) "All files" FileFilter
WITHOUT_CLASSIFICATION	Parsing file x of z.
WITHOUT_CLASSIFICATION	progress bar
WITHOUT_CLASSIFICATION	For some reason, this alleged directory is a single file This could be that there is some confusion or just the normal, that a single file was selected and is supposed to be imported.
WITHOUT_CLASSIFICATION	Get the contents of the directory
WITHOUT_CLASSIFICATION	The following test can cause trouble with links, because links are accepted as directories, even if they link files. Links could also result in infinite loops. For this reason we don't do this traversing recursively.
WITHOUT_CLASSIFICATION	If this file is a directory
WITHOUT_CLASSIFICATION	TODO: Add filename ?
WITHOUT_CLASSIFICATION	can't remove the last file
WITHOUT_CLASSIFICATION	can't remove from existing one so create new one.
WITHOUT_CLASSIFICATION	Error/warning messageArea
WITHOUT_CLASSIFICATION	gbc.gridheight = 10;
WITHOUT_CLASSIFICATION	cancel/close button
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	the introducing label
WITHOUT_CLASSIFICATION	User closing the progress window is interpreted as cancel request
WITHOUT_CLASSIFICATION	panel for controls
WITHOUT_CLASSIFICATION	This method can be called only if there's a valid selection so go ahead and remove whatever's selected.
WITHOUT_CLASSIFICATION	nothings left, disable firing.
WITHOUT_CLASSIFICATION	Select an index.
WITHOUT_CLASSIFICATION	removed item in last position
WITHOUT_CLASSIFICATION	Just quit
WITHOUT_CLASSIFICATION	the text box containing the problem messages
WITHOUT_CLASSIFICATION	continue and abort buttons
WITHOUT_CLASSIFICATION	listeners
WITHOUT_CLASSIFICATION	stores the action command into the UMLPlainTextDocument class which is also used for setProperty and getProperty
WITHOUT_CLASSIFICATION	TODO: this seems to be called at startup only so no check so far
WITHOUT_CLASSIFICATION	Add an invisible button to be used when everything is off
WITHOUT_CLASSIFICATION	| removed to workaround problems with autosplit OCLEditor.OPTIONMASK_AUTOSPLIT
WITHOUT_CLASSIFICATION	TabModelTarget interface methods
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	There is no need to test if classes is empty because the shouldBeEnabled mechanism blanks out the possibility to choose this alternative in this case.
WITHOUT_CLASSIFICATION	List classes = getCandidates(); return classes.size() > 0;
WITHOUT_CLASSIFICATION	Our first button is invisible. Selecting it deselects all visible buttons.
WITHOUT_CLASSIFICATION	Set editor's model
WITHOUT_CLASSIFICATION	check ocl parsing constraints
WITHOUT_CLASSIFICATION	do not create a constraint:
WITHOUT_CLASSIFICATION	Parse and check specified constraint.
WITHOUT_CLASSIFICATION	Ignored: Highly unlikely, and what would we do anyway? log it
WITHOUT_CLASSIFICATION	Split constraint body, if user wants us to
WITHOUT_CLASSIFICATION	the constraint _must_ be owned by a namespace
WITHOUT_CLASSIFICATION	the constraint _must_ be owned by a namespace
WITHOUT_CLASSIFICATION	Store constraint body
WITHOUT_CLASSIFICATION	New constraint, first time setData is called
WITHOUT_CLASSIFICATION	a runtime exception that occurs when some internal test fails
WITHOUT_CLASSIFICATION	Check name for consistency with spec
WITHOUT_CLASSIFICATION	Set name
WITHOUT_CLASSIFICATION	Also set name in constraint body -- Added 03/14/2001
WITHOUT_CLASSIFICATION	replace name
WITHOUT_CLASSIFICATION	OK, so that didn't work out... Just ignore any problems and don't set the name in the constraint body better had log it.
WITHOUT_CLASSIFICATION	TODO: Why is this ignored? - tfm - 20070110
WITHOUT_CLASSIFICATION	TRY PREDECESSORS
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	cmd.setObjects(run.getParams().get(0));
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	We have no model event listeners, so no need to do anything
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	TODO: I18N Don't use the empty string for this or it won't show in the list
WITHOUT_CLASSIFICATION	It would be better if we didn't need the container to get the target. This constructor can have zero parameters as soon as we improve targetChanged.
WITHOUT_CLASSIFICATION	TODO: Here too?
WITHOUT_CLASSIFICATION	TODO: Here too?
WITHOUT_CLASSIFICATION	This should not be necessary, but let's be sure:
WITHOUT_CLASSIFICATION	end of interval
WITHOUT_CLASSIFICATION	start of interval
WITHOUT_CLASSIFICATION	Remove old listeners:
WITHOUT_CLASSIFICATION	in middle of interval
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Add new listeners:
WITHOUT_CLASSIFICATION	MVW: This can never happen, isn't it?
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	TODO: For large lists, this is doing a linear search of literally thousands of elements
WITHOUT_CLASSIFICATION	Don't try to test this if we're removing the element
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	Object[] args = { newValue };
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	if one or the other is null or they are not equal
WITHOUT_CLASSIFICATION	Do not set buildingModel = false here, otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	catch callers attempting to use one without other
WITHOUT_CLASSIFICATION	as long as they aren't both null (or a really rare identical string pointer)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TODO: this seems to be called at startup only so no check so far
WITHOUT_CLASSIFICATION	may only occur as child of the model or in a package
WITHOUT_CLASSIFICATION	to rupdate the diagram set the stimulus name again TODO: Explain that this really works also in the MDR case. Linus is a sceptic.
WITHOUT_CLASSIFICATION	if event source is unknown or the event source is the container's target then update the field
WITHOUT_CLASSIFICATION	check the possibility that this is a promiscuous event
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the UML spec, but we rely on the caller to enforce that if desired.
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the uml spec
WITHOUT_CLASSIFICATION	For a deployment diagram, not just any namespace will do - we need a package.
WITHOUT_CLASSIFICATION	ns is a namespace, but not a package
WITHOUT_CLASSIFICATION	ommit root package name; it's the model's root
WITHOUT_CLASSIFICATION	there is a selection
WITHOUT_CLASSIFICATION	end class ActionCopy
WITHOUT_CLASSIFICATION	Add a predicate for ArgoUML's default capabilities:
WITHOUT_CLASSIFICATION	Parser.ParseAndUpdate(modelObject, s);
WITHOUT_CLASSIFICATION	remove from the model
WITHOUT_CLASSIFICATION	It is a UML element that is not a ModelElement
WITHOUT_CLASSIFICATION	lets see if this diagram has some figs on it
WITHOUT_CLASSIFICATION	no content of diagram
WITHOUT_CLASSIFICATION	we can delete figs like figrects now too
WITHOUT_CLASSIFICATION	TODO: If a namespace with sub-classdiagrams is deleted, then { confirmStr += Translator.localize( "optionpane.remove-from-model-will-remove-subdiagram"); doAsk = true; }
WITHOUT_CLASSIFICATION	we cannot delete the last diagram
WITHOUT_CLASSIFICATION	we cannot delete the model itself
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#remove(int, int)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	ArgoDiagram activeDiagram = DiagramUtils.getActiveDiagram(); return (activeDiagram instanceof UMLClassDiagram);
WITHOUT_CLASSIFICATION	TODO: Probably really want to cancel editing ((FigTextEditor) focusOwner).cancelEditing();
WITHOUT_CLASSIFICATION	usage of other sureRemove method is legacy. They should be integrated.
WITHOUT_CLASSIFICATION	the diagram contains figs so lets ask the user if he/she is sure
WITHOUT_CLASSIFICATION	TODO: This catch block needs to be narrower and do something with the caught exception - tfm 20071120 Ignore
WITHOUT_CLASSIFICATION	TODO: All of the following can be broken if we have multiple targets selected
WITHOUT_CLASSIFICATION	OK Button ------------------------------------------
WITHOUT_CLASSIFICATION	Delete Button
WITHOUT_CLASSIFICATION	confirm with the user that he wants to delete, presenting the list of settings to delete
WITHOUT_CLASSIFICATION	procede with the deletion in the model
WITHOUT_CLASSIFICATION	disable the button since no row will be selected now
WITHOUT_CLASSIFICATION	end class SourcePathDialog
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread-safe
WITHOUT_CLASSIFICATION	The user cancelled!
WITHOUT_CLASSIFICATION	Custom button text:
WITHOUT_CLASSIFICATION	0
WITHOUT_CLASSIFICATION	1
WITHOUT_CLASSIFICATION	2
WITHOUT_CLASSIFICATION	3
WITHOUT_CLASSIFICATION	TRY SOME PREDECESSOR ERRORS
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#remove(int, int)
WITHOUT_CLASSIFICATION	Try adding the extension from the chosen filter.
WITHOUT_CLASSIFICATION	adding project files icon
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	do not use a custom Icon the titles of buttons default button title
WITHOUT_CLASSIFICATION	NOTE: This may be called from a different thread, so we need to be careful of the threading restrictions imposed by AbstractDocument for mutators to be sure we don't deadlock.
WITHOUT_CLASSIFICATION	end class ActionOpenProject
WITHOUT_CLASSIFICATION	TODO: see if the new target has a TV that we can proxy
WITHOUT_CLASSIFICATION	Try adding the default extension.
WITHOUT_CLASSIFICATION	LOG.debug("is a Base or Multiplicity");
WITHOUT_CLASSIFICATION	end class ActionSaveProjectAs
WITHOUT_CLASSIFICATION	only need to this from super()
WITHOUT_CLASSIFICATION	--------------------------------------------------------
WITHOUT_CLASSIFICATION	----- setup similar to the super() implementation -----
WITHOUT_CLASSIFICATION	This action performs the layout and triggers a redraw of the editor pane. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	/ Proxy methods for real UMLModelElementTaggedValue /
WITHOUT_CLASSIFICATION	load of the new project just reuse of the ActionOpen object
WITHOUT_CLASSIFICATION	Rearrange the diagram layout
WITHOUT_CLASSIFICATION	Leave logging commented out by default for efficiency LOG.debug("determine rendering for: " + value); LOG.debug("show icon: " + showIcon);
WITHOUT_CLASSIFICATION	targets ought to be UML objects or diagrams
WITHOUT_CLASSIFICATION	TODO: We shouldn't need this as well as the above.
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	end class TabProps
WITHOUT_CLASSIFICATION	If our map has any entries for this type, it's a connection type
WITHOUT_CLASSIFICATION	Get the list of valid model item pairs for the given connection type
WITHOUT_CLASSIFICATION	See if there's a pair in this list that match the given model elements
WITHOUT_CLASSIFICATION	@see TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	put everything together
WITHOUT_CLASSIFICATION	no title looks better
WITHOUT_CLASSIFICATION	now remove the ones already applied.
WITHOUT_CLASSIFICATION	make lists
WITHOUT_CLASSIFICATION	make buttons
WITHOUT_CLASSIFICATION	ignored this event
WITHOUT_CLASSIFICATION	make buttons layout
WITHOUT_CLASSIFICATION	make listeners
WITHOUT_CLASSIFICATION	Remove the element from Available List
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#setItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getEditorComponent()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Implements the source path controller. NOTE: If requested in the future this could be returned from the language modules. TODO: Update this to use the UML 1.4 TagDefinition mechanism instead of UML 1.3 String type tag types. The TagDefinition can be made more specific so that it just applies to Components with a <<sourceModule>> stereotype or something similar. - tfm @author euluis @since 0.17.1
WITHOUT_CLASSIFICATION	end of SourcePathControllerImpl class definition
WITHOUT_CLASSIFICATION	sb.append(Model.getFacade().getName(c));
WITHOUT_CLASSIFICATION	sb.append((String) Model.getFacade().getBody(c));
WITHOUT_CLASSIFICATION	MModelElement
WITHOUT_CLASSIFICATION	next statement is necessary to update the textfield if the selection is equal to what was allready selected
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#selectAll()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getItem()
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	make new column with LabelledLayout
WITHOUT_CLASSIFICATION	Comment.name text field - editing disabled
WITHOUT_CLASSIFICATION	Comment.body text field - editing disabled
WITHOUT_CLASSIFICATION	Since there are no buttons on this panel, we have to set the size of the buttonpanel, otherwise the title would not be aligned right.
WITHOUT_CLASSIFICATION	Only change the background colour if it is supplied by the LAF. Otherwise leave look and feel to handle this itself.
WITHOUT_CLASSIFICATION	In this case, the bounds are determined by the FigEdge
WITHOUT_CLASSIFICATION	In this case, the bounds are determined by the FigEdge
WITHOUT_CLASSIFICATION	In this case, the bounds (of the box) are determined by the FigClassAssociationClass
WITHOUT_CLASSIFICATION	In this case, the bounds (of the box) are determined by the FigClassAssociationClass
WITHOUT_CLASSIFICATION	A newly created AssociationClass may not have all its parts created by the time we are called
WITHOUT_CLASSIFICATION	A newly created AssociationClass may not have all its parts created by the time we are called
WITHOUT_CLASSIFICATION	TODO: Defer most of this work if the panel isn't visible - tfm
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the TabProps should only show an empty pane in that case
WITHOUT_CLASSIFICATION	chooser.setSelectedFile(new File(fileName));
WITHOUT_CLASSIFICATION	So, let's do it the hard way:
WITHOUT_CLASSIFICATION	TODO: The following can be used when we drop Java 5 support or when an ImageIO GIF writer plugin is bundled cmd = new SaveGIFAction2(Translator.localize("action.save-gif"));
WITHOUT_CLASSIFICATION	If the diagram is empty, GEF won't write anything, leaving us with an empty (and invalid) file. Handle this case ourselves to prevent this from happening.
WITHOUT_CLASSIFICATION	Anything else is handled the normal way
WITHOUT_CLASSIFICATION	Create an image which will do deferred rendering of the GEF diagram on demand as data is pulled from it
WITHOUT_CLASSIFICATION	Action to save a diagram as a GIF image in a supplied OutputStream. TODO: This requires Java 6 in its current state, so don't use. @author Tom Morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	NOTE: GEF's GIF writer uses Jeff Poskanzer's GIF encoder, but that saves a copy of the entire image in an internal buffer before starting work, defeating the whole purpose of our incremental rendering.
WITHOUT_CLASSIFICATION	Java SE 6 has a native GIF writer, but it's not in Java 5. One is available in the JAI-ImageIO library, but we don't currently bundle that and at 6+ MB it seems like a heavyweight solution, but I don't have time to produce a stripped down version right now - tfm https:jai-imageio.dev.java.net/
WITHOUT_CLASSIFICATION	LayerPerspective layer = DiagramUtils.getActiveDiagram().getLayer();
WITHOUT_CLASSIFICATION	Anything else is handled the normal way
WITHOUT_CLASSIFICATION	Create an image which will do deferred rendering of the GEF diagram on demand as data is pulled from it
WITHOUT_CLASSIFICATION	Action to save a diagram as a GIF image in a supplied OutputStream. TODO: This requires Java 6 in its current state, so don't use. @author Tom Morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	we actually are computing max x & max y, not width & height
WITHOUT_CLASSIFICATION	Convert max x/y to width/height
WITHOUT_CLASSIFICATION	Get a DOMImplementation
WITHOUT_CLASSIFICATION	Create an instance of org.w3c.dom.Document
WITHOUT_CLASSIFICATION	Create an instance of the SVG Generator
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	LayerPerspective layer = DiagramUtils.getActiveDiagram().getLayer();
WITHOUT_CLASSIFICATION	we actually are computing max x & max y, not width & height
WITHOUT_CLASSIFICATION	Convert max x/y to width/height
WITHOUT_CLASSIFICATION	Get a DOMImplementation
WITHOUT_CLASSIFICATION	Create an instance of org.w3c.dom.Document
WITHOUT_CLASSIFICATION	Create an instance of the SVG Generator
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	"org.argouml.cognitive.critics",
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	handle multivalued tagged value
WITHOUT_CLASSIFICATION	handle multivalued tagged value
WITHOUT_CLASSIFICATION	Target has been deleted
WITHOUT_CLASSIFICATION	If the row is past the end of our current collection, return an empty string so they can add a new value
WITHOUT_CLASSIFICATION	tagValue = true;
WITHOUT_CLASSIFICATION	for debugging
WITHOUT_CLASSIFICATION	Return the ith element from a Collection. @param collection collection to get element from @param index index of the element to be returned @return the object
WITHOUT_CLASSIFICATION	We really shouldn't add it until after it is set up, but we need it to have an owner for the following method calls
WITHOUT_CLASSIFICATION	Since we aren't sure of ordering, fire event for whole table
WITHOUT_CLASSIFICATION	no way, we have to give up
WITHOUT_CLASSIFICATION	Do nothing during the deprecation period, then it can be removed.
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	get the first editable extent (which is OK unless there is more than one editable extent)
WITHOUT_CLASSIFICATION	This can throw an exception if the target has been deleted. We don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. Instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	end class ActionImportFromSources
WITHOUT_CLASSIFICATION	Don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	this is never downlighted...
WITHOUT_CLASSIFICATION	Only specified format are allowed.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentMoved(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentResized(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	Set up the target and its model element variant.
WITHOUT_CLASSIFICATION	Set the tooltip of the arrow to open combined tools:
WITHOUT_CLASSIFICATION	If the target has changed notify the third party listener if it exists and dispatch a new element event listener to ourself. Otherwise dispatch a target reasserted to ourself.
WITHOUT_CLASSIFICATION	Set the minimum and preferred equal, so that the size is fixed for the labelledlayout.
WITHOUT_CLASSIFICATION	This will add a new ModelElement event listener after update is complete
WITHOUT_CLASSIFICATION	We presume that the container equals this PropPanel.
WITHOUT_CLASSIFICATION	Refresh the target for all our children which weren't getting while not visible
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	This works - we do get an event - and now refresh the UI:
WITHOUT_CLASSIFICATION	to manage the case there are no label/component pairs but just one component
WITHOUT_CLASSIFICATION	If the component is a JLabel which has another component assigned then position/size the label and calculate the size of the registered component
WITHOUT_CLASSIFICATION	Assumes the next child is the labelled component
WITHOUT_CLASSIFICATION	Make sure the component width isn't any greater than its maximum allowed width
WITHOUT_CLASSIFICATION	If the child component is resizable then we don't know it's actual size yet. It will be calculated later as a proportion of the available left over space. For now this is flagged as zero.
WITHOUT_CLASSIFICATION	If a preferred height is not given or is the same as the minimum height then fix the height of this row.
WITHOUT_CLASSIFICATION	Project p = ProjectManager.getManager().getCurrentProject(); Collection elems = ModelManagementHelper.getHelper() .getAllModelElementsOfKind(MClassifier.class);
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	Allow listening to other elements: removeOtherModelEventListeners(listTarget);
WITHOUT_CLASSIFICATION	setDoubleBuffered(true);
WITHOUT_CLASSIFICATION	TRY SOME MORE COMPLEX MOVING
WITHOUT_CLASSIFICATION	Implements backspace functionality
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	there is a selection
WITHOUT_CLASSIFICATION	This can throw an exception if the target has been deleted. We don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. Instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	Don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	end class ActionCut
WITHOUT_CLASSIFICATION	Allow listening to other elements: addOtherModelEventListeners(listTarget);
WITHOUT_CLASSIFICATION	if there is a selection on the clipboard
WITHOUT_CLASSIFICATION	get localised strings once only
WITHOUT_CLASSIFICATION	setting the icon
WITHOUT_CLASSIFICATION	setting the tooltip to type and name
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	Stop updating model when we're not visible
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	in UML2, a td is a property of a stereotype in a profile
WITHOUT_CLASSIFICATION	Only update our model if we're visible
WITHOUT_CLASSIFICATION	Most likely cause of this is that someone deleted our target with the event pump turned off so we didn't get notification. Nothing we can do about it now and we are changing targets anyway, so just log it.
WITHOUT_CLASSIFICATION	This target is a statemachine, for which no diagram exists yet, so, let's use it.
WITHOUT_CLASSIFICATION	end class TabTaggedValues
WITHOUT_CLASSIFICATION	setEnabled((Globals.clipBoard != null && !Globals.clipBoard.isEmpty()) || !isSystemClipBoardEmpty());
WITHOUT_CLASSIFICATION	end class ActionPaste
WITHOUT_CLASSIFICATION	The target is a valid context.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Let's just build a Statemachine, and put it in a suitable namespace.
WITHOUT_CLASSIFICATION	Follow well-formedness rule for a Class [2]. Determine the owning namespace for the statemachine:
WITHOUT_CLASSIFICATION	upperPanel.setBorder(BorderFactory.createEtchedBorder());
WITHOUT_CLASSIFICATION	buttonBox.add(Box.createRigidArea(new Dimension(0, 20)));
WITHOUT_CLASSIFICATION	String title = getUI().getDialogTitle(this);
WITHOUT_CLASSIFICATION	Test if the given namespace is a valid namespace to add the diagram to. TODO: This method was created to facilitate the merge of this class with ActionAddDiagram. @param ns the namespace to check @return Returns <code>true</code> if valid.
WITHOUT_CLASSIFICATION	TODO: Since there may be multiple top level elements in a project, this should be using the default Namespace (currently undefined) or something similar
WITHOUT_CLASSIFICATION	button action:
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Make sure it's parseable as an number
WITHOUT_CLASSIFICATION	ignored - we just skipped inserting it in our document
WITHOUT_CLASSIFICATION	select.setText(Translator.localize("action.select"));
WITHOUT_CLASSIFICATION	select.add(ActionAddEventAsDeferrableEvent.SINGLETON);
WITHOUT_CLASSIFICATION	newMenu.setText(Translator.localize("action.new"));
WITHOUT_CLASSIFICATION	(MExtend)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	repair action for possible NP after load
WITHOUT_CLASSIFICATION	(MClassifier)
WITHOUT_CLASSIFICATION	TRY SOME MORE ERRORS
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	(MModelElement)
WITHOUT_CLASSIFICATION	to be able to remove dep's later
WITHOUT_CLASSIFICATION	to be able to remove dependencies later
WITHOUT_CLASSIFICATION	ADDONLY_COMMAND determines a changeability kind. TODO: Removed from UML 2.x. Phase out of UI - tfm - 20070529
WITHOUT_CLASSIFICATION	TODO: Removed from UML 2.x - phase out usage - tfm 20070530
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	because we're listening for stereotypes being added and removed but we're really interested in their owned tag definitions, the default implementation won't work for us
WITHOUT_CLASSIFICATION	end class ActionAddAttribute
WITHOUT_CLASSIFICATION	Ask to be notified of any changes to TagDefinitions so that we can track new ones, name changes, etc
WITHOUT_CLASSIFICATION	since UML2 it's easier: TDs only via stereotypes
WITHOUT_CLASSIFICATION	Just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	A stereotype got applied or removed Just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	@see Namespace#pushNamespaceElement(NamespaceElement)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	All strings collate before all UML elements
WITHOUT_CLASSIFICATION	All strings collate before all UML elements
WITHOUT_CLASSIFICATION	Compare path of two elements in reverse order (inner to outer) using a primary strength text collator. This will collate e, E, �, � together, but not eliminate non-identical strings which collate in the same place. @return equivalent of list1.compareTo(list2)
WITHOUT_CLASSIFICATION	and then by their enclosing path to fully distinguish them
WITHOUT_CLASSIFICATION	Elements are collated first by name hoping for a quick solution
WITHOUT_CLASSIFICATION	Keep track of first non-equal comparison to use in case the case-insensitive comparisons all end up equal
WITHOUT_CLASSIFICATION	Add the action to the component
WITHOUT_CLASSIFICATION	It's illegal in UML to have multiple elements in a namespace with the same name, but if it happens, keep them distinct so the user has a chance of catching the error. Pick an arbitrary, but stable, collating order. We don't call them equal because otherwise one will get eliminated from the TreeSet where this comparator is used.
WITHOUT_CLASSIFICATION	If the strings differed only in non-primary characteristics at some point (case, accent, etc) pick an arbitrary, but stable, collating order.
WITHOUT_CLASSIFICATION	{transient=false, volatile=false}
WITHOUT_CLASSIFICATION	Argo customization
WITHOUT_CLASSIFICATION	prohibit instantiation
WITHOUT_CLASSIFICATION	KeyEvent.isActionKey() method
WITHOUT_CLASSIFICATION	Apparently this object had no getItemUID
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Apparently this object had no getUUID
WITHOUT_CLASSIFICATION	Apparently it had a getItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently it had a getItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently it had a getItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently this object had no setItemUID
WITHOUT_CLASSIFICATION	Apparently it had a setItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently it had a setItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	class preloading, so packages are there...
WITHOUT_CLASSIFICATION	...getPackage() can return null's, so we have to cater for this:
WITHOUT_CLASSIFICATION	make this thread interruptible, if called from SwingWorker
WITHOUT_CLASSIFICATION	Switch the value back off, so that we will get notified again next time.
WITHOUT_CLASSIFICATION	Ignore any nested exceptions. We don't want infinite loop.
WITHOUT_CLASSIFICATION	Didn't work.
WITHOUT_CLASSIFICATION	Create a proxy object around this handler that can be reflectively added as an Apple ApplicationListener
WITHOUT_CLASSIFICATION	Likely a NoSuchMethodException or an IllegalAccessException loading/invoking eawt.Application methods
WITHOUT_CLASSIFICATION	All of the ApplicationListener methods are void; return null regardless of what happens
WITHOUT_CLASSIFICATION	If the target method returns a boolean, use that as a hint
WITHOUT_CLASSIFICATION	For eclipse setup
WITHOUT_CLASSIFICATION	For ant setup
WITHOUT_CLASSIFICATION	When running from maven
WITHOUT_CLASSIFICATION	If we're setting a handler, enable the About menu item by calling com.apple.eawt.Application reflectively
WITHOUT_CLASSIFICATION	If we're setting a handler, enable the Preferences menu item by calling com.apple.eawt.Application reflectively
WITHOUT_CLASSIFICATION	Override OSXAdapter.callTarget to send information on the file to be opened
WITHOUT_CLASSIFICATION	Ignore if the directory does not exist. This error will throw when running from the ant setup.
WITHOUT_CLASSIFICATION	Ignore if the directory does not exist. This error will throw when running from the Eclipse setup.
WITHOUT_CLASSIFICATION	Ignore if the directory does not exist. This error will throw when running from the Eclipse setup.
WITHOUT_CLASSIFICATION	"org.argouml.notation.providers",fails because sub-packages fail (?) "org.argouml.notation.providers.java", "org.argouml.notation.providers.uml", "org.argouml.notation",fails because sub-packages fail (?) "org.argouml.notation.ui",
WITHOUT_CLASSIFICATION	There was a comment saying that the below has no cycles, but Classycle thinks there's a cycle here too, so I believe there really is one - tfm 20070702 "org.argouml.uml.cognitive.critics",
WITHOUT_CLASSIFICATION	TODO:{"org.argouml.ui", "org.argouml.cognitive.ui"},fails due to subpackages TODO:{"org.argouml.cognitive", "org.argouml.cognitive.critics"},
WITHOUT_CLASSIFICATION	{"org.argouml.kernel", "org.argouml.uml.diagram.ui"},why does this fail?
WITHOUT_CLASSIFICATION	do nothing by design
WITHOUT_CLASSIFICATION	These 3 steps are only needed for the 2 cases indicated with a X below.
WITHOUT_CLASSIFICATION	Obey the contract ourselves!
WITHOUT_CLASSIFICATION	register all of the event listener trackers
WITHOUT_CLASSIFICATION	remove all of the listeners
WITHOUT_CLASSIFICATION	fire all of the diagram events
WITHOUT_CLASSIFICATION	fire all of the generator events
WITHOUT_CLASSIFICATION	fire all of the help events
WITHOUT_CLASSIFICATION	fire all of the notation events
WITHOUT_CLASSIFICATION	verify all events were fired correctly
WITHOUT_CLASSIFICATION	keep track of total events fired
WITHOUT_CLASSIFICATION	keep track of which events fired
WITHOUT_CLASSIFICATION	X X
WITHOUT_CLASSIFICATION	initialize the event listener trackers which verify that all of the proper events were fired
WITHOUT_CLASSIFICATION	Display events are fired on the Swing event thread. We need to wait for them to be dispatched NOTE: if more display events are added to this test, this one needs to be last
WITHOUT_CLASSIFICATION	Notation events are fired on the Swing event thread. We assume that serializing on the final call is sufficient
WITHOUT_CLASSIFICATION	counts each bit that has been fired
WITHOUT_CLASSIFICATION	ResolvedCritic(String, List)
WITHOUT_CLASSIFICATION	ResolvedCritic(Critic, ListSet)
WITHOUT_CLASSIFICATION	ResolvedCritic(Critic, ListSet, boolean)
WITHOUT_CLASSIFICATION	testmc should now have an ItemUID so we should be able to create without adding a new ItemUID
WITHOUT_CLASSIFICATION	EnabledCM isRelevant checks if the critic is enabled initialize this to true to verify isRelevant returns true
WITHOUT_CLASSIFICATION	verify isRelevant returns true
WITHOUT_CLASSIFICATION	set enabled to false and check the opposite condition
WITHOUT_CLASSIFICATION	verify isRelevant not is false
WITHOUT_CLASSIFICATION	NotSnoozedCM isRelevant checks if the critic is snoozed snooze the critic to verify isRelevant returns false
WITHOUT_CLASSIFICATION	unsnooze the critic to verify the critic is not relevant
WITHOUT_CLASSIFICATION	verify isRelevant is true
WITHOUT_CLASSIFICATION	CurDecisionCM isRelevant checks to see if the critic has any decisions that have a priority > 0 and less than the priority of the critic. By default the critic has no decisions so isRelevant should return false.
WITHOUT_CLASSIFICATION	verify isRelevant is still false
WITHOUT_CLASSIFICATION	isRelevant should now be true
WITHOUT_CLASSIFICATION	isRelevant should still be true
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	initialize the ToDoList
WITHOUT_CLASSIFICATION	add a ToDoItem
WITHOUT_CLASSIFICATION	redundantly add item again which should be ignored
WITHOUT_CLASSIFICATION	size should be 1 since addition of second item would have been ignored
WITHOUT_CLASSIFICATION	retrieve item
WITHOUT_CLASSIFICATION	remove item
WITHOUT_CLASSIFICATION	size should be 0 since item was removed
WITHOUT_CLASSIFICATION	initialize the GoalModel
WITHOUT_CLASSIFICATION	check that the model was initialized with the unspecified goal
WITHOUT_CLASSIFICATION	change priority of unspecified goal so we can verify it was updated
WITHOUT_CLASSIFICATION	first verify that the set goal priority did not add an extra goal
WITHOUT_CLASSIFICATION	check that the model correctly updates a goal's priority
WITHOUT_CLASSIFICATION	test the removal of a goal
WITHOUT_CLASSIFICATION	number of goals should now be 0
WITHOUT_CLASSIFICATION	start desiring a goal which should add a goal and bump the size to 1
WITHOUT_CLASSIFICATION	number of goals should now be 1
WITHOUT_CLASSIFICATION	stop desiring the goal which should remove it from the model
WITHOUT_CLASSIFICATION	UMLSequenceDiagram seqdiag = new UMLSequenceDiagram();
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	This test calls ToDoList.addElement which requires the Model. We are able to get away with using the Mock model.
WITHOUT_CLASSIFICATION	checkAssignIDToObject(seqdiag, true, true);
WITHOUT_CLASSIFICATION	FigEdgeNote has no UUID
WITHOUT_CLASSIFICATION	checkAssignIDToObject(figassociationrole, true, true);
WITHOUT_CLASSIFICATION	checkAssignIDToObject(fighistorystate, true, true);
WITHOUT_CLASSIFICATION	checkAssignIDToObject(figstate, true, true);
WITHOUT_CLASSIFICATION	initialize basic parameters that are different from Decision.UNSPEC
WITHOUT_CLASSIFICATION	initialize a decision object with parameters
WITHOUT_CLASSIFICATION	initialize a decision object with parameters
WITHOUT_CLASSIFICATION	verify parameters were initialized correctly by the constructor
WITHOUT_CLASSIFICATION	set the priority to a different value
WITHOUT_CLASSIFICATION	set the priority to a different value
WITHOUT_CLASSIFICATION	verify the priority was correctly updated
WITHOUT_CLASSIFICATION	verify the priority was correctly updated
WITHOUT_CLASSIFICATION	set the name to a different value
WITHOUT_CLASSIFICATION	set the name to a different value
WITHOUT_CLASSIFICATION	verify the name property was correctly updated
WITHOUT_CLASSIFICATION	following the update the priority should be equivalent to Decision.UNSPEC
WITHOUT_CLASSIFICATION	test that properties were correctly initialized by the constructor
WITHOUT_CLASSIFICATION	initialize the Checklist
WITHOUT_CLASSIFICATION	add some test data
WITHOUT_CLASSIFICATION	add some test data
WITHOUT_CLASSIFICATION	verify the size of the list
WITHOUT_CLASSIFICATION	verify the size of the list
WITHOUT_CLASSIFICATION	verify the items were correctly added
WITHOUT_CLASSIFICATION	verify the items were correctly added
WITHOUT_CLASSIFICATION	test that the category and description are correct
WITHOUT_CLASSIFICATION	create a new list to test the addAll
WITHOUT_CLASSIFICATION	create a new list to test the addAll
WITHOUT_CLASSIFICATION	add all of the test items from the first list
WITHOUT_CLASSIFICATION	add all of the test items from the first list
WITHOUT_CLASSIFICATION	verify the size of the new list
WITHOUT_CLASSIFICATION	verify the size of the new list
WITHOUT_CLASSIFICATION	initialize the ChecklistStatus
WITHOUT_CLASSIFICATION	Construct a CheckItem
WITHOUT_CLASSIFICATION	(1) test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	reset the values to something different
WITHOUT_CLASSIFICATION	(2) Construct another CheckItem
WITHOUT_CLASSIFICATION	test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	verify that the equivalence test works
WITHOUT_CLASSIFICATION	initialize SnoozeOrder
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	unsnooze and verify its been disabled
WITHOUT_CLASSIFICATION	maybe next test is going to change in future
WITHOUT_CLASSIFICATION	test with a class in a package
WITHOUT_CLASSIFICATION	Let's make it a bit more difficult by setting the target:
WITHOUT_CLASSIFICATION	test with a class and an inner class
WITHOUT_CLASSIFICATION	test with a class and an inner class
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	Put the statemachine in the namespace of the class:
WITHOUT_CLASSIFICATION	test with a package and a class and activity diagram
WITHOUT_CLASSIFICATION	test with a package and a class and activity diagram
WITHOUT_CLASSIFICATION	build the Activity Diagram
WITHOUT_CLASSIFICATION	build the Activity Diagram
WITHOUT_CLASSIFICATION	In the next line, replacing makeEmptyProject by getCurrentProject fails the test, except when run in Eclipse. MVW: I have no idea why.
WITHOUT_CLASSIFICATION	We no longer send individual events, so next code is obsolete:
WITHOUT_CLASSIFICATION	We initialised Java Notation, so let's activate it:
WITHOUT_CLASSIFICATION	Needed for initialisations:
WITHOUT_CLASSIFICATION	set MetaProfile as a default profile
WITHOUT_CLASSIFICATION	create a dependency from the project's model to the MetaProfile
WITHOUT_CLASSIFICATION	remove the MetaProfile from the project's profile configuration
WITHOUT_CLASSIFICATION	save the project into a new file
WITHOUT_CLASSIFICATION	setup a user defined profile
WITHOUT_CLASSIFICATION	TRY GUARD/ITERATOR SYNTAX
WITHOUT_CLASSIFICATION	create a new project and assert that it has the MetaProfile as part of the project's profile configuration
WITHOUT_CLASSIFICATION	assert that the project's model element that had a dependency to the MetaProfile doesn't get inconsistent
WITHOUT_CLASSIFICATION	reopen the project and assert that the MetaProfile isn't part of the profile configuration, including the fact that the stereotype <<Critic>> isn't found
WITHOUT_CLASSIFICATION	assert that the project's model elements that had a dependency to the UML profile for Java are consistent
WITHOUT_CLASSIFICATION	add it to the project configuration
WITHOUT_CLASSIFICATION	add it to the project configuration
WITHOUT_CLASSIFICATION	create a dependency between the project's model and the user defined profile
WITHOUT_CLASSIFICATION	create a dependency between the project's model and the user defined profile
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	load the project
WITHOUT_CLASSIFICATION	assert that the model element that depends on the profile is consistent
WITHOUT_CLASSIFICATION	remove the user defined profile and the directory where it is
WITHOUT_CLASSIFICATION	Success - expected exception
WITHOUT_CLASSIFICATION	Clean up after ourselves by deleting profile model
WITHOUT_CLASSIFICATION	Test both forms of addBaseClass
WITHOUT_CLASSIFICATION	Test remaining form of removeBaseClass
WITHOUT_CLASSIFICATION	by default the build already builds one default EP
WITHOUT_CLASSIFICATION	$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	$JUnit-END$
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Flag to enable performance testing - off by default
WITHOUT_CLASSIFICATION	initialize the model and profile subsystems to simulate a fresh ArgoUML session
WITHOUT_CLASSIFICATION	20 sec.
WITHOUT_CLASSIFICATION	Add one child.
WITHOUT_CLASSIFICATION	Performance testing parameters
WITHOUT_CLASSIFICATION	Add grandchild.
WITHOUT_CLASSIFICATION	Create a generalizable element with an element without children.
WITHOUT_CLASSIFICATION	Check periodically to see if we've exceeded time limit
WITHOUT_CLASSIFICATION	Add another child.
WITHOUT_CLASSIFICATION	Tree is created depth first, so this should be at the bottom
WITHOUT_CLASSIFICATION	Try changing namespace of element and make sure results track
WITHOUT_CLASSIFICATION	Populate our namespace hierarchy to the requested depth. Total number of created elements is children^maxLevel, so be careful not to increase parameters too much.
WITHOUT_CLASSIFICATION	TRY SOME GUARD/ITERATOR ERRORS
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#TestCase(String)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Make sure we have a root model for TagDefinitions to get put in.
WITHOUT_CLASSIFICATION	create the tree of objects
WITHOUT_CLASSIFICATION	copy package p1 into p2 package
WITHOUT_CLASSIFICATION	change the structure in p1 package
WITHOUT_CLASSIFICATION	verify the copied package
WITHOUT_CLASSIFICATION	verify the copied class
WITHOUT_CLASSIFICATION	verify the copied nested package and the copied interface
WITHOUT_CLASSIFICATION	verify the copied attribute
WITHOUT_CLASSIFICATION	See if we can copy a class right off
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	See if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	See if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	See if we can copy a datatype right off
WITHOUT_CLASSIFICATION	See if two copies look like copies of each other
WITHOUT_CLASSIFICATION	See if two copies look like copies of each other
WITHOUT_CLASSIFICATION	See if we can copy an interface right off
WITHOUT_CLASSIFICATION	Create a new tagged value with the given type and value and add it to a ModelElement.
WITHOUT_CLASSIFICATION	Update an existing tagged value on a model element.
WITHOUT_CLASSIFICATION	See if we can copy a package right off
WITHOUT_CLASSIFICATION	See if we can copy a stereotype right off
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	"Permission",
WITHOUT_CLASSIFICATION	Check to see if association still exists
WITHOUT_CLASSIFICATION	Expected IllegalArgumentException seen
WITHOUT_CLASSIFICATION	A parameterized class can only be the client of a single binding
WITHOUT_CLASSIFICATION	exception expected - test success
WITHOUT_CLASSIFICATION	expected - test success
WITHOUT_CLASSIFICATION	expected - test success
WITHOUT_CLASSIFICATION	Create a new arg list with a different set of args (but same types)
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	not static
WITHOUT_CLASSIFICATION	Test passed
WITHOUT_CLASSIFICATION	Test passed
WITHOUT_CLASSIFICATION	NOT UML1.4
WITHOUT_CLASSIFICATION	non existent in UML1
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	not in UML1.4
WITHOUT_CLASSIFICATION	This is not a well formed model in a strict sense. See the multiplicity in UML 1.3 Figure 2-5.
WITHOUT_CLASSIFICATION	returns List
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Deleting the stereotype should cascade to the TagDefinition, then the TaggedValue
WITHOUT_CLASSIFICATION	TODO: constraints TODO: required tags
WITHOUT_CLASSIFICATION	Enumerate declaring class
WITHOUT_CLASSIFICATION	NOTE: Although it's not shown in the UML 1.4 spec, a TemplateArgument appears to be a datavalue (like MultiplicityRange) and can not be reused in multiple instances. The UML diagrams don't show it as a composition, but it effectively is.
WITHOUT_CLASSIFICATION	Must be called after setImplementation.
WITHOUT_CLASSIFICATION	Enumerate fields
WITHOUT_CLASSIFICATION	Enumerate constructors
WITHOUT_CLASSIFICATION	Indicate that the test was validated
WITHOUT_CLASSIFICATION	TODO: Look up class in truth table
WITHOUT_CLASSIFICATION	Check superclass. Make sure this class does not extend or reference non-ArgoUML classes
WITHOUT_CLASSIFICATION	Enumerate methods Enumerate method arguments
WITHOUT_CLASSIFICATION	Not currently present as token in Model.getFacade(). NIF: runTruthTest(Model.getFacade().isAElement(o), Model.getFacade().ELEMENT); NIF: runTruthTest(Model.getFacade().isAExpression(o), Model.getFacade().EXPRESSION); NIF: runTruthTest(Model.getFacade().isAExtensionPoint(o), Model.getFacade().EXTENSION_POINT); NIF: runTruthTest(Model.getFacade().isAFeature(o), Model.getFacade().FEATURE);
WITHOUT_CLASSIFICATION	NIF: runTruthTest(Model.getFacade().isAInteraction(o), Model.getFacade().INTERACTION);
WITHOUT_CLASSIFICATION	NIF: unTruthTest(Model.getFacade().isAMethod(o), Model.getMetaTypes().getMethod());
WITHOUT_CLASSIFICATION	runTruthTest(Model.getFacade().isARelationship(o), Model.getMetaTypes().getRelationship());
WITHOUT_CLASSIFICATION	NIF: runTruthTest(Model.getFacade().isAStructuralFeature(o), Model.getMetaTypes().getStructuralFeature()); NIF: runTruthTest(Model.getFacade().isATaggedValue(o), Model.getMetaTypes().getTaggedValue());
WITHOUT_CLASSIFICATION	Call methods that exists for all objects and that always return something meaningful
WITHOUT_CLASSIFICATION	Call methods that exists for all objects and that always return something meaningful
WITHOUT_CLASSIFICATION	Multiplicity, MultiplicityRange, and all Expression subtypes don't have 0-argument create methods, so we special case them.
WITHOUT_CLASSIFICATION	Find the create method in the offical API
WITHOUT_CLASSIFICATION	Now get the factory implementation method to be invoked
WITHOUT_CLASSIFICATION	Here it is another object sent to the test.
WITHOUT_CLASSIFICATION	Here it is another object sent to the test.
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	Make sure we start off clean
WITHOUT_CLASSIFICATION	Delete the model and make sure everything inside goes with it
WITHOUT_CLASSIFICATION	The association should have same namespace as from class
WITHOUT_CLASSIFICATION	Only one end should be navigable
WITHOUT_CLASSIFICATION	"UseCaseInstance", Gone in UML 2.x & unused by ArgoUML
WITHOUT_CLASSIFICATION	Set namespace so buildAssocationRole works
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Build an activity graph with a single action state the way the GUI would
WITHOUT_CLASSIFICATION	This is a private method in Model.
WITHOUT_CLASSIFICATION	Handling methods that doesn't return
WITHOUT_CLASSIFICATION	Handling the isInitiated method
WITHOUT_CLASSIFICATION	Handling the initialise method
WITHOUT_CLASSIFICATION	Handle methods which return opaque objects
WITHOUT_CLASSIFICATION	one of the expected errors, just ignore
WITHOUT_CLASSIFICATION	Could not find model.
WITHOUT_CLASSIFICATION	Could not find model.
WITHOUT_CLASSIFICATION	Handle UML 1.4 metamodel which is a MOF 1.3 model
WITHOUT_CLASSIFICATION	Get a node's name along with the name of its parent (which we'll use to find the factory to create it with.
WITHOUT_CLASSIFICATION	UML 1.4
WITHOUT_CLASSIFICATION	UML 2.x
WITHOUT_CLASSIFICATION	XMI 2.1
WITHOUT_CLASSIFICATION	XMI 1.1
WITHOUT_CLASSIFICATION	Remap specific classes
WITHOUT_CLASSIFICATION	Only remap package if we didn't remap specific class
WITHOUT_CLASSIFICATION	The following UML 1.4 elements have been removed from UML 2.x, so we don't bother testing them.
WITHOUT_CLASSIFICATION	A few of our factories are slightly different than as declared in the UML 1.4 metamodel, so we remap them here. <metamodel, argouml>
WITHOUT_CLASSIFICATION	Packages to be remapped
WITHOUT_CLASSIFICATION	For those things which we've already migrated to UML 2.x syntax we need to map them back to their UML 1.4 equivalents during the migration period.
WITHOUT_CLASSIFICATION	Subsystem has been removed from UML 2.x
WITHOUT_CLASSIFICATION	TRY THE ACTIONS
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	This is the XMI version used to encode the metamodel. We could parse deeper to pull out the actual UML version. The UML 1.4 version is at XMI/XMI.header/XMI.model[@xmi.version]. The UML 2.1.1 metamodel doesn't actually seem to contain its version.
WITHOUT_CLASSIFICATION	Because UML 1.4 & 2.1 metamodels are organized differently we need to traverse the hierarchy looking for our owning Package.
WITHOUT_CLASSIFICATION	Specific classes to be remapped remap.put("", "");
WITHOUT_CLASSIFICATION	Go the other way to lookup an element by path
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	ActivityGraphs
WITHOUT_CLASSIFICATION	Instance (in UML 1.4) and Classifier are abstract and not tested
WITHOUT_CLASSIFICATION	Extend, Include, UseCaseInstance & ExtensionPoint not implemented
WITHOUT_CLASSIFICATION	assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getExtend())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getInclude())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getUseCaseInstance())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getExtensionPoint())); ...
WITHOUT_CLASSIFICATION	State is concrete in UML 1.3, but becomes abstract in UML 1.4, so we never allow it to be created (and don't test creation)
WITHOUT_CLASSIFICATION	new InitProfileSubsystem().init();
WITHOUT_CLASSIFICATION	This should work now that they both have names
WITHOUT_CLASSIFICATION	this call could easily fall if there is e.g. no public default constructor. If it fails tweak the if/else tree above to accommodate the parameter or check if we need to test the particular method at all.
WITHOUT_CLASSIFICATION	If method not supported ignore failure
WITHOUT_CLASSIFICATION	Fine!
WITHOUT_CLASSIFICATION	Fine!
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getState()));
WITHOUT_CLASSIFICATION	CommonBehaviorFactory DataTypesFactory ExtensionMechanismsFactory ModelManagementFactory
WITHOUT_CLASSIFICATION	set up all parameters. Some methods are invoked with primitives or collections, so we need to create them accordingly
WITHOUT_CLASSIFICATION	The following should fail
WITHOUT_CLASSIFICATION	and leave things unchanged
WITHOUT_CLASSIFICATION	This one should work except Java is not registered by default assertTrue(settings.setNotationLanguage("Java")); assertEquals("Java", settings.getNotationLanguage());
WITHOUT_CLASSIFICATION	NotationProviderFactory2.getInstance().addNotationProvider(1234, name, MyNP.class); NotationProvider notationProvider = NotationProviderFactory2.getInstance().getNotationProvider( 1234, new Object()); assertTrue("Test notation provider for 1234 not found", notationProvider != null);
WITHOUT_CLASSIFICATION	Constructor.
WITHOUT_CLASSIFICATION	Constructor. @param me an Object
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	reuse signal event:
WITHOUT_CLASSIFICATION	reuse call event:
WITHOUT_CLASSIFICATION	reuse time event:
WITHOUT_CLASSIFICATION	reuse change event:
WITHOUT_CLASSIFICATION	try creating a string from the generated modelelements:
WITHOUT_CLASSIFICATION	try creating a TimeEvent
WITHOUT_CLASSIFICATION	try changing the triggertype to ChangeEvent
WITHOUT_CLASSIFICATION	nested class:
WITHOUT_CLASSIFICATION	nested class:
WITHOUT_CLASSIFICATION	No need to check any further if we fail the 1st part.
WITHOUT_CLASSIFICATION	START TESTING STUFF
WITHOUT_CLASSIFICATION	TRY MOVING IN A SIMPLE MANER
WITHOUT_CLASSIFICATION	TRY SOME ERRORS
WITHOUT_CLASSIFICATION	For a Transition use indirection through source StateVertex
WITHOUT_CLASSIFICATION	If we can't find a model, return the outermost containing model element
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	This swaps the direction of m3:
WITHOUT_CLASSIFICATION	This swaps the direction of m3 back: the colon is obliged, but the / not and the 2nd dot also not
WITHOUT_CLASSIFICATION	Notation allows to add or modify things, not remove. Hence, this does nothing:
WITHOUT_CLASSIFICATION	The expected exception is thrown.
WITHOUT_CLASSIFICATION	Both diagram types shall show sequence numbers when requested:
WITHOUT_CLASSIFICATION	But the collaboration diagram refuses to leave them out:
WITHOUT_CLASSIFICATION	If the message has a name, but no action, then show the name:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation, then show the operation:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and a script, then show the script:
WITHOUT_CLASSIFICATION	TODO: Should there really be () here?
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and an empty script, then show the operation:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and an expression with no script, then show the operation:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and a named script with parameters, then show the script:
WITHOUT_CLASSIFICATION	TODO: Why is there a space before the ( here, and not in case of the operation name?
WITHOUT_CLASSIFICATION	The action still has the argument from above.
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and a script with parameters but without name, then show the operation name:
WITHOUT_CLASSIFICATION	this is not a very useful transition
WITHOUT_CLASSIFICATION	One of everything
WITHOUT_CLASSIFICATION	Upper / Lower case
WITHOUT_CLASSIFICATION	Mixed case
WITHOUT_CLASSIFICATION	A complex internal transition
WITHOUT_CLASSIFICATION	These are NOT entry/exit/do activities!
WITHOUT_CLASSIFICATION	Long list of internals
WITHOUT_CLASSIFICATION	or should the 1 be 0 ?
WITHOUT_CLASSIFICATION	deleting it all
WITHOUT_CLASSIFICATION	we want the b: Foo attribute, that is the second in the list
WITHOUT_CLASSIFICATION	If there is no script, then the language should not be maintained.
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Success - expected exception
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Create file
WITHOUT_CLASSIFICATION	This is the normal case.
WITHOUT_CLASSIFICATION	Load a project which contains links to it
WITHOUT_CLASSIFICATION	test project readable files
WITHOUT_CLASSIFICATION	Standard UML 1.4 profile
WITHOUT_CLASSIFICATION	Create a default profile and record its contents
WITHOUT_CLASSIFICATION	Write the profile out to a temp file
WITHOUT_CLASSIFICATION	Read it back in to a new empty project
WITHOUT_CLASSIFICATION	Clean up our two models and the extent that we read profile in to
WITHOUT_CLASSIFICATION	setting up the dependent profile creation
WITHOUT_CLASSIFICATION	actual call that executes everything
WITHOUT_CLASSIFICATION	verifications
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	TODO: the following cleans up left overs from previous tests, but, preferably we shouldn't have to do this...
WITHOUT_CLASSIFICATION	create profile model
WITHOUT_CLASSIFICATION	create profile model
WITHOUT_CLASSIFICATION	save the profile into a xmi file
WITHOUT_CLASSIFICATION	save the profile into a xmi file
WITHOUT_CLASSIFICATION	Called during teardown
WITHOUT_CLASSIFICATION	Called during teardown
WITHOUT_CLASSIFICATION	remove leftovers from other tests
WITHOUT_CLASSIFICATION	TODO: User defined profile support untested currently + "\t\t<userDefined>\n" + "\t\t\t<filename>\n" + "foo.profile\n" + "</filename>\n" + "\t\t\t<model>\n" + "foo.profile.package\n" + "\t\t\t</model>\n" + "\t\t</userDefined>\n"
WITHOUT_CLASSIFICATION	There seems to be cases where we don't erase the profile. Let's make sure it is deleted.
WITHOUT_CLASSIFICATION	[euluis] Using Windows style initial path, don't know if this fails in nixes.
WITHOUT_CLASSIFICATION	ensure that model subsystem implementation doesn't remember the profiles by changing their names and directories
WITHOUT_CLASSIFICATION	but, lookout, it doesn't work both ways
WITHOUT_CLASSIFICATION	assertEquals(DefaultOclEvaluator.getInstance().evaluate(vt, mi, "x.oclIsKindOf(Classifier)"), true);
WITHOUT_CLASSIFICATION	on a headless system (without display) this will crash
WITHOUT_CLASSIFICATION	private JPanel propertyPane;
WITHOUT_CLASSIFICATION	contains instances of each modelelement used for testing so that we only use each modelelement once
WITHOUT_CLASSIFICATION	propertyPane = TabProps
WITHOUT_CLASSIFICATION	theDetailsPane.getNamedTab(Translator.localize("tab.properties"));
WITHOUT_CLASSIFICATION	currently this is in this try block as it does not work _propertyPanel always has size 0,0
WITHOUT_CLASSIFICATION	ProjectBrowser exposes functionality, not components. assertNotNull(pb.getTabProps()); assertNotNull(pb.getStatusBar());
WITHOUT_CLASSIFICATION	Make sure this test happens on the AWT event thread
WITHOUT_CLASSIFICATION	JPanel docPane = pane.getTab(TabDocumentation.class);
WITHOUT_CLASSIFICATION	The target list is empty, re-emptying it again should not generate any events:
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	new target is of type object, refresh should not be called
WITHOUT_CLASSIFICATION	commented out next piece to remove failure of testcase. The testcase is probably correct but the implementation of DetailsPane is not pane.getTabs().setSelectedComponent(docPane); pane.targetSet(e); assertEquals(docPane, pane.getTabs().getSelectedComponent());
WITHOUT_CLASSIFICATION	new target is a fig, refresh should be called
WITHOUT_CLASSIFICATION	Setting one target should generate one event:
WITHOUT_CLASSIFICATION	new target is of type UMLClassDiagram, refresh should not be called
WITHOUT_CLASSIFICATION	TODO: We could check that the contents of the files differ.
WITHOUT_CLASSIFICATION	new target is a modelelement, refresh should not be called
WITHOUT_CLASSIFICATION	testing with subset of targets
WITHOUT_CLASSIFICATION	set same target again should not generate new events:
WITHOUT_CLASSIFICATION	TabProps gets selected! So, 2nd time right
WITHOUT_CLASSIFICATION	adding same targets list again should not generate new events:
WITHOUT_CLASSIFICATION	adding same target again should not generate new events:
WITHOUT_CLASSIFICATION	reverse order
WITHOUT_CLASSIFICATION	now remove one target by setting subset:
WITHOUT_CLASSIFICATION	TODO: the following fails due to the XMI writing saving all top level model elements and because even if there was no empty project, by creating a class, the undo mechanism in the project manager will force the creation of an empty project. assertEquals(1, profileModels.size());
WITHOUT_CLASSIFICATION	NOTE: we have to do this due to leftovers from other tests being causing strange errors when running in Eclipse.
WITHOUT_CLASSIFICATION	all tests should consider the threshold as inclusive value
WITHOUT_CLASSIFICATION	this test is a bit stupid, but nevertheless...
WITHOUT_CLASSIFICATION	{A, A} are offenders
WITHOUT_CLASSIFICATION	everything ok
WITHOUT_CLASSIFICATION	everything ok
WITHOUT_CLASSIFICATION	same name, same participants, two offenders
WITHOUT_CLASSIFICATION	same name, different classes, everything ok
WITHOUT_CLASSIFICATION	same name, different classes, everything ok
WITHOUT_CLASSIFICATION	same name, same participants, two offenders
WITHOUT_CLASSIFICATION	{A,A,B,B} are offenders
WITHOUT_CLASSIFICATION	{} no offenders
WITHOUT_CLASSIFICATION	simply create 3 usecases and an actor in a package with individual names
WITHOUT_CLASSIFICATION	generalizations are not required to have unique names within a namespace
WITHOUT_CLASSIFICATION	All use cases and actors require associations hence all predicates evalulate to true
WITHOUT_CLASSIFICATION	build association build association between actor and top use case.
WITHOUT_CLASSIFICATION	test for return parameters. they can ALSO fail!
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	Arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	the graph should stay the same.
WITHOUT_CLASSIFICATION	build extend these parameters seem to be in correct order add an extend. We do not need an assoc on the extending use case
WITHOUT_CLASSIFICATION	build include it seems that the parameters for build include are just the other way round add an include: we do not need to have associtions on one
WITHOUT_CLASSIFICATION	setup
WITHOUT_CLASSIFICATION	Handle the simple cases Anything very exotic will fail, but that will be our clue that the test needs to be extended
WITHOUT_CLASSIFICATION	real test
WITHOUT_CLASSIFICATION	Some arbitrary bounds and settings - unused in test
WITHOUT_CLASSIFICATION	Make sure everything created gets deleted
WITHOUT_CLASSIFICATION	This needs to be a concrete metatype, so we can't use the general, but abstract, Classifier. Replace with its concrete subtypes.
WITHOUT_CLASSIFICATION	This needs to be a concrete metatype, so we can't use the general, but abstract, Classifier. Replace with its concrete subtypes.
WITHOUT_CLASSIFICATION	setup the Project due to its use in SourcePathTableModel ctor
WITHOUT_CLASSIFICATION	create a class model element
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TestCase#setUp()
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	Tests used to be coded to assume immediate event delivery. They've been modified to use flush() where needed. - tfm oldEventPolicy = MFactoryImpl.getEventPolicy(); MFactoryImpl.setEventPolicy(MFactoryImpl.EVENT_POLICY_IMMEDIATE);
WITHOUT_CLASSIFICATION	Return a package to use as the Namespace.
WITHOUT_CLASSIFICATION	restore original event policy - not supported by MDR - tfm MFactoryImpl.setEventPolicy(oldEventPolicy);
WITHOUT_CLASSIFICATION	assertNotNull(actionSupplier.getValue(Action.SMALL_ICON));
WITHOUT_CLASSIFICATION	cont.setTarget(elem);
WITHOUT_CLASSIFICATION	Testing with more than one, since it failed with a manual test I made.
WITHOUT_CLASSIFICATION	assertNotNull(actionClient.getValue(Action.SMALL_ICON));
WITHOUT_CLASSIFICATION	The following will bring up a dialog box, so can't be run headless actionSupplier.actionPerformed(new ActionEvent(this, 0, "foo"));
WITHOUT_CLASSIFICATION	The following will bring up a dialog box, so can't be run headless actionClient.actionPerformed(new ActionEvent(this, 0, "foo"));
WITHOUT_CLASSIFICATION	create a new empty project
WITHOUT_CLASSIFICATION	Inconclusive
WITHOUT_CLASSIFICATION	Inconclusive
WITHOUT_CLASSIFICATION	setup a user defined profile which isn't loaded by the model subsystem and contains a stereotype and this contains a tag definition
WITHOUT_CLASSIFICATION	add the profile stereotype to the class
WITHOUT_CLASSIFICATION	add the profile to the project configuration
WITHOUT_CLASSIFICATION	This works when running the test from within Eclipse. Apparently Eclipse runs the tests using a class-loader that has the tests Folder among the URL:s.
WITHOUT_CLASSIFICATION	create a class in the project model
WITHOUT_CLASSIFICATION	check that the tag definition is returned by {@link UMLTagDefinitionComboBoxModel#getApplicableTagDefinitions(Object)}
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	If no project was entered on the command line, try to reload the most recent project if that option is true
WITHOUT_CLASSIFICATION	Set the screen layout to what the user left it before, or to reasonable defaults.
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	case 1 after(...)
WITHOUT_CLASSIFICATION	initialize the model and profile subsystems to simulate a fresh ArgoUML session
WITHOUT_CLASSIFICATION	We have the path provided from the build script.
WITHOUT_CLASSIFICATION	Check the localized parts.
WITHOUT_CLASSIFICATION	Wait for all Model subsystem events to be delivered
WITHOUT_CLASSIFICATION	Wait for all AWT events to be dispatched and processed
WITHOUT_CLASSIFICATION	Check here if there are no incoming call actions if not then create an activation at the top of the lifeline
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	calcBounds();
WITHOUT_CLASSIFICATION	For classifiers
WITHOUT_CLASSIFICATION	This is null as until the first stereotype declaration is seen. After that it is non-null.
WITHOUT_CLASSIFICATION	newOp.setOwnerScope(op.getOwnerScope()); not needed in case of operation
WITHOUT_CLASSIFICATION	includes the "/" the "seq_expr" from the header javadoc the ":" is not included in "number" - it is always present
WITHOUT_CLASSIFICATION	Model.getExtensionMechanismsFactory().buildTaggedValue( tagName, new String[] {"true"}, Model.getFacade().getRoot(umlObject));
WITHOUT_CLASSIFICATION	MClassifiers cannot be Bag
WITHOUT_CLASSIFICATION	If the model repository doesn't manage a DI model then we must generate our Figs by inspecting PGML
WITHOUT_CLASSIFICATION	Read xsltStream into a temporary file Get url for temp file. openStream from url and wrap in StreamSource
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	if the object does not have a name, than no problem
WITHOUT_CLASSIFICATION	tree value isSelected(dont want a colored background) isExpanded isLeaf row(not important for rendering) hasFocus (dont want a focus rectangle)
WITHOUT_CLASSIFICATION	If we don't have it, find the trigger. If this fails it will keep its default value of null
WITHOUT_CLASSIFICATION	@Override public final void setHeadline(String s) { setupHeadAndDesc(); }
WITHOUT_CLASSIFICATION	We need to find the stereotype with the name "create" and the base class BehavioralFeature in the model. If there is none then we create one and put it there.
WITHOUT_CLASSIFICATION	first element is e.g. the class, but we need to have its namespace to recompute the offenders.
WITHOUT_CLASSIFICATION	- RedrawManager.unlock(); - _redrawer.repairDamage();
WITHOUT_CLASSIFICATION	if this composite state is not attached to a statemachine it is not the toplevel composite state.
WITHOUT_CLASSIFICATION	Get the assocations and connections. No problem (there is a separate critic) if this is a binary association or is an association role.
WITHOUT_CLASSIFICATION	If this was an association then there will be relevant information to fetch out of the mode arguments. If it not an association then these will be passed forward harmlessly as null.
WITHOUT_CLASSIFICATION	find selected rows and make a list of the model elements that are selected
WITHOUT_CLASSIFICATION	TreeCellRenderer implementation
WITHOUT_CLASSIFICATION	Build namespace hierarchy like this: g a /\ b c /\ d e f
WITHOUT_CLASSIFICATION	private PropertyprpTodo; private PropertyprpProperties; private PropertyprpDocumentation; private PropertyprpStyle; private PropertyprpSource; private PropertyprpConstraints; private PropertyprpTaggedValues;
WITHOUT_CLASSIFICATION	always fire changes in the case something has changed in the composition of the taggedValues collection.
WITHOUT_CLASSIFICATION	Build up an array list of the heights of each label/component pair. Heights of zero indicate a proportional height.
WITHOUT_CLASSIFICATION	CmdPaste cmd = new CmdPaste(); cmd.doIt();
WITHOUT_CLASSIFICATION	stereotypes applied to the target mostly control which TDs (but see below for other listeners too)
WITHOUT_CLASSIFICATION	TODO: Add referenceValue for tagged values which have a non-primitive type
WITHOUT_CLASSIFICATION	add a decision but set the critic priority to 0 so isRelevant should still be false
WITHOUT_CLASSIFICATION	TODO: We should also test that the object have been removed from their namespace. Collection c = Model.getFacade().getOwnedElements(p.getRoot());
WITHOUT_CLASSIFICATION	Because the notation events get dispatched on the Swing event thread, we need to use invokeAndWait to make sure that we don't return until they've been delivered
WITHOUT_CLASSIFICATION	Parent is Element, but it has no attributes or associations to check checkElementCopy(e1, e2);
WITHOUT_CLASSIFICATION	Extra careful now, not to keep any references to the second argument.
WITHOUT_CLASSIFICATION	Auto-create a return message for a call message
WITHOUT_CLASSIFICATION	get the source of the return message
WITHOUT_CLASSIFICATION	get the dest of the return message
WITHOUT_CLASSIFICATION	GridBagConstraints gridBagConstraints3 = new GridBagConstraints(); gridBagConstraints3.gridx = 2; gridBagConstraints3.anchor = GridBagConstraints.NORTHWEST; gridBagConstraints3.insets = new Insets(5, 5, 0, 0); gridBagConstraints3.gridy = 3; GridBagConstraints gridBagConstraints2 = new GridBagConstraints(); gridBagConstraints2.gridx = 0; gridBagConstraints2.anchor = GridBagConstraints.NORTHWEST; gridBagConstraints2.insets = new Insets(5, 5, 0, 0); gridBagConstraints2.gridy = 3;
WITHOUT_CLASSIFICATION	Fig spf = null; Fig dpf = null; FigNode sfn = null; FigNode dfn = null;
WITHOUT_CLASSIFICATION	If the event originated from the window w/glass pane, consume the event
WITHOUT_CLASSIFICATION	Add GUI-internal stuff. GUI-internal stuff is panes, tabs, menu items that are part of the GUI subsystem i.e. a class in the org.argouml.ui-package. Things that are not part of the GUI, like everything that has any knowledge about UML, Diagrams, Code Generation, Reverse Engineering, creates and registers itself when that subsystem or module is loaded.
WITHOUT_CLASSIFICATION	The workarea is all the visible space except the menu, toolbar and status bar. Workarea is laid out as a BorderSplitPane where the various components that make up the argo application can be positioned.
WITHOUT_CLASSIFICATION	iterate through the tabbed panels to determine whether they should be enabled.
WITHOUT_CLASSIFICATION	Always select properties panel if defaultToProperties is true, and if properties panel is appropriate for selected perspective
WITHOUT_CLASSIFICATION	tabs.addTab(Translator.localize("dialog.find.tab.name-and-location"), nameLocTab);
WITHOUT_CLASSIFICATION	_tableModel.setTarget(_target); _table.setModel(_tableModel);
WITHOUT_CLASSIFICATION	if the current shortcut has not been set, then the actual shortcut value is the default one
WITHOUT_CLASSIFICATION	if the user cancelled the operation, we don't have to save anything
WITHOUT_CLASSIFICATION	create the return message modelelement with the interaction and the collaboration
WITHOUT_CLASSIFICATION	Generate and register the OSXAdapter, passing the methods we wish to use as delegates for various com.apple.eawt.ApplicationListener methods
WITHOUT_CLASSIFICATION	TODO: no Links in UML 2
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	Fig accessors
WITHOUT_CLASSIFICATION	event handlers - MouseListener implementation
WITHOUT_CLASSIFICATION	the UML object wrong end of the edge
WITHOUT_CLASSIFICATION	We are going to add the ones still valid & new ones in the right sequence:
WITHOUT_CLASSIFICATION	This is perfectly normal and happens among other things within the call to setDiagram (below).
WITHOUT_CLASSIFICATION	events
WITHOUT_CLASSIFICATION	if the new edge implements the MouseListener interface it has to receive the mouseReleased() event
WITHOUT_CLASSIFICATION	user feedback
WITHOUT_CLASSIFICATION	needs to be updated for changes in Notation subsystem - tfm String nameStr = Notation.generate(this, getOwner()).trim(); getNameFig().setText(nameStr);
WITHOUT_CLASSIFICATION	GraphFactory implementation
WITHOUT_CLASSIFICATION	adapted from SelectionWButtons from line 280 calls a helper method to avoid this edge disappearing if the new source and dest are the same node.
WITHOUT_CLASSIFICATION	Give up if we are already on the graph. This is a bit inconistent with canAddNode above.
WITHOUT_CLASSIFICATION	Link the new extend relationship in to the ends. Remember we draw from the extension use case to the base use case.
WITHOUT_CLASSIFICATION	TODO: This is using the default platform character encoding specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	Check against "" is needed for backward compatibility. Don't remove without checking subclasses and warning downstream developers - tfm - 20081211
WITHOUT_CLASSIFICATION	next line does give user.home back but this is not compliant with how the project.uri works and therefore open and save project as give different starting directories. String directory = Globals.getLastDirectory();
WITHOUT_CLASSIFICATION	Correct the activator value
WITHOUT_CLASSIFICATION	We know this is a return action now. It must be pointing the opposite way to the activator.
WITHOUT_CLASSIFICATION	Java SE 6 has a native GIF writer, but it's not in Java 5. One is available in the JAI-ImageIO library, but we don't currently bundle that and at 6+ MB it seems like a heavyweight solution, but I don't have time to produce a stripped down version right now - tfm https:jai-imageio.dev.java.net/
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	Although we've historically written out the DOCTYPE, the DTD doesn't actually exist and this line will get stripped by the .uml file persister + "<!DOCTYPE profile SYSTEM \"profile.dtd\" >\n"
WITHOUT_CLASSIFICATION	check that the tag definition is returned by {@link UMLTagDefinitionComboBoxModel#getApplicableTagDefinitions(Object)}
WITHOUT_CLASSIFICATION	TODO real numbers not yet supported assertEquals(DefaultOclEvaluator.getInstance() .evaluate(null, null, "1.5"), 1.5);
WITHOUT_CLASSIFICATION	REMEMBER to change this if you change the number of MEs with source path settings
WITHOUT_CLASSIFICATION	put the x at the right side of the activation if needed
WITHOUT_CLASSIFICATION	Make sure there is the minimum gap above the message being drawn
WITHOUT_CLASSIFICATION	Make sure there is the minimum gap below the message being drawn
WITHOUT_CLASSIFICATION	The FigMessage that triggered this FigActivation into existence
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	This module will still register as enabled for UML1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	Get the region as the first Region in the State. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	Create the layer
WITHOUT_CLASSIFICATION	Create the renderer
WITHOUT_CLASSIFICATION	If we're not provided a namespace then get it from the diagram or the root
WITHOUT_CLASSIFICATION	Link the previous/next reference of the swimlanes according to the x order.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	make space for the clarifier for vertical symmetry margin between text and border
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	VetoableChangeListener implementation
WITHOUT_CLASSIFICATION	contructors
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	The purpose of this method is not explained and it give give NPE depending on z order of figs as they are read. For now ignore if null but for future lets delete this.
WITHOUT_CLASSIFICATION	Fig accessors
WITHOUT_CLASSIFICATION	fig accessors
WITHOUT_CLASSIFICATION	can't have a connection between 2 interfaces: get the 'other' end type
WITHOUT_CLASSIFICATION	If there's only a single child (and we're it's only parent), set a hint for where to place it when we get to its row
WITHOUT_CLASSIFICATION	Use "aSize" to build up the minimum size. Start with the size of the name fig and build up.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	if we are the dest and is a call action, create the activation, but don't add it until the height is set.
WITHOUT_CLASSIFICATION	if we are the dest and is a call action, create the activation, but don't add it until the height is set.
WITHOUT_CLASSIFICATION	if we are the destination of a create action, create the entire activation
WITHOUT_CLASSIFICATION	if we are the target of a destroy action the figlifeline ends here and we add the activation
WITHOUT_CLASSIFICATION	if we are the source of a return action the activation ends here.
WITHOUT_CLASSIFICATION	If we have a currentAct object that means have reached the end of the lifeline with a call or a create not returned. Add the activation to the list after setting its height to end at the end of the lifeline.
WITHOUT_CLASSIFICATION	we do nothing. No call to the parent
WITHOUT_CLASSIFICATION	we don't recalculate activations, just move them
WITHOUT_CLASSIFICATION	if is a classifier role, it must return all the related messages.
WITHOUT_CLASSIFICATION	if is a message, it must return the sender and the receiver of the message.
WITHOUT_CLASSIFICATION	Comments from anywhere in the model are allowed
WITHOUT_CLASSIFICATION	All other types of elements must be in this namespace
WITHOUT_CLASSIFICATION	we initialize the coordinates.
WITHOUT_CLASSIFICATION	we do nothing
WITHOUT_CLASSIFICATION	manage if cursor x is less than lastX1
WITHOUT_CLASSIFICATION	manage if cursor x is more than lastX2
WITHOUT_CLASSIFICATION	manage changes of direction...
WITHOUT_CLASSIFICATION	I have no direction yet
WITHOUT_CLASSIFICATION	we move down or up the messages that are downward the broom
WITHOUT_CLASSIFICATION	we recalculate all the activations
WITHOUT_CLASSIFICATION	we draw a cross
WITHOUT_CLASSIFICATION	we don't let the user move the messages horizontally.
WITHOUT_CLASSIFICATION	if the edge is near the bottom of the classifier roles, we enlarge all the FigClassifierRoles in the diagram.
WITHOUT_CLASSIFICATION	super(Model.getFacade().getName(op), null);
WITHOUT_CLASSIFICATION	we need the edge to be complete
WITHOUT_CLASSIFICATION	if the added edge is a Create Message it will affect the position of the ClassifierRole so it should be repositioned
WITHOUT_CLASSIFICATION	the initial x is the left side of the activation
WITHOUT_CLASSIFICATION	the initial x is the left side of the activation
WITHOUT_CLASSIFICATION	put the x at the right side of the activation if needed
WITHOUT_CLASSIFICATION	if the y coordinate is before the classifier role y, we place the start in the corner of the fighead.
WITHOUT_CLASSIFICATION	if the y coordinate is inside the head, the x must be in the border of the headFig.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders (java.lang.Object)
WITHOUT_CLASSIFICATION	if the y coordinate is before the classifier role y, we place the start in the corner of the fighead.
WITHOUT_CLASSIFICATION	if the y coordinate is inside the head, the x must be in the border of the headFig.
WITHOUT_CLASSIFICATION	Use a different notation as Messages on a collaboration diagram:
WITHOUT_CLASSIFICATION	This next argument may be used to switch off the generation of sequence numbers - this is still to be implemented. They are less desired in sequence diagrams, since they do not add any information. In collaboration diagrams they are needed, and they are still optional in sequence diagrams.
WITHOUT_CLASSIFICATION	Operations ...
WITHOUT_CLASSIFICATION	TODO: add logging, but this will never happen and is handled
WITHOUT_CLASSIFICATION	If possible we determine this by checking the destination and source Figs are the same. If this is not possible because the edge is not yet connected then we check the model.
WITHOUT_CLASSIFICATION	we update the activations...
WITHOUT_CLASSIFICATION	for performance, we check if this is a selfmessage if it is, we have just updated the activations
WITHOUT_CLASSIFICATION	This call seems not very robust. Yet to determine cause.
WITHOUT_CLASSIFICATION	this constructor is needed for PGMLStackParser to load saved diagrams. It does nothing, because PGMLStackParser will call setPoints later.
WITHOUT_CLASSIFICATION	vertical resizing
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	This module will still register as enabled for UML1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	Get the region as the first Region in the State. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	There are no regions so create one and place the vertex there.
WITHOUT_CLASSIFICATION	There are one or more regions so find the one that the vertex was dropped in
WITHOUT_CLASSIFICATION	The vertex was dropped onto the diagram. Get the region as the first Region in the StateMachine. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Create the layer
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	Create the renderer
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	in this event we do nothing, only stop drawing the broom.
WITHOUT_CLASSIFICATION	There is a bug in GEF where positioning nodes can affect edge positions. We need to do 3 iterations to protect against that.
WITHOUT_CLASSIFICATION	1. Remember current message paths
WITHOUT_CLASSIFICATION	2. Reposition and resize nodes
WITHOUT_CLASSIFICATION	3. Now reposition messages based on their original position
WITHOUT_CLASSIFICATION	Compute the initial center position of the CR
WITHOUT_CLASSIFICATION	horizontal resizing
WITHOUT_CLASSIFICATION	Compute the final center position of the CR
WITHOUT_CLASSIFICATION	Self messages act differently so it is needed to move them separetly. Only self messages of selected CR should be horizontally translated.
WITHOUT_CLASSIFICATION	Create the graph model
WITHOUT_CLASSIFICATION	Y position of the new CR should match existing CRs Y position
WITHOUT_CLASSIFICATION	Init the sequence diagrams from the module
WITHOUT_CLASSIFICATION	debugging and looking at fig.headFig.figs[1]._currText I can see that it's working, but how to test it?
WITHOUT_CLASSIFICATION	Operations that work on elements:
WITHOUT_CLASSIFICATION	Operations that work on classes of objects:
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Object getImportedPackage(Object element);
WITHOUT_CLASSIFICATION	Object getIncludingCase(Object handle);
WITHOUT_CLASSIFICATION	Javadoc reviewed above this point - tfm /
WITHOUT_CLASSIFICATION	Object getImportingNamespace(Object element);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Object createStereotype();
WITHOUT_CLASSIFICATION	Implementation Note: Unlike many of the interfaces to the model there is no control to force a single instance of an XmiReader. This is to allow work objects generated by the implementation to be garbage collected when an XmiReader instance falls out of scope.
WITHOUT_CLASSIFICATION	ADiagramElementProperty delegate methods
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.ADiagramElementProperty#add( org.omg.uml.diagraminterchange.DiagramElement, org.omg.uml.diagraminterchange.Property)
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.ADiagramElementProperty#exists( org.omg.uml.diagraminterchange.DiagramElement, org.omg.uml.diagraminterchange.Property)
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.ADiagramElementProperty#getProperty( org.omg.uml.diagraminterchange.DiagramElement)
WITHOUT_CLASSIFICATION	easy interface to properties
WITHOUT_CLASSIFICATION	Here follows the interfaces that contain the enums of different kinds in the UML meta-model.
WITHOUT_CLASSIFICATION	Flow is not in UML 2.x - don't implement
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	additional support for tagged values
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Here follows the interfaces that contain the enums of different kinds in the UML meta-model.
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	public methods
WITHOUT_CLASSIFICATION	end class UUIDManager
WITHOUT_CLASSIFICATION	Write out something for us to read back in
WITHOUT_CLASSIFICATION	Now read it and check the results.
WITHOUT_CLASSIFICATION	Create an empty file and try to read it
WITHOUT_CLASSIFICATION	Depends on implementation:
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	Construct an exception with a message and a causing exception. @param message the message @param c the cause of the exception public XmiReferenceException(String message, Throwable c) { super(message, c); }
WITHOUT_CLASSIFICATION	The netbeans SAXParser sets line number and column number to -1.
WITHOUT_CLASSIFICATION	The xerces SAXParser sets line number and column number to 1.
WITHOUT_CLASSIFICATION	Not true in general, but should be true for our test models
WITHOUT_CLASSIFICATION	This throws org.argouml.model.XmiException: Unknown element in XMI file : Model because the UML 1.3->1.4 converter can only handle XMI 1.0, not 1.1
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If the region is changed to another region then we make sure that a delete event is not fired as a result. $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	In this case, either the container was not set, or it was not contained in a statemachine.
WITHOUT_CLASSIFICATION	The only way a region is set to null is if we're deleting the vertex in which case we do nothing special so that the removal of the state triggers a delete event.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	In UML a message could have an Action. In UML2 it never does.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	No body found.
WITHOUT_CLASSIFICATION	oops we already have the body
WITHOUT_CLASSIFICATION	return handle.stringValue();
WITHOUT_CLASSIFICATION	public Collection<Element> getExtendedElements(Object handle) {
WITHOUT_CLASSIFICATION	For a Transition use indirection through source StateVertex
WITHOUT_CLASSIFICATION	Gone from UML 2.x throw new NotImplementedException();
WITHOUT_CLASSIFICATION	Get all the relationships, that this model element has. and filter everything, that is not an import.
WITHOUT_CLASSIFICATION	Can't be done in the general case of federated repositories, but at least get what we can find for the current resource set
WITHOUT_CLASSIFICATION	MultiplicityElement is now an interface implemented by element types that support multiplicities - tfm
WITHOUT_CLASSIFICATION	should be Element not EObject really
WITHOUT_CLASSIFICATION	Classifier powerType =
WITHOUT_CLASSIFICATION	TODO: Signal -> Receptions association not navigable in this direction
WITHOUT_CLASSIFICATION	in UML2, the tag definition is the attribute itself
WITHOUT_CLASSIFICATION	usage differs from UML1
WITHOUT_CLASSIFICATION	usage differs from UML1
WITHOUT_CLASSIFICATION	Transitions can have multiple Triggers now
WITHOUT_CLASSIFICATION	Gone in UML 2.x
WITHOUT_CLASSIFICATION	ActionState, CallState, and SubactivityState have been replaced in UML 2.0 by explicitly modeled Actions
WITHOUT_CLASSIFICATION	TODO: Double check - tfm
WITHOUT_CLASSIFICATION	TODO: gone in UML 2
WITHOUT_CLASSIFICATION	TODO: Gone in UML 2
WITHOUT_CLASSIFICATION	TODO: Double check - tfm
WITHOUT_CLASSIFICATION	TODO: double check - tfm
WITHOUT_CLASSIFICATION	below for UML 1.4 compatibility
WITHOUT_CLASSIFICATION	TODO: double check - tfm
WITHOUT_CLASSIFICATION	TODO: Changed from UML 1.4
WITHOUT_CLASSIFICATION	TODO: gone in UML 2
WITHOUT_CLASSIFICATION	TODO: changed for UML 2.x
WITHOUT_CLASSIFICATION	TODO: gone from UML 2
WITHOUT_CLASSIFICATION	has <<subsystem>> stereotype
WITHOUT_CLASSIFICATION	TODO: Not exact, but close
WITHOUT_CLASSIFICATION	&& ((Action) handle).get
WITHOUT_CLASSIFICATION	Not in UML2
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Even though this is not relevant for UML2 we have code calling this that expects it for UML1.4 and we must handle it gracefully.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	return ((RedefinableElement) handle).isRoot(); TODO: One part of UML 2.1.1 spec says that this is as above, but it appears to be gone - tfm
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	lifeline.setRepresents(prop);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	A composite state contains at least one region
WITHOUT_CLASSIFICATION	an AssociationEnd is now a Property owned by an Association
WITHOUT_CLASSIFICATION	throw new NotImplementedException( "This is not a UML2 element"); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO: Exception has been removed for UML 2.x just return Signal for now - tfm
WITHOUT_CLASSIFICATION	Gone in UML 2.x - just Classifier now
WITHOUT_CLASSIFICATION	TODO: Not really the same thing, but close
WITHOUT_CLASSIFICATION	The name of the meta type is the class name (after the last .) and before the "Impl" or end of class name.
WITHOUT_CLASSIFICATION	TODO: Gone in UML 2.x Return place holder for now
WITHOUT_CLASSIFICATION	TODO: no separate SyncState in UML 2.1 - tfm
WITHOUT_CLASSIFICATION	ActionSequence.class
WITHOUT_CLASSIFICATION	ClassifierInState.class
WITHOUT_CLASSIFICATION	Argument.class
WITHOUT_CLASSIFICATION	AttributeLink.class
WITHOUT_CLASSIFICATION	UninterpretedAction.class
WITHOUT_CLASSIFICATION	Access should be fast
WITHOUT_CLASSIFICATION	Iteration should be fast
WITHOUT_CLASSIFICATION	LiteralSpecification
WITHOUT_CLASSIFICATION	i.e. eventType == Notification.REMOVE
WITHOUT_CLASSIFICATION	implements CommandStack
WITHOUT_CLASSIFICATION	list.add("OpaqueExpression");
WITHOUT_CLASSIFICATION	LiteralSpecification list.add("LiteralNull");When other ok
WITHOUT_CLASSIFICATION	list.add("LiteralInteger");When other ok
WITHOUT_CLASSIFICATION	list.add("LiteralUnlimitedNatural");When other ok
WITHOUT_CLASSIFICATION	list.add("InstanceValue");
WITHOUT_CLASSIFICATION	TODO else => Exception !
WITHOUT_CLASSIFICATION	Can't be changed
WITHOUT_CLASSIFICATION	rewrite it after change setExpression ?
WITHOUT_CLASSIFICATION	as write in UML specification, we have size(bodies)==size(langs) we must have tabValues.length%2==0
WITHOUT_CLASSIFICATION	LiteralSpecification
WITHOUT_CLASSIFICATION	Can't be set
WITHOUT_CLASSIFICATION	rewrite it after change setExpression ?
WITHOUT_CLASSIFICATION	as write in UML specification, we have size(bodies)==size(langs) we must have tabValues.length%2==0
WITHOUT_CLASSIFICATION	A Link is an Assocation in UML2.x
WITHOUT_CLASSIFICATION	Link does not exist in UML2, a link is represented just as an association
WITHOUT_CLASSIFICATION	must not be used in UML2; we model a method as a OpaqueBehavior object that already has a body, so there is no need to have an intermediate expression object
WITHOUT_CLASSIFICATION	We need a method (operation implementation) to store the method body.
WITHOUT_CLASSIFICATION	Maybe this operation already has a method, that fits our purpose? In this case, try to reuse it, instead of creating a new implementation.
WITHOUT_CLASSIFICATION	Check, if we have to create a new implementation.
WITHOUT_CLASSIFICATION	Create a new implementation.
WITHOUT_CLASSIFICATION	And set the specification to the current operation.
WITHOUT_CLASSIFICATION	Add it to the operation's methods.
WITHOUT_CLASSIFICATION	Look, if there's already a java implementation
WITHOUT_CLASSIFICATION	Try to get the corresponding body and set it to the current body This _should_ work, if all the bodies were stored with their corresponding languages.
WITHOUT_CLASSIFICATION	Job done.
WITHOUT_CLASSIFICATION	It seems, there was no implementation of our current target language, so we just add one.
WITHOUT_CLASSIFICATION	We cannot set the body of this model element type.
WITHOUT_CLASSIFICATION	Removed from UML 2.x
WITHOUT_CLASSIFICATION	also parse 1_ or 0_N etc.
WITHOUT_CLASSIFICATION	WARNING - This has containment side effects! Eclipse UML2 will move the Property from the Classifier to the Association when the navigability is changed.
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	for other xmi files with further namespaces:
WITHOUT_CLASSIFICATION	eclipse namespaces:
WITHOUT_CLASSIFICATION	For the .uml files in the eclipse jar files, we need this:
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Not needed currently for UML 2
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	final Object scope,
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The attribute 'targetScope' of an AssociationEnd in UML1.x is no longer supported in UML2.x
WITHOUT_CLASSIFICATION	Nothing to do
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getDestination(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	in UML2, we model a method as a Behavior (initially OpaqueBehavior)
WITHOUT_CLASSIFICATION	The interface realization will be created in the client namespace (client is a namespace)
WITHOUT_CLASSIFICATION	Extent ignored for eUML2 implementation (required for NetBeans MDR)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getCommonTaggedValueTypes()
WITHOUT_CLASSIFICATION	cmd.setObjects(run.getParams().get(0));
WITHOUT_CLASSIFICATION	maybe UML2 has these as constants somewhere
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	also apply subprofiles:
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Sets the value of an element#s property (tagged value). This method makes sure that a Collection of values is set if and only if the property is multivalued (upper multiplicity value greater 1), so passing a collection is safe. @see org.argouml.model.ExtensionMechanismsHelper#setValueOfTag(java.lang.Object, java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	commonTaggedValueTypes.add(org.eclipse.uml2.uml.resource.UMLResource.)
WITHOUT_CLASSIFICATION	remove base class by destroying the extension
WITHOUT_CLASSIFICATION	consider the property multiplicity
WITHOUT_CLASSIFICATION	or getDefaultValueFor(prop)?
WITHOUT_CLASSIFICATION	too bad, we choose to take the first value
WITHOUT_CLASSIFICATION	ready to set the value finally
WITHOUT_CLASSIFICATION	in case of a tagged value, the type shouldn't be set here
WITHOUT_CLASSIFICATION	not implementable in UML2, because property is missing
WITHOUT_CLASSIFICATION	also unapply subprofiles:
WITHOUT_CLASSIFICATION	also define subprofiles:
WITHOUT_CLASSIFICATION	{AssociationRole.class, ClassifierRole.class, },
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	{Link.class, Instance.class, }, {Transition.class, StateVertex.class, },
WITHOUT_CLASSIFICATION	{Message.class, ClassifierRole.class },
WITHOUT_CLASSIFICATION	Note for UML2 the aggregation ends are swapped
WITHOUT_CLASSIFICATION	Extend, but only between two use cases. Remember we draw from the extension port to the base port.
WITHOUT_CLASSIFICATION	in UML2 subsystem is a Component with <<subsystem>> stereotype so this must occur after the metaTypes.getComponent() case
WITHOUT_CLASSIFICATION	find the passed in container in validContainmentMap
WITHOUT_CLASSIFICATION	determine if metaType is a valid element for container
WITHOUT_CLASSIFICATION	UML 1.4.2 Spec section 4.5.3.20 [5] A GeneralizableElement may only be a child of GeneralizableElement of the same kind.
WITHOUT_CLASSIFICATION	specifies valid elements for a Region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	valid elements for a Profile to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a class to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a classifier to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Interface to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Signal to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Actor to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Component to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Node to contain
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	A list of valid connections between elements, the connection type first and then the elements to be connected
WITHOUT_CLASSIFICATION	If there isn't a 3rd column then this represents a connection of elements of the same type.
WITHOUT_CLASSIFICATION	If there is a 3rd column then this represents a connection of between 2 different types of element.
WITHOUT_CLASSIFICATION	If the array hasn't been flagged to indicate otherwise swap elements the elemnts and add again.
WITHOUT_CLASSIFICATION	specifies valid elements for a DataType to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Operation to contain
WITHOUT_CLASSIFICATION	valid elements for a Stereotype to contain
WITHOUT_CLASSIFICATION	valid elements for an Action to contain
WITHOUT_CLASSIFICATION	trying to get a built-in standard profile from eclipse UML2
WITHOUT_CLASSIFICATION	Removed from UML 2
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Roll back transaction to remove any partial results read
WITHOUT_CLASSIFICATION	We shouldn't get here, but just in case... We want a wide exception catcher to make sure our transaction always gets ended
WITHOUT_CLASSIFICATION	If we can find a nested SAX exception, it will have information on the line number, etc.
WITHOUT_CLASSIFICATION	Ignore if the extent never got created or has been deleted
WITHOUT_CLASSIFICATION	InputSource xformedInput = chainedTransform(transformFiles, pIs);
WITHOUT_CLASSIFICATION	InputSource xformedInput = chainedTransform(transformFiles, pIs);
WITHOUT_CLASSIFICATION	@see org.argouml.model.XmiReader#getXMIUUIDToObjectMap()
WITHOUT_CLASSIFICATION	Set up reader to be first filter in chain
WITHOUT_CLASSIFICATION	Set up source for style sheet
WITHOUT_CLASSIFICATION	Create & set up temporary output file
WITHOUT_CLASSIFICATION	In UML2.x there is no metaclass named Method, but we use the 'method' association of BehavioralFeature
WITHOUT_CLASSIFICATION	ret.setIsLeaf(false); ret.setIsRoot(false);
WITHOUT_CLASSIFICATION	Create filter for each style sheet and chain to previous filter/reader
WITHOUT_CLASSIFICATION	Create transformer and do transformation
WITHOUT_CLASSIFICATION	Set up for next iteration
WITHOUT_CLASSIFICATION	Create & set up temporary output file
WITHOUT_CLASSIFICATION	Silently ignore anything specified by caller attempt to continue
WITHOUT_CLASSIFICATION	we presume the stream is encoded using the default char encoding
WITHOUT_CLASSIFICATION	Delete the old extent first
WITHOUT_CLASSIFICATION	LOG.log(Level.WARNING, "Unable to find extent " + extent);
WITHOUT_CLASSIFICATION	Set the storage id for our repository so that MofIds will be unique (they are composed as "storageId":"serialNumber"). NOTE: The storage manager only looks for a few property names such as the StorageFactoryClassName. Everything else needs to be prefixed with "MDRStorageProperty." which gets deleted from the property name before it and its associated value are copied to an internal property table separate from the system property table.
WITHOUT_CLASSIFICATION	Connect to the repository
WITHOUT_CLASSIFICATION	Create an extent and read in our metamodel (M2 model)
WITHOUT_CLASSIFICATION	Create and start event pump first so it's available for all others
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDiagramInterchangeModel()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getFacade()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelEventPump()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsHelper()
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Disable event delivery during model load
WITHOUT_CLASSIFICATION	If we've got a streaming input, copy it to make sure we'll be able to rewind it if necessary
WITHOUT_CLASSIFICATION	Use a transaction to avoid the performance penalty (3x) of MDR's autocommit mode
WITHOUT_CLASSIFICATION	If a UML 1.3 file, attempt to upgrade it to UML 1.4
WITHOUT_CLASSIFICATION	Roll back transaction from first attempt & start new one
WITHOUT_CLASSIFICATION	Clear the associated ID maps & reset starting collection
WITHOUT_CLASSIFICATION	Make sure we always have a default extent. The old extent will get deleted as part of creating the new extent.
WITHOUT_CLASSIFICATION	DataTypes is next so it's available for Kinds, ModelManagement, & Extensions
WITHOUT_CLASSIFICATION	Initialize remaining factories and helpers (but defer heavyweight ones until needed)
WITHOUT_CLASSIFICATION	Create a default extent for the user UML model. This will get replaced if a new model is read in from an XMI file.
WITHOUT_CLASSIFICATION	NOTE: If we switch to a persistent repository like the b-tree repository we'll want to keep the old extent(s) around
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCopyHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getChangeableKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getAggregationKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getPseudostateKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getScopeKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getConcurrencyKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDirectionKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getOrderingKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.CommonBehaviorHelper#setNodeInstance(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	Elements created after file load won't have index entries
WITHOUT_CLASSIFICATION	Normally the extent should exist already, but in the case of making an empty project, we may not have an extent yet, so create a default extent
WITHOUT_CLASSIFICATION	Private constructor for common work needed by both public constructors.
WITHOUT_CLASSIFICATION	end our transaction
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getAllPossibleStereotypes(java.util.Collection, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getCommonTaggedValueTypes()
WITHOUT_CLASSIFICATION	there is nothing to do in UML1.4
WITHOUT_CLASSIFICATION	forbid instantiation
WITHOUT_CLASSIFICATION	MDR classes may have a UML or Uml prefix which should be removed.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	@see org.argouml.model.MetaTypes#getAbstraction()
WITHOUT_CLASSIFICATION	Delete Stimulii which have this as their dispatchAction
WITHOUT_CLASSIFICATION	Delete Messages which have this as their action
WITHOUT_CLASSIFICATION	Delete LinkEnds
WITHOUT_CLASSIFICATION	Delete AttributeLinks where this is the value
WITHOUT_CLASSIFICATION	Delete Stimuli which have this as a Sender or Receiver
WITHOUT_CLASSIFICATION	binary link
WITHOUT_CLASSIFICATION	Delete all SendActions which have this as signal
WITHOUT_CLASSIFICATION	Delete all SignalEvents which have this as the signal
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#deleteCollection(java.util.Collection)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getDestination(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	Text was stored in name in UML 1.3
WITHOUT_CLASSIFICATION	The name of the meta type is the class name (after the last .) and before the next $ or end of class name.
WITHOUT_CLASSIFICATION	Delete CollaborationInstanceSets where this is the last participatingInstance
WITHOUT_CLASSIFICATION	Delete InteractionInstanceSets where this is the last participatingStimulus
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	this doesn't support I18N or multiple states, but it's just a default
WITHOUT_CLASSIFICATION	Partitions are composite elements and will get deleted implicitly Partition contents don't need to be deleted or checked
WITHOUT_CLASSIFICATION	@see org.netbeans.api.xmi.XMIReferenceProvider#getReference(javax.jmi.reflect.RefObject)
WITHOUT_CLASSIFICATION	Look for an existing reference matching our MofID
WITHOUT_CLASSIFICATION	probably redundant - just in case
WITHOUT_CLASSIFICATION	delete Messages which have this as sender or receiver
WITHOUT_CLASSIFICATION	Helper interfaces and methods.
WITHOUT_CLASSIFICATION	CHECKSTYLE:OFF - ignore too many parameters since API is fixed by MDR
WITHOUT_CLASSIFICATION	CHECKSTYLE:ON
WITHOUT_CLASSIFICATION	Shorthand notation for convenience
WITHOUT_CLASSIFICATION	Quick exit if it's a transaction event (we get a lot of them and they are all ignored)
WITHOUT_CLASSIFICATION	The 4-arg version of this method depends on this ordering. Don't change it!
WITHOUT_CLASSIFICATION	InteractionInstanceSets will get deleted automatically because they are associated by composition
WITHOUT_CLASSIFICATION	If this is the only message contained in the Interaction we delete the Interaction
WITHOUT_CLASSIFICATION	Object from a different file, register with superclass so it can resolve all references
WITHOUT_CLASSIFICATION	@see org.netbeans.lib.jmi.xmi.XmiContext#getReference(java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	/ Begin AndroMDA Code /
WITHOUT_CLASSIFICATION	if the model URL has a suffix of '.zip' or '.jar', get the suffix without it and store it in the urlMap
WITHOUT_CLASSIFICATION	Several tries to construct a URL that really exists.
WITHOUT_CLASSIFICATION	If systemId is publicId previously mapped from a systemId, try to use the systemId.
WITHOUT_CLASSIFICATION	Try to find suffix in module list.
WITHOUT_CLASSIFICATION	search the classpath
WITHOUT_CLASSIFICATION	Give up and let superclass deal with it.
WITHOUT_CLASSIFICATION	remove the first prefix because it may be an archive (like magicdraw)
WITHOUT_CLASSIFICATION	We've got a profile read pending - handle it ourselves now
WITHOUT_CLASSIFICATION	shouldn't happen
WITHOUT_CLASSIFICATION	Otherwise if it's not something we've already read, just punt to the super class.
WITHOUT_CLASSIFICATION	Unfortunately the MDR super implementation throws DebugException with just the message from the causing exception rather than nesting the exception itself, so we don't have all the information we'd like
WITHOUT_CLASSIFICATION	Only add MOF elements, not primitive datatypes
WITHOUT_CLASSIFICATION	Only add MOF elements, not primitive datatypes
WITHOUT_CLASSIFICATION	For Transition use indirection through target StateVertex
WITHOUT_CLASSIFICATION	Look for an existing reference matching our MofID
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Get all (UML) metaclasses
WITHOUT_CLASSIFICATION	Object[] args = { typeName, elemName }; misc.name.element-import = Imported {0}: {1} return Translator .localize("misc.name.element-import", args);
WITHOUT_CLASSIFICATION	Although this only handles one level of package, it is OK for UML 1.4 because of clustering Get the right UML package in the extent
WITHOUT_CLASSIFICATION	Return the metatype proxy
WITHOUT_CLASSIFICATION	we must find out if the activator itself does not have message as it's activator
WITHOUT_CLASSIFICATION	An activator can't also be a predecessor of a message
WITHOUT_CLASSIFICATION	This double 'for' loop may be optimised as follows: - Use arrays in stead of a Set for bases - Have the second loop start from the element after base1 ... but I chose not to do this, since the gain is small, and this is only used for a lazily filled combo. BTW: This is also used by Notation.
WITHOUT_CLASSIFICATION	An Association can only have a single unnamed ClassifierRole, so
WITHOUT_CLASSIFICATION	if we are unnamed eliminate all classifiers which are already the base of some role
WITHOUT_CLASSIFICATION	eliminate Classifiers which already have an unnamed role
WITHOUT_CLASSIFICATION	WFR 2.10.3.3 #4
WITHOUT_CLASSIFICATION	eliminate Classifiers which already have an unnamed role
WITHOUT_CLASSIFICATION	We need to verify that ns is a Package, if not - find its parent package! Otherwise this causes an exception when creating a sequence diagram for a ClassifierRole.
WITHOUT_CLASSIFICATION	No initialization currently
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if we are unnamed eliminate all classifiers which are already the base of some role
WITHOUT_CLASSIFICATION	|| context instanceof Collaboration || context instanceof Model
WITHOUT_CLASSIFICATION	@see org.netbeans.lib.jmi.xmi.XMIHeaderProvider#writeHeader(java.io.Writer)
WITHOUT_CLASSIFICATION	NOTE: The <XMI.header></XMI.header> is provided for us
WITHOUT_CLASSIFICATION	Not implemented in MDR
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addClassModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	Clean up index entries
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create a change event for the corresponding property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create an event for the other end of the association
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	and a change event for that end
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create a change event for the associated property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create an event for the other end of the association
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create a change event for the associated property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Cut down on debugging noise
WITHOUT_CLASSIFICATION	Unregister deleted instances after all events have been delivered
WITHOUT_CLASSIFICATION	Any given listener is only called once even if it is registered for multiple relevant matches
WITHOUT_CLASSIFICATION	This will include all subtypes registered
WITHOUT_CLASSIFICATION	(LOG.isDebugEnabled()
WITHOUT_CLASSIFICATION	For debugging you probably want either this OR the logging for every event which is fired - not both
WITHOUT_CLASSIFICATION	LOG.isDebugEnabled()
WITHOUT_CLASSIFICATION	Fetch the key before going in synchronized mode
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, " Class " + name + " has subtypes : " + names.get(name));
WITHOUT_CLASSIFICATION	convert classname to RefObject
WITHOUT_CLASSIFICATION	If we don't have a MofClass, see if we can get one from the instance
WITHOUT_CLASSIFICATION	If we still don't have a MofClass, something's wrong
WITHOUT_CLASSIFICATION	throw new IllegalArgumentException("Property '" + attribute + "' doesn't exist in metamodel");
WITHOUT_CLASSIFICATION	If there isn't a 3rd column then this represents a connection of elements of the same type.
WITHOUT_CLASSIFICATION	Save the model (current)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ChangeableKind#getAddOnly()
WITHOUT_CLASSIFICATION	Lookup primary key, creating new entry if needed
WITHOUT_CLASSIFICATION	Lookup primary key, creating new entry if needed
WITHOUT_CLASSIFICATION	If there are no subkeys, register using our special value to indicate that this is a primary key only registration
WITHOUT_CLASSIFICATION	UML 2.x only
WITHOUT_CLASSIFICATION	UML 2.x only
WITHOUT_CLASSIFICATION	UML 2.x only
WITHOUT_CLASSIFICATION	Look for a TagDefinition matching the given name
WITHOUT_CLASSIFICATION	Create a new TagDefinition if none found
WITHOUT_CLASSIFICATION	only add all if there are some to add.
WITHOUT_CLASSIFICATION	Clear target so that multiple copies have no effect (other than inefficiency)
WITHOUT_CLASSIFICATION	Delete all TaggedValues with this type
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. @param source The stereotype to copy from. @param target The object becoming a copy.
WITHOUT_CLASSIFICATION	"Element");
WITHOUT_CLASSIFICATION	Well formedness rule 4.12.3.1 CompositeState [4] There have to be at least two composite substates in a concurrent composite state. If this is broken by deletion of substate then we delete the other remaining substates.
WITHOUT_CLASSIFICATION	The effect will get deleted automatically by MDR, unlike the Guard.
WITHOUT_CLASSIFICATION	Although Usage & Permission are Dependencies, they need to be include separately because of the way lookup works
WITHOUT_CLASSIFICATION	The following is specifically for Realizations
WITHOUT_CLASSIFICATION	The next 3 restrictions for Abstraction seem to be Argo specific not something the UML spec requires - tfm - 20070215
WITHOUT_CLASSIFICATION	A list of valid connections between elements, the connection type first and then the elements to be connected
WITHOUT_CLASSIFICATION	TODO: constraints TODO: required tags
WITHOUT_CLASSIFICATION	specifies valid elements for a Model to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Model to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a classifier to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Interface to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Signal to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Actor to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Node to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Enumeration to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a DataType to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Operation to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Event to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an State to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an CallState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an SimpleState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an SubactivityState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an ActionState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an ActionState to contain
WITHOUT_CLASSIFICATION	supports implementation of some special elements not supported by buildNode
WITHOUT_CLASSIFICATION	the list of namespaces to return
WITHOUT_CLASSIFICATION	If our map has any entries for this type, it's a connection type
WITHOUT_CLASSIFICATION	Get the list of valid model item pairs for the given connection type
WITHOUT_CLASSIFICATION	See if there's a pair in this list that match the given model elements
WITHOUT_CLASSIFICATION	find the passed in container in validContainmentMap
WITHOUT_CLASSIFICATION	determine if metaType is a valid element for container
WITHOUT_CLASSIFICATION	UML 1.4.2 Spec section 4.5.3.20 [5] A GeneralizableElement may only be a child of GeneralizableElement of the same kind.
WITHOUT_CLASSIFICATION	Begin a transaction - we'll do a bunch of reads first to collect a set of elements to delete - then delete them all
WITHOUT_CLASSIFICATION	no else here to make sure Classifier with its double inheritance goes ok
WITHOUT_CLASSIFICATION	no else here to make sure AssociationClass goes ok
WITHOUT_CLASSIFICATION	no else to handle multiple inheritance of linkobject
WITHOUT_CLASSIFICATION	If we get this with the repository locked, it means our root model element was already deleted. Nothing to do...
WITHOUT_CLASSIFICATION	Our wrapped version of the same error
WITHOUT_CLASSIFICATION	end our transaction
WITHOUT_CLASSIFICATION	if there are no owned elements then return empty list
WITHOUT_CLASSIFICATION	This enforces the following well-formedness rule. <p>Well formedness rule 4.12.3.1 CompositeState [4] There have to be at least two composite substates in a concurrent composite state.<p> If this is broken by deletion of substate then we change the parent composite substate to be not concurrent.
WITHOUT_CLASSIFICATION	We don't care about the value - just want to see if it throws
WITHOUT_CLASSIFICATION	Recurse into ourself for each parent
WITHOUT_CLASSIFICATION	the following should always be true
WITHOUT_CLASSIFICATION	If we were handed a Classifier to start, this must be a Classifier
WITHOUT_CLASSIFICATION	we have to follow the arrows..
WITHOUT_CLASSIFICATION	|| ns instanceof UseCase see comment below
WITHOUT_CLASSIFICATION	NOTE: Although WFR #3 in section 2.11.3.5 UseCase of the UML 1.4 spec says "A UseCase cannot contain any Classifiers," the OCL is actually self.contents->isEmpty which would seem to imply it can't contain any elements - tfm - 20060416
WITHOUT_CLASSIFICATION	Made following changes from OCL in UML 1.4 section 2.9.3.16: CollaborationInstance -> CollaborationInstanceSet Stimuli -> Stimulus
WITHOUT_CLASSIFICATION	A Profile is a special package having the <<profile>> stereotype which can only contain the following types
WITHOUT_CLASSIFICATION	|| modelElement instanceof StateMachine
WITHOUT_CLASSIFICATION	A Profile is a special package having the <<profile>> stereotype
WITHOUT_CLASSIFICATION	There actually don't appear to be any restrictions on the namespace for a Generalization. The UML 1.4 WFR 2.5.3.20 #3 refers to GeneralizableElements, not Generalizations - tfm
WITHOUT_CLASSIFICATION	only build a namepace if needed, with
WITHOUT_CLASSIFICATION	return struc.getOwner().getNamespace().getOwnedElement().contains( struc.getType());
WITHOUT_CLASSIFICATION	self.allConnections->forAll(r | self.namespace.allContents->includes(r.participant) )
WITHOUT_CLASSIFICATION	d.supplier.oclAsType(GeneralizableElement). allParents.oclAsType(Namespace).ownedElement->select (e | e. elementOwnership.visibility = #public)->includes (r.participant) or
WITHOUT_CLASSIFICATION	d.supplier.oclAsType(Namespace).ownedElement->select (e | e.elementOwnership.visibility = #public)->includes (r.participant) or
WITHOUT_CLASSIFICATION	d.supplier.oclAsType(Package).allImportedElements->select ( e | e. elementImport.visibility = #public) ->includes (r.participant) ) )
WITHOUT_CLASSIFICATION	Get the namespace hierarchy for each element
WITHOUT_CLASSIFICATION	Traverse the lists looking for the last (innermost) match
WITHOUT_CLASSIFICATION	This is an expensive method that we should ensure is called rarely. Hence info level to track easily.
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations
WITHOUT_CLASSIFICATION	We silently ignore requests which conflict with UML 1.4 WFR 2.5.3.1 #3 - no aggregation for n-ary associations
WITHOUT_CLASSIFICATION	If we made something aggregate, make sure the other ends conform to UML 1.4 WFR 2.5.3.1 #2 - no more than one aggregate end
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations
WITHOUT_CLASSIFICATION	<em>Warning: when changing the implementation of this method be warned that the sequence of the if then else tree DOES matter.</em> Most notably, do not move the setNamespace method any level up in the tree.<p>
WITHOUT_CLASSIFICATION	All text was stored in name field in UML 1.3
WITHOUT_CLASSIFICATION	Returns nothing
WITHOUT_CLASSIFICATION	Boolean, String, Integer, Long, Float, Double, etc
WITHOUT_CLASSIFICATION	This method is CPU intensive and therefore needs to be as efficient as possible.
WITHOUT_CLASSIFICATION	Because we get the metatype class stripped of its reflective proxies, we need to jump through a hoop or two to find it in the metamodel, then work from there to get its proxy.
WITHOUT_CLASSIFICATION	Remove any elements not in requested namespace
WITHOUT_CLASSIFICATION	Check whether model element is contained in given namespace/container.
WITHOUT_CLASSIFICATION	Get Classifiers in Namespace
WITHOUT_CLASSIFICATION	Get Features owned by those Classifiers
WITHOUT_CLASSIFICATION	Select those Features which are BehavioralFeatures
WITHOUT_CLASSIFICATION	Should these also be deleted?
WITHOUT_CLASSIFICATION	This is silly, but for backward compatibility
WITHOUT_CLASSIFICATION	TODO: This is the 2nd part of this method:
WITHOUT_CLASSIFICATION	For a Classifier: <pre> [10] The operation allContents returns a Set containing all ModelElements contained in the Classifier together with the contents inherited from its parents. allContents : Set(ModelElement); allContents = self.contents->union( self.parent.allContents->select(e | e.elementOwnership.visibility = #public or e.elementOwnership.visibility = #protected)) where parent is defined for GeneralizableElement as: [1] The operation parent returns a Set containing all direct parents parent : Set(GeneralizableElement); parent = self.generalization.parent </pre><p>
WITHOUT_CLASSIFICATION	For a Collaboration: <pre> [1 ] The operation allContents results in the set of all ModelElements contained in the Collaboration together with those contained in the parents except those that have been specialized. allContents : Set(ModelElement); allContents = self.contents->union ( self.parent.allContents->reject ( e | self.contents.name->include (e.name) )) parent here is the GeneralizableElement definition </pre>
WITHOUT_CLASSIFICATION	wellformednessrules and preconditions
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations
WITHOUT_CLASSIFICATION	equal
WITHOUT_CLASSIFICATION	greater
WITHOUT_CLASSIFICATION	less than
WITHOUT_CLASSIFICATION	binary association
WITHOUT_CLASSIFICATION	delete LinkEnds which have this as their associationEnd
WITHOUT_CLASSIFICATION	delete AttributeLinks where this is the Attribute
WITHOUT_CLASSIFICATION	delete CreateActions which have this as their instantiation
WITHOUT_CLASSIFICATION	@see org.argouml.model.ActivityGraphsHelper#findClassifierByName( java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	Delete dependencies where this is the only client
WITHOUT_CLASSIFICATION	Delete dependencies where this is the only supplier
WITHOUT_CLASSIFICATION	delete CallActions which have this as their operation
WITHOUT_CLASSIFICATION	delete CallEvents which have this as their operation
WITHOUT_CLASSIFICATION	TODO: All the ToDos in the doCopyFoo methods below are inherited from the NSUML implementation and do not reflect new issues. One additional thing which does need to be dealt with is the copying of any attributes which have been added since this code was implemented for UML 1.3.
WITHOUT_CLASSIFICATION	Nothing more to do.
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. TODO: actions? instances? collaborations etc? @param source the source classifier @param target the target classifier
WITHOUT_CLASSIFICATION	Copy all the Features
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. TODO: generalizations, specializations? @param source the source generalizable element @param target the target generalizable element
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. TODO: template parameters, default type TODO: constraining elements TODO: flows, dependencies, comments, bindings, contexts ??? TODO: contents, residences ??? @param source the source me @param target the target me
WITHOUT_CLASSIFICATION	Nothing more to do, don't copy owned elements.
WITHOUT_CLASSIFICATION	copy raised signals:
WITHOUT_CLASSIFICATION	Set the name so that superclasses can find the newly created element in the model, if necessary.
WITHOUT_CLASSIFICATION	Note that if we're copying this element then we must also be allowed to copy other necessary objects.
WITHOUT_CLASSIFICATION	Don't explicitly check if element is null
WITHOUT_CLASSIFICATION	Return 1..1 multiplicity for empty string
WITHOUT_CLASSIFICATION	Convert "" to "0.." instead of ".."
WITHOUT_CLASSIFICATION	In this case, either the container was not set, or it was not contained in a statemachine.
WITHOUT_CLASSIFICATION	according WFR: in case of ActivityGraph only.
WITHOUT_CLASSIFICATION	For consistency with attribute and operation, give it a default name and location
WITHOUT_CLASSIFICATION	Delete Extends which have this as their only ExtensionPoint
WITHOUT_CLASSIFICATION	delete Extends where this is the base
WITHOUT_CLASSIFICATION	delete Includes where this is the addition
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Test multipe items registered for single key set
WITHOUT_CLASSIFICATION	Remove with null item should remove all entries for key
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	Need to copy the lists since we will be moving the elements one by one:
WITHOUT_CLASSIFICATION	Deleting "source" here would probably delete the parameters...
WITHOUT_CLASSIFICATION	Only set the name if it differs from the text.
WITHOUT_CLASSIFICATION	Need to copy the lists since we will be moving the elements:
WITHOUT_CLASSIFICATION	This is not necessarily the current diagram!
WITHOUT_CLASSIFICATION	Remove the old fig from the diagram, so we can draw the new one in its place:
WITHOUT_CLASSIFICATION	p.moveToTrash(source);
WITHOUT_CLASSIFICATION	As soon as we've created a notation and have registered it listener force an event to go to the listener so it draws for the first time.
WITHOUT_CLASSIFICATION	If there are no subkeys, register using our special value to indicate that this is a primary key only registration
WITHOUT_CLASSIFICATION	Made following change from OCL in UML 1.4 section 2.9.3.22: CollaborationInstance -> CollaborationInstanceSet
WITHOUT_CLASSIFICATION	If there is a 3rd column then this represents a connection of between 2 different types of element.
WITHOUT_CLASSIFICATION	Elements which will be deleted when their container is deleted don't get added to the list of elements to be deleted (but we still want to traverse them looking for other elements to be deleted)
WITHOUT_CLASSIFICATION	Technically this is legal, but a StructuralFeature should probably only ever have an owner instead of a namespace. - tfm
WITHOUT_CLASSIFICATION	We'll put the association in the namespace of whichever end is not navigable and is writeable. If they both are, we'll use the namepace of c1.
WITHOUT_CLASSIFICATION	EnumerationLiterals should get deleted implicitly since they are associated by composition
WITHOUT_CLASSIFICATION	Set the namespace to that of the base as first choice, or that of the addition as second choice.
WITHOUT_CLASSIFICATION	UML2 only
WITHOUT_CLASSIFICATION	Editor editor = Globals.curEditor(); GraphModel gm = editor.getGraphModel(); LayerDiagram lay = ((LayerDiagram) editor.getLayerManager().getActiveLayer());
WITHOUT_CLASSIFICATION	Have we handled UML2 here?
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Get all classifiers in all top level packages of all profiles
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	We got passed an unmodifiable List. Copy it and sort the result
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased( java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Set up the property panels for UML elements:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Build up an array list of the heights of each label/component pair. Heights of zero indicate a proportional height.
WITHOUT_CLASSIFICATION	Make sure the component width isn't any greater than its maximum allowed width
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	This can throw an exception if the target has been deleted. We don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. Instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Do nothing by design.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Allow null
WITHOUT_CLASSIFICATION	This is explained by WFR 2 of a StructuralFeature: The type of a StructuralFeature must be a Class, DataType, or Interface. @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	restricting types for tagged values
WITHOUT_CLASSIFICATION	classifier is way too much in UML 2.x
WITHOUT_CLASSIFICATION	the minimum set of standard types
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	keep them sorted
WITHOUT_CLASSIFICATION	We got passed an unmodifiable List. Copy it and sort the result
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#addOtherModelEventListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	Make a copy of the modelelements:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	the method
WITHOUT_CLASSIFICATION	the selected operation
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildPopup(javax.swing.JPopupMenu, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#removeOtherModelEventListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	base is already set to this assoc...
WITHOUT_CLASSIFICATION	This check is needed, otherwise the setbase() below gives an exception.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Just in case the existing selected element is from elsewhere make sure it is in the list
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	The selected value may be "" to clear the represented classifier.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	private boolean mustRefresh;
WITHOUT_CLASSIFICATION	mustRefresh = true;
WITHOUT_CLASSIFICATION	This should not happen.
WITHOUT_CLASSIFICATION	if it has no language, then we assume it is not an instance of OpaqueExpression, so we leave it null and handle elsewhere
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	/ Build the field /
WITHOUT_CLASSIFICATION	/ Add field(s) to panel /
WITHOUT_CLASSIFICATION	click on the already selected value must not call setValue
WITHOUT_CLASSIFICATION	The 2 Radios have only one information.
WITHOUT_CLASSIFICATION	Update the model, and then notify
WITHOUT_CLASSIFICATION	When call by contructor : no one is selected
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	private boolean mustRefresh;
WITHOUT_CLASSIFICATION	mustRefresh = true;
WITHOUT_CLASSIFICATION	This should not happen.
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	We need to to this otherwise there is no notification and diagram isn't change
WITHOUT_CLASSIFICATION	needed for notification
WITHOUT_CLASSIFICATION	if the control is a panel, add it
WITHOUT_CLASSIFICATION	To be really sure, let's add the operation that is linked to the action in the model, too - if it is not listed yet. We need this, incase an operation is moved out of the package, or maybe with imported XMI...
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	fill the list with items
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	in UML2, the target is already the "expression" (Opaque...)
WITHOUT_CLASSIFICATION	reuse Opaque..., just set it's attributes
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event. DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox#doIt(ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	p = new UMLValueSpecificationPanel(model, propertyName);
WITHOUT_CLASSIFICATION	MModelElement
WITHOUT_CLASSIFICATION	if not, it is a control and must be labeled...
WITHOUT_CLASSIFICATION	only association end has an aggregation option box
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Create it [Here, OpaqueExpression which is the first choice] Note that if we edit the Initial value in the diagram (double clic) it was replaced by an OpaqueExpression
WITHOUT_CLASSIFICATION	Destroy it
WITHOUT_CLASSIFICATION	title = "" because already done for Optional
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	We got passed an unmodifiable List. Copy it and sort the result
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Force the parent to redraw
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Do not set buildingModel = false here, otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	Add new listeners:
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	TODO: For large lists, this is doing a linear search of literally thousands of elements
WITHOUT_CLASSIFICATION	TODO: Here too?
WITHOUT_CLASSIFICATION	Check against "" is needed for backward compatibility. Don't remove without checking subclasses and warning downstream developers - tfm - 20081211
WITHOUT_CLASSIFICATION	start of interval
WITHOUT_CLASSIFICATION	end of interval
WITHOUT_CLASSIFICATION	in middle of interval
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	Add new listeners:
WITHOUT_CLASSIFICATION	Don't try to test this if we're removing the element
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	It would be better if we didn't need the container to get the target. This constructor can have zero parameters as soon as we improve targetChanged.
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getElementAt(int)
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getSize()
WITHOUT_CLASSIFICATION	catch callers attempting to use one without other
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#getSelectedItem()
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#remove(int, int)
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread-safe
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Do nothing by design.
WITHOUT_CLASSIFICATION	NOTE: This may be called from a different thread, so we need to be careful of the threading restrictions imposed by AbstractDocument for mutators to be sure we don't deadlock.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox#buildModel()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	super(new LabelledLayout());
WITHOUT_CLASSIFICATION	c.insets = new Insets(1, 1, 1, 1);
WITHOUT_CLASSIFICATION	Get the list: OpaqueExpression, LiteralString,...
WITHOUT_CLASSIFICATION	By default, the first value of the combobox is selected.
WITHOUT_CLASSIFICATION	Get current InitialValue
WITHOUT_CLASSIFICATION	Select the Current type in the combobox
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	default : 0 => OpaqueExpression set to 1 for test
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Create the body and language Field
WITHOUT_CLASSIFICATION	Create other panel element
WITHOUT_CLASSIFICATION	create Panel containing the previous field
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	Our comparator will throw an InvalidElementException if the old list contains deleted elements (eg after a new project is loaded) so remove all the old contents first
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	There are no composite states, so this will work:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Allow null
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	Get all classifiers in our model TODO: We need the property panels to have some reference to the project they belong to instead of using deprecated functionality
WITHOUT_CLASSIFICATION	Get all classifiers in all top level packages of all profiles
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	The selected value may be "" to clear the represented operation.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	ignored - we just skipped inserting it in our document
WITHOUT_CLASSIFICATION	Allow null
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	Make sure it's parseable as an number
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#setItem(java.lang.Object)
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getEditorComponent()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#selectAll()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getItem()
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox2#UMLComboBox2( UMLComboBoxModel, Action)
WITHOUT_CLASSIFICATION	next statement is necessary to update the textfield if the selection is equal to what was allready selected
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#setItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getEditorComponent()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#selectAll()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getItem()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Temporary until SimpleListModel is used for all
WITHOUT_CLASSIFICATION	Temporary until SimpleListModel is used for all
WITHOUT_CLASSIFICATION	Create popup tool if we have a single row
WITHOUT_CLASSIFICATION	Create add and remove buttons if needed first
WITHOUT_CLASSIFICATION	then any new buttons
WITHOUT_CLASSIFICATION	Pushing this to the end of the AWT thread seems to be the only way to get this to update correctly
WITHOUT_CLASSIFICATION	button action:
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	TODO: Probably really want to cancel editing ((FigTextEditor) focusOwner).cancelEditing();
WITHOUT_CLASSIFICATION	The 5 main component : 2 label, a panel for langage , a panel with button, a textarea
WITHOUT_CLASSIFICATION	Translator.localize("button.delete")
WITHOUT_CLASSIFICATION	Copy previous element
WITHOUT_CLASSIFICATION	Copy next element
WITHOUT_CLASSIFICATION	Translator.localize("button.move-up")
WITHOUT_CLASSIFICATION	Copy in memory the current
WITHOUT_CLASSIFICATION	Copy the previous value in the current
WITHOUT_CLASSIFICATION	Copy the current in the previous
WITHOUT_CLASSIFICATION	Copy in memory the current
WITHOUT_CLASSIFICATION	Copy the next value in the current
WITHOUT_CLASSIFICATION	Copy the current in the next
WITHOUT_CLASSIFICATION	Layout
WITHOUT_CLASSIFICATION	The 2 component: a textField and a list
WITHOUT_CLASSIFICATION	Layout
WITHOUT_CLASSIFICATION	Extract the icon that is used by the tree control for the current look and feel
WITHOUT_CLASSIFICATION	Add a new entry in the list and select it. Translator.localize("button.add") +
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	Eclipse UML2 implementation classes often start with "UML" $NON-NLS-1$
WITHOUT_CLASSIFICATION	Eclipse UML2 implementation classes end with "Impl" $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ Make sure we have a recognized file extension $NON-NLS-1$
WITHOUT_CLASSIFICATION	If the eUML.resources system property is defined then we are in a stand alone application, else we're in an Eclipse plug in. The eUML.resource should contain the path to the org.eclipse.uml2.uml.resource jar plugin. $NON-NLS-1$
WITHOUT_CLASSIFICATION	slope of the line we're finding the normal to is slope, and the normal is the negative reciprocal slope is (p1.y - p2.y) / (p1.x - p2.x) so recip is - (p1.x - p2.x) / (p1.y - p2.y)
WITHOUT_CLASSIFICATION	UML1.4 only
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	Set the child components to the heights in the array list calculating the height of any proportional component on the fly.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionSetMultiplicity#setSelectedItem( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	If we have a model but no list then build the list with preferred constructor. Eventually all lists should be built this way.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent )
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#removeOtherModelEventListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange( java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	If the component is a JLabel which has another component assigned then position/size the label and calculate the size of the registered component
WITHOUT_CLASSIFICATION	If the child component is resizable then we don't know it's actual size yet. It will be calculated later as a proportion of the available left over space. For now this is flagged as zero.
WITHOUT_CLASSIFICATION	If a preferred height is not given or is the same as the minimum height then fix the height of this row.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event. DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	We only have this here until we have stereotypes list on property panel
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	The property value has changed so rebuild our view. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	So, we found a Classifier that is not a ClassifierInState. And at least one state has been selected. Well, let's correct that:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox#UMLComboBox( UMLComboBoxModel, Action, boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Layout
WITHOUT_CLASSIFICATION	Language has changed
WITHOUT_CLASSIFICATION	Translator.localize("button.move-down")
WITHOUT_CLASSIFICATION	Object icon = ResourceLoaderWrapper.lookupIcon(s); putValue(Action.NAME, Translator.localize(s)); putValue(Action.SMALL_ICON, icon); Set the tooltip string: putValue(Action.SHORT_DESCRIPTION, Translator.localize(s));
WITHOUT_CLASSIFICATION	MDR has a hardcoded printStackTrace on all exceptions, even if they're caught, which is unsightly, so we handle unknown elements ourselves rather than letting MDR throw an exception for us to catch. org/netbeans/lib/jmi/util/Logger.java This can be uses to disable logging. Default output is System.err setProperty("org.netbeans.lib.jmi.Logger.fileName", "") org.netbeans.mdr.Logger The property org.netbeans.lib.jmi.Logger controls the minimum severity level for logging
WITHOUT_CLASSIFICATION	Commit our transaction
WITHOUT_CLASSIFICATION	not in UML1.4
WITHOUT_CLASSIFICATION	Ignore any error. The transaction may already have been unwound as part of exception processing by MDR
WITHOUT_CLASSIFICATION	Give the resolver.getIdToObjectMap() entries priority over entries with the same UUID from resolver.getIdToObjectMaps() because entries in resolver.getIdToObjectMaps() are historic.
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMetaTypes()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMessageSort()
WITHOUT_CLASSIFICATION	@see org.argouml.model.CommonBehaviorHelper#setReceiver(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	Nothing to do - we get all events automatically
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	Remember the system id of our root document so that we can write out profiles and linked models to a different file if requested
WITHOUT_CLASSIFICATION	For now just skip registering this and ignore the request, but the real issue is that MagicDraw serializes the same object in two different composition associations, first in the referencing file and second in the referenced file
WITHOUT_CLASSIFICATION	if we've found the module model, log it and place it in the map so we don't have to find it if we need it again.
WITHOUT_CLASSIFICATION	/ End AndroMDA Code /
WITHOUT_CLASSIFICATION	returns a List
WITHOUT_CLASSIFICATION	Simulates UML2 getting the aggregation from the opposite end
WITHOUT_CLASSIFICATION	find the bases of the connected classifierroles so that we can see what associations are between them. If there are bases then the associations between those bases form the possible bases. Otherwise the bases are formed by all associations in the namespace of the collaboration
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#critique(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedDecisions()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#addSupportedDecision(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedGoals()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#addSupportedGoal(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#addKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#expand(java.lang.String, ListSet)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#isActive()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#isEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedDecisions()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedGoals()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	Just returns the descr param. @see org.argouml.cognitive.Poster#expand(java.lang.String, ListSet)
WITHOUT_CLASSIFICATION	Get the generic clarifier for this designer/poster. @see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#snooze()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#unsnooze()
WITHOUT_CLASSIFICATION	Does not do anything. @see org.argouml.cognitive.Poster#fixIt(org.argouml.cognitive.ToDoItem, java.lang.Object)
WITHOUT_CLASSIFICATION	Just returns false. @see org.argouml.cognitive.Poster#canFixIt(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#expand(java.lang.String, org.argouml.cognitive.ListSet)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#fixIt(org.argouml.cognitive.ToDoItem, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.WizStep#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoGeneratorEventListener#generatorChanged(org.argouml.application.events.ArgoGeneratorEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoGeneratorEventListener#generatorAdded(org.argouml.application.events.ArgoGeneratorEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoGeneratorEventListener#generatorRemoved(org.argouml.application.events.ArgoGeneratorEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.NotationName#getConfigurationValue()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.NotationName#sameNotationAs(org.argouml.notation.NotationName)
WITHOUT_CLASSIFICATION	Add an element listener and remember the registration. @param element element to listen for changes on @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	Utility function to add a listener for a given property name and remember the registration. @param element element to listen for changes on @param property name of property to listen for changes of @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	Utility function to add a listener for an array of property names and remember the registration. @param element element to listen for changes on @param property array of property names (Strings) to listen for changes of @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	Utility function to remove an element listener and adapt the remembered list of registration. @param element element to listen for changes on @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#updateListener(java.beans.PropertyChangeListener, java.lang.Object, java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse( java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationChanged(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationAdded(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationRemoved(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationProviderAdded(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationProviderRemoved(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.SAXParserBase#handleStartElement( org.argouml.persistence.XMLElement)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.SAXParserBase#handleEndElement( org.argouml.persistence.XMLElement)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.SAXParserBase#isElementOfInterest(String)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#getMainTag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.XmiFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#getMainTag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.XMLTokenTableBase#setupTokens()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#getMainTag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#load(org.argouml.kernel.Project, java.io.InputStream)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#save(org.argouml.kernel.ProjectMember, java.io.OutputStream)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.XMLTokenTableBase#setupTokens()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.ProfileManager#lookForRegisteredProfile(java.lang.String)
WITHOUT_CLASSIFICATION	@param pc @see org.argouml.profile.ProfileManager#applyConfiguration(org.argouml.kernel.ProfileConfiguration)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.HashMap, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Critic#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.OclExpressionEvaluator#evaluate(java.util.HashMap, org.argouml.profile.internal.ocl.ModelInterpreter, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.HashMap, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.uml14.Bag#count(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#setMaximumProgress(int)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)
WITHOUT_CLASSIFICATION	Returns the target of this tab. @see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	Refresh the text of the tab. @see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.AbstractArgoJPanel#spawn()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	Style panels only apply when a Fig is selected. @see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	Report a progress to the ProgressMonitor window. @see org.argouml.persistence.ProgressListener#progress(org.argouml.persistence.ProgressEvent)
WITHOUT_CLASSIFICATION	Report a progress to the ProgressMonitor window. @see org.argouml.application.api.ProgressMonitor#updateProgress(int)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#isCanceled()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#close()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyMessage(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyNullAction()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.CommandLineInterface#doCommand(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.PerspectiveManagerListener#addPerspective(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.PerspectiveManagerListener#removePerspective(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementChanged(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementAdded(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementRemoved(java.lang.Object)
WITHOUT_CLASSIFICATION	the model structure has changed significantly, eg a new project. @see org.argouml.ui.explorer.TreeModelUMLEventListener#structureChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	NOTE: No longer a separate type in UML 2.1
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getType()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoItem#deselect()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoItem#select()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getType()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.checklist.CheckItem#expand(java.lang.String, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#hit(int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#hit(int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#predicate( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(Object, Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.UMLWizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.WizMEName#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.WizMEName#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.profile.Profile#getProfileIdentifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canFinish()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.UMLWizard#setSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canGoNext()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canFinish()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#hit(int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canFinish()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getType()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.ProjectMember#repair()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#add(org.argouml.uml.diagram.layout.LayoutedObject)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#remove(org.argouml.uml.diagram.layout.LayoutedObject)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#getObjects()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#getObject(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#layout()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getDependentElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#getMinimumDiagramSize()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getOwner()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.activity.ui.FigActionState#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#makeSelection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#initNotationProviders(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateNameText()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#clone()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#addEnclosedFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.activity.ui.SelectionActionState#getNewNodeType(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	If the new encloser is null, and the old one is a Component, then the "enclosed" Fig has been moved on the diagram. This causes the model to be adapted as follows: remove the elementResidence between the "enclosed" and the oldEncloser. @see org.argouml.ui.ArgoDiagram#changeFigEncloser(org.tigris.gef.presentation.FigNode, org.tigris.gef.presentation.FigNode, org.tigris.gef.presentation.FigNode)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.UMLMutableGraphSupport#isRemoveFromDiagramAllowed(Collection)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigHistoryState#getH()
WITHOUT_CLASSIFICATION	The Transition has a name text box. It contains: <ul> <li>The event-signature <li>The guard condition between [] <li>The action expression </ul><p> The content of the text box is generated by its own notationProvider. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getDestination()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getSource()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	Update the text labels. @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Update the text labels and listeners. @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigHistoryState#getH()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getDependentElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.LayoutedEdge#layout()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getTypeOrderNumer()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#calculateWeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getRank()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getWeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#isStandalone()
WITHOUT_CLASSIFICATION	Nothing is editable, since a Link takes its identity from the Association. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit( org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	Listen also to the association, of which the link is an instantiation, since we want to update the rendering when the association name changes. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getDestination()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getSource()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#setNamespace(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateStereotypeText()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#getImportLevel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.StereotypeContainer#isStereotypeVisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.StereotypeContainer#setStereotypeVisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.VisibilityContainer#isVisibilityVisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.VisibilityContainer#setVisibilityVisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateStereotypeText()
WITHOUT_CLASSIFICATION	Only refresh the tab if the bounds propertyChange event arrives. @see org.argouml.ui.StylePanel#refresh(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	Listen for a RemoveAssociationEvent between the comment and the annotated element. When recieved delete the CommentEdge and this FigEdgeNote. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	If we're drawing to an edge then only allow if the start is a comment @see org.argouml.uml.diagram.ui.ModeCreateGraphEdge#isConnectionValid(org.tigris.gef.presentation.Fig, org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.StylePanelFig#setTargetBBox()
WITHOUT_CLASSIFICATION	Only refresh the tab if the bounds propertyChange event arrives. @see org.argouml.ui.StylePanel#refresh(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.StylePanelFig#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	If we're drawing to an edge then only allow if the start is a comment @see org.argouml.uml.diagram.ui.ModeCreateGraphEdge#isConnectionValid(org.tigris.gef.presentation.Fig, org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.Relocatable#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.Relocatable#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#getInputSourceEncoding()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.PathContainer#isPathVisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.PathContainer#setPathVisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNameFig()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNameBounds()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	The only thing we need to deal with is updating is the condition text. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#isCreateDiagramsSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#isMinimiseFigsSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingsInternal#isDiagramLayoutSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingsInternal#isDescendSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingsInternal#isChangedOnlySelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#getInputSourceEncoding()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#getImportLevel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isCreateDiagramsChecked()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isMinimiseFigsChecked()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isDiagramLayoutSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isDescendSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isChangedOnlySelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.SettingsTypes.BooleanSelection#isSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.SettingsTypes.BooleanSelection#getDefaultValue()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingTypes.UniqueSelection#getDefaultSelection()
WITHOUT_CLASSIFICATION	We return a new List with the options instead of the options themself because we don't want the user to be able to change the options. @see org.argouml.uml.reveng.SettingsTypes.UniqueSelection#getOptions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingTypes.UniqueSelection#setSelection(int)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#close()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#isCanceled()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyMessage(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyNullAction()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#updateMainTask(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#updateSubTask(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProgressListener#progress(org.argouml.persistence.ProgressEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionNewDiagram#createDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.PropPanel#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#getSourcePath(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#getSourcePathSettings()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#setSourcePath(org.argouml.uml.ui.SourcePathTableModel)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#setSourcePath( java.lang.Object, java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#deleteSourcePath(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#getAllModelElementsWithSourcePath()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox2#UMLComboBox2( UMLComboBoxModel2, Action, boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.PropPanel#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#getProfile()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#getModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatNamespace(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatCollection(java.util.Iterator)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildPopup(javax.swing.JPopupMenu, int)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getChoices()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getDialogTitle()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getChoices()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getDialogTitle()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#peekNamespaceElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#popNamespaceElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#getBaseNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#getCommonNamespace( org.argouml.uml.util.namespace.Namespace)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#iterator()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#isEmpty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#setDefaultScopeToken(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.NamespaceElement#getNamespaceElement()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.CommandLineInterface#doCommand(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getFacade()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDiagramInterchangeModel()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelEventPump()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMessageSort()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMetaTypes()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getChangeableKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getAggregationKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getPseudostateKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getScopeKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getConcurrencyKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDirectionKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getOrderingKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getVisibilityKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getXmiReader()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getXmiWriter(java.lang.Object, java.io.Writer, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCopyHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui. AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	Overridden purely to keep our superclass from removing the listener that we just added. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.StateMachinesHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UseCasesHelper#getAllUseCases(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#addListenersToModel(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getStereotypes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.CoreHelper#clearStereotypes(java.lang.Object) All methods below similarly override methods in CoreHelper.
WITHOUT_CLASSIFICATION	@see org.argouml.model.CollaborationsHelper#getAllClassifierRoles(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.CommonBehaviorHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ActivityGraphsHelper#findClassifierByName(java.lang.Object, java.lang.String) all methods below similarly implement methods from ActivityGraphsHelper
WITHOUT_CLASSIFICATION	Returns the value of an element's property (tagged value). This method makes sure that a Collection of values is returned if and only if the property is multivalued (upper multiplicity value greater 1). @see org.argouml.model.Facade#getValueOfTag(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeClassModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#startPumpingEvents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#stopPumpingEvents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#flushModelEvents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.AggregationKind#getAggregate()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getChoice()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ChangeableKind#getChangeable()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ScopeKind#getClassifier()
WITHOUT_CLASSIFICATION	@see org.argouml.model.AggregationKind#getComposite()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ConcurrencyKind#getConcurrent()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getDeepHistory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getFork()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ChangeableKind#getFrozen()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ConcurrencyKind#getGuarded()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getInParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getInitial()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getInOutParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ScopeKind#getInstance()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getJoin()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getJunction()
WITHOUT_CLASSIFICATION	@see org.argouml.model.AggregationKind#getNone()
WITHOUT_CLASSIFICATION	@see org.argouml.model.OrderingKind#getOrdered()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getOutParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getPackage()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getPrivate()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getProtected()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getPublic()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getReturnParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ConcurrencyKind#getSequential()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getShallowHistory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.OrderingKind#getUnordered()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsFactory#createTaggedValue()
WITHOUT_CLASSIFICATION	@see org.argouml.model.CoreHelper#clearStereotypes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.CopyHelper#copy(java.lang.Object, java.lang.Object) Make a copy of element in the given namespace.<p> This function is a dispatcher that calls the copyElement(Element,Namespace) function from XXXFactory.<p> This function may fail and return null for any of the following reasons: <ol> <li>No copy function is known for element's type. <li>The copy function fails or throws. </ol> @param anelement is the element to copy. @param ans the namespace @return a copy of element, or null. @throws IllegalArgumentException if element is null.
WITHOUT_CLASSIFICATION	Because we map both ends of an association we'll see many names twice LOG.log(Level.FINE, "Duplicate property name found - {0}:{1}", new Object[]{typeName, propertyName});
WITHOUT_CLASSIFICATION	Builds an initialized stereotype with no namespace. A stereotype must have a namespace so this method is unsafe. Use buildStereotype(String, Object). @param text is the name of the stereotype @return an initialized stereotype.
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. @param source The stereotype to copy from. @param target The object becoming a copy.
WITHOUT_CLASSIFICATION	If the array hasn't been flagged to indicate otherwise swap elements the elements and add again.
WITHOUT_CLASSIFICATION	specifies valid elements for a class to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Component to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an ObjectFlowState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an SimpleState to contain
WITHOUT_CLASSIFICATION	Extend, but only between two use cases. Remember we draw from the extension port to the base port.
WITHOUT_CLASSIFICATION	default parameter name
WITHOUT_CLASSIFICATION	build all other elements using existing buildNode
WITHOUT_CLASSIFICATION	There is a bug in the version of MDR (20050711) that we use that causes it to fail to delete aggregate elements which are single valued and where the aggregate end is listed second in the association defined in the metamodel. For the UML 1.4 metamodel, this affects a StateMachine's top StateVertex and a Transition's Guard. See issue 4948 & 5227 - tfm 20080713
WITHOUT_CLASSIFICATION	In UML 1.3, the name is the only place to store text. In UML 1.4, there is a body as well, but some tools still seem to use name.
WITHOUT_CLASSIFICATION	Although not represented in the OCL (or our Java), the English text of WFR #4 of Section 2.10.3.4 in the UML 1.4 spec is more restrictive - "[4] A Collaboration may only contain ClassifierRoles and AssociationRoles, the Generalizations and the Constraints between them, and Actions used in the Collaboration's Interactions."
WITHOUT_CLASSIFICATION	The following from the original NSUML implemenetation was attempting to implement WFR #1 from section 2.5.3.32 of the UML 1.4 spec, but if there is an owner set, no namespace is valid. The checks for this WFR, if desired, need to go in setOwner() and setType() - tfm
WITHOUT_CLASSIFICATION	or self.allConnections->forAll( r | self.namespace.allContents->excludes (r.participant) implies self.namespace.clientDependency->exists (d | d.oclIsTypeOf(Permission) and d.stereotype.name = 'access' and
WITHOUT_CLASSIFICATION	Return a list of namespaces enclosing this element. The list is ordered outer to inner. i.e. it starts at the root model.
WITHOUT_CLASSIFICATION	ScopeKind, VisibilityKind, PseudostateKind, etc Doesn't include Boolean though, despite what UML 1.4 spec says
WITHOUT_CLASSIFICATION	For a Namespace: <pre> [2] The operation allContents results in a Set containing all ModelElements contained by the Namespace. allContents : Set(ModelElement); allContents = self.contents where contents = self.ownedElement -> union(self.namespace, contents) </pre><p>
WITHOUT_CLASSIFICATION	For a Package: <pre> [3] The operation allContents results in a Set containing the ModelElements owned by or imported by the Package or one of its ancestors. allContents : Set(ModelElement); allContents = self.contents->union( self.parent.allContents->select(e | e.elementOwnership.visibility = #public or e.elementOwnership.visibility = #protected)) where the required operations are defined as : [1] The operation contents results in a Set containing the ModelElements owned by or imported by the Package. contents : Set(ModelElement) contents = self.ownedElement->union(self.importedElement) [2] The operation allImportedElements results in a Set containing the ModelElements imported by the Package or one of its parents. allImportedElements : Set(ModelElement) allImportedElements = self.importedElement->union( self.parent.oclAsType(Package).allImportedElements->select( re | re.elementImport.visibility = #public or re.elementImport.visibility = #protected)) </pre>
WITHOUT_CLASSIFICATION	Get the implementations of this operations and look for an OpaqueBehavior.
WITHOUT_CLASSIFICATION	TODO: In UML 2.0, ClassifierRole, AssociationRole, and AssociationEndRole have been replaced by the internal structure of the Collaboration
WITHOUT_CLASSIFICATION	For a Transition use indirection through source StateVertex
WITHOUT_CLASSIFICATION	TODO: unimplemented return ((Property) handle).gets
WITHOUT_CLASSIFICATION	Removed from UML 2.x and deprecated in Model API so we won't implement it throw new NotImplementedException(); we do not throw an exception because ArgoUML still uses this
WITHOUT_CLASSIFICATION	This doesn't work in UML2: both owner and property needed!
WITHOUT_CLASSIFICATION	TODO: Restructured in UML 2
WITHOUT_CLASSIFICATION	TODO: Gone in UML 2.1 It is now an InstanceSpecification with an Association as its classifier
WITHOUT_CLASSIFICATION	list.add("LiteralReal");UML 2.4 End LiteralSpecification
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Link does not exist in UML2, a link is represented just as an association
WITHOUT_CLASSIFICATION	Search for our current target language.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	The attribute 'targetScope' of an AssociationEnd in UML1.x is no longer supported in UML2.x
WITHOUT_CLASSIFICATION	cmd.setObjects(run.getParams().get(0));
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	Although Usage & Permission are Dependencies, they need to be include separately because of the way lookup works
WITHOUT_CLASSIFICATION	The next 3 restrictions for Abstraction seem to be Argo specific not something the UML spec requires - tfm - 20070215 There is no need for these because they arn't used by buildConnection() - b00__1 {Abstraction.class, org.eclipse.uml2.uml.Class.class, org.eclipse.uml2.uml.Class.class, null, }, {Abstraction.class, org.eclipse.uml2.uml.Package.class,org.eclipse.uml2.uml.Package.class, null, }, {Abstraction.class, Component.class, Interface.class, null, },
WITHOUT_CLASSIFICATION	specifies valid elements for a Enumeration to contain
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	This module will still register as enabled for UML1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	@see java.util.Collection#remove(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.Collection#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode() This will result in rather bad performance but at least we will not violate the contract together with {@link #equals(Object)}.
WITHOUT_CLASSIFICATION	@see java.util.Collection#size()
WITHOUT_CLASSIFICATION	@see java.util.Collection#isEmpty()
WITHOUT_CLASSIFICATION	@see java.util.Collection#iterator()
WITHOUT_CLASSIFICATION	@see java.util.Collection#toArray()
WITHOUT_CLASSIFICATION	@see java.util.Collection#toArray(java.lang.Object[])
WITHOUT_CLASSIFICATION	@see java.util.Collection#add(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.Collection#containsAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#addAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#retainAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#removeAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#clear()
WITHOUT_CLASSIFICATION	@see java.util.List#addAll(int, java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.List#get(int)
WITHOUT_CLASSIFICATION	@see java.util.List#set(int, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#add(int, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#remove(int)
WITHOUT_CLASSIFICATION	@see java.util.List#indexOf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#lastIndexOf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#listIterator()
WITHOUT_CLASSIFICATION	@see java.util.List#listIterator(int)
WITHOUT_CLASSIFICATION	@see java.util.List#subList(int, int)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode() This is a rather bad hash solution but with the {@link #equals(Object)} defined as below, it is not possible to do better.
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Orientable#setOrientation(Orientation)
WITHOUT_CLASSIFICATION	@see java.util.Observable#notifyObservers(java.lang.Object)
WITHOUT_CLASSIFICATION	@see Observable#notifyObservers()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getName()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	Updates the button if the current row changes @see javax.swing.event.TableModelListener#tableChanged(javax.swing.event.TableModelEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	Refresh the table when a critique is enabled/disabled @see java.util.Observer#update(java.util.Observable, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getRoot()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeSelectionListener#valueChanged(javax.swing.event.TreeSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.ModeCreateFigPoly#createNewItem(java.awt.event.MouseEvent, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt( java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.ModelFacade#getClassifier(java.lang.String)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateQualified( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type2#navigateParameterizedQuery( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateParameterized( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#conformsTo(tudresden.ocl.check.types.Type)
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateQualified( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type2#navigateParameterizedQuery( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateParameterized( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#conformsTo(tudresden.ocl.check.types.Type)
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.persistence.pgml.HandlerFactory#getHandler( HandlerStack, Object, String, String, String, Attributes)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.persistence.pgml.PGMLStackParser#setAttrs( org.tigris.gef.presentation.Fig, org.xml.sax.Attributes)
WITHOUT_CLASSIFICATION	@see org.xml.sax.EntityResolver#resolveEntity(java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read()
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read(byte[], int, int)
WITHOUT_CLASSIFICATION	@see java.lang.Throwable#printStackTrace()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#hasState(java.lang.String)
WITHOUT_CLASSIFICATION	@see java.lang.Throwable#printStackTrace(java.io.PrintStream)
WITHOUT_CLASSIFICATION	@see java.lang.Throwable#printStackTrace(java.io.PrintWriter)
WITHOUT_CLASSIFICATION	@see ProfileModelLoader#loadModel(ProfileReference)
WITHOUT_CLASSIFICATION	@see java.io.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAAdditiveExpressionTail(tudresden.ocl.parser.node.AAdditiveExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAMultiplicativeExpressionTail(tudresden.ocl.parser.node.AMultiplicativeExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAUnaryUnaryExpression(tudresden.ocl.parser.node.AUnaryUnaryExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAPostfixExpressionTail(tudresden.ocl.parser.node.APostfixExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeaturePrimaryExpression(tudresden.ocl.parser.node.AFeaturePrimaryExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAEmptyFeatureCallParameters(tudresden.ocl.parser.node.AEmptyFeatureCallParameters)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeatureCallParameters(tudresden.ocl.parser.node.AFeatureCallParameters)
WITHOUT_CLASSIFICATION	@param node @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAStandardDeclarator(tudresden.ocl.parser.node.AStandardDeclarator)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALetExpression(tudresden.ocl.parser.node.ALetExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAStringLiteral(tudresden.ocl.parser.node.AStringLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outARealLiteral(tudresden.ocl.parser.node.ARealLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAIntegerLiteral(tudresden.ocl.parser.node.AIntegerLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outABooleanLiteral(tudresden.ocl.parser.node.ABooleanLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAEnumLiteral(tudresden.ocl.parser.node.AEnumLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALiteralCollection(tudresden.ocl.parser.node.ALiteralCollection)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAExpressionListOrRange(tudresden.ocl.parser.node.AExpressionListOrRange)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAListExpressionListOrRangeTail(tudresden.ocl.parser.node.AListExpressionListOrRangeTail)
WITHOUT_CLASSIFICATION	@see java.awt.Component#getPreferredSize()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getSize()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowActivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosed(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeactivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeiconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowIconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	Tests if enter is pressed in the _bbodField so we need to set the target bounds. @see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.IStatusBar#showStatus(java.lang.String)
WITHOUT_CLASSIFICATION	Override paint so we can set a flag the first time we're called and notify any waiting threads that the splash screen has been painted. @see java.awt.Component#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction.AbstractAction()
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction.AbstractAction(java.lang.String)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction.AbstractAction( java.lang.String, javax.swing.Icon)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getName()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Orientable#setOrientation(org.tigris.swidgets.Orientation)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.Component#getLocale()
WITHOUT_CLASSIFICATION	@see java.awt.Window#dispose()
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange( java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosed(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt( java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeactivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ListCellRenderer#getListCellRendererComponent( javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.JComponent#paintComponent(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowOpened(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Catches a mouseevent and calls mySingleClick and myDoubleClick if a tab is clicked which is selected. @see java.awt.event.MouseListener#mouseClicked(MouseEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getRoot()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize() sets minimum size to 120,100
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.MenuListener#menuSelected(javax.swing.event.MenuEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.MenuListener#menuDeselected(javax.swing.event.MenuEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.MenuListener#menuCanceled(javax.swing.event.MenuEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Cmd#undoIt()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	Compares obj1 and obj2 sorting by user object type, then name. Diagrams are sorted first, then packages, then other types. sorts by name within type groups. Nulls are sorted first for names. @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeWillExpandListener#treeWillCollapse(javax.swing .event.TreeExpansionEvent)
WITHOUT_CLASSIFICATION	Updates stereotype setting, adds all children per treemodel 'build on demand' design. @see javax.swing.event.TreeWillExpandListener#treeWillExpand(javax.swing .event.TreeExpansionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeExpansionListener#treeCollapsed( javax.swing.event.TreeExpansionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeExpansionListener#treeExpanded( javax.swing.event.TreeExpansionEvent) Updates the selection state.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeNode#isLeaf()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Do string compare of names of UML objects. Comparison is case insensitive using a primary strength collator in the user's locale. @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dragDropEnd(java.awt.dnd.DragSourceDropEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dragEnter(java.awt.dnd.DragSourceDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dragExit(java.awt.dnd.DragSourceEvent)
WITHOUT_CLASSIFICATION	This is not the correct location to set the cursor. The commented out code illustrates the calculation of coordinates. @see java.awt.dnd.DragSourceListener#dragOver(java.awt.dnd.DragSourceDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dropActionChanged(java.awt.dnd.DragSourceDragEvent)
WITHOUT_CLASSIFICATION	Ok, we've been told to scroll because the mouse cursor is in our scroll zone. @see java.awt.dnd.Autoscroll#autoscroll(java.awt.Point)
WITHOUT_CLASSIFICATION	Calculate the insets for the JTREE, not the viewport the tree is in. This makes it a bit messy. @see java.awt.dnd.Autoscroll#getAutoscrollInsets()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragEnter(java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragExit(java.awt.dnd.DropTargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dropActionChanged(java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationListener#handleNotification(javax.management.Notification, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#getValue(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.ChildGenerator#gen(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#nodeAdded(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#edgeAdded(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#nodeRemoved(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#edgeRemoved(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#graphChanged(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Diagram#initialize(java.lang.Object)
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. The classifier and state Figs are nicely centered vertically, and stretched out over the full width, to allow easy selection with the mouse. The Fig can only be shrunk to half its original size - so that it is not reducible to a few pixels only. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int) Override setBounds to keep shapes looking right.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	Return all ports on node or edge. @see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	Return the node or edge that owns the given port. @see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	Return all edges going to given port. @see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	Return all edges going from given port. @see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	Return true if the given object is a valid node in this graph. @see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	Return true if the given object is a valid edge in this graph. @see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	Add the given node to the graph, if valid. @see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	Return true if the two given ports can be connected by a kind of edge to be determined by the ports. @see org.tigris.gef.graph.MutableGraphModel#canConnect(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeNode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigGroup#addFig(Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigGroup#addFig(Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.Predicate#predicate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canConnect(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#connect(java.lang.Object, java.lang.Object, java.lang.Class)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.Predicate#predicate(java.lang.Object)
WITHOUT_CLASSIFICATION	Overridden to make it possible to include a stateVertex in a composite state. @see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	This function only sets the color of the divider line (since that is the only visible part), and can be used to make the divider line invisible for the top region in a composite state. @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigText#setTextFilled(boolean)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.ClipboardOwner#lostOwnership( java.awt.datatransfer.Clipboard, java.awt.datatransfer.Transferable)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#isDataFlavorSupported( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferData( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#isDataFlavorSupported( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferData( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#classNameAndBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigNode#hitPort(int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigGroup#hitFig(java.awt.Rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#isSelectable()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigNode#getPortFig(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#paintButtons(Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragExit( java.awt.dnd.DropTargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#drop( java.awt.dnd.DropTargetDropEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#translate(int, int)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Overridden to set Argo-specific RenderingHints to determine whether or not antialiasing should be turned on. @see org.tigris.gef.base.Editor#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Overridden to set Argo-specific RenderingHints to determine whether or not antialiasing should be turned on. @see org.tigris.gef.base.Editor#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.ModeCreatePolyEdge#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Updates the modelelement container if the fig is moved in or out another fig. If this fig doesn't have an enclosing fig anymore, the namespace of the diagram will be the owning modelelement. If this fig is moved inside another FigNodeModelElement the owner of that fignodemodelelement will be the owning modelelement. @see org.tigris.gef.presentation.FigNode#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getEnclosedFigs()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#classNameAndBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	Necessary since GEF contains some errors regarding the hit subject. @see org.tigris.gef.presentation.Fig#hit(Rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigNode#isDragConnectable()
WITHOUT_CLASSIFICATION	Need to 'arm' the rerouting capability with mouseDragged(). <p> Don't arm if the edtior's current mode is a figedge create mode, because once a new edge has been created it is not deselected, therefore on the next create an unwanted reroute is performed. @see java.awt.event.MouseMotionListener#mouseDragged(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Command#execute()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeGraphModel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeEdge()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeNode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#paintButtons(Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#getNewNode(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Selection#dragHandle(int, int, int, int, org.tigris.gef.presentation.Handle)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	Makes sure that the edges stick to the outline of the fig. @see org.tigris.gef.presentation.Fig#getGravityPoints()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#damage()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	If the user double clicks on any part of this FigNode, pass it down to one of the internal Figs. This allows the user to initiate direct text editing. @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLayer(org.tigris.gef.base.Layer)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#hit(java.awt.Rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	Makes sure that the edges stick to the outline of the fig. @see org.tigris.gef.presentation.Fig#getGravityPoints()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event. ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event. ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event. ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt( java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getElementAt(int)
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getSize()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#getSelectedItem()
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	The property value has changed so rebuild our view. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked( java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased( java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ListCellRenderer#getListCellRendererComponent( javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#getDefaultRootElement()
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#getLength()
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#render(Runnable r)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#getText(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans. PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans. PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java. beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see AbstractAction#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Orientable#setOrientation(org.tigris.swidgets.Orientation)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeCellRenderer#getTreeCellRendererComponent( javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusLost(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange( java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.util.Enumeration#hasMoreElements()
WITHOUT_CLASSIFICATION	@see java.util.Enumeration#nextElement()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see PropertyChangeListener#propertyChange(PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Here we are actually violating the test independance since we keep the DetailsPane from test to test. The reason to do this is to make it possible to run the tests with less memory requirements. Hopefully someone might eventually fix the DetailsPane so that it is garbage collected properly and this is no longer needed. @see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#runTest()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	This method is overridden in order to ignore change of the y coordinate during dragging. @see org.tigris.gef.presentation.FigNode#superTranslate(int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeNode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	end class StartCritics
WITHOUT_CLASSIFICATION	initialized in static initializer block below
WITHOUT_CLASSIFICATION	Needs to happen after initialization is done & modules loaded
WITHOUT_CLASSIFICATION	create an anonymous class as a kind of adaptor for the cognitive System to provide proper translation/i18n.
WITHOUT_CLASSIFICATION	The reason the gui is initialized before the commands are run is that some of the commands will use the projectbrowser.
WITHOUT_CLASSIFICATION	Initialize the module loader. At least the plug-ins that provide profiles need to be initialized before the project is loaded, because some of these profile may have been set as default profiles and need to be applied to the project as soon as it has been created or loaded. The first instance of a Project is needed during the GUI initialization.
WITHOUT_CLASSIFICATION	The string <code>log4j.configuration</code> is the same string found in {@link org.apache.log4j.Configuration.DEFAULT_CONFIGURATION_FILE} but if we use the reference, then log4j configures itself and clears the system property and we never know if it was set. If it is set, then we let the static initializer in {@link Argo} perform the initialization.
WITHOUT_CLASSIFICATION	A subclass of JPanel that can act as a tab in the DetailsPane or MultiEditorPane. Added functionality:<p> Spawning: When the tab is double-clicked, this JPanel will generate a separate window of the same size and with the same contents. This is almost like "tearing off" a tab.<p> TODO: Spawning of windows disabled in spawn()<p> Title: This JPanel keeps track of its own title.<p> Icon: This JPanel keeps track of its own icon; i.e. an arrow pointing to the panel that it gives details of.<p> Orientation: This JPanel is Orientable.<p> Cloning: This JPanel may be cloned.<p> This class used to be named TabSpawnable. Renamed since it is not a Tab, but a Panel, and being spawnable is not any more its main purpose.
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Notation events are likely to cause GEF/Swing operations, so we dispatch them on the Swing event thread as a convenience so that the receiving notationChanged() methods don't need to deal with it
WITHOUT_CLASSIFICATION	@param item the todo item @param reason the reason TODO: Use it! @return <code>true</code> if the argument was a component of this list; <code>false</code> otherwise @throws UnresolvableException unable to resolve
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	static accessors
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	This needs to iterate to fill entire output raster if implemented return image.copyData(outRaster);
WITHOUT_CLASSIFICATION	Catch all exceptions and errors, however severe
WITHOUT_CLASSIFICATION	Notify the user that the modules in the list that are selected but not enabled were not possible to enable and that are not selected that we cannot disable. Currently we just log this. TODO: We could eventually pop up some warning window.
WITHOUT_CLASSIFICATION	if we have only one return value and without type, the return param string is ": ,", we remove it
WITHOUT_CLASSIFICATION	If the script of the Action is empty, (or only specifies arguments and no method name) then we generate a string based on a different model element:
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	no state with the given name is found, so we have to reject the complete user's input
WITHOUT_CLASSIFICATION	Now let's check if the new line is already present in the old list of internal transitions; if it is, then mark the old one to be retained (i.e. do not create a new one), if it isn't, continue with parsing:
WITHOUT_CLASSIFICATION	case 1
WITHOUT_CLASSIFICATION	check for more literals (';' separated):
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#hasState(java.lang.String)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	Skip the 2 lines <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE pgml SYSTEM "pgml.dtd">
WITHOUT_CLASSIFICATION	Search all attributes found to those expected. If any don't match then turn off the found flag so that we search for the next matching tag.
WITHOUT_CLASSIFICATION	Now we're into processing each specific path item strategy. At the moment, we only know PathItemPlacement
WITHOUT_CLASSIFICATION	for compatibility with older format
WITHOUT_CLASSIFICATION	If we're about to upgrade the file lets take an archive of it first.
WITHOUT_CLASSIFICATION	No more we can do here on failure
WITHOUT_CLASSIFICATION	Write any left over bytes in the input buffer (perhaps from a partially decoded character)
WITHOUT_CLASSIFICATION	NOP
WITHOUT_CLASSIFICATION	To persist to and from zargo (zipped file) storage containing seperate xmi, argo, plgml and todo zip entries. @author Bob Tarling TODO: Review use of this against ZargoFilePersister - Bob
WITHOUT_CLASSIFICATION	Add the path of the model to the search path, so we can read dependent models
WITHOUT_CLASSIFICATION	we only need to add the classloader once and if and only if there is at least a profile in the JAR
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeatureCall(tudresden.ocl.parser.node.AFeatureCall)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.Map, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.Map, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	TODO: isStatic in UML 2.x
WITHOUT_CLASSIFICATION	Additional Operations in 4.5.3.8
WITHOUT_CLASSIFICATION	4.5.2.13 Constraint
WITHOUT_CLASSIFICATION	4.5.2.24 Generalization
WITHOUT_CLASSIFICATION	4.5.2.28 Namespace
WITHOUT_CLASSIFICATION	Do not set buildingModel = false here, otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	prpTodo = createProperty("label.todo-pane", positions, TabToDo.class); prpProperties = createProperty("label.properties-pane", positions, TabProps.class); prpDocumentation = createProperty("label.documentation-pane", positions, TabDocumentation.class); prpStyle = createProperty("label.style-pane", positions, TabStyle.class); prpSource = createProperty("label.source-pane", positions, TabSrc.class); prpConstraints = createProperty("label.constraints-pane", positions, TabConstraints.class); prpTaggedValues = createProperty("label.tagged-values-pane", positions, TabTaggedValues.class); Property[] propertyList = new Property[] { prpTodo, prpProperties, prpDocumentation, prpStyle, prpSource, prpConstraints, prpTaggedValues, }; Arrays.sort(propertyList); top.add(new JScrollPane(new PropertyTable( propertyList, paneColumnHeader, positionColumnHeader)), BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	Parse the boundary box text. Null is returned if it is empty or invalid, which causes no change. Otherwise we tell GEF we are making a change, make the change and tell GEF we've finished.
WITHOUT_CLASSIFICATION	TODO: Add double click listener
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary1()
WITHOUT_CLASSIFICATION	if the current shortcut has been set but is void, then the current shortcut is not set --> then the default value does not change
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	2. the profile configuration, holding noneditable applied profiles
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	private static final StereotypeView[] stereotypeViewMap; static { stereotypeViewMap = new StereotypeView[3]; StereotypeView. stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_TEXTUAL] = StereotypeView.TEXTUAL; stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_BIG_ICON] = StereotypeView.BIG_ICON; stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_SMALL_ICON] = StereotypeView.SMALL_ICON; }
WITHOUT_CLASSIFICATION	This class represents all Diagrams within ArgoUML. It is based upon the GEF Diagram.<p> It adds a namespace, and the capability to delete itself when its namespace is deleted. <p> TODO: MVW: I am not sure of the following:<p> The "namespace" of the diagram is e.g. used when creating new elements that are shown on the diagram; they will have their namespace set according this. It is NOT necessarily equal to the "owner". <p> MVW: I doubt all following: The "namespace" of the diagram is e.g. used to register a listener to the UML model, to be notified if this element is removed; which will imply that this diagram has to be deleted, too. <p> Hence the namespace of e.g. a collaboration diagram should be the represented classifier or, in case of a represented operation, the classifier that owns this operation. And the namespace of the statechart diagram should be the namespace of its statemachine.
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig:
WITHOUT_CLASSIFICATION	Notation settings are different since, we know that, at a minimum, the isShowPath() setting can change because with implement PathContainer, so we make sure that we have a private copy of the notation settings.
WITHOUT_CLASSIFICATION	null elements represent new constraints, which will be added to the target the first time any actual editing takes place. This is done to ensure syntactical correctness of constraints stored with the target.
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	Constructor for a {@link FigClass} during file load.<p> Parent {@link org.argouml.uml.diagram.ui.FigNodeModelElement} will have created the main box {@link #getBigPort()} and its name {@link #getNameFig()} and stereotype (@link #getStereotypeFig()}. This constructor creates a box for the attributes and operations.<p> The properties of all these graphic elements are adjusted appropriately. The main boxes are all filled and have outlines. TODO: which is wrong, since the bigPort is filled, too. @param element model element to be represented by this fig. @param bounds rectangle describing bounds @param settings rendering settings
WITHOUT_CLASSIFICATION	When this is called from PGMLStackParser.attachEdges, we finished the initialization of owning pseudo element (CommentEdge)
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Fill property cannot be changed.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Fill property cannot be changed.
WITHOUT_CLASSIFICATION	A Fig designed to be the child of some FigNode or FigEdge to display the stereotypes of the model element represented by the parent Fig. Currently, multiple stereotypes are shown stacked one on top of the other, each enclosed by guillemets.<p> The minimum width of this fig is the largest minimum width of its child figs. The minimum height of this fig is the total minimum height of its child figs.<p> The owner of this Fig is the UML element that is extended with the stereotypes. We are listening to changes to the model: addition and removal of stereotypes. <p> This fig supports showing one keyword as the first "stereotype" in the list. <p> There is no way to remove a keyword fig, once added. <p> TODO: Allow for UML2 style display where all stereotypes are displayed in the same guillemet pair and are delimited by commas. The style should be changeable by calling getOrientation(Orientation). The swidget Orientation class can be used for this. @author Bob Tarling
WITHOUT_CLASSIFICATION	The source of an association end should not be the classifier. If it is the user has drawn the wrong way round so we swap here.
WITHOUT_CLASSIFICATION	We want to maintain a minimum width for the fig. Also, add the border dimensions to the minimum space required for its contents:
WITHOUT_CLASSIFICATION	Make sure we don't try to set things smaller than the minimum
WITHOUT_CLASSIFICATION	If requested height equals needed height then do nothing; it fits exactly.
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Slope = " + theta / Math.PI + "PI " + theta / Math.PI 180.0);
WITHOUT_CLASSIFICATION	Test-case for the above code: Draw a class. Create a stereotype for it by clicking on the prop-panel tool, and name it. Remove the class from the diagram. Drag the class from the explorer on the diagram. Select the stereotype in the explorer, and change its name in the prop-panel to something longer. The longer name does not make the class Fig wider unless the above code is added.
WITHOUT_CLASSIFICATION	If we have no source and dest connector then we assume this is load of an old UML1.4 diagram from before this data was saved in PGML. For UML1.4 we can assume the source is first connection and destination is last connection stored in repository for this association.
WITHOUT_CLASSIFICATION	Note that "multiplicity" is what is the notation is listening for in UML1.4 "uppervalue" are listened to in UML2. It is not currently why it is not required to register for "lowerValue" also.
WITHOUT_CLASSIFICATION	Some subclasses will try to use this
WITHOUT_CLASSIFICATION	FigClass calls setBoundsImpl before we set the stereotypeFigProfileIcon
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	Perhaps something like the following would workd. If not, then traverse up the component hierarchy to a MultEditorPane Rectangle drawingArea = Globals.curEditor().getJComponent().getVisibleRect();
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	/ Methods that implement the GraphModel itself /
WITHOUT_CLASSIFICATION	/ Methods that implement the VetoableChangeListener interface /
WITHOUT_CLASSIFICATION	Only interested in the "ownedElement" property. Either something has been added to the namespace for this model, or removed. In the latter case the "something" will be in the old value of the property, which is the collection of owned elements, and the new value will be the element import describing the model element and the model from which it was removed
WITHOUT_CLASSIFICATION	The figs for the two end nodes
WITHOUT_CLASSIFICATION	The figs for the two end nodes
WITHOUT_CLASSIFICATION	Private utility routine to work out the (positive) x coordinate of a point on an oval, given the radii and y coordinate.<p> TODO: Use this to calculate the separator lines! @param a radius in X direction @param b radius in Y direction @param y Y coordinate @return Positive X coordinate for the given Y coordinate
WITHOUT_CLASSIFICATION	the responsibility of determining if the given target is a correct one for this tab has been moved from the DetailsPane to the member tabs of the details pane. Reason for this is that the details pane is configurable and cannot know what's the correct target for some tab.
WITHOUT_CLASSIFICATION	If the diagram is empty, GEF won't write anything, leaving us with an empty (and invalid) file. Handle this case ourselves to prevent this from happening.
WITHOUT_CLASSIFICATION	NOTE: GEF's GIF writer uses Jeff Poskanzer's GIF encoder, but that saves a copy of the entire image in an internal buffer before starting work, defeating the whole purpose of our incremental rendering.
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	TODO: The next text was copied - to adapt. Sets the target. If the old target is an UML Element, it also removes the model from the element listener list of the target. If the new target is an UML Element, the model is added as element listener to the new target. <p> This function is called when the user changes the target. Hence, this shall not result in any UML model changes.<p> This function looks a lot like the one in UMLComboBoxModel2. <p> As a possible future extension, we could allow listening to other model elements. @param theNewTarget the new target
WITHOUT_CLASSIFICATION	fire all of the status events
WITHOUT_CLASSIFICATION	fire all of the profile events
WITHOUT_CLASSIFICATION	verify isRelevant returns true
WITHOUT_CLASSIFICATION	DesignGoalsCM checks if the critic isRelevantToGoals of the Designer this value is always true for the Critic base class so DesignerGoal should always return true in this condition
WITHOUT_CLASSIFICATION	update the priority of the critic to be the same priority as the decision
WITHOUT_CLASSIFICATION	check that the model was initialized with one goal
WITHOUT_CLASSIFICATION	number of goals should now be 0
WITHOUT_CLASSIFICATION	Arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	FigAssociationRole figassociationrole = new FigAssociationRole();
WITHOUT_CLASSIFICATION	initialize basic parameters that are different from Decision.UNSPEC
WITHOUT_CLASSIFICATION	verify parameters were initialized correctly by the constructor
WITHOUT_CLASSIFICATION	verify the name property was correctly updated
WITHOUT_CLASSIFICATION	following the update the priority should be equivalent to Decision.UNSPEC
WITHOUT_CLASSIFICATION	test that the category and description are correct
WITHOUT_CLASSIFICATION	update the values
WITHOUT_CLASSIFICATION	verify SnoozeOrder starts off not snoozed
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	pce = (PropertyChangeEvent) rxdEvent.getSource(); assertTrue("Wrong event name", pce.getPropertyName().equals( DiagramAppearance.KEY_DEFAULT_SHADOW_WIDTH.getKey())); String value = (String) pce.getOldValue(); int i = Integer.parseInt(value); assertTrue("Wrong old event value", i == 4); assertTrue("Wrong new event value", ((String) pce.getNewValue()).equals("2"));
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Create a different client to bind to the same supplier
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	This comment was included in a previous version (before 1/2005) of the test which had this assertion commented out: ------ Interaction should not be removed when removing ClassifierRole... maybe if the last message is removed from the interaction but even then it's doubtfull since it will probably lead to backward compatibility problems in save formats. ------ but my reading of the UML 1.4 specification is that an Interaction without at least one message is definitely illegal, so MDR is doing the right thing by removing it in this case where we only have a single message, which then gets deleted. - tfm
WITHOUT_CLASSIFICATION	Get a list of UML metaclass names from the XMI document. <p> Though some of the DOM methods such as getAttributes may return null values under other conditions, in the context of this test and assuming a valid XMI file none should occur. <p> Hence there is no special checking for those abnormal cases, allowing the test to fail simply with a NullPointerException, with this comment indicating that either the input data is incorrect or the test needs to be improved.
WITHOUT_CLASSIFICATION	Test creating modelelements from a given notation, and then re-generate the notation-string again, and check if they are equal. Some of these tests are not very usefulll, since they may fail on white space differences. TODO: White space should best be ignored.
WITHOUT_CLASSIFICATION	changing the sequence only
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	Make sure the contents match what we expect
WITHOUT_CLASSIFICATION	Make sure we got what we started with
WITHOUT_CLASSIFICATION	Clean up our model and the extent that we read profile in to
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	TODO: the following fails due to the XMI writing saving all top level model elements and because even if there was no empty project, by creating a class, the undo mechanism in the project manager will force the creation of an empty project. assertEquals(1, profileModels.size());
WITHOUT_CLASSIFICATION	we recalculate all the activations
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
DOCUMENTATION	TODO: The Quickguide also mentions: -open <arg> open given file on startup -print <arg> print given file on startup (and exit) Why are these gone?
DOCUMENTATION	TODO: needs documenting, why synchronized?
DOCUMENTATION	The event to fire. TODO: Investigate! Is the purpose really to let the next call to {@link #firePropertyChanged(String, Object, Object)} fire the old event again if the previous invocation resulted in an exception? If so, please document why. If not, fix it.
DOCUMENTATION	TODO: Document why we catch this.
DOCUMENTATION	TODO: The recurrence goes in front of the action? Does this not contradict the header JavaDoc?
DOCUMENTATION	Predecessors used to be not implemented, because it caused some problems that I've not found an easy way to handle yet, d00mst. The specific problem is that the notation currently is ambiguous on second message after a thread split. Why not implement it anyway? d00mst TODO: Document this ambiguity and the choice made.
DOCUMENTATION	TODO: link to the Signal.
DOCUMENTATION	TODO: Document
DOCUMENTATION	TODO check conformancy to specification
DOCUMENTATION	TODO investigate typo in spec!!
DOCUMENTATION	Well-formedness rule for Package. Check that the alias for an imported element doesn't conflict with any existing name. Section 4.14.3.3 of UML 1.4 spec. <p> Other types of name conflicts in a Namespace are checked by {@link CrNameConflict}. <p> TODO: MVW: If an Alias is the same as another class' name, then this critic fires, but the explanation and wizard are wrong!
DOCUMENTATION	UML 1.4 spec is ambiguous - English says no Association or Generalization, but OCL only includes Association || Model.getFacade().isAGeneralization(dm)
DOCUMENTATION	Set the owners of the associated FigNodes to be the StateVertexes which are at either end of the Transition. <p> TODO: This needs documentation! Is this really needed? Why? @param lay diagram layer containing this fig @param owner owning UML element @deprecated in 0.28 by Bob Tarling - The above TODO is from Michiel. I also don't understand the purpose of this method. The GEF framework should be setting source/dest or persistence should manage.
DOCUMENTATION	TODO: are we intentionally eating all events? - tfm 20060203 document!
DOCUMENTATION	Make use of the default visibility, which is public... TODO: centralise this knowledge. @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#valueOfTarget(java.lang.Object)
DOCUMENTATION	Make use of the default visibility, which is public... TODO: centralise this knowledge. @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#valueOfTarget(java.lang.Object)
DOCUMENTATION	TODO: Bobs says - what is the purpose of this flag? Please document.
DOCUMENTATION	Make use of the default visibility, which is public... TODO: centralise this knowledge. @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#valueOfTarget(java.lang.Object)
DOCUMENTATION	TODO: - please add some javadoc - ugly classname also
DOCUMENTATION	Add a Comment with the given string TODO: Currently a no-op, doc is read only @param text the property
DOCUMENTATION	Test delivery of Model events. TODO: We have not documented exactly what events arrive and when. @author Linus Tolke
DOCUMENTATION	TODO: Does this still need to be synchronized? If so then explain why.
DOCUMENTATION	TODO: Do we need this?
DOCUMENTATION	TODO: Document! @author penyaskito
DOCUMENTATION	TODO: Document! @deprecated for 0.28 by tfmorris. Use {@link #UMLActivityDiagram(String, Object, GraphModel)}.
DOCUMENTATION	This interface contains methods to retrieve objects that represent the different UML types. These objects are use as tokens used to create model elements in some methods. TODO: There are parts of ArgoUML which assume that the objects returned here are Classes. We should formalize that by changing the return types to match. tfm - 20070620 Bob says - there should be no such assumption in ArgoUML. Can we document where these are? @see org.argouml.model.UmlFactory#buildConnection( Object, Object, Object, Object, Object, Object, Object) @see org.argouml.model.UmlFactory#buildNode(Object)
DOCUMENTATION	Returns all substates some composite state contains. <p> TODO: {@link #getAllPossibleSubvertices(Object)} and {@link #getAllSubStates(Object)} are duplicates as implemented for MDR. It isn't clear from the Javadoc or usage whether they should do different things or this just happened because no one noticed we already had another method. @param compState the given compositestate @return all substates
DOCUMENTATION	TODO: Document! What does this do? Interacts with event pump in some manner @param objects new objeccts
DOCUMENTATION	Generate the "intno" of the given Message. <p> If the predecessor of the given message has only one successor, then we return the string representation of the given integer. <p> If the predecessor of the given message has more than one successor, then this is a case of parallel execution of messages, e.g. Message 3.1a and Message 3.1b are concurrent within activation 3.1. Hence In this case we use a syntax like: 1a, 1b, 1c. This means that the first successor in the ordered list of successors that has more than one entry will get the postfix a, the second b, etc. TODO: Document exceptional behaviour. @param umlMessage the UML message object to generate the sequence number for @param umlPredecessor the immediate predecessor message (UML object) that has the given message as successor @param position the integer position of the given message within its sequence @return the generated sequence expression string, or null if the given Message was null
DOCUMENTATION	Make use of the default visibility, which is public... TODO: centralise this knowledge. @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#valueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	Class to be used to create the Method. Will be non-null if either Class or Object was provided during construction. Can be used instead of invokee, e.g. when using interfaces.
WITHOUT_CLASSIFICATION	If invokee was provided, then clazz has been set up
WITHOUT_CLASSIFICATION	Now eliminate any classpath entries that do not "match" the search
WITHOUT_CLASSIFICATION	Finds all classes that extend the classes in the listSuperClasses ArrayList, searching in the listAllClasses ArrayList. @param superClasses the base classes to find subclasses for @param listAllClasses the collection of classes to search in @param innerClasses indicate whether to include inner classes in the search @return ArrayList of the subclasses
WITHOUT_CLASSIFICATION	Finds all classes that extend the class, searching in the listAllClasses ArrayList. @param theClass the parent class @param listAllClasses the collection of classes to search in @param listSubClasses the collection of discovered subclasses @param innerClasses indicates whether inners classes should be included in the search
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	THREAD PROPERTIES
WITHOUT_CLASSIFICATION	NUMBER OF THREADS
WITHOUT_CLASSIFICATION	RAMP-UP
WITHOUT_CLASSIFICATION	LOOP COUNT
WITHOUT_CLASSIFICATION	mainPanel.add(threadPropsPanel, BorderLayout.NORTH); add(mainPanel, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Sampler error action buttons
WITHOUT_CLASSIFICATION	Defaults to continue
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Fields ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- Methods -------------------------------------------
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- Methods implemented from org.xml.sax.ContentHandler -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	An additional note on using HashSets to store URLs: I just discovered that obtaining the hashCode of a java.net.URL implies a domain-name resolution process. This means significant delays can occur, even more so if the domain name is not resolvable. Whether this can be a problem in practical situations I can't tell, but thought I'd keep a note just in case... BTW, note that using a List and removing duplicates via scan would not help, since URL.equals requires name resolution too. The above problem has now been addressed with the URLString and URLCollection classes.
WITHOUT_CLASSIFICATION	A dummy class to pass the pointer of URL.
WITHOUT_CLASSIFICATION	Now parse the DOM tree
WITHOUT_CLASSIFICATION	Clear maps
WITHOUT_CLASSIFICATION	Defaults
WITHOUT_CLASSIFICATION	If it was a HTTP GET request, then all parameters in the URL has been handled by the sampler.setPath above, so we just need to do parse the rest of the request if it is not a GET request
WITHOUT_CLASSIFICATION	Check if it was a multipart http post request
WITHOUT_CLASSIFICATION	Get the post data using the content encoding of the request
WITHOUT_CLASSIFICATION	we start to iterate through the elements
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	synchronize with FixedQueueExecutor
WITHOUT_CLASSIFICATION	JMSMessageID cannot be null
WITHOUT_CLASSIFICATION	++ These are JMX file names and must not be changed $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	+JMX file attribute names - do not change any values! $NON-NLS-1$
WITHOUT_CLASSIFICATION	This will only work with an Applet .class file. Ideally, this should be upgraded to work with Objects (IE) and archives (.jar and .zip) files as well.
WITHOUT_CLASSIFICATION	Instantiate the sampler
WITHOUT_CLASSIFICATION	OK, because find only returns correct element types
WITHOUT_CLASSIFICATION	Property was found in a config element. Whether or not it matched the value in the sampler, we're done with this property -- don't look at lower-priority configs:
WITHOUT_CLASSIFICATION	HashMap to save ssl connection between Jmeter proxy and browser
WITHOUT_CLASSIFICATION	get the component parts Assume domains must have at least 2 parts, e.g. apache.org Don't try matching against .org; however we don't check .co.uk here
WITHOUT_CLASSIFICATION	Check if we found an accept-charset attribute on the form
WITHOUT_CLASSIFICATION	The next line looks odd, but proxied HTTP requests look like: GET http:www.apache.org/foundation/ HTTP/1.1 i.e. url starts with "http:", not "/" whereas HTTPS proxy requests look like: CONNECT www.google.co.uk:443 HTTP/1.1 followed by GET /?gws_rd=cr HTTP/1.1
WITHOUT_CLASSIFICATION	A HTTP RESPONSE HEADER LOOKS ALOT LIKE: HTTP/1.0 200 OK Date: Wednesday, 02-Feb-94 23:04:12 GMT Server: NCSA/1.1 MIME-version: 1.0 Last-modified: Monday, 15-Nov-93 23:33:16 GMT Content-Type: text/html Content-Length: 2345 \r\n
WITHOUT_CLASSIFICATION	Count the retries as well in the time
WITHOUT_CLASSIFICATION	for result
WITHOUT_CLASSIFICATION	Make sure the sample start time and sample end time are recorded in order not to confuse the statistics calculation methods: if an error occurs and an exception is thrown it is possible that the result.sampleStart() or result.sampleEnd() won't be called
WITHOUT_CLASSIFICATION	We've finished with the request, so we can add the LocalAddress to it for display
WITHOUT_CLASSIFICATION	Handle the various methods
WITHOUT_CLASSIFICATION	Set up the local address if one exists
WITHOUT_CLASSIFICATION	a well-behaved browser is supposed to send 'Connection: close' with the last request to an HTTP server. Instead, most browsers leave it to the server to close the connection after their timeout period. Leave it to the JMeter user to decide.
WITHOUT_CLASSIFICATION	encoding does not really matter here
WITHOUT_CLASSIFICATION	Add any files Cannot retrieve parts once added to the MultiPartEntity, so have to save them here.
WITHOUT_CLASSIFICATION	We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	In a post request which is not multipart, we only support parameters, no file upload is allowed
WITHOUT_CLASSIFICATION	Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	Allow the mimetype of the file to control the content type This is not obvious in GUI if you are not uploading any files, but just sending the content of nameless parameters
WITHOUT_CLASSIFICATION	Allow the mimetype of the file to control the content type This is not obvious in GUI if you are not uploading any files, but just sending the content of nameless parameters
WITHOUT_CLASSIFICATION	We use the encoding which should be used according to the HTTP spec, which is UTF-8
WITHOUT_CLASSIFICATION	N.B. Revision 323346 introduced the ClassCast check, but then used iter.next() to fetch the item to be cast, thus skipping the element that did not cast. Reverted to work more like the original code, but with the check in place. Added a warning message so can track whether it is necessary
WITHOUT_CLASSIFICATION	Don't break the world just because this failed:
WITHOUT_CLASSIFICATION	if concurrent download emb. resources, add to a list for async gets later
WITHOUT_CLASSIFICATION	Thread pool Executor to get resources use a LinkedBlockingQueue, note: max pool size doesn't effect
WITHOUT_CLASSIFICATION	The following three can be discussed: should they be from the first request or from the final one? I chose to do it this way because that's what browsers do: they show the final URL of the redirect chain in the location field.
WITHOUT_CLASSIFICATION	Commons HttpClient only
WITHOUT_CLASSIFICATION	Set the content length
WITHOUT_CLASSIFICATION	Make the connection ready for sending post data
WITHOUT_CLASSIFICATION	Check if target of merge is reasonable
WITHOUT_CLASSIFICATION	We must ask the user if it is ok to close current project i.e. it is OPEN
WITHOUT_CLASSIFICATION	don't change name if merging
WITHOUT_CLASSIFICATION	Allow for missing optional jars
WITHOUT_CLASSIFICATION	Does not appear to be used externally; called by #loadProjectFile()
WITHOUT_CLASSIFICATION	convertTree(tree);
WITHOUT_CLASSIFICATION	If we are loading a new test plan, initialize the tree with the testplan node we are loading
WITHOUT_CLASSIFICATION	These are handled specially by addToTree
WITHOUT_CLASSIFICATION	Document doc = null;
WITHOUT_CLASSIFICATION	write to file
WITHOUT_CLASSIFICATION	Make the connection ready for sending post data
WITHOUT_CLASSIFICATION	Make the connection ready for sending post data
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.gui.action.Command#getActionNames()
WITHOUT_CLASSIFICATION	boolean toReturn = true;
WITHOUT_CLASSIFICATION	don't automatically expand when merging
WITHOUT_CLASSIFICATION	+JMX file attributes - do not change values! $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ -JMX file attributes
WITHOUT_CLASSIFICATION	Called by JMeter#startGui()
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	Helper method to simplify code
WITHOUT_CLASSIFICATION	one builder for all requests in a thread
WITHOUT_CLASSIFICATION	but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	may well happen
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	Note: initialised with error = failure = false
WITHOUT_CLASSIFICATION	HC3.1 does not have the method
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	means counting from end
WITHOUT_CLASSIFICATION	No point continuing Mainly for bsh.EvalError
WITHOUT_CLASSIFICATION	create a parser:
WITHOUT_CLASSIFICATION	doc =
WITHOUT_CLASSIFICATION	if everything went fine then xml schema validation is valid
WITHOUT_CLASSIFICATION	Only set message if error not yet flagged
WITHOUT_CLASSIFICATION	Helper method to construct SAX error details
WITHOUT_CLASSIFICATION	Can be caused by: - failure to read XSD file - xml does not match XSD
WITHOUT_CLASSIFICATION	Can be caused by: - premature end of file - non-whitespace content after trailer
WITHOUT_CLASSIFICATION	Static int to signify the type of logical comparitor to assert
WITHOUT_CLASSIFICATION	is the Sample the correct size?
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Use the name of the test element, otherwise cannot enable/disable debug from the GUI
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	the signer certificate
WITHOUT_CLASSIFICATION	@param response @return
WITHOUT_CLASSIFICATION	has the Sample lasted too long?
WITHOUT_CLASSIFICATION	ensure the manager is initialised we don't currently need to do anything further, as this sets the default https protocol
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ These are the names of the get/set methods
WITHOUT_CLASSIFICATION	no point in checking if we don't have anything to compare against
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	create parser
WITHOUT_CLASSIFICATION	String md5Result = DigestUtils.md5Hex(resultData);
WITHOUT_CLASSIFICATION	evaluate result
WITHOUT_CLASSIFICATION	package protected so can be accessed by test class
WITHOUT_CLASSIFICATION	return with an error
WITHOUT_CLASSIFICATION	These constants are used both for the JMX file and for the setters/getters $NON-NLS-1$
WITHOUT_CLASSIFICATION	return with an error
WITHOUT_CLASSIFICATION	flush
WITHOUT_CLASSIFICATION	Run tidy.
WITHOUT_CLASSIFICATION	return with no error
WITHOUT_CLASSIFICATION	write output to file
WITHOUT_CLASSIFICATION	return with no error
WITHOUT_CLASSIFICATION	check if filename defined
WITHOUT_CLASSIFICATION	close file
WITHOUT_CLASSIFICATION	open file
WITHOUT_CLASSIFICATION	"" is not the same as no realm
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	Mask should contain all types (but not NOT)
WITHOUT_CLASSIFICATION	The string to check (Url or data)
WITHOUT_CLASSIFICATION	Allow testing of failure codes
WITHOUT_CLASSIFICATION	What are we testing against?
WITHOUT_CLASSIFICATION	Assume it is the URL
WITHOUT_CLASSIFICATION	Assume it is the URL
WITHOUT_CLASSIFICATION	do it once outside loop
WITHOUT_CLASSIFICATION	Not should always succeed against an empty result
WITHOUT_CLASSIFICATION	Get the Matcher for this thread
WITHOUT_CLASSIFICATION	should never happen...
WITHOUT_CLASSIFICATION	+ JMX file attributes $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ - JMX file attributes
WITHOUT_CLASSIFICATION	reset the bsh.Interpreter before each execution
WITHOUT_CLASSIFICATION	script file name (if present)
WITHOUT_CLASSIFICATION	parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	script area
WITHOUT_CLASSIFICATION	Don't let the input field shrink too much
WITHOUT_CLASSIFICATION	Send POST data from <code>Entry</code> to the open connection. @param connection <code>URLConnection</code> where POST data should be sent @return a String show what was posted. Will not contain actual file upload content @exception IOException if an I/O exception occurs
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	file panel $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Assume it is the URL
WITHOUT_CLASSIFICATION	USER_INPUT
WITHOUT_CLASSIFICATION	class attributes
WITHOUT_CLASSIFICATION	USER_INPUT
WITHOUT_CLASSIFICATION	USER_INPUT
WITHOUT_CLASSIFICATION	USER_INPUT
WITHOUT_CLASSIFICATION	doctype
WITHOUT_CLASSIFICATION	doctype
WITHOUT_CLASSIFICATION	Names for the fields $NON-NLS-1$
WITHOUT_CLASSIFICATION	instance attributes
WITHOUT_CLASSIFICATION	format (HMTL, XHTML, XML)
WITHOUT_CLASSIFICATION	errors only
WITHOUT_CLASSIFICATION	thresholds
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Drop the last character:
WITHOUT_CLASSIFICATION	store the operator
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	Put the check boxes in a column in a panel
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Assume URL
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	USER_INPUT
WITHOUT_CLASSIFICATION	USER_INPUT
WITHOUT_CLASSIFICATION	initialize to empty string, this will fail the assertion
WITHOUT_CLASSIFICATION	md5HexInput.addFocusListener(this);
WITHOUT_CLASSIFICATION	@return
WITHOUT_CLASSIFICATION	Should Tidy be quiet?
WITHOUT_CLASSIFICATION	@param element
WITHOUT_CLASSIFICATION	Should we download external DTDs?
WITHOUT_CLASSIFICATION	Called by XPathAssertionGui
WITHOUT_CLASSIFICATION	Report Tidy errors as Assertion failure?
WITHOUT_CLASSIFICATION	Process tolerant settings
WITHOUT_CLASSIFICATION	Show Tidy warnings ?
WITHOUT_CLASSIFICATION	Called by XPathAssertionGui
WITHOUT_CLASSIFICATION	Non-Tidy options
WITHOUT_CLASSIFICATION	Tidy options
WITHOUT_CLASSIFICATION	Called by XPathExtractorGui
WITHOUT_CLASSIFICATION	Called by XPathExtractorGui
WITHOUT_CLASSIFICATION	samp.setDomain(this.getDomain()); samp.setPort(this.getPort());
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	panel.add(signerCheckByFile);
WITHOUT_CLASSIFICATION	Access needed from CSVDataSet
WITHOUT_CLASSIFICATION	Store the resource keys
WITHOUT_CLASSIFICATION	default (e.g. if test plan does not have definition)
WITHOUT_CLASSIFICATION	N.B. this class is shared between threads (NoThreadClone) so all access to variables needs to be protected by a lock (either sync. or volatile) to ensure safe publication.
WITHOUT_CLASSIFICATION	This class is not cloned per thread, so this is shared
WITHOUT_CLASSIFICATION	Used for per-thread/user numbers Cannot be static, as random numbers are not to be shared between instances
WITHOUT_CLASSIFICATION	nextInt(n) returns values in the range [0,n), so n must be set to max-min+1
WITHOUT_CLASSIFICATION	This can overflow
WITHOUT_CLASSIFICATION	This is used as an error indicator
WITHOUT_CLASSIFICATION	check for overflow too
WITHOUT_CLASSIFICATION	Cannot use getThreadContext() as we are not cloned per thread
WITHOUT_CLASSIFICATION	Use format to create number; if it fails, use the default
WITHOUT_CLASSIFICATION	The original name of the property
WITHOUT_CLASSIFICATION	variables are unlikely to contain spaces, so most likely a translation
WITHOUT_CLASSIFICATION	reset the value
WITHOUT_CLASSIFICATION	user-specified key
WITHOUT_CLASSIFICATION	treat the same as EOF
WITHOUT_CLASSIFICATION	i.e. EOF
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. Must be in this class for the TestBean code to work
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Allow for missing optional jars
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	These variable names must have .displayName properties and agree with the getXXX()/setXXX() methods $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	These group names must have .displayName properties $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	if we found a TestPlan, then we are on our way to the TestFragment
WITHOUT_CLASSIFICATION	only try to load the JMX test plan if there is one
WITHOUT_CLASSIFICATION	filter the tree for a TestFragment.
WITHOUT_CLASSIFICATION	ensure counts are updated correctly
WITHOUT_CLASSIFICATION	These items are shared between threads in a group by the clone() method They are initialised by testStarted() so don't need to be serialised
WITHOUT_CLASSIFICATION	TODO ?? (JMeterTreeNode) selectedNode.clone();
WITHOUT_CLASSIFICATION	Ensure global counters and lock are shared across threads in the group
WITHOUT_CLASSIFICATION	Insert the subControllersAndSamplers into random list positions.
WITHOUT_CLASSIFICATION	nodePath.add(selectedNode.getName());
WITHOUT_CLASSIFICATION	We clone to avoid enabling existing node
WITHOUT_CLASSIFICATION	Returns the selection value as a int, with the value set to zero if it is out of range.
WITHOUT_CLASSIFICATION	Set the selection once per iteration
WITHOUT_CLASSIFICATION	Create a new list containing numElements null elements.
WITHOUT_CLASSIFICATION	Replace subControllersAndSamplers with reordered copy.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Set the position when next is first called, and don't overwrite until reInitialize is called.
WITHOUT_CLASSIFICATION	setDone(true);
WITHOUT_CLASSIFICATION	We've gone through the whole list and are now back at the start point of our search.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ throughput.addActionListener(this);
WITHOUT_CLASSIFICATION	start/end index default value for string getters and setters
WITHOUT_CLASSIFICATION	implements UnsharedComponent
WITHOUT_CLASSIFICATION	Although the default is not the same as for the string value, it is only used internally
WITHOUT_CLASSIFICATION	Although the default is not the same as for the string value, it is only used internally
WITHOUT_CLASSIFICATION	Prevent entry if nothing to do
WITHOUT_CLASSIFICATION	These must not be static, otherwise Language change does not work $NON-NLS-1$
WITHOUT_CLASSIFICATION	PERTHREAD FIELD
WITHOUT_CLASSIFICATION	In case we are converting back from floating point, drop the decimal fraction $NON-NLS-1$
WITHOUT_CLASSIFICATION	TYPE FIELD
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	TEXT FIELD
WITHOUT_CLASSIFICATION	TEXT FIELD
WITHOUT_CLASSIFICATION	TEXT FIELD
WITHOUT_CLASSIFICATION	TEXT FIELD
WITHOUT_CLASSIFICATION	TEXT FIELD
WITHOUT_CLASSIFICATION	Standalone
WITHOUT_CLASSIFICATION	Embedded
WITHOUT_CLASSIFICATION	JPanel loopPanel = new JPanel(new BorderLayout(5, 0));
WITHOUT_CLASSIFICATION	Only replace default if it is provided
WITHOUT_CLASSIFICATION	may be null for PUT In an application/x-www-form-urlencoded request, we only support parameters, no file upload is allowed
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Should not happen
WITHOUT_CLASSIFICATION	implements UnsharedComponent
WITHOUT_CLASSIFICATION	Fetch some variables
WITHOUT_CLASSIFICATION	LOOP LABEL $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	+ JMX file attributes $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ - JMX file attributes
WITHOUT_CLASSIFICATION	Checkbox $NON-NLS-1$
WITHOUT_CLASSIFICATION	================= internal business =================
WITHOUT_CLASSIFICATION	DROP-DOWN MENU
WITHOUT_CLASSIFICATION	number of previous matches
WITHOUT_CLASSIFICATION	reset previous result
WITHOUT_CLASSIFICATION	e.g. DTD not reachable
WITHOUT_CLASSIFICATION	this method assumes UTF-8 input data
WITHOUT_CLASSIFICATION	Can happen for bad input document
WITHOUT_CLASSIFICATION	============= object properties ================
WITHOUT_CLASSIFICATION	Permissible values: true - match against headers false or absent - match against body (this was the original default) URL - match against URL These are passed to the setUseField() method Do not change these values!
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Will already have been logged by XPathUtil fail the sample
WITHOUT_CLASSIFICATION	Just in case Clear any other remaining variables
WITHOUT_CLASSIFICATION	What to match against. N.B. do not change the string value or test plans will break! $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOTE: responseData encoding is server specific Therefore we do byte -> unicode -> byte conversion to ensure UTF-8 encoding as required by XPathUtil convert unicode String -> UTF-8 bytes $NON-NLS-1$
WITHOUT_CLASSIFICATION	ensure old value is not left defined
WITHOUT_CLASSIFICATION	ensure old value is not left defined
WITHOUT_CLASSIFICATION	Fetch some variables
WITHOUT_CLASSIFICATION	Only replace default if it is provided
WITHOUT_CLASSIFICATION	Note: match.groups() includes group 0
WITHOUT_CLASSIFICATION	refname has already been set to the default (if present)
WITHOUT_CLASSIFICATION	Number of refName_n variable sets to keep
WITHOUT_CLASSIFICATION	Number of refName_n variable sets to keep
WITHOUT_CLASSIFICATION	Save the count
WITHOUT_CLASSIFICATION	Original match behaviour
WITHOUT_CLASSIFICATION	Original match behaviour
WITHOUT_CLASSIFICATION	< 0 means we save all the matches
WITHOUT_CLASSIFICATION	remove any single matches
WITHOUT_CLASSIFICATION	Remove any left-over variables
WITHOUT_CLASSIFICATION	no need to process further
WITHOUT_CLASSIFICATION	Remove the group count
WITHOUT_CLASSIFICATION	How many groups are there?
WITHOUT_CLASSIFICATION	remove the remaining _gn vars
WITHOUT_CLASSIFICATION	trailing string is not empty
WITHOUT_CLASSIFICATION	Contains Strings and Integers
WITHOUT_CLASSIFICATION	remove the g0,g1...gn vars
WITHOUT_CLASSIFICATION	add match as Integer
WITHOUT_CLASSIFICATION	string is not empty
WITHOUT_CLASSIFICATION	Allow for property not yet being set (probably only applies to Test cases)
WITHOUT_CLASSIFICATION	Random match
WITHOUT_CLASSIFICATION	for request Data
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ e.g. "Transfer-Encoding: chunked", which is processed automatically by the underlying protocol $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ pseudo-header for reporting Local Address $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ For handling caching $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ e.g. public, max-age=259200 e.g. Date Header of response
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Use format to create number; if it fails, use the default
WITHOUT_CLASSIFICATION	< 0 means we save all the matches
WITHOUT_CLASSIFICATION	Save the count
WITHOUT_CLASSIFICATION	Remove any left-over variables
WITHOUT_CLASSIFICATION	no need to process further
WITHOUT_CLASSIFICATION	Random match
WITHOUT_CLASSIFICATION	Next line
WITHOUT_CLASSIFICATION	Next line
WITHOUT_CLASSIFICATION	Used for per-thread/user storage of increment in Thread Group Main loop
WITHOUT_CLASSIFICATION	So we know which button is selected
WITHOUT_CLASSIFICATION	reset
WITHOUT_CLASSIFICATION	Used for per-thread/user numbers
WITHOUT_CLASSIFICATION	Cannot use getThreadContext() as not cloned per thread
WITHOUT_CLASSIFICATION	get to 'path' part of the URL, preserving schema, auth, host if present
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	This class is not cloned per thread, so this is shared @GuardedBy("this")
WITHOUT_CLASSIFICATION	Although the lock appears to be an instance lock, in fact the lock is shared between all threads in a thread group, but different thread groups have different locks - see the clone() method below The lock ensures that all the variables are processed together, which is important for functions such as __CSVRead and _StringFromFile.
WITHOUT_CLASSIFICATION	Lock object must exist
WITHOUT_CLASSIFICATION	ensure that clones share the same lock object
WITHOUT_CLASSIFICATION	super.mergeIn(element);
WITHOUT_CLASSIFICATION	Don't process the NAME column
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Verify for a ".." component at next iteration
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	paramTable.setRowSelectionAllowed(true); paramTable.setColumnSelectionAllowed(true);
WITHOUT_CLASSIFICATION	property values are strings
WITHOUT_CLASSIFICATION	paramTable.setCellSelectionEnabled(true); paramTable.setPreferredScrollableViewportSize(new Dimension(100, 70));
WITHOUT_CLASSIFICATION	Send the mail ...
WITHOUT_CLASSIFICATION	Send the mail ...
WITHOUT_CLASSIFICATION	create some properties and get the default Session
WITHOUT_CLASSIFICATION	create a message
WITHOUT_CLASSIFICATION	This can't happen (how should utf8 not be supported!?!), so just throw an Error:
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	for request Data
WITHOUT_CLASSIFICATION	setter/getter - JavaDoc-Comments not needed...
WITHOUT_CLASSIFICATION	-1 is the code for a failed sample.
WITHOUT_CLASSIFICATION	private void setSuccessCount(long count) { this.successCount = count; }
WITHOUT_CLASSIFICATION	private void setFailureCount(long count) { this.failureCount = count; }
WITHOUT_CLASSIFICATION	sends the result to the visualiser updates the model used for sending e-mails
WITHOUT_CLASSIFICATION	Actions
WITHOUT_CLASSIFICATION	Action targets
WITHOUT_CLASSIFICATION	public static final int THREAD_GROUP = 1;
WITHOUT_CLASSIFICATION	This means no sample is saved
WITHOUT_CLASSIFICATION	take copy so cannot get NPE
WITHOUT_CLASSIFICATION	Gui components
WITHOUT_CLASSIFICATION	private ButtonGroup actionButtons;
WITHOUT_CLASSIFICATION	State variables
WITHOUT_CLASSIFICATION	Target
WITHOUT_CLASSIFICATION	Action
WITHOUT_CLASSIFICATION	Duration
WITHOUT_CLASSIFICATION	The property name to be used to look up the display string
WITHOUT_CLASSIFICATION	For calculating throughput across all threads
WITHOUT_CLASSIFICATION	For holding the ThrougputInfo objects for all ThreadGroups. Keyed by AbstractThreadGroup objects
WITHOUT_CLASSIFICATION	If previous time is zero, then target will be in the past. This is what we want, so first sample is run without a delay.
WITHOUT_CLASSIFICATION	assume the sample will run as soon as the delay has expired
WITHOUT_CLASSIFICATION	Calculate the delay based on the mode
WITHOUT_CLASSIFICATION	N.B. we fetch the throughput each time, as it may vary during a test
WITHOUT_CLASSIFICATION	Total number of threads
WITHOUT_CLASSIFICATION	Active threads in this group
WITHOUT_CLASSIFICATION	All threads - alternate calculation
WITHOUT_CLASSIFICATION	All threads in this group - alternate calculation
WITHOUT_CLASSIFICATION	no need to sync as one per instance
WITHOUT_CLASSIFICATION	Add to cache
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Cannot happen
WITHOUT_CLASSIFICATION	String in the panel Do not make these static, otherwise language changes don't work $NON-NLS-1$
WITHOUT_CLASSIFICATION	We did not replace the entry so use the existing one
WITHOUT_CLASSIFICATION	e.g. 0 i.e. 1
WITHOUT_CLASSIFICATION	We're behind schedule -- try to catch up: assume the sample will run immediately
WITHOUT_CLASSIFICATION	For access from test code
WITHOUT_CLASSIFICATION	Synchronize on the info object's MUTEX to ensure Multiple threads don't update the scheduled time simultaneously
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	For access from test code
WITHOUT_CLASSIFICATION	Unique Barrier creation ensured by synchronized setup
WITHOUT_CLASSIFICATION	must be defined
WITHOUT_CLASSIFICATION	Instantiate requestview classes
WITHOUT_CLASSIFICATION	Ensure transient object is created by the server
WITHOUT_CLASSIFICATION	DELAY DEVIATION
WITHOUT_CLASSIFICATION	Lazy init
WITHOUT_CLASSIFICATION	use later
WITHOUT_CLASSIFICATION	AVG DELAY
WITHOUT_CLASSIFICATION	Prepare the Request tabbed pane
WITHOUT_CLASSIFICATION	place raw tab in first position (first tab)
WITHOUT_CLASSIFICATION	Hint to background color on bottom tabs (grey, not blue)
WITHOUT_CLASSIFICATION	We assume the argument value is encoded according to the HTTP spec, i.e. UTF-8
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Create the panels for the regexp tab
WITHOUT_CLASSIFICATION	go to first line
WITHOUT_CLASSIFICATION	Construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	Add regexp tester pane $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	private static final int LIMIT_STR_SIZE = 100; private boolean isRoot;
WITHOUT_CLASSIFICATION	if other node type, we will just skip it
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	NAME
WITHOUT_CLASSIFICATION	description Panel
WITHOUT_CLASSIFICATION	number Panel
WITHOUT_CLASSIFICATION	information display Panel
WITHOUT_CLASSIFICATION	boolean resized = true;
WITHOUT_CLASSIFICATION	rounds!
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	NAME
WITHOUT_CLASSIFICATION	Set up the table itself
WITHOUT_CLASSIFICATION	everyone is free to swing on its side :) add(infoPanel, BorderLayout.EAST);
WITHOUT_CLASSIFICATION	Note: the resource string won't respond to locale-changes, however this does not matter as it is only used when pasting to the clipboard
WITHOUT_CLASSIFICATION	dimension of the SplineGraph is the same resized = false;
WITHOUT_CLASSIFICATION	Sample number (string) Start Time Thread Name Label Sample Time Status Bytes
WITHOUT_CLASSIFICATION	dimension changed resized = true;
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Add the main panel and the graph
WITHOUT_CLASSIFICATION	Column renderers
WITHOUT_CLASSIFICATION	The object used for each row
WITHOUT_CLASSIFICATION	table.getTableHeader().setReorderingAllowed(false);
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Make a internal list of all results to allow reload data with filter or interval
WITHOUT_CLASSIFICATION	Default checked $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set up footer of table which displays numerics of the graphs
WITHOUT_CLASSIFICATION	Generate x-axis label and associated color
WITHOUT_CLASSIFICATION	Set up the table with footer
WITHOUT_CLASSIFICATION	Sampler selection
WITHOUT_CLASSIFICATION	internal list of all results
WITHOUT_CLASSIFICATION	Use for x-axis scale
WITHOUT_CLASSIFICATION	we check the count to see if we have exceeded the number of lines to parse. There's no way to know where to stop in the file. Therefore we use break to escape the while loop when we've reached the count.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	reset colors index
WITHOUT_CLASSIFICATION	List of value by sampler
WITHOUT_CLASSIFICATION	We want to retain insertion order, so LinkedHashMap is necessary
WITHOUT_CLASSIFICATION	canvas size
WITHOUT_CLASSIFICATION	Draw the graph
WITHOUT_CLASSIFICATION	Test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	Calculate intermediate values (if needed)
WITHOUT_CLASSIFICATION	log.debug("data["+s+"]["+idx+"]: " + data[s][idx]);
WITHOUT_CLASSIFICATION	If clic on the Graph tab, make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	if use dynamic graph size is checked, we disable the dimension fields
WITHOUT_CLASSIFICATION	Force reload data
WITHOUT_CLASSIFICATION	Not 'else if' because forceReloadData
WITHOUT_CLASSIFICATION	Reload data from file
WITHOUT_CLASSIFICATION	Reload data form internal list of results
WITHOUT_CLASSIFICATION	Calculate the test duration. Needs to xAxis Labels and getData.
WITHOUT_CLASSIFICATION	Button
WITHOUT_CLASSIFICATION	Button
WITHOUT_CLASSIFICATION	Search field
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: bold
WITHOUT_CLASSIFICATION	default: circle
WITHOUT_CLASSIFICATION	default option
WITHOUT_CLASSIFICATION	Keep copies of the two editors needed
WITHOUT_CLASSIFICATION	could be <HTML lang=""> $NON-NLS-1$
WITHOUT_CLASSIFICATION	Look for a case variation
WITHOUT_CLASSIFICATION	ditto $NON-NLS-1$
WITHOUT_CLASSIFICATION	To disable downloading and rendering of images and frames, enable the editor-kit. The Stream property can then be
WITHOUT_CLASSIFICATION	Must be done before setContentType
WITHOUT_CLASSIFICATION	now we create the compiled pattern and add it to the arraylist
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	the child to be removed will always be 0 'cos as the nodes are removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	get the text response and image icon to determine which is NOT null
WITHOUT_CLASSIFICATION	Bug can generate RTE
WITHOUT_CLASSIFICATION	number of nodes
WITHOUT_CLASSIFICATION	number of non extreme nodes (_m-2)
WITHOUT_CLASSIFICATION	the number of nodes is defined by the length of r
WITHOUT_CLASSIFICATION	grab the nodes
WITHOUT_CLASSIFICATION	computes interpolation coefficients
WITHOUT_CLASSIFICATION	creation of the interpolation structure
WITHOUT_CLASSIFICATION	local variables
WITHOUT_CLASSIFICATION	local variables
WITHOUT_CLASSIFICATION	initialize system structures (just to be safe)
WITHOUT_CLASSIFICATION	initialize the diagonal of the system matrix (A) to 4
WITHOUT_CLASSIFICATION	initialize the two minor diagonals of A to 1
WITHOUT_CLASSIFICATION	initialize B
WITHOUT_CLASSIFICATION	di (degree 0)
WITHOUT_CLASSIFICATION	ci (degree 1)
WITHOUT_CLASSIFICATION	bi (degree 2)
WITHOUT_CLASSIFICATION	ai (degree 3)
WITHOUT_CLASSIFICATION	intermediate arrays
WITHOUT_CLASSIFICATION	Jacobi convergence test
WITHOUT_CLASSIFICATION	init newX and oldX arrays to 0
WITHOUT_CLASSIFICATION	main iteration
WITHOUT_CLASSIFICATION	verify t belongs to the curve (range [0, _m-1])
WITHOUT_CLASSIFICATION	silent error, consider the curve is constant outside its range
WITHOUT_CLASSIFICATION	seek the good interval for t and get the piece of curve on it
WITHOUT_CLASSIFICATION	the polynomial calculation is done by the (fast) Euler method
WITHOUT_CLASSIFICATION	computes auto-scaling and absolute plots
WITHOUT_CLASSIFICATION	shouldn't draw negative values
WITHOUT_CLASSIFICATION	we want to return the context that is actually in the map if it's the first put we will have a null result
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Settings panes
WITHOUT_CLASSIFICATION	the number of non extreme nodes is the number of intervals minus 1, i.e. the length of r minus 2
WITHOUT_CLASSIFICATION	the upper limit of the curve range belongs by definition to the last interval
WITHOUT_CLASSIFICATION	Jacobi system resolving results are stored in _rS computes the coefficients (di, ci, bi, ai) from the results
WITHOUT_CLASSIFICATION	computes relative auto-scaled plots to fit in the specified area
WITHOUT_CLASSIFICATION	computes the value of the curve at the pecified abscissa and relative to the beginning of the right piece of Spline curve
WITHOUT_CLASSIFICATION	return label
WITHOUT_CLASSIFICATION	initialize GUI.
WITHOUT_CLASSIFICATION	show the grid lines, to turn it off, set it to zero
WITHOUT_CLASSIFICATION	Test mail button
WITHOUT_CLASSIFICATION	reset the paint counter
WITHOUT_CLASSIFICATION	Failures count
WITHOUT_CLASSIFICATION	set the Y Axis to round
WITHOUT_CLASSIFICATION	Does not need to be synch. because it is only accessed from the sampler thread The ClientPool does access it in a different thread, but ClientPool is fully synch.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Used by Request Panel $NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#init()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#clearData()
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	go to first line
WITHOUT_CLASSIFICATION	Construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	Don't display Request headers label if rh is null or empty
WITHOUT_CLASSIFICATION	Implementation of the ActionListener-Interface.
WITHOUT_CLASSIFICATION	Methods used to store and retrieve the MailerVisualizer.
WITHOUT_CLASSIFICATION	Methods to implement the ModelListener.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ don't set empty to keep cssJquery cssJqueryField.setText(""); $NON-NLS-1$ $NON-NLS-1$ don't set empty to keep attribute this.attributeField.setText(""); $NON-NLS-1$ don't change impl this.cssJqueryLabeledChoice.setText(HtmlExtractor.DEFAULT_EXTRACTOR);
WITHOUT_CLASSIFICATION	Create the panels for the cssJquery tab
WITHOUT_CLASSIFICATION	most current subclasses can process text
WITHOUT_CLASSIFICATION	Could be SampleResult or AssertionResult
WITHOUT_CLASSIFICATION	add a message when no request data (ex. Java request)
WITHOUT_CLASSIFICATION	to save last select tab (raw/parsed)
WITHOUT_CLASSIFICATION	Result column renderers
WITHOUT_CLASSIFICATION	Response headers column renderers
WITHOUT_CLASSIFICATION	Response fields column renderers
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	The object used for each row
WITHOUT_CLASSIFICATION	The object used for each row
WITHOUT_CLASSIFICATION	Add cssJquery tester pane $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. these are not multi-threaded, so don't make it static ISO format $NON-NLS-1$
WITHOUT_CLASSIFICATION	one space for blank header $NON-NLS-1$ one space for blank header $NON-NLS-1$
WITHOUT_CLASSIFICATION	Key Value
WITHOUT_CLASSIFICATION	Key Value
WITHOUT_CLASSIFICATION	Key Value
WITHOUT_CLASSIFICATION	create tables The object used for each row
WITHOUT_CLASSIFICATION	Response Data $NON-NLS-1$ Request Data $NON-NLS-1$ Sampler result $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Create the panels for the other tabs
WITHOUT_CLASSIFICATION	Clear all data before display a new
WITHOUT_CLASSIFICATION	We are displaying a SampleResult
WITHOUT_CLASSIFICATION	reset for reuse
WITHOUT_CLASSIFICATION	reset for reuse
WITHOUT_CLASSIFICATION	no need to change the foreground color
WITHOUT_CLASSIFICATION	response message label
WITHOUT_CLASSIFICATION	Done
WITHOUT_CLASSIFICATION	Parsed response headers
WITHOUT_CLASSIFICATION	Reset search
WITHOUT_CLASSIFICATION	restore tabbed pane parsed if needed
WITHOUT_CLASSIFICATION	restore last selected tab
WITHOUT_CLASSIFICATION	Remove the other (parsed) tab if present
WITHOUT_CLASSIFICATION	Cache for object-message, only used when parsing from a file because in text-area property replacement might have been used
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Hint to background color on bottom tabs (grey, not blue)
WITHOUT_CLASSIFICATION	Set up the 1st table Result with empty headers
WITHOUT_CLASSIFICATION	quieten Findbugs default - do nothing
WITHOUT_CLASSIFICATION	Add styles to use for different types of status messages
WITHOUT_CLASSIFICATION	Prepare the Results tabbed pane
WITHOUT_CLASSIFICATION	Set up the 3rd table
WITHOUT_CLASSIFICATION	Set up the 2nd table
WITHOUT_CLASSIFICATION	Create the split pane
WITHOUT_CLASSIFICATION	Create the split pane
WITHOUT_CLASSIFICATION	Add search text extension
WITHOUT_CLASSIFICATION	Maximum size that we will display
WITHOUT_CLASSIFICATION	Add sample
WITHOUT_CLASSIFICATION	Add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	Add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	Prepare the common tab
WITHOUT_CLASSIFICATION	init right side with first render
WITHOUT_CLASSIFICATION	to restore last tab used
WITHOUT_CLASSIFICATION	drop-down list for renderer
WITHOUT_CLASSIFICATION	if no results render in jmeter.properties, load Standard (default)
WITHOUT_CLASSIFICATION	Instantiate render classes
WITHOUT_CLASSIFICATION	preset to "Text" option
WITHOUT_CLASSIFICATION	to restore last selected tab (better user-friendly)
WITHOUT_CLASSIFICATION	Remove old right side
WITHOUT_CLASSIFICATION	create and add a new right side
WITHOUT_CLASSIFICATION	To display current sampler result before change
WITHOUT_CLASSIFICATION	in the case the test uses a file, we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	NAME
WITHOUT_CLASSIFICATION	the child to be removed will always be 0 'cos as the nodes are removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	Processes Assertions display a SampleResult
WITHOUT_CLASSIFICATION	Set the status for the node
WITHOUT_CLASSIFICATION	NOOP state is held by component
WITHOUT_CLASSIFICATION	TEXTAREA LABEL
WITHOUT_CLASSIFICATION	TEXTAREA
WITHOUT_CLASSIFICATION	define max scale y axis
WITHOUT_CLASSIFICATION	if the title graph is empty, we can assume some default
WITHOUT_CLASSIFICATION	replace _xAxisTitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	Stroke and shape line settings
WITHOUT_CLASSIFICATION	Lines colors
WITHOUT_CLASSIFICATION	Define chart type (line)
WITHOUT_CLASSIFICATION	Y Axis ruler
WITHOUT_CLASSIFICATION	~a tic every 50 px
WITHOUT_CLASSIFICATION	Increment cannot be < 1
WITHOUT_CLASSIFICATION	Manage legend placement
WITHOUT_CLASSIFICATION	return new Dimension(width, 400);
WITHOUT_CLASSIFICATION	int width = getWidth();
WITHOUT_CLASSIFICATION	will always be within range of an int: as must be < width
WITHOUT_CLASSIFICATION	Don't start yet if stop between samples
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	We want to retain insertion order, so LinkedHashMap is necessary
WITHOUT_CLASSIFICATION	define max scale y axis
WITHOUT_CLASSIFICATION	replace _xAxisTitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	if the "Title of Graph" is empty, we can assume some default
WITHOUT_CLASSIFICATION	Same ViewResultsTree
WITHOUT_CLASSIFICATION	Needed by Visualizer interface
WITHOUT_CLASSIFICATION	Educated guess
WITHOUT_CLASSIFICATION	if the labels are too long, they'll be "squeezed" to make the chart viewable.
WITHOUT_CLASSIFICATION	Y Axis
WITHOUT_CLASSIFICATION	new Font("SansSerif", Font.PLAIN, 10)
WITHOUT_CLASSIFICATION	enable embedded html resources
WITHOUT_CLASSIFICATION	----------- get/set methods -------------------
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Column renderers
WITHOUT_CLASSIFICATION	TODO Charset ?
WITHOUT_CLASSIFICATION	Synch is needed because multiple threads can update the counts.
WITHOUT_CLASSIFICATION	SortFilterModel mySortedModel = new SortFilterModel(myStatTableModel);
WITHOUT_CLASSIFICATION	Search field
WITHOUT_CLASSIFICATION	prepare highlighter to show text find with search command
WITHOUT_CLASSIFICATION	new search?
WITHOUT_CLASSIFICATION	save search position
WITHOUT_CLASSIFICATION	Display not found message and reset search
WITHOUT_CLASSIFICATION	add listener to intercept texttofind changes and reset search
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Column renderers
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	Reset search
WITHOUT_CLASSIFICATION	Synch is needed because multiple threads can update the counts.
WITHOUT_CLASSIFICATION	Buttons
WITHOUT_CLASSIFICATION	when Enter is pressed, search start
WITHOUT_CLASSIFICATION	default not visible
WITHOUT_CLASSIFICATION	Search text in response data
WITHOUT_CLASSIFICATION	DocumentListener method
WITHOUT_CLASSIFICATION	DocumentListener method
WITHOUT_CLASSIFICATION	DocumentListener method
WITHOUT_CLASSIFICATION	desactivate or not specials regexp char
WITHOUT_CLASSIFICATION	Label count Mean Min Max Std Dev. Error %age Throughput kB/sec avg. pageSize
WITHOUT_CLASSIFICATION	All rows have this class
WITHOUT_CLASSIFICATION	Synch is needed because a clear can occur while add occurs
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Add the main panel and the graph
WITHOUT_CLASSIFICATION	A button for adding new arguments to the table. private JButton add; A button for removing arguments from the table. private JButton delete;
WITHOUT_CLASSIFICATION	Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	p.add(makeButtonPanel(), BorderLayout.SOUTH);
WITHOUT_CLASSIFICATION	new Functor("setName"), $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	OK, because used in synchronised method
WITHOUT_CLASSIFICATION	We have received one more sample
WITHOUT_CLASSIFICATION	Set up the graph with header, footer, Y axis and graph display
WITHOUT_CLASSIFICATION	Methods used in creating the GUI
WITHOUT_CLASSIFICATION	protected void initializeTableModel() { tableModel = new ObjectTableModel( new String[] { ArgumentsPanel.COLUMN_NAMES_0, ArgumentsPanel.COLUMN_NAMES_1, ENCODE_OR_NOT, INCLUDE_EQUALS }, new Functor[] { new Functor("getName"), new Functor("getValue"), new Functor("isAlwaysEncoded"), new Functor("isUseEquals") }, new Functor[] { new Functor("setName"), new Functor("setValue"), new Functor("setAlwaysEncoded"), new Functor("setUseEquals") }, new Class[] { String.class, String.class, Boolean.class, Boolean.class }); }
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Column renderers
WITHOUT_CLASSIFICATION	Default checked $NON-NLS-1$
WITHOUT_CLASSIFICATION	Default checked $NON-NLS-1$
WITHOUT_CLASSIFICATION	Default checked $NON-NLS-1$
WITHOUT_CLASSIFICATION	The text field should expand horizontally, but have a fixed height
WITHOUT_CLASSIFICATION	This column actually consists of a row with two sub-columns The first column contains the labels, and the second column contains the fields.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Sampler selection
WITHOUT_CLASSIFICATION	canvas size
WITHOUT_CLASSIFICATION	If clic on the Graph tab, make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	if use dynamic graph size is checked, we disable the dimension fields
WITHOUT_CLASSIFICATION	Force reload data
WITHOUT_CLASSIFICATION	Not 'else if' because forceReloadData
WITHOUT_CLASSIFICATION	Button
WITHOUT_CLASSIFICATION	Button
WITHOUT_CLASSIFICATION	Search field
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: bold
WITHOUT_CLASSIFICATION	default option
WITHOUT_CLASSIFICATION	TODO Charset ?
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: normal
WITHOUT_CLASSIFICATION	Label count Mean median 90% Min Max Error %age Throughpur pageSize
WITHOUT_CLASSIFICATION	API expects null, not empty array
WITHOUT_CLASSIFICATION	API expects null, not empty array
WITHOUT_CLASSIFICATION	Changing color for column
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	first lets draw the grid
WITHOUT_CLASSIFICATION	draw the X axis
WITHOUT_CLASSIFICATION	draw the Y axis
WITHOUT_CLASSIFICATION	now draw the bar chart
WITHOUT_CLASSIFICATION	we sort the objects
WITHOUT_CLASSIFICATION	calculate the height
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	the test plan has to have more than 200 samples for it to generate half way decent distribution graph. the larger the sample, the better the results.
WITHOUT_CLASSIFICATION	if the height is less than one, we set it to one pixel
WITHOUT_CLASSIFICATION	draw a red line for 90% point
WITHOUT_CLASSIFICATION	draw an orange line for 50% point
WITHOUT_CLASSIFICATION	"<?xml "
WITHOUT_CLASSIFICATION	Skip the leading bytes (if any)
WITHOUT_CLASSIFICATION	there is also a javax.swing.text.Document class.
WITHOUT_CLASSIFICATION	clear result tab on Ctrl-E
WITHOUT_CLASSIFICATION	Must return a valid node, or may generate an NPE
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Add the main panel and the graph
WITHOUT_CLASSIFICATION	We have received one more sample
WITHOUT_CLASSIFICATION	Set up the graph with header, footer, Y axis and graph display
WITHOUT_CLASSIFICATION	Methods used in creating the GUI
WITHOUT_CLASSIFICATION	These are not currently updated
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	this.graph.clear();
WITHOUT_CLASSIFICATION	compute the new Spline curve
WITHOUT_CLASSIFICATION	do nothing, wait for the next pile to complete
WITHOUT_CLASSIFICATION	made currentSample volatile
WITHOUT_CLASSIFICATION	Find JMeter home dir from the initial classpath
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Java on Mac OS can add a second entry to the initial classpath $NON-NLS-1$
WITHOUT_CLASSIFICATION	e.g. started from IDE with full classpath Allow override $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Add standard jar locations to initial classpath
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	only accept jar files $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	usesUNC
WITHOUT_CLASSIFICATION	ClassFinder needs the classpath
WITHOUT_CLASSIFICATION	Ensure that directory URLs end in "/" $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	ClassFinder needs this
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Make the addURL method visible
WITHOUT_CLASSIFICATION	needed for ShutdownClient
WITHOUT_CLASSIFICATION	If the -t flag is to "LAST", then the last loaded file (if any) is used
WITHOUT_CLASSIFICATION	Set it
WITHOUT_CLASSIFICATION	Reset it
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ jmeter.log $NON-NLS-1$ sample result log file $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Properties to be sent to remote servers
WITHOUT_CLASSIFICATION	should remote engines be stopped at end of non-GUI test?
WITHOUT_CLASSIFICATION	Check option combinations
WITHOUT_CLASSIFICATION	Also initialises JMeter logging
WITHOUT_CLASSIFICATION	The following is needed for HTTPClient. (originally tried doing this in HTTPSampler2, but it appears that it was done too late when running in GUI mode) Set the commons logging default to Avalon Logkit, if not already defined
WITHOUT_CLASSIFICATION	Set some (hopefully!) useful properties
WITHOUT_CLASSIFICATION	Start the server
WITHOUT_CLASSIFICATION	most recent
WITHOUT_CLASSIFICATION	Update classloader if necessary
WITHOUT_CLASSIFICATION	bshinit,log);
WITHOUT_CLASSIFICATION	Do what would be done earlier
WITHOUT_CLASSIFICATION	Do what would be done earlier
WITHOUT_CLASSIFICATION	Should not have any text arguments
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set it
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	for Httpclient for Httpclient
WITHOUT_CLASSIFICATION	Process command line property definitions These can potentially occur multiple times
WITHOUT_CLASSIFICATION	Set it
WITHOUT_CLASSIFICATION	Reset it
WITHOUT_CLASSIFICATION	Set category
WITHOUT_CLASSIFICATION	Set root level
WITHOUT_CLASSIFICATION	Checks for LAST or LASTsuffix. Returns the LAST name with .JMX replaced by suffix.
WITHOUT_CLASSIFICATION	most recent $NON-NLS-1$
WITHOUT_CLASSIFICATION	run test in batch mode
WITHOUT_CLASSIFICATION	only add Summariser if it can not be shared with the ResultCollector
WITHOUT_CLASSIFICATION	not Replaceable Controller
WITHOUT_CLASSIFICATION	Not enabled
WITHOUT_CLASSIFICATION	Not enabled
WITHOUT_CLASSIFICATION	Not a TestElement
WITHOUT_CLASSIFICATION	Not a ReplaceableController
WITHOUT_CLASSIFICATION	Listen to test and handle tidyup after non-GUI test completes. If running a remote test, then after waiting a few seconds for listeners to finish files, it calls ClientJMeterEngine.tidyRMI() to deal with the Naming Timer Thread.
WITHOUT_CLASSIFICATION	keep track of remote tests
WITHOUT_CLASSIFICATION	NOT YET USED private JMeter _parent;
WITHOUT_CLASSIFICATION	_parent = unused;
WITHOUT_CLASSIFICATION	it will be null unless remoteStop = true
WITHOUT_CLASSIFICATION	Allow listeners to close files
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Allow enough time for JVM to exit
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Replacement only needs to occur when starting the engine @see StandardJMeterEngine.run()
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Deliberate use of deprecated ctor Create non-GUI version to avoid headless problems
WITHOUT_CLASSIFICATION	Remove the disabled items For GUI runs this is done in Start.java
WITHOUT_CLASSIFICATION	This cannot be a JMeter class variable, because properties are not initialised until later.
WITHOUT_CLASSIFICATION	This is a daemon thread, which should only reach here if there are other non-daemon threads still active
WITHOUT_CLASSIFICATION	Only accept commands from the local host
WITHOUT_CLASSIFICATION	Needs to be public for tests
WITHOUT_CLASSIFICATION	needs to be public for testing
WITHOUT_CLASSIFICATION	Skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Because CollectionProperty.mergeIn will not prevent adding two properties of the same name, we need to select the first value so that this element's values prevail over defaults provided by configuration elements:
WITHOUT_CLASSIFICATION	will only contain Argument or HTTPArgument
WITHOUT_CLASSIFICATION	add(makeTitlePanel(), BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	Force the table to be at least 70 pixels high
WITHOUT_CLASSIFICATION	only contains Argument (or HTTPArgument)
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	Evaluate the condition, which can be: blank or LAST = was the last sampler OK? otherwise, evaluate the condition to see if it is not "false" If blank, only evaluate at the end of the loop Must only be called at start and end of loop @param loopEnd - are we at loop end? @return true means OK to continue
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	Hide Window on ESC
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	change to false after the first insert
WITHOUT_CLASSIFICATION	Do update on Enter
WITHOUT_CLASSIFICATION	In spite of the name, this is actually used to determine if the loop controller is repeatable. The value is only used in nextIsNull() when the loop end condition has been detected: If forever==true, then it calls resetLoopCount(), otherwise it calls setDone(true). Loop Controllers always set forever=true, so that they will be executed next time the parent invokes them. Thread Group sets the value false, so nextIsNull() sets done, and the Thread Group will not be repeated. However, it's not clear that a Thread Group could ever be repeated.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	for unit test code @see TestIfController
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	If blank, only check previous sample when at end of loop $NON-NLS-1$
WITHOUT_CLASSIFICATION	cnd may be null if next() called us $NON-NLS-1$
WITHOUT_CLASSIFICATION	Evaluation occurs when nbLoops is not yet evaluated or when nbLoops is equal to special value INFINITE_LOOP_COUNT
WITHOUT_CLASSIFICATION	now evaluate the condition using JavaScript
WITHOUT_CLASSIFICATION	We should only evalute the condition if it is the first time ( first "iteration" ) we are called. For subsequent calls, we are inside the IfControllerGroup, so then we just pass the control to the next item inside the if control
WITHOUT_CLASSIFICATION	If-test is false, need to re-initialize indexes
WITHOUT_CLASSIFICATION	for getIterCount
WITHOUT_CLASSIFICATION	Runtime is zero - no point staying around
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	This is needed for OnceOnly to work like other Loop Controllers
WITHOUT_CLASSIFICATION	Only create the map if it is required
WITHOUT_CLASSIFICATION	May be replaced by RandomOrderController
WITHOUT_CLASSIFICATION	incrementCurrent();
WITHOUT_CLASSIFICATION	must be a controller
WITHOUT_CLASSIFICATION	must be a controller
WITHOUT_CLASSIFICATION	can only match once
WITHOUT_CLASSIFICATION	i.e. "true"
WITHOUT_CLASSIFICATION	default true for compatibility
WITHOUT_CLASSIFICATION	/ Transaction Controller - parent
WITHOUT_CLASSIFICATION	Check if transaction is done
WITHOUT_CLASSIFICATION	This transaction is done
WITHOUT_CLASSIFICATION	Sample the children of the transaction
WITHOUT_CLASSIFICATION	If we do not get any sub samplers, the transaction is done
WITHOUT_CLASSIFICATION	Transaction Controller - additional sample
WITHOUT_CLASSIFICATION	must be the start of the subtree
WITHOUT_CLASSIFICATION	Assume success
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Standalone
WITHOUT_CLASSIFICATION	Embedded
WITHOUT_CLASSIFICATION	This transaction is done
WITHOUT_CLASSIFICATION	Assume success
WITHOUT_CLASSIFICATION	Check if it is the start of a new transaction must be the start of the subtree
WITHOUT_CLASSIFICATION	We need to call the super.next, instead of this.next, which is done in GenericController, because if we call this.next(), it will return the TransactionSampler, and we do not want that. We need to get the next real sampler or controller
WITHOUT_CLASSIFICATION	Must be the end of the controller
WITHOUT_CLASSIFICATION	We have sampled one of our children
WITHOUT_CLASSIFICATION	We must set res to null now, before sending the event for the transaction, so that we can ignore that event in our sampleOccured method
WITHOUT_CLASSIFICATION	Check if we are still sampling our children
WITHOUT_CLASSIFICATION	Accumulate waiting time for later
WITHOUT_CLASSIFICATION	log.warn("Constructor only intended for use in testing");
WITHOUT_CLASSIFICATION	ensure name is available for debugging
WITHOUT_CLASSIFICATION	It is the JMeterThread which knows how to sample a real sampler
WITHOUT_CLASSIFICATION	Another subsample for the transaction
WITHOUT_CLASSIFICATION	Set Response code of transaction
WITHOUT_CLASSIFICATION	The transaction fails if any sub sample fails
WITHOUT_CLASSIFICATION	Add the sub result to the transaction result
WITHOUT_CLASSIFICATION	Add current time to total for later use (exclude pause time)
WITHOUT_CLASSIFICATION	If selected, then generate parent sample, otherwise as per original controller
WITHOUT_CLASSIFICATION	if selected, add duration of timers to total runtime
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	The Loop Controller panel can be displayed standalone or inside another panel. For standalone, we want to display the TITLE, NAME, etc. (everything). However, if we want to display it within another panel, we just display the Loop Count fields (not the TITLE and NAME).
WITHOUT_CLASSIFICATION	The Loop Controller panel can be displayed standalone or inside another panel. For standalone, we want to display the TITLE, NAME, etc. (everything). However, if we want to display it within another panel, we just display the Loop Count fields (not the TITLE and NAME).
WITHOUT_CLASSIFICATION	Standalone
WITHOUT_CLASSIFICATION	Standalone
WITHOUT_CLASSIFICATION	Embedded
WITHOUT_CLASSIFICATION	Embedded
WITHOUT_CLASSIFICATION	TEXT FIELD $NON-NLS-1$
WITHOUT_CLASSIFICATION	LOOP LABEL $NON-NLS-1$
WITHOUT_CLASSIFICATION	SECONDS LABEL $NON-NLS-1$
WITHOUT_CLASSIFICATION	TEXT FIELD $NON-NLS-1$
WITHOUT_CLASSIFICATION	This check-box defines whether to save WorkBench content or not
WITHOUT_CLASSIFICATION	FOREVER CHECKBOX $NON-NLS-1$
WITHOUT_CLASSIFICATION	Don't wrap this error - display it as is
WITHOUT_CLASSIFICATION	Condition LABEL
WITHOUT_CLASSIFICATION	limit the changes to client only test elements
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	TEXT FIELD $NON-NLS-1$
WITHOUT_CLASSIFICATION	Use expression instead of Javascript $NON-NLS-1$
WITHOUT_CLASSIFICATION	Evaluate All checkbox $NON-NLS-1$
WITHOUT_CLASSIFICATION	TEXT FIELD This means exit if last sample failed $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Used by both StandardJMeterEngine and ClientJMeterEngine. In the latter case, only ResultCollectors are updated, as only these are relevant to the client, and updating other elements causes all sorts of problems. skip certain processing for remote tests
WITHOUT_CLASSIFICATION	Called by JMeter ListenToTest if remoteStop is true
WITHOUT_CLASSIFICATION	Sent later
WITHOUT_CLASSIFICATION	Should we create our own copy of the RMI registry?
WITHOUT_CLASSIFICATION	Create this object using the specified port (0 means anonymous)
WITHOUT_CLASSIFICATION	should perhaps be log.warn, but this causes the client-server test to fail
WITHOUT_CLASSIFICATION	Throw an Exception to ensure caller knows ...
WITHOUT_CLASSIFICATION	close window where another remote client might jump in
WITHOUT_CLASSIFICATION	sets active = true
WITHOUT_CLASSIFICATION	Mail on userlist reported NPE here - looks like only happens if there are network errors, but check anyway
WITHOUT_CLASSIFICATION	Called by: - ClientJMeterEngine.exe() which is called on remoteStop
WITHOUT_CLASSIFICATION	Tidy up any objects we created
WITHOUT_CLASSIFICATION	Help with garbage control
WITHOUT_CLASSIFICATION	The list of current thread groups; may be setUp, main, or tearDown.
WITHOUT_CLASSIFICATION	May be null if called from Unit test
WITHOUT_CLASSIFICATION	May be null if called from Unit test
WITHOUT_CLASSIFICATION	e.g. not yet started
WITHOUT_CLASSIFICATION	ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	End of code to allow engine to be controlled remotely
WITHOUT_CLASSIFICATION	Is testplan serialised?
WITHOUT_CLASSIFICATION	Can't use for loop here because we remove elements
WITHOUT_CLASSIFICATION	Deliberate use of deprecated method
WITHOUT_CLASSIFICATION	we totally failed to stop the test
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	Allow engine and threads to be stopped from outside a thread e.g. from beanshell server Assumes that there is only one instance of the engine at any one time so it is not guaranteed to work ...
WITHOUT_CLASSIFICATION	ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	else will be done by threadFinished()
WITHOUT_CLASSIFICATION	no point continuing
WITHOUT_CLASSIFICATION	TL - S&E
WITHOUT_CLASSIFICATION	Merge in any additional test listeners currently only used by the function parser
WITHOUT_CLASSIFICATION	no longer needed
WITHOUT_CLASSIFICATION	for each thread group, generate threads hand each thread the sampler controller and the listeners, and the timer
WITHOUT_CLASSIFICATION	for each setup thread group
WITHOUT_CLASSIFICATION	for each setup thread group
WITHOUT_CLASSIFICATION	wait for all Setup Threads To Exit
WITHOUT_CLASSIFICATION	The groups have all completed now
WITHOUT_CLASSIFICATION	Here's where the test really starts. Run a Full GC now: it's no harm at all (just delays test start by a tiny amount) and hitting one too early in the test can impair results for short tests.
WITHOUT_CLASSIFICATION	still running at this point, i.e. setUp was not cancelled for each thread group
WITHOUT_CLASSIFICATION	wait for all Test Threads To Exit
WITHOUT_CLASSIFICATION	The groups have all completed now
WITHOUT_CLASSIFICATION	wait for Post threads to stop
WITHOUT_CLASSIFICATION	ConcurrentHashMap does not need protecting
WITHOUT_CLASSIFICATION	Will be null if StopTest thread has started
WITHOUT_CLASSIFICATION	Needs to be run in a separate thread to allow RMI call to return OK
WITHOUT_CLASSIFICATION	Allow RMI to complete
WITHOUT_CLASSIFICATION	TL - all
WITHOUT_CLASSIFICATION	don't add the timer
WITHOUT_CLASSIFICATION	Should we match using regexes?
WITHOUT_CLASSIFICATION	Created during class init; not modified thereafter
WITHOUT_CLASSIFICATION	ignore self
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	i.e. shutdown/stopped during main thread groups re-enable for tearDown if necessary
WITHOUT_CLASSIFICATION	ignore Setup and Post here. We could have filtered the searcher. but then future Thread Group objects wouldn't execute.
WITHOUT_CLASSIFICATION	Must not convert TestElement.gui_class etc
WITHOUT_CLASSIFICATION	end of thread groups No TGs found
WITHOUT_CLASSIFICATION	This should be enough to allow server to exit. default is false
WITHOUT_CLASSIFICATION	Remote exit Called by RemoteJMeterEngineImpl.rexit() and by notifyTestListenersOfEnd() iff exitAfterTest is true; in turn that is called by the run() method and the StopTest class also called
WITHOUT_CLASSIFICATION	Classnames must contain this string [.functions.] $NON-NLS-1$ Classnames must not contain this string [.gui.] $NON-NLS-1$
WITHOUT_CLASSIFICATION	Check can cast for clone Don't clone NoThreadClone unless honourNoThreadClone == false
WITHOUT_CLASSIFICATION	clone will produce correct type
WITHOUT_CLASSIFICATION	Dummy methods needed by Function interface
WITHOUT_CLASSIFICATION	For use by FunctionHelper
WITHOUT_CLASSIFICATION	For use by FunctionHelper
WITHOUT_CLASSIFICATION	Handle escapes
WITHOUT_CLASSIFICATION	found "${"
WITHOUT_CLASSIFICATION	i.e. '\\'
WITHOUT_CLASSIFICATION	save leading text
WITHOUT_CLASSIFICATION	set to start of string
WITHOUT_CLASSIFICATION	Function does not exist, so treat as per missing variable
WITHOUT_CLASSIFICATION	variable, or function with no parameter list
WITHOUT_CLASSIFICATION	ensure that setParameters() is called.
WITHOUT_CLASSIFICATION	end of buffer
WITHOUT_CLASSIFICATION	store the following character
WITHOUT_CLASSIFICATION	Detect functionName() so this does not generate empty string as the parameter
WITHOUT_CLASSIFICATION	Normal exit occurs here
WITHOUT_CLASSIFICATION	Should not happen with StringReader
WITHOUT_CLASSIFICATION	Dropped out, i.e. did not find closing ')'
WITHOUT_CLASSIFICATION	Needed for serialisation testing
WITHOUT_CLASSIFICATION	The default title for the Menu bar
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Process escaped characters Store the \
WITHOUT_CLASSIFICATION	The application name $NON-NLS-1$
WITHOUT_CLASSIFICATION	This is used to keep track of local (non-remote) tests The name is chosen to be an unlikely host-name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Allow display/hide LoggerPanel
WITHOUT_CLASSIFICATION	Transparent JButton with no border
WITHOUT_CLASSIFICATION	Allow display/hide toolbar
WITHOUT_CLASSIFICATION	file New operation may set to null, so just return app name
WITHOUT_CLASSIFICATION	Allow display/hide Log Error/Fatal counter
WITHOUT_CLASSIFICATION	TestStateListener implementation
WITHOUT_CLASSIFICATION	enable drag&drop, install a custom transfer handler
WITHOUT_CLASSIFICATION	add the toolbar
WITHOUT_CLASSIFICATION	Check for file lists specifically
WITHOUT_CLASSIFICATION	used by AbstractReportGui
WITHOUT_CLASSIFICATION	helper method - also used by constructor
WITHOUT_CLASSIFICATION	This stores the state of the TestElement
WITHOUT_CLASSIFICATION	Ensure we use default bundle
WITHOUT_CLASSIFICATION	Sampler error action buttons
WITHOUT_CLASSIFICATION	are we saving the whole tree?
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. originally called clear() @see also Clearable
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	TEXTAREA
WITHOUT_CLASSIFICATION	allow for windows / chars in filename $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	BeanInfo objects also contain locale-sensitive data -- flush them away:
WITHOUT_CLASSIFICATION	$NON-NLS-1$ define AWT WM_CLASS string
WITHOUT_CLASSIFICATION	throws HeadlessException
WITHOUT_CLASSIFICATION	Defaults to continue
WITHOUT_CLASSIFICATION	space between borders and text
WITHOUT_CLASSIFICATION	Generates Configure pop-up dialogue for Listeners from all methods in SampleSaveConfiguration with the signature "boolean saveXXX()". There must be a corresponding "void setXXX(boolean)" method, and a property save_XXX which is used to name the field on the dialogue.
WITHOUT_CLASSIFICATION	Target server panel
WITHOUT_CLASSIFICATION	Limit length of log content
WITHOUT_CLASSIFICATION	If LOGGER_PANEL_MAX_LENGTH is 0, it means all log events are kept
WITHOUT_CLASSIFICATION	The current node is now updated
WITHOUT_CLASSIFICATION	Probably a missing jar
WITHOUT_CLASSIFICATION	Forget about all GUIs we've created so far: we'll need to re-created them all!
WITHOUT_CLASSIFICATION	FIrst make sure we save the content of the current GUI (since we will flush it away):
WITHOUT_CLASSIFICATION	Should we allow directories?
WITHOUT_CLASSIFICATION	Enable file revert action if a file is used
WITHOUT_CLASSIFICATION	If saveWorkBench
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.gui.action.Command#getActionNames()
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Now put the current GUI in place. [This code was copied from the EditCommand action -- we can't just trigger the action because that would populate the current node with the contents of the new GUI -- which is empty.] Fetch once Probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	strPathsOrJars - pathnames or jarfiles to search for classes classNames - required parent class(es) or annotations $NON-NLS-1$ innerClasses - should we include inner classes? contains - classname should contain this string Ignore the classes which are specific to the reporting tool $NON-NLS-1$ notContains - classname should not contain this string annotations - true if classnames are annotations
WITHOUT_CLASSIFICATION	Whether to skip the delete confirmation dialogue $NON-NLS-1$
WITHOUT_CLASSIFICATION	Save parent node for later
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	set the window visible immediately
WITHOUT_CLASSIFICATION	N.B. this only reloads if necessary (ignores the reference)
WITHOUT_CLASSIFICATION	Add this node
WITHOUT_CLASSIFICATION	Add all the child nodes of the node we are adding
WITHOUT_CLASSIFICATION	Ensure the dialog is only created when it is first needed In turn this avoids scanning the templates until first needed
WITHOUT_CLASSIFICATION	Make sure the file ends with proper extension
WITHOUT_CLASSIFICATION	Check if the user is trying to save to an existing file
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Prevent instantiation
WITHOUT_CLASSIFICATION	Prevent instantiation
WITHOUT_CLASSIFICATION	VK_PLUS + CTRL_DOWN_MASK did not work...
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Note: Windows user preferences are stored relative to: HKEY_CURRENT_USER\Software\JavaSoft\Prefs
WITHOUT_CLASSIFICATION	Do not save, user does not want to overwrite
WITHOUT_CLASSIFICATION	Only update the stored copy of the tree for a full save refetch, because convertSubTree affects it
WITHOUT_CLASSIFICATION	package protected to allow access from test code
WITHOUT_CLASSIFICATION	requires JMeterTreeNode
WITHOUT_CLASSIFICATION	we can only move a single node
WITHOUT_CLASSIFICATION	move to the parent
WITHOUT_CLASSIFICATION	move as a child of the next sibling
WITHOUT_CLASSIFICATION	Commented as per sebb http:mail-archives.apache.org/mod_mbox/jmeter-dev/201307.mbox/%3CCAOGo0VZ0z3GMbfsq_gSB%2Bp7nTUqLng6Gy2ecvYbD8_AKb-Dt5w%40mail.gmail.com%3E
WITHOUT_CLASSIFICATION	So elements can only be added as children
WITHOUT_CLASSIFICATION	select the node
WITHOUT_CLASSIFICATION	We must ask the user if it is ok to close current project
WITHOUT_CLASSIFICATION	Load the file for this recent file command
WITHOUT_CLASSIFICATION	Get the preference for the recent files
WITHOUT_CLASSIFICATION	Create the menu item
WITHOUT_CLASSIFICATION	Use the index as the name, used when processing the action
WITHOUT_CLASSIFICATION	Set the KeyStroke to use
WITHOUT_CLASSIFICATION	Add the menu item
WITHOUT_CLASSIFICATION	Add separator as the last item
WITHOUT_CLASSIFICATION	Update menu items to reflect recent files
WITHOUT_CLASSIFICATION	Update menu items to reflect recent files
WITHOUT_CLASSIFICATION	Check if the new file is already in the recent list
WITHOUT_CLASSIFICATION	Add the new file at the start of the list
WITHOUT_CLASSIFICATION	Remove the last item from the list if it was a brand new file
WITHOUT_CLASSIFICATION	Store the recent files
WITHOUT_CLASSIFICATION	Assume no recent files
WITHOUT_CLASSIFICATION	Update the menu items
WITHOUT_CLASSIFICATION	Get the menu item
WITHOUT_CLASSIFICATION	At least one recent file menu item is visible
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ reduce font
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.action.AbstractAction#getActionNames()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.action.AbstractAction#doAction(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	reset previous result
WITHOUT_CLASSIFICATION	Hide Window on ESC
WITHOUT_CLASSIFICATION	Do not save, user does not want to overwrite
WITHOUT_CLASSIFICATION	Note: Windows user preferences are stored relative to: HKEY_CURRENT_USER\Software\JavaSoft\Prefs
WITHOUT_CLASSIFICATION	Limit the length of the menu text if needed
WITHOUT_CLASSIFICATION	If we are merging in another test plan, we know the test plan is dirty now
WITHOUT_CLASSIFICATION	Only check if we have not found any differences so far
WITHOUT_CLASSIFICATION	Do search on Enter
WITHOUT_CLASSIFICATION	do search
WITHOUT_CLASSIFICATION	Don't clear the plan
WITHOUT_CLASSIFICATION	Get the file name of the current project
WITHOUT_CLASSIFICATION	Check if the user has loaded any file
WITHOUT_CLASSIFICATION	Check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	Check if the user wants to revert
WITHOUT_CLASSIFICATION	Close the current project
WITHOUT_CLASSIFICATION	Reload the project
WITHOUT_CLASSIFICATION	Spaces are not allowed in property names read from files
WITHOUT_CLASSIFICATION	e.g. windows xp => windows
WITHOUT_CLASSIFICATION	get the JComponent from the visualizer
WITHOUT_CLASSIFICATION	$NON-NLS-1$ jmeter.properties
WITHOUT_CLASSIFICATION	Engine may be null if it has not correctly started
WITHOUT_CLASSIFICATION	GuiPackage.getInstance().getMainFrame().showStoppingMessage(name);
WITHOUT_CLASSIFICATION	Minimal dimensions for dialog box
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Don't clear the plan
WITHOUT_CLASSIFICATION	Check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	Get the string given from the choose and check the file extension.
WITHOUT_CLASSIFICATION	Check if the user wants to create from template
WITHOUT_CLASSIFICATION	Bottom buttons bar
WITHOUT_CLASSIFICATION	center position and 50% of screen size
WITHOUT_CLASSIFICATION	Created by XStream reading templates.xml
WITHOUT_CLASSIFICATION	N.B. Must use LinkedHashMap for field type XStream creates a plain HashMap if one uses Map as the field type.
WITHOUT_CLASSIFICATION	templates i
WITHOUT_CLASSIFICATION	field TemplateManager#templates $NON-NLS-1$
WITHOUT_CLASSIFICATION	field Template#name $NON-NLS-1$
WITHOUT_CLASSIFICATION	for relative links
WITHOUT_CLASSIFICATION	i.e. no disabled icon found
WITHOUT_CLASSIFICATION	Must therefore set the enabled icon so there is at least some icon
WITHOUT_CLASSIFICATION	super(new JMeterTreeNode(new WorkBenchGui().createTestElement(), null)); TestElement tp = new TestPlanGui().createTestElement(); initTree(tp);
WITHOUT_CLASSIFICATION	super(new JMeterTreeNode(new WorkBench(), null)); TestElement tp = new TestPlan(); initTree(tp, new WorkBench());
WITHOUT_CLASSIFICATION	The node can be added in non GUI mode at startup
WITHOUT_CLASSIFICATION	Remove the workbench and testplan nodes
WITHOUT_CLASSIFICATION	Insert the test plan node
WITHOUT_CLASSIFICATION	endWindow = window;
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Check for file lists specifically
WITHOUT_CLASSIFICATION	Check for file lists specifically
WITHOUT_CLASSIFICATION	This check the state of the TestElement and if returns false it disable the loaded node
WITHOUT_CLASSIFICATION	Init the tree Assumes this is only called from GUI mode
WITHOUT_CLASSIFICATION	Let others know that the tree content has changed. This should not be necessary, but without it, nodes are not shown when the user uses the Close menu item
WITHOUT_CLASSIFICATION	Container endWindow; JPopupMenu pop;
WITHOUT_CLASSIFICATION	Get the Main Frame.
WITHOUT_CLASSIFICATION	Close any Main Menu that is open
WITHOUT_CLASSIFICATION	updateMainMenu(((JMeterGUIComponent) getCurrentNode().getUserObject()).createPopupMenu());
WITHOUT_CLASSIFICATION	hold the nodes that should be removed on drop
WITHOUT_CLASSIFICATION	only allow a drag&drop inside the current jvm
WITHOUT_CLASSIFICATION	sort the selected tree path by row
WITHOUT_CLASSIFICATION	if child and a parent are selected : only keep the parent
WITHOUT_CLASSIFICATION	remove unneeded nodes
WITHOUT_CLASSIFICATION	the tree accepts a jmx file
WITHOUT_CLASSIFICATION	the copy is disabled
WITHOUT_CLASSIFICATION	Do not allow a drop on the drag source selections.
WITHOUT_CLASSIFICATION	TestPlan and WorkBench are the only children of the root
WITHOUT_CLASSIFICATION	Do not allow a non-leaf node to be moved into one of its children
WITHOUT_CLASSIFICATION	re-use node association logic
WITHOUT_CLASSIFICATION	deal with the jmx files
WITHOUT_CLASSIFICATION	Get drop location and mode
WITHOUT_CLASSIFICATION	drop mode == DropMode.ON
WITHOUT_CLASSIFICATION	first copy the children as the call to copy.add will modify the collection we're iterating on
WITHOUT_CLASSIFICATION	expand the destination node
WITHOUT_CLASSIFICATION	If icon has not been defined, then use GUI_CLASS property
WITHOUT_CLASSIFICATION	may be null during startup
WITHOUT_CLASSIFICATION	Override in order to provide type safety
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	close.setPreferredSize(d);
WITHOUT_CLASSIFICATION	c.gridx = 1; c.gridy = 2; g.setConstraints(close, c); panel.add(close);
WITHOUT_CLASSIFICATION	JFileChooser jfc = null;
WITHOUT_CLASSIFICATION	for use by test code only
WITHOUT_CLASSIFICATION	Instance Variables
WITHOUT_CLASSIFICATION	Constructors
WITHOUT_CLASSIFICATION	Modifying
WITHOUT_CLASSIFICATION	Override the implementations of the superclass, forwarding all methods from the CellEditor interface to our delegate.
WITHOUT_CLASSIFICATION	Implementing the TreeCellEditor Interface
WITHOUT_CLASSIFICATION	Implementing the CellEditor Interface
WITHOUT_CLASSIFICATION	Protected EditorDelegate class
WITHOUT_CLASSIFICATION	This won't work right if we remove components. But we don't, so I'm not going to worry about it right now.
WITHOUT_CLASSIFICATION	Datefields are not thread-safe $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	HELP MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	OPTIONS MENU $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Dummy constructor to allo JUnit tests to work
WITHOUT_CLASSIFICATION	Do nothing; the current time will be returned
WITHOUT_CLASSIFICATION	Convert position in buffer to Calendar type Assumes that pos >=0 (which is true for getCaretPosition())
WITHOUT_CLASSIFICATION	if beyond the end then set to the end
WITHOUT_CLASSIFICATION	Update the current field. The addend is only expected to be +1/-1, but other values will work. N.B. the roll() method only supports changes by a single unit - up or down
WITHOUT_CLASSIFICATION	JMenu reportMenu; JMenuItem analyze;
WITHOUT_CLASSIFICATION	Restore position
WITHOUT_CLASSIFICATION	List for recent files menu items
WITHOUT_CLASSIFICATION	Lists for remote engines menu items
WITHOUT_CLASSIFICATION	If the Add menu already exists, remove it.
WITHOUT_CLASSIFICATION	Insert the Add menu as the first menu item in the Edit menu.
WITHOUT_CLASSIFICATION	Called by MainFrame#setEditMenu() which is called by EditCommand#doAction and GuiPackage#localeChanged
WITHOUT_CLASSIFICATION	There was a NPE being thrown without the null check here.. JKB
WITHOUT_CLASSIFICATION	If we are enabling the Edit-->Add menu item, then we also need to enable the Edit menu. The Edit menu may already be enabled, but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	show the classname to the user
WITHOUT_CLASSIFICATION	This is used by the ChangeLanguage class to define the Locale
WITHOUT_CLASSIFICATION	Also used by org.apache.jmeter.resources.PackageTest
WITHOUT_CLASSIFICATION	Note: the item name is used by ChangeLanguage to create a Locale for that language, so need to ensure that the language strings are valid If they exist, use the Locale language constants. Also, need to ensure that the names are valid resource entries too.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Overrides superclass method
WITHOUT_CLASSIFICATION	From the Java Look and Feel Guidelines: If all items in a menu are disabled, then disable the menu. Makes sense.
WITHOUT_CLASSIFICATION	Listener on model changes to maintain correct focusability
WITHOUT_CLASSIFICATION	Add the recent files, which will also add a separator that is visible when needed
WITHOUT_CLASSIFICATION	override action behaviour
WITHOUT_CLASSIFICATION	This is also used by LookAndFeelCommand
WITHOUT_CLASSIFICATION	For testing only at present
WITHOUT_CLASSIFICATION	Mostly delegates to model
WITHOUT_CLASSIFICATION	Set default single model
WITHOUT_CLASSIFICATION	Next two methods implement new API by delegation to model
WITHOUT_CLASSIFICATION	Restore state display
WITHOUT_CLASSIFICATION	Listen for enable changes
WITHOUT_CLASSIFICATION	Empty override of superclass method
WITHOUT_CLASSIFICATION	Convenience cast
WITHOUT_CLASSIFICATION	Assume that the UI has not changed since the checkbos was created
WITHOUT_CLASSIFICATION	Iterate state
WITHOUT_CLASSIFICATION	Overrides of superclass methods
WITHOUT_CLASSIFICATION	Fire ActionEvent
WITHOUT_CLASSIFICATION	force the events to fire
WITHOUT_CLASSIFICATION	Empty overrides of superclass methods
WITHOUT_CLASSIFICATION	Send ItemEvent
WITHOUT_CLASSIFICATION	Set internal state
WITHOUT_CLASSIFICATION	Send ChangeEvent
WITHOUT_CLASSIFICATION	derived from: http:www.coderanch.com/t/342563/GUI/java/TriState-CheckBox
WITHOUT_CLASSIFICATION	Nimbus works - after a fashion - with this
WITHOUT_CLASSIFICATION	drawCross(g, x, y);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$;
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	href="#"
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	This won't work right if we remove components. But we don't, so I'm not going to worry about it right now.
WITHOUT_CLASSIFICATION	Predefined strings for makeMenu(). These are used as menu categories in the menuMap Hashmap, and also for resource lookup in messages.properties
WITHOUT_CLASSIFICATION	Needed for all but Nimbus Nimbus works - after a fashion - with this Nimbus works - after a fashion - with this reset
WITHOUT_CLASSIFICATION	private void drawCross(Graphics g, int x, int y) { g.drawLine(x + (iconWidth - 4), y + 2, x + 3, y + (iconHeight - 5)); g.drawLine(x + (iconWidth - 4), y + 3, x + 3, y + (iconHeight - 4)); g.drawLine(x + 3, y + 2, x + (iconWidth - 4), y + (iconHeight - 5)); g.drawLine(x + 3, y + 3, x + (iconWidth - 4), y + (iconHeight - 4)); }
WITHOUT_CLASSIFICATION	paintIcon
WITHOUT_CLASSIFICATION	For use by test code only
WITHOUT_CLASSIFICATION	MENU_ADD_xxx - controls which items are in the ADD menu MENU_PARENT_xxx - controls which items are in the Insert Parent menu
WITHOUT_CLASSIFICATION	if type is unknown
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ Don't try to instantiate these
WITHOUT_CLASSIFICATION	No point instantiating class
WITHOUT_CLASSIFICATION	Allow headless testing
WITHOUT_CLASSIFICATION	Don't add it again
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Empty box $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Can't add a Workbench anywhere
WITHOUT_CLASSIFICATION	Can't add a TestPlan anywhere
WITHOUT_CLASSIFICATION	Force TestFragment to only be pastable under a Test Plan
WITHOUT_CLASSIFICATION	allow everything else
WITHOUT_CLASSIFICATION	Samplers and Controllers need not apply ... but AbstractThreadGroup (Controller) is OK
WITHOUT_CLASSIFICATION	AbstractThreadGroup is only allowed under a TestPlan
WITHOUT_CLASSIFICATION	Includes thread group; anything goes
WITHOUT_CLASSIFICATION	Samplers and Controllers need not apply ...
WITHOUT_CLASSIFICATION	All other
WITHOUT_CLASSIFICATION	Is any node an instance of one of the classes?
WITHOUT_CLASSIFICATION	Is any node an instance of one of the classes, but not an exception?
WITHOUT_CLASSIFICATION	Methods used for Test cases
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	Close action dialog box when tapping Escape key
WITHOUT_CLASSIFICATION	Prepare dialog box
WITHOUT_CLASSIFICATION	determine location on screen
WITHOUT_CLASSIFICATION	must be CLOSE or SAVE_CLOSE COMMANDS
WITHOUT_CLASSIFICATION	text backup
WITHOUT_CLASSIFICATION	double click
WITHOUT_CLASSIFICATION	view only
WITHOUT_CLASSIFICATION	double (pressed) click
WITHOUT_CLASSIFICATION	in main table (evt mousePressed because cell is editable)
WITHOUT_CLASSIFICATION	else do nothing (cell isn't a string to edit)
WITHOUT_CLASSIFICATION	add the button to the button group
WITHOUT_CLASSIFICATION	add the button
WITHOUT_CLASSIFICATION	implicit return empty toolbar if icons == null
WITHOUT_CLASSIFICATION	Get the standard toolbar properties
WITHOUT_CLASSIFICATION	already reported by IconToolbarBean
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	in seconds
WITHOUT_CLASSIFICATION	in seconds
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	this.setPreferredSize(new Dimension(400,150));
WITHOUT_CLASSIFICATION	i.e. bypass the Functors
WITHOUT_CLASSIFICATION	Mainly needed for unit test Serialisable tests
WITHOUT_CLASSIFICATION	N.B. NoThreadClone is used to ensure that the testStarted() methods will share the same instance as the sampleOccured() methods, so the testStarted() method can fetch the Totals accumulator object for the samples to be stored in.
WITHOUT_CLASSIFICATION	Ensure that a report is not skipped if we are slightly late in checking the time.
WITHOUT_CLASSIFICATION	This map allows summarisers with the same name to contribute to the same totals.
WITHOUT_CLASSIFICATION	@GuardedBy("accumulators") - needed to ensure consistency between this and instanceCount
WITHOUT_CLASSIFICATION	@GuardedBy("accumulators") number of active tests
WITHOUT_CLASSIFICATION	Cached copy of Totals for this instance. The variables do not need to be synchronised, as they are not shared between threads However the contents do need to be synchronized.
WITHOUT_CLASSIFICATION	@GuardedBy("myTotals")
WITHOUT_CLASSIFICATION	Name of the accumulator. Set up by testStarted().
WITHOUT_CLASSIFICATION	Constructor is initially called once for each occurrence in the test plan. For GUI, several more instances are created. Then clear is called at start of test. Called several times during test startup. The name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	Contains the items needed to collect stats for a summariser
WITHOUT_CLASSIFICATION	copy the data to minimise the synch time
WITHOUT_CLASSIFICATION	stop double-reporting
WITHOUT_CLASSIFICATION	Only if we have updated them
WITHOUT_CLASSIFICATION	$NON-NLS-1$ for intermediate use output line buffer
WITHOUT_CLASSIFICATION	Rate is effectively infinite
WITHOUT_CLASSIFICATION	e.g. NullPointerException
WITHOUT_CLASSIFICATION	Avalon only
WITHOUT_CLASSIFICATION	Avalon only
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Only print final delta if there were some samples in the delta and there has been at least one sample reported previously
WITHOUT_CLASSIFICATION	rounded seconds No point displaying decimals (less than 1% error) decimal would be zero
WITHOUT_CLASSIFICATION	fractional seconds This will round
WITHOUT_CLASSIFICATION	The testStarted/testEnded methods are called at the start and end of a test. However, when a test is run on multiple nodes, there is no guarantee that all the testStarted() methods will be called before all the threadStart() or sampleOccurred() methods for other threads - nor that testEnded() will only be called after all sampleOccurred() calls. The ordering is only guaranteed within a single test.
WITHOUT_CLASSIFICATION	We're not done yet
WITHOUT_CLASSIFICATION	boolean autoScale = true;
WITHOUT_CLASSIFICATION	setup drawing area
WITHOUT_CLASSIFICATION	draw grid
WITHOUT_CLASSIFICATION	draw axis
WITHOUT_CLASSIFICATION	draw data lines
WITHOUT_CLASSIFICATION	Constructor is initially called once for each occurrence in the test plan For GUI, several more instances are created Then clear is called at start of test Called several times during test startup The name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	e.g. in non-GUI mode
WITHOUT_CLASSIFICATION	This string is used to identify local test runs, so must not be a valid host name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Static variables
WITHOUT_CLASSIFICATION	Lock used to guard static mutable variables
WITHOUT_CLASSIFICATION	@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	Keep track of the file writer and the configuration, as the instance used to close them is not the same as the instance that creates them. This means one cannot use the saved PrintWriter or use getSaveConfig()
WITHOUT_CLASSIFICATION	Instance variables (guarded by volatile)
WITHOUT_CLASSIFICATION	Unfortunately AbstractTestElement does not call super.clone()
WITHOUT_CLASSIFICATION	successOnly and errorOnly cannot both be set
WITHOUT_CLASSIFICATION	No need for the hook now
WITHOUT_CLASSIFICATION	Only add the hook once
WITHOUT_CLASSIFICATION	No point reading the file if there's no visualiser
WITHOUT_CLASSIFICATION	probably Avalon format
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Only for use by CSVSaveService
WITHOUT_CLASSIFICATION	Constructor is initially called once for each occurrence in the test plan For GUI, several more instances are created Then clear is called at start of test Called several times during test startup The name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	We are processing XML Assume XStream
WITHOUT_CLASSIFICATION	Ensure that the sample save config is not shared between copied nodes N.B. clone only seems to be used for client-server tests
WITHOUT_CLASSIFICATION	Find the name of the directory containing the file and create it - if there is one
WITHOUT_CLASSIFICATION	TODO Charset ? Get the first line, and see if it is XML
WITHOUT_CLASSIFICATION	Can't do it as a static initialisation, because SaveService is being constructed when this is called
WITHOUT_CLASSIFICATION	Write the EOL separately so we generate LF line ends on Unix and Windows $NON-NLS-1$
WITHOUT_CLASSIFICATION	Write the EOL separately so we generate LF line ends on Unix and Windows $NON-NLS-1$
WITHOUT_CLASSIFICATION	Added in version 1.1 $NON-NLS-1$
WITHOUT_CLASSIFICATION	returns false if directory already exists, so need to check again
WITHOUT_CLASSIFICATION	else if might have been created by another process so not a problem
WITHOUT_CLASSIFICATION	returns false if the file did not contain the terminator
WITHOUT_CLASSIFICATION	found the string
WITHOUT_CLASSIFICATION	reads to end of line OR end of file
WITHOUT_CLASSIFICATION	!saveAsXml
WITHOUT_CLASSIFICATION	Truncate the file
WITHOUT_CLASSIFICATION	should throw exception back to caller
WITHOUT_CLASSIFICATION	Used by: MonitorHealthVisualizer.add(SampleResult res)
WITHOUT_CLASSIFICATION	+ JMX property names; do not change
WITHOUT_CLASSIFICATION	- JMX property names
WITHOUT_CLASSIFICATION	Constructor for use during startup (intended for non-GUI use) @param name of summariser
WITHOUT_CLASSIFICATION	This is called once for each occurrence in the test plan, before the start of the test. The super.clear() method clears the name (and all other properties), so it is called last.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	NOTUSED private static final String DATABASE = "db"; $NON_NLS-1$
WITHOUT_CLASSIFICATION	Only for use by CSVSaveService
WITHOUT_CLASSIFICATION	Associate sample with file name
WITHOUT_CLASSIFICATION	Mutable int to keep track of sample count
WITHOUT_CLASSIFICATION	chunk the output if necessary
WITHOUT_CLASSIFICATION	Should we save the sample?
WITHOUT_CLASSIFICATION	finish processing samples
WITHOUT_CLASSIFICATION	Needed to avoid Class cast error in Clear.java
WITHOUT_CLASSIFICATION	may be the empty string
WITHOUT_CLASSIFICATION	client log file
WITHOUT_CLASSIFICATION	N.B. to add a new field, remember the following - static _xyz - instance xyz=_xyz - clone s.xyz = xyz (perhaps) - setXyz(boolean) - saveXyz() - update SampleSaveConfigurationConverter to add new fields to marshall() and shouldSerialiseMember() - update SampleResultConverter and/or HTTPSampleConverter - update CSVSaveService: CSV_XXXX, makeResultFromDelimitedString, printableFieldNamesToString, static{} - update messages.properties to add save_xyz entry - update jmeter.properties to add new property - update listeners.xml to add new property, CSV and XML names etc. - take screenshot sample_result_config.png - update listeners.xml and component_reference.xml with new dimensions (might not change)
WITHOUT_CLASSIFICATION	Not currently needed by any Remoteable classes Anyway, would probably be too expensive in terms of network traffic void testIterationStart(LoopIterationEvent event);
WITHOUT_CLASSIFICATION	ensure output is flushed
WITHOUT_CLASSIFICATION	server log file
WITHOUT_CLASSIFICATION	Holds details of which sample attributes to save. The pop-up dialogue for this is created by the class SavePropertyDialog, which assumes: For each field XXX - methods have the signature "boolean saveXXX()" - a corresponding "void setXXX(boolean)" method - messages.properties contains the key save_XXX
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- PROPERTY FILE CONSTANTS ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	Initialise values from properties
WITHOUT_CLASSIFICATION	Save bytes read $NON_NLS-1$
WITHOUT_CLASSIFICATION	Save URL $NON_NLS-1$
WITHOUT_CLASSIFICATION	Save fileName for ResultSaver $NON_NLS-1$
WITHOUT_CLASSIFICATION	Save hostname for ResultSaver $NON_NLS-1$
WITHOUT_CLASSIFICATION	Don't save this, as it is derived from the time format
WITHOUT_CLASSIFICATION	$NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$
WITHOUT_CLASSIFICATION	Prepare for a pretty date
WITHOUT_CLASSIFICATION	Make transient as we don't want to save the SimpleDataFormat class Also, there's currently no way to change the value via the GUI, so changing it later means editting the JMX, or recreating the Listener.
WITHOUT_CLASSIFICATION	Defaults from properties:
WITHOUT_CLASSIFICATION	reversed compare allows for null
WITHOUT_CLASSIFICATION	Don't save this, as not settable via GUI
WITHOUT_CLASSIFICATION	Don't save this - only needed for processing CSV headers currently
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	optional processing instruction for line 2; e.g. <?xml-stylesheet type="text/xsl" href="../extras/jmeter-results-detail-report_21.xsl"?> $NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$ N.B. Remember to update the equals and hashCode methods when adding new variables.
WITHOUT_CLASSIFICATION	Give access to initial configuration
WITHOUT_CLASSIFICATION	is derived from properties only
WITHOUT_CLASSIFICATION	We know we are comparing to another SampleSaveConfiguration
WITHOUT_CLASSIFICATION	/ Start of standard save/set access methods /
WITHOUT_CLASSIFICATION	as per 2.0 branch
WITHOUT_CLASSIFICATION	/ End of standard field accessors /
WITHOUT_CLASSIFICATION	maintain relationship
WITHOUT_CLASSIFICATION	Defaults to empty;
WITHOUT_CLASSIFICATION	Used by old Save service
WITHOUT_CLASSIFICATION	Used by SampleSaveConfigurationConverter.unmarshall()
WITHOUT_CLASSIFICATION	Get appropriate sender class governed by the behaviour set in the JMeter property
WITHOUT_CLASSIFICATION	Static fields are set by the server when the class is constructed
WITHOUT_CLASSIFICATION	@GuardedBy("sampleStore")
WITHOUT_CLASSIFICATION	Locate the statistical sample colector
WITHOUT_CLASSIFICATION	store the new statistical result collector
WITHOUT_CLASSIFICATION	add a new wrapper samplevent
WITHOUT_CLASSIFICATION	Checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	synchronized(sampleStore)
WITHOUT_CLASSIFICATION	List of variable names to be saved in JTL files
WITHOUT_CLASSIFICATION	The values. Entries may be null, but there will be the correct number.
WITHOUT_CLASSIFICATION	The hostname cannot change during a run, so safe to cache it just once
WITHOUT_CLASSIFICATION	Only for Unit tests
WITHOUT_CLASSIFICATION	Needs to be accessible from Test code
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	variables maintained by server code @GuardedBy("sampleStore") maintain separate count of samples for speed
WITHOUT_CLASSIFICATION	The default used by {@link #setResponseData(String, String)}
WITHOUT_CLASSIFICATION	empty arrays which can be returned instead of null
WITHOUT_CLASSIFICATION	Never return null
WITHOUT_CLASSIFICATION	Never return null
WITHOUT_CLASSIFICATION	Never return null
WITHOUT_CLASSIFICATION	Never return null
WITHOUT_CLASSIFICATION	e.g. text/html; charset=utf-8
WITHOUT_CLASSIFICATION	TODO timeStamp == 0 means either not yet initialised or no stamp available (e.g. when loading a results file)
WITHOUT_CLASSIFICATION	Allow for non-sample time
WITHOUT_CLASSIFICATION	Don't return null if not set
WITHOUT_CLASSIFICATION	@GuardedBy("this"")
WITHOUT_CLASSIFICATION	(is this really the character set?) e.g. ISO-8895-1, UTF-8
WITHOUT_CLASSIFICATION	Allows override of sample size in case sampler does not want to store all the data
WITHOUT_CLASSIFICATION	Allow read-only access from test code
WITHOUT_CLASSIFICATION	How long between checks of nanotime; default 5000ms; set to <=0 to disable the thread
WITHOUT_CLASSIFICATION	$NON-NLS-1$;
WITHOUT_CLASSIFICATION	Make sure we start with a reasonable value
WITHOUT_CLASSIFICATION	Allow testcode access to the settings
WITHOUT_CLASSIFICATION	Allow test code to change the default useNanoTime setting
WITHOUT_CLASSIFICATION	Allow test code to change the default useNanoTime and nanoThreadSleep settings
WITHOUT_CLASSIFICATION	Helper method to get 1 ms resolution timing.
WITHOUT_CLASSIFICATION	Helper method to maintain timestamp relationships
WITHOUT_CLASSIFICATION	For use by SaveService only. @param stamp - this may be a start time or an end time @param elapsed
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	OK TODO ??
WITHOUT_CLASSIFICATION	Create unique object as marker for end of queue
WITHOUT_CLASSIFICATION	OK OK OK OK files is created automatically, and applies per instance OK
WITHOUT_CLASSIFICATION	OK OK OK
WITHOUT_CLASSIFICATION	OK OK Don't copy this; it is per instance resultFileName = res.resultFileName;
WITHOUT_CLASSIFICATION	TODO ?? OK OK
WITHOUT_CLASSIFICATION	N.B. default charset is used deliberately here
WITHOUT_CLASSIFICATION	N.B. default charset is used deliberately here
WITHOUT_CLASSIFICATION	Extract charset and store as DataEncoding N.B. The meta tag: <META http-equiv="content-type" content="text/html; charset=foobar"> is now processed by HTTPSampleResult#getDataEncodingWithDefault $NON-NLS-1$
WITHOUT_CLASSIFICATION	handle: ContentType: text/plain; charset=ISO-8859-1; format=flowed
WITHOUT_CLASSIFICATION	Check for quoted string $NON-NLS-1$ remove quotes
WITHOUT_CLASSIFICATION	List of types that are known to be binary
WITHOUT_CLASSIFICATION	List of types that are known to be ascii, although they may appear to be binary
WITHOUT_CLASSIFICATION	Determine if content-type is known to be binary, i.e. not displayable as text. @param ct content type @return true if content-type is of type binary.
WITHOUT_CLASSIFICATION	Helper methods N.B. setStartTime must be called before setEndTime setStartTime is used by HTTPSampleResult to clone the parent sampler and allow the original start time to be kept
WITHOUT_CLASSIFICATION	how many times we had to wait to queue a sample
WITHOUT_CLASSIFICATION	Can now afford to wait a bit longer between checks
WITHOUT_CLASSIFICATION	created by client
WITHOUT_CLASSIFICATION	created by server in readResolve method
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Note: this is an instance field (and is not transient), so is created by the JMeter client and propagated to the server instance by RMI. [a static field would be recreated on the server, and would pick up the server properties] $NON-NLS-1$
WITHOUT_CLASSIFICATION	client
WITHOUT_CLASSIFICATION	client log file
WITHOUT_CLASSIFICATION	server log file
WITHOUT_CLASSIFICATION	Checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	synchronized(sampleStore)
WITHOUT_CLASSIFICATION	how long we had to wait (nanoSeconds)
WITHOUT_CLASSIFICATION	for reading from CSV files ignored currently
WITHOUT_CLASSIFICATION	returns null if nothing on queue currently
WITHOUT_CLASSIFICATION	Wait longer than a clock pulse (generally 10-15ms) Catch an early clock pulse to reduce slop.
WITHOUT_CLASSIFICATION	OK because sampleStore is of type ArrayList<SampleEvent>
WITHOUT_CLASSIFICATION	Created by SampleSenderFactory
WITHOUT_CLASSIFICATION	Strip the response data before writing, but only for a successful request.
WITHOUT_CLASSIFICATION	we failed to add the element first time
WITHOUT_CLASSIFICATION	server
WITHOUT_CLASSIFICATION	try to process as many as possible
WITHOUT_CLASSIFICATION	Compute bytes before stripping
WITHOUT_CLASSIFICATION	Configuration items, set up by readResolve
WITHOUT_CLASSIFICATION	should be a user provided class name
WITHOUT_CLASSIFICATION	Static fields are resolved on the server
WITHOUT_CLASSIFICATION	instance fields are copied from the client instance
WITHOUT_CLASSIFICATION	Set clonedSet;
WITHOUT_CLASSIFICATION	Server-only work item
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Extended property name $NON-NLS-1$
WITHOUT_CLASSIFICATION	clonedSet = new HashSet();
WITHOUT_CLASSIFICATION	Need to maintain our own elapsed timer to ensure more accurate aggregation
WITHOUT_CLASSIFICATION	May be called by XStream
WITHOUT_CLASSIFICATION	Copy data that is shared between samples (i.e. the key items):
WITHOUT_CLASSIFICATION	Assume result is OK because we add the sample count in later
WITHOUT_CLASSIFICATION	Add Sample Counter
WITHOUT_CLASSIFICATION	Add Error Counter
WITHOUT_CLASSIFICATION	Overrides SampleResult
WITHOUT_CLASSIFICATION	for reading CSV files
WITHOUT_CLASSIFICATION	superclass is not typed
WITHOUT_CLASSIFICATION	Ensure output follows version
WITHOUT_CLASSIFICATION	Names of DataHolder entries for JTL processing $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Names of DataHolder entries for JMX processing $NON-NLS-1$
WITHOUT_CLASSIFICATION	Override wrapMapper in order to insert the Wrapper in the chain
WITHOUT_CLASSIFICATION	Provide our own aliasing using strings rather than classes
WITHOUT_CLASSIFICATION	Translate alias to classname and then delegate to wrapped class
WITHOUT_CLASSIFICATION	Translate to alias and then delegate to wrapped class
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	was type, but that caused FindBugs warning
WITHOUT_CLASSIFICATION	This is needed to stop XStream keeping copies of each class
WITHOUT_CLASSIFICATION	The XML header, with placeholder for encoding, since that is controlled by property $NON-NLS-1$
WITHOUT_CLASSIFICATION	Default file name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Property name used to define file name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Default to overall format, and then to version 2.2
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Define file format property names $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Define file format versions $NON-NLS-1$
WITHOUT_CLASSIFICATION	Holds the mappings from the saveservice properties file Key: alias Entry: full class name There may be multiple aliases which map to the same class
WITHOUT_CLASSIFICATION	Holds the reverse mappings Key: full class name Entry: primary alias
WITHOUT_CLASSIFICATION	This is written to JMX files by ScriptWrapperConverter read from properties file; written to JMX files
WITHOUT_CLASSIFICATION	Must match _version property value in saveservice.properties used to ensure saveservice.properties and SaveService are updated simultaneously Expected version $NON-NLS-1$
WITHOUT_CLASSIFICATION	Internal information only read from saveservice.properties file $NON-NLS-1$ Must match Revision id value in saveservice.properties, used to ensure saveservice.properties and SaveService are updated simultaneously Expected value $NON-NLS-1$ read from properties file $NON-NLS-1$
WITHOUT_CLASSIFICATION	Helper method to simplify alias creation from properties
WITHOUT_CLASSIFICATION	Can have multiple aliases for same target classname
WITHOUT_CLASSIFICATION	Load the alias properties
WITHOUT_CLASSIFICATION	now create the aliases
WITHOUT_CLASSIFICATION	Remove the leading "_"
WITHOUT_CLASSIFICATION	For converters to use
WITHOUT_CLASSIFICATION	Called by Save function
WITHOUT_CLASSIFICATION	Get the OutputWriter to use
WITHOUT_CLASSIFICATION	Use deprecated method, to avoid duplicating code
WITHOUT_CLASSIFICATION	Use deprecated method, to avoid duplicating code
WITHOUT_CLASSIFICATION	Ensure terminated properly
WITHOUT_CLASSIFICATION	Used by Test code
WITHOUT_CLASSIFICATION	Used by Test code
WITHOUT_CLASSIFICATION	Get the InputReader to use
WITHOUT_CLASSIFICATION	Used by ResultCollector.sampleOccurred(SampleEvent event)
WITHOUT_CLASSIFICATION	Used by ResultCollector#recordStats()
WITHOUT_CLASSIFICATION	Routines for TestSaveService
WITHOUT_CLASSIFICATION	Allow test code to check for spurious class references
WITHOUT_CLASSIFICATION	boolean OK = true;
WITHOUT_CLASSIFICATION	don't bother checking class is present if it is to be updated
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Extract version digits from String of the form #Revision: n.mm # (where # is actually $ above)
WITHOUT_CLASSIFICATION	Check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	Check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	Check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	We use the default character set encoding of the JRE
WITHOUT_CLASSIFICATION	We use the default character set encoding of the JRE
WITHOUT_CLASSIFICATION	We use the default character set encoding of the JRE
WITHOUT_CLASSIFICATION	Used by ResultCollector when creating output files
WITHOUT_CLASSIFICATION	Write XML header if we have the charset to use for encoding
WITHOUT_CLASSIFICATION	We do not use getEncoding method of Writer, since that returns the historical name
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- XML RESULT FILE CONSTANTS AND FIELD NAME CONSTANTS ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Used by ScriptWrapperConverter
WITHOUT_CLASSIFICATION	Shared with TestElementSaver $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Probably no point in converting this to return a SampleEvent
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Called by SaveService.loadTree(InputStream reader) if XStream loading fails
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	OK $NON-NLS-1$
WITHOUT_CLASSIFICATION	Do upgrade translation:
WITHOUT_CLASSIFICATION	must always agree
WITHOUT_CLASSIFICATION	Delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	Create the property:
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Called by ResultCollector#loadExistingFile() if XStream loading fails
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- ADDITIONAL CSV RESULT FILE CONSTANTS AND FIELD NAME CONSTANTS ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Used to enclose variable name labels, to distinguish from any of the above labels $NON-NLS-1$
WITHOUT_CLASSIFICATION	Initial config from properties
WITHOUT_CLASSIFICATION	Date formats to try if the time format does not parse as milliseconds
WITHOUT_CLASSIFICATION	$NON-NLS-1$ (for compatibility, this is the original default)
WITHOUT_CLASSIFICATION	Enough to read the header column names Get the first line, and see if it is the header
WITHOUT_CLASSIFICATION	not a valid header
WITHOUT_CLASSIFICATION	may change the format later restart from beginning
WITHOUT_CLASSIFICATION	may be updated
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	This assumes the header names are all single words with no spaces word followed by 0 or more repeats of (non-word char + word) where the non-word char (\2) is the same e.g. abc|def|ghi but not abd|def~ghi $NON-NLS-1$ last entries may be quoted strings
WITHOUT_CLASSIFICATION	Save the name for error reporting
WITHOUT_CLASSIFICATION	method is only ever called from one thread at a time so it's OK to use a static DateFormat
WITHOUT_CLASSIFICATION	can this happen?
WITHOUT_CLASSIFICATION	Strip off the trailing delimiter
WITHOUT_CLASSIFICATION	Map header names to set() methods
WITHOUT_CLASSIFICATION	These entries must be in the same order as columns are saved/restored.
WITHOUT_CLASSIFICATION	Both these are needed in the list even though they set the same variable
WITHOUT_CLASSIFICATION	Try default delimiter
WITHOUT_CLASSIFICATION	now validate the result
WITHOUT_CLASSIFICATION	failed to recognise the header
WITHOUT_CLASSIFICATION	We know the column names all exist, so create the config
WITHOUT_CLASSIFICATION	Check if the line is a header
WITHOUT_CLASSIFICATION	Check for Quoted variable names
WITHOUT_CLASSIFICATION	they are always last
WITHOUT_CLASSIFICATION	unknown column name
WITHOUT_CLASSIFICATION	out of order
WITHOUT_CLASSIFICATION	Don't add delimiter first time round
WITHOUT_CLASSIFICATION	These methods handle parameters that could contain delimiters or quotes:
WITHOUT_CLASSIFICATION	These methods handle parameters that cannot contain delimiters or quotes
WITHOUT_CLASSIFICATION	Find the first non-null message
WITHOUT_CLASSIFICATION	Need both sample and error count to be any use
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	did not find \n, put the character back
WITHOUT_CLASSIFICATION	Need to append something so delimiter is added
WITHOUT_CLASSIFICATION	=================================== CSV quote/unquote handling ==============================
WITHOUT_CLASSIFICATION	Private versions of what might eventually be part of Commons-CSV or Commons-Lang/Io...
WITHOUT_CLASSIFICATION	double the quote char
WITHOUT_CLASSIFICATION	doubled quote => quote
WITHOUT_CLASSIFICATION	State of the parser
WITHOUT_CLASSIFICATION	Remove following \n if present
WITHOUT_CLASSIFICATION	Do we have some data, or a trailing empty field? we have some data we've started a field Just seen ""
WITHOUT_CLASSIFICATION	while not EOF EOF (or end of string) so collect any remaining data
WITHOUT_CLASSIFICATION	This is not currently used by JMeter code. As it uses Sun-specific code (the only such in JMeter), it has been commented out for now.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	Delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	rethrow other errors
WITHOUT_CLASSIFICATION	mainly for TestElementConverter
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	Don't save empty comments - except for the TestPlan (to maintain compatibility)
WITHOUT_CLASSIFICATION	Skip special properties if required
WITHOUT_CLASSIFICATION	remap the class name
WITHOUT_CLASSIFICATION	could be null if it has been deleted via NameUpdater
WITHOUT_CLASSIFICATION	could be null if it has been deleted via NameUpdater
WITHOUT_CLASSIFICATION	No need to check version, just process the attributes if present
WITHOUT_CLASSIFICATION	Only decode strings if inVersion = 1.0
WITHOUT_CLASSIFICATION	Names of properties that are handled specially
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Otherwise don't save anything - no point
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If we have a file, but no data, then read the file
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	Skip special properties if required
WITHOUT_CLASSIFICATION	No need to check version, just process the attributes if present
WITHOUT_CLASSIFICATION	could be null if it has been deleted via NameUpdater
WITHOUT_CLASSIFICATION	Don't save empty comments
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Always decode
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Must be same as Header.HNAME - but that is built later
WITHOUT_CLASSIFICATION	N.B. These must agree with the new member names in SampleSaveConfiguration $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Additional member names which are currently not written out $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	These are new fields; not saved unless true
WITHOUT_CLASSIFICATION	These fields are not currently saved or restored
WITHOUT_CLASSIFICATION	Save most things
WITHOUT_CLASSIFICATION	Save the new fields - but only if they are not the default
WITHOUT_CLASSIFICATION	Helper method to simplify marshall routine
WITHOUT_CLASSIFICATION	Maintain backward compatibility (bytes was not in the JMX file)
WITHOUT_CLASSIFICATION	Make sure decoding follows input file
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this") NOTE this also guards against possible window in checkForOpenFiles()
WITHOUT_CLASSIFICATION	volatile needed to ensure safe publication
WITHOUT_CLASSIFICATION	Cannot be instantiated
WITHOUT_CLASSIFICATION	getParentFile() may not work on relative paths
WITHOUT_CLASSIFICATION	checks for entries in use
WITHOUT_CLASSIFICATION	tidy up any unused entries
WITHOUT_CLASSIFICATION	Must first convert to absolute path names to ensure parents are available
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	need to check if we are at EOF already
WITHOUT_CLASSIFICATION	already at EOF
WITHOUT_CLASSIFICATION	OK, we still have some data, restore it
WITHOUT_CLASSIFICATION	If file encoding is specified, read using that encoding, otherwise use default platform encoding
WITHOUT_CLASSIFICATION	If file encoding is specified, write using that encoding, otherwise use default platform encoding
WITHOUT_CLASSIFICATION	package access for test code only
WITHOUT_CLASSIFICATION	Some known attribute names, just for convenience:
WITHOUT_CLASSIFICATION	Store the resource bundle as an attribute of the BeanDescriptor:
WITHOUT_CLASSIFICATION	Localize the property names and descriptions:
WITHOUT_CLASSIFICATION	we also provide the resource bundle
WITHOUT_CLASSIFICATION	i is used below
WITHOUT_CLASSIFICATION	Set the bean's property to the value we just obtained:
WITHOUT_CLASSIFICATION	We can't assign null to primitive types.
WITHOUT_CLASSIFICATION	Can occur running headless on Jenkins
WITHOUT_CLASSIFICATION	value was not provided, and this is allowed
WITHOUT_CLASSIFICATION	Not an expression (isn't or can't be), not null.
WITHOUT_CLASSIFICATION	The known tags are assumed to be valid:
WITHOUT_CLASSIFICATION	Was not a tag, so if we can't accept other values...
WITHOUT_CLASSIFICATION	Delegate the final check to the typeEditor:
WITHOUT_CLASSIFICATION	setAsText failed: not valid
WITHOUT_CLASSIFICATION	setAsText succeeded: valid
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	/ final because called from ctor
WITHOUT_CLASSIFICATION	Localize the bean name $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	not an expression (isn't or can't be), not null.
WITHOUT_CLASSIFICATION	Provide an initial edit value if necessary -- this is an heuristic that tries to provide the most convenient initial edit value:
WITHOUT_CLASSIFICATION	not interested in this method.
WITHOUT_CLASSIFICATION	Not an expression (isn't or can't be), not null. may throw IllegalArgumentExc.
WITHOUT_CLASSIFICATION	not an expression (can't be or isn't), not null.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	so we can detect it
WITHOUT_CLASSIFICATION	so we can detect it
WITHOUT_CLASSIFICATION	Revert to the previous value:
WITHOUT_CLASSIFICATION	ensure value is propagated to editor
WITHOUT_CLASSIFICATION	Get and sort the property descriptors:
WITHOUT_CLASSIFICATION	should be quicker to find the editors if they are registered.
WITHOUT_CLASSIFICATION	private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	$NON-NLS-$
WITHOUT_CLASSIFICATION	Obtain the propertyEditors:
WITHOUT_CLASSIFICATION	Index is also used for accessing editors array
WITHOUT_CLASSIFICATION	Don't get editors for hidden or non-read-write properties:
WITHOUT_CLASSIFICATION	we check the class type above
WITHOUT_CLASSIFICATION	Initialize the editor with the provided default value or null:
WITHOUT_CLASSIFICATION	In case of BSF and JSR elements i want to add textAreaEditor as a listener to scriptLanguage ComboBox.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Some editors do tiny transformations (e.g. "true" to "True",...): may throw IllegalArgumentException
WITHOUT_CLASSIFICATION	Initialize the GUI:
WITHOUT_CLASSIFICATION	acceptsNull acceptsExpressions acceptsOther
WITHOUT_CLASSIFICATION	Uninitialized -- set it to the defaults:
WITHOUT_CLASSIFICATION	Now set the editors to the element's values:
WITHOUT_CLASSIFICATION	for labels
WITHOUT_CLASSIFICATION	for editors
WITHOUT_CLASSIFICATION	for panels
WITHOUT_CLASSIFICATION	if the displayName is the empty string, leave it like that.
WITHOUT_CLASSIFICATION	might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	Map of translations for tags; only created if there is at least one tag and a ResourceBundle has been provided.
WITHOUT_CLASSIFICATION	The minimum index of the tags in the combo box
WITHOUT_CLASSIFICATION	The maximum index of the tags in the combo box
WITHOUT_CLASSIFICATION	only for use from test code
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Add a 0-sized invisible component that will take all the vertical space that nobody wants:
WITHOUT_CLASSIFICATION	track where tags start ...
WITHOUT_CLASSIFICATION	... and where they end
WITHOUT_CLASSIFICATION	Check if the entry index corresponds to a tag, if so return the tag This also works if the tags were not translated
WITHOUT_CLASSIFICATION	Not a tag entry, return the original value
WITHOUT_CLASSIFICATION	will revert to last valid value if invalid
WITHOUT_CLASSIFICATION	Replace a string with its translation, if one exists
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	A quick verification, just in case:
WITHOUT_CLASSIFICATION	Get the beanInfo:
WITHOUT_CLASSIFICATION	In other GUI component, clearGUI resets the value to defaults one as there is one GUI per Element With TestBeanGUI as it's shared, its default values are only known here, we must call setValues with element (as it holds default values) otherwise we will get values as computed by customizer reset and not default ones
WITHOUT_CLASSIFICATION	Fetch data from screen fields
WITHOUT_CLASSIFICATION	Copy all property values from the map into the element:
WITHOUT_CLASSIFICATION	cannot be null
WITHOUT_CLASSIFICATION	Copy all property values into the map:
WITHOUT_CLASSIFICATION	handles hex as well
WITHOUT_CLASSIFICATION	Some editors may need the descriptor
WITHOUT_CLASSIFICATION	Create a button to trigger the file chooser:
WITHOUT_CLASSIFICATION	Create a panel containing the combo and the button:
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	handles hex as well
WITHOUT_CLASSIFICATION	configure(element); super.clear(); set name, enabled. put the default values back into the new element
WITHOUT_CLASSIFICATION	Programming error. Don't continue.
WITHOUT_CLASSIFICATION	Programming error. Don't continue.
WITHOUT_CLASSIFICATION	We don't want to show expert beans in the menus unless we're in expert mode:
WITHOUT_CLASSIFICATION	may be impossible, but no harm in checking ...
WITHOUT_CLASSIFICATION	- JMX
WITHOUT_CLASSIFICATION	Get a WrapperEditor to provide the field or combo -- we'll delegate most methods to it:
WITHOUT_CLASSIFICATION	acceptsNull acceptsExpressions acceptsOther default
WITHOUT_CLASSIFICATION	assume it's string
WITHOUT_CLASSIFICATION	+ JMX attributes - do not change
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	There's only 1 test plan, so can cache the mode here
WITHOUT_CLASSIFICATION	- JMX field names
WITHOUT_CLASSIFICATION	create transient item
WITHOUT_CLASSIFICATION	we set the classpath
WITHOUT_CLASSIFICATION	Action to be taken when a Sampler error occurs
WITHOUT_CLASSIFICATION	Property name
WITHOUT_CLASSIFICATION	Thread-specific variables saved here to save recalculation
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	Only samplers have the thread context set up by JMeterThread at present, so suppress the warning for now
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.samplers.RemoteThreadsListener#threadFinished()
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	this("Test Plan"); setFunctionalMode(false); setSerialized(false);
WITHOUT_CLASSIFICATION	setFunctionalMode(false); setSerialized(false);
WITHOUT_CLASSIFICATION	log.warn("ThreadContext was not set up - should only happen in JUnit testing..." ,new Throwable("Debug"));
WITHOUT_CLASSIFICATION	Default implementation
WITHOUT_CLASSIFICATION	Moved from JMeter class
WITHOUT_CLASSIFICATION	lifecycle methods
WITHOUT_CLASSIFICATION	JMX property name: do not change
WITHOUT_CLASSIFICATION	value is the correct class
WITHOUT_CLASSIFICATION	value is of type Collection<JMeterProperty>
WITHOUT_CLASSIFICATION	private static StringProperty defaultProperty = new StringProperty();
WITHOUT_CLASSIFICATION	name cannot be null
WITHOUT_CLASSIFICATION	Two null values -- return equal
WITHOUT_CLASSIFICATION	empty collection, local var is here to allow SuppressWarnings
WITHOUT_CLASSIFICATION	empty collection
WITHOUT_CLASSIFICATION	empty collection
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	empty collection ok to cast, local var is here to allow SuppressWarnings
WITHOUT_CLASSIFICATION	N.B. Other classes rely on this returning just the string.
WITHOUT_CLASSIFICATION	|| !ctx.isSamplingStarted()
WITHOUT_CLASSIFICATION	synch is probably not needed as only called before run starts
WITHOUT_CLASSIFICATION	this is only possible for 3rd party controllers by default
WITHOUT_CLASSIFICATION	Called from multiple threads
WITHOUT_CLASSIFICATION	Backward compatibility
WITHOUT_CLASSIFICATION	check there is a GUI
WITHOUT_CLASSIFICATION	check there is a GUI
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Expensive, so do once
WITHOUT_CLASSIFICATION	i.e. "true"
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	based on this scheduler is enabled or disabled
WITHOUT_CLASSIFICATION	Gives access to parent thread threadGroup
WITHOUT_CLASSIFICATION	For access to stop methods.
WITHOUT_CLASSIFICATION	The following variables may be set/read from multiple threads.
WITHOUT_CLASSIFICATION	may be set from a different thread
WITHOUT_CLASSIFICATION	ensure that interrupt cannot overlap with shutdown
WITHOUT_CLASSIFICATION	TL - IS
WITHOUT_CLASSIFICATION	See below for reason for this change. Just in case this causes problems, allow the change to be backed out
WITHOUT_CLASSIFICATION	threadContext is not thread-safe, so keep within thread
WITHOUT_CLASSIFICATION	Might be found by contoller.next()
WITHOUT_CLASSIFICATION	prevent any further interrupts
WITHOUT_CLASSIFICATION	make sure current interrupt is finished, prevent another starting yet
WITHOUT_CLASSIFICATION	Allow any pending interrupt to complete (OK because currentSampler == null)
WITHOUT_CLASSIFICATION	Find parent controllers of current sampler
WITHOUT_CLASSIFICATION	OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	Check if we are running a transaction
WITHOUT_CLASSIFICATION	Find the package for the transaction
WITHOUT_CLASSIFICATION	Check if the transaction is done
WITHOUT_CLASSIFICATION	Get the transaction sample result
WITHOUT_CLASSIFICATION	Check assertions for the transaction sample
WITHOUT_CLASSIFICATION	Notify listeners with the transaction sample result
WITHOUT_CLASSIFICATION	Transaction is done, we do not have a sampler to sample
WITHOUT_CLASSIFICATION	recursive call
WITHOUT_CLASSIFICATION	Check if we have a sampler to sample
WITHOUT_CLASSIFICATION	Get the sampler ready to sample
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	TestBeanHelper.prepare() is OK
WITHOUT_CLASSIFICATION	check there is a GUI
WITHOUT_CLASSIFICATION	check there is a GUI
WITHOUT_CLASSIFICATION	OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	Must not ignore this one Make sure errors are output to the log file
WITHOUT_CLASSIFICATION	Tell the monitor we are done Remove the ThreadLocal entry
WITHOUT_CLASSIFICATION	Perform the actual sample
WITHOUT_CLASSIFICATION	If we got any results, then perform processing on the result
WITHOUT_CLASSIFICATION	Do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	Do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	Add the result as subsample of transaction if we are in a transaction
WITHOUT_CLASSIFICATION	Check if thread or test should be stopped
WITHOUT_CLASSIFICATION	Finish up
WITHOUT_CLASSIFICATION	checks the scheduler to stop the iteration
WITHOUT_CLASSIFICATION	Check if this instance is present in transaction listener list
WITHOUT_CLASSIFICATION	Check for the same instance
WITHOUT_CLASSIFICATION	listeners = controller.getListeners();
WITHOUT_CLASSIFICATION	set the scheduler to start
WITHOUT_CLASSIFICATION	call ThreadListener.threadStarted()
WITHOUT_CLASSIFICATION	call ThreadListener.threadFinished()
WITHOUT_CLASSIFICATION	probably not possible, but check anyway
WITHOUT_CLASSIFICATION	Called by StandardJMeterEngine, TestAction and AccessLogSampler
WITHOUT_CLASSIFICATION	delay between checks
WITHOUT_CLASSIFICATION	Don't bother reporting stop test interruptions
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	fetch once; must be done under lock (also protects against null)
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	delay between checks
WITHOUT_CLASSIFICATION	Used by DebugSampler
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Only create the map if it is required
WITHOUT_CLASSIFICATION	all implementations extend TestElement
WITHOUT_CLASSIFICATION	All implementations extend TestElement
WITHOUT_CLASSIFICATION	int
WITHOUT_CLASSIFICATION	Number of active threads in this group
WITHOUT_CLASSIFICATION	Copy our name into that of the controller otherwise name reverts
WITHOUT_CLASSIFICATION	5 seconds
WITHOUT_CLASSIFICATION	+ JMX entries - do not change the string values
WITHOUT_CLASSIFICATION	- JMX entries
WITHOUT_CLASSIFICATION	if true the Scheduler is enabled
WITHOUT_CLASSIFICATION	set the start time for the Thread Duration is in seconds
WITHOUT_CLASSIFICATION	Force a sensible start time
WITHOUT_CLASSIFICATION	Enables the scheduler
WITHOUT_CLASSIFICATION	maximum pause to use
WITHOUT_CLASSIFICATION	Fetch once; needs to stay constant
WITHOUT_CLASSIFICATION	needs to be same time for all threads in the group
WITHOUT_CLASSIFICATION	set start and end time
WITHOUT_CLASSIFICATION	N.B. Context needs to be fetched in the correct thread
WITHOUT_CLASSIFICATION	Store context from Root Thread to pass it to created threads
WITHOUT_CLASSIFICATION	Copy in ThreadStarter thread context from calling Thread
WITHOUT_CLASSIFICATION	needs to be constant for all threads
WITHOUT_CLASSIFICATION	else start immediately
WITHOUT_CLASSIFICATION	set the endtime for the Thread
WITHOUT_CLASSIFICATION	Duration is in seconds, starting from when the threads start
WITHOUT_CLASSIFICATION	ramp-up delay (except first)
WITHOUT_CLASSIFICATION	no point continuing beyond the end time
WITHOUT_CLASSIFICATION	Already waited
WITHOUT_CLASSIFICATION	ThreadStarter is daemon, but we don't want sampler threads to be so too
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	return all the associated counts together
WITHOUT_CLASSIFICATION	set stop flag interrupt sampler if possible
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	set the start time for the Thread Duration is in seconds
WITHOUT_CLASSIFICATION	@GuardedGy("this")
WITHOUT_CLASSIFICATION	@GuardedGy("this")
WITHOUT_CLASSIFICATION	@GuardedGy("this")
WITHOUT_CLASSIFICATION	@GuardedGy("this")
WITHOUT_CLASSIFICATION	@GuardedGy("this")
WITHOUT_CLASSIFICATION	Currently only used by JMeterThread
WITHOUT_CLASSIFICATION	Check if the property exists
WITHOUT_CLASSIFICATION	Relative start-up time
WITHOUT_CLASSIFICATION	NOT USED
WITHOUT_CLASSIFICATION	Must be an old test plan
WITHOUT_CLASSIFICATION	Initialise the gui field values
WITHOUT_CLASSIFICATION	Maximum size to convert a document to text (default 10Mb)
WITHOUT_CLASSIFICATION	-1 to disable the write limit
WITHOUT_CLASSIFICATION	open the stream
WITHOUT_CLASSIFICATION	close the stream
WITHOUT_CLASSIFICATION	The string is made private so the compiler can't propagate it into JMeterUtils. (Java compilers may make copies of final variables) This ensures that JMeterUtils always gets the correct version, even if JMeterUtils is not re-compiled during the build.
WITHOUT_CLASSIFICATION	This assumes that the JMV treats a class file as a resource (not all do).
WITHOUT_CLASSIFICATION	Convert to URL for manifest
WITHOUT_CLASSIFICATION	default to plain version
WITHOUT_CLASSIFICATION	Not instantiable
WITHOUT_CLASSIFICATION	Allow reversion to original shared session context
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If we are using a single session Otherwise
WITHOUT_CLASSIFICATION	Also set up HttpClient defaults
WITHOUT_CLASSIFICATION	No point doing this on a per-connection basis, as there is currently no way to configure it. So we leave it to the defaults set up in the SSL Context
WITHOUT_CLASSIFICATION	HttpsURLConnection secureConn = (HttpsURLConnection) conn; secureConn.setSSLSocketFactory(this.getContext().getSocketFactory());
WITHOUT_CLASSIFICATION	Creates new SSL context @return SSL context @throws GeneralSecurityException
WITHOUT_CLASSIFICATION	Now wrap the default managers with our key manager
WITHOUT_CLASSIFICATION	Get the default trust managers
WITHOUT_CLASSIFICATION	Wrap the defaults in our custom trust manager
WITHOUT_CLASSIFICATION	implementation moved to JmeterKeystore as only that has the keyType info
WITHOUT_CLASSIFICATION	++ For TestBean implementations only passed to file or script
WITHOUT_CLASSIFICATION	file to source (overrides script)
WITHOUT_CLASSIFICATION	script (if file not provided)
WITHOUT_CLASSIFICATION	BSF/JSR223 language to use -- For TestBean implementations only
WITHOUT_CLASSIFICATION	can be the empty string
WITHOUT_CLASSIFICATION	For use by the server script
WITHOUT_CLASSIFICATION	Characters per second to emulate
WITHOUT_CLASSIFICATION	Save the actual socket
WITHOUT_CLASSIFICATION	Override so we can intercept the stream
WITHOUT_CLASSIFICATION	Forward all the SSLSocket methods to the input socket
WITHOUT_CLASSIFICATION	Also forward all the Socket methods.
WITHOUT_CLASSIFICATION	ScriptRuntime.call(cx, fun, global, args, global);
WITHOUT_CLASSIFICATION	Must wrap non-scriptable objects before presenting to Rhino
WITHOUT_CLASSIFICATION	includes JavaScriptException, rethrows Errors
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	Initialize context and global scope object
WITHOUT_CLASSIFICATION	Read-only access after class has been initialised
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Re-throw Errors because we're supposed to let the JVM see it Don't re-throw StackOverflows, because we know we've corrected the situation by aborting the loop and a long stacktrace would end up on the user's console
WITHOUT_CLASSIFICATION	Calculate each time, as likely to be called for each add
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Characters per second to emulate
WITHOUT_CLASSIFICATION	likely a wrapped exception from a LiveConnect call. Display its stack trace as a diagnostic
WITHOUT_CLASSIFICATION	For n values in an aggregate sample the average value = (val/n) So need to add n (val/n) (val/n) = val val / n
WITHOUT_CLASSIFICATION	load additionnal name conversion rules from plugins
WITHOUT_CLASSIFICATION	If we are creating a JSR223 element, add the cache key property. Note that this cannot be done in the JSR223BeanInfoSupport class because that causes problems with the group; its properties are not always set up before they are needed. This cause various issues with the GUI: - wrong field attributes (should not allow null) - sometimes GUI is completely mangled - field appears at start rather than at end. - the following warning is logged: jmeter.testbeans.gui.GenericTestBeanCustomizer: org.apache.jmeter.util.JSR223TestElement#cacheKey does not appear to have been configured Adding the group here solves these issues, and it's also possible to add the key just before the script panel to which it relates. It's not yet clear why this should be, but it looks as though createPropertyGroup does not work properly if it is called from any subclasses of this class.
WITHOUT_CLASSIFICATION	names are Strings
WITHOUT_CLASSIFICATION	no point dividing by 1
WITHOUT_CLASSIFICATION	1024=bytes per kb
WITHOUT_CLASSIFICATION	account for multiple samples not yet intialised
WITHOUT_CLASSIFICATION	1000 = millisecs/sec
WITHOUT_CLASSIFICATION	Conversions for milli and nano seconds
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Characters per second to emulate
WITHOUT_CLASSIFICATION	Use actual class name for log
WITHOUT_CLASSIFICATION	Most subclasses will need these:
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	we have a file, read and process it
WITHOUT_CLASSIFICATION	we have a file, read and process it
WITHOUT_CLASSIFICATION	Wraps the socket in a slow SSL socket if necessary
WITHOUT_CLASSIFICATION	What host am I running on?
WITHOUT_CLASSIFICATION	Special flag for use in debugging resources
WITHOUT_CLASSIFICATION	Provide Random numbers to whomever wants one
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	for java sockets for Commons Httpclient sockets
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Done by finally block: fileReader.close();
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ For use in debugging: $NON-NLS-1$
WITHOUT_CLASSIFICATION	Are we the default language?
WITHOUT_CLASSIFICATION	JMeter.fail("Could not read internal resource. " + "Archive is broken.");
WITHOUT_CLASSIFICATION	Keep existing settings
WITHOUT_CLASSIFICATION	Don't change locale from en_GB to en
WITHOUT_CLASSIFICATION	language change worked Check if we at least found the correct language:
WITHOUT_CLASSIFICATION	no need to reset Locale
WITHOUT_CLASSIFICATION	Reset Locale if necessary so other locales are properly handled
WITHOUT_CLASSIFICATION	Special mode for debugging resource handling
WITHOUT_CLASSIFICATION	Special mode for debugging resource handling
WITHOUT_CLASSIFICATION	Can be returned by headless hosts
WITHOUT_CLASSIFICATION	Can be returned by headless hosts
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Redisplay.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	file to source (overrides script)
WITHOUT_CLASSIFICATION	script (if file not provided)
WITHOUT_CLASSIFICATION	Use actual class name for log
WITHOUT_CLASSIFICATION	Most subclasses will need these:
WITHOUT_CLASSIFICATION	End Method
WITHOUT_CLASSIFICATION	$NON-NLS-1$ reader = xmlFactory.newSAXParser().getXMLReader();
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Done
WITHOUT_CLASSIFICATION	TODO Charset ?
WITHOUT_CLASSIFICATION	TODO Charset ?
WITHOUT_CLASSIFICATION	Empty value $NON-NLS-1$
WITHOUT_CLASSIFICATION	If not empty then script in ScriptText will be compiled and cached
WITHOUT_CLASSIFICATION	LRUMap does not support generics (yet)
WITHOUT_CLASSIFICATION	Add variables for access to context and variables
WITHOUT_CLASSIFICATION	For use in debugging:
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Also handles read(byte[])
WITHOUT_CLASSIFICATION	-- For TestBean implementations only
WITHOUT_CLASSIFICATION	ensure variables are not null
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Set params as a single line $NON-NLS-1$ and set as an array $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Characters per second to emulate
WITHOUT_CLASSIFICATION	Override so we can intercept the stream
WITHOUT_CLASSIFICATION	Override so we can intercept the stream
WITHOUT_CLASSIFICATION	Overridden by non-TestBean implementations to return the property value instead
WITHOUT_CLASSIFICATION	Overridden by non-TestBean implementations to return the property value instead
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	now temp2 has the lowest of the three components
WITHOUT_CLASSIFICATION	This sequence is borrowed from: org.apache.commons.httpclient.protocol.ReflectionSocketFactory.createSocket
WITHOUT_CLASSIFICATION	convert to telnet port
WITHOUT_CLASSIFICATION	Prompt is unnecessary
WITHOUT_CLASSIFICATION	Reset for other users
WITHOUT_CLASSIFICATION	Tell server that we are done
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	this.setDaemon(true);
WITHOUT_CLASSIFICATION	Have we yet tried to load the truststore?
WITHOUT_CLASSIFICATION	Ensure not null
WITHOUT_CLASSIFICATION	The password can be defined as a property; this dialogue is provided to allow it to be entered at run-time. However, this does not gain much, as the dialogue does not (yet) support hidden input ...
WITHOUT_CLASSIFICATION	we've tried ...
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Should not happen
WITHOUT_CLASSIFICATION	empty if not provided use the system property to determine the type otherwise use the name
WITHOUT_CLASSIFICATION	Also handles write(byte[])
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	Temporary copies, so can set the final ones
WITHOUT_CLASSIFICATION	This class is not serialised The interpreter instance for this class
WITHOUT_CLASSIFICATION	Script file to initialize the Interpreter with
WITHOUT_CLASSIFICATION	Logger to use during initialization and script run
WITHOUT_CLASSIFICATION	Called from ctor, so must be private (or final, but it does not seem useful elsewhere)
WITHOUT_CLASSIFICATION	Do this before starting the script
WITHOUT_CLASSIFICATION	Check file so we can distinguish file error from script error
WITHOUT_CLASSIFICATION	Cannot find the file locally, so try the bin directory
WITHOUT_CLASSIFICATION	Programming error
WITHOUT_CLASSIFICATION	Also programming error
WITHOUT_CLASSIFICATION	For use by Unit Tests
WITHOUT_CLASSIFICATION	configure the document builder factory
WITHOUT_CLASSIFICATION	elements have empty nodeValue, but we are usually interested in their content
WITHOUT_CLASSIFICATION	default empty array to prevent NPEs
WITHOUT_CLASSIFICATION	No point checking an empty keystore
WITHOUT_CLASSIFICATION	Note: if is == null, the arrays will be empty
WITHOUT_CLASSIFICATION	API expects null not empty array, see http:docs.oracle.com/javase/6/docs/api/javax/net/ssl/X509KeyManager.html
WITHOUT_CLASSIFICATION	i.e. is == null
WITHOUT_CLASSIFICATION	i.e. is == null
WITHOUT_CLASSIFICATION	number of samples in this entry
WITHOUT_CLASSIFICATION	The following getters may appear not to be used - however they are invoked via the Functor class
WITHOUT_CLASSIFICATION	No samples collected ...
WITHOUT_CLASSIFICATION	Better behaviour when howLong=0 or lastTime=0
WITHOUT_CLASSIFICATION	Better behaviour when howLong=0 or lastTime=0
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	1024=bytes per kb
WITHOUT_CLASSIFICATION	We really should never get here because eval will throw an exception if xpath is invalid, but whatever, better safe
WITHOUT_CLASSIFICATION	No samples collected ...
WITHOUT_CLASSIFICATION	Better behaviour when howLong=0 or lastTime=0
WITHOUT_CLASSIFICATION	this is our first sample, set the start time to current timestamp
WITHOUT_CLASSIFICATION	this is our first sample, set the start time to current timestamp
WITHOUT_CLASSIFICATION	Always update the end time
WITHOUT_CLASSIFICATION	= elapsed
WITHOUT_CLASSIFICATION	Appears not to be used - however it is invoked via the Functor class
WITHOUT_CLASSIFICATION	Only for use by test code
WITHOUT_CLASSIFICATION	Code duplicated from getPageSize()
WITHOUT_CLASSIFICATION	A checkbox choosing whether or not only successes should be logged.
WITHOUT_CLASSIFICATION	Overrides AbstractJMeterGuiComponent.configure(TestElement)
WITHOUT_CLASSIFICATION	keep track of classes created
WITHOUT_CLASSIFICATION	(for instructional purposes only!)
WITHOUT_CLASSIFICATION	Perform the sampling
WITHOUT_CLASSIFICATION	Start timing
WITHOUT_CLASSIFICATION	Do something here ...
WITHOUT_CLASSIFICATION	Set up the sample result details
WITHOUT_CLASSIFICATION	End timimg
WITHOUT_CLASSIFICATION	Helper method
WITHOUT_CLASSIFICATION	Helper method to set up the GUI screen
WITHOUT_CLASSIFICATION	Standard setup
WITHOUT_CLASSIFICATION	Add the standard title
WITHOUT_CLASSIFICATION	Specific setup
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The name of the property used to hold our data $NON-NLS-1$
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	Note: the file panel already includes the error logging checkbox, so we don't have to add it explicitly.
WITHOUT_CLASSIFICATION	Did sample succeed? Sampler data
WITHOUT_CLASSIFICATION	Create a data input text field @return the panel for entering the data
WITHOUT_CLASSIFICATION	Do something ...
WITHOUT_CLASSIFICATION	Do something ...
WITHOUT_CLASSIFICATION	A String property:
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	We have a default
WITHOUT_CLASSIFICATION	Throwable wanted
WITHOUT_CLASSIFICATION	Comment wanted
WITHOUT_CLASSIFICATION	Common output function
WITHOUT_CLASSIFICATION	Routine to perform the output (also used by __logn() function)
WITHOUT_CLASSIFICATION	$NON-NLS-1
WITHOUT_CLASSIFICATION	$NON-NLS-1
WITHOUT_CLASSIFICATION	N.B. if the string is not recognised, DEBUG is assumed
WITHOUT_CLASSIFICATION	Thread method is potentially expensive
WITHOUT_CLASSIFICATION	Allow variable to be omitted
WITHOUT_CLASSIFICATION	vars can be null if run from TestPlan
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@see TestRegexFunction for unit tests
WITHOUT_CLASSIFICATION	Remove initial empty entry
WITHOUT_CLASSIFICATION	$NON-NLS1$ $NON-NLS1$
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	did we find BeanShell?
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	Relatively expensive operation, so do it once
WITHOUT_CLASSIFICATION	Pass in some variables
WITHOUT_CLASSIFICATION	Mainly for bsh.EvalError
WITHOUT_CLASSIFICATION	Execute the script
WITHOUT_CLASSIFICATION	Helper method for use by scripts
WITHOUT_CLASSIFICATION	Can happen if called during test closedown
WITHOUT_CLASSIFICATION	Parameters are stored here
WITHOUT_CLASSIFICATION	For unit tests, see TestJexlFunction
WITHOUT_CLASSIFICATION	String or Integer
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. Stop reading the file if we get a blank line: This allows for trailing comments in the file
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	Now evaluate the script, getting the result
WITHOUT_CLASSIFICATION	two delimiters in a row; add an empty String
WITHOUT_CLASSIFICATION	Lines in the file, split into columns
WITHOUT_CLASSIFICATION	0-based
WITHOUT_CLASSIFICATION	name of the file
WITHOUT_CLASSIFICATION	Catch the trailing delimiter
WITHOUT_CLASSIFICATION	the beginning of the line is a "delimiter" so that ,a,b,c returns "" "a" "b" "c"
WITHOUT_CLASSIFICATION	will be null if function is used on TestPlan
WITHOUT_CLASSIFICATION	return JMeterContextService.getContext().getCurrentSampler().getName();
WITHOUT_CLASSIFICATION	Added to support external testing
WITHOUT_CLASSIFICATION	Only modified by static block so no need to synchronize subsequent read-only access
WITHOUT_CLASSIFICATION	May be null if function is used on TestPlan
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	desc.add("Use fully qualified host name: TRUE/FALSE (Default FALSE)"); $NON-NLS-1$
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	We have a default
WITHOUT_CLASSIFICATION	Throwable wanted
WITHOUT_CLASSIFICATION	@GuardedBy("this") needed for error messages
WITHOUT_CLASSIFICATION	@GuardedBy("this") Buffered reader
WITHOUT_CLASSIFICATION	DecimalFormat adds the number to the end of the format if there are no formatting characters, so we need a way to prevent this from messing up the file name.
WITHOUT_CLASSIFICATION	@GuardedBy("this") should we try to open the file?
WITHOUT_CLASSIFICATION	Have we used myCurrent yet? Set to 1 if start number is missing (to allow for end without start)
WITHOUT_CLASSIFICATION	Low chances to be non numeric, we parse
WITHOUT_CLASSIFICATION	Low chances to be non numeric, we parse
WITHOUT_CLASSIFICATION	To avoid re-opening the file repeatedly after an error, only try to open it in the first execute() call (It may be re=opened at EOF, but that will cause at most one failure.)
WITHOUT_CLASSIFICATION	Don't process invalid numbers
WITHOUT_CLASSIFICATION	Don't process invalid numbers (including "")
WITHOUT_CLASSIFICATION	Has chances to be a var
WITHOUT_CLASSIFICATION	for next time
WITHOUT_CLASSIFICATION	EOF, re-open file
WITHOUT_CLASSIFICATION	Did we open the file?
WITHOUT_CLASSIFICATION	Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	Are we processing a file sequence?
WITHOUT_CLASSIFICATION	there is no variable name
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	This Map serves two purposes: - maps names to containers - ensures only one container per file across all threads The key is the concatenation of the file name and the XPath string
WITHOUT_CLASSIFICATION	File was not opened successfully Are we processing a file sequence?
WITHOUT_CLASSIFICATION	N.B. setParameters is called before the test proper is started, and thus variables are not interpreted at this point So defer the file open until later to allow variable file names to be used.
WITHOUT_CLASSIFICATION	varName keeps its value and sum has not taken into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	Split string provided
WITHOUT_CLASSIFICATION	@GuardedBy("fileContainers")
WITHOUT_CLASSIFICATION	We don't have a local copy
WITHOUT_CLASSIFICATION	Prevent separate instantiation
WITHOUT_CLASSIFICATION	The cache of file packs - for faster local access
WITHOUT_CLASSIFICATION	save the global copy
WITHOUT_CLASSIFICATION	There's no global copy either
WITHOUT_CLASSIFICATION	save our local copy
WITHOUT_CLASSIFICATION	Parameter list
WITHOUT_CLASSIFICATION	All done, so return
WITHOUT_CLASSIFICATION	All done now ,so return the empty string - this allows the caller to append __CSVRead(file,next) to the last instance of __CSVRead(file,col) N.B. It is important not to read any further lines at this point, otherwise the wrong line can be retrieved when using multiple threads.
WITHOUT_CLASSIFICATION	Need to reset the containers for repeated runs; about the only way for functions to detect that a run is starting seems to be the setParameters() call.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	May be null if function is used on TestPlan
WITHOUT_CLASSIFICATION	Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	Parameter list
WITHOUT_CLASSIFICATION	what column is wanted?
WITHOUT_CLASSIFICATION	Need to reset the containers for repeated runs; about the only way for functions to detect that a run is starting seems to be the setParameters() call.
WITHOUT_CLASSIFICATION	The cache of file packs - used to improve thread access
WITHOUT_CLASSIFICATION	means platform default
WITHOUT_CLASSIFICATION	empty encoding, return to platorm default
WITHOUT_CLASSIFICATION	Only needed locally
WITHOUT_CLASSIFICATION	This Map serves two purposes: - maps file names to containers - ensures only one container per file across all threads
WITHOUT_CLASSIFICATION	Called by CSVRead(x,next) - sets the row to nil so the next row will be picked up the next time round
WITHOUT_CLASSIFICATION	called by CSVRead(file,alias)
WITHOUT_CLASSIFICATION	First call
WITHOUT_CLASSIFICATION	Already logged
WITHOUT_CLASSIFICATION	Already logged
WITHOUT_CLASSIFICATION	Save in case needed later
WITHOUT_CLASSIFICATION	Not yet open
WITHOUT_CLASSIFICATION	we have a variable name
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	For unit tests, see TestJexlFunction
WITHOUT_CLASSIFICATION	Now evaluate the script, getting the result
WITHOUT_CLASSIFICATION	name of the file
WITHOUT_CLASSIFICATION	0-based
WITHOUT_CLASSIFICATION	Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	means no restriction
WITHOUT_CLASSIFICATION	Only obtain and cast the return if needed
WITHOUT_CLASSIFICATION	empty chars, return to null
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	should we return original value?
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	Has chances to be a var
WITHOUT_CLASSIFICATION	there is no variable name
WITHOUT_CLASSIFICATION	Default to milliseconds
WITHOUT_CLASSIFICATION	probably does not need to be synch (always accessed through ThreadLocal?) give access to Test code
WITHOUT_CLASSIFICATION	vars will be null on Test Plan
WITHOUT_CLASSIFICATION	MAXINT = 2,147,483,647
WITHOUT_CLASSIFICATION	Not found
WITHOUT_CLASSIFICATION	Only modified in class init
WITHOUT_CLASSIFICATION	We have a 3rd parameter
WITHOUT_CLASSIFICATION	Resolve any aliases
WITHOUT_CLASSIFICATION	$NON_NLS-1$ $NON_NLS-1$
WITHOUT_CLASSIFICATION	Not synchronised, so can't be shared
WITHOUT_CLASSIFICATION	Allow for empty name
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	vars will be null on TestPlan
WITHOUT_CLASSIFICATION	varName keeps its value and sum has not taken into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	Values for creating tokens
WITHOUT_CLASSIFICATION	divisor is a positive number should never case NFE
WITHOUT_CLASSIFICATION	Convert to a shorter String for test purposes @return the string value
WITHOUT_CLASSIFICATION	this may need mangling due to peeks
WITHOUT_CLASSIFICATION	cached character == Integer.MAX_VALUE when invalid
WITHOUT_CLASSIFICATION	Reached end of input arguments - perform final processing
WITHOUT_CLASSIFICATION	Key is String or Integer
WITHOUT_CLASSIFICATION	strip the null
WITHOUT_CLASSIFICATION	variables used while parsing options.
WITHOUT_CLASSIFICATION	Yes, so the second argument is missing
WITHOUT_CLASSIFICATION	Keep track of token separator
WITHOUT_CLASSIFICATION	should never get to here when stringIndex != 0
WITHOUT_CLASSIFICATION	Long optional arg must have = as separator
WITHOUT_CLASSIFICATION	non-null Comparators don't appear to be used at present
WITHOUT_CLASSIFICATION	consume stray character
WITHOUT_CLASSIFICATION	Are we about to start a new option?
WITHOUT_CLASSIFICATION	strip the -
WITHOUT_CLASSIFICATION	2nd argument
WITHOUT_CLASSIFICATION	its a long option
WITHOUT_CLASSIFICATION	Parse the arguments that are not options
WITHOUT_CLASSIFICATION	if it is a short option then parse it else ...
WITHOUT_CLASSIFICATION	equivalent to new TreeMap((Comparator)null);
WITHOUT_CLASSIFICATION	private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	Make sure the hashCode depends on the order as well
WITHOUT_CLASSIFICATION	super-class does not use generics
WITHOUT_CLASSIFICATION	super-class does not use generics
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	this occurs when id == 0 and user has not supplied a descriptor for arguments
WITHOUT_CLASSIFICATION	if get to an arg barrier then return to normal mode else continue accumulating options
WITHOUT_CLASSIFICATION	strip the - -- sequence .. it can either mean a change of state to STATE_NO_OPTIONS or else a long option
WITHOUT_CLASSIFICATION	find order.indexOf(currentKey) using == rather than equals() there may be multiple entries which compare equals (Bug 50898) This will be slightly slower than the built-in method, but replace() is not used frequently.
WITHOUT_CLASSIFICATION	Used for the RuntimeException to short-circuit the traversal $NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. The keys can be either JMeterTreeNode or TestElement
WITHOUT_CLASSIFICATION	do nothing - means object is found
WITHOUT_CLASSIFICATION	Just in case
WITHOUT_CLASSIFICATION	short circuit traversal when found
WITHOUT_CLASSIFICATION	saves current position in data List
WITHOUT_CLASSIFICATION	end method
WITHOUT_CLASSIFICATION	capture the output
WITHOUT_CLASSIFICATION	helper method to allow input and output to be changed for chaining
WITHOUT_CLASSIFICATION	ensure the application does not hang if it requests input
WITHOUT_CLASSIFICATION	capture the intermediate output
WITHOUT_CLASSIFICATION	not yet terminated
WITHOUT_CLASSIFICATION	not yet terminated N.B. proc.destroy() is called by the finally clause in the run() method
WITHOUT_CLASSIFICATION	we are capturing output Default charset is probably appropriate here.
WITHOUT_CLASSIFICATION	The DNAME which is used if none is provided $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ (do not change) $NON-NLS-1$ (Firefox and Windows) $NON-NLS-1$ (Opera)
WITHOUT_CLASSIFICATION	i.e. does keytool support -gencert and -ext ?
WITHOUT_CLASSIFICATION	not instantiable
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Create cert for CA using root (requires Java 7 for gencert)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	import the signed CA cert into the store (root already there) - both are needed to sign the domain certificates
WITHOUT_CLASSIFICATION	Create the self-signed keypairs (requires Java 7 for -ext flag)
WITHOUT_CLASSIFICATION	rem generate cert for DOMAIN using CA (requires Java7 for gencert) and import it
WITHOUT_CLASSIFICATION	generate the request
WITHOUT_CLASSIFICATION	Export the Root CA for Firefox/Chrome/IE
WITHOUT_CLASSIFICATION	generate the certificate and store in output file
WITHOUT_CLASSIFICATION	generate the keypair for the host
WITHOUT_CLASSIFICATION	create the certificate rem ku:c=dig,keyE means KeyUsage:criticial=digitalSignature,keyEncipherment
WITHOUT_CLASSIFICATION	Copy for Opera
WITHOUT_CLASSIFICATION	alias subject
WITHOUT_CLASSIFICATION	A temporary cache for the focus listener
WITHOUT_CLASSIFICATION	get the certificate request
WITHOUT_CLASSIFICATION	default charset
WITHOUT_CLASSIFICATION	inport the certificate
WITHOUT_CLASSIFICATION	Add the sub components
WITHOUT_CLASSIFICATION	Register the handler for focus listening. This handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	Add the sub components
WITHOUT_CLASSIFICATION	Functor count = 0 is handled specially
WITHOUT_CLASSIFICATION	Necessary to avoid NPE when testing serialisation
WITHOUT_CLASSIFICATION	Necessary to avoid NPE when testing serialisation
WITHOUT_CLASSIFICATION	if provided
WITHOUT_CLASSIFICATION	Compare if the value has changed, since we received focus.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@GuardedBy("this")
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	Register the handler for focus listening. This handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	Register the handler for focus listening. This handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	Add the sub components
WITHOUT_CLASSIFICATION	Compare if the value has changed, since we received focus.
WITHOUT_CLASSIFICATION	A temporary cache for the focus listener
WITHOUT_CLASSIFICATION	used by TableEditor
WITHOUT_CLASSIFICATION	used by TableEditor
WITHOUT_CLASSIFICATION	We use 80% of height
WITHOUT_CLASSIFICATION	private JMenu menu;
WITHOUT_CLASSIFICATION	(Comment 16, Huw)
WITHOUT_CLASSIFICATION	uninstantiable
WITHOUT_CLASSIFICATION	treats last line specially Last line Allow for missing terminator
WITHOUT_CLASSIFICATION	Constructors
WITHOUT_CLASSIFICATION	NOTUSED Dimension dim = layoutSize(parent, false);
WITHOUT_CLASSIFICATION	work out the total size
WITHOUT_CLASSIFICATION	otherwise there's a vgap too many Work out the anchor paint
WITHOUT_CLASSIFICATION	do layout
WITHOUT_CLASSIFICATION	closes reader as well
WITHOUT_CLASSIFICATION	N.B time pattern is passed to java.text.SimpleDateFormat
WITHOUT_CLASSIFICATION	Predefined format patterns, selected by the property log_format_type (see jmeter.properties) The new-line is added later
WITHOUT_CLASSIFICATION	$NON_NLS-1$ $NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$ $NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	non-instantiable - static methods only
WITHOUT_CLASSIFICATION	now set the individual categories (if any)
WITHOUT_CLASSIFICATION	Further configuration
WITHOUT_CLASSIFICATION	Make sure same hierarchy is used
WITHOUT_CLASSIFICATION	This happens if the default log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	key is the type to collect (usually long), value = count of entries
WITHOUT_CLASSIFICATION	We use a TreeMap because we need the entries to be sorted
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	For n values in an aggregate sample the average value = (val/n) So need to add n (val/n) (val/n) = val val / n
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	Running values, updated for each sample
WITHOUT_CLASSIFICATION	Set the top-level defaults $NON_NLS-1$
WITHOUT_CLASSIFICATION	This can happen if a log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	Helper method to ensure that format is initialised if initializeLogging() has not yet been called.
WITHOUT_CLASSIFICATION	If the name contains at least one set of paired single-quotes, reformat using DateFormat
WITHOUT_CLASSIFICATION	remove the package prefix
WITHOUT_CLASSIFICATION	e.g. Long.MAX_VALUE
WITHOUT_CLASSIFICATION	e.g. Long.MIN_VALUE
WITHOUT_CLASSIFICATION	use Math.round () instead of simple (long) to provide correct value rounding
WITHOUT_CLASSIFICATION	ignored. May happen occasionally, but no harm done if so.
WITHOUT_CLASSIFICATION	For n same values in sum of square is equal to nval^2
WITHOUT_CLASSIFICATION	no need to divide by 1
WITHOUT_CLASSIFICATION	insert new value
WITHOUT_CLASSIFICATION	If non-null, then any object provided to invoke() is ignored.
WITHOUT_CLASSIFICATION	Methondname must always be provided.
WITHOUT_CLASSIFICATION	If non-null, then any argument list passed to invoke() will be ignored.
WITHOUT_CLASSIFICATION	Argument types used to create the method. May be provided explicitly, or derived from the constructor argument list.
WITHOUT_CLASSIFICATION	This depends on the class or invokee and either args or types; it is set once by doCreateMethod(), which must be the only method to access it.
WITHOUT_CLASSIFICATION	If class not provided, default to invokee class, else null
WITHOUT_CLASSIFICATION	If types not provided, default to argument types, else null
WITHOUT_CLASSIFICATION	Low level invocation routine. Should only be called after any defaults have been applied.
WITHOUT_CLASSIFICATION	If invokee was provided, then clazz has been set up
WITHOUT_CLASSIFICATION	Low-level (recursive) routine to define the method - if not already defined. Synchronized to protect access to methodToInvoke.
WITHOUT_CLASSIFICATION	static only
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Should never happen
WITHOUT_CLASSIFICATION	Use constructor class if present use invokee if provided use argumenrs if provided
WITHOUT_CLASSIFICATION	parent classes to check are inner classes OK?
WITHOUT_CLASSIFICATION	Potentially expensive; do it once
WITHOUT_CLASSIFICATION	Potentially expensive; do it once
WITHOUT_CLASSIFICATION	No need to check it again
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	No need to check it again
WITHOUT_CLASSIFICATION	It does not contain a required string
WITHOUT_CLASSIFICATION	It contains a banned string
WITHOUT_CLASSIFICATION	are inner classes OK?
WITHOUT_CLASSIFICATION	annotation classes to check
WITHOUT_CLASSIFICATION	For each directory in the search path, add all the jars found there
WITHOUT_CLASSIFICATION	Find all jars in the search path
WITHOUT_CLASSIFICATION	Should only be called with classes that extend annotations
WITHOUT_CLASSIFICATION	first get all the classes
WITHOUT_CLASSIFICATION	subClassList);
WITHOUT_CLASSIFICATION	Returns the classpath entries that match the search list of jars and paths
WITHOUT_CLASSIFICATION	find all jar files or paths that end with strPathOrJar
WITHOUT_CLASSIFICATION	no need to look further
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	might throw an exception, assume this is ignorable
WITHOUT_CLASSIFICATION	Converts a class file from the text stored in a Jar file to a version that can be used in Class.forName(). @param strClassName the class name from a Jar file @return String the Java-style dotted version of the name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ remove ".class"
WITHOUT_CLASSIFICATION	Recursive call
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	we have a single character; could be a token it is a token
WITHOUT_CLASSIFICATION	Remove trailing splitter
WITHOUT_CLASSIFICATION	Found splitChar at end of line
WITHOUT_CLASSIFICATION	This is the new length
WITHOUT_CLASSIFICATION	we saw a delimiter last time so add the default
WITHOUT_CLASSIFICATION	"<?xml "
WITHOUT_CLASSIFICATION	EOF
WITHOUT_CLASSIFICATION	$NON-NLS-1$ add zero padding
WITHOUT_CLASSIFICATION	@see TestJorphanUtils for unit tests
WITHOUT_CLASSIFICATION	$NON-NLS-1$ add zero padding
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	This is the name of the HotSpot Diagnostic platform MBean (Sun Java 1.6) See: http:download.oracle.com/javase/6/docs/jre/api/management/extension/com/sun/management/HotSpotDiagnosticMXBean.html
WITHOUT_CLASSIFICATION	SingletonHolder idiom for lazy initialisation
WITHOUT_CLASSIFICATION	These are needed for invoking the method
WITHOUT_CLASSIFICATION	If we could not find the method, store the exception here
WITHOUT_CLASSIFICATION	Only invoked by IODH class
WITHOUT_CLASSIFICATION	get the platform beans
WITHOUT_CLASSIFICATION	should never fail See if we can actually find the object Should never happen
WITHOUT_CLASSIFICATION	Prevent useless dump attempts
WITHOUT_CLASSIFICATION	the string so far
WITHOUT_CLASSIFICATION	opened tags
WITHOUT_CLASSIFICATION	don't do anything
WITHOUT_CLASSIFICATION	java.util.Date d = null;
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Potentially expensive; do it once
WITHOUT_CLASSIFICATION	-- JMX file attributes - do not change
WITHOUT_CLASSIFICATION	Don't instantiate class
WITHOUT_CLASSIFICATION	++ JMX file attributes - do not change
WITHOUT_CLASSIFICATION	i.e. no filter
WITHOUT_CLASSIFICATION	The test object, i.e. the instance of the class containing the test method This is the same as testCase for JUnit3 tests but different for JUnit4 tests which use a wrapper
WITHOUT_CLASSIFICATION	The TestCase to run
WITHOUT_CLASSIFICATION	the Method objects for setUp (@Before) and tearDown (@After) methods Will be null if not provided or not required
WITHOUT_CLASSIFICATION	The method name to be invoked
WITHOUT_CLASSIFICATION	Method should add the JUnit testXXX method to the list at the end, since the sequence matters. @param methodName
WITHOUT_CLASSIFICATION	The wrapper used to invoke the method
WITHOUT_CLASSIFICATION	Assume success
WITHOUT_CLASSIFICATION	The name of the class containing the method
WITHOUT_CLASSIFICATION	Do not use TestCase.run(TestResult) method, since it will call setUp and tearDown. Doing that will result in calling the setUp and tearDown method twice and the elapsed time will include setup and teardown.
WITHOUT_CLASSIFICATION	create a new TestResult
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Convert JUnit4 failure to Junit3 style
WITHOUT_CLASSIFICATION	copy the original stack trace
WITHOUT_CLASSIFICATION	we should log a warning, but allow the test to keep running
WITHOUT_CLASSIFICATION	this should be externalized to the properties
WITHOUT_CLASSIFICATION	probably should not happen
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	copy the original stack trace
WITHOUT_CLASSIFICATION	if the string constructor is not null, we use it. if the string constructor is null, we use the empty constructor to get a new instance
WITHOUT_CLASSIFICATION	first we see if the class declares a string constructor. if it is doesn't we look for empty constructor.
WITHOUT_CLASSIFICATION	we have to check and make sure the constructor is accessible. if we didn't it would throw an exception and cause a NPE.
WITHOUT_CLASSIFICATION	Must be final to create instance
WITHOUT_CLASSIFICATION	NO NEED TO INITIALIZE WHEN getCreateOneInstancePerSample is true cause it will be done in sample
WITHOUT_CLASSIFICATION	Convert JUnit4 AssertionError failures to JUnit3 style so will be treated as failure rather than error.
WITHOUT_CLASSIFICATION	Calling a method via reflection results in wrapping any Exceptions in ITE; unwrap these here so runProtected can allocate them correctly.
WITHOUT_CLASSIFICATION	Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	Generates expected Exception
WITHOUT_CLASSIFICATION	Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	Succeeds only if Before method - verifyTwo() - is run.
WITHOUT_CLASSIFICATION	Fails to generate expected Exception
WITHOUT_CLASSIFICATION	or if you have assertions enabled
WITHOUT_CLASSIFICATION	should always fail
WITHOUT_CLASSIFICATION	should not fail
WITHOUT_CLASSIFICATION	Generate a test error
WITHOUT_CLASSIFICATION	will generate Divide by zero error
WITHOUT_CLASSIFICATION	will generate Divide by zero error
WITHOUT_CLASSIFICATION	Normal test failure
WITHOUT_CLASSIFICATION	Generate test error
WITHOUT_CLASSIFICATION	equation for calculating the weight w = (int)(33 (used/max))
WITHOUT_CLASSIFICATION	changed the logic for BEA Weblogic in the case a user uses Tomcat's status servlet without any modifications. Weblogic will return nothing for the connector, therefore we need to check the size of the list. Peter 12.22.04
WITHOUT_CLASSIFICATION	int spare = cntr.getThreadInfo().getMaxSpareThreads();
WITHOUT_CLASSIFICATION	loop to fetch desired connector
WITHOUT_CLASSIFICATION	default : get first connector
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	CRLF blank line found
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	private MonitorModel DATA;
WITHOUT_CLASSIFICATION	log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	we check to see if the lastSelectedPath is null after we clear, it would return null
WITHOUT_CLASSIFICATION	this.DATA = null; this.DATA = stat;
WITHOUT_CLASSIFICATION	I18N: Contains fixed English text ...
WITHOUT_CLASSIFICATION	DATA = model;
WITHOUT_CLASSIFICATION	draw grid only when x is 1. If we didn't the grid line would draw over the data lines making it look bad.
WITHOUT_CLASSIFICATION	optional connector name prefix
WITHOUT_CLASSIFICATION	private List workerslist;
WITHOUT_CLASSIFICATION	the equations
WITHOUT_CLASSIFICATION	for now just swallow the exception
WITHOUT_CLASSIFICATION	surl can be null if read from a file
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Add the main panel and the graph
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	Should never happen
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	private boolean startDoc = false; private boolean endDoc = false;
WITHOUT_CLASSIFICATION	this.startDoc = true; Reset all work variables so reusing the instance starts afresh.
WITHOUT_CLASSIFICATION	this.startDoc = false; this.endDoc = true;
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	Note: the element is a ConfigTestElement, so cannot use FTPSampler access methods
WITHOUT_CLASSIFICATION	N.B. Originally there was only one filename, and only get(RETR) was supported To maintain backwards compatibility, the property name needs to remain the same $NON-NLS-1$
WITHOUT_CLASSIFICATION	Use binary mode file transfer? $NON-NLS-1$
WITHOUT_CLASSIFICATION	used for interrupting the sampler
WITHOUT_CLASSIFICATION	Assume failure
WITHOUT_CLASSIFICATION	should probably come from the setup dialog
WITHOUT_CLASSIFICATION	Could not access file or other error
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	called by HttpRequestHdr
WITHOUT_CLASSIFICATION	LF blank line found
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Are we uploading? $NON-NLS-1$
WITHOUT_CLASSIFICATION	Should the file data be saved in the response? $NON-NLS-1$
WITHOUT_CLASSIFICATION	No need to close this No need to close this
WITHOUT_CLASSIFICATION	The value is not encoded
WITHOUT_CLASSIFICATION	Let the GUI show that it will not be encoded
WITHOUT_CLASSIFICATION	Get the filename
WITHOUT_CLASSIFICATION	Set the values retrieved for the file upload
WITHOUT_CLASSIFICATION	Find the first empty line of the multipart, it signals end of headers for multipart Agents are supposed to terminate lines in CRLF:
WITHOUT_CLASSIFICATION	regular expression used to match against embedded resource URLs
WITHOUT_CLASSIFICATION	need to clear because the
WITHOUT_CLASSIFICATION	OPTIONAL TASKS
WITHOUT_CLASSIFICATION	2 columns size
WITHOUT_CLASSIFICATION	used by HttpTestSampleGui
WITHOUT_CLASSIFICATION	WEB REQUEST PANEL
WITHOUT_CLASSIFICATION	set this false to suppress some items for use in HTTP Request defaults
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Set false for AJP
WITHOUT_CLASSIFICATION	Body data
WITHOUT_CLASSIFICATION	Tabbed pane that contains parameters and raw body
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Default changed in 2.3 and again in 2.4
WITHOUT_CLASSIFICATION	Concurrent resources download $NON-NLS-1$
WITHOUT_CLASSIFICATION	See modifyTestElement
WITHOUT_CLASSIFICATION	Embedded URL match regex $NON-NLS-1$
WITHOUT_CLASSIFICATION	WEB REQUEST PANEL
WITHOUT_CLASSIFICATION	Textfield uses \n (LF) to delimit lines; we need to send CRLF. Rather than change the way that arguments are processed by the samplers for raw data, it is easier to fix the data. On retrival, CRLF is converted back to LF for storage in the text field. See
WITHOUT_CLASSIFICATION	If RAW data and Parameters match we allow switching
WITHOUT_CLASSIFICATION	Convert CRLF to CR, see modifyTestElement
WITHOUT_CLASSIFICATION	all sub-components with setFont(null) inherit this font
WITHOUT_CLASSIFICATION	Only display the port number if it is meaningfully specified
WITHOUT_CLASSIFICATION	WEB SERVER PANEL
WITHOUT_CLASSIFICATION	autoRedirects and followRedirects cannot both be selected
WITHOUT_CLASSIFICATION	Implementation
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	PROTOCOL
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	CONTENT_ENCODING
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If there is no data, then switching between Parameters and Raw should be allowed with no further user interaction.
WITHOUT_CLASSIFICATION	If there is data in the Raw panel, then the user should be prevented from switching (that would be easy to track).
WITHOUT_CLASSIFICATION	If the Parameter data can be converted (i.e. no names), we warn the user that the Parameter data will be lost.
WITHOUT_CLASSIFICATION	If the Parameter data cannot be converted to Raw, then the user should be prevented from doing so raise an error dialog
WITHOUT_CLASSIFICATION	Cached value
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	package-protected to allow access by unit-test cases
WITHOUT_CLASSIFICATION	helper method to save the cache entry
WITHOUT_CLASSIFICATION	invalid dates must be treated as expired
WITHOUT_CLASSIFICATION	if no-cache is present, ensure that expiresDate remains null, which forces revalidation
WITHOUT_CLASSIFICATION	the max-age directive overrides the Expires header,
WITHOUT_CLASSIFICATION	No max-age && No expires
WITHOUT_CLASSIFICATION	date or lastModified may be null or in bad format
WITHOUT_CLASSIFICATION	else expiresDate computed in (expires!=null) condition is used
WITHOUT_CLASSIFICATION	Helper method to deal with missing headers - Commons HttpClient
WITHOUT_CLASSIFICATION	Apache HttpClient
WITHOUT_CLASSIFICATION	Is the sample result OK to cache? i.e is it in the 2xx range?
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	+ JMX attributes, do not change values $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ -
WITHOUT_CLASSIFICATION	i.e. not using Expires Check that we are processing Expires/CacheControl
WITHOUT_CLASSIFICATION	see https:developer.mozilla.org/en/HTTP_Caching_FAQ see http:www.ietf.org/rfc/rfc2616.txt#13.2.4
WITHOUT_CLASSIFICATION	cache the value
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	echo back
WITHOUT_CLASSIFICATION	Check if we have read all the headers
WITHOUT_CLASSIFICATION	We know when to stop reading, so we can allow the read method to block
WITHOUT_CLASSIFICATION	No divider was found
WITHOUT_CLASSIFICATION	use null for no expiry
WITHOUT_CLASSIFICATION	Store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	Store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	Has its own debug log; removes matching cookies
WITHOUT_CLASSIFICATION	Has its own debug log; removes matching cookies
WITHOUT_CLASSIFICATION	This means the cookie was wrong for the URL
WITHOUT_CLASSIFICATION	This means the cookie was wrong for the URL
WITHOUT_CLASSIFICATION	tweak diff HC3 vs HC4
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The headers and body are divided by a blank line (the \r is to allow for the CR before LF) $NON-NLS-1$
WITHOUT_CLASSIFICATION	If we know the content length, we can allow the reading of the request to block until more data arrives. If it is chunked transfer, we cannot allow the reading to block, because we do not know when to stop reading, because the chunked transfer is not properly supported yet
WITHOUT_CLASSIFICATION	Check how much of the body we have already read as part of reading the headers We subtract two bytes for the crlf divider between header and body
WITHOUT_CLASSIFICATION	The reqest has no body, or it has a transfer encoding we do not support. In either case, we read any data available
WITHOUT_CLASSIFICATION	We use multi-line mask so can prefix the line with ^ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	use null for no expiry
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Needs to be package-protected to avoid problem with serialisation tests
WITHOUT_CLASSIFICATION	start off with a merged object as a copy of the local object
WITHOUT_CLASSIFICATION	iterate thru each of the other headers
WITHOUT_CLASSIFICATION	find the same property in the local headers
WITHOUT_CLASSIFICATION	we have a match
WITHOUT_CLASSIFICATION	prefer values from the other object
WITHOUT_CLASSIFICATION	the other object has an empty value, so remove this value from the merged object
WITHOUT_CLASSIFICATION	use the other object's value
WITHOUT_CLASSIFICATION	break out of the inner loop
WITHOUT_CLASSIFICATION	the other object has a new value to be added to the merged
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	TODO Charset ?
WITHOUT_CLASSIFICATION	finally, merge the names so it's clear they've been merged
WITHOUT_CLASSIFICATION	Saves the error if one occurs
WITHOUT_CLASSIFICATION	Listen on main socket
WITHOUT_CLASSIFICATION	Pass request to new thread
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO Charset ? $NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO Charset ? $NON-NLS-1$
WITHOUT_CLASSIFICATION	Only used by GUI
WITHOUT_CLASSIFICATION	Timeout occurred. Ignore, and keep looping until we're told to stop running.
WITHOUT_CLASSIFICATION	Ensure that there is always a collection available
WITHOUT_CLASSIFICATION	default level allow override by system properties
WITHOUT_CLASSIFICATION	final int _ignored = 1;
WITHOUT_CLASSIFICATION	++ JMX tag values $NON-NLS-1$
WITHOUT_CLASSIFICATION	Can't have two matching cookies
WITHOUT_CLASSIFICATION	ensure that the initial cookies are copied to the per-thread instances
WITHOUT_CLASSIFICATION	long max was used to represent a non-expiring cookie, but that caused problems
WITHOUT_CLASSIFICATION	Used by GUI
WITHOUT_CLASSIFICATION	Used by GUI
WITHOUT_CLASSIFICATION	$NON-NLS-1$ -- JMX tag values
WITHOUT_CLASSIFICATION	only save unexpired cookies
WITHOUT_CLASSIFICATION	flag - if all machines within a given domain can access the variable. (from http:www.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	ensure data is set up OK initially
WITHOUT_CLASSIFICATION	do nothing, the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	do nothing, the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	Scan for any matching cookies
WITHOUT_CLASSIFICATION	TODO Charset ?
WITHOUT_CLASSIFICATION	Remove all the cookies.
WITHOUT_CLASSIFICATION	Used by HttpMirrorServer
WITHOUT_CLASSIFICATION	No need to call clear
WITHOUT_CLASSIFICATION	and as a string
WITHOUT_CLASSIFICATION	Used for saving entries to a file
WITHOUT_CLASSIFICATION	wait for server to stop
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	regular expression used to match against embedded resource URLs
WITHOUT_CLASSIFICATION	OPTIONAL TASKS
WITHOUT_CLASSIFICATION	Use this instead of getLabelResource() otherwise getDocAnchor() below does not work
WITHOUT_CLASSIFICATION	flag - if all machines within a given domain can access the variable. (from http:www.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	Column numbers - must agree with order above
WITHOUT_CLASSIFICATION	only http and https are supported
WITHOUT_CLASSIFICATION	Obtain another URL with an explicit port:
WITHOUT_CLASSIFICATION	Allow for old format file without mechanism support
WITHOUT_CLASSIFICATION	this should never happen anyway, we'll continue with url2 set to null.
WITHOUT_CLASSIFICATION	For use by AJP
WITHOUT_CLASSIFICATION	Allow for old format file without the extra columnns
WITHOUT_CLASSIFICATION	Needs to be package protected for Unit test
WITHOUT_CLASSIFICATION	Embedded URL match regex
WITHOUT_CLASSIFICATION	does not apply to Java implementation
WITHOUT_CLASSIFICATION	add a listener to activate or not concurrent dwn.
WITHOUT_CLASSIFICATION	URL CONFIG
WITHOUT_CLASSIFICATION	includes \n
WITHOUT_CLASSIFICATION	Bottom (embedded resources, source address and optional tasks)
WITHOUT_CLASSIFICATION	2 column size
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	RETRIEVE IMAGES $NON-NLS-1$
WITHOUT_CLASSIFICATION	go to 1st line
WITHOUT_CLASSIFICATION	Download concurrent resources $NON-NLS-1$
WITHOUT_CLASSIFICATION	Is monitor $NON-NLS-1$
WITHOUT_CLASSIFICATION	only contains HTTPFileArg elements
WITHOUT_CLASSIFICATION	Use MD5 $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Add a new field source ip address (for HC implementations only) default: IP/Hostname
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: IP/Hostname
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Button for browsing webservice wsdl
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Web Methods
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	improve xml display
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	add the proxy elements
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	we only put HTTPFileArgs in it
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Permit dynamic resize of TextArea
WITHOUT_CLASSIFICATION	We get the AuthManager and pass it to the WSDLHelper once the sampler is updated to Axis, all of this stuff should not be necessary. Now I just need to find the time and motivation to do it.
WITHOUT_CLASSIFICATION	if use proxy is checked, we enable the text fields for the host and port
WITHOUT_CLASSIFICATION	required for unit tests
WITHOUT_CLASSIFICATION	Disable DELETE and BROWSE buttons if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Disable DELETE and BROWSE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	create the JTable that holds header per row
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	Disable the DELETE and SAVE buttons if no rows remaining after delete
WITHOUT_CLASSIFICATION	$NON-NLS-1$ --
WITHOUT_CLASSIFICATION	Enable the DELETE and SAVE buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Non-expiring
WITHOUT_CLASSIFICATION	Disable the DELETE and SAVE buttons if no rows remaining after delete.
WITHOUT_CLASSIFICATION	preset to default impl
WITHOUT_CLASSIFICATION	create the JTable that holds one cookie per row
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	++ Action command names $NON-NLS-1$
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	drop-down list for renderer
WITHOUT_CLASSIFICATION	if no results render in jmeter.properties, load Standard (default)
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	only contains Argument (or HTTPArgument)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ removed expiration because it's just an annoyance for static cookies
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	Enable the DELETE and SAVE buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	Enable the DELETE and SAVE buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	Disable the DELETE and SAVE buttons if no rows remaining after delete.
WITHOUT_CLASSIFICATION	Button Panel
WITHOUT_CLASSIFICATION	create the JTable that holds auth per row
WITHOUT_CLASSIFICATION	Ignore non-HTTP samplers
WITHOUT_CLASSIFICATION	&& !isPathExtensionNoQuestionmark()
WITHOUT_CLASSIFICATION	&& !isPathExtensionNoEquals()
WITHOUT_CLASSIFICATION	&& !isPathExtensionNoEquals() && !isPathExtensionNoQuestionmark()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	if ! isPathExtension()
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	Don't get tripped up by RE chars in the arg name
WITHOUT_CLASSIFICATION	name="sessionid" value="value"
WITHOUT_CLASSIFICATION	----------------------------------------------------------------------- Methods -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	return the current value (don't forget the prefix!)
WITHOUT_CLASSIFICATION	increment the value
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	transient Perl5Compiler compiler = new Perl5Compiler(); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	PreProcessors are cloned per-thread, so this will be saved per-thread $NON-NLS-1$
WITHOUT_CLASSIFICATION	;sessionid=value $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	value="value" name="sessionid" $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Constructors ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Methods implemented from interface org.apache.jmeter.config.Modifier ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Methods ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	if a mask for this argument exists
WITHOUT_CLASSIFICATION	values to be masked must be set in the WebApp to ""
WITHOUT_CLASSIFICATION	create instances needed for parsing
WITHOUT_CLASSIFICATION	XMLReaderFactory.createXMLReader(vendorParseClass);
WITHOUT_CLASSIFICATION	register content handler
WITHOUT_CLASSIFICATION	register error handler
WITHOUT_CLASSIFICATION	parse
WITHOUT_CLASSIFICATION	------------------------------------------- Constants and Data Members -------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- Constructors -------------------------------------------
WITHOUT_CLASSIFICATION	initalise pointer to first user
WITHOUT_CLASSIFICATION	Use round robin allocation of user details
WITHOUT_CLASSIFICATION	no entries in all users, therefore create an empty Map object
WITHOUT_CLASSIFICATION	if parameter name exists in http request then change its value with value obtained with regular expression
WITHOUT_CLASSIFICATION	verify if regex groups exists
WITHOUT_CLASSIFICATION	Note UserParameterXML accesses this variable to obtain the Set data via method getParsedParameters()
WITHOUT_CLASSIFICATION	cannot be first line either
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	------------------------------------------- Constants and Data Members -------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- Methods -------------------------------------------
WITHOUT_CLASSIFICATION	haven't got to reset paramname & paramvalue but did it to keep the code looking correct
WITHOUT_CLASSIFICATION	These are used as GUI item names; LOWERBOUND, UPPERBOUND and INCREMENT are used in the focusLost() method
WITHOUT_CLASSIFICATION	must create a new object, or else end up with a set full of the same Map object
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- Methods (used by UserParameterXML to get XML parameters from XML file) -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	this.updateUI();
WITHOUT_CLASSIFICATION	boolean pass = true;
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Next line
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	UTF-8 unsupported? You must be joking!
WITHOUT_CLASSIFICATION	N.B. Since the tags are extracted from an HTML Form, any values must already have been encoded
WITHOUT_CLASSIFICATION	The value is in the second group
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Cache of parsers - parsers must be re-usable
WITHOUT_CLASSIFICATION	Is there a cached parser?
WITHOUT_CLASSIFICATION	cache the parser
WITHOUT_CLASSIFICATION	The Set is used to ignore duplicated binary files. Using a LinkedHashSet to avoid unnecessary overhead in iterating the elements in the set later on. As a side-effect, this will keep them roughly in order, which should be a better model of browser behaviour.
WITHOUT_CLASSIFICATION	A dummy class to pass the pointer of URL.
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	Putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	Now look for URLs in the STYLE attribute
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	Putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	Now look for URLs in the STYLE attribute
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	case Node.TEXT_NODE: break;
WITHOUT_CLASSIFICATION	Helper method to get an attribute value, if it exists @param attrs list of attributs @param attname attribute name @return
WITHOUT_CLASSIFICATION	Note there's 3 capturing groups per value
WITHOUT_CLASSIFICATION	Number of capturing groups possibly containing Base HREFs:
WITHOUT_CLASSIFICATION	Check for a BASE HREF:
WITHOUT_CLASSIFICATION	Doesn't even look like a URL? Maybe it isn't: Ignore the exception.
WITHOUT_CLASSIFICATION	url.replace('+',' ');
WITHOUT_CLASSIFICATION	No WARN message to avoid performance impact
WITHOUT_CLASSIFICATION	Private iterator used to unwrap the URL from the URLString class
WITHOUT_CLASSIFICATION	Unwraps the URLString class to return the URL
WITHOUT_CLASSIFICATION	Noop
WITHOUT_CLASSIFICATION	Try to ensure that more javascript code is processed OK ...
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Listen on main socket
WITHOUT_CLASSIFICATION	Timeout occurred. Ignore, and keep looping until we're told to stop running.
WITHOUT_CLASSIFICATION	A dummy class to pass the pointer of URL.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	Putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	Now look for URLs in the STYLE attribute
WITHOUT_CLASSIFICATION	Now parse the DOM tree
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	a url is always in a Tag.
WITHOUT_CLASSIFICATION	first we check to see if body tag has a background set
WITHOUT_CLASSIFICATION	look for applets
WITHOUT_CLASSIFICATION	look for Objects
WITHOUT_CLASSIFICATION	second, if the tag was a composite tag, recursively parse its children.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ proxy.binary.filetype=binary
WITHOUT_CLASSIFICATION	Optionally number the requests
WITHOUT_CLASSIFICATION	running number
WITHOUT_CLASSIFICATION	Pass request to new proxy thread
WITHOUT_CLASSIFICATION	Use default encoding
WITHOUT_CLASSIFICATION	Tell the sampler to do a multipart post
WITHOUT_CLASSIFICATION	Set the form data
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Used by GUI
WITHOUT_CLASSIFICATION	and as a string
WITHOUT_CLASSIFICATION	Set the file uploads
WITHOUT_CLASSIFICATION	Remove the header for content-type and content-length, since those values will most likely be incorrect when the sampler performs the multipart request, because the boundary string will change
WITHOUT_CLASSIFICATION	used when postData is pure xml (eg. an xml-rpc call) or for PUT
WITHOUT_CLASSIFICATION	It is the most common post request, with parameter name and values We also assume this if no content type is present, to be most backwards compatible, but maybe we should only parse arguments if the content type is as expected standard name=value postData
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Just put the whole postbody as the value of a parameter used when postData is pure xml (ex. an xml-rpc call)
WITHOUT_CLASSIFICATION	Although the spec says UTF-8 should be used for encoding URL parameters, most browser use ISO-8859-1 for default if encoding is not known. We use null for contentEncoding, then the url parameters will be added with the value in the URL, and the "encode?" flag set to false
WITHOUT_CLASSIFICATION	Set the content encoding
WITHOUT_CLASSIFICATION	Check if the request itself tells us what the encoding is
WITHOUT_CLASSIFICATION	Check if we know the encoding of the page
WITHOUT_CLASSIFICATION	Check if we know the encoding of the form
WITHOUT_CLASSIFICATION	Form encoding has priority over page encoding
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	wait for server to stop
WITHOUT_CLASSIFICATION	Must agree with the order of entries in the drop-down created in ProxyControlGui.createGroupingPanel() private static final int GROUPING_NO_GROUPS = 0;
WITHOUT_CLASSIFICATION	$NON-NLS-1$ - JMX file attributes
WITHOUT_CLASSIFICATION	Note: Windows user preferences are stored relative to: HKEY_CURRENT_USER\Software\JavaSoft\Prefs
WITHOUT_CLASSIFICATION	Original numeric order (we now use strings)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Detect if user has pressed a new link
WITHOUT_CLASSIFICATION	for ssl connection
WITHOUT_CLASSIFICATION	Proxy configuration SSL
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	Keys for user preferences
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Should we match using regexes?
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Whether to use dymanic key generation (if supported) $NON-NLS-1$;
WITHOUT_CLASSIFICATION	The alias to be used if dynamic host names are not possible $NON-NLS-1$
WITHOUT_CLASSIFICATION	If this is defined, it is assumed to be the alias of a user-supplied certificate; overrides dynamic mode $NON-NLS-1$
WITHOUT_CLASSIFICATION	user-provided keystore keystore generated by JMeter; single entry
WITHOUT_CLASSIFICATION	Whether to use the redirect disabling feature (can be switched off if it does not work)
WITHOUT_CLASSIFICATION	Although this field is mutable, it is only accessed within the synchronized method deliverSampler()
WITHOUT_CLASSIFICATION	When was the last sample seen?
WITHOUT_CLASSIFICATION	maintain original behaviour
WITHOUT_CLASSIFICATION	Convert the old numeric types - just in case someone wants to reload the workbench
WITHOUT_CLASSIFICATION	make sure we log the error
WITHOUT_CLASSIFICATION	the url matches the last redirect
WITHOUT_CLASSIFICATION	Save Location so resulting sample can be disabled
WITHOUT_CLASSIFICATION	OK, because find only returns correct element types
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Package protected to allow test case access
WITHOUT_CLASSIFICATION	Package protected to allow test case access
WITHOUT_CLASSIFICATION	If no expressions are specified, we let the sample pass
WITHOUT_CLASSIFICATION	Check that we have a content type
WITHOUT_CLASSIFICATION	Check if the include pattern is matched
WITHOUT_CLASSIFICATION	Check if the exclude pattern is matched
WITHOUT_CLASSIFICATION	Not 100% sure, but I believe this can't happen, so I'll log and throw an error:
WITHOUT_CLASSIFICATION	Not 100% sure, but I believe this can't happen, so I'll log and throw an error:
WITHOUT_CLASSIFICATION	Look for elements directly within the HTTP proxy:
WITHOUT_CLASSIFICATION	Look for arguments elements in the target controller or higher up:
WITHOUT_CLASSIFICATION	Special case for the TestPlan's Arguments sub-element:
WITHOUT_CLASSIFICATION	Remember this was first in its batch
WITHOUT_CLASSIFICATION	Decent value for timers
WITHOUT_CLASSIFICATION	Huh! don't store this one!
WITHOUT_CLASSIFICATION	If we're not storing subsequent samplers, we'll need the first sampler to do all the work...:
WITHOUT_CLASSIFICATION	Find the last controller in the target to store the sampler there:
WITHOUT_CLASSIFICATION	There's a few properties which are excluded from this processing:
WITHOUT_CLASSIFICATION	go on with next property.
WITHOUT_CLASSIFICATION	Build the replacer from all the variables in the collection:
WITHOUT_CLASSIFICATION	TL - TE
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$; $NON-NLS-1$;
WITHOUT_CLASSIFICATION	Assume we have already created the store
WITHOUT_CLASSIFICATION	Assume we have already created the store
WITHOUT_CLASSIFICATION	no CA key - probably the wrong store type. cannot continue
WITHOUT_CLASSIFICATION	store is faulty, we need to recreate it if cert is not valid, flag up to recreate it
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	store is faulty, we need to recreate it if cert is not valid, flag up to recreate it
WITHOUT_CLASSIFICATION	message includes the file name
WITHOUT_CLASSIFICATION	no existing file or not valid Alphanum to avoid issues with command-line quoting we use same password for both
WITHOUT_CLASSIFICATION	no existing file or not valid Alphanum to avoid issues with command-line quoting we use same password for both
WITHOUT_CLASSIFICATION	This should now work
WITHOUT_CLASSIFICATION	This should now work
WITHOUT_CLASSIFICATION	The subject may be either a host or a domain
WITHOUT_CLASSIFICATION	reload to pick up new aliases reloading is very quick compared with creating an entry currently
WITHOUT_CLASSIFICATION	not a wildcard
WITHOUT_CLASSIFICATION	This should only be called for a specific host
WITHOUT_CLASSIFICATION	ensure Proxy threads cannot interfere with each other
WITHOUT_CLASSIFICATION	reload after adding alias
WITHOUT_CLASSIFICATION	safer to start afresh
WITHOUT_CLASSIFICATION	the keystore for use by the Proxy
WITHOUT_CLASSIFICATION	Allow list of headers to be overridden $NON-NLS-1$
WITHOUT_CLASSIFICATION	Use with SSL connection
WITHOUT_CLASSIFICATION	For identifying log messages
WITHOUT_CLASSIFICATION	keystore for SSL keys; fixed at config except for dynamic host key generation
WITHOUT_CLASSIFICATION	Check which HTTPSampler class we should use
WITHOUT_CLASSIFICATION	Now, parse initial request (in case it is a CONNECT request)
WITHOUT_CLASSIFICATION	Should not happen, but if it does we don't want to continue
WITHOUT_CLASSIFICATION	Re-parse (now it's the http request over SSL)
WITHOUT_CLASSIFICATION	most likely this is because of a certificate error
WITHOUT_CLASSIFICATION	Now parse the DOM tree
WITHOUT_CLASSIFICATION	we start to iterate through the elements
WITHOUT_CLASSIFICATION	a url is always in a Tag.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	With ssl request, url is host:port (without https: or path) $NON-NLS-1$
WITHOUT_CLASSIFICATION	Create a Header Manager to ensure that the browsers headers are captured and sent to the server
WITHOUT_CLASSIFICATION	Needed for HTTPSampler2
WITHOUT_CLASSIFICATION	Needed for HTTPSampler2
WITHOUT_CLASSIFICATION	Find the page encoding and possibly encodings for forms in the page in the response from the web server
WITHOUT_CLASSIFICATION	ignored, already processed
WITHOUT_CLASSIFICATION	Generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	Generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	Generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	We don't want to store any cookies in the generated test plan
WITHOUT_CLASSIFICATION	Always remove cookies Always remove authorization Remove additional headers
WITHOUT_CLASSIFICATION	deliverSampler allows sampler to be null, but result must not be null
WITHOUT_CLASSIFICATION	pick up any recent changes from other threads
WITHOUT_CLASSIFICATION	the host has a key already
WITHOUT_CLASSIFICATION	the host matches a domain; use its key
WITHOUT_CLASSIFICATION	add the remaining parts
WITHOUT_CLASSIFICATION	Check if alias is suitable here, rather than waiting for connection to fail
WITHOUT_CLASSIFICATION	drop empty trailing content
WITHOUT_CLASSIFICATION	We don't want this passed on to browser
WITHOUT_CLASSIFICATION	We don't want this passed on to browser
WITHOUT_CLASSIFICATION	Fix the content length
WITHOUT_CLASSIFICATION	Get rid of the query and the ?
WITHOUT_CLASSIFICATION	Remaining implementations delegate to the wrapped key manager
WITHOUT_CLASSIFICATION	Only check form tags
WITHOUT_CLASSIFICATION	Find the action / form url
WITHOUT_CLASSIFICATION	Just use the first one of the possible many charsets
WITHOUT_CLASSIFICATION	NOTREAD $NON-NLS-1$
WITHOUT_CLASSIFICATION	saved copy of first line for error reports
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	second, if the tag was a composite tag, recursively parse its children.
WITHOUT_CLASSIFICATION	Get rid of the query and the ?
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	parse other header lines, looking for Content-Length
WITHOUT_CLASSIFICATION	Save the last valid content length one
WITHOUT_CLASSIFICATION	Keep the raw post data
WITHOUT_CLASSIFICATION	will be host:port for CONNECT
WITHOUT_CLASSIFICATION	SSL connection
WITHOUT_CLASSIFICATION	Don't try to adjust the host name
WITHOUT_CLASSIFICATION	it must be a proxied HTTPS request $NON-NLS-1$
WITHOUT_CLASSIFICATION	JAVA Impl accepts URLs with unsafe characters so don't do anything
WITHOUT_CLASSIFICATION	Split line into name/value pairs and store in headers if relevant If name = "content-length", then return value as int, else return 0
WITHOUT_CLASSIFICATION	Nothing to do
WITHOUT_CLASSIFICATION	Get the boundary string for the multiparts from the content type
WITHOUT_CLASSIFICATION	Parsing Methods
WITHOUT_CLASSIFICATION	chop to "server.name:x/thing"
WITHOUT_CLASSIFICATION	chop to "server.name:x/thing"
WITHOUT_CLASSIFICATION	chop to server.name:xx $NON-NLS-1$
WITHOUT_CLASSIFICATION	chop to server.name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Handle IPv6 urls
WITHOUT_CLASSIFICATION	chop to server.name:xx
WITHOUT_CLASSIFICATION	chop to server.name
WITHOUT_CLASSIFICATION	Generate Error Body
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Prevent both redirect types from being selected
WITHOUT_CLASSIFICATION	300 codes tell client to do actions
WITHOUT_CLASSIFICATION	Use regexes to match the source data
WITHOUT_CLASSIFICATION	Proxy can take some while to start up; show a wating cursor
WITHOUT_CLASSIFICATION	This is applied to fields that should cause a restart when changed $NON-NLS-1$
WITHOUT_CLASSIFICATION	- action names
WITHOUT_CLASSIFICATION	Resource names for column headers $NON-NLS-1$
WITHOUT_CLASSIFICATION	Used by itemListener $NON-NLS-1$
WITHOUT_CLASSIFICATION	System.err.println("Enable Restart");
WITHOUT_CLASSIFICATION	Handles groupingMode. actionPerfomed is not suitable, as that seems to be activated whenever the Proxy is selected in the Test Plan Also handles samplerTypeName
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Drop the last character:
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Default value $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ maintain original default
WITHOUT_CLASSIFICATION	Default value $NON-NLS-1$
WITHOUT_CLASSIFICATION	Action listener will be added later
WITHOUT_CLASSIFICATION	Ignore everything else
WITHOUT_CLASSIFICATION	Note: position of these elements in the menu must match the corresponding ProxyControl.GROUPING_ values. $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Stop action notifications while we shuffle this around:
WITHOUT_CLASSIFICATION	Include request body if it is a post or put or patch
WITHOUT_CLASSIFICATION	Reinstate action notifications:
WITHOUT_CLASSIFICATION	never null
WITHOUT_CLASSIFICATION	Set the current value:
WITHOUT_CLASSIFICATION	never null
WITHOUT_CLASSIFICATION	can share these
WITHOUT_CLASSIFICATION	Don't redirect the following: 300 = Multiple choice 304 = Not Modified 305 = Use Proxy 306 = (Unused)
WITHOUT_CLASSIFICATION	get the start of the file
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Preserve original case
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Update the dataEncoding
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Extract the content-type if present $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Maximum connection retries
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Temporary copies, so can set the final ones
WITHOUT_CLASSIFICATION	N.B. this needs to be done before opening the connection
WITHOUT_CLASSIFICATION	Update follow redirects setting just for this connection
WITHOUT_CLASSIFICATION	N.B. must be done after opening connection
WITHOUT_CLASSIFICATION	works OK even if ContentEncoding is null
WITHOUT_CLASSIFICATION	Normal InputStream is not available
WITHOUT_CLASSIFICATION	N.B. this closes 'in'
WITHOUT_CLASSIFICATION	Add all the headers from the HeaderManager
WITHOUT_CLASSIFICATION	Get all the request properties, which are the headers set on the connection
WITHOUT_CLASSIFICATION	Exclude the COOKIE header, since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	value is a List of Strings
WITHOUT_CLASSIFICATION	Count the retries as well in the time
WITHOUT_CLASSIFICATION	Check cache for an entry with an Expires header in the future
WITHOUT_CLASSIFICATION	Start with 0 so tries at least once, and retries at most MAX_CONN_RETRIES times
WITHOUT_CLASSIFICATION	Attempt the connection:
WITHOUT_CLASSIFICATION	we don't want interrupt to try disconnection again
WITHOUT_CLASSIFICATION	try again
WITHOUT_CLASSIFICATION	This should never happen, but...
WITHOUT_CLASSIFICATION	Nice, we've got a connection. Finish sending the request:
WITHOUT_CLASSIFICATION	Request sent. Now get the response:
WITHOUT_CLASSIFICATION	Done with the sampling proper.
WITHOUT_CLASSIFICATION	Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	Cannot be null here
WITHOUT_CLASSIFICATION	e.g. text/html; charset=ISO-8859-1
WITHOUT_CLASSIFICATION	if either a file or path location is given, get the file object. we have a file
WITHOUT_CLASSIFICATION	Set details from the actual response Needs to be done before response can be stored
WITHOUT_CLASSIFICATION	Sampling proper - establish the connection and read the response: Repeatedly try to connect:
WITHOUT_CLASSIFICATION	Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	has been seen in a redirect use header (if possible) if no message found
WITHOUT_CLASSIFICATION	Don't process again
WITHOUT_CLASSIFICATION	Save cache information
WITHOUT_CLASSIFICATION	Random class for generating random numbers.
WITHOUT_CLASSIFICATION	return the absolutePath of the file
WITHOUT_CLASSIFICATION	The method will check to see if JMeter was started in NonGui mode. If it was, it will try to pick up the proxy host and port values if they were passed to JMeter.java.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	+ JMX file attribut names - do not change! $NON-NLS-1$
WITHOUT_CLASSIFICATION	we check to see if the proxy host and port are set
WITHOUT_CLASSIFICATION	This method uses Apache soap util to create the proper DOM elements. @return Element
WITHOUT_CLASSIFICATION	get filename or ""
WITHOUT_CLASSIFICATION	Note that the filename is also used as a key to the pool (if used) Documents provided in the testplan are not currently pooled, as they may change between samples.
WITHOUT_CLASSIFICATION	we created the document
WITHOUT_CLASSIFICATION	Must be local content - or not using pool
WITHOUT_CLASSIFICATION	Consider using Apache commons pool to create a pool of document builders or make sure XMLParserUtils creates builders efficiently.
WITHOUT_CLASSIFICATION	Suppress messages to stdout
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	we don't want interrupt to try disconnection again We don't want to continue using this connection, even if KeepAlive is set May not exist
WITHOUT_CLASSIFICATION	calling disconnect doesn't close the connection immediately, but indicates we're through with it. The JVM should close it when necessary. we don't want interrupt to try disconnection again Disconnect unless using KeepAlive
WITHOUT_CLASSIFICATION	it's not set, lets check if the user passed proxy host and port from command line
WITHOUT_CLASSIFICATION	it's not set, lets check if the user passed proxy host and port from command line
WITHOUT_CLASSIFICATION	must be a "here" document
WITHOUT_CLASSIFICATION	Required to satisfy HTTPSamplerBase Should not be called, as we override sample()
WITHOUT_CLASSIFICATION	$NON-NLS-1$ - JMX file attribut names - do not change!
WITHOUT_CLASSIFICATION	Assume it will fail ditto $NON-NLS-1$
WITHOUT_CLASSIFICATION	set the response defaults
WITHOUT_CLASSIFICATION	WARNING - could be large
WITHOUT_CLASSIFICATION	if a blank HeaderManager exists, try to get the SOAPHTTPConnection. After the first request, there should be a connection object stored with the cookie header info.
WITHOUT_CLASSIFICATION	set the auth. thanks to KiYun Roe for contributing the patch I cleaned up the patch slightly. 5-26-05
WITHOUT_CLASSIFICATION	check the proxy
WITHOUT_CLASSIFICATION	if use proxy is set, we try to pick up the proxy host and port from either the text fields or from JMeterUtil if they were passed from command line
WITHOUT_CLASSIFICATION	if for some reason the host is blank and the port is zero, the sampler will fail silently
WITHOUT_CLASSIFICATION	API uses raw types
WITHOUT_CLASSIFICATION	It is not possible to access the actual HTTP response code, so we assume no data means failure
WITHOUT_CLASSIFICATION	Scheme used for slow HTTP sockets. Cannot be set as a default, because must be set on an HttpClient instance.
WITHOUT_CLASSIFICATION	We always want to override the HTTPS scheme, because we want to trust all certificates and hosts
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Done with the sampling proper.
WITHOUT_CLASSIFICATION	Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	Save cache information
WITHOUT_CLASSIFICATION	condensed length (without \r) Add \r for each header Add \r for initial header final \r\n before data
WITHOUT_CLASSIFICATION	by not reading the response for real, it improves the performance on slow clients
WITHOUT_CLASSIFICATION	reponse code doesn't really apply, since the soap driver doesn't provide a response code
WITHOUT_CLASSIFICATION	Create a set of default parameters from the ones initially created. This allows the defaults to be overridden if necessary from the properties file.
WITHOUT_CLASSIFICATION	Set up HTTP scheme override if necessary
WITHOUT_CLASSIFICATION	We always want to override the HTTPS scheme
WITHOUT_CLASSIFICATION	Accessed from multiple threads
WITHOUT_CLASSIFICATION	can throw IOException
WITHOUT_CLASSIFICATION	perform the sample
WITHOUT_CLASSIFICATION	Needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	We've finished with the request, so we can add the LocalAddress to it for display
WITHOUT_CLASSIFICATION	HTTP protocol violation, but avoids NPE
WITHOUT_CLASSIFICATION	record some sizes to allow HTTPSampleResult.getBytes() with different options
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Follow redirects and download page resources if appropriate:
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	protocol:[user:pass@]host:[port]
WITHOUT_CLASSIFICATION	Always create hash because we will always need it
WITHOUT_CLASSIFICATION	Allow for null strings
WITHOUT_CLASSIFICATION	otherwise proxy String fields may be null
WITHOUT_CLASSIFICATION	No proxy, so don't check proxy fields
WITHOUT_CLASSIFICATION	Lookup key - must agree with all the values used to create the HttpClient.
WITHOUT_CLASSIFICATION	One-time init for this client
WITHOUT_CLASSIFICATION	set retry count
WITHOUT_CLASSIFICATION	Override the defualt schemes as necessary
WITHOUT_CLASSIFICATION	Set up proxy details
WITHOUT_CLASSIFICATION	save the agent for next time round
WITHOUT_CLASSIFICATION	Use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	reset in case was set previously
WITHOUT_CLASSIFICATION	Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Exclude the COOKIE header, since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. need to separate protocol from authority otherwise http:server would match https:erver could use separate fields, but simpler to combine them
WITHOUT_CLASSIFICATION	Method left empty here, but allows subclasses to override
WITHOUT_CLASSIFICATION	header[0] is not the status line... $NON-NLS-1$
WITHOUT_CLASSIFICATION	remove any port specification $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	no need to specify the port if it is the default
WITHOUT_CLASSIFICATION	Get all the request headers
WITHOUT_CLASSIFICATION	Helper class so we can generate request data without dumping entire file contents
WITHOUT_CLASSIFICATION	encoding does not really matter here
WITHOUT_CLASSIFICATION	Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	Check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	If a content encoding is specified, we use that as the encoding of any parameter values
WITHOUT_CLASSIFICATION	Write the request to our own stream
WITHOUT_CLASSIFICATION	Create the parts Add any parameters
WITHOUT_CLASSIFICATION	We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	$NON-NLS-1$ this is the default used by HttpClient
WITHOUT_CLASSIFICATION	not multipart Check if the header manager had a content type header This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	If there are no arguments, we can send a file as the body of the request TODO: needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	We just add placeholder text for file content
WITHOUT_CLASSIFICATION	If a content encoding is specified, we set it as http parameter, so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	If none of the arguments have a name specified, we just send all the values as the post body
WITHOUT_CLASSIFICATION	Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	Note: if "Encoded?" is not selected, arg.getEncodedValue is equivalent to arg.getValue
WITHOUT_CLASSIFICATION	Note: if "Encoded?" is not selected, arg.getEncodedValue is equivalent to arg.getValue
WITHOUT_CLASSIFICATION	Let StringEntity perform the encoding
WITHOUT_CLASSIFICATION	It is a normal post request, with parameter names and values
WITHOUT_CLASSIFICATION	Set the content type
WITHOUT_CLASSIFICATION	Add the parameters
WITHOUT_CLASSIFICATION	Use the default encoding for urls
WITHOUT_CLASSIFICATION	The HTTPClient always urlencodes both name and value, so if the argument is already encoded, we have to decode it before adding it to the post request
WITHOUT_CLASSIFICATION	The value is already encoded by the user Must decode the value now, so that when the httpclient encodes it, we end up with the same value as the user had entered.
WITHOUT_CLASSIFICATION	Add the parameter, httpclient will urlencode it
WITHOUT_CLASSIFICATION	Buffer to hold the entity body
WITHOUT_CLASSIFICATION	we provide the MIME type here
WITHOUT_CLASSIFICATION	Check for local contentEncoding (charset) override; fall back to default for content body we do this here rather so we can use the same charset to retrieve the data
WITHOUT_CLASSIFICATION	Only create this if we are overriding whatever default there may be If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	Just append all the parameter values, and use that as the entity body
WITHOUT_CLASSIFICATION	Check if we have any content to send for body
WITHOUT_CLASSIFICATION	We get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If getSendFileAsPostBody returned true, it's sure that file is not null no need for content-type here
WITHOUT_CLASSIFICATION	If none of the arguments have a name specified, we just send all the values as the entity body
WITHOUT_CLASSIFICATION	If the request entity is repeatable, we can send it first to our own stream, so we can return it
WITHOUT_CLASSIFICATION	this probably cannot happen
WITHOUT_CLASSIFICATION	Does not need to be synchronised, as all access is from same thread
WITHOUT_CLASSIFICATION	don't try twice
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	may be the empty string
WITHOUT_CLASSIFICATION	N.B. It's not po ssible to forward threadStarted() to the implementation class. This is because Config items are not processed until later, and HTTPDefaults may define the implementation
WITHOUT_CLASSIFICATION	Forward to sampler
WITHOUT_CLASSIFICATION	Forward to sampler
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	force reopen on next sample
WITHOUT_CLASSIFICATION	Content-length
WITHOUT_CLASSIFICATION	Marker for query string attribute
WITHOUT_CLASSIFICATION	+ JMX names - do not change $NON-NLS-1$
WITHOUT_CLASSIFICATION	More general attributes not supported
WITHOUT_CLASSIFICATION	Authorization
WITHOUT_CLASSIFICATION	Host always
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	content-type
WITHOUT_CLASSIFICATION	content-type
WITHOUT_CLASSIFICATION	we need to use up the int now
WITHOUT_CLASSIFICATION	int mark =
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Dummy
WITHOUT_CLASSIFICATION	Methods needed by subclasses to get access to the implementation
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Help convert existing JMX files which use HTTPSampler[2] nodes
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testIterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	KEY = TCPKEY or ERRKEY, Entry= Socket or String
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default value: false
WITHOUT_CLASSIFICATION	default for concurrent pool (do not change)
WITHOUT_CLASSIFICATION	Shown as Parameter Name on the GUI
WITHOUT_CLASSIFICATION	- JMX names
WITHOUT_CLASSIFICATION	Default concurrent pool size for download embedded resources
WITHOUT_CLASSIFICATION	The default setting to be used (i.e. historic)
WITHOUT_CLASSIFICATION	for Thread Pool for resources but no need to use a special value?
WITHOUT_CLASSIFICATION	Use for ComboBox Source Address Type. Preserve order (specially with localization)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default value: 60 secs
WITHOUT_CLASSIFICATION	FILE_FIELD is kept for backward compatibility with old test plans $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Supported methods:
WITHOUT_CLASSIFICATION	IMAGE_PARSER now really means EMBEDDED_PARSER $NON-NLS-1$
WITHOUT_CLASSIFICATION	i.e. GET
WITHOUT_CLASSIFICATION	Derive the mapping of content types to parsers
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Store MD5 hash instead of storing response $NON-NLS-1$
WITHOUT_CLASSIFICATION	Not synch, but it is not modified after creation
WITHOUT_CLASSIFICATION	returns empty array for null
WITHOUT_CLASSIFICATION	Code /
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	If there is one file with no parameter name, the file will be sent as post body.
WITHOUT_CLASSIFICATION	We use multipart if we have been told so, or files are present and the files should not be send as the post body
WITHOUT_CLASSIFICATION	We know that URL arguments should always be encoded in UTF-8 according to spec
WITHOUT_CLASSIFICATION	Parse the arguments in querystring, assuming specified encoding for values
WITHOUT_CLASSIFICATION	Check if there are any difference between name and value and their encoded name and value
WITHOUT_CLASSIFICATION	If there is no difference, we mark it as not needing encoding
WITHOUT_CLASSIFICATION	private method to allow AsyncSample to reset the value without performing checks
WITHOUT_CLASSIFICATION	private method to allow AsyncSample to reset the value without performing checks
WITHOUT_CLASSIFICATION	allow use of relative file URLs
WITHOUT_CLASSIFICATION	HTTP URLs must be absolute, allow file to be relative $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Add the query string if it is a HTTP GET or DELETE request
WITHOUT_CLASSIFICATION	Get the query string encoded in specified encoding If no encoding is specified by user, we will get it encoded in UTF-8, which is what the HTTP spec says
WITHOUT_CLASSIFICATION	Already contains a prefix
WITHOUT_CLASSIFICATION	If default port for protocol is used, we do not include port in URL
WITHOUT_CLASSIFICATION	We use the encoding which should be used according to the HTTP spec, which is UTF-8
WITHOUT_CLASSIFICATION	Check if the sampler has a specified content encoding
WITHOUT_CLASSIFICATION	Encode the parameter value in the specified content encoding
WITHOUT_CLASSIFICATION	records the existance of an equal sign
WITHOUT_CLASSIFICATION	We do not know the content encoding of the query string
WITHOUT_CLASSIFICATION	Append body if it is a post or put
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	need to handle four cases: - string contains name=value - string contains name= - string contains name - empty string
WITHOUT_CLASSIFICATION	is there a separator? case of name=value, name=
WITHOUT_CLASSIFICATION	If we know the encoding, we can decode the argument value, to make it easier to read for the user
WITHOUT_CLASSIFICATION	If we do not know the encoding, we just use the encoded value The browser has already done the encoding, so save the values as is
WITHOUT_CLASSIFICATION	we have a name
WITHOUT_CLASSIFICATION	we don't; use the default parser
WITHOUT_CLASSIFICATION	Iterate through the URLs and download each image:
WITHOUT_CLASSIFICATION	Get the URL matcher
WITHOUT_CLASSIFICATION	don't fetch unless pattern compiles
WITHOUT_CLASSIFICATION	For concurrent get resources
WITHOUT_CLASSIFICATION	See catch clause below
WITHOUT_CLASSIFICATION	There were some spaces in the URL
WITHOUT_CLASSIFICATION	I don't think localMatcher can be null here, but check just in case
WITHOUT_CLASSIFICATION	we have a pattern and the URL does not match, so skip it
WITHOUT_CLASSIFICATION	default: serial download embedded resources
WITHOUT_CLASSIFICATION	IF for download concurrent embedded resources
WITHOUT_CLASSIFICATION	init with default value
WITHOUT_CLASSIFICATION	sample all resources with threadpool
WITHOUT_CLASSIFICATION	call normal shutdown (wait ending all tasks)
WITHOUT_CLASSIFICATION	put a timeout if tasks couldn't terminate
WITHOUT_CLASSIFICATION	add result to main sampleResult
WITHOUT_CLASSIFICATION	did all the tasks finish?
WITHOUT_CLASSIFICATION	Not intended to be instantiated
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	kill any remaining tasks
WITHOUT_CLASSIFICATION	@param res HTTPSampleResult to check @return parser class name (may be "") or null if entry does not exist
WITHOUT_CLASSIFICATION	Browsers seem to tolerate Location headers with spaces, replacing them automatically with %20. We want to emulate this behaviour.
WITHOUT_CLASSIFICATION	The redirect URL we got was not a valid URL
WITHOUT_CLASSIFICATION	Only add sample if it is a sample of valid url redirect, i.e. that we have actually sampled the URL
WITHOUT_CLASSIFICATION	Now populate the any totalRes fields that need to come from lastRes:
WITHOUT_CLASSIFICATION	Method to set files list to be uploaded. @param value HTTPFileArgs object that stores file list to be uploaded.
WITHOUT_CLASSIFICATION	no point saving an empty list
WITHOUT_CLASSIFICATION	Method to get files list to be uploaded.
WITHOUT_CLASSIFICATION	Weed out the empty files
WITHOUT_CLASSIFICATION	NOOP to provide based empty impl and avoid breaking existing implementations
WITHOUT_CLASSIFICATION	may also happen if long value > int.max
WITHOUT_CLASSIFICATION	for new test plans that don't have FILE/PARAM/MIME properties
WITHOUT_CLASSIFICATION	Updated the property lists
WITHOUT_CLASSIFICATION	We don't want to use CacheManager clone but the parent one, and CacheManager is Thread Safe
WITHOUT_CLASSIFICATION	Non-instantiable
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Implement these here, to avoid re-implementing for sub-classes (previously these were implemented in all TestElements)
WITHOUT_CLASSIFICATION	8kB is the (max) size to have the latency ('the first packet') Enough for MD5
WITHOUT_CLASSIFICATION	OK, we have an old-style file definition save it Now deal with any additional file arguments
WITHOUT_CLASSIFICATION	-1 means not defined
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Control reuse of cached SSL Context in subsequent iterations
WITHOUT_CLASSIFICATION	e.g. .apache.org $NON-NLS-1$
WITHOUT_CLASSIFICATION	e.g. www.apache.org
WITHOUT_CLASSIFICATION	Get hostname
WITHOUT_CLASSIFICATION	N.B. These values are used in jmeter.properties (jmeter.httpsampler) - do not change They can alse be used as the implementation name
WITHOUT_CLASSIFICATION	+ JMX implementation attribute values (also displayed in GUI) - do not change $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ - JMX
WITHOUT_CLASSIFICATION	Helper class (callback) for applying parameter definitions
WITHOUT_CLASSIFICATION	get past separator
WITHOUT_CLASSIFICATION	Put request does not use multipart, so no need for boundary
WITHOUT_CLASSIFICATION	Get the encoding to use for the request
WITHOUT_CLASSIFICATION	If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	Create the content length we are going to write
WITHOUT_CLASSIFICATION	We create the post body content now, so we know the size
WITHOUT_CLASSIFICATION	Just append all the parameter values, and use that as the put body
WITHOUT_CLASSIFICATION	Keep the content, will be sent later
WITHOUT_CLASSIFICATION	Set the content length
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Request sent. Now get the response:
WITHOUT_CLASSIFICATION	Done with the sampling proper.
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	e.g. text/html; charset=ISO-8859-1
WITHOUT_CLASSIFICATION	Needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	HTTP protocol violation, but avoids NPE
WITHOUT_CLASSIFICATION	record some sizes to allow HTTPSampleResult.getBytes() with different options
WITHOUT_CLASSIFICATION	Handle the various methods
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Allows HTTPSamplerProxy to call threadFinished; subclasses can override if necessary
WITHOUT_CLASSIFICATION	Allows HTTPSamplerProxy to call notifyFirstSampleAfterLoopRestart; subclasses can override if necessary
WITHOUT_CLASSIFICATION	Provide access to HTTPSamplerBase methods
WITHOUT_CLASSIFICATION	did not want to spoof the IP address
WITHOUT_CLASSIFICATION	OK to set pre-emptive auth?
WITHOUT_CLASSIFICATION	Needs to be accessible by HTTPSampler2
WITHOUT_CLASSIFICATION	Set default parameters as needed
WITHOUT_CLASSIFICATION	Process Commons HttpClient parameters file $NON-NLS-1$
WITHOUT_CLASSIFICATION	If the pre-emptive parameter is undefined, then we can set it as needed otherwise we should do what the user requested.
WITHOUT_CLASSIFICATION	Handle old-style JMeter properties
WITHOUT_CLASSIFICATION	This must be done last, as must not be overridden
WITHOUT_CLASSIFICATION	We do our own cookie handling
WITHOUT_CLASSIFICATION	May generate IllegalArgumentException
WITHOUT_CLASSIFICATION	HC3.1 does not have the method
WITHOUT_CLASSIFICATION	Set any default request headers
WITHOUT_CLASSIFICATION	Setup connection
WITHOUT_CLASSIFICATION	will be null for HEAD
WITHOUT_CLASSIFICATION	tmp inputstream needs to have a good counting
WITHOUT_CLASSIFICATION	Pick up Actual path (after redirects)
WITHOUT_CLASSIFICATION	Can be missing, e.g. on redirect
WITHOUT_CLASSIFICATION	Exclude the COOKIE header, since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	Save cache information
WITHOUT_CLASSIFICATION	Follow redirects and download page resources if appropriate:
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	Set up the local address if one exists
WITHOUT_CLASSIFICATION	Use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	Method left empty here, but allows subclasses to override
WITHOUT_CLASSIFICATION	remove any port specification $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Get all the request headers
WITHOUT_CLASSIFICATION	add a \r\n
WITHOUT_CLASSIFICATION	e.g. some kinds of invalid URL
WITHOUT_CLASSIFICATION	already include the \r\n
WITHOUT_CLASSIFICATION	last \r\n before response data
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	We use the HostConfiguration as the key to retrieve the HttpClient, so need to ensure that any items used in its equals/hashcode methods are not changed after use, i.e.: host, port, protocol, localAddress, proxy
WITHOUT_CLASSIFICATION	All needed to ensure re-usablility
WITHOUT_CLASSIFICATION	null means use the default
WITHOUT_CLASSIFICATION	Dynamic proxy overrules static proxy
WITHOUT_CLASSIFICATION	N.B. HostConfiguration.equals() includes proxy settings in the compare.
WITHOUT_CLASSIFICATION	Set up any required Proxy credentials
WITHOUT_CLASSIFICATION	Allow HttpClient to handle the redirects:
WITHOUT_CLASSIFICATION	Set all the headers from the HeaderManager
WITHOUT_CLASSIFICATION	header[0] is not the status line... $NON-NLS-1$
WITHOUT_CLASSIFICATION	Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	Set the content type
WITHOUT_CLASSIFICATION	Check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	If a content encoding is specified, we use that as the encoding of any parameter values
WITHOUT_CLASSIFICATION	Write the request to our own stream
WITHOUT_CLASSIFICATION	Create the parts Add any parameters
WITHOUT_CLASSIFICATION	$NON-NLS-1$ this is the default used by HttpClient
WITHOUT_CLASSIFICATION	If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	We just add placeholder text for file content
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NT Includes other types of Credentials
WITHOUT_CLASSIFICATION	We have credentials - should we set pre-emptive authentication?
WITHOUT_CLASSIFICATION	We don't know how many entries will be skipped
WITHOUT_CLASSIFICATION	Add any files
WITHOUT_CLASSIFICATION	We do not know the char set of the file to be uploaded, so we set it to null
WITHOUT_CLASSIFICATION	We do not know what the char set of the file is
WITHOUT_CLASSIFICATION	Set the multipart for the post
WITHOUT_CLASSIFICATION	.sendMultipartWithoutFileContent(bos);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	If there are no arguments, we can send a file as the body of the request TODO: needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	If a content encoding is specified, we set it as http parameter, so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	If none of the arguments have a name specified, we just send all the values as the post body
WITHOUT_CLASSIFICATION	It is a normal post request, with parameter names and values
WITHOUT_CLASSIFICATION	Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	Set the content type
WITHOUT_CLASSIFICATION	Add the parameters
WITHOUT_CLASSIFICATION	Use the default encoding for urls
WITHOUT_CLASSIFICATION	The HTTPClient always urlencodes both name and value, so if the argument is already encoded, we have to decode it before adding it to the post request
WITHOUT_CLASSIFICATION	The value is already encoded by the user Must decode the value now, so that when the httpclient encodes it, we end up with the same value as the user had entered.
WITHOUT_CLASSIFICATION	Add the parameter, httpclient will urlencode it
WITHOUT_CLASSIFICATION	Check if we have any content to send for body
WITHOUT_CLASSIFICATION	We get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	Does not need to be synchronised, as all access is from same thread
WITHOUT_CLASSIFICATION	If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	Set the content length
WITHOUT_CLASSIFICATION	For all the file multiparts, we must tell it to not include the actual file content
WITHOUT_CLASSIFICATION	For all the file multiparts, we must revert the hiding of the actual file content
WITHOUT_CLASSIFICATION	Check if the header manager had a content type header This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	Buffer to hold the put body, except file content
WITHOUT_CLASSIFICATION	Should be true
WITHOUT_CLASSIFICATION	Count the retries as well in the time
WITHOUT_CLASSIFICATION	Request sent. Now get the response:
WITHOUT_CLASSIFICATION	Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	We just add placeholder text for file content
WITHOUT_CLASSIFICATION	If a content encoding is specified, we set it as http parameter, so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	If the request entity is repeatable, we can send it first to our own stream, so we can return it
WITHOUT_CLASSIFICATION	If the request entity is repeatable, we can send it first to our own stream, so we can return it
WITHOUT_CLASSIFICATION	Check if the header manager had a content type header This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If none of the arguments have a name specified, we just send all the values as the put body
WITHOUT_CLASSIFICATION	Check if we should send only placeholder text for the file content, or the real file content
WITHOUT_CLASSIFICATION	Can cause NPE in HttpClient 3.1 ((SimpleHttpConnectionManager)cl.getHttpConnectionManager()).shutdown(); Closes the connection Revert to original method: Closes the connection
WITHOUT_CLASSIFICATION	Implemented by parent class
WITHOUT_CLASSIFICATION	Take length from file
WITHOUT_CLASSIFICATION	Use this to override file length
WITHOUT_CLASSIFICATION	All the other headers are set up by HTTPSampler2.setupConnection()
WITHOUT_CLASSIFICATION	No header provided
WITHOUT_CLASSIFICATION	so we don't generate chunked encoding
WITHOUT_CLASSIFICATION	will use chunked encoding
WITHOUT_CLASSIFICATION	Some headers are set by executeMethod()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Done with the sampling proper.
WITHOUT_CLASSIFICATION	Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	e.g. text/html; charset=ISO-8859-1
WITHOUT_CLASSIFICATION	If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	Save cache information
WITHOUT_CLASSIFICATION	Follow redirects and download page resources if appropriate:
WITHOUT_CLASSIFICATION	Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	will be null for HEAD
WITHOUT_CLASSIFICATION	Pick up Actual path (after redirects)
WITHOUT_CLASSIFICATION	Can be missing, e.g. on redirect
WITHOUT_CLASSIFICATION	e.g. some kinds of invalid URL
WITHOUT_CLASSIFICATION	Add any files
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	charset must agree with content-type below $NON-NLS-1$
WITHOUT_CLASSIFICATION	contentLength > 0 ? contentLength : DEFAULT_INITIAL_BUFFER_SIZE);
WITHOUT_CLASSIFICATION	first response
WITHOUT_CLASSIFICATION	save the latency
WITHOUT_CLASSIFICATION	Set up the defaults (may be overridden below)
WITHOUT_CLASSIFICATION	NOTUSED private Class PARSERCLASS = null;
WITHOUT_CLASSIFICATION	Was there an error?
WITHOUT_CLASSIFICATION	N.B. Must be in this class for the TestBean code to work
WITHOUT_CLASSIFICATION	Retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	Write end of multipart
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	Set the content type
WITHOUT_CLASSIFICATION	Get the encoding to use for the request
WITHOUT_CLASSIFICATION	If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	Keep the content, will be sent later
WITHOUT_CLASSIFICATION	Set the content length
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Write the form data post body, which we have constructed in the setHeaders. This contains the multipart start divider and any form data, i.e. arguments
WITHOUT_CLASSIFICATION	First write the start multipart file TODO - charset?
WITHOUT_CLASSIFICATION	Retrieve the formatted data using the same encoding used to create it TODO - charset? Write the actual file content
WITHOUT_CLASSIFICATION	We just add placeholder text for file content $NON-NLS-1$ Write the end of multipart file
WITHOUT_CLASSIFICATION	we're sure that there is at least one file because of getSendFileAsPostBody method's return value.
WITHOUT_CLASSIFICATION	We just add placeholder text for file content $NON-NLS-1$
WITHOUT_CLASSIFICATION	Write the form section
WITHOUT_CLASSIFICATION	First the multipart start divider
WITHOUT_CLASSIFICATION	Add any parameters
WITHOUT_CLASSIFICATION	End the previous multipart
WITHOUT_CLASSIFICATION	End the previous multipart
WITHOUT_CLASSIFICATION	Write multipart for parameter
WITHOUT_CLASSIFICATION	If there are any files, we need to end the previous multipart
WITHOUT_CLASSIFICATION	Write multipart for file
WITHOUT_CLASSIFICATION	Add also the length of the file content
WITHOUT_CLASSIFICATION	And the end of the file multipart
WITHOUT_CLASSIFICATION	Add the end of multipart
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	If none of the arguments have a name specified, we just send all the values as the post body
WITHOUT_CLASSIFICATION	If we have a file, but no data, then read the file
WITHOUT_CLASSIFICATION	Override so we can intercept the stream
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Override so we can intercept the stream
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	It is a normal post request, with parameter names and values
WITHOUT_CLASSIFICATION	Set the content type
WITHOUT_CLASSIFICATION	Create the content length we are going to write
WITHOUT_CLASSIFICATION	We create the post body content now, so we know the size
WITHOUT_CLASSIFICATION	Keep the content, will be sent later
WITHOUT_CLASSIFICATION	Set the content length
WITHOUT_CLASSIFICATION	Check if the header manager had a content type header This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Now we just construct any multipart for the files We only construct the file multipart start, we do not write the actual file content
WITHOUT_CLASSIFICATION	we're sure that there is one file because of getSendFileAsPostBody method's return value.
WITHOUT_CLASSIFICATION	Exception in progress
WITHOUT_CLASSIFICATION	Write boundary end marker
WITHOUT_CLASSIFICATION	get access to buffer
WITHOUT_CLASSIFICATION	wrap read() methods to track output buffer
WITHOUT_CLASSIFICATION	Preload the output so that can be read back as HTTP
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	1k - the previous 100k made no sense (there's tons of buffers elsewhere in the chain) and it caused OOM when many concurrent uploads were being done. Could be fixed by increasing the evacuation ratio in bin/jmeter[.bat], but this is better.
WITHOUT_CLASSIFICATION	make sure buffer details track the output
WITHOUT_CLASSIFICATION	Characters per second to emulate
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Override all the super-class Socket methods.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	timeout to retrieve wsdl when server not response
WITHOUT_CLASSIFICATION	NOTUSED String portname = pnode.getAttribute("name"); used to check binding, but now it doesn't. it was failing when wsdl did not using binding as expected
WITHOUT_CLASSIFICATION	check soap12
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.http.conn.ssl.SSLSocketFactory#createSocket()
WITHOUT_CLASSIFICATION	Characters per second to emulate
WITHOUT_CLASSIFICATION	in the rare case the WSDL is protected and requires authentication, use the AuthManager to set the authorization. Basic and Digest authorization are pretty weak and don't provide real security.
WITHOUT_CLASSIFICATION	get the node
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	get the soap:operation
WITHOUT_CLASSIFICATION	there should only be one soap:operation node per operation
WITHOUT_CLASSIFICATION	first we iterate through the bindings
WITHOUT_CLASSIFICATION	now we iterate through the operations
WITHOUT_CLASSIFICATION	if the first child is soap:operation we add it to the array
WITHOUT_CLASSIFICATION	new WSDLHelper("http:services.bio.ifi.lmu.de:1046/prothesaurus/services/BiologicalNameService?wsdl");
WITHOUT_CLASSIFICATION	Remove quotes from charset name
WITHOUT_CLASSIFICATION	get ../ or ../../ etc.
WITHOUT_CLASSIFICATION	find index of path start
WITHOUT_CLASSIFICATION	absolute URL
WITHOUT_CLASSIFICATION	find path endIndex
WITHOUT_CLASSIFICATION	install new path
WITHOUT_CLASSIFICATION	This ensures tha HttpClient knows about the protocol
WITHOUT_CLASSIFICATION	Now allow the URL handling to work.
WITHOUT_CLASSIFICATION	not needed for HttpClient
WITHOUT_CLASSIFICATION	Check if we have it in the cache
WITHOUT_CLASSIFICATION	Perform the encoding
WITHOUT_CLASSIFICATION	LRUMap does not support generics currently
WITHOUT_CLASSIFICATION	We assume the argument value is encoded according to the HTTP spec, i.e. UTF-8
WITHOUT_CLASSIFICATION	We assume the name is always encoded according to spec
WITHOUT_CLASSIFICATION	The value is encoded in the specified encoding
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	skip expensive processing if it cannot apply $NON-NLS-1$
WITHOUT_CLASSIFICATION	Match /../[../] etc. $NON-NLS-1$
WITHOUT_CLASSIFICATION	document or context-relative URL like: '/path/to' OR '../path/to' OR '/path/to/../path/'
WITHOUT_CLASSIFICATION	path is between idx='pathStartIndex' (inclusive) and idx='pathEndIndex' (exclusive)
WITHOUT_CLASSIFICATION	append '/' if this isn't the last token or it is but the original path terminated w/ a '/'
WITHOUT_CLASSIFICATION	This can't happen (how should utf8 not be supported!?!), so just throw an Error:
WITHOUT_CLASSIFICATION	Encode according to the HTTP spec, i.e. UTF-8
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	indicate that an error occured
WITHOUT_CLASSIFICATION	we check the count to see if we have exceeded the number of lines to parse. There's no way to know where to stop in the file. Therefore we use break to escape the while loop when we've reached the count.
WITHOUT_CLASSIFICATION	this.READER = new BufferedReader(new FileReader(this.SOURCE)); parse(this.READER,el);
WITHOUT_CLASSIFICATION	we clean the line to get rid of extra stuff
WITHOUT_CLASSIFICATION	now we set request method
WITHOUT_CLASSIFICATION	increment the current count
WITHOUT_CLASSIFICATION	increment the current count
WITHOUT_CLASSIFICATION	we filter the line first, before we try to separate the URL into file and parameters.
WITHOUT_CLASSIFICATION	in the case when the filter is not set, we parse all the lines
WITHOUT_CLASSIFICATION	check the URL for "?" symbol
WITHOUT_CLASSIFICATION	now that we have stripped the file, we can parse the parameters
WITHOUT_CLASSIFICATION	if the string contains atleast one double quote and checkMethod is true, go ahead and tokenize the string.
WITHOUT_CLASSIFICATION	we return the original string
WITHOUT_CLASSIFICATION	convert the Parameters
WITHOUT_CLASSIFICATION	avoid possible NPE when trimming the name
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	indicate that an error occured
WITHOUT_CLASSIFICATION	read one line at a time using BufferedReader
WITHOUT_CLASSIFICATION	this.READER = new BufferedReader(new FileReader(this.SOURCE)); parse(this.READER,el);
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	we tokenize using double quotes. this means for tomcat we should have 3 tokens if there isn't any additional information in the logs
WITHOUT_CLASSIFICATION	if checkMethod on the token is true we tokenzie it using space and escape the while loop. Only the first matching token will be used
WITHOUT_CLASSIFICATION	there should only be one token that starts with slash character
WITHOUT_CLASSIFICATION	do nothing. it's naive, but since the utility is meant to parse access logs the formatting should be correct
WITHOUT_CLASSIFICATION	First have to release the cookie we were using so other threads stuck in wait can move on
WITHOUT_CLASSIFICATION	let notified threads move on and get lock on managersInUse
WITHOUT_CLASSIFICATION	here is the core routine to find appropriate cookie manager and check it's not being used. If used, wait until whoever's using it gives it up
WITHOUT_CLASSIFICATION	no implementation at this time, since we bypass the idea of having a console tool to generate test plans. Instead I decided to have a sampler that uses the generator and parser directly
WITHOUT_CLASSIFICATION	now we create the compiled pattern and add it to the arraylist
WITHOUT_CLASSIFICATION	we do a quick check to see if any filters are set. If not we just return false to be efficient.
WITHOUT_CLASSIFICATION	double check this logic make sure it makes sense
WITHOUT_CLASSIFICATION	inclusion filter assumes most of the files are not wanted, therefore usefile is set to false unless it matches.
WITHOUT_CLASSIFICATION	exclusion filter assumes most of the files are used, therefore usefile is set to true, unless it matches.
WITHOUT_CLASSIFICATION	Request headers column renderers
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Request headers column renderers
WITHOUT_CLASSIFICATION	Request headers column renderers
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	clear results table before filling
WITHOUT_CLASSIFICATION	Display with same order HTTP protocol
WITHOUT_CLASSIFICATION	can be null - e.g. if URL was invalid
WITHOUT_CLASSIFICATION	Display cookie in headers table (same location on http protocol)
WITHOUT_CLASSIFICATION	Parsed request headers
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#init()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#clearData()
WITHOUT_CLASSIFICATION	$NON-NLS-1$ SOAP request (generally) blank name $NON-NLS-1$
WITHOUT_CLASSIFICATION	blank name $NON-NLS-1$
WITHOUT_CLASSIFICATION	empty init $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Hint to background color on bottom tabs (grey, not blue)
WITHOUT_CLASSIFICATION	The object used for each row
WITHOUT_CLASSIFICATION	The object used for each row
WITHOUT_CLASSIFICATION	The object used for each row
WITHOUT_CLASSIFICATION	Key Value
WITHOUT_CLASSIFICATION	Key Value
WITHOUT_CLASSIFICATION	Key Value
WITHOUT_CLASSIFICATION	Set up the 1st table Result with empty headers
WITHOUT_CLASSIFICATION	Set up the 2nd table
WITHOUT_CLASSIFICATION	Set up the 3rd table
WITHOUT_CLASSIFICATION	Create the split pane
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Concatenate query post if exists
WITHOUT_CLASSIFICATION	add a message when no http sample $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	better ISO-8859-1 than UTF-8
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Find all the classes which implement the JavaSamplerClient interface.
WITHOUT_CLASSIFICATION	Remove the JavaConfig class from the list since it only implements the interface for error conditions.
WITHOUT_CLASSIFICATION	If a user has set parameters in one test, and then selects a different test which supports the same parameters, those parameters should have the same values that they did in the original test.
WITHOUT_CLASSIFICATION	Implements JMeterGuiComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGuiComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Entry tends to be ignored ...
WITHOUT_CLASSIFICATION	Default (can be overridden by the script)
WITHOUT_CLASSIFICATION	These are not useful yet, as have not found how to get updated values back mgr.declareBean("ResponseCode", "200", String.class); $NON-NLS-1$ mgr.declareBean("ResponseMessage", "OK", String.class); $NON-NLS-1$ mgr.declareBean("IsSuccess", Boolean.TRUE, Boolean.class); $NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.AbstractJMeterGuiComponent#clearGui()
WITHOUT_CLASSIFICATION	Overrides AbstractJMeterGuiComponent.configure(TestElement)
WITHOUT_CLASSIFICATION	N.B. some engines (e.g. Javascript) cannot handle certain declareBean() calls after the engine has been initialised, so create the engine last
WITHOUT_CLASSIFICATION	Catch evaluation errors
WITHOUT_CLASSIFICATION	reset the bsh.Interpreter before each execution
WITHOUT_CLASSIFICATION	script file name (if present)
WITHOUT_CLASSIFICATION	parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	script area
WITHOUT_CLASSIFICATION	Don't let the input field shrink too much
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Entry tends to be ignored ...
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JavaSamplerClient.setupTest(JavaSamplerContext)
WITHOUT_CLASSIFICATION	Implements JavaSamplerClient.teardownTest(JavaSamplerContext)
WITHOUT_CLASSIFICATION	Implements JavaSamplerClient.getDefaultParameters()
WITHOUT_CLASSIFICATION	Ensure that the required class variables are cloned, as this is not currently done by the super-implementation.
WITHOUT_CLASSIFICATION	Allow Sampler access to test element name
WITHOUT_CLASSIFICATION	Only set the default label if it has not been set
WITHOUT_CLASSIFICATION	failed to initialise the class
WITHOUT_CLASSIFICATION	but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	No point continuing Mainly for bsh.EvalError
WITHOUT_CLASSIFICATION	Implements TestStateListener.testStarted()
WITHOUT_CLASSIFICATION	Implements TestStateListener.testStarted(String)
WITHOUT_CLASSIFICATION	Implements TestStateListener.testEnded(String)
WITHOUT_CLASSIFICATION	Implementation notes: All of the methods in this class are currently read-only. If update methods are included in the future, they should be defined so that a single instance of JavaSamplerContext can be associated with each thread. Therefore, no synchronization should be needed. The same instance should be used for the call to setupTest, all calls to runTest, and the call to teardownTest.
WITHOUT_CLASSIFICATION	TestStateListener implementation
WITHOUT_CLASSIFICATION	Set default values $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	log.info(getLabel()+" "+getFilename());
WITHOUT_CLASSIFICATION	assume text output - script can override if necessary
WITHOUT_CLASSIFICATION	Set response data
WITHOUT_CLASSIFICATION	script can also use setResponseData() so long as it returns null
WITHOUT_CLASSIFICATION	Set if we were successful or not
WITHOUT_CLASSIFICATION	private static final String LABEL_DEFAULT = "JavaTest";
WITHOUT_CLASSIFICATION	Utility method to set up all the values
WITHOUT_CLASSIFICATION	default to name of element
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Record sample start time.
WITHOUT_CLASSIFICATION	Record sample start time.
WITHOUT_CLASSIFICATION	Generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	Generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	Execute the sample. In this case sleep for the specified time, if any
WITHOUT_CLASSIFICATION	Record end time and populate the results.
WITHOUT_CLASSIFICATION	The name of the sampler
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	Only do the calculation if it is needed
WITHOUT_CLASSIFICATION	Execute the sample. In this case sleep for the specified time.
WITHOUT_CLASSIFICATION	String used to indicate a null value
WITHOUT_CLASSIFICATION	key: name (lowercase) from java.sql.Types; entry: corresponding int value
WITHOUT_CLASSIFICATION	read-only after class init
WITHOUT_CLASSIFICATION	based on e291. Getting the Name of a JDBC Type from javaalmanac.com http:javaalmanac.com/egs/java.sql/JdbcInt2Str.html
WITHOUT_CLASSIFICATION	Get all fields in java.sql.Types and store the corresponding int values
WITHOUT_CLASSIFICATION	Query types (used to communicate with GUI) N.B. These must not be changed, as they are used in the JMX files $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Based on query return value, get results
WITHOUT_CLASSIFICATION	User provided incorrect query type
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	As a connection is held by only one thread, we cannot already have a preparedStatementMap put by another thread
WITHOUT_CLASSIFICATION	Save the value in the variable if present
WITHOUT_CLASSIFICATION	Save the value in the variable if present
WITHOUT_CLASSIFICATION	in case
WITHOUT_CLASSIFICATION	can't have an output parameter type null
WITHOUT_CLASSIFICATION	PreparedStatementMap is associated to one connection so 2 threads cannot use the same PreparedStatement map at the same time
WITHOUT_CLASSIFICATION	thrown by Derby JDBC (at least) if there are no "?" markers in statement
WITHOUT_CLASSIFICATION	save the current count
WITHOUT_CLASSIFICATION	LRUMap is not generic
WITHOUT_CLASSIFICATION	i starts at 1
WITHOUT_CLASSIFICATION	The datasource is set up by testStarted and cleared by testEnded. These are called from different threads, so access must be synchronized. The same instance is called in each case.
WITHOUT_CLASSIFICATION	Remove any additional values from previous sample
WITHOUT_CLASSIFICATION	call to TestBeanHelper.prepare() is intentional
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Get the previous count
WITHOUT_CLASSIFICATION	Keep a record of the pre-thread pools so that they can be disposed of at the end of a test
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	i.e. if we want per thread pooling pool will be created later
WITHOUT_CLASSIFICATION	Utility routine to get the connection from the pool. Purpose: - allows JDBCSampler to be entirely independent of the pooling classes - allows the pool storage mechanism to be changed if necessary
WITHOUT_CLASSIFICATION	Set up the DataSource - maxPool is a parameter, so the same code can also be used for setting up the per-thread pools.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	log is required to ensure errors are available
WITHOUT_CLASSIFICATION	used to hold per-thread singleton connection pools
WITHOUT_CLASSIFICATION	Wrapper class to allow getConnection() to be implemented for both shared and per-thread pools.
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	i.e. shared pool
WITHOUT_CLASSIFICATION	make sure setting the new isolation mode is done in an auto committed transaction
WITHOUT_CLASSIFICATION	Will use default isolation
WITHOUT_CLASSIFICATION	Assume we will be successful
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	use latency to measure connection time
WITHOUT_CLASSIFICATION	The environment is supposed to use String keys only
WITHOUT_CLASSIFICATION	WebsphereMQ does not allow corr. id. to be set using setStringProperty() $NON-NLS-1$
WITHOUT_CLASSIFICATION	We use a LinkedBlockingQueue (rather than a ConcurrentLinkedQueue) because it has a poll-with-wait method that avoids the need to use a polling loop.
WITHOUT_CLASSIFICATION	Using onMessage Listener
WITHOUT_CLASSIFICATION	Allow for short/negative times
WITHOUT_CLASSIFICATION	Allow for short/negative times
WITHOUT_CLASSIFICATION	called from threadFinished() thread
WITHOUT_CLASSIFICATION	GuardedBy("this")
WITHOUT_CLASSIFICATION	GuardedBy("this")
WITHOUT_CLASSIFICATION	There was an object in map, destroy the temporary and return one in map (oldCtx)
WITHOUT_CLASSIFICATION	else No object in Map, ctx is the one
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ --
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	renamed from clear
WITHOUT_CLASSIFICATION	(TestElement) el.getProperty(JMSSampler.JMS_PROPERTIES).getObjectValue());
WITHOUT_CLASSIFICATION	(TestElement) el.getProperty(JMSSampler.JNDI_PROPERTIES).getObjectValue());
WITHOUT_CLASSIFICATION	Button group resources
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Button group resources
WITHOUT_CLASSIFICATION	These are the names of properties used to define the labels $NON-NLS-1$
WITHOUT_CLASSIFICATION	These are the names of properties used to define the labels $NON-NLS-1$
WITHOUT_CLASSIFICATION	Button group resources when Bytes Message is selected
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Button group resources
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Button group resources
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	++ These names are used in the JMX files, and must not be changed
WITHOUT_CLASSIFICATION	Cache for file. Only used by sample() in a single thread
WITHOUT_CLASSIFICATION	Cache for bytes-message, only used when parsing from a file
WITHOUT_CLASSIFICATION	Allow shorthand names
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Assume it will fail ditto $NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	Not found
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	in the case the test uses a file, we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	in the case the test uses a file, we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	Allow for the old JMX file which used the local language string
WITHOUT_CLASSIFICATION	------------- get/set properties ----------------------
WITHOUT_CLASSIFICATION	These static variables are only used to convert existing files
WITHOUT_CLASSIFICATION	will be the 3rd option, which is not checked specifically
WITHOUT_CLASSIFICATION	Note: originally the code did use the ClientPool to "share" subscribers, however since the key was "this" and each sampler is unique - nothing was actually shared.
WITHOUT_CLASSIFICATION	Default wait (ms) for a message if timeouts are not enabled This is the maximum time the sampler can be blocked.
WITHOUT_CLASSIFICATION	No need to synch/ - only used by sampler and ClientPool (which does its own synch)
WITHOUT_CLASSIFICATION	This will be null if initialization succeeds.
WITHOUT_CLASSIFICATION	If true, start/stop subscriber for each sample
WITHOUT_CLASSIFICATION	Don't change the string, as it is used in JMX files $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	run threadStarted only if Destination setup on each sample
WITHOUT_CLASSIFICATION	If so, we need to start collection here
WITHOUT_CLASSIFICATION	run threadFinished only if Destination setup on each sample (stop Listen queue)
WITHOUT_CLASSIFICATION	MapNames are Strings
WITHOUT_CLASSIFICATION	Disabled thread start if listen on sample choice
WITHOUT_CLASSIFICATION	Don't start yet if stop between samples
WITHOUT_CLASSIFICATION	listen on sample
WITHOUT_CLASSIFICATION	Can be null if init fails
WITHOUT_CLASSIFICATION	listen on sample
WITHOUT_CLASSIFICATION	so we break the loops in SampleWithListener and SampleWithReceive
WITHOUT_CLASSIFICATION	Assume failure
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	------------- get/set properties ----------------------
WITHOUT_CLASSIFICATION	++ These are JMX names, and must not be changed $NON-NLS-1$
WITHOUT_CLASSIFICATION	Convert the old test plan entry (which is the language dependent string) to the resource name
WITHOUT_CLASSIFICATION	This was the old value that was checked for $NON-NLS-1$
WITHOUT_CLASSIFICATION	Default to be applied
WITHOUT_CLASSIFICATION	++ These are JMX file attribute names and must not be changed $NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. Cannot change value, as that is used in JMX files $NON-NLS-1$
WITHOUT_CLASSIFICATION	Is Destination setup static? else dynamic $NON-NLS-1$ default to maintain compatibility
WITHOUT_CLASSIFICATION	-- End of JMX file attribute names
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Member variables
WITHOUT_CLASSIFICATION	These constants are used in the JMX files, and so must not be changed
WITHOUT_CLASSIFICATION	msgId not available until after send() is called Note: there is only one admin object which is shared between all threads interlock with Receiver
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	This used to be request.wait(timeout_ms), where 0 means forever However 0 means return immediately for the latch
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. These entry indexes MUST agree with the SearchControls SCOPE_LEVELS, i.e. javax.naming.directory.SearchControls.OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE These have the values 0,1,2 so can be used as indexes in the array as well as the value for the search itself. N.B. Although the strings are used to set and get the options, language change does not currently cause a problem, because that always saves the current settings first, and then recreates all the GUI classes.
WITHOUT_CLASSIFICATION	Names for the cards $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	e.g unbind
WITHOUT_CLASSIFICATION	Take note of when buttong are changed so can change panel
WITHOUT_CLASSIFICATION	private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Only contains LDAPArgument entries
WITHOUT_CLASSIFICATION	Resize the table columns to appropriate widths. @param _table the table to resize columns for private void sizeColumns(JTable _table) { }
WITHOUT_CLASSIFICATION	sizeColumns(table);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	Table still contains one or more rows, so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	MAIN PANEL
WITHOUT_CLASSIFICATION	Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	If a table cell is being edited, we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Set if we were successful or not
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	count limit time limit attributes (null = all) return object ? dereference links?
WITHOUT_CLASSIFICATION	The following strings are used in the test plan, and the values must not be changed if test plans are to be upwardly compatible.
WITHOUT_CLASSIFICATION	For In build test case using this counter create the new entry in the server
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	replace (update) attribute $NON-NLS-1$ $NON-NLS-2$ add mobile phone number attribute $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	These are values for the TEST attribute above $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ end of TEST values
WITHOUT_CLASSIFICATION	the createTest() method creates an extra context which needs to be closed
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	log.warn("DEBUG",ex); e.g. javax.naming.SizeLimitExceededException: [LDAP: error code 4 - Sizelimit Exceeded]; remaining name '' 123456789012345678901 TODO: tidy this up
WITHOUT_CLASSIFICATION	Write out search results in a stable order (including order of all subelements which might be reordered like attributes and their values) so that simple textual comparison can be done, unless the number of results exceeds {@link #MAX_SORTED_RESULTS} in which case just stream the results out without sorting.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	read all sortedResults into memory so we can guarantee ordering
WITHOUT_CLASSIFICATION	must be done prior to sorting
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	show what we did manage to retrieve
WITHOUT_CLASSIFICATION	If there's anything left ...
WITHOUT_CLASSIFICATION	assume it's senstive data
WITHOUT_CLASSIFICATION	Ensure any remaining contexts are closed
WITHOUT_CLASSIFICATION	Parent folder (or single message file)
WITHOUT_CLASSIFICATION	== ServerName from mail sampler
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Perform the sampling
WITHOUT_CLASSIFICATION	Start timing
WITHOUT_CLASSIFICATION	-
WITHOUT_CLASSIFICATION	RFC 822 uses ascii per default
WITHOUT_CLASSIFICATION	Use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	special value
WITHOUT_CLASSIFICATION	Did sample succeed?
WITHOUT_CLASSIFICATION	Create empty properties
WITHOUT_CLASSIFICATION	Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	Get session
WITHOUT_CLASSIFICATION	Get the store
WITHOUT_CLASSIFICATION	Get folder
WITHOUT_CLASSIFICATION	Get directory
WITHOUT_CLASSIFICATION	Don't save headers - they are already in the raw message
WITHOUT_CLASSIFICATION	Save raw message
WITHOUT_CLASSIFICATION	Javadoc for the API says this is OK
WITHOUT_CLASSIFICATION	Avoid double-call if addSubResult was called.
WITHOUT_CLASSIFICATION	Close connection
WITHOUT_CLASSIFICATION	not been set by any child samples
WITHOUT_CLASSIFICATION	Gui Components
WITHOUT_CLASSIFICATION	Labels - don't make these static, else language change will not work
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	Helper method to set up the GUI screen
WITHOUT_CLASSIFICATION	Store the content-type RFC 822 uses ascii per default Parse the content-type
WITHOUT_CLASSIFICATION	No need to log normally, as we set the status $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ may be null
WITHOUT_CLASSIFICATION	$NON-NLS-1$ may be null
WITHOUT_CLASSIFICATION	Used to separate attachment file names in JMX fields - do not change!
WITHOUT_CLASSIFICATION	-JMX file attribute names
WITHOUT_CLASSIFICATION	Process address lists
WITHOUT_CLASSIFICATION	needed for measuring sending time
WITHOUT_CLASSIFICATION	calculate message size
WITHOUT_CLASSIFICATION	Set up the sample result details
WITHOUT_CLASSIFICATION	Perform the sampling
WITHOUT_CLASSIFICATION	username / password incorrect
WITHOUT_CLASSIFICATION	SSL not supported, startTLS not supported, other messagingException
WITHOUT_CLASSIFICATION	general exception
WITHOUT_CLASSIFICATION	process the sampler result
WITHOUT_CLASSIFICATION	throws ME
WITHOUT_CLASSIFICATION	throws IOE, ME
WITHOUT_CLASSIFICATION	throws IOE, ME
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	part is only needed if we don't send an .eml-file
WITHOUT_CLASSIFICATION	getAllHeaders() is not yet genericised throws ME
WITHOUT_CLASSIFICATION	throws ME throws IOE, ME
WITHOUT_CLASSIFICATION	API not yet generic throws ME
WITHOUT_CLASSIFICATION	we have at least one potential address
WITHOUT_CLASSIFICATION	local vars
WITHOUT_CLASSIFICATION	ensure correctly set on initial display ensure correctly set on initial display
WITHOUT_CLASSIFICATION	Server Settings
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	E-Mail Settings
WITHOUT_CLASSIFICATION	Auth Settings
WITHOUT_CLASSIFICATION	Security Settings
WITHOUT_CLASSIFICATION	(non-Javadoc) Message Settings
WITHOUT_CLASSIFICATION	Add the header panel
WITHOUT_CLASSIFICATION	Additional Settings
WITHOUT_CLASSIFICATION	tfMailFrom.setEnabled(true); tfMailTo.setEnabled(true); tfMailToCC.setEnabled(true); tfMailToBCC.setEnabled(true); tfSubject.setEnabled(true);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	Standard setup
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	local vars
WITHOUT_CLASSIFICATION	Add the standard title
WITHOUT_CLASSIFICATION	must follow the checkbox setting
WITHOUT_CLASSIFICATION	not compatible
WITHOUT_CLASSIFICATION	not compatible must follow the checkbox setting
WITHOUT_CLASSIFICATION	ensure correctly set on initial display
WITHOUT_CLASSIFICATION	Might be NullProperty
WITHOUT_CLASSIFICATION	case we are measuring real time of spedition
WITHOUT_CLASSIFICATION	set properties using JAF
WITHOUT_CLASSIFICATION	handle body and attachments
WITHOUT_CLASSIFICATION	i.e. mailBody is empty
WITHOUT_CLASSIFICATION	set from field and subject
WITHOUT_CLASSIFICATION	synchronousMode==true
WITHOUT_CLASSIFICATION	listener cannot be null here
WITHOUT_CLASSIFICATION	OK, it has been supplied
WITHOUT_CLASSIFICATION	Empty arrays are immutable
WITHOUT_CLASSIFICATION	Implements JMeterGuiComponent.createTestElement()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	http:api.mongodb.org/java/2.7.2/com/mongodb/Mongo.html
WITHOUT_CLASSIFICATION	http:api.mongodb.org/java/2.7.2/com/mongodb/Mongo.html
WITHOUT_CLASSIFICATION	http:api.mongodb.org/java/2.7.2/com/mongodb/MongoOptions.html/
WITHOUT_CLASSIFICATION	http:api.mongodb.org/java/2.7.2/com/mongodb/MongoOptions.html/
WITHOUT_CLASSIFICATION	Mongo is Thread Safe
WITHOUT_CLASSIFICATION	there is no harm in trying to clear up
WITHOUT_CLASSIFICATION	Helper
WITHOUT_CLASSIFICATION	+ JMX names, do not change their values
WITHOUT_CLASSIFICATION	- JMX names
WITHOUT_CLASSIFICATION	default charset is deliberate here
WITHOUT_CLASSIFICATION	N.B. this will be a config element, so we cannot use the getXXX() methods
WITHOUT_CLASSIFICATION	Default to original behaviour, i.e. re-use connection
WITHOUT_CLASSIFICATION	N.B. this will be a config element, so we cannot use the setXXX() methods
WITHOUT_CLASSIFICATION	Overrides AbstractJMeterGuiComponent.configure(TestElement)
WITHOUT_CLASSIFICATION	element.setProperty(TCPSampler.FILENAME, filename.getText());
WITHOUT_CLASSIFICATION	element.setProperty(TCPSampler.NODELAY, setNoDelay.isSelected());
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Don't use default for saving tristates element.setProperty(TCPSampler.CLOSE_CONNECTION, closeConnection.isSelected(), TCPSampler.CLOSE_CONNECTION_DEFAULT);
WITHOUT_CLASSIFICATION	5 columns size
WITHOUT_CLASSIFICATION	3 columns size
WITHOUT_CLASSIFICATION	mainPanel.add(createFilenamePanel());
WITHOUT_CLASSIFICATION	-- JMX file constants - do not change
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ key for HashMap
WITHOUT_CLASSIFICATION	$NON-NLS-1$ key for HashMap
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Entry tends to be ignored ...
WITHOUT_CLASSIFICATION	Set if we were successful or not
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	++ JMX file constants - do not change $NON-NLS-1$
WITHOUT_CLASSIFICATION	If set, this is the regex that is used to extract the status from the response NOT implemented yet private static final String STATUS_REGEX = JMeterUtils.getPropDefault("tcp.status.regex","");
WITHOUT_CLASSIFICATION	Are we processing the first sample?
WITHOUT_CLASSIFICATION	used for handling interrupt
WITHOUT_CLASSIFICATION	Not in cache, so create new one and cache it
WITHOUT_CLASSIFICATION	Do stuff we cannot do as part of threadStarted()
WITHOUT_CLASSIFICATION	Use the test element name for the label
WITHOUT_CLASSIFICATION	Calculate response time
WITHOUT_CLASSIFICATION	Reset the status code if the message contains one
WITHOUT_CLASSIFICATION	Cannot do this as part of threadStarted() because the Config elements have not been processed.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	fetch in case gets nulled later
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	the data implementation
WITHOUT_CLASSIFICATION	Preserve sign on first byte
WITHOUT_CLASSIFICATION	do we need to close byte array (or flush it?)
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Process command line property definitions (can occur multiple times)
WITHOUT_CLASSIFICATION	private ImageIcon runningIcon = JMeterUtils.getImage("thread.enabled.gif");
WITHOUT_CLASSIFICATION	private Set hosts = new HashSet();
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.createTestElement()
WITHOUT_CLASSIFICATION	Implements JMeterGUIComponent.modifyTestElement(TestElement)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	Set it
WITHOUT_CLASSIFICATION	Set it
WITHOUT_CLASSIFICATION	Reset it
WITHOUT_CLASSIFICATION	Reset it
WITHOUT_CLASSIFICATION	Set category
WITHOUT_CLASSIFICATION	Set root level
WITHOUT_CLASSIFICATION	The default title for the Menu bar
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Probably a missing jar
WITHOUT_CLASSIFICATION	Programming error: bail out.
WITHOUT_CLASSIFICATION	Programming error: bail out.
WITHOUT_CLASSIFICATION	$NON-NSL-1$
WITHOUT_CLASSIFICATION	editMenu.setEnabled(false);
WITHOUT_CLASSIFICATION	If we are enabling the Edit-->Remove menu item, then we also need to enable the Edit menu. The Edit menu may already be enabled, but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	file New operation may set to null, so just return app name
WITHOUT_CLASSIFICATION	FIrst make sure we save the content of the current GUI (since we will flush it away):
WITHOUT_CLASSIFICATION	Forget about all GUIs we've created so far: we'll need to re-created them all!
WITHOUT_CLASSIFICATION	BeanInfo objects also contain locale-sensitive data -- flush them away:
WITHOUT_CLASSIFICATION	Now put the current GUI in place. [This code was copied from the EditCommand action -- we can't just trigger the action because that would populate the current node with the contents of the new GUI -- which is empty.] Fetch once Probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	JMenu reportMenu; JMenuItem analyze;
WITHOUT_CLASSIFICATION	If the Add menu already exists, remove it.
WITHOUT_CLASSIFICATION	Insert the Add menu as the first menu item in the Edit menu.
WITHOUT_CLASSIFICATION	There was a NPE being thrown without the null check here.. JKB
WITHOUT_CLASSIFICATION	If we are enabling the Edit-->Add menu item, then we also need to enable the Edit menu. The Edit menu may already be enabled, but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	HELP MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	OPTIONS MENU $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Strings used to set up and process actions in this menu The strings need to agree with the those in the Action routines
WITHOUT_CLASSIFICATION	RUN MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	EDIT MENU $NON-NLS-1$ From the Java Look and Feel Guidelines: If all items in a menu are disabled, then disable the menu. Makes sense.
WITHOUT_CLASSIFICATION	FILE MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set default SAVE menu item to disabled since the default node that is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ file_merge.setAccelerator( KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_MASK));
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	MENU_ADD_xxx - controls which items are in the ADD menu MENU_PARENT_xxx - controls which items are in the Insert Parent menu
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	Don't try to instantiate these
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	JFileChooser jfc = null;
WITHOUT_CLASSIFICATION	private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	same code as for default JMeter class
WITHOUT_CLASSIFICATION	Avoid NPE in resetPage()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#createTestElement()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#modifyTestElement(org.apache.jmeter.testelement.TestElement)
WITHOUT_CLASSIFICATION	don't change name if merging
WITHOUT_CLASSIFICATION	Allow for missing optional jars
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	Clear the name of the test plan file
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	can't be null - this is checked by canAddTo
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Save parent node for later
WITHOUT_CLASSIFICATION	So elements can only be added as children
WITHOUT_CLASSIFICATION	can't be null - this is checked by canAddTo
WITHOUT_CLASSIFICATION	log.info("classname:: " + strClassName);
WITHOUT_CLASSIFICATION	Match all
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	special handling
WITHOUT_CLASSIFICATION	convertTree(tree);
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	Not implemented: public static final String SAVE = "save_as"; Not implemented: public static final String SAVE_ALL = "save_all"; Not implemented: public static final String SAVE_TO_PREVIOUS = "save";
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	get the JComponent from the visualizer
WITHOUT_CLASSIFICATION	Get the string given from the choose and check the file extension.
WITHOUT_CLASSIFICATION	i.e. no disabled icon found
WITHOUT_CLASSIFICATION	Must therefore set the enabled icon so there is at least some icon
WITHOUT_CLASSIFICATION	put the gui object back to the way it was.
WITHOUT_CLASSIFICATION	This check the state of the TestElement and if returns false it disable the loaded node
WITHOUT_CLASSIFICATION	Container endWindow; JPopupMenu pop;
WITHOUT_CLASSIFICATION	endWindow = window;
WITHOUT_CLASSIFICATION	Get the Main Frame.
WITHOUT_CLASSIFICATION	Close any Main Menu that is open
WITHOUT_CLASSIFICATION	transient private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	boolean enabled = true;
WITHOUT_CLASSIFICATION	If icon has not been defined, then use GUI_CLASS property
WITHOUT_CLASSIFICATION	mkdir() returns false if the directory was not created; could be because it exists
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	There's only 1 test plan, so can cache the mode here
WITHOUT_CLASSIFICATION	private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	if the directory already exists and is a directory, we just renamed to "archive.date"
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	return the pagesize divided by 1024 to get kilobytes
WITHOUT_CLASSIFICATION	we add the entry
WITHOUT_CLASSIFICATION	we should make this configurable eventually
WITHOUT_CLASSIFICATION	private static ReportPlan plan;
WITHOUT_CLASSIFICATION	now add the samples to the HashMap
WITHOUT_CLASSIFICATION	Iterator itr = data.iterator();
WITHOUT_CLASSIFICATION	duplicates
WITHOUT_CLASSIFICATION	incompatable (blee/all)
WITHOUT_CLASSIFICATION	Check that optional args work woth long options
WITHOUT_CLASSIFICATION	"-T3","-a"
WITHOUT_CLASSIFICATION	"-T3","-a"
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	result.setResponseData - not set
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	"-T","-a"
WITHOUT_CLASSIFICATION	"-Dstupid=idiot","are","--all","--all","here"
WITHOUT_CLASSIFICATION	Check delimiters are allowed
WITHOUT_CLASSIFICATION	Check delimiters are allowed
WITHOUT_CLASSIFICATION	Should not detect trailing option
WITHOUT_CLASSIFICATION	should detect trailing option
WITHOUT_CLASSIFICATION	"-Dstupid=idiot","are","--all","here"
WITHOUT_CLASSIFICATION	Check "-" is allowed in arg2
WITHOUT_CLASSIFICATION	"-Dstupid="
WITHOUT_CLASSIFICATION	"-Dstupid=","-c"
WITHOUT_CLASSIFICATION	"-Dstupid","-c"
WITHOUT_CLASSIFICATION	Canonical form
WITHOUT_CLASSIFICATION	Test optional arguments
WITHOUT_CLASSIFICATION	OK should treat B as separate Should have no arg
WITHOUT_CLASSIFICATION	Convert between eclipse jar name and build.properties name
WITHOUT_CLASSIFICATION	remove docs-only jars
WITHOUT_CLASSIFICATION	assume default charset is OK here <classpathentry kind="lib" path="lib/geronimo-jms_1.1_spec-1.1.1.jar"/> <classpathentry kind="lib" path="lib/activation-1.1.1.jar"/> <classpathentry kind="lib" path="lib/jtidy-r938.jar"/>
WITHOUT_CLASSIFICATION	special handling
WITHOUT_CLASSIFICATION	This would be done by the run command
WITHOUT_CLASSIFICATION	testLog.setPriority(org.apache.log.Priority.DEBUG);
WITHOUT_CLASSIFICATION	Not present
WITHOUT_CLASSIFICATION	wrong
WITHOUT_CLASSIFICATION	Wrong
WITHOUT_CLASSIFICATION	LoggingManager.setPriority("DEBUG","jmeter");
WITHOUT_CLASSIFICATION	Restart file
WITHOUT_CLASSIFICATION	Check random number
WITHOUT_CLASSIFICATION	This would be done by the run command
WITHOUT_CLASSIFICATION	Test CSV file with a header line
WITHOUT_CLASSIFICATION	Test CSV file with a header line
WITHOUT_CLASSIFICATION	Test CSV file with a header line and recycle is true
WITHOUT_CLASSIFICATION	read 1st line read 5 lines + restart to file begin line 2 line 3 line 4 line 5 return to 2nd line (first line is names)
WITHOUT_CLASSIFICATION	needs to be initialised
WITHOUT_CLASSIFICATION	etc...
WITHOUT_CLASSIFICATION	GenericController sub_1 = new GenericController(); sub_1.addTestElement(new IfController("3==3")); controller.addTestElement(sub_1); controller.addTestElement(new IfController("false==true"));
WITHOUT_CLASSIFICATION	IfController controller = new IfController("12==12"); controller.initialize();
WITHOUT_CLASSIFICATION	Should not enter the loop
WITHOUT_CLASSIFICATION	Test with SimpleController as first item
WITHOUT_CLASSIFICATION	Should not enter the loop next time
WITHOUT_CLASSIFICATION	Should not enter the loop next time But should continue to the end of the loop
WITHOUT_CLASSIFICATION	Get next sample and its name
WITHOUT_CLASSIFICATION	Match by name
WITHOUT_CLASSIFICATION	should not run any children should match the default entry
WITHOUT_CLASSIFICATION	Selection controller with two sub-controllers, but each has only 1 child
WITHOUT_CLASSIFICATION	Controller + Before + Switch (cond) + + zero + + Controller sub_1 + + + one + + two + + Controller sub_2 + + + three + After
WITHOUT_CLASSIFICATION	Test: Before Selection Controller - zero (default) - simple controller 1 - - one - - two - simple controller 2 - - three - - four - five - six After cond = Switch condition exp[] = expected results
WITHOUT_CLASSIFICATION	N.B. Requires ApacheJMeter_functions.jar to be on the classpath, otherwise the function cannot be resolved.
WITHOUT_CLASSIFICATION	While (blank), previous sample OK - should loop until false
WITHOUT_CLASSIFICATION	log.info("testBlankPrevOK");
WITHOUT_CLASSIFICATION	While (LAST), previous sample OK - should loop until false
WITHOUT_CLASSIFICATION	While (LAST), previous sample OK - should loop until false
WITHOUT_CLASSIFICATION	log.info("testLASTPrevOK");
WITHOUT_CLASSIFICATION	Dummy for testing functions
WITHOUT_CLASSIFICATION	log.info("testOtherPrevOK");
WITHOUT_CLASSIFICATION	While (blank), previous sample failed - should run once
WITHOUT_CLASSIFICATION	log.info("testBlankPrevFailed");
WITHOUT_CLASSIFICATION	Run entire test again
WITHOUT_CLASSIFICATION	Should not enter the loop
WITHOUT_CLASSIFICATION	While LAST, previous sample failed - should not run
WITHOUT_CLASSIFICATION	log.info("testLastPrevFailed");
WITHOUT_CLASSIFICATION	While False, previous sample failed - should not run
WITHOUT_CLASSIFICATION	log.info("testFalsePrevFailed");
WITHOUT_CLASSIFICATION	Should behave the same for blank and LAST because success on input
WITHOUT_CLASSIFICATION	Should be OK
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	Set up the test plan
WITHOUT_CLASSIFICATION	OnlyOnce samples
WITHOUT_CLASSIFICATION	Outer sample
WITHOUT_CLASSIFICATION	Inner loop
WITHOUT_CLASSIFICATION	Sample in inner loop
WITHOUT_CLASSIFICATION	Compute the expected sample names
WITHOUT_CLASSIFICATION	Outer only once + ("three" + ("four" + "five" + "six" + "seven") innerLoopCount) outerLoopCount;
WITHOUT_CLASSIFICATION	The only once samples
WITHOUT_CLASSIFICATION	The outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	Execute the test pan
WITHOUT_CLASSIFICATION	Outer sample
WITHOUT_CLASSIFICATION	Inner loop
WITHOUT_CLASSIFICATION	Inner loop
WITHOUT_CLASSIFICATION	Sample in inner loop
WITHOUT_CLASSIFICATION	Compute the expected sample names
WITHOUT_CLASSIFICATION	Compute the expected sample names
WITHOUT_CLASSIFICATION	The only once samples
WITHOUT_CLASSIFICATION	The only once samples
WITHOUT_CLASSIFICATION	The outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	Execute the test pan
WITHOUT_CLASSIFICATION	Execute the test pan
WITHOUT_CLASSIFICATION	Test plan with OnlyOnceController inside inner loop Set up the test plan
WITHOUT_CLASSIFICATION	OnlyOnce inside inner loop
WITHOUT_CLASSIFICATION	Outer only once + ("three" + "only once five and six" + ("four" + "seven") innerLoopCount) outerLoopCount;
WITHOUT_CLASSIFICATION	Test skipped for now as behaviour is not yet properly defined
WITHOUT_CLASSIFICATION	InterleaveController in inner loop
WITHOUT_CLASSIFICATION	OnlyOnce inside InterleaveController
WITHOUT_CLASSIFICATION	Samples inside InterleaveController
WITHOUT_CLASSIFICATION	Sample in inner loop
WITHOUT_CLASSIFICATION	Outer only once + ("three" + "only once five and six" + "eight in interleave only once" + ("four" + "interleave" + "eleven") innerLoopCount) outerLoopCount;
WITHOUT_CLASSIFICATION	Escaped dollar commma and backslash with no variable reference
WITHOUT_CLASSIFICATION	Escaped dollar commma and backslash with variable reference
WITHOUT_CLASSIFICATION	N.B. Backslashes are removed before dollar, comma and backslash
WITHOUT_CLASSIFICATION	N.B. Backslashes are removed before dollar, comma and backslash
WITHOUT_CLASSIFICATION	Escaped dollar commma and backslash with missing variable reference
WITHOUT_CLASSIFICATION	Escaped dollar commma and backslash with missing function reference
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getProperty("domain"));
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getProperty("domain"));
WITHOUT_CLASSIFICATION	Set up the non-wild variables
WITHOUT_CLASSIFICATION	Should not clear this?
WITHOUT_CLASSIFICATION	Check when match fails
WITHOUT_CLASSIFICATION	extractor.setDefaultValue("default");
WITHOUT_CLASSIFICATION	Now rerun with match fail
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	This would be done by the run command
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	Has child, but child is empty
WITHOUT_CLASSIFICATION	Has no child
WITHOUT_CLASSIFICATION	No text
WITHOUT_CLASSIFICATION	Test fragment
WITHOUT_CLASSIFICATION	Now get its text
WITHOUT_CLASSIFICATION	No text, but using fragment mode
WITHOUT_CLASSIFICATION	There aren't any
WITHOUT_CLASSIFICATION	Try to get data from subresult Needed for addSubResult()
WITHOUT_CLASSIFICATION	Get data from both
WITHOUT_CLASSIFICATION	get data from child
WITHOUT_CLASSIFICATION	Create the StringFromFile function and set its parameters.
WITHOUT_CLASSIFICATION	Create the SplitFile function and set its parameters.
WITHOUT_CLASSIFICATION	Create the BeanShell function and set its parameters.
WITHOUT_CLASSIFICATION	Reset files
WITHOUT_CLASSIFICATION	Check some initial variables
WITHOUT_CLASSIFICATION	Check source works
WITHOUT_CLASSIFICATION	Check persistence
WITHOUT_CLASSIFICATION	Check that bsh has read the file
WITHOUT_CLASSIFICATION	Restarts
WITHOUT_CLASSIFICATION	Test that only loops twice
WITHOUT_CLASSIFICATION	Function objects to be tested
WITHOUT_CLASSIFICATION	Helper class used to implement co-routine between two threads
WITHOUT_CLASSIFICATION	Allow other thread to start
WITHOUT_CLASSIFICATION	open as A
WITHOUT_CLASSIFICATION	open as B
WITHOUT_CLASSIFICATION	col2 line 1
WITHOUT_CLASSIFICATION	A next
WITHOUT_CLASSIFICATION	col 1, line 2, A
WITHOUT_CLASSIFICATION	B next
WITHOUT_CLASSIFICATION	col2, line 2, B
WITHOUT_CLASSIFICATION	XPathFileContainer tests
WITHOUT_CLASSIFICATION	assertEquals("Expected 4 lines",4,f.size());
WITHOUT_CLASSIFICATION	The suite() method creates separate test suites for each of the types of test. The suitexxx() methods create a list of items to be tested, and create a new test instance for each. Each test type has its own constructor, which saves the item to be tested Note that the suite() method must be static, and the methods to run the tests must be instance methods so that they can pick up the item value which was saved by the constructor.
WITHOUT_CLASSIFICATION	Use same XPath for both threads
WITHOUT_CLASSIFICATION	String s =
WITHOUT_CLASSIFICATION	prevent accidental use of is below
WITHOUT_CLASSIFICATION	wrap-round check
WITHOUT_CLASSIFICATION	no wrap-round check
WITHOUT_CLASSIFICATION	Perform a sum and check the results
WITHOUT_CLASSIFICATION	trailing space
WITHOUT_CLASSIFICATION	Test with output variable name
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	Test with empty output variable name
WITHOUT_CLASSIFICATION	not full test plans
WITHOUT_CLASSIFICATION	start in new state
WITHOUT_CLASSIFICATION	suite.addTest(new TestLoad("checkGuiPackage"));
WITHOUT_CLASSIFICATION	Save the method name
WITHOUT_CLASSIFICATION	Constructor for TestElement tests
WITHOUT_CLASSIFICATION	Save the method name
WITHOUT_CLASSIFICATION	Save the method name
WITHOUT_CLASSIFICATION	Save the method name
WITHOUT_CLASSIFICATION	Constructor for Serializable tests
WITHOUT_CLASSIFICATION	Constructor for GUI tests
WITHOUT_CLASSIFICATION	Constructor for Function tests
WITHOUT_CLASSIFICATION	Only show classpath once
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	used by TestAnchorModifier used by TestAnchorModifier used by TestSaveService
WITHOUT_CLASSIFICATION	Use a suite to allow the tests to be generated at run-time
WITHOUT_CLASSIFICATION	The Locale used to instantiate the GUI objects
WITHOUT_CLASSIFICATION	Needs to be done before any GUI classes are instantiated
WITHOUT_CLASSIFICATION	Restore the original Locale
WITHOUT_CLASSIFICATION	Extract titles from component_reference.xml
WITHOUT_CLASSIFICATION	Not a true GUI component
WITHOUT_CLASSIFICATION	Add titles that don't need to be documented guiTitles.put("Root", Boolean.FALSE);
WITHOUT_CLASSIFICATION	Extract titles from functions.xml
WITHOUT_CLASSIFICATION	first time
WITHOUT_CLASSIFICATION	We don't mind if this is left over Ditto, not a sampler
WITHOUT_CLASSIFICATION	Test GUI elements - create the suite of tests
WITHOUT_CLASSIFICATION	Test Functions - create the suite of tests
WITHOUT_CLASSIFICATION	JMeterGUIComponent item = (JMeterGUIComponent) iter.next();
WITHOUT_CLASSIFICATION	Test GUI elements - run the test
WITHOUT_CLASSIFICATION	So we can detect extra entries
WITHOUT_CLASSIFICATION	Is this a work in progress or an internal GUI component? Will be "" for internal components
WITHOUT_CLASSIFICATION	Skip the example samplers ...
WITHOUT_CLASSIFICATION	Record in log as well
WITHOUT_CLASSIFICATION	Record in log as well
WITHOUT_CLASSIFICATION	run the function test
WITHOUT_CLASSIFICATION	For detecting extra entries
WITHOUT_CLASSIFICATION	Check that function descriptions are OK
WITHOUT_CLASSIFICATION	Test GUI elements - run for all components
WITHOUT_CLASSIFICATION	Test GUI elements - not run for TestBeanGui items
WITHOUT_CLASSIFICATION	Test serializable elements - create the suite of tests
WITHOUT_CLASSIFICATION	Test serializable elements - test the object
WITHOUT_CLASSIFICATION	Test TestElements - implement the test case
WITHOUT_CLASSIFICATION	Don't try to instantiate remote server
WITHOUT_CLASSIFICATION	Try with a parameter-less constructor first
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	no luck. Ignore this class
WITHOUT_CLASSIFICATION	We won't test restricted-access classes.
WITHOUT_CLASSIFICATION	not thrown, so need to check here
WITHOUT_CLASSIFICATION	Only dump it once
WITHOUT_CLASSIFICATION	[sebb] assertEquals(item2, clonedItem.getProperty(item2.getName()));
WITHOUT_CLASSIFICATION	Used by findTestFile
WITHOUT_CLASSIFICATION	JMeterUtils assumes Unix-style separators
WITHOUT_CLASSIFICATION	Used to be done in initializeProperties
WITHOUT_CLASSIFICATION	needed for scripts
WITHOUT_CLASSIFICATION	Display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	Helper method to find a file
WITHOUT_CLASSIFICATION	Add the offset
WITHOUT_CLASSIFICATION	Add the offset
WITHOUT_CLASSIFICATION	Helper method to find a test path
WITHOUT_CLASSIFICATION	number of samples taken
WITHOUT_CLASSIFICATION	same as above
WITHOUT_CLASSIFICATION	not same
WITHOUT_CLASSIFICATION	This is needed in order to set up the cookie policy
WITHOUT_CLASSIFICATION	This should be ignored, as there is no value
WITHOUT_CLASSIFICATION	starts empty
WITHOUT_CLASSIFICATION	should not be stored
WITHOUT_CLASSIFICATION	Test session cookie is returned
WITHOUT_CLASSIFICATION	Test Old cookie is not returned
WITHOUT_CLASSIFICATION	Test multi-cookie header handling
WITHOUT_CLASSIFICATION	Test duplicate cookie handling
WITHOUT_CLASSIFICATION	Assumes some kind of list is used
WITHOUT_CLASSIFICATION	Test cookie matching
WITHOUT_CLASSIFICATION	Defaults to caller URL
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	assertEquals("/",man.get(0).getPath());
WITHOUT_CLASSIFICATION	Cookies are ignored
WITHOUT_CLASSIFICATION	Cookies again ignored
WITHOUT_CLASSIFICATION	Show that maxlong now saved as 0
WITHOUT_CLASSIFICATION	Shutdown the http server
WITHOUT_CLASSIFICATION	Wait up to 1 second
WITHOUT_CLASSIFICATION	Already failed
WITHOUT_CLASSIFICATION	succeeded
WITHOUT_CLASSIFICATION	Connect to the http server, and do a simple http get
WITHOUT_CLASSIFICATION	Write to the socket
WITHOUT_CLASSIFICATION	Headers
WITHOUT_CLASSIFICATION	Check that the request and response matches
WITHOUT_CLASSIFICATION	Close the connection
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Write to the socket
WITHOUT_CLASSIFICATION	Headers
WITHOUT_CLASSIFICATION	Headers
WITHOUT_CLASSIFICATION	Headers
WITHOUT_CLASSIFICATION	Read the response
WITHOUT_CLASSIFICATION	Read the response
WITHOUT_CLASSIFICATION	Read the response
WITHOUT_CLASSIFICATION	Check that the request and response matches
WITHOUT_CLASSIFICATION	Check that the request and response matches
WITHOUT_CLASSIFICATION	Check that the request and response matches
WITHOUT_CLASSIFICATION	Close the connection
WITHOUT_CLASSIFICATION	Close the connection
WITHOUT_CLASSIFICATION	Close the connection
WITHOUT_CLASSIFICATION	Connect to the http server, and do a simple http get, with a pause in the middle of transmitting the header
WITHOUT_CLASSIFICATION	Write the start of the headers, and then sleep, so that the mirror thread will have to block to wait for more data to appear
WITHOUT_CLASSIFICATION	Write the rest of the headers
WITHOUT_CLASSIFICATION	The content sent
WITHOUT_CLASSIFICATION	The content sent
WITHOUT_CLASSIFICATION	Connect to the http server, and do a simple http post
WITHOUT_CLASSIFICATION	Construct body
WITHOUT_CLASSIFICATION	Construct body
WITHOUT_CLASSIFICATION	Write the headers and body
WITHOUT_CLASSIFICATION	Connect to the http server, and do a simple http post, with a pause after transmitting the headers
WITHOUT_CLASSIFICATION	Write the headers, and then sleep
WITHOUT_CLASSIFICATION	Write the body
WITHOUT_CLASSIFICATION	Write the body
WITHOUT_CLASSIFICATION	Check that the request and response matches
WITHOUT_CLASSIFICATION	$sid$
WITHOUT_CLASSIFICATION	Arguments args = sampler.getArguments();
WITHOUT_CLASSIFICATION	No entry; check it is still present
WITHOUT_CLASSIFICATION	Test https works too
WITHOUT_CLASSIFICATION	These are some of the special characters
WITHOUT_CLASSIFICATION	Can't instantiate
WITHOUT_CLASSIFICATION	List of parsers to test. Should probably be derived automatically
WITHOUT_CLASSIFICATION	Dummy as the file has no entries
WITHOUT_CLASSIFICATION	Dummy as the file has no entries
WITHOUT_CLASSIFICATION	Relative filenames
WITHOUT_CLASSIFICATION	Identify subtests
WITHOUT_CLASSIFICATION	This is OK
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	A HTTP GET request, with encoding not known
WITHOUT_CLASSIFICATION	private TestData(String f, String b, String s) { this(f, b, s, null); }
WITHOUT_CLASSIFICATION	Does the order matter?
WITHOUT_CLASSIFICATION	Convert both to Sets
WITHOUT_CLASSIFICATION	Get expected results as a List
WITHOUT_CLASSIFICATION	A HTTP GET request
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	A HTTP POST request
WITHOUT_CLASSIFICATION	A HTTP GET request, with encoding not known
WITHOUT_CLASSIFICATION	A HTTP POST request, with content-type text/plain
WITHOUT_CLASSIFICATION	A HTTP GET request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	A HTTP POST request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	A HTTP POST request, with unknown encoding
WITHOUT_CLASSIFICATION	A HTTP POST request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	A HTTP GET request, with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	A HTTP GET request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	A HTTP POST request, with encoding not known
WITHOUT_CLASSIFICATION	Check arguments We should have one argument, with the value equal to the post body
WITHOUT_CLASSIFICATION	A HTTP POST request, with content-type text/plain; charset=UTF-8 The encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	A HTTP POST request, with content-type text/plain; charset=UTF-8 The encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	Use null for url to simulate that HttpRequestHdr do not know the encoding for the page. Specify contentEncoding, so the request is "sent" using that encoding
WITHOUT_CLASSIFICATION	Use null for url to simulate that HttpRequestHdr do not know the encoding for the page. Specify contentEncoding, so the request is "sent" using that encoding
WITHOUT_CLASSIFICATION	Use null for url and contentEncoding, to simulate that HttpRequestHdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	Use null for url and contentEncoding, to simulate that HttpRequestHdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	A HTTP POST request, with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	A HTTP POST request, multipart/form-data, simple values,
WITHOUT_CLASSIFICATION	A HTTP POST request, multipart/form-data, simple values,
WITHOUT_CLASSIFICATION	no space after :
WITHOUT_CLASSIFICATION	spaces after :
WITHOUT_CLASSIFICATION	Assume there's at least one file
WITHOUT_CLASSIFICATION	Title multipart
WITHOUT_CLASSIFICATION	Description multipart
WITHOUT_CLASSIFICATION	File upload multipart
WITHOUT_CLASSIFICATION	Most browsers use ISO-8859-1 as default encoding, even if spec says UTF-8
WITHOUT_CLASSIFICATION	Most browsers use ISO-8859-1 as default encoding, even if spec says UTF-8
WITHOUT_CLASSIFICATION	No filters
WITHOUT_CLASSIFICATION	Empty filters
WITHOUT_CLASSIFICATION	Non empty filters
WITHOUT_CLASSIFICATION	Simple inclusion and exclusion filter
WITHOUT_CLASSIFICATION	Allow all but images
WITHOUT_CLASSIFICATION	throw new UnsupportedOperationException("For test purposes only");
WITHOUT_CLASSIFICATION	This must be the original (Java) HTTP sampler
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	A HTTP POST request, multipart/form-data, with value that will change if they are url encoded Values are similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	Most browsers use ISO-8859-1 as default encoding, even if spec says UTF-8 TODO - charset?
WITHOUT_CLASSIFICATION	Create the test file content
WITHOUT_CLASSIFICATION	create a temporary file to make sure we always have a file to give to the PostWriter Whereever we are or Whatever the current path is.
WITHOUT_CLASSIFICATION	delete temporay file
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending UTF-8 data with ISO-8859-1 content encoding
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending a HTTPSampler with form parameters, and only the filename of a file.
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending file content as the only content of the post body
WITHOUT_CLASSIFICATION	Check using default encoding
WITHOUT_CLASSIFICATION	Check using a different encoding
WITHOUT_CLASSIFICATION	File content is sent as binary, so the content encoding should not change the file data
WITHOUT_CLASSIFICATION	If we have both file as body, and form data, then only form data will be sent
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending only a file multipart.
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending only a formdata, as a multipart/form-data request.
WITHOUT_CLASSIFICATION	Tell sampler to do multipart, even if we have no files to upload
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1, with values that need to be urlencoded
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1, with values that need to be urlencoded
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending only a formdata, as urlencoded data
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that needs to be urlencoded
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	delete temporay file
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Check that other encoding is not the current encoding TODO - charset?
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that would have been urlencoded if it was not sent as multipart
WITHOUT_CLASSIFICATION	Test sending parameters which are urlencoded beforehand The values must be URL encoded with UTF-8 encoding, because that is what the HTTPArgument assumes %C3%85 in UTF-8 is the same as %C5 in ISO-8859-1, which is the same as &Aring;
WITHOUT_CLASSIFICATION	HTTPSampler uses ISO-8859-1 as default encoding HTTPSampler uses ISO-8859-1 as default encoding
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.setHeaders(URLConnection, HTTPSampler)'
WITHOUT_CLASSIFICATION	Create the multiparts
WITHOUT_CLASSIFICATION	Join the two multiparts
WITHOUT_CLASSIFICATION	The encoding used for http headers and control information
WITHOUT_CLASSIFICATION	replace all backslash with double backslash
WITHOUT_CLASSIFICATION	Different from TestHTTPMirrorThread port and standard mirror server
WITHOUT_CLASSIFICATION	additional ctor for processing tests which use int parameters
WITHOUT_CLASSIFICATION	This is used to emulate @before class and @after class
WITHOUT_CLASSIFICATION	Add parameterised tests. For simplicity we assune each has cases 0-10
WITHOUT_CLASSIFICATION	Shutdown mirror server
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that will change when urlencoded
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	Replace the variables in the sampler
WITHOUT_CLASSIFICATION	Replace the variables in the sampler
WITHOUT_CLASSIFICATION	ensure only values are used
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that would have been urlencoded if it was not sent as multipart
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that will change when urlencoded
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	Replace the variables in the sampler
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	Replace the variables in the sampler
WITHOUT_CLASSIFICATION	ensure only values are used
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that have been urlencoded, and where we tell the sampler to urlencode the parameter values
WITHOUT_CLASSIFICATION	Test sending data with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	Test sending data with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	Test sending data with UTF-8 encoding
WITHOUT_CLASSIFICATION	Test sending data with UTF-8 encoding
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that changes when urlencoded
WITHOUT_CLASSIFICATION	Check URL
WITHOUT_CLASSIFICATION	Check the request
WITHOUT_CLASSIFICATION	Check request headers
WITHOUT_CLASSIFICATION	Check post body from the result query string
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	Check response headers
WITHOUT_CLASSIFICATION	Check URL
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with + as part of the value, where the value is set in sampler as not urluencoded, but the isalwaysencoded flag of the argument is set to false. This mimics the HTTPConstants.addNonEncodedArgument, which the Proxy server calls in some cases
WITHOUT_CLASSIFICATION	Test sending simple HTTP get Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending simple HTTP get Test sending data with default encoding
WITHOUT_CLASSIFICATION	Check request headers
WITHOUT_CLASSIFICATION	Check post body from the result query string
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	Check response headers
WITHOUT_CLASSIFICATION	Check response headers
WITHOUT_CLASSIFICATION	Check post body which was sent to the mirror server, and sent back by the mirror server
WITHOUT_CLASSIFICATION	Check method, path and query sent
WITHOUT_CLASSIFICATION	Check method, path and query sent
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	Check method, path and query sent
WITHOUT_CLASSIFICATION	Check method, path and query sent
WITHOUT_CLASSIFICATION	Check method
WITHOUT_CLASSIFICATION	Check method
WITHOUT_CLASSIFICATION	Check that the query string is empty
WITHOUT_CLASSIFICATION	No body should have been sent
WITHOUT_CLASSIFICATION	No body should have been sent
WITHOUT_CLASSIFICATION	Check the Request URI sent to the mirror server, and sent back by the mirror server
WITHOUT_CLASSIFICATION	We should have a query string part
WITHOUT_CLASSIFICATION	We should not have a query string part
WITHOUT_CLASSIFICATION	Check path
WITHOUT_CLASSIFICATION	Check query
WITHOUT_CLASSIFICATION	Is it only the parameter values which are encoded in the specified content encoding, the rest of the query is encoded in UTF-8 Therefore we compare the whole query using UTF-8
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us We assume the headers are in ISO_8859_1, and the body can be in any content encoding.
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us We assume the headers are in ISO_8859_1, and the body can be in any content encoding. Therefore we get the data sent in ISO_8859_1, to be able to determine the end of the header part, and then we just construct a byte array to hold the body part, not taking encoding of the body into consideration, because it can contain file data, which is sent as raw byte data
WITHOUT_CLASSIFICATION	No divider was found
WITHOUT_CLASSIFICATION	Set the form data
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Join the two multiparts
WITHOUT_CLASSIFICATION	The encoding used for http headers and control information
WITHOUT_CLASSIFICATION	replace all backslash with double backslash
WITHOUT_CLASSIFICATION	The value is in the first group, group 0 is the whole match
WITHOUT_CLASSIFICATION	The headers and body are divided by a blank line
WITHOUT_CLASSIFICATION	Header may contain ;charset= , regexp extracts it so computed boundary is wrong
WITHOUT_CLASSIFICATION	String domain = "localhost";
WITHOUT_CLASSIFICATION	Set the file upload data
WITHOUT_CLASSIFICATION	Parse arguments singly
WITHOUT_CLASSIFICATION	Parse arguments all at once
WITHOUT_CLASSIFICATION	test cases for making Url, and exercise method addArgument(String name,String value,String metadata)
WITHOUT_CLASSIFICATION	test cases for making Url, and exercise method parseArguments(String queryString)
WITHOUT_CLASSIFICATION	Ignore empty file specs
WITHOUT_CLASSIFICATION	Ignore trailing empty spec
WITHOUT_CLASSIFICATION	Ignore leading empty spec
WITHOUT_CLASSIFICATION	Show that can bypass encoding:
WITHOUT_CLASSIFICATION	The sample does not use a valid encoding
WITHOUT_CLASSIFICATION	by default, name/value are encoded on fetch
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Try a real encoded argument
WITHOUT_CLASSIFICATION	Trailing file
WITHOUT_CLASSIFICATION	Trailing directory
WITHOUT_CLASSIFICATION	file exclf inclf exclp inclp
WITHOUT_CLASSIFICATION	odd chars
WITHOUT_CLASSIFICATION	invalid
WITHOUT_CLASSIFICATION	'12345'
WITHOUT_CLASSIFICATION	Check illegal array lengths
WITHOUT_CLASSIFICATION	current default language properties file
WITHOUT_CLASSIFICATION	messages.properties
WITHOUT_CLASSIFICATION	Read resource into ResourceBundle and store in List
WITHOUT_CLASSIFICATION	Read resource file saving the keys
WITHOUT_CLASSIFICATION	Only relevant for messages
WITHOUT_CLASSIFICATION	Store the key
WITHOUT_CLASSIFICATION	Helper method to construct resource name
WITHOUT_CLASSIFICATION	check that there aren't any extra entries
WITHOUT_CLASSIFICATION	perform the checks on the resources
WITHOUT_CLASSIFICATION	holds keys from file
WITHOUT_CLASSIFICATION	Look for duplicate keys in the file
WITHOUT_CLASSIFICATION	Must be the default resource file
WITHOUT_CLASSIFICATION	Check all the keys are in the default props file
WITHOUT_CLASSIFICATION	Also Check key is in default
WITHOUT_CLASSIFICATION	Better error than NPE
WITHOUT_CLASSIFICATION	Fix up Windows paths
WITHOUT_CLASSIFICATION	Use a suite to ensure that the default is done first
WITHOUT_CLASSIFICATION	load the default resource
WITHOUT_CLASSIFICATION	Don't try to check the default language
WITHOUT_CLASSIFICATION	e.g. "/org/apache/jmeter/resources/messages"
WITHOUT_CLASSIFICATION	Check that calls to getResString use a valid property key name
WITHOUT_CLASSIFICATION	leading comment
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	\u00e7 = LATIN SMALL LETTER C WITH CEDILLA \u00e9 = LATIN SMALL LETTER E WITH ACUTE
WITHOUT_CLASSIFICATION	Change the original back again
WITHOUT_CLASSIFICATION	a and b should be equal
WITHOUT_CLASSIFICATION	a and b should not be equal
WITHOUT_CLASSIFICATION	Needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	Needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	Re-increment
WITHOUT_CLASSIFICATION	Re-increment
WITHOUT_CLASSIFICATION	N.B. This needs to divert the log for SampleResult
WITHOUT_CLASSIFICATION	temp test case for exploring settings
WITHOUT_CLASSIFICATION	Don't use nanoThread
WITHOUT_CLASSIFICATION	This test tries to emulate a http sample, with two subsamples, representing images that are downloaded for the page representing the first sample.
WITHOUT_CLASSIFICATION	Sample that will get two sub results, simulates a web page load
WITHOUT_CLASSIFICATION	Sample with no sub results, simulates an image download
WITHOUT_CLASSIFICATION	Sample with no sub results, simulates an image download
WITHOUT_CLASSIFICATION	Now add the subsamples to the sample
WITHOUT_CLASSIFICATION	TimeMillis has granularity of 10-20
WITHOUT_CLASSIFICATION	Check that calculator gets the correct statistics from the sample
WITHOUT_CLASSIFICATION	Allow for some margin of error Check that the throughput uses the time elapsed for the sub results
WITHOUT_CLASSIFICATION	check default
WITHOUT_CLASSIFICATION	check null changes nothing
WITHOUT_CLASSIFICATION	check no charset
WITHOUT_CLASSIFICATION	Check unquoted charset
WITHOUT_CLASSIFICATION	Check quoted charset
WITHOUT_CLASSIFICATION	This is what JOrphanUtils.split() does
WITHOUT_CLASSIFICATION	These tests should agree with those for JOrphanUtils.split() as far as possible
WITHOUT_CLASSIFICATION	\u00e7 = LATIN SMALL LETTER C WITH CEDILLA \u00e9 = LATIN SMALL LETTER E WITH ACUTE
WITHOUT_CLASSIFICATION	Blank line
WITHOUT_CLASSIFICATION	Empty strings at EOF
WITHOUT_CLASSIFICATION	testLoadAndSave test files
WITHOUT_CLASSIFICATION	GraphAccumVisualizer obsolete, BSFSamplerGui now a TestBean GraphAccumVisualizer obsolete, BSFSamplerGui now a TestBean GraphAccumVisualizer now obsolete CTT changed to use intProp for mode
WITHOUT_CLASSIFICATION	Test files for testLoad; output will generally be different in size and line count
WITHOUT_CLASSIFICATION	Did a test fail?
WITHOUT_CLASSIFICATION	Make sure all the data is flushed out
WITHOUT_CLASSIFICATION	Test non-empty parameters
WITHOUT_CLASSIFICATION	Unrecognised files are ignored
WITHOUT_CLASSIFICATION	Does not open file
WITHOUT_CLASSIFICATION	Does not open file
WITHOUT_CLASSIFICATION	Re-read 1st line
WITHOUT_CLASSIFICATION	Re-read 1st line
WITHOUT_CLASSIFICATION	should not be able to write to it ...
WITHOUT_CLASSIFICATION	does not remove the entry
WITHOUT_CLASSIFICATION	removes all entries
WITHOUT_CLASSIFICATION	test code, intentional
WITHOUT_CLASSIFICATION	Check "Undefined" does not become a "reserved word":
WITHOUT_CLASSIFICATION	errorDetected()
WITHOUT_CLASSIFICATION	errorDetected()
WITHOUT_CLASSIFICATION	Programming error. Don't continue.
WITHOUT_CLASSIFICATION	Check that all keys in the bundle are also in the default bundle:
WITHOUT_CLASSIFICATION	Will throw MissingResourceException if key is not there.
WITHOUT_CLASSIFICATION	Check that all necessary keys are there:
WITHOUT_CLASSIFICATION	displayName is always mandatory:
WITHOUT_CLASSIFICATION	Skip the rest of this test for alpha/experimental beans:
WITHOUT_CLASSIFICATION	Check for property- and group-related texts:
WITHOUT_CLASSIFICATION	Skip non-editable properties, that is: Ignore hidden, read-only, and write-only properties
WITHOUT_CLASSIFICATION	Ignore TestElement properties which don't have an explicit editor:
WITHOUT_CLASSIFICATION	Done -- we're working with an editable property.
WITHOUT_CLASSIFICATION	throw new Error("No default bundle for class " + className);
WITHOUT_CLASSIFICATION	String sampleLog = "C:/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl";
WITHOUT_CLASSIFICATION	String sampleLog = "C:/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl";
WITHOUT_CLASSIFICATION	tweak.
WITHOUT_CLASSIFICATION	tweak.
WITHOUT_CLASSIFICATION	Test needs to run in this package in order to give access to AbstractTestElement.addProperty()
WITHOUT_CLASSIFICATION	This test should work whether or not all Nulls are equal
WITHOUT_CLASSIFICATION	do not check hashcodes; unequal objects may have equal hashcodes
WITHOUT_CLASSIFICATION	Give access to the method for test code
WITHOUT_CLASSIFICATION	Give access to the method for test code
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	p.add(makeButtonPanel(), BorderLayout.SOUTH);
WITHOUT_CLASSIFICATION	Assume this thread only 1 per second Should delay for 1 second 1 per milli-second Should delay for 1 milli-second
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	10 per second Should delay for 1 second 10 per milli-second Should delay for 1 milli-second
WITHOUT_CLASSIFICATION	1000 per milli-second Should delay for 1 milli-second
WITHOUT_CLASSIFICATION	Not sure we can test anything else here
WITHOUT_CLASSIFICATION	Use old style
WITHOUT_CLASSIFICATION	probably needed to avoid NPEs with GUIs
WITHOUT_CLASSIFICATION	tree1.add("a3");
WITHOUT_CLASSIFICATION	No duplicates when adding
WITHOUT_CLASSIFICATION	add duplicates
WITHOUT_CLASSIFICATION	as above, but with aggregate sample instead
WITHOUT_CLASSIFICATION	add duplicates as per bug
WITHOUT_CLASSIFICATION	assertEquals("t2",f2.invoke());
WITHOUT_CLASSIFICATION	assertEquals("1a:aa.",f1a.invoke());
WITHOUT_CLASSIFICATION	can't call invoke using super class
WITHOUT_CLASSIFICATION	OK (currently) to invoke using sub-class
WITHOUT_CLASSIFICATION	Args will be provided later
WITHOUT_CLASSIFICATION	should use original object
WITHOUT_CLASSIFICATION	Check how Class definition behaves
WITHOUT_CLASSIFICATION	logprop("java.class.path");
WITHOUT_CLASSIFICATION	don't call isHeadless() here, as it has a side effect. --
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Send different event wether we are merging a test plan into another test plan, or loading a testplan from scratch
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	private static final String ROOTDN = "rootDn"; private static final String TEST = "tesT"; private static String testValue="NNNN";
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Test ignore trailing split characters Ignore adjacent delimiters
WITHOUT_CLASSIFICATION	Tests for split(String,String,boolean)
WITHOUT_CLASSIFICATION	Test leading split characters
WITHOUT_CLASSIFICATION	Test leading split characters
WITHOUT_CLASSIFICATION	Empty string
WITHOUT_CLASSIFICATION	Tests for split(String,String,String)
WITHOUT_CLASSIFICATION	Empty default
WITHOUT_CLASSIFICATION	Empty delimiter
WITHOUT_CLASSIFICATION	Multiple delimiters
WITHOUT_CLASSIFICATION	Delimiter same as splitter
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Node node = tidy.parseDOM(new ByteArrayInputStream(response.getResponseData()), null);
WITHOUT_CLASSIFICATION	Values for TEST_FIELD N.B. we cannot change the text value as it is in test plans $NON-NLS-1$
WITHOUT_CLASSIFICATION	In case parse fails $NON-NLS-1$ In case parse fails $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Make it easier to enter a Tab $NON-NLS-1$
WITHOUT_CLASSIFICATION	The Loop Controller panel can be displayed standalone or inside another panel. For standalone, we want to display the TITLE, NAME, etc. (everything). However, if we want to display it within another panel, we just display the Loop Count fields (not the TITLE and NAME).
WITHOUT_CLASSIFICATION	$NON-NLS-1$ don't set empty to keep regexp regexpField.setText(""); $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	This 'other value' regex is deliberately weak, even accepting an empty string, to be useful when reporting malformed data. $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Condition LABEL $NON-NLS-1$
WITHOUT_CLASSIFICATION	If the -j or -l flag is set to LAST or LAST.log|LAST.jtl, then the last loaded file name is used to generate the log file name by removing .JMX and replacing it with .log|.jtl
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ i.e. boolean saveXXX() $NON-NLS-1$ i.e. void setXXX(boolean) $NON-NLS-1$ e.g. save_XXX property
WITHOUT_CLASSIFICATION	Keep the '\' unless it is one of the escapable chars '$' ',' or '\' N.B. This method is used to parse function parameters, so must treat ',' as special
WITHOUT_CLASSIFICATION	en fr de $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ ja zh_CN zh_TW
WITHOUT_CLASSIFICATION	@GuardedBy("LOCK") Keep track of how many instances are active
WITHOUT_CLASSIFICATION	sampleOccurred is called from multiple threads; not safe to write from multiple threads. also decouples the file IO from sample generation
WITHOUT_CLASSIFICATION	File name sequence number @GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	Instance fields are constructed by the client when the instance is create in the test plan and the field values are then transferred to the server copy by RMI serialisation/deserialisation
WITHOUT_CLASSIFICATION	process special keys $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If there are some recent files, we must make the separator visisble The separator is the last item in the list
WITHOUT_CLASSIFICATION	put the gui object back to the way it was.
WITHOUT_CLASSIFICATION	Make sure decoding follows input file
WITHOUT_CLASSIFICATION	Save (Selection) As Save TestPlan As Save
WITHOUT_CLASSIFICATION	Y Y Y Y sp M M / D D / H H : M M : S S end
WITHOUT_CLASSIFICATION	OK TODO ??
WITHOUT_CLASSIFICATION	Support original property name $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	allow for windows / chars in filename $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	updateMainMenu(((JMeterGUIComponent) getCurrentNode().getUserObject()).createPopupMenu());
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	A HTTP POST request, multipart/form-data, simple values, with \r\n as end of line, which is according to spec, and with more headers in each multipart
WITHOUT_CLASSIFICATION	two jars same version two jars same version
WITHOUT_CLASSIFICATION	Test plan with OnlyOnceController inside inner loop Set up the test plan
WITHOUT_CLASSIFICATION	The following used to be jacks_password, but the Arguments class uses HashMap for which the order is not defined.
WITHOUT_CLASSIFICATION	myRow = f.nextRow(); assertEquals(3,myRow); assertEquals(0,f.getNextRow());
WITHOUT_CLASSIFICATION	Is this a work in progress ? No, not a work in progress ...
WITHOUT_CLASSIFICATION	Assumes some kind of list is use If not using a list that retains the order, then the asserts would need to change
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that will change when urlencoded, and where we tell the sampler to urlencode the parameter value
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request httpMethod can be null if method is unexpected
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Resource keys cannot contain spaces, and are forced to lower case $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Nulls cannot be written using PrettyPrintWriter - they cause an NPE $NON-NLS-1$
WITHOUT_CLASSIFICATION	default is 1 default is 0
WITHOUT_CLASSIFICATION	N.B. JVMs other than Sun may return different instances each time so we cache the value here (and avoid having to fetch it every time)
WITHOUT_CLASSIFICATION	Programming error. Don't continue.
WITHOUT_CLASSIFICATION	+ JMX attributes - do not change $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ - JMX
WITHOUT_CLASSIFICATION	Note: this is only used to implement TestIterationListener#testIterationStart Since this is a frequent event, it makes sense to create the list once rather than scanning each time The memory used will be released when the thread finishes
WITHOUT_CLASSIFICATION	We only check the length of the result. Comparing the actual result (out.toByteArray==original) will usually fail, because the order of the properties within each test element may change. Comparing the lengths should be enough to detect most problem cases...
WITHOUT_CLASSIFICATION	Assume this thread only 1 per second Initialise
WITHOUT_CLASSIFICATION	Test ignore trailing split characters Ignore adjacent delimiters
WITHOUT_CLASSIFICATION	write a OK reponse to browser, to engage SSL exchange $NON-NLS-1$
WITHOUT_CLASSIFICATION	We use the page encoding where the form resides, as the default encoding for the form
WITHOUT_CLASSIFICATION	+ action names $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set up list of potential targets and enable listener
WITHOUT_CLASSIFICATION	.equals caused NPE
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	record headers size to allow HTTPSampleResult.getBytes() with different options $NON-NLS-1$ $NON-NLS-2$ add 2 for a '\r\n' at end of headers (before data)
WITHOUT_CLASSIFICATION	a well-bahaved browser is supposed to send 'Connection: close' with the last request to an HTTP server. Instead, most browsers leave it to the server to close the connection after their timeout period. Leave it to the JMeter user to decide.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	one space for blank header $NON-NLS-1$ one space for blank header $NON-NLS-1$
WITHOUT_CLASSIFICATION	a well-behaved browser is supposed to send 'Connection: close' with the last request to an HTTP server. Instead, most browsers leave it to the server to close the connection after their timeout period. Leave it to the JMeter user to decide.
WITHOUT_CLASSIFICATION	Process Apache HttpClient parameters file $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	In a post request which is not multipart, we only support parameters, no file upload is allowed
WITHOUT_CLASSIFICATION	Embedded URLs must match this RE (if provided) $NON-NLS-1$
WITHOUT_CLASSIFICATION	Mark Walsh 2002-08-03, modified to also parse a parameter name value string, where string contains only the parameter name and no equal sign.
WITHOUT_CLASSIFICATION	Check if the header manager had a content type header This allows the user to specify his own content-type for a PUT request
WITHOUT_CLASSIFICATION	If the Multipart is repeatable, we can send it first to our own stream, without the actual file content, so we can return it
WITHOUT_CLASSIFICATION	headerManager was set, so let's set the connection to use it.
WITHOUT_CLASSIFICATION	we call parse with 1 to get only one. this also means if we change the implementation to use 2, it would use every other entry and so on. Not that it is really useful, but a person could use it that way if they have a huge gigabyte log file and they only want to use a quarter of the entries.
WITHOUT_CLASSIFICATION	the document should only have one service node if it doesn't it may not work!
WITHOUT_CLASSIFICATION	new WSDLHelper("http:localhost/WSTest/WSTest.asmx?WSDL"); new WSDLHelper("http:localhost/AxisWSDL.xml"); new WSDLHelper("http:localhost:8080/WSMyUpper.wsdl"); new WSDLHelper("http:localhost:8080/test.wsdl");
WITHOUT_CLASSIFICATION	read one line at a time using BufferedReader
WITHOUT_CLASSIFICATION	There's little point saving the manager between invocations as we need to reset most of the beans anyway
WITHOUT_CLASSIFICATION	/ Only do the calculation if it is needed
WITHOUT_CLASSIFICATION	A CallableStatement can return more than 1 ResultSets plus a number of update counts.
WITHOUT_CLASSIFICATION	++ Do not change these strings; they are used in JMX files to record the button settings $NON-NLS-1$
WITHOUT_CLASSIFICATION	Timeouts not active How much left
WITHOUT_CLASSIFICATION	needs to be accessible from test code Only contains LDAPArgument entries
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The default is false, so we can remove the property to simplify JMX files This also allows HTTPDefaults to work for this checkbox
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	++ For TestBean implementations only passed to file or script
WITHOUT_CLASSIFICATION	put a warning if tika-app.jar missing (or some dependencies in only tika-core|parsers packages are using) $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Resource keys cannot contain spaces, and are forced to lower case $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Can occur at run-time could be caused by the bsh Exceptions: EvalError, ParseException or TargetError
WITHOUT_CLASSIFICATION	errorLogging and successOnlyLogging are mutually exclusive $NON-NLS-1$
WITHOUT_CLASSIFICATION	A TestBean is a Java Bean. Just define some properties and they will automagically show up in the GUI. A String property:
WITHOUT_CLASSIFICATION	Only try to format if there is a number
WITHOUT_CLASSIFICATION	Requires Java 7 $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$ don't match the empty category
WITHOUT_CLASSIFICATION	If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	Read the header part, we will be looking for a content-length header, so we know how much we should read. We assume headers are in ISO_8859_1 If we do not find such a header, we will just have to read until we have to block to read more, until we support chunked transfer
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Request validation $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ No point trying these
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	+ JMX file attributes $NON-NLS-1$
WITHOUT_CLASSIFICATION	this is not the result of a redirect so break the chain
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	+ JMX attributes - do not change the values $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Did sample succeed?
WITHOUT_CLASSIFICATION	Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	No need to log normally, as we set the status $NON-NLS-1$
WITHOUT_CLASSIFICATION	No need to log normally, as we set the status $NON-NLS-1$
WITHOUT_CLASSIFICATION	not been set by any child samples
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	throws ME
WITHOUT_CLASSIFICATION	throws ME
WITHOUT_CLASSIFICATION	tfMailFrom.setEnabled(false); tfMailTo.setEnabled(false); tfMailToCC.setEnabled(false); tfMailToBCC.setEnabled(false); tfSubject.setEnabled(false);
WITHOUT_CLASSIFICATION	++JMX attribute names - do not change the values! These were moved from SMTPSampler, which is why the prefix is still SMTSampler $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ --JMX attribute names
WITHOUT_CLASSIFICATION	For completeness
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ default is not in range of a byte
WITHOUT_CLASSIFICATION	Programming error: bail out.
WITHOUT_CLASSIFICATION	If we are disabling the Edit-->Remove menu item and the Edit-->Add menu item is disabled, then we also need to disable the Edit menu. The Java Look and Feel Guidelines say to disable a menu if all menu items are disabled.
WITHOUT_CLASSIFICATION	Set default SAVE menu item to disabled since the default node that is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	we add the entry
WITHOUT_CLASSIFICATION	we should make this configurable eventually
WITHOUT_CLASSIFICATION	we clean up the ResultCollector to make sure there's no slow leaks
WITHOUT_CLASSIFICATION	just like the aggregate listener, we use the sample label to represent a row. in this case, we use it as a key.
WITHOUT_CLASSIFICATION	Check that optional args work woth long options
WITHOUT_CLASSIFICATION	Separate argument
WITHOUT_CLASSIFICATION	assume default charset is OK here <apache-bsf.version>2.4.0</apache-bsf.version>
WITHOUT_CLASSIFICATION	Used to be 'dábale', but caused trouble on Gump. Reasons unknown.
WITHOUT_CLASSIFICATION	This would be done by the run command
WITHOUT_CLASSIFICATION	result.setResponseData - not set
WITHOUT_CLASSIFICATION	Expected results established using the DDA algorithm (see http:www.siggraph.org/education/materials/HyperGraph/scanline/outprims/drawline.htm): 0/1 vs. 1/1 -> 0 is closer to 33.33 0/2 vs. 1/2 -> 50.0 is closer to 33.33 1/3 vs. 2/3 -> 33.33 is closer to 33.33 1/4 vs. 2/4 -> 25.0 is closer to 33.33 1/5 vs. 2/5 -> 40.0 is closer to 33.33 2/6 vs. 3/6 -> 33.33 is closer to 33.33
WITHOUT_CLASSIFICATION	GenericController controller = new GenericController(); GenericController sub_1 = new GenericController(); sub_1.addTestElement(new IfController("10<100")); sub_1.addTestElement(new IfController("true==false")); controller.addTestElement(sub_1); controller.addTestElement(new IfController("false==false")); IfController sub_2 = new IfController(); sub_2.setCondition( "10<10000"); GenericController sub_3 = new GenericController(); sub_2.addTestElement(new IfController( " \"a\".equals(\"a\")" ) ); sub_3.addTestElement(new IfController("2>100")); sub_3.addTestElement(new IfController("false==true")); sub_2.addTestElement(sub_3); sub_2.addTestElement(new IfController("2==3")); controller.addTestElement(sub_2);
WITHOUT_CLASSIFICATION	Get next sample and its name
WITHOUT_CLASSIFICATION	Match by name
WITHOUT_CLASSIFICATION	Match by name
WITHOUT_CLASSIFICATION	Simple test with single Selection controller Generic Controller + Sampler "before" + Switch Controller + + Sampler "zero" + + Sampler "one" + + Sampler "two" + + Sampler "three" + Sampler "after"
WITHOUT_CLASSIFICATION	Generic Controller - before - While Controller ${VAR} - - one - - two - - Simple Controller - - - three - - - four - after
WITHOUT_CLASSIFICATION	OnlyOnce samples
WITHOUT_CLASSIFICATION	OnlyOnce samples
WITHOUT_CLASSIFICATION	Outer sample
WITHOUT_CLASSIFICATION	Sample in inner loop
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	OnlyOnce inside inner loop
WITHOUT_CLASSIFICATION	Test to show current problem with InterleaveController I am not sure if the expected order of the samples below are correct, because I am not sure if it is properly defined how the InterleaveController and OnlyOnceController should function.
WITHOUT_CLASSIFICATION	N.B. Backslashes are removed before dollar, comma and backslash
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getProperty("domain"));
WITHOUT_CLASSIFICATION	Check old values don't hang around: fewer matches
WITHOUT_CLASSIFICATION	same as Parent
WITHOUT_CLASSIFICATION	Create the CSVRead function and set its parameters.
WITHOUT_CLASSIFICATION	Check init file functioning
WITHOUT_CLASSIFICATION	Restarts
WITHOUT_CLASSIFICATION	col 1, line 1, A
WITHOUT_CLASSIFICATION	col2, line 1, B
WITHOUT_CLASSIFICATION	Check blank lines are treated as EOF
WITHOUT_CLASSIFICATION	myRow = f.nextRow(); assertEquals(0,myRow); assertEquals(1,f.getNextRow());
WITHOUT_CLASSIFICATION	Use different XPath for both threads
WITHOUT_CLASSIFICATION	wrap-round check
WITHOUT_CLASSIFICATION	Perform a sum and check the results
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	template match number ALL separator
WITHOUT_CLASSIFICATION	Extract titles from component_reference.xml
WITHOUT_CLASSIFICATION	Test GUI elements - create the suite of tests
WITHOUT_CLASSIFICATION	Skip report packages as implementation is incomplete Skip report GUI as implementation is incomplete No, not a work in progress ...
WITHOUT_CLASSIFICATION	Test TestElements - create the suite
WITHOUT_CLASSIFICATION	Events often have this constructor
WITHOUT_CLASSIFICATION	no luck. Ignore this class
WITHOUT_CLASSIFICATION	If not running under AllTests.java, make sure that the properties (and log file) are set up correctly. N.B. In order for this to work correctly, the JUnit test must be started in the bin directory, and all the JMeter jars (plus any others needed at run-time) need to be on the classpath.
WITHOUT_CLASSIFICATION	Display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	Test New cookie is returned
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	Write to the socket
WITHOUT_CLASSIFICATION	Write to the socket
WITHOUT_CLASSIFICATION	Write to the socket
WITHOUT_CLASSIFICATION	Headers
WITHOUT_CLASSIFICATION	Read the response
WITHOUT_CLASSIFICATION	Read the response
WITHOUT_CLASSIFICATION	Close the connection
WITHOUT_CLASSIFICATION	The content sent
WITHOUT_CLASSIFICATION	Write the headers, and then sleep
WITHOUT_CLASSIFICATION	Connect to the http server, and do a simple http post with utf-8 encoding of the body, which caused problems when reader/writer classes were used in the HttpMirrorThread
WITHOUT_CLASSIFICATION	The response includes the headers from the mirror server, we want to skip those, to only keep the content mirrored. Look for the first CRLFCRLF section
WITHOUT_CLASSIFICATION	Can't instantiate
WITHOUT_CLASSIFICATION	Test if can instantiate parser using property name
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments
WITHOUT_CLASSIFICATION	Check arguments We should have one argument, with the value equal to the post body
WITHOUT_CLASSIFICATION	Use null for url and contentEncoding, to simulate that HttpRequestHdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	Use null for url and contentEncoding, to simulate that HttpRequestHdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	A HTTP POST request, multipart/form-data, simple values, with \n as end of line, which should also be handled, and with more headers in each multipart
WITHOUT_CLASSIFICATION	Create the test file content
WITHOUT_CLASSIFICATION	create a temporary file to make sure we always have a file to give to the PostWriter Whereever we are or Whatever the current path is.
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending a request which contains both formdata and file content
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data with default encoding
WITHOUT_CLASSIFICATION	Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test sending data as UTF-8
WITHOUT_CLASSIFICATION	Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.setHeaders(URLConnection, HTTPSampler)'
WITHOUT_CLASSIFICATION	Create the multiparts
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses, with values urlencoded, but the always encode set to false for the arguments This is how the HTTP Proxy server adds arguments to the sampler
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	Test sending data as UTF-8, where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	Check URL
WITHOUT_CLASSIFICATION	Check URL
WITHOUT_CLASSIFICATION	Check URL
WITHOUT_CLASSIFICATION	Check URL
WITHOUT_CLASSIFICATION	Check request headers
WITHOUT_CLASSIFICATION	Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	Check post body which was sent to the mirror server, and sent back by the mirror server
WITHOUT_CLASSIFICATION	Check post body which was sent to the mirror server, and sent back by the mirror server
WITHOUT_CLASSIFICATION	Check method, path and query sent
WITHOUT_CLASSIFICATION	Cannot check the query string of the result, because the mirror server replies without including query string in URL
WITHOUT_CLASSIFICATION	Show that can bypass encoding:
WITHOUT_CLASSIFICATION	set the required variables
WITHOUT_CLASSIFICATION	test invalid byte arrays
WITHOUT_CLASSIFICATION	Ensure properties files don't use special characters
WITHOUT_CLASSIFICATION	Now check for invalid message format: if string contains {0} and ' there may be a problem, so do a format with dummy parameters and check if there is a { in the output. A bit crude, but should be enough for now.
WITHOUT_CLASSIFICATION	Original and clone should be equal
WITHOUT_CLASSIFICATION	Change the original
WITHOUT_CLASSIFICATION	Check sample increments OK
WITHOUT_CLASSIFICATION	Check sample increments OK
WITHOUT_CLASSIFICATION	Check sample increments OK
WITHOUT_CLASSIFICATION	Check sample increments OK
WITHOUT_CLASSIFICATION	Parent elapsed total should be no smaller than the sum of the individual samples. It may be greater by the timer granularity.
WITHOUT_CLASSIFICATION	Test files for testLoadAndSave; output will generally be different in size but same number of lines
WITHOUT_CLASSIFICATION	Note this test will fail if a property is added or removed to any of the components used in the test files. The way to solve this is to appropriately change the test file.
WITHOUT_CLASSIFICATION	test code, intentional
WITHOUT_CLASSIFICATION	test code, intentional
WITHOUT_CLASSIFICATION	test code, intentional
WITHOUT_CLASSIFICATION	p.add(makeMainPanel(), BorderLayout.CENTER); Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	Check reflexive
WITHOUT_CLASSIFICATION	This is not a requirement
WITHOUT_CLASSIFICATION	This is not a requirement
WITHOUT_CLASSIFICATION	assertEquals("t1",f1.invoke());
WITHOUT_CLASSIFICATION	assertEquals("1a:aa.",f1.invoke()); N.B. returns different result from before
WITHOUT_CLASSIFICATION	++ GUI tests throw the error testArgumentCreation(org.apache.jmeter.config.gui.ArgumentsPanel$Test)java.lang.NoClassDefFoundError at java.lang.Class.forName0(Native Method) at java.lang.Class.forName(Class.java:141) at java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment(GraphicsEnvironment.java:62) Try to find out why this is ...
WITHOUT_CLASSIFICATION	Externally callable suite() method for use by JUnit Allows tests to be run directly under JUnit, rather than using the startup code in the rest of the module. No parameters can be passed in, so it is less flexible.
WITHOUT_CLASSIFICATION	TestSuite only finds testXXX() methods, and does not look for suite() methods. To provide more compatibilty with stand-alone tests, where JUnit does look for a suite() method, check for it first here.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ modal dialog box
WITHOUT_CLASSIFICATION	$NON-NLS-1$ return unknown action names for display error msg
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set up some objects for the script to play with $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ Previously mis-spelt as theadName $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	for omitted file names $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	desc.add("Use fully qualified host name: TRUE/FALSE (Default FALSE)"); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Names of JUnit3 methods $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Leave header as is headerBuf.append(conn.getHeaderField(0).substring(0, 8)); headerBuf.append(" "); headerBuf.append(conn.getResponseCode()); headerBuf.append(" "); headerBuf.append(conn.getResponseMessage()); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Otherwise, the response is scanned for these strings $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Allow access to context and variables directly $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $NON-NLS-1$
WITHOUT_CLASSIFICATION	These names must agree case-wise with the variable and property names $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $NON-NLS-1$
WITHOUT_CLASSIFICATION	Add variables for access to context and variables $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Identifiers $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: normal
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	default: sans serif $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: normal $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: sans serif $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: 16 $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: sans serif $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Change Cancel label to Close $NON-NLS-1$
WITHOUT_CLASSIFICATION	Default for writing$NON-NLS-1$
WITHOUT_CLASSIFICATION	Only encode strings if outVersion = 1.0 $NON-NLS-1$
WITHOUT_CLASSIFICATION	Element tags. Must be unique. Keep sorted. $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	+ JMX field names - do not change values $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	regex $NON-NLS-1$ template $NON-NLS-1$ which match $NON-NLS-1$ between text $NON-NLS-1$ default text $NON-NLS-1$ output variable name $NON-NLS-1$ input variable $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ Previously mis-spelt as theadName $NON-NLS-1$ $NON-NLS-1$ (may be null) $NON-NLS-1$ (may be null) $NON-NLS-1$
WITHOUT_CLASSIFICATION	Function name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Process __CSVRead(filename,ALIAS) $NON-NLS-1$
WITHOUT_CLASSIFICATION	if argument is 'next' - go to the next line $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ We have a default
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ Previously mis-spelt as theadName $NON-NLS-1$ $NON-NLS-1$ (may be null) $NON-NLS-1$ (may be null) $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Ensure that these are set, even if no paramters are provided $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ change the classname drop down
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Don't make these static, otherwise language change does not work $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOTUSED Font plainText = new Font("plain", Font.PLAIN, 9); These must not be static, otherwise Language change does not work $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ Check if it is form data $NON-NLS-1$ Get the form field name $NON-NLS-1$
WITHOUT_CLASSIFICATION	Check if it is a file being uploaded $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ See TestElementPropertyConverter
WITHOUT_CLASSIFICATION	Look for special Response Length header $NON-NLS-1$
WITHOUT_CLASSIFICATION	Look for special Response Length header $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Look for special Cookie request $NON-NLS-1$
WITHOUT_CLASSIFICATION	Check if we have found a content-length header $NON-NLS-1$
WITHOUT_CLASSIFICATION	Look for special Sleep request $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	Cookie $NON-NLS-1$
WITHOUT_CLASSIFICATION	list of parsers $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Obtain message formats: $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	independent frame to allow it to be overlaid by the main frame $NON-NLS-1$
WITHOUT_CLASSIFICATION	Needed by AbstractTestElement. Also TestElementConverter and TestElementPropertyConverter for handling empty comments $NON-NLS-1$ N.B. Comments originally only applied to Test Plans, hence the name - which can now not be easily changed
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	value to return at EOF $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Add variables for access to context and variables $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: 16 $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: 3.0f $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: bottom $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: sans serif $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: 10 $NON-NLS-1$
WITHOUT_CLASSIFICATION	Tabbed results: fill table $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set the title for the first tab $NON-NLS-1$ Add the other tabs if not present $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Fields table $NON-NLS-1$ not sure needs I18N? $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ select last tab
WITHOUT_CLASSIFICATION	setup bottom tabs, first Raw, second Parsed $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $NON-NLS-1$
WITHOUT_CLASSIFICATION	should header be saved with the data? $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Label count Mean median 90% Min Max Error %age $NON-NLS-1$ Throughput $NON-NLS-1$ pageSize $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: 10 $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ default: bottom $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: sans serif $NON-NLS-1$
WITHOUT_CLASSIFICATION	default: 10 $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Add local system properties, if the file is found $NON-NLS-1$
WITHOUT_CLASSIFICATION	Add local JMeter properties, if the file is found $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1
WITHOUT_CLASSIFICATION	$NON-NLS-1$;
WITHOUT_CLASSIFICATION	$NON-NLS-1$;
WITHOUT_CLASSIFICATION	Hide Window on ESC $NON-NLS-1$
WITHOUT_CLASSIFICATION	Do search on Enter $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ file_merge.setAccelerator( KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_MASK)); Set default SAVE menu item to disabled since the default node that is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Set default SAVE menu item to disabled since the default node that is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Search MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	No, must be CSV $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ (Flash Media Manifest)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Attributes for TestElement and TestElementProperty Must all be unique $NON-NLS-1$ Also used by PropertyConverter classes $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	NOT USED protected static final String TAG_URL = "requestUrl"; $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	samplerData attributes. Must be unique. Keep sorted by string value. Ensure the Listener documentation is updated when new attributes are added $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	N.B. Originally the response code was saved with the code "rs" but retrieved with the code "rc". Changed to always use "rc", but allow for "rs" when restoring values. $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Needs to be visible to test cases $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ Add variables for access to context and variables
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ Ensure variable has been provided
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	otherwise we use "text/xml" as the default $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Could time this res.sampleEnd(); if sampleEnd() is not called, elapsed time will remain zero TODO distinguish errors better $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ - all threads All threads
WITHOUT_CLASSIFICATION	$NON-NLS-1$ -- End of names used in JMX files
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Package access for use by Test code $NON-NLS-1$
WITHOUT_CLASSIFICATION	Set the title for the first tab $NON-NLS-1$ Remove the other tabs if present $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	public final static String CONNECTION = "MongoSourceElement.connection"; $NON-NLS-1$ public final static String SOURCE = "MongoSourceElement.source"; $NON-NLS-1$ public final static String AUTO_CONNECT_RETRY = "MongoSourceElement.autoConnectRetry"; $NON-NLS-1$ public final static String CONNECTIONS_PER_HOST = "MongoSourceElement.connectionsPerHost"; $NON-NLS-1$ public final static String CONNECT_TIMEOUT = "MongoSourceElement.connectTimeout"; $NON-NLS-1$ public final static String CONTINUE_ON_INSERT_ERROR = "MongoSourceElement.continueOnInsertError"; $NON-NLS-1$ public final static String MAX_AUTO_CONNECT_RETRY_TIME = "MongoSourceElement.maxAutoConnectRetryTime"; $NON-NLS-1$ public final static String MAX_WAIT_TIME = "MongoSourceElement.maxWaitTime"; $NON-NLS-1$ public final static String SOCKET_TIMEOUT = "MongoSourceElement.socketTimeout"; $NON-NLS-1$ public final static String SOCKET_KEEP_ALIVE = "MongoSourceElement.socketKeepAlive"; $NON-NLS-1$ public final static String THREADS_ALLOWED_TO_BLOCK_MULTIPLIER = "MongoSourceElement.threadsAllowedToBlockForConnectionMultiplier"; $NON-NLS-1$ public final static String FSYNC = "MongoSourceElement.fsync"; $NON-NLS-1$ public final static String SAFE = "MongoSourceElement.safe"; $NON-NLS-1$ public final static String WAIT_FOR_JOURNALING = "MongoSourceElement.waitForJournaling"; $NON-NLS-1$ public final static String WRITE_OPERATION_NUMBER_OF_SERVERS = "MongoSourceElement.writeOperationNumberOfServers"; $NON-NLS-1$ public final static String WRITE_OPERATION_TIMEOUT = "MongoSourceElement.writeOperationTimeout"; $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.http.conn.ssl.SSLSocketFactory#createLayeredSocket(java.net.Socket, java.lang.String, int, boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.util.accesslog.LogFilter#excPattern(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) A new instance is created for each thread group, and the clone() method is then called to create copies for each thread in a thread group. This means that the lock object is common to a thread group; separate thread groups have separate locks. If this is not intended, the lock object could be made static. @see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#setSamplerResult(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#getPanel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#getLabel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.SamplerResultTab#clearData()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.log.LogTarget#processEvent(org.apache.log.LogEvent)
WITHOUT_CLASSIFICATION	This is required so that @see org.apache.jmeter.gui.tree.JMeterTreeModel.getNodesOfType() can find the Clearable nodes - the userObject has to implement the interface.
WITHOUT_CLASSIFICATION	N.B. originally called clear() @see also JMeterGUIComponent
WITHOUT_CLASSIFICATION	For unit tests, @see TestCSVSaveService
WITHOUT_CLASSIFICATION	@see getStaticLabel
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.JTabbedPane#setSelectedIndex(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see jodd.lagarto.EmptyTagVisitor#script(jodd.lagarto.Tag, java.lang.CharSequence)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see jodd.lagarto.EmptyTagVisitor#tag(jodd.lagarto.Tag)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.parser.HTMLParser#isReusable()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.parser.HTMLParser#isReusable()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.xml.sax.helpers.DefaultHandler#error(org.xml.sax.SAXParseException)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.xml.sax.helpers.DefaultHandler#fatalError(org.xml.sax.SAXParseException)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testEnded()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testEnded(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testIterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)
WITHOUT_CLASSIFICATION	@see mergeFileProperties Must be private, as the file list needs special handling $NON-NLS-1$ MIMETYPE is kept for backward compatibility with old test plans $NON-NLS-1$ FILE_NAME is kept for backward compatibility with old test plans $NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.http.conn.ssl.SSLSocketFactory#createSocket(org.apache.http.params.HttpParams)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#setSamplerResult(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#getLabel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.AbstractJMeterGuiComponent#clearGui()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.util.LocaleChangeListener#localeChanged(org.apache.jmeter.util.LocaleChangeEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#configure(org.apache.jorphan.collections.HashTree)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#runReport()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#stopReport()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#reset()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#exit()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#getLabelResource()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#createPopupMenu()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#getMenuCategories()
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.report.gui.action.Command#getActionNames()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#getFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#getPageTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#isSuccessful()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#pageStarted()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#pageEnded()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#setFileName(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#setPageTitle(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#setSuccessful(boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#createTestElement()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#modifyTestElement(org.apache.jmeter.testelement.TestElement)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.testelement.TestStateListener#testEnded()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.testelement.TestStateListener#testEnded(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.testelement.TestStateListener#testStarted()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.testelement.TestStateListener#testStarted(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testIterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ so we can add them again in init
WITHOUT_CLASSIFICATION	independent frame to allow it to be overlaid by the main frame $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$;
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	RUN MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	EDIT MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	FILE MENU $NON-NLS-1$
WITHOUT_CLASSIFICATION	protected fields: JMeterToolBar class can be use to create another toolbar (plugin, etc.) $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	reuse documentation $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The following are used to set the Result details on return from the script: $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Add SamplerData for consistency with BeanShell Sampler $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Add alias for original StringFromFile name (had only one underscore) $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Functions are wrapped in ${ and } $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	The headers are written using ISO_8859_1 encoding $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ We only support chunked transfer encoding
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$$NON-NLS-3$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Allow Headers to override Host setting $NON-NLS-1$ Host
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	revert
WITHOUT_CLASSIFICATION	revert to previous behaviour $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Not a real sampler
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	If we still can't find it, just try using all of the text
WITHOUT_CLASSIFICATION	method called by add is synchronized this is a different model from the one used by the result collector
WITHOUT_CLASSIFICATION	We are displaying an AssertionResult
WITHOUT_CLASSIFICATION	Creates one of the fields used to display the graph's current values. @param color the color used to draw the value. By convention this is the same color that is used to draw the graph for this value and in the choose panel. @param length the number of digits which the field should be able to display @return a text field configured to display one of the current graph values private JTextField createInfoField(Color color, int length) { JTextField field = new JTextField(length); field.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0)); field.setEditable(false); field.setForeground(color); field.setBackground(getBackground()); The text field should expand horizontally, but have a fixed height field.setMaximumSize(new Dimension( field.getMaximumSize().width, field.getPreferredSize().height)); return field; }
WITHOUT_CLASSIFICATION	Allow functions etc to register for testStopped notification. Only used by the function parser so far. The list is merged with the testListeners and then cleared.
WITHOUT_CLASSIFICATION	Insert the workbench node
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ Look and Feel prefix $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ enable/disable $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	we stay within the same parent node
WITHOUT_CLASSIFICATION	we stay within the same parent node
WITHOUT_CLASSIFICATION	Get the preference for the recent files
WITHOUT_CLASSIFICATION	Get the preference for the recent files
WITHOUT_CLASSIFICATION	Find and set the file for this recent file command
WITHOUT_CLASSIFICATION	Check if LAF is a built-in one
WITHOUT_CLASSIFICATION	Using index 0 is voluntary as child is removed in next step and added to new parent
WITHOUT_CLASSIFICATION	or a treenode from the same tree
WITHOUT_CLASSIFICATION	Extract transfer data.
WITHOUT_CLASSIFICATION	Insert a clone of the node, the original one will be removed by the exportDone method the children are not cloned but moved to the cloned node working on the original node would be harder as you'll have to deal with the insertion index offset if you re-order a node inside a parent
WITHOUT_CLASSIFICATION	The following array must agree with dateFormat It is used to translate the positions in the buffer to the values used by the Calendar class for the field id. Current format: MM/DD/YYYY HH:MM:SS 01234567890123456789 ^buffer positions
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Used by SampleSaveConfigurationConverter.unmarshall()
WITHOUT_CLASSIFICATION	Note that sampleStarted() and sampleStopped() is not made to appear in synch with sampleOccured() when replaying held samples. For now this is not critical since sampleStarted() and sampleStopped() is not used, but it may become an issue in the future. Then these events must also be stored so that replay of all events may occur and in the right order. Each stored event must then be tagged with something that lets you distinguish between occured, started and ended.
WITHOUT_CLASSIFICATION	Allow TestResultWrapper to feed back the samples This is effectively the same as saver.fromXML(InputStream) except we get to provide the DataHolder Don't know why there is no method for this in the XStream class
WITHOUT_CLASSIFICATION	OK
WITHOUT_CLASSIFICATION	N.B. default charset is used deliberately here
WITHOUT_CLASSIFICATION	Catch errors and rethrow as ConversionException so we get location details
WITHOUT_CLASSIFICATION	Version information for test plan header This is written to JMX files by ScriptWrapperConverter Also to JTL files by ResultCollector $NON-NLS-1$
WITHOUT_CLASSIFICATION	For converters to use
WITHOUT_CLASSIFICATION	Get the OutputWriter to use
WITHOUT_CLASSIFICATION	Use deprecated method, to avoid duplicating code
WITHOUT_CLASSIFICATION	Get the InputReader to use
WITHOUT_CLASSIFICATION	Get the InputReader to use
WITHOUT_CLASSIFICATION	Normal output ---- Debugging information ---- required-type : org.apache.jorphan.collections.ListedHashTree cause-message : WebServiceSampler : WebServiceSampler class : org.apache.jmeter.save.ScriptWrapper message : WebServiceSampler : WebServiceSampler line number : 929 path : /jmeterTestPlan/hashTree/hashTree/hashTree[4]/hashTree[5]/WebServiceSampler cause-exception : com.thoughtworks.xstream.alias.CannotResolveClassException -------------------------------
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- XML RESULT FILE CONSTANTS AND FIELD NAME CONSTANTS ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	It is the sub sampler of the transaction that will be sampled
WITHOUT_CLASSIFICATION	N.B. This is only called at the start and end of a thread, so there is not necessary to cache the search results, thus saving memory
WITHOUT_CLASSIFICATION	If parent is OK, but child failed, add a message and flag the parent as failed
WITHOUT_CLASSIFICATION	private static Configuration getConfiguration(AssertionResult assResult) { DefaultConfiguration config = new DefaultConfiguration(ASSERTION_RESULT_TAG_NAME, "JMeter Save Service"); config.setAttribute(FAILURE_MESSAGE, assResult.getFailureMessage()); config.setAttribute(ERROR, "" + assResult.isError()); config.setAttribute(FAILURE, "" + assResult.isFailure()); return config; }
WITHOUT_CLASSIFICATION	see if this works it did not, let's try some other formats
WITHOUT_CLASSIFICATION	Both these are needed in the list even though they set the same variable
WITHOUT_CLASSIFICATION	Class to handle generating the delimited string. - adds the delimiter if not the first call - quotes any strings that require it
WITHOUT_CLASSIFICATION	<p> Returns a <code>String</code> value for a character-delimited column value enclosed in the quote character, if required. </p> <p> If the value contains a special character, then the String value is returned enclosed in the quote character. </p> <p> Any quote characters in the value are doubled up. </p> <p> If the value does not contain any special characters, then the String value is returned unchanged. </p> <p> N.B. The list of special characters includes the quote character. </p> @param input the input column String, may be null (without enclosing delimiters) @param specialChars special characters; second one must be the quote character @return the input String, enclosed in quote characters if the value contains a special character, <code>null</code> for null string input
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	Obtain a value of the appropriate type for this property.
WITHOUT_CLASSIFICATION	use negative condition so missing (null) value is treated as FALSE
WITHOUT_CLASSIFICATION	the DEFAULT class Convert int to Integer etc:
WITHOUT_CLASSIFICATION	might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	True iff we're currently processing an event triggered by the user selecting the "Edit" option. Used to prevent reverting the combo to non-editable during processing of secondary events.
WITHOUT_CLASSIFICATION	Programming error. Don't continue.
WITHOUT_CLASSIFICATION	Creation of the customizer and GUI initialization is delayed until the first configure call. We don't need all that just to find out the static label, menu categories, etc!
WITHOUT_CLASSIFICATION	<p> Super-class for TestElements that can be applied to main sample, sub-samples or both. [Assertions use a different class because they use a different value for the {@link #getScopeName()} constant] </p> <p> Their corresponding GUI classes need to add the ScopePanel to the GUI using the AbstractXXXGui methods: <ul> <li>createScopePanel()</li> <li>saveScopeSettings()</li> <li>showScopeSettings()</li> </ul> </p>
WITHOUT_CLASSIFICATION	TestBeanHelper.prepare() is OK
WITHOUT_CLASSIFICATION	Trigger end of loop condition on all parent controllers of current sampler
WITHOUT_CLASSIFICATION	OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	Original (rather odd) behaviour start at the end
WITHOUT_CLASSIFICATION	Property names to preload into JMeter variables:
WITHOUT_CLASSIFICATION	List of active threads
WITHOUT_CLASSIFICATION	set the endtime for the Thread Duration is in seconds
WITHOUT_CLASSIFICATION	N.B. we don't wait for the thread to complete, as that would prevent parallel TGs
WITHOUT_CLASSIFICATION	For example: jar:file:/JMeter/lib/ext/ApacheJMeter_core.jar!/org/apache/jmeter/util/JMeterVersion.class or if using an IDE file:/workspaces/JMeter/build/core/org/apache/jmeter/util/JMeterVersion.class
WITHOUT_CLASSIFICATION	For use by the server script
WITHOUT_CLASSIFICATION	Override so we can intercept the stream
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	TODO - charset?
WITHOUT_CLASSIFICATION	API expects null not empty array, see http:docs.oracle.com/javase/6/docs/api/javax/net/ssl/X509KeyManager.html
WITHOUT_CLASSIFICATION	the copying thread won't generally detect EOF
WITHOUT_CLASSIFICATION	N.B. It seems that Opera needs a chain in order to accept server keys signed by the intermediate CA Opera does not seem to like server keys signed by the root (self-signed) cert.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Needs to be volatile as may be referenced from multiple threads TODO see if this can be made final somehow
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON_NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
DOCUMENTATION	TODO Document the reason for this
DOCUMENTATION	TODO Can't see anything in SPEC
DOCUMENTATION	TODO Can't see anything in SPEC
