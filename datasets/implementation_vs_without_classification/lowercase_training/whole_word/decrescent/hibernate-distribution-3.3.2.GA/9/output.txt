todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.8298668253523562	IMPLEMENTATION	0.17013317464764374	WITHOUT_CLASSIFICATION
todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.8298668253523562	IMPLEMENTATION	0.17013317464764374	WITHOUT_CLASSIFICATION
todo return new lock(ts)	IMPLEMENTATION	0.772454768890239	WITHOUT_CLASSIFICATION	0.227545231109761	IMPLEMENTATION
todo if lock.gettimestamp().equals(ts)	IMPLEMENTATION	0.8906042863877496	WITHOUT_CLASSIFICATION	0.10939571361225046	IMPLEMENTATION
todo mappings.getlogicaltablename(ownertable)	IMPLEMENTATION	0.6780388045381363	WITHOUT_CLASSIFICATION	0.3219611954618637	IMPLEMENTATION
todo handle typedefs	IMPLEMENTATION	0.8046739759345495	IMPLEMENTATION	0.1953260240654504	WITHOUT_CLASSIFICATION
todo check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.9586935412299442	WITHOUT_CLASSIFICATION	0.04130645877005591	IMPLEMENTATION
todo bindpropertyresults(alias returnelem)	IMPLEMENTATION	0.6780388045381363	WITHOUT_CLASSIFICATION	0.3219611954618637	IMPLEMENTATION
todo validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.8417265418538686	WITHOUT_CLASSIFICATION	0.1582734581461314	IMPLEMENTATION
todo native ids	IMPLEMENTATION	0.8226232170416442	WITHOUT_CLASSIFICATION	0.17737678295835582	IMPLEMENTATION
todo if we are using identity columns fetch the identifier	IMPLEMENTATION	0.9986107808805241	WITHOUT_CLASSIFICATION	0.0013892191194757946	IMPLEMENTATION
todo handle property-ref	IMPLEMENTATION	0.7579084194545037	IMPLEMENTATION	0.24209158054549632	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.6228553611898688	IMPLEMENTATION	0.377144638810131	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.6228553611898688	IMPLEMENTATION	0.377144638810131	WITHOUT_CLASSIFICATION
todo check if mimer sql cannot handle the way db2 does	IMPLEMENTATION	0.9960433528956737	WITHOUT_CLASSIFICATION	0.0039566471043262965	IMPLEMENTATION
todo restrict violation	IMPLEMENTATION	0.7750951482366699	WITHOUT_CLASSIFICATION	0.22490485176333005	IMPLEMENTATION
todo lowercasing done here. was done "at random" before maybe not needed at all ?	IMPLEMENTATION	0.9999993565109739	IMPLEMENTATION	6.43489025990304E-7	WITHOUT_CLASSIFICATION
todo tolowercase was not done before. only used in template.	IMPLEMENTATION	0.8907080157443198	WITHOUT_CLASSIFICATION	0.10929198425568014	IMPLEMENTATION
add an entry for this type of entity. we can be assured that all referenced entities have already been processed so specify that this entity is with the latest batch. doing the batch number before adding the name to the list is a faster way to get an accurate number.	IMPLEMENTATION	0.9999972179216168	WITHOUT_CLASSIFICATION	2.782078383320464E-6	IMPLEMENTATION
todo avoid this for non-new instances where mightbedirty==false	IMPLEMENTATION	0.6679464905924422	WITHOUT_CLASSIFICATION	0.33205350940755785	IMPLEMENTATION
todo optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.7835469572868901	IMPLEMENTATION	0.21645304271311	WITHOUT_CLASSIFICATION
we could move this inside if we wanted to tolerate collection initializations during collection dirty checking	IMPLEMENTATION	0.9947258785185604	WITHOUT_CLASSIFICATION	0.00527412148143951	IMPLEMENTATION
todo assertion only could be optimized away	IMPLEMENTATION	0.5448047938234188	WITHOUT_CLASSIFICATION	0.45519520617658105	IMPLEMENTATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.7955731091807808	IMPLEMENTATION	0.20442689081921916	WITHOUT_CLASSIFICATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.7955731091807808	IMPLEMENTATION	0.20442689081921916	WITHOUT_CLASSIFICATION
todo why aren't these the same?	IMPLEMENTATION	0.859673803058488	IMPLEMENTATION	0.14032619694151194	WITHOUT_CLASSIFICATION
todo always true for now but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.9518087507521873	WITHOUT_CLASSIFICATION	0.04819124924781272	IMPLEMENTATION
todo or should we return 'containstablealias'??	IMPLEMENTATION	0.6847451977564892	WITHOUT_CLASSIFICATION	0.31525480224351077	IMPLEMENTATION
todo arithmetic expressions multiple new foo()	IMPLEMENTATION	0.7185710068416741	WITHOUT_CLASSIFICATION	0.281428993158326	IMPLEMENTATION
todo for some dialects it would be appropriate to add the renderorderbypropertiesselect() to other select strings	IMPLEMENTATION	0.9979800831756518	IMPLEMENTATION	0.0020199168243481935	WITHOUT_CLASSIFICATION
todo cache the persister this shows up in yourkit	IMPLEMENTATION	0.7752930110800796	IMPLEMENTATION	0.22470698891992028	WITHOUT_CLASSIFICATION
todo theoretically non-threadsafe	IMPLEMENTATION	0.6780774027200778	WITHOUT_CLASSIFICATION	0.32192259727992223	IMPLEMENTATION
todo look at optimizing these	IMPLEMENTATION	0.6675192704769747	WITHOUT_CLASSIFICATION	0.33248072952302526	IMPLEMENTATION
todo maybe call it getrowselection() ?	IMPLEMENTATION	0.9749462708302399	IMPLEMENTATION	0.025053729169760085	WITHOUT_CLASSIFICATION
todo make this handle multiple collection roles!	IMPLEMENTATION	0.9937649983179623	IMPLEMENTATION	0.006235001682037669	WITHOUT_CLASSIFICATION
todo can we limit stored procedures ?!	IMPLEMENTATION	0.921697110365769	WITHOUT_CLASSIFICATION	0.07830288963423106	IMPLEMENTATION
todo not visible to the user!	IMPLEMENTATION	0.8811887931045539	IMPLEMENTATION	0.1188112068954462	WITHOUT_CLASSIFICATION
todo unnecessary for databases with ansi-style joins	IMPLEMENTATION	0.7450106725326936	WITHOUT_CLASSIFICATION	0.2549893274673064	IMPLEMENTATION
todo use these in methods above	IMPLEMENTATION	0.8935351445655327	WITHOUT_CLASSIFICATION	0.10646485543446721	IMPLEMENTATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.6362787396425822	IMPLEMENTATION	0.36372126035741775	WITHOUT_CLASSIFICATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.6362787396425822	IMPLEMENTATION	0.36372126035741775	WITHOUT_CLASSIFICATION
todo temporary initial step towards hhh-1907	IMPLEMENTATION	0.9667054007386991	WITHOUT_CLASSIFICATION	0.03329459926130086	IMPLEMENTATION
todo remove this once componentmetamodel is complete and merged	IMPLEMENTATION	0.7255873500831918	WITHOUT_CLASSIFICATION	0.27441264991680825	IMPLEMENTATION
todo handle supportsnotnullunique=false but such a case does not exist in the wild so far	IMPLEMENTATION	0.998384338307779	WITHOUT_CLASSIFICATION	0.001615661692221035	IMPLEMENTATION
todo still need to make collectionpersisters entitymode-aware	IMPLEMENTATION	0.9979579352132132	IMPLEMENTATION	0.0020420647867868294	WITHOUT_CLASSIFICATION
todo add owner argument!!	IMPLEMENTATION	0.51766222233557	WITHOUT_CLASSIFICATION	0.48233777766443	IMPLEMENTATION
todo formulas ?	IMPLEMENTATION	0.5865069224834936	WITHOUT_CLASSIFICATION	0.4134930775165066	IMPLEMENTATION
todo include the rowids!!!!	IMPLEMENTATION	0.786026549635264	WITHOUT_CLASSIFICATION	0.2139734503647361	IMPLEMENTATION
todo cache this sql	IMPLEMENTATION	0.5111273434966089	IMPLEMENTATION	0.48887265650339107	WITHOUT_CLASSIFICATION
todo create uk loaders for component properties	IMPLEMENTATION	0.9907070859388832	WITHOUT_CLASSIFICATION	0.009292914061116764	IMPLEMENTATION
todo cache this in an instvar	IMPLEMENTATION	0.8962246395968937	WITHOUT_CLASSIFICATION	0.10377536040310631	IMPLEMENTATION
/ todo look at perhaps caching this	IMPLEMENTATION	0.8792853488451643	IMPLEMENTATION	0.12071465115483564	WITHOUT_CLASSIFICATION
todo eventually put this back in once we think all is fixed object otheralias = columnsunique.put(qualifiedcolumn columnalias)	IMPLEMENTATION	0.7019010550608193	WITHOUT_CLASSIFICATION	0.29809894493918065	IMPLEMENTATION
todo if we support multiple fetch groups we would need to clone the set of lazy properties!	IMPLEMENTATION	0.9411439077941359	IMPLEMENTATION	0.058856092205864095	WITHOUT_CLASSIFICATION
todo proxies!	IMPLEMENTATION	0.5962133303407623	WITHOUT_CLASSIFICATION	0.4037866696592377	IMPLEMENTATION
todo terrible implementation!	IMPLEMENTATION	0.660210516621632	WITHOUT_CLASSIFICATION	0.339789483378368	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.5962133303407623	WITHOUT_CLASSIFICATION	0.4037866696592377	IMPLEMENTATION
todo i don't really like this implementation it would be better if this was handled by searchfordirtycollections()	IMPLEMENTATION	0.9936308687522355	IMPLEMENTATION	0.0063691312477643924	WITHOUT_CLASSIFICATION
todo check if key contains the owner id	IMPLEMENTATION	0.6232911056990682	WITHOUT_CLASSIFICATION	0.37670889430093174	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.5962133303407623	WITHOUT_CLASSIFICATION	0.4037866696592377	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9998853005737496	WITHOUT_CLASSIFICATION	1.1469942625041038E-4	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9998853005737496	WITHOUT_CLASSIFICATION	1.1469942625041038E-4	IMPLEMENTATION
if we are still not resolved we might represent a constant. needed to add this here because the allowance of naked-prop-refs in the grammar collides with the definition of literals/constants ("nondeterminism"). todo cleanup the grammar so that "processconstants" is always just handled from here	IMPLEMENTATION	0.999883665176114	IMPLEMENTATION	1.1633482388602425E-4	WITHOUT_CLASSIFICATION
todo add referencedclass to disambiguate to fks on the same columns pointing to different tables	IMPLEMENTATION	0.5421358801566543	IMPLEMENTATION	0.4578641198433458	WITHOUT_CLASSIFICATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999988965541405	WITHOUT_CLASSIFICATION	1.1034458593516194E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999840770234734	WITHOUT_CLASSIFICATION	1.5922976526584033E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999840770234734	WITHOUT_CLASSIFICATION	1.5922976526584033E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999840770234734	WITHOUT_CLASSIFICATION	1.5922976526584033E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999840770234734	WITHOUT_CLASSIFICATION	1.5922976526584033E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999840770234734	WITHOUT_CLASSIFICATION	1.5922976526584033E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999840770234734	WITHOUT_CLASSIFICATION	1.5922976526584033E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999840770234734	WITHOUT_CLASSIFICATION	1.5922976526584033E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999892766314575	WITHOUT_CLASSIFICATION	1.072336854246293E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999892766314575	WITHOUT_CLASSIFICATION	1.072336854246293E-5	IMPLEMENTATION
| this | bean | args | raw bean |	WITHOUT_CLASSIFICATION	0.9999562891460705	WITHOUT_CLASSIFICATION	4.371085392946098E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
astore 4 store the raw bean	WITHOUT_CLASSIFICATION	0.9999781569509169	WITHOUT_CLASSIFICATION	2.1843049083131064E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999492694605826	WITHOUT_CLASSIFICATION	5.073053941746933E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999492694605826	WITHOUT_CLASSIFICATION	5.073053941746933E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999981849748532	WITHOUT_CLASSIFICATION	1.8150251468949917E-6	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999823878684806	WITHOUT_CLASSIFICATION	1.761213151940598E-5	IMPLEMENTATION
putfield new value of the field	WITHOUT_CLASSIFICATION	0.9999487590890207	WITHOUT_CLASSIFICATION	5.124091097918285E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999925423192498	WITHOUT_CLASSIFICATION	7.457680750157717E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.999999409817105	WITHOUT_CLASSIFICATION	5.901828949109629E-7	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.999999409817105	WITHOUT_CLASSIFICATION	5.901828949109629E-7	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999795282788423	WITHOUT_CLASSIFICATION	2.0471721157663918E-5	IMPLEMENTATION
just decrement the lock don't recache (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9994144747624286	WITHOUT_CLASSIFICATION	5.855252375714252E-4	IMPLEMENTATION
decode row selection	WITHOUT_CLASSIFICATION	0.9999910648841429	WITHOUT_CLASSIFICATION	8.935115857151467E-6	IMPLEMENTATION
disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999984693500509	WITHOUT_CLASSIFICATION	1.5306499492055224E-6	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999997324831476	WITHOUT_CLASSIFICATION	2.675168524732562E-7	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9999256124895479	WITHOUT_CLASSIFICATION	7.438751045206207E-5	IMPLEMENTATION
row id	WITHOUT_CLASSIFICATION	0.9999307101662817	WITHOUT_CLASSIFICATION	6.928983371839747E-5	IMPLEMENTATION
composite-id	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.999962015624628	WITHOUT_CLASSIFICATION	3.798437537190586E-5	IMPLEMENTATION
property prop = new property() prop.setname("id") prop.setpropertyaccessorname("embedded") prop.setvalue(id) entity.setidentifierproperty(prop)	WITHOUT_CLASSIFICATION	0.9999653520188794	WITHOUT_CLASSIFICATION	3.464798112059892E-5	IMPLEMENTATION
dynamic insert	WITHOUT_CLASSIFICATION	0.9999930626500548	WITHOUT_CLASSIFICATION	6.937349945230293E-6	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999743431456732	WITHOUT_CLASSIFICATION	2.565685432671936E-5	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999983676244178	WITHOUT_CLASSIFICATION	1.6323755822189158E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999941448376932	WITHOUT_CLASSIFICATION	5.85516230676638E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999941448376932	WITHOUT_CLASSIFICATION	5.85516230676638E-6	IMPLEMENTATION
generated properties can never be insertable	WITHOUT_CLASSIFICATION	0.9999486689921401	WITHOUT_CLASSIFICATION	5.1331007859853204E-5	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999867900909502	WITHOUT_CLASSIFICATION	1.3209909049720061E-5	IMPLEMENTATION
by default natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999996152633814	WITHOUT_CLASSIFICATION	3.8473661854943894E-7	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999891422965725	WITHOUT_CLASSIFICATION	1.0857703427395084E-5	IMPLEMENTATION
we found some extends attributes referencing entities which were not already processed. here we need to locate all entity-names and class-names contained in this document itself making sure that these get removed from the extendz list such that only extends names which require us to delay processing (i.e. external to this document and not yet processed) are contained in the returned result	WITHOUT_CLASSIFICATION	0.9190399769852293	WITHOUT_CLASSIFICATION	0.08096002301477076	IMPLEMENTATION
build a resultsetmappingdefinition given a containing element for the "return-xxx" elements @param resultsetelem the element containing the return definitions. @param path no clue @param mappings the current processing state. @return the description of the mappings	WITHOUT_CLASSIFICATION	0.9999581989390761	WITHOUT_CLASSIFICATION	4.180106092386273E-5	IMPLEMENTATION
private boolean showsql private boolean formatsql	WITHOUT_CLASSIFICATION	0.9999978665910181	WITHOUT_CLASSIFICATION	2.133408981937426E-6	IMPLEMENTATION
public boolean isshowsqlenabled() { return showsql } public boolean isformatsqlenabled() { return formatsql }	WITHOUT_CLASSIFICATION	0.9999966985919619	WITHOUT_CLASSIFICATION	3.3014080379812674E-6	IMPLEMENTATION
set a custom entity resolver. this entity resolver must be set before addxxx(misc) call. default value is {@link org.hibernate.util.dtdentityresolver} @param entityresolver entity resolver to use	WITHOUT_CLASSIFICATION	0.999991299137444	WITHOUT_CLASSIFICATION	8.700862556084148E-6	IMPLEMENTATION
final list extendsqueue	WITHOUT_CLASSIFICATION	0.9999957913934041	WITHOUT_CLASSIFICATION	4.208606595901066E-6	IMPLEMENTATION
if close() is called guarantee unbind()	WITHOUT_CLASSIFICATION	0.999999639528426	WITHOUT_CLASSIFICATION	3.604715741165864E-7	IMPLEMENTATION
if a threadlocalsessioncontext-bound session happens to get serialized to be completely correct we need to make sure that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999902350987241	WITHOUT_CLASSIFICATION	9.764901275890611E-6	IMPLEMENTATION
on the inverse it makes sense that if a threadlocalsessioncontext- bound session then gets deserialized to go ahead and re-bind it to the threadlocalsessioncontext session map.	WITHOUT_CLASSIFICATION	0.9999974746556329	WITHOUT_CLASSIFICATION	2.525344366962185E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999980300315642	WITHOUT_CLASSIFICATION	1.969968435802154E-6	IMPLEMENTATION
60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999913938316027	WITHOUT_CLASSIFICATION	8.60616839718941E-6	IMPLEMENTATION
optimisticcache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999771201980376	WITHOUT_CLASSIFICATION	2.287980196228226E-5	IMPLEMENTATION
cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681945323751	WITHOUT_CLASSIFICATION	3.1805467624958095E-5	IMPLEMENTATION
option.setdataversion( nonlockingdataversion.instance )	WITHOUT_CLASSIFICATION	0.9999725479747231	WITHOUT_CLASSIFICATION	2.7452025276895127E-5	IMPLEMENTATION
do the put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9994464478827798	WITHOUT_CLASSIFICATION	5.535521172202244E-4	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
tree cache in optimistic mode seems to have as very difficult time with remove calls on non-existent nodes (npes)	WITHOUT_CLASSIFICATION	0.9999849148448913	WITHOUT_CLASSIFICATION	1.5085155108762498E-5	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999843776126823	WITHOUT_CLASSIFICATION	1.5622387317716667E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999843776126823	WITHOUT_CLASSIFICATION	1.5622387317716667E-5	IMPLEMENTATION
do the failfast put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9994464478827798	WITHOUT_CLASSIFICATION	5.535521172202244E-4	IMPLEMENTATION
note evict() operates locally only (i.e. does not propogate to any other nodes in the potential cluster). this is exactly what is needed when we destroy() here destroy() is used as part of the process of shutting down a sessionfactory thus these removals should not be propogated	WITHOUT_CLASSIFICATION	0.8058106801562113	WITHOUT_CLASSIFICATION	0.19418931984378873	IMPLEMENTATION
protected regionrootlistener listener	WITHOUT_CLASSIFICATION	0.9999544997102271	WITHOUT_CLASSIFICATION	4.5500289772796234E-5	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999946185946577	WITHOUT_CLASSIFICATION	5.381405342377245E-6	IMPLEMENTATION
if we've been blocking for the mutex perhaps another thread has already reestablished the root. in case the node was reestablised via replication confirm it's marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999999414730374	WITHOUT_CLASSIFICATION	5.852696269873816E-8	IMPLEMENTATION
for pessimistic locking we just want to toss out our ref to any old invalid root node and get the latest (may be null)	WITHOUT_CLASSIFICATION	0.999999917474427	WITHOUT_CLASSIFICATION	8.252557300025527E-8	IMPLEMENTATION
the rest only matters for optimistic locking where we need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9992381548661556	WITHOUT_CLASSIFICATION	7.61845133844235E-4	IMPLEMENTATION
don't hold a transactional lock for this	WITHOUT_CLASSIFICATION	0.9999690895325779	WITHOUT_CLASSIFICATION	3.0910467422189266E-5	IMPLEMENTATION
make sure the root node for the region exists and has a dataversion that never complains	WITHOUT_CLASSIFICATION	0.9998306790209499	WITHOUT_CLASSIFICATION	1.693209790500642E-4	IMPLEMENTATION
never evict this node	WITHOUT_CLASSIFICATION	0.9989855365429832	WITHOUT_CLASSIFICATION	0.001014463457016872	IMPLEMENTATION
fix up the resident flag	WITHOUT_CLASSIFICATION	0.9884205579827785	WITHOUT_CLASSIFICATION	0.01157944201722146	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999843776126823	WITHOUT_CLASSIFICATION	1.5622387317716667E-5	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999983949269756	WITHOUT_CLASSIFICATION	1.6050730243543891E-6	IMPLEMENTATION
no-op. we don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9998210301116359	WITHOUT_CLASSIFICATION	1.7896988836402206E-4	IMPLEMENTATION
this should only be possible if the caches are constructor injected	WITHOUT_CLASSIFICATION	0.9999773406146123	WITHOUT_CLASSIFICATION	2.2659385387774462E-5	IMPLEMENTATION
we only build caches if none were passed in. passing in caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999995969844632	WITHOUT_CLASSIFICATION	4.030155369216806E-7	IMPLEMENTATION
set up the cache factory	WITHOUT_CLASSIFICATION	0.9999805939678036	WITHOUT_CLASSIFICATION	1.940603219642509E-5	IMPLEMENTATION
see if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999997020044635	WITHOUT_CLASSIFICATION	2.9799553645068855E-7	IMPLEMENTATION
default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.999999437003808	WITHOUT_CLASSIFICATION	5.629961919893527E-7	IMPLEMENTATION
default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999997225010415	WITHOUT_CLASSIFICATION	2.774989584694803E-7	IMPLEMENTATION
for timestamps we default to a separate config	WITHOUT_CLASSIFICATION	0.9999940459276633	WITHOUT_CLASSIFICATION	5.95407233676748E-6	IMPLEMENTATION
we can't change the tm on a running cache just check if the cache has no tm and we're ok with that	WITHOUT_CLASSIFICATION	0.9999990245691104	WITHOUT_CLASSIFICATION	9.754308896529541E-7	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9999622365218116	WITHOUT_CLASSIFICATION	3.7763478188326065E-5	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9999513066350055	WITHOUT_CLASSIFICATION	4.869336499441645E-5	IMPLEMENTATION
this method should be implemented assuming it's valid to do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.7149511129143615	IMPLEMENTATION	0.28504888708563847	WITHOUT_CLASSIFICATION
make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999296132617187	WITHOUT_CLASSIFICATION	7.03867382813346E-5	IMPLEMENTATION
we use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999669926321668	WITHOUT_CLASSIFICATION	3.3007367833100375E-5	IMPLEMENTATION
following methods we don't delegate since they have so little logic it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9663862509773417	WITHOUT_CLASSIFICATION	0.033613749022658346	IMPLEMENTATION
if jbc is using invalidation we don't want to propagate changes. we use the timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999914882418267	WITHOUT_CLASSIFICATION	8.511758173260529E-6	IMPLEMENTATION
we don't want to waste effort setting an option if jbc is already in local mode. if jbc is repl_(a)sync then check if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999986523936296	WITHOUT_CLASSIFICATION	1.3476063704239286E-6	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents updates add a zero (or low) timeout option so we don't block waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999865474910621	WITHOUT_CLASSIFICATION	1.3452508937813043E-5	IMPLEMENTATION
double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999959709644289	WITHOUT_CLASSIFICATION	4.029035571057637E-6	IMPLEMENTATION
get an exclusive right to update jbc for this key from this node.	WITHOUT_CLASSIFICATION	0.9999982354652855	WITHOUT_CLASSIFICATION	1.7645347143900313E-6	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9999964576254267	WITHOUT_CLASSIFICATION	3.5423745732710486E-6	IMPLEMENTATION
initial load from jbc	WITHOUT_CLASSIFICATION	0.999999098917813	WITHOUT_CLASSIFICATION	9.010821868753042E-7	IMPLEMENTATION
see if we had a 2nd invalidation from the same initial preinvalidation timestamp. if so only increment if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999999990571479	WITHOUT_CLASSIFICATION	9.428521725538877E-10	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9999964576254267	WITHOUT_CLASSIFICATION	3.5423745732710486E-6	IMPLEMENTATION
if the workspace node has null as well ok if not we've been modified in a non-comparable manner which we have to treat as us being newer	WITHOUT_CLASSIFICATION	0.9999871186180925	WITHOUT_CLASSIFICATION	1.2881381907468506E-5	IMPLEMENTATION
the standard comparator types are not serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999401346952704	WITHOUT_CLASSIFICATION	5.986530472959916E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999721710485542	WITHOUT_CLASSIFICATION	2.782895144583499E-5	IMPLEMENTATION
construct the cache	WITHOUT_CLASSIFICATION	0.9999714380229653	WITHOUT_CLASSIFICATION	2.8561977034756065E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999973302186096	WITHOUT_CLASSIFICATION	2.6697813904915725E-6	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999973302186096	WITHOUT_CLASSIFICATION	2.6697813904915725E-6	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999635961923174	WITHOUT_CLASSIFICATION	3.640380768251772E-5	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for initialpoolsize which hibernate sensibly lets default to minpoolsize but we'll let users override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999999542368779	WITHOUT_CLASSIFICATION	4.5763122024656385E-8	IMPLEMENTATION
datasource unpooled = datasources.unpooleddatasource(jdbcurl props.getproperty(environment.user) props.getproperty(environment.pass))	WITHOUT_CLASSIFICATION	0.9999242787231418	WITHOUT_CLASSIFICATION	7.572127685810657E-5	IMPLEMENTATION
true if the pool is borrowed from the outside false if we used to create it	WITHOUT_CLASSIFICATION	0.9999997363364788	WITHOUT_CLASSIFICATION	2.6366352127134884E-7	IMPLEMENTATION
get a connection from the pool (thru drivermanager cfr. proxool doc)	WITHOUT_CLASSIFICATION	0.9999022726322525	WITHOUT_CLASSIFICATION	9.772736774742088E-5	IMPLEMENTATION
set the transaction isolation if defined	WITHOUT_CLASSIFICATION	0.9999979250259613	WITHOUT_CLASSIFICATION	2.0749740387163723E-6	IMPLEMENTATION
toggle autocommit to false if set	WITHOUT_CLASSIFICATION	0.999991196335161	WITHOUT_CLASSIFICATION	8.803664839125424E-6	IMPLEMENTATION
return the connection	WITHOUT_CLASSIFICATION	0.9994433310355759	WITHOUT_CLASSIFICATION	5.566689644241454E-4	IMPLEMENTATION
get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999821363688755	WITHOUT_CLASSIFICATION	1.786363112458296E-5	IMPLEMENTATION
default the proxool alias setting	WITHOUT_CLASSIFICATION	0.9999992578730045	WITHOUT_CLASSIFICATION	7.421269954992605E-7	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999980981691914	WITHOUT_CLASSIFICATION	1.901830808622052E-6	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999980981691914	WITHOUT_CLASSIFICATION	1.901830808622052E-6	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998591313008394	WITHOUT_CLASSIFICATION	1.408686991605997E-4	IMPLEMENTATION
set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999772560592884	WITHOUT_CLASSIFICATION	2.2743940711634484E-5	IMPLEMENTATION
configured using the jaxp configurator	WITHOUT_CLASSIFICATION	0.9999908522627914	WITHOUT_CLASSIFICATION	9.147737208662931E-6	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999980981691914	WITHOUT_CLASSIFICATION	1.901830808622052E-6	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998591313008394	WITHOUT_CLASSIFICATION	1.408686991605997E-4	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998591313008394	WITHOUT_CLASSIFICATION	1.408686991605997E-4	IMPLEMENTATION
configured using the properties file configurator	WITHOUT_CLASSIFICATION	0.9999928753331218	WITHOUT_CLASSIFICATION	7.1246668782528445E-6	IMPLEMENTATION
remember isolation level	WITHOUT_CLASSIFICATION	0.9994966159263435	WITHOUT_CLASSIFICATION	5.033840736565275E-4	IMPLEMENTATION
if the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999999954517876	WITHOUT_CLASSIFICATION	4.548212352945128E-9	IMPLEMENTATION
we have created the pool ourselves so shut it down	WITHOUT_CLASSIFICATION	0.9999981347824392	WITHOUT_CLASSIFICATION	1.8652175608783695E-6	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9997343737716203	WITHOUT_CLASSIFICATION	2.656262283797587E-4	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9997343737716203	WITHOUT_CLASSIFICATION	2.656262283797587E-4	IMPLEMENTATION
always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999970759395911	WITHOUT_CLASSIFICATION	2.9240604089549454E-6	IMPLEMENTATION
public currency getcurrency(int col) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999870785796937	WITHOUT_CLASSIFICATION	1.2921420306248556E-5	IMPLEMENTATION
default is pojo	WITHOUT_CLASSIFICATION	0.999997546187354	WITHOUT_CLASSIFICATION	2.453812646053174E-6	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.999999351487523	WITHOUT_CLASSIFICATION	6.485124770274672E-7	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.999999351487523	WITHOUT_CLASSIFICATION	6.485124770274672E-7	IMPLEMENTATION
private cacheentry cacheentry	WITHOUT_CLASSIFICATION	0.9999940260773706	WITHOUT_CLASSIFICATION	5.973922629457087E-6	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9998231003766135	WITHOUT_CLASSIFICATION	1.768996233865054E-4	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9999851671749379	WITHOUT_CLASSIFICATION	1.483282506203243E-5	IMPLEMENTATION
get the updated snapshot of the entity state by cloning current state it is safe to copy in place since by this time no-one else (should have) has a reference to the array	WITHOUT_CLASSIFICATION	0.9999999969812079	WITHOUT_CLASSIFICATION	3.0187921186258764E-9	IMPLEMENTATION
this entity defines proeprty generation so process those generated values	WITHOUT_CLASSIFICATION	0.9999997705007205	WITHOUT_CLASSIFICATION	2.2949927940822638E-7	IMPLEMENTATION
have the entity entry perform post-update processing passing it the update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.999981766384971	WITHOUT_CLASSIFICATION	1.8233615028941224E-5	IMPLEMENTATION
!persister.iscacheinvalidationrequired()	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9993071784017804	WITHOUT_CLASSIFICATION	6.928215982196134E-4	IMPLEMENTATION
sort first by role name	WITHOUT_CLASSIFICATION	0.9999768129166935	WITHOUT_CLASSIFICATION	2.3187083306422453E-5	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9999851671749379	WITHOUT_CLASSIFICATION	1.483282506203243E-5	IMPLEMENTATION
then by fk	WITHOUT_CLASSIFICATION	0.9999945369561298	WITHOUT_CLASSIFICATION	5.463043870135177E-6	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999817760727957	WITHOUT_CLASSIFICATION	1.8223927204196263E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999817760727957	WITHOUT_CLASSIFICATION	1.8223927204196263E-5	IMPLEMENTATION
an existing collection that was either non-empty or uninitialized is replaced by null or a different collection (if the collection is uninitialized hibernate has no way of knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999999700803438	WITHOUT_CLASSIFICATION	2.991965617844958E-8	IMPLEMENTATION
this method is called when a new non-null collection is persisted or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999983312601346	WITHOUT_CLASSIFICATION	1.668739865317437E-6	IMPLEMENTATION
boolean put = persister.getcache().insert(ck cacheentry)	WITHOUT_CLASSIFICATION	0.9998911803113608	WITHOUT_CLASSIFICATION	1.0881968863923082E-4	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9955849687555081	WITHOUT_CLASSIFICATION	0.004415031244491956	IMPLEMENTATION
do nothing - we only need to notify the cache	WITHOUT_CLASSIFICATION	0.9999229597668885	WITHOUT_CLASSIFICATION	7.704023311152544E-5	IMPLEMENTATION
sort first by entity name	WITHOUT_CLASSIFICATION	0.9999758101807911	WITHOUT_CLASSIFICATION	2.4189819209026893E-5	IMPLEMENTATION
then by id	WITHOUT_CLASSIFICATION	0.999979706111836	WITHOUT_CLASSIFICATION	2.0293888164124142E-5	IMPLEMENTATION
to be safe	WITHOUT_CLASSIFICATION	0.9999853020193826	WITHOUT_CLASSIFICATION	1.469798061731548E-5	IMPLEMENTATION
no transformations took place so handle it as we would a non-instrumented class	WITHOUT_CLASSIFICATION	0.9999805506360445	WITHOUT_CLASSIFICATION	1.944936395544651E-5	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999252310162	WITHOUT_CLASSIFICATION	7.476898380606808E-8	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999252310162	WITHOUT_CLASSIFICATION	7.476898380606808E-8	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9994734776386032	WITHOUT_CLASSIFICATION	5.265223613968924E-4	IMPLEMENTATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999988965541405	WITHOUT_CLASSIFICATION	1.1034458593516194E-6	IMPLEMENTATION
set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999952137345209	WITHOUT_CLASSIFICATION	4.78626547904518E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999840770234734	WITHOUT_CLASSIFICATION	1.5922976526584033E-5	IMPLEMENTATION
invokespecial	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999892766314575	WITHOUT_CLASSIFICATION	1.072336854246293E-5	IMPLEMENTATION
aload_1 load bean	WITHOUT_CLASSIFICATION	0.999969235066231	WITHOUT_CLASSIFICATION	3.076493376897532E-5	IMPLEMENTATION
checkcast cast bean	WITHOUT_CLASSIFICATION	0.9999785904584305	WITHOUT_CLASSIFICATION	2.1409541569477426E-5	IMPLEMENTATION
astore_3 store bean	WITHOUT_CLASSIFICATION	0.9999404685476188	WITHOUT_CLASSIFICATION	5.953145238120609E-5	IMPLEMENTATION
aload_2 args	WITHOUT_CLASSIFICATION	0.9999614319628144	WITHOUT_CLASSIFICATION	3.856803718560093E-5	IMPLEMENTATION
iconst_i continue to aastore growing stack is 1	WITHOUT_CLASSIFICATION	0.9999917396921761	WITHOUT_CLASSIFICATION	8.260307823872612E-6	IMPLEMENTATION
new	WITHOUT_CLASSIFICATION	0.9999858155425523	WITHOUT_CLASSIFICATION	1.4184457447790807E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999838754860927	WITHOUT_CLASSIFICATION	1.6124513907314032E-5	IMPLEMENTATION
aload_3 load the raw bean	WITHOUT_CLASSIFICATION	0.9999849088944606	WITHOUT_CLASSIFICATION	1.5091105539417193E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
aastore args	WITHOUT_CLASSIFICATION	0.9999605143069101	WITHOUT_CLASSIFICATION	3.9485693089966196E-5	IMPLEMENTATION
| this | bean | args | i | raw bean | exception |	WITHOUT_CLASSIFICATION	0.9999624094345105	WITHOUT_CLASSIFICATION	3.759056548938506E-5	IMPLEMENTATION
required to exception table iconst_0 i	WITHOUT_CLASSIFICATION	0.9998935333304779	WITHOUT_CLASSIFICATION	1.0646666952210175E-4	IMPLEMENTATION
istore_3 store i	WITHOUT_CLASSIFICATION	0.999756931951197	WITHOUT_CLASSIFICATION	2.4306804880288267E-4	IMPLEMENTATION
aload_1 load the bean	WITHOUT_CLASSIFICATION	0.9999846142766181	WITHOUT_CLASSIFICATION	1.5385723381848006E-5	IMPLEMENTATION
checkcast cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999956746648033	WITHOUT_CLASSIFICATION	4.325335196644778E-6	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999492694605826	WITHOUT_CLASSIFICATION	5.073053941746933E-5	IMPLEMENTATION
start region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9999462216391147	WITHOUT_CLASSIFICATION	5.3778360885144616E-5	IMPLEMENTATION
iinc 3 1	WITHOUT_CLASSIFICATION	0.9999324062444795	WITHOUT_CLASSIFICATION	6.759375552046343E-5	IMPLEMENTATION
aload 4 load the raw bean	WITHOUT_CLASSIFICATION	0.9999887120556822	WITHOUT_CLASSIFICATION	1.128794431788377E-5	IMPLEMENTATION
aload_2 load the args	WITHOUT_CLASSIFICATION	0.9999811195532491	WITHOUT_CLASSIFICATION	1.888044675092131E-5	IMPLEMENTATION
iconst_i	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
aaload	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999838494050786	WITHOUT_CLASSIFICATION	1.615059492144706E-5	IMPLEMENTATION
checkcast (case of primitive type) invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999924754305685	WITHOUT_CLASSIFICATION	7.524569431656101E-6	IMPLEMENTATION
checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999962209272509	WITHOUT_CLASSIFICATION	3.7790727491901124E-6	IMPLEMENTATION
current stack len = 2	WITHOUT_CLASSIFICATION	0.9999143079242854	WITHOUT_CLASSIFICATION	8.569207571461492E-5	IMPLEMENTATION
end region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9981833103675828	WITHOUT_CLASSIFICATION	0.0018166896324172575	IMPLEMENTATION
register in exception table	WITHOUT_CLASSIFICATION	0.9999981036859626	WITHOUT_CLASSIFICATION	1.8963140373848756E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999840770234734	WITHOUT_CLASSIFICATION	1.5922976526584033E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999840770234734	WITHOUT_CLASSIFICATION	1.5922976526584033E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999892766314575	WITHOUT_CLASSIFICATION	1.072336854246293E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999892766314575	WITHOUT_CLASSIFICATION	1.072336854246293E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999838754860927	WITHOUT_CLASSIFICATION	1.6124513907314032E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999838494050786	WITHOUT_CLASSIFICATION	1.615059492144706E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999981849748532	WITHOUT_CLASSIFICATION	1.8150251468949917E-6	IMPLEMENTATION
astore 5 store exception	WITHOUT_CLASSIFICATION	0.9999916403766204	WITHOUT_CLASSIFICATION	8.359623379585588E-6	IMPLEMENTATION
new bulkaccessorexception	WITHOUT_CLASSIFICATION	0.9999748815049317	WITHOUT_CLASSIFICATION	2.511849506823848E-5	IMPLEMENTATION
aload 5 load exception	WITHOUT_CLASSIFICATION	0.9999956799827701	WITHOUT_CLASSIFICATION	4.320017229933312E-6	IMPLEMENTATION
iload_3 i	WITHOUT_CLASSIFICATION	0.9999449221239648	WITHOUT_CLASSIFICATION	5.507787603519503E-5	IMPLEMENTATION
invokespecial bulkaccessorexception.<init>	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
athrow	WITHOUT_CLASSIFICATION	0.9999837774333995	WITHOUT_CLASSIFICATION	1.6222566600466284E-5	IMPLEMENTATION
warning classfile only	WITHOUT_CLASSIFICATION	0.9999961754355541	WITHOUT_CLASSIFICATION	3.8245644459705925E-6	IMPLEMENTATION
swallow	WITHOUT_CLASSIFICATION	0.9999838463393234	WITHOUT_CLASSIFICATION	1.6153660676543523E-5	IMPLEMENTATION
local variable | this |	WITHOUT_CLASSIFICATION	0.9999535645375954	WITHOUT_CLASSIFICATION	4.643546240455457E-5	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9998862600264966	WITHOUT_CLASSIFICATION	1.1373997350345756E-4	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9998862600264966	WITHOUT_CLASSIFICATION	1.1373997350345756E-4	IMPLEMENTATION
getfield get field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9999903180841873	WITHOUT_CLASSIFICATION	9.681915812812571E-6	IMPLEMENTATION
areturn return the value of the field	WITHOUT_CLASSIFICATION	0.9999612618146753	WITHOUT_CLASSIFICATION	3.873818532478844E-5	IMPLEMENTATION
local variables | this | callback |	WITHOUT_CLASSIFICATION	0.9999704872121796	WITHOUT_CLASSIFICATION	2.9512787820334148E-5	IMPLEMENTATION
aload_1 load callback	WITHOUT_CLASSIFICATION	0.9999373238574943	WITHOUT_CLASSIFICATION	6.267614250564159E-5	IMPLEMENTATION
putfield put field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9998404330097462	WITHOUT_CLASSIFICATION	1.595669902537876E-4	IMPLEMENTATION
case of non-static field	WITHOUT_CLASSIFICATION	0.9999621101494425	WITHOUT_CLASSIFICATION	3.788985055747833E-5	IMPLEMENTATION
getfield get each field	WITHOUT_CLASSIFICATION	0.9999797148679042	WITHOUT_CLASSIFICATION	2.028513209589731E-5	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999823878684806	WITHOUT_CLASSIFICATION	1.761213151940598E-5	IMPLEMENTATION
ifnonnull	WITHOUT_CLASSIFICATION	0.9999837713919908	WITHOUT_CLASSIFICATION	1.622860800921124E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.9999811893070106	WITHOUT_CLASSIFICATION	1.881069298935173E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.9999811893070106	WITHOUT_CLASSIFICATION	1.881069298935173E-5	IMPLEMENTATION
store_1 each type	WITHOUT_CLASSIFICATION	0.9999714037916095	WITHOUT_CLASSIFICATION	2.859620839049164E-5	IMPLEMENTATION
ldc name of the field	WITHOUT_CLASSIFICATION	0.9999699983800058	WITHOUT_CLASSIFICATION	3.0001619994166866E-5	IMPLEMENTATION
load_1 each type	WITHOUT_CLASSIFICATION	0.9999714037916095	WITHOUT_CLASSIFICATION	2.859620839049164E-5	IMPLEMENTATION
invokeinterface invoke callback.read() each type	WITHOUT_CLASSIFICATION	0.9999867418645886	WITHOUT_CLASSIFICATION	1.3258135411518672E-5	IMPLEMENTATION
int	WITHOUT_CLASSIFICATION	0.999992872252383	WITHOUT_CLASSIFICATION	7.127747616993794E-6	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999892766314575	WITHOUT_CLASSIFICATION	1.072336854246293E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999838754860927	WITHOUT_CLASSIFICATION	1.6124513907314032E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999838494050786	WITHOUT_CLASSIFICATION	1.615059492144706E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999838494050786	WITHOUT_CLASSIFICATION	1.615059492144706E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999621835871506	WITHOUT_CLASSIFICATION	3.781641284932786E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
putfield	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999892766314575	WITHOUT_CLASSIFICATION	1.072336854246293E-5	IMPLEMENTATION
ldc field name	WITHOUT_CLASSIFICATION	0.999906598119353	WITHOUT_CLASSIFICATION	9.34018806469835E-5	IMPLEMENTATION
getfield old value of the field	WITHOUT_CLASSIFICATION	0.9999885719282212	WITHOUT_CLASSIFICATION	1.1428071778816597E-5	IMPLEMENTATION
invokeinterface callback.write(..)	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999925423192498	WITHOUT_CLASSIFICATION	7.457680750157717E-6	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999925423192498	WITHOUT_CLASSIFICATION	7.457680750157717E-6	IMPLEMENTATION
not array	WITHOUT_CLASSIFICATION	0.9990955150718288	WITHOUT_CLASSIFICATION	9.044849281711389E-4	IMPLEMENTATION
array of reference type	WITHOUT_CLASSIFICATION	0.9999968846452957	WITHOUT_CLASSIFICATION	3.11535470434429E-6	IMPLEMENTATION
boolean	WITHOUT_CLASSIFICATION	0.9999937580731895	WITHOUT_CLASSIFICATION	6.241926810538028E-6	IMPLEMENTATION
byte	WITHOUT_CLASSIFICATION	0.999984687655409	WITHOUT_CLASSIFICATION	1.5312344590899928E-5	IMPLEMENTATION
char	WITHOUT_CLASSIFICATION	0.9999971422499186	WITHOUT_CLASSIFICATION	2.8577500812607193E-6	IMPLEMENTATION
short	WITHOUT_CLASSIFICATION	0.9999840741046471	WITHOUT_CLASSIFICATION	1.5925895352894664E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.999999409817105	WITHOUT_CLASSIFICATION	5.901828949109629E-7	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999847653220585	WITHOUT_CLASSIFICATION	1.5234677941425938E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999847653220585	WITHOUT_CLASSIFICATION	1.5234677941425938E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999795282788423	WITHOUT_CLASSIFICATION	2.0471721157663918E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999795282788423	WITHOUT_CLASSIFICATION	2.0471721157663918E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.999949010106704	WITHOUT_CLASSIFICATION	5.098989329596304E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.999949010106704	WITHOUT_CLASSIFICATION	5.098989329596304E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999992225517201	WITHOUT_CLASSIFICATION	7.774482798171803E-7	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999992225517201	WITHOUT_CLASSIFICATION	7.774482798171803E-7	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999925423192498	WITHOUT_CLASSIFICATION	7.457680750157717E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.999999409817105	WITHOUT_CLASSIFICATION	5.901828949109629E-7	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999847653220585	WITHOUT_CLASSIFICATION	1.5234677941425938E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999847653220585	WITHOUT_CLASSIFICATION	1.5234677941425938E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999795282788423	WITHOUT_CLASSIFICATION	2.0471721157663918E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.999949010106704	WITHOUT_CLASSIFICATION	5.098989329596304E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.999949010106704	WITHOUT_CLASSIFICATION	5.098989329596304E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999992225517201	WITHOUT_CLASSIFICATION	7.774482798171803E-7	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.9999135048470631	WITHOUT_CLASSIFICATION	8.649515293699821E-5	IMPLEMENTATION
mainly for oscache	WITHOUT_CLASSIFICATION	0.9999814483516041	WITHOUT_CLASSIFICATION	1.8551648395861964E-5	IMPLEMENTATION
decrement the lock	WITHOUT_CLASSIFICATION	0.9999825479529366	WITHOUT_CLASSIFICATION	1.7452047063448202E-5	IMPLEMENTATION
create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.999977266856246	WITHOUT_CLASSIFICATION	2.2733143754082718E-5	IMPLEMENTATION
recache the updated state	WITHOUT_CLASSIFICATION	0.9999920989672699	WITHOUT_CLASSIFICATION	7.90103273008325E-6	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999855860324941	WITHOUT_CLASSIFICATION	1.4413967505908796E-5	IMPLEMENTATION
null clientlock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999999790595957	WITHOUT_CLASSIFICATION	2.094040430837467E-8	IMPLEMENTATION
we really could refresh the item if it is not a lock but it might be slower return freshtimestamp < txtimestamp	WITHOUT_CLASSIFICATION	0.9999870422410057	WITHOUT_CLASSIFICATION	1.2957758994364633E-5	IMPLEMENTATION
by requiring < we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999998827962409	WITHOUT_CLASSIFICATION	1.1720375911858948E-7	IMPLEMENTATION
the user provided resulttransformer not the one used with "select new". here to avoid mangling transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.997991062912054	WITHOUT_CLASSIFICATION	0.0020089370879459566	IMPLEMENTATION
disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999642493174464	WITHOUT_CLASSIFICATION	3.575068255361867E-5	IMPLEMENTATION
disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999845519201548	WITHOUT_CLASSIFICATION	1.5448079845144184E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999635961923174	WITHOUT_CLASSIFICATION	3.640380768251772E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999855860324941	WITHOUT_CLASSIFICATION	1.4413967505908796E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999855860324941	WITHOUT_CLASSIFICATION	1.4413967505908796E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999855860324941	WITHOUT_CLASSIFICATION	1.4413967505908796E-5	IMPLEMENTATION
this is called from settingsfactory irregardless trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999972476795637	WITHOUT_CLASSIFICATION	2.7523204364191033E-6	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9999824467835284	WITHOUT_CLASSIFICATION	1.7553216471629582E-5	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9999824467835284	WITHOUT_CLASSIFICATION	1.7553216471629582E-5	IMPLEMENTATION
throw new unsupportedoperationexception("can't write to a readonly object")	WITHOUT_CLASSIFICATION	0.9997623636224721	WITHOUT_CLASSIFICATION	2.3763637752799056E-4	IMPLEMENTATION
assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999999832516284	WITHOUT_CLASSIFICATION	1.6748371619318954E-8	IMPLEMENTATION
persister.setidentifier(result id) before calling interceptor for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999974951932842	WITHOUT_CLASSIFICATION	2.5048067157850382E-6	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9997776458394827	WITHOUT_CLASSIFICATION	2.223541605172204E-4	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9997776458394827	WITHOUT_CLASSIFICATION	2.223541605172204E-4	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999997324831476	WITHOUT_CLASSIFICATION	2.675168524732562E-7	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.999993607742719	WITHOUT_CLASSIFICATION	6.392257281116498E-6	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.999993607742719	WITHOUT_CLASSIFICATION	6.392257281116498E-6	IMPLEMENTATION
classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.999700779027394	WITHOUT_CLASSIFICATION	2.9922097260595454E-4	IMPLEMENTATION
get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999984939422292	WITHOUT_CLASSIFICATION	1.5060577708995138E-6	IMPLEMENTATION
get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999983676244178	WITHOUT_CLASSIFICATION	1.6323755822189158E-6	IMPLEMENTATION
db-objectname	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
mutable	WITHOUT_CLASSIFICATION	0.9999837761623943	WITHOUT_CLASSIFICATION	1.6223837605744885E-5	IMPLEMENTATION
where	WITHOUT_CLASSIFICATION	0.9999622755231583	WITHOUT_CLASSIFICATION	3.772447684171282E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9999256124895479	WITHOUT_CLASSIFICATION	7.438751045206207E-5	IMPLEMENTATION
polymorphism	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.7748148307512215	WITHOUT_CLASSIFICATION	0.22518516924877857	IMPLEMENTATION
id	WITHOUT_CLASSIFICATION	0.9999047832157038	WITHOUT_CLASSIFICATION	9.521678429633356E-5	IMPLEMENTATION
version / timestamp	WITHOUT_CLASSIFICATION	0.9999985466285074	WITHOUT_CLASSIFICATION	1.4533714925772642E-6	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.999962015624628	WITHOUT_CLASSIFICATION	3.798437537190586E-5	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999896970255736	WITHOUT_CLASSIFICATION	1.0302974426499387E-5	IMPLEMENTATION
this is either a <version/> tag with no type attribute or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999945778445475	WITHOUT_CLASSIFICATION	5.422155452507846E-6	IMPLEMENTATION
for version properties marked as being generated make sure they are "always" generated aka "insert" is invalid this is dis-allowed by the dtd but just to make sure	WITHOUT_CLASSIFICATION	0.999999997837418	WITHOUT_CLASSIFICATION	2.1625819546475957E-9	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.999962015624628	WITHOUT_CLASSIFICATION	3.798437537190586E-5	IMPLEMENTATION
( (column) discrim.getcolumniterator().next() ).settype(type)	WITHOUT_CLASSIFICATION	0.9999891422965725	WITHOUT_CLASSIFICATION	1.0857703427395084E-5	IMPLEMENTATION
go ahead and set the lazy here since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.999917667289264	WITHOUT_CLASSIFICATION	8.233271073595755E-5	IMPLEMENTATION
dynamic update	WITHOUT_CLASSIFICATION	0.999993830875578	WITHOUT_CLASSIFICATION	6.169124421958614E-6	IMPLEMENTATION
import	WITHOUT_CLASSIFICATION	0.9999657890986717	WITHOUT_CLASSIFICATION	3.4210901328226023E-5	IMPLEMENTATION
batch size	WITHOUT_CLASSIFICATION	0.9999869874133708	WITHOUT_CLASSIFICATION	1.3012586629187435E-5	IMPLEMENTATION
select before update	WITHOUT_CLASSIFICATION	0.9999952331200003	WITHOUT_CLASSIFICATION	4.766879999787852E-6	IMPLEMENTATION
optimistic lock mode	WITHOUT_CLASSIFICATION	0.9999301596294943	WITHOUT_CLASSIFICATION	6.984037050575976E-5	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999743431456732	WITHOUT_CLASSIFICATION	2.565685432671936E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999948510091597	WITHOUT_CLASSIFICATION	5.148990840298989E-6	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999983676244178	WITHOUT_CLASSIFICATION	1.6323755822189158E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999941448376932	WITHOUT_CLASSIFICATION	5.85516230676638E-6	IMPLEMENTATION
joined subclasses	WITHOUT_CLASSIFICATION	0.9999907470498093	WITHOUT_CLASSIFICATION	9.25295019066002E-6	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999890999247469	WITHOUT_CLASSIFICATION	1.0900075253091453E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9999256124895479	WITHOUT_CLASSIFICATION	7.438751045206207E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999948510091597	WITHOUT_CLASSIFICATION	5.148990840298989E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999941448376932	WITHOUT_CLASSIFICATION	5.85516230676638E-6	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999890999247469	WITHOUT_CLASSIFICATION	1.0900075253091453E-5	IMPLEMENTATION
model.getkey().settype( new type( model.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9999761135818532	WITHOUT_CLASSIFICATION	2.3886418146705007E-5	IMPLEMENTATION
tablename	WITHOUT_CLASSIFICATION	0.9999837886496699	WITHOUT_CLASSIFICATION	1.62113503300527E-5	IMPLEMENTATION
join.getkey().settype( new type( lazz.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9999761135818532	WITHOUT_CLASSIFICATION	2.3886418146705007E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999941448376932	WITHOUT_CLASSIFICATION	5.85516230676638E-6	IMPLEMENTATION
column(s)	WITHOUT_CLASSIFICATION	0.9999837186585602	WITHOUT_CLASSIFICATION	1.6281341439844384E-5	IMPLEMENTATION
column index	WITHOUT_CLASSIFICATION	0.9994987932272533	WITHOUT_CLASSIFICATION	5.012067727466991E-4	IMPLEMENTATION
column unique-key	WITHOUT_CLASSIFICATION	0.9998694028214759	WITHOUT_CLASSIFICATION	1.305971785242197E-4	IMPLEMENTATION
automatically makes a column with the default name if none is specifed by xml	WITHOUT_CLASSIFICATION	0.9999999088373351	WITHOUT_CLASSIFICATION	9.116266484156457E-8	IMPLEMENTATION
for an any	WITHOUT_CLASSIFICATION	0.9999987315694011	WITHOUT_CLASSIFICATION	1.2684305988189466E-6	IMPLEMENTATION
insertable simply because that is the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9977869149683015	WITHOUT_CLASSIFICATION	0.002213085031698498	IMPLEMENTATION
the user specifically supplied insert="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999945071745147	WITHOUT_CLASSIFICATION	5.4928254853339395E-6	IMPLEMENTATION
properties generated on update can never be updateable	WITHOUT_CLASSIFICATION	0.9999599073255068	WITHOUT_CLASSIFICATION	4.009267449325831E-5	IMPLEMENTATION
updateable only because the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9981568810200026	WITHOUT_CLASSIFICATION	0.0018431189799975353	IMPLEMENTATION
the user specifically supplied update="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999945071745147	WITHOUT_CLASSIFICATION	5.4928254853339395E-6	IMPLEMENTATION
rolename	WITHOUT_CLASSIFICATION	0.9999848047040726	WITHOUT_CLASSIFICATION	1.5195295927309925E-5	IMPLEMENTATION
fetch strategy	WITHOUT_CLASSIFICATION	0.9999674294167294	WITHOUT_CLASSIFICATION	3.25705832705188E-5	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999867900909502	WITHOUT_CLASSIFICATION	1.3209909049720061E-5	IMPLEMENTATION
tablename = mappings.getnamingstrategy().propertytotablename( classname path )	WITHOUT_CLASSIFICATION	0.9998121864479197	WITHOUT_CLASSIFICATION	1.8781355208040388E-4	IMPLEMENTATION
sort	WITHOUT_CLASSIFICATION	0.9999559351060774	WITHOUT_CLASSIFICATION	4.4064893922619396E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999948510091597	WITHOUT_CLASSIFICATION	5.148990840298989E-6	IMPLEMENTATION
unsorted natural comparator.class.name	WITHOUT_CLASSIFICATION	0.9999733780891469	WITHOUT_CLASSIFICATION	2.6621910853182743E-5	IMPLEMENTATION
orphan delete (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9995722745007712	WITHOUT_CLASSIFICATION	4.27725499228703E-4	IMPLEMENTATION
set up second pass	WITHOUT_CLASSIFICATION	0.9999758753297546	WITHOUT_CLASSIFICATION	2.4124670245450976E-5	IMPLEMENTATION
an "embedded" component (composite ids and unique) note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9998307041034232	WITHOUT_CLASSIFICATION	1.6929589657678555E-4	IMPLEMENTATION
a nested composite element	WITHOUT_CLASSIFICATION	0.9999717104610538	WITHOUT_CLASSIFICATION	2.8289538946254622E-5	IMPLEMENTATION
for an any we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999942229883132	WITHOUT_CLASSIFICATION	5.777011686865713E-6	IMPLEMENTATION
note special case one-to-one constrained=false cannot be proxied so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999999624015766	WITHOUT_CLASSIFICATION	3.7598423431806394E-8	IMPLEMENTATION
use old (hb 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.99999976928327	WITHOUT_CLASSIFICATION	2.3071673012298446E-7	IMPLEMENTATION
lazy = !join	WITHOUT_CLASSIFICATION	0.9995707021662813	WITHOUT_CLASSIFICATION	4.2929783371869085E-4	IMPLEMENTATION
generator	WITHOUT_CLASSIFICATION	0.9999866151100464	WITHOUT_CLASSIFICATION	1.3384889953705205E-5	IMPLEMENTATION
id unsaved-value	WITHOUT_CLASSIFICATION	0.9997781461653436	WITHOUT_CLASSIFICATION	2.218538346563542E-4	IMPLEMENTATION
version unsaved-value	WITHOUT_CLASSIFICATION	0.9999895110933587	WITHOUT_CLASSIFICATION	1.048890664132241E-5	IMPLEMENTATION
not necessarily a unique property reference	WITHOUT_CLASSIFICATION	0.9997186020364414	WITHOUT_CLASSIFICATION	2.8139796355873103E-4	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999891422965725	WITHOUT_CLASSIFICATION	1.0857703427395084E-5	IMPLEMENTATION
contained elements	WITHOUT_CLASSIFICATION	0.9999777708535895	WITHOUT_CLASSIFICATION	2.2229146410385657E-5	IMPLEMENTATION
for non-inverse one-to-many with a not-null fk add a backref!	WITHOUT_CLASSIFICATION	0.9999134399469359	WITHOUT_CLASSIFICATION	8.656005306399584E-5	IMPLEMENTATION
bind the where	WITHOUT_CLASSIFICATION	0.9999469641991848	WITHOUT_CLASSIFICATION	5.303580081522609E-5	IMPLEMENTATION
bind the order-by	WITHOUT_CLASSIFICATION	0.9999770814889865	WITHOUT_CLASSIFICATION	2.291851101352519E-5	IMPLEMENTATION
bind the filters	WITHOUT_CLASSIFICATION	0.9999774444795647	WITHOUT_CLASSIFICATION	2.2555520435210088E-5	IMPLEMENTATION
overriding inherited meta attribute. hbx-621 & hbx-793	WITHOUT_CLASSIFICATION	0.9999888423090223	WITHOUT_CLASSIFICATION	1.1157690977708367E-5	IMPLEMENTATION
first iterate over all elements capable of defining an extends attribute collecting all found extends references if they cannot be resolved against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999684099347	WITHOUT_CLASSIFICATION	3.159006533592087E-8	IMPLEMENTATION
mappings might contain either the "raw" extends name (in the case of an entity-name mapping) or a fqn (in the case of a pojo mapping).	WITHOUT_CLASSIFICATION	0.9999966253915678	WITHOUT_CLASSIFICATION	3.3746084321986495E-6	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9979981082624737	WITHOUT_CLASSIFICATION	0.002001891737526225	IMPLEMENTATION
sessionfactory name	WITHOUT_CLASSIFICATION	0.9999739254272804	WITHOUT_CLASSIFICATION	2.607457271961614E-5	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9999016366881519	WITHOUT_CLASSIFICATION	9.836331184810465E-5	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9999016366881519	WITHOUT_CLASSIFICATION	9.836331184810465E-5	IMPLEMENTATION
interrogate jdbc metadata	WITHOUT_CLASSIFICATION	0.9999791921146562	WITHOUT_CLASSIFICATION	2.0807885343708562E-5	IMPLEMENTATION
user supplied jdbc connections	WITHOUT_CLASSIFICATION	0.9999895763336138	WITHOUT_CLASSIFICATION	1.0423666386183881E-5	IMPLEMENTATION
use dialect default properties	WITHOUT_CLASSIFICATION	0.9999977202658471	WITHOUT_CLASSIFICATION	2.2797341528287207E-6	IMPLEMENTATION
transaction settings	WITHOUT_CLASSIFICATION	0.999995983029918	WITHOUT_CLASSIFICATION	4.016970081953699E-6	IMPLEMENTATION
sql generation settings	WITHOUT_CLASSIFICATION	0.9999991083371628	WITHOUT_CLASSIFICATION	8.916628372380015E-7	IMPLEMENTATION
query parser settings	WITHOUT_CLASSIFICATION	0.9999930917528297	WITHOUT_CLASSIFICATION	6.908247170357555E-6	IMPLEMENTATION
second-level / query cache	WITHOUT_CLASSIFICATION	0.9999946256548629	WITHOUT_CLASSIFICATION	5.374345137194226E-6	IMPLEMENTATION
the cache provider is needed when we either have second-level cache enabled or query cache enabled. note that usesecondlevelcache is enabled by default	WITHOUT_CLASSIFICATION	0.9991200453154883	WITHOUT_CLASSIFICATION	8.799546845118222E-4	IMPLEMENTATION
sql exception converter	WITHOUT_CLASSIFICATION	0.9999976318512996	WITHOUT_CLASSIFICATION	2.3681487002800294E-6	IMPLEMENTATION
statistics and logging	WITHOUT_CLASSIFICATION	0.9999968026692113	WITHOUT_CLASSIFICATION	3.1973307886430303E-6	IMPLEMENTATION
settings.setshowsqlenabled(showsql)	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
settings.setformatsqlenabled(formatsql)	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
schema export	WITHOUT_CLASSIFICATION	0.9999643974276701	WITHOUT_CLASSIFICATION	3.5602572329930826E-5	IMPLEMENTATION
string provider = properties.getproperty( environment.bytecode_provider ) log.info( "bytecode provider name " + provider ) bytecodeprovider bytecodeprovider = buildbytecodeprovider( provider ) settings.setbytecodeprovider( bytecodeprovider )	WITHOUT_CLASSIFICATION	0.9999672778068655	WITHOUT_CLASSIFICATION	3.272219313455677E-5	IMPLEMENTATION
legacy behavior apply the bridge	WITHOUT_CLASSIFICATION	0.9999901794689822	WITHOUT_CLASSIFICATION	9.820531017914772E-6	IMPLEMENTATION
maybe a concrete sqlpropertyresult type but map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.99962449447856	WITHOUT_CLASSIFICATION	3.755055214399469E-4	IMPLEMENTATION
if dotted and not load-collection nor return-join regular property	WITHOUT_CLASSIFICATION	0.99970037820124	WITHOUT_CLASSIFICATION	2.996217987599361E-4	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907 private bytecodeprovider bytecodeprovider	WITHOUT_CLASSIFICATION	0.9073281602271357	WITHOUT_CLASSIFICATION	0.09267183977286432	IMPLEMENTATION
public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999917413023761	WITHOUT_CLASSIFICATION	8.258697623880714E-6	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999913777758739	WITHOUT_CLASSIFICATION	8.62222412610375E-6	IMPLEMENTATION
package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999866759250669	WITHOUT_CLASSIFICATION	1.3324074933093074E-4	IMPLEMENTATION
void setshowsqlenabled(boolean b) { showsql = b } void setformatsqlenabled(boolean b) { formatsql = b }	WITHOUT_CLASSIFICATION	0.9998737044956303	WITHOUT_CLASSIFICATION	1.2629550436963596E-4	IMPLEMENTATION
public bytecodeprovider getbytecodeprovider() { return bytecodeprovider } void setbytecodeprovider(bytecodeprovider bytecodeprovider) { this.bytecodeprovider = bytecodeprovider }	WITHOUT_CLASSIFICATION	0.9999839432500589	WITHOUT_CLASSIFICATION	1.605674994105503E-5	IMPLEMENTATION
using local since the inheritedmetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999243730005645	WITHOUT_CLASSIFICATION	7.562699943555664E-5	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907	WITHOUT_CLASSIFICATION	0.9073281602271357	WITHOUT_CLASSIFICATION	0.09267183977286432	IMPLEMENTATION
protected list extendsqueue	WITHOUT_CLASSIFICATION	0.9999873604689891	WITHOUT_CLASSIFICATION	1.2639531010952034E-5	IMPLEMENTATION
extendsqueue = new arraylist()	WITHOUT_CLASSIFICATION	0.9999286505705142	WITHOUT_CLASSIFICATION	7.13494294858625E-5	IMPLEMENTATION
componenttuplizerfactory = new componenttuplizerfactory()	WITHOUT_CLASSIFICATION	0.999934111236798	WITHOUT_CLASSIFICATION	6.588876320203265E-5	IMPLEMENTATION
if doc is null then for whatever reason the cached file cannot be used	WITHOUT_CLASSIFICATION	0.9999999956764624	WITHOUT_CLASSIFICATION	4.323537678371514E-9	IMPLEMENTATION
drop them in reverse order in case db needs it done that way	WITHOUT_CLASSIFICATION	0.9999964591881955	WITHOUT_CLASSIFICATION	3.540811804420474E-6	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999913777758739	WITHOUT_CLASSIFICATION	8.62222412610375E-6	IMPLEMENTATION
this method may be called many times!!	WITHOUT_CLASSIFICATION	0.9997708442540078	WITHOUT_CLASSIFICATION	2.2915574599223363E-4	IMPLEMENTATION
iterator iterator = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9998671822309912	WITHOUT_CLASSIFICATION	1.3281776900879574E-4	IMPLEMENTATION
iterator iter = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9998672719776001	WITHOUT_CLASSIFICATION	1.3272802239988615E-4	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999796600796251	WITHOUT_CLASSIFICATION	2.0339920374920285E-5	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999796600796251	WITHOUT_CLASSIFICATION	2.0339920374920285E-5	IMPLEMENTATION
settings.setcomponenttuplizerfactory( this.getcomponenttuplizerfactory() )	WITHOUT_CLASSIFICATION	0.9999725479747231	WITHOUT_CLASSIFICATION	2.7452025276895127E-5	IMPLEMENTATION
private final list extendsqueue	WITHOUT_CLASSIFICATION	0.999999187716122	WITHOUT_CLASSIFICATION	8.122838780769744E-7	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9999620293500796	WITHOUT_CLASSIFICATION	3.797064992045998E-5	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9999620293500796	WITHOUT_CLASSIFICATION	3.797064992045998E-5	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9979981082624737	WITHOUT_CLASSIFICATION	0.002001891737526225	IMPLEMENTATION
set use_reflection_optimizer to false to fix hhh-227	WITHOUT_CLASSIFICATION	0.9941604739606171	WITHOUT_CLASSIFICATION	0.005839526039382957	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9979728757709161	WITHOUT_CLASSIFICATION	0.002027124229083991	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.999968241118427	WITHOUT_CLASSIFICATION	3.1758881573114174E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9994734776386032	WITHOUT_CLASSIFICATION	5.265223613968924E-4	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9979728757709161	WITHOUT_CLASSIFICATION	0.002027124229083991	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.999968241118427	WITHOUT_CLASSIFICATION	3.1758881573114174E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8385843150754997	WITHOUT_CLASSIFICATION	0.16141568492450034	IMPLEMENTATION
maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999998973246343	WITHOUT_CLASSIFICATION	1.0267536560532025E-7	IMPLEMENTATION
the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999903992189333	WITHOUT_CLASSIFICATION	9.60078106670261E-6	IMPLEMENTATION
the element has changed	WITHOUT_CLASSIFICATION	0.9999997990222284	WITHOUT_CLASSIFICATION	2.0097777162530977E-7	IMPLEMENTATION
careful these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9988447818655585	WITHOUT_CLASSIFICATION	0.001155218134441543	IMPLEMENTATION
needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9711412926261173	WITHOUT_CLASSIFICATION	0.02885870737388269	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9994625883742438	WITHOUT_CLASSIFICATION	5.374116257561382E-4	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9994625883742438	WITHOUT_CLASSIFICATION	5.374116257561382E-4	IMPLEMENTATION
do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999955184902339	WITHOUT_CLASSIFICATION	4.481509766055801E-6	IMPLEMENTATION
short-circuit(s) no new elements the old list contains only orphans no old elements so no orphans neither	WITHOUT_CLASSIFICATION	0.9999999770992093	WITHOUT_CLASSIFICATION	2.2900790665912286E-8	IMPLEMENTATION
create the collection holding the orphans	WITHOUT_CLASSIFICATION	0.9999873022319505	WITHOUT_CLASSIFICATION	1.269776804943289E-5	IMPLEMENTATION
collect entityidentifier(s) of the current elements - add them into a hashset for fast access	WITHOUT_CLASSIFICATION	0.9999992605559904	WITHOUT_CLASSIFICATION	7.394440096526541E-7	IMPLEMENTATION
iterate over the old list	WITHOUT_CLASSIFICATION	0.9999995253170959	WITHOUT_CLASSIFICATION	4.7468290400140704E-7	IMPLEMENTATION
(array==null) ? templist.size()	WITHOUT_CLASSIFICATION	0.9999722742257022	WITHOUT_CLASSIFICATION	2.7725774297743096E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9994734776386032	WITHOUT_CLASSIFICATION	5.265223613968924E-4	IMPLEMENTATION
(array==null) ? templist.get(i)	WITHOUT_CLASSIFICATION	0.9999722742257022	WITHOUT_CLASSIFICATION	2.7725774297743096E-5	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.999997471272389	WITHOUT_CLASSIFICATION	2.528727611009239E-6	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.999997471272389	WITHOUT_CLASSIFICATION	2.528727611009239E-6	IMPLEMENTATION
amazingly these two will work because abstractcollection uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999978599800884	WITHOUT_CLASSIFICATION	2.14001991168252E-6	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8385843150754997	WITHOUT_CLASSIFICATION	0.16141568492450034	IMPLEMENTATION
finally what it's all about	WITHOUT_CLASSIFICATION	0.9974632955441196	WITHOUT_CLASSIFICATION	0.002536704455880409	IMPLEMENTATION
note that if we load this collection from a cartesian product the multiplicity would be broken so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999997465777961	WITHOUT_CLASSIFICATION	2.5342220388728453E-7	IMPLEMENTATION
anyway here we implement <set> semantics for a <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9926632776231612	WITHOUT_CLASSIFICATION	0.00733672237683873	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999986665614455	WITHOUT_CLASSIFICATION	1.3334385545768639E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999569239294408	WITHOUT_CLASSIFICATION	4.307607055931003E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8385843150754997	WITHOUT_CLASSIFICATION	0.16141568492450034	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999986665614455	WITHOUT_CLASSIFICATION	1.3334385545768639E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999569239294408	WITHOUT_CLASSIFICATION	4.307607055931003E-5	IMPLEMENTATION
public boolean equals(object other) {read()return bag.equals(other)}public int hashcode(object other) {read()return bag.hashcode()}	WITHOUT_CLASSIFICATION	0.9999993457169902	WITHOUT_CLASSIFICATION	6.542830098545352E-7	IMPLEMENTATION
list operations	WITHOUT_CLASSIFICATION	0.9999759455694295	WITHOUT_CLASSIFICATION	2.4054430570536775E-5	IMPLEMENTATION
pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.999969110089096	WITHOUT_CLASSIFICATION	3.088991090408045E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8385843150754997	WITHOUT_CLASSIFICATION	0.16141568492450034	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8385843150754997	WITHOUT_CLASSIFICATION	0.16141568492450034	IMPLEMENTATION
from map	WITHOUT_CLASSIFICATION	0.9999963140601351	WITHOUT_CLASSIFICATION	3.6859398650025367E-6	IMPLEMENTATION
from sortedmap	WITHOUT_CLASSIFICATION	0.9999905664734217	WITHOUT_CLASSIFICATION	9.433526578376397E-6	IMPLEMENTATION
inject the data	WITHOUT_CLASSIFICATION	0.9999965357537445	WITHOUT_CLASSIFICATION	3.464246255613055E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999980300315642	WITHOUT_CLASSIFICATION	1.969968435802154E-6	IMPLEMENTATION
default pool size 20	WITHOUT_CLASSIFICATION	0.9999870268855254	WITHOUT_CLASSIFICATION	1.2973114474527906E-5	IMPLEMENTATION
trying via forname() first to be as close to drivermanager's semantics	WITHOUT_CLASSIFICATION	0.9999963490827914	WITHOUT_CLASSIFICATION	3.650917208591061E-6	IMPLEMENTATION
if debug level is enabled then log the password otherwise mask it	WITHOUT_CLASSIFICATION	0.9997888717642122	WITHOUT_CLASSIFICATION	2.1112823578783009E-4	IMPLEMENTATION
register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999912502288151	WITHOUT_CLASSIFICATION	8.749771184967379E-6	IMPLEMENTATION
wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999962748561816	WITHOUT_CLASSIFICATION	3.725143818511204E-6	IMPLEMENTATION
then bind it	WITHOUT_CLASSIFICATION	0.9999776135670496	WITHOUT_CLASSIFICATION	2.23864329503458E-5	IMPLEMENTATION
try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9998658457393724	WITHOUT_CLASSIFICATION	1.3415426062760721E-4	IMPLEMENTATION
allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9994472696307735	WITHOUT_CLASSIFICATION	5.527303692265422E-4	IMPLEMENTATION
limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999998163271051	WITHOUT_CLASSIFICATION	1.836728949035349E-7	IMPLEMENTATION
allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9997069762178896	WITHOUT_CLASSIFICATION	2.930237821104356E-4	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432526794741	WITHOUT_CLASSIFICATION	5.674732052582677E-5	IMPLEMENTATION
we could register the session against the transaction even though it is not started but we'd have no guarentee of ever getting the map entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999977415925426	WITHOUT_CLASSIFICATION	2.2584074573018907E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999980300315642	WITHOUT_CLASSIFICATION	1.969968435802154E-6	IMPLEMENTATION
private string propertyname	WITHOUT_CLASSIFICATION	0.999997549258271	WITHOUT_CLASSIFICATION	2.450741729024377E-6	IMPLEMENTATION
public propertyprojection project() {return projections.property(getpropertyname())}	WITHOUT_CLASSIFICATION	0.9999961159468329	WITHOUT_CLASSIFICATION	3.884053167022343E-6	IMPLEMENTATION
string[] fk = stringhelper.qualify( "collection_" cp.getkeycolumnnames() )	WITHOUT_CLASSIFICATION	0.9998789594754649	WITHOUT_CLASSIFICATION	1.2104052453508146E-4	IMPLEMENTATION
" collection_ where " +	WITHOUT_CLASSIFICATION	0.999854543491664	WITHOUT_CLASSIFICATION	1.4545650833589632E-4	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9999620246760661	WITHOUT_CLASSIFICATION	3.797532393387577E-5	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9999620246760661	WITHOUT_CLASSIFICATION	3.797532393387577E-5	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999980300315642	WITHOUT_CLASSIFICATION	1.969968435802154E-6	IMPLEMENTATION
the following two lines were added to ensure that this.params is not null which can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999831467867398	WITHOUT_CLASSIFICATION	1.685321326021921E-5	IMPLEMENTATION
with two-deep subqueries the same alias would get generated for both using the old method (criteriaquery.generatesqlalias()) so that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999999756944601	WITHOUT_CLASSIFICATION	2.4305539837692498E-8	IMPLEMENTATION
implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9899447318897819	WITHOUT_CLASSIFICATION	0.010055268110218132	IMPLEMENTATION
pull off the last " "	WITHOUT_CLASSIFICATION	0.9999921536118425	WITHOUT_CLASSIFICATION	7.846388157521244E-6	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999837158978664	WITHOUT_CLASSIFICATION	1.6284102133613536E-5	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999958588155288	WITHOUT_CLASSIFICATION	4.141184471265571E-6	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource)	WITHOUT_CLASSIFICATION	0.9999182092571053	WITHOUT_CLASSIFICATION	8.179074289468671E-5	IMPLEMENTATION
not_supported_should_use_jdbc3_preparedstatement.getgeneratedkeys_method	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999957316034431	WITHOUT_CLASSIFICATION	4.2683965568329776E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
oracle did add support for ansi case statements in 9i	WITHOUT_CLASSIFICATION	0.9999955704144217	WITHOUT_CLASSIFICATION	4.42958557840095E-6	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999991795162593	WITHOUT_CLASSIFICATION	8.204837407588085E-7	IMPLEMENTATION
informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999946242437848	WITHOUT_CLASSIFICATION	5.375756215186849E-6	IMPLEMENTATION
or byte or text? or money	WITHOUT_CLASSIFICATION	0.999980262306637	WITHOUT_CLASSIFICATION	1.9737693363029322E-5	IMPLEMENTATION
strip table-owner because informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999743442368616	WITHOUT_CLASSIFICATION	2.5655763138309026E-5	IMPLEMENTATION
build the map of standard ansi sql aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989543663542	WITHOUT_CLASSIFICATION	1.045633645855843E-6	IMPLEMENTATION
pre h3.2 behavior super.getreturntype(ct m)	WITHOUT_CLASSIFICATION	0.9999858869632832	WITHOUT_CLASSIFICATION	1.4113036716925285E-5	IMPLEMENTATION
finally use the sqltype if == on hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9978079668059369	WITHOUT_CLASSIFICATION	0.0021920331940630568	IMPLEMENTATION
because numeric can be anything	WITHOUT_CLASSIFICATION	0.999949911516746	WITHOUT_CLASSIFICATION	5.008848325410136E-5	IMPLEMENTATION
constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792084483132	WITHOUT_CLASSIFICATION	2.079155168669452E-5	IMPLEMENTATION
standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999989860295814	WITHOUT_CLASSIFICATION	1.0139704185987015E-6	IMPLEMENTATION
map second/minute/hour/day/month/year to ansi extract() override on subclasses	WITHOUT_CLASSIFICATION	0.9998782188027308	WITHOUT_CLASSIFICATION	1.2178119726915302E-4	IMPLEMENTATION
register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999893983432212	WITHOUT_CLASSIFICATION	1.060165677878793E-5	IMPLEMENTATION
database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997428643584351	WITHOUT_CLASSIFICATION	2.5713564156487384E-4	IMPLEMENTATION
hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998329752680786	WITHOUT_CLASSIFICATION	1.670247319214279E-4	IMPLEMENTATION
keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997174966171812	WITHOUT_CLASSIFICATION	2.825033828187466E-4	IMPLEMENTATION
native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999902023503701	WITHOUT_CLASSIFICATION	9.797649629898951E-6	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996442659165566	WITHOUT_CLASSIFICATION	3.557340834433386E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996804813694691	WITHOUT_CLASSIFICATION	3.195186305308456E-4	IMPLEMENTATION
guid support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996159139856594	WITHOUT_CLASSIFICATION	3.8408601434062754E-4	IMPLEMENTATION
limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996159139856594	WITHOUT_CLASSIFICATION	3.8408601434062754E-4	IMPLEMENTATION
by default we report no support	WITHOUT_CLASSIFICATION	0.9999806059550852	WITHOUT_CLASSIFICATION	1.9394044914736048E-5	IMPLEMENTATION
by default we report no support for nowait lock semantics	WITHOUT_CLASSIFICATION	0.999992879598376	WITHOUT_CLASSIFICATION	7.120401623956282E-6	IMPLEMENTATION
table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996887410125136	WITHOUT_CLASSIFICATION	3.112589874864709E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999709566050855	WITHOUT_CLASSIFICATION	2.904339491450307E-4	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994845822015824	WITHOUT_CLASSIFICATION	5.154177984175862E-4	IMPLEMENTATION
current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994761074260836	WITHOUT_CLASSIFICATION	5.23892573916293E-4	IMPLEMENTATION
sqlexception support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996334344251313	WITHOUT_CLASSIFICATION	3.6656557486872663E-4	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996162420376951	WITHOUT_CLASSIFICATION	3.837579623049781E-4	IMPLEMENTATION
identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995098155394128	WITHOUT_CLASSIFICATION	4.90184460587322E-4	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996159139856594	WITHOUT_CLASSIFICATION	3.8408601434062754E-4	IMPLEMENTATION
grrr for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999961628516046	WITHOUT_CLASSIFICATION	3.8371483952688215E-6	IMPLEMENTATION
informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737378697368	WITHOUT_CLASSIFICATION	2.626213026326158E-5	IMPLEMENTATION
return false here as most databases do not properly support this construct	WITHOUT_CLASSIFICATION	0.8573246224773972	IMPLEMENTATION	0.14267537752260281	WITHOUT_CLASSIFICATION
mckoi has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999996229802862	WITHOUT_CLASSIFICATION	3.770197137976801E-7	IMPLEMENTATION
oracle8 and previous define only a "date" type which is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.999999492804864	WITHOUT_CLASSIFICATION	5.071951359108067E-7	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.99998607828102	WITHOUT_CLASSIFICATION	1.3921718979901849E-5	IMPLEMENTATION
" cascade"	WITHOUT_CLASSIFICATION	0.9999662771327398	WITHOUT_CLASSIFICATION	3.3722867260192324E-5	IMPLEMENTATION
trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999944396693748	WITHOUT_CLASSIFICATION	5.560330625153582E-6	IMPLEMENTATION
public boolean droptemporarytableafteruse() {we have to because postgres sets current txto rollback only after a failed create tablereturn true}	WITHOUT_CLASSIFICATION	0.9999987872929771	WITHOUT_CLASSIFICATION	1.212707022982511E-6	IMPLEMENTATION
check violation	WITHOUT_CLASSIFICATION	0.9998267267840945	WITHOUT_CLASSIFICATION	1.7327321590561058E-4	IMPLEMENTATION
unique violation	WITHOUT_CLASSIFICATION	0.9999218080203	WITHOUT_CLASSIFICATION	7.819197970007929E-5	IMPLEMENTATION
foreign key violation	WITHOUT_CLASSIFICATION	0.9999645805253513	WITHOUT_CLASSIFICATION	3.5419474648811595E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
not null violation	WITHOUT_CLASSIFICATION	0.9992623464671836	WITHOUT_CLASSIFICATION	7.376535328164649E-4	IMPLEMENTATION
all other	WITHOUT_CLASSIFICATION	0.9999613073711799	WITHOUT_CLASSIFICATION	3.8692628820011776E-5	IMPLEMENTATION
register the type of the out param - postgresql uses types.other	WITHOUT_CLASSIFICATION	0.9999966839702805	WITHOUT_CLASSIFICATION	3.316029719545386E-6	IMPLEMENTATION
seems to not really public boolean supportsrowvalueconstructorsyntax() { return true }	WITHOUT_CLASSIFICATION	0.9999535877820541	WITHOUT_CLASSIFICATION	4.641221794585585E-5	IMPLEMENTATION
seems to have spotty lob suppport	WITHOUT_CLASSIFICATION	0.9999364583882389	WITHOUT_CLASSIFICATION	6.354161176117042E-5	IMPLEMENTATION
hhh-2300	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
ignore (probably h2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9998230238804477	WITHOUT_CLASSIFICATION	1.7697611955222947E-4	IMPLEMENTATION
numeric functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426989594091	WITHOUT_CLASSIFICATION	5.730104059085934E-5	IMPLEMENTATION
string functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999919789528916	WITHOUT_CLASSIFICATION	8.021047108419743E-6	IMPLEMENTATION
time and date functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999709800415277	WITHOUT_CLASSIFICATION	2.9019958472288758E-5	IMPLEMENTATION
system functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998756623613383	WITHOUT_CLASSIFICATION	1.2433763866170075E-4	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.999628772654852	WITHOUT_CLASSIFICATION	3.712273451480797E-4	IMPLEMENTATION
23000 check constraint violation {0} 23001 unique index or primary key violation {0}	WITHOUT_CLASSIFICATION	0.999769269160201	WITHOUT_CLASSIFICATION	2.3073083979896185E-4	IMPLEMENTATION
display the dialect version.	WITHOUT_CLASSIFICATION	0.999995558755174	WITHOUT_CLASSIFICATION	4.4412448260105885E-6	IMPLEMENTATION
the rdms concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999597365189536	WITHOUT_CLASSIFICATION	4.026348104621907E-5	IMPLEMENTATION
dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999964187083908	WITHOUT_CLASSIFICATION	3.581291609203367E-5	IMPLEMENTATION
original dialect.java returns " for update"	WITHOUT_CLASSIFICATION	0.9999306375646082	WITHOUT_CLASSIFICATION	6.936243539180868E-5	IMPLEMENTATION
verify the state of this new method in hibernate 3.0 dialect.java	WITHOUT_CLASSIFICATION	0.9999992530604788	WITHOUT_CLASSIFICATION	7.469395212861614E-7	IMPLEMENTATION
origial dialect.java returns true	WITHOUT_CLASSIFICATION	0.9999760786230195	WITHOUT_CLASSIFICATION	2.3921376980520795E-5	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999868020294743	WITHOUT_CLASSIFICATION	1.3197970525612386E-5	IMPLEMENTATION
sequence methods - start. the rdms dialect needs these	WITHOUT_CLASSIFICATION	0.9999789498170573	WITHOUT_CLASSIFICATION	2.105018294279125E-5	IMPLEMENTATION
methods to make it possible to use the native id generator	WITHOUT_CLASSIFICATION	0.9991805829516839	WITHOUT_CLASSIFICATION	8.194170483160846E-4	IMPLEMENTATION
the where clause was added to eliminate this statement from brute force searches.	WITHOUT_CLASSIFICATION	0.999993660278327	WITHOUT_CLASSIFICATION	6.33972167302129E-6	IMPLEMENTATION
sequence methods - end	WITHOUT_CLASSIFICATION	0.9999425262217779	WITHOUT_CLASSIFICATION	5.747377822203579E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.99998607828102	WITHOUT_CLASSIFICATION	1.3921718979901849E-5	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9958942505955708	WITHOUT_CLASSIFICATION	0.004105749404429184	IMPLEMENTATION
used with drop table to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999835539826581	WITHOUT_CLASSIFICATION	1.6446017341756477E-5	IMPLEMENTATION
rdms supports the union all clause.	WITHOUT_CLASSIFICATION	0.9998777264734502	WITHOUT_CLASSIFICATION	1.222735265498848E-4	IMPLEMENTATION
rdms has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999996229520138	WITHOUT_CLASSIFICATION	3.770479861487855E-7	IMPLEMENTATION
multi-param dialect functions	WITHOUT_CLASSIFICATION	0.9999787457292513	WITHOUT_CLASSIFICATION	2.1254270748832656E-5	IMPLEMENTATION
function templates	WITHOUT_CLASSIFICATION	0.9999709358456371	WITHOUT_CLASSIFICATION	2.9064154362805163E-5	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.999628772654852	WITHOUT_CLASSIFICATION	3.712273451480797E-4	IMPLEMENTATION
this assumes schema support which is present in 1.8.0 and later	WITHOUT_CLASSIFICATION	0.9999785553079511	WITHOUT_CLASSIFICATION	2.144469204889995E-5	IMPLEMENTATION
hsqldb only supports read_uncommitted transaction isolation	WITHOUT_CLASSIFICATION	0.9999141832198055	WITHOUT_CLASSIFICATION	8.581678019441638E-5	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999920421434434	WITHOUT_CLASSIFICATION	7.957856556481126E-6	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9999431503602425	WITHOUT_CLASSIFICATION	5.6849639757557955E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9999239778323106	WITHOUT_CLASSIFICATION	7.602216768935787E-5	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999811402957617	WITHOUT_CLASSIFICATION	1.885970423826285E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9962454655857597	WITHOUT_CLASSIFICATION	0.0037545344142403624	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999990839482088	WITHOUT_CLASSIFICATION	9.160517911217724E-7	IMPLEMENTATION
timesten has no blob/clob support but these types may be suitable for some applications. the length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999872898740856	WITHOUT_CLASSIFICATION	1.2710125914425915E-5	IMPLEMENTATION
new methods in dialect3	WITHOUT_CLASSIFICATION	0.999997616120764	WITHOUT_CLASSIFICATION	2.3838792359032902E-6	IMPLEMENTATION
public boolean supportsforupdatenowait() {return false}	WITHOUT_CLASSIFICATION	0.9999985130188311	WITHOUT_CLASSIFICATION	1.4869811688172904E-6	IMPLEMENTATION
timesten has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999996212198347	WITHOUT_CLASSIFICATION	3.7878016532148174E-7	IMPLEMENTATION
iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999831362636855	WITHOUT_CLASSIFICATION	1.6863736314534966E-5	IMPLEMENTATION
add new ordered map	WITHOUT_CLASSIFICATION	0.9999066855113193	WITHOUT_CLASSIFICATION	9.331448868073644E-5	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" )	WITHOUT_CLASSIFICATION	0.9999725636457929	WITHOUT_CLASSIFICATION	2.7436354207089884E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999932359262478	WITHOUT_CLASSIFICATION	6.764073752189873E-6	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999512815558923	WITHOUT_CLASSIFICATION	4.871844410769435E-5	IMPLEMENTATION
return "select current_timestamp from rdb$database"	WITHOUT_CLASSIFICATION	0.999995712635973	WITHOUT_CLASSIFICATION	4.28736402701633E-6	IMPLEMENTATION
registercolumntype data types	WITHOUT_CLASSIFICATION	0.9999893967219281	WITHOUT_CLASSIFICATION	1.060327807185987E-5	IMPLEMENTATION
hibernate seems to ignore this type	WITHOUT_CLASSIFICATION	0.9998963390518375	WITHOUT_CLASSIFICATION	1.0366094816246112E-4	IMPLEMENTATION
ibid for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999856055335822	WITHOUT_CLASSIFICATION	1.4394466417724465E-5	IMPLEMENTATION
tell hibernate to use getbytes instead of getbinarystream	WITHOUT_CLASSIFICATION	0.9999720476783779	WITHOUT_CLASSIFICATION	2.7952321622044145E-5	IMPLEMENTATION
no batch statements	WITHOUT_CLASSIFICATION	0.9999861710637554	WITHOUT_CLASSIFICATION	1.3828936244595122E-5	IMPLEMENTATION
we might want a special case for 192. this is very common for money types and here it is converted to 181	WITHOUT_CLASSIFICATION	0.99586770921122	WITHOUT_CLASSIFICATION	0.004132290788779887	IMPLEMENTATION
no pointbase bit	WITHOUT_CLASSIFICATION	0.9999914408643367	WITHOUT_CLASSIFICATION	8.5591356633806E-6	IMPLEMENTATION
no pointbase tinyint	WITHOUT_CLASSIFICATION	0.9999869636727884	WITHOUT_CLASSIFICATION	1.3036327211546304E-5	IMPLEMENTATION
pointbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999996229785274	WITHOUT_CLASSIFICATION	3.7702147261623904E-7	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.99998607828102	WITHOUT_CLASSIFICATION	1.3921718979901849E-5	IMPLEMENTATION
the current_timestamp is more accurate but only known to be supported in sql server 7.0 and later (i.e. sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999893517291536	WITHOUT_CLASSIFICATION	1.064827084628761E-5	IMPLEMENTATION
sql server (at least up through 2005) does not support defining cascade delete constraints which can circel back to the mutating table	WITHOUT_CLASSIFICATION	0.9947327809157008	WITHOUT_CLASSIFICATION	0.00526721908429916	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9736692767104175	WITHOUT_CLASSIFICATION	0.026330723289582456	IMPLEMENTATION
registercolumntype( types.blob 16777215 "mediumblob" ) registercolumntype( types.blob 65535 "blob" )	WITHOUT_CLASSIFICATION	0.9999725633864256	WITHOUT_CLASSIFICATION	2.7436613574332424E-5	IMPLEMENTATION
registercolumntype( types.clob 16777215 "mediumtext" ) registercolumntype( types.clob 65535 "text" )	WITHOUT_CLASSIFICATION	0.999972664725778	WITHOUT_CLASSIFICATION	2.7335274222075228E-5	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" ) registercolumntype( types.varchar 65535 "text" )	WITHOUT_CLASSIFICATION	0.999972664725778	WITHOUT_CLASSIFICATION	2.7335274222075228E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.99998607828102	WITHOUT_CLASSIFICATION	1.3921718979901849E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999624426442363	WITHOUT_CLASSIFICATION	3.75573557637611E-5	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999512815558923	WITHOUT_CLASSIFICATION	4.871844410769435E-5	IMPLEMENTATION
sybase bit type does not support null values	WITHOUT_CLASSIFICATION	0.9999760174424237	WITHOUT_CLASSIFICATION	2.3982557576332885E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999932359262478	WITHOUT_CLASSIFICATION	6.764073752189873E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999142122743411	WITHOUT_CLASSIFICATION	8.578772565895783E-5	IMPLEMENTATION
not null (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9993426080560931	WITHOUT_CLASSIFICATION	6.573919439068556E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.999999814545031	WITHOUT_CLASSIFICATION	1.8545496895623403E-7	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999920421434434	WITHOUT_CLASSIFICATION	7.957856556481126E-6	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9999431503602425	WITHOUT_CLASSIFICATION	5.6849639757557955E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9999239778323106	WITHOUT_CLASSIFICATION	7.602216768935787E-5	IMPLEMENTATION
add another (inner) nested select add the main query close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999935780749478	WITHOUT_CLASSIFICATION	6.4219250521332935E-6	IMPLEMENTATION
add the main query	WITHOUT_CLASSIFICATION	0.9998242202709418	WITHOUT_CLASSIFICATION	1.757797290582411E-4	IMPLEMENTATION
add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999617599584398	WITHOUT_CLASSIFICATION	3.8240041560131896E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999932359262478	WITHOUT_CLASSIFICATION	6.764073752189873E-6	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999142122743411	WITHOUT_CLASSIFICATION	8.578772565895783E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.99998607828102	WITHOUT_CLASSIFICATION	1.3921718979901849E-5	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999811402957617	WITHOUT_CLASSIFICATION	1.885970423826285E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9962454655857597	WITHOUT_CLASSIFICATION	0.0037545344142403624	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999990839482088	WITHOUT_CLASSIFICATION	9.160517911217724E-7	IMPLEMENTATION
features which change between 8i 9i and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999577049629459	WITHOUT_CLASSIFICATION	4.2295037054148237E-5	IMPLEMENTATION
features which remain constant across 8i 9i and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999846206163268	WITHOUT_CLASSIFICATION	1.537938367322875E-5	IMPLEMENTATION
binary %stream character %stream	WITHOUT_CLASSIFICATION	0.9999839559723261	WITHOUT_CLASSIFICATION	1.6044027673817425E-5	IMPLEMENTATION
getdefaultproperties().setproperty(environment.statement_batch_size no_batch)	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
hibernate impelemnts cast in dialect.java	WITHOUT_CLASSIFICATION	0.9999979767948884	WITHOUT_CLASSIFICATION	2.0232051114820075E-6	IMPLEMENTATION
aggregate functions shouldn't be registered right? registerfunction( "list" new standardsqlfunction("list"hibernate.string) ) stopped on $list	WITHOUT_CLASSIFICATION	0.9995521356698654	WITHOUT_CLASSIFICATION	4.4786433013461655E-4	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996159139856594	WITHOUT_CLASSIFICATION	3.8408601434062754E-4	IMPLEMENTATION
below is for cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999991001276043	WITHOUT_CLASSIFICATION	8.998723957475163E-7	IMPLEMENTATION
note that %string is deprecated	WITHOUT_CLASSIFICATION	0.999985891545358	WITHOUT_CLASSIFICATION	1.4108454642045771E-5	IMPLEMENTATION
%upper is deprecated	WITHOUT_CLASSIFICATION	0.9999818755503822	WITHOUT_CLASSIFICATION	1.8124449617802185E-5	IMPLEMENTATION
the syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.999969898510128	WITHOUT_CLASSIFICATION	3.0101489872103276E-5	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996442659165566	WITHOUT_CLASSIFICATION	3.557340834433386E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996804813694691	WITHOUT_CLASSIFICATION	3.195186305308456E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999709566050855	WITHOUT_CLASSIFICATION	2.904339491450307E-4	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
the syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999060963186389	WITHOUT_CLASSIFICATION	9.390368136107331E-5	IMPLEMENTATION
completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999880367289764	WITHOUT_CLASSIFICATION	1.1963271023638963E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997302548280663	WITHOUT_CLASSIFICATION	2.6974517193360337E-4	IMPLEMENTATION
limit support (ala top) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998234004427882	WITHOUT_CLASSIFICATION	1.7659955721184605E-4	IMPLEMENTATION
intersystems cache' does not current support "select for update" syntax set your transaction mode to read_committed before using	WITHOUT_CLASSIFICATION	0.9993528707042364	WITHOUT_CLASSIFICATION	6.471292957634691E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
<string>	WITHOUT_CLASSIFICATION	0.9999837058840635	WITHOUT_CLASSIFICATION	1.6294115936502122E-5	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994845822015824	WITHOUT_CLASSIFICATION	5.154177984175862E-4	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996162420376951	WITHOUT_CLASSIFICATION	3.837579623049781E-4	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999868020294743	WITHOUT_CLASSIFICATION	1.3197970525612386E-5	IMPLEMENTATION
does the limit clause come at the start of the select statement rather than at the end?	WITHOUT_CLASSIFICATION	0.9999996320184059	WITHOUT_CLASSIFICATION	3.679815941298833E-7	IMPLEMENTATION
does the limit clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999997975293338	WITHOUT_CLASSIFICATION	2.0247066627362898E-7	IMPLEMENTATION
the name of the sql function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999973273223858	WITHOUT_CLASSIFICATION	2.672677614330575E-6	IMPLEMENTATION
create an outerjoingenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999910142965394	WITHOUT_CLASSIFICATION	8.985703460588608E-6	IMPLEMENTATION
the keyword used to insert a row without specifying any column values	WITHOUT_CLASSIFICATION	0.9999995434046363	WITHOUT_CLASSIFICATION	4.5659536367948916E-7	IMPLEMENTATION
registerfunction( "trim" new standardsqlfunction( "trim" hibernate.string ) )	WITHOUT_CLASSIFICATION	0.9999761135818532	WITHOUT_CLASSIFICATION	2.3886418146705007E-5	IMPLEMENTATION
skip the from keyword in params	WITHOUT_CLASSIFICATION	0.999998361228588	WITHOUT_CLASSIFICATION	1.6387714119702742E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999179931443145	WITHOUT_CLASSIFICATION	8.200685568552572E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999957316034431	WITHOUT_CLASSIFICATION	4.2683965568329776E-6	IMPLEMENTATION
sqlfunction implementation	WITHOUT_CLASSIFICATION	0.9998287659077728	WITHOUT_CLASSIFICATION	1.7123409222716556E-4	IMPLEMENTATION
conceivable that the dialect ctor could throw hibernateexceptions so don't re-wrap	WITHOUT_CLASSIFICATION	0.999890223677071	WITHOUT_CLASSIFICATION	1.0977632292899146E-4	IMPLEMENTATION
register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.999979244372807	WITHOUT_CLASSIFICATION	2.0755627192967152E-5	IMPLEMENTATION
register resolvers set via environment property	WITHOUT_CLASSIFICATION	0.9999718348547291	WITHOUT_CLASSIFICATION	2.8165145270914376E-5	IMPLEMENTATION
kept for backward compatibility until after the 3.1beta5 release of ha	WITHOUT_CLASSIFICATION	0.9999697521333943	WITHOUT_CLASSIFICATION	3.024786660562863E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9999655909341497	WITHOUT_CLASSIFICATION	3.44090658501854E-5	IMPLEMENTATION
the cascadingaction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999715261087564	WITHOUT_CLASSIFICATION	2.8473891243507174E-5	IMPLEMENTATION
the cascadingaction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999444138387567	WITHOUT_CLASSIFICATION	5.5586161243463635E-5	IMPLEMENTATION
delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999746645726482	WITHOUT_CLASSIFICATION	2.5335427351803888E-5	IMPLEMENTATION
orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9981323146383467	WITHOUT_CLASSIFICATION	0.0018676853616532755	IMPLEMENTATION
(lockmode) anything	WITHOUT_CLASSIFICATION	0.9999460338749472	WITHOUT_CLASSIFICATION	5.3966125052920043E-5	IMPLEMENTATION
lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999991049697011	WITHOUT_CLASSIFICATION	8.950302988934758E-6	IMPLEMENTATION
refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999882940652962	WITHOUT_CLASSIFICATION	1.170593470379336E-4	IMPLEMENTATION
evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999194771060351	WITHOUT_CLASSIFICATION	8.052289396486946E-5	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999839261654578	WITHOUT_CLASSIFICATION	1.6073834542160095E-5	IMPLEMENTATION
orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9998099499337897	WITHOUT_CLASSIFICATION	1.9005006621032489E-4	IMPLEMENTATION
for deprecated saveorupdatecopy()	WITHOUT_CLASSIFICATION	0.9999812724854061	WITHOUT_CLASSIFICATION	1.8727514593780076E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999195100309413	WITHOUT_CLASSIFICATION	8.048996905878358E-5	IMPLEMENTATION
a proxy cannot be transient and it breaks foreignkeys.istransient	WITHOUT_CLASSIFICATION	0.9999990278692901	WITHOUT_CLASSIFICATION	9.72130709920815E-7	IMPLEMENTATION
replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999974262101039	WITHOUT_CLASSIFICATION	2.5737898961403673E-6	IMPLEMENTATION
static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999345453384204	WITHOUT_CLASSIFICATION	6.545466157953032E-5	IMPLEMENTATION
handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999818839816492	WITHOUT_CLASSIFICATION	1.8116018350800013E-5	IMPLEMENTATION
actually the semantics of the next three are really "bag" note that unlike objects collection insertions updates deletions are not really remembered between flushes. we just re-use the same lists for convenience.	WITHOUT_CLASSIFICATION	0.9999975380469333	WITHOUT_CLASSIFICATION	2.461953066728495E-6	IMPLEMENTATION
add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999493646251858	WITHOUT_CLASSIFICATION	5.063537481418684E-5	IMPLEMENTATION
continue loop	WITHOUT_CLASSIFICATION	0.9999933742139235	WITHOUT_CLASSIFICATION	6.625786076396794E-6	IMPLEMENTATION
sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999655275618647	WITHOUT_CLASSIFICATION	3.447243813533014E-5	IMPLEMENTATION
sort the updates by pk	WITHOUT_CLASSIFICATION	0.999978087679745	WITHOUT_CLASSIFICATION	2.1912320254921235E-5	IMPLEMENTATION
the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999949311326078	WITHOUT_CLASSIFICATION	5.0688673921120415E-6	IMPLEMENTATION
the map of batch numbers to entityinsertaction lists	WITHOUT_CLASSIFICATION	0.9999932794289323	WITHOUT_CLASSIFICATION	6.720571067574206E-6	IMPLEMENTATION
optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9998402420223106	WITHOUT_CLASSIFICATION	1.5975797768935296E-4	IMPLEMENTATION
the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.999954539402763	WITHOUT_CLASSIFICATION	4.546059723688145E-5	IMPLEMENTATION
remove the current element from insertions. it will be added back later.	WITHOUT_CLASSIFICATION	0.9999999027775353	WITHOUT_CLASSIFICATION	9.722246474639663E-8	IMPLEMENTATION
the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.999941736338457	WITHOUT_CLASSIFICATION	5.826366154310796E-5	IMPLEMENTATION
there is already an existing batch for this type of entity. check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999998581893937	WITHOUT_CLASSIFICATION	1.4181060616173038E-7	IMPLEMENTATION
now rebuild the insertions list. there is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999992549944694	WITHOUT_CLASSIFICATION	7.450055305827534E-7	IMPLEMENTATION
the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999909775875726	WITHOUT_CLASSIFICATION	9.022412427401602E-6	IMPLEMENTATION
loop through all the associations of the current entity and make sure that they are processed before the current batch number	WITHOUT_CLASSIFICATION	0.9999952119292069	WITHOUT_CLASSIFICATION	4.788070793077953E-6	IMPLEMENTATION
find the batch number associated with the current association if any.	WITHOUT_CLASSIFICATION	0.999983093388559	WITHOUT_CLASSIFICATION	1.6906611440991812E-5	IMPLEMENTATION
create a new batch for this type. the batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.999998003446025	WITHOUT_CLASSIFICATION	1.996553974930174E-6	IMPLEMENTATION
loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999323185576751	WITHOUT_CLASSIFICATION	6.768144232489278E-5	IMPLEMENTATION
since this entity will now be processed in the latest possible batch we can be assured that it will come after all other associations there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9933946819510389	WITHOUT_CLASSIFICATION	0.006605318048961115	IMPLEMENTATION
cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999300464305192	WITHOUT_CLASSIFICATION	6.995356948083476E-5	IMPLEMENTATION
not really necessary but good for consistency	WITHOUT_CLASSIFICATION	0.9999100489322912	WITHOUT_CLASSIFICATION	8.995106770878613E-5	IMPLEMENTATION
we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999820509358489	WITHOUT_CLASSIFICATION	1.794906415113363E-5	IMPLEMENTATION
a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9998081799310248	WITHOUT_CLASSIFICATION	1.9182006897517165E-4	IMPLEMENTATION
handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9998244249804318	WITHOUT_CLASSIFICATION	1.755750195680867E-4	IMPLEMENTATION
loaded entity instances by entityuniquekey	WITHOUT_CLASSIFICATION	0.9999917426286483	WITHOUT_CLASSIFICATION	8.257371351697394E-6	IMPLEMENTATION
identity map of entityentry instances by the entity instance	WITHOUT_CLASSIFICATION	0.9999968508874586	WITHOUT_CLASSIFICATION	3.1491125413559242E-6	IMPLEMENTATION
entity proxies by entitykey	WITHOUT_CLASSIFICATION	0.9999879123582196	WITHOUT_CLASSIFICATION	1.2087641780356187E-5	IMPLEMENTATION
snapshots of current database state for entities that have not been loaded	WITHOUT_CLASSIFICATION	0.9980292746199165	WITHOUT_CLASSIFICATION	0.001970725380083405	IMPLEMENTATION
identity map of array holder arrayholder instances by the array instance	WITHOUT_CLASSIFICATION	0.9999993996763343	WITHOUT_CLASSIFICATION	6.003236657787537E-7	IMPLEMENTATION
collection wrappers by the collectionkey key=collectionkey value=persistentcollection	WITHOUT_CLASSIFICATION	0.9999878537313084	WITHOUT_CLASSIFICATION	1.2146268691597797E-5	IMPLEMENTATION
set of entitykeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999647700287045	WITHOUT_CLASSIFICATION	3.522997129548463E-5	IMPLEMENTATION
properties that we have tried to load and not found in the database	WITHOUT_CLASSIFICATION	0.9996775774219913	WITHOUT_CLASSIFICATION	3.2242257800869196E-4	IMPLEMENTATION
a list of collection wrappers that were instantiating during result set processing that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999939160368491	WITHOUT_CLASSIFICATION	6.083963150908806E-6	IMPLEMENTATION
a container for collections we load up when the owning entity is not yet loaded for now this is purely transient!	WITHOUT_CLASSIFICATION	0.9976589460992263	WITHOUT_CLASSIFICATION	0.002341053900773658	IMPLEMENTATION
downgrade locks	WITHOUT_CLASSIFICATION	0.9999188693153418	WITHOUT_CLASSIFICATION	8.113068465819969E-5	IMPLEMENTATION
any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999958420185757	WITHOUT_CLASSIFICATION	4.157981424313265E-6	IMPLEMENTATION
unwrap the object	WITHOUT_CLASSIFICATION	0.9999950336057774	WITHOUT_CLASSIFICATION	4.966394222642547E-6	IMPLEMENTATION
initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999974532371283	WITHOUT_CLASSIFICATION	2.546762871767222E-6	IMPLEMENTATION
return the proxied object	WITHOUT_CLASSIFICATION	0.999997493716302	WITHOUT_CLASSIFICATION	2.5062836979911472E-6	IMPLEMENTATION
overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999976459766041	WITHOUT_CLASSIFICATION	2.3540233958627463E-6	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999420333188828	WITHOUT_CLASSIFICATION	5.796668111727327E-5	IMPLEMENTATION
or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9986188721148006	WITHOUT_CLASSIFICATION	0.0013811278851994903	IMPLEMENTATION
treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9994281591034317	WITHOUT_CLASSIFICATION	5.718408965683005E-4	IMPLEMENTATION
do this work only at the very highest level of the load don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.999987638899605	WITHOUT_CLASSIFICATION	1.2361100395084484E-5	IMPLEMENTATION
note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999825308770122	WITHOUT_CLASSIFICATION	1.7469122987766647E-5	IMPLEMENTATION
it might be an unwrapped collection reference! try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999572761032904	WITHOUT_CLASSIFICATION	4.272389670950173E-5	IMPLEMENTATION
public boolean isnonexistant(entitykey key) {return nonexistantentitykeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999985128191213	WITHOUT_CLASSIFICATION	1.4871808786769456E-6	IMPLEMENTATION
public boolean isnonexistant(entityuniquekey key) {return nonexistententityuniquekeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999985128191213	WITHOUT_CLASSIFICATION	1.4871808786769456E-6	IMPLEMENTATION
iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999958242396096	WITHOUT_CLASSIFICATION	4.175760390364924E-6	IMPLEMENTATION
does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999999214863967	WITHOUT_CLASSIFICATION	7.851360320498543E-8	IMPLEMENTATION
check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.999997190023387	WITHOUT_CLASSIFICATION	2.8099766129069343E-6	IMPLEMENTATION
otherwise the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999973428150988	WITHOUT_CLASSIFICATION	2.6571849012711652E-6	IMPLEMENTATION
adds remove as a sort-of alias for delete	WITHOUT_CLASSIFICATION	0.9999864746006892	WITHOUT_CLASSIFICATION	1.3525399310834147E-5	IMPLEMENTATION
bad cast	WITHOUT_CLASSIFICATION	0.9999608124065014	WITHOUT_CLASSIFICATION	3.9187593498541636E-5	IMPLEMENTATION
return lhspersister.getsubclasspropertycolumnnames(property)	WITHOUT_CLASSIFICATION	0.9999824799475202	WITHOUT_CLASSIFICATION	1.7520052479813316E-5	IMPLEMENTATION
property-refs for associations defined on a component are not supported so no need to slice	WITHOUT_CLASSIFICATION	0.9999590201095604	WITHOUT_CLASSIFICATION	4.097989043952702E-5	IMPLEMENTATION
if there is no property-ref assume the join is to the subclass table (ie. the table of the subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999997927592158	WITHOUT_CLASSIFICATION	2.0724078428873932E-7	IMPLEMENTATION
handle a property-ref	WITHOUT_CLASSIFICATION	0.9998626257165142	WITHOUT_CLASSIFICATION	1.373742834858838E-4	IMPLEMENTATION
nativesqlqueryreturn	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999965065417348	WITHOUT_CLASSIFICATION	3.4934582653319393E-6	IMPLEMENTATION
why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999781038841886	WITHOUT_CLASSIFICATION	2.1896115811405098E-5	IMPLEMENTATION
this.forcecacherefresh = forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999242762711081	WITHOUT_CLASSIFICATION	7.572372889177453E-5	IMPLEMENTATION
hella important optimization!!!	WITHOUT_CLASSIFICATION	0.9999619359903359	WITHOUT_CLASSIFICATION	3.8064009664200464E-5	IMPLEMENTATION
return that.type.equals(type) && equalshelper.equals(that.value value)	WITHOUT_CLASSIFICATION	0.999982772014962	WITHOUT_CLASSIFICATION	1.7227985038014416E-5	IMPLEMENTATION
must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999833382786729	WITHOUT_CLASSIFICATION	1.6661721327128055E-5	IMPLEMENTATION
take a snapshot	WITHOUT_CLASSIFICATION	0.9999872739764754	WITHOUT_CLASSIFICATION	1.2726023524616731E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.999892082633078	WITHOUT_CLASSIFICATION	1.0791736692205813E-4	IMPLEMENTATION
the owning entity may have been deleted and its identifier unset due to identifier-rollback in which case try to look up its identifier from the persistence context	WITHOUT_CLASSIFICATION	0.9969644027981871	WITHOUT_CLASSIFICATION	0.003035597201812849	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9999464695681981	WITHOUT_CLASSIFICATION	5.353043180183429E-5	IMPLEMENTATION
we've been here before	WITHOUT_CLASSIFICATION	0.9997203288336411	WITHOUT_CLASSIFICATION	2.796711663588495E-4	IMPLEMENTATION
it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999998628200053	WITHOUT_CLASSIFICATION	1.371799946122423E-7	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9999464695681981	WITHOUT_CLASSIFICATION	5.353043180183429E-5	IMPLEMENTATION
if either its role changed	WITHOUT_CLASSIFICATION	0.999999727529537	WITHOUT_CLASSIFICATION	2.724704630034668E-7	IMPLEMENTATION
or its key changed	WITHOUT_CLASSIFICATION	0.9999981159089844	WITHOUT_CLASSIFICATION	1.8840910156312496E-6	IMPLEMENTATION
we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999372430890071	WITHOUT_CLASSIFICATION	6.275691099294092E-5	IMPLEMENTATION
we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9999422611620236	WITHOUT_CLASSIFICATION	5.7738837976539086E-5	IMPLEMENTATION
force initialize!	WITHOUT_CLASSIFICATION	0.9998005059982525	WITHOUT_CLASSIFICATION	1.9949400174737775E-4	IMPLEMENTATION
else if it's elements changed	WITHOUT_CLASSIFICATION	0.999999375668223	WITHOUT_CLASSIFICATION	6.243317771089207E-7	IMPLEMENTATION
attributes maintained between flush cycles	WITHOUT_CLASSIFICATION	0.9999850979491478	WITHOUT_CLASSIFICATION	1.4902050852273356E-5	IMPLEMENTATION
session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999925340609801	WITHOUT_CLASSIFICATION	7.46593901988191E-6	IMPLEMENTATION
allow the collectionsnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999002852599963	WITHOUT_CLASSIFICATION	9.971474000364137E-5	IMPLEMENTATION
attributes used only during flush cycle	WITHOUT_CLASSIFICATION	0.9999978510145145	WITHOUT_CLASSIFICATION	2.1489854855152534E-6	IMPLEMENTATION
"current" means the reference that was found during flush()	WITHOUT_CLASSIFICATION	0.9999999544703603	WITHOUT_CLASSIFICATION	4.5529639635852525E-8	IMPLEMENTATION
"loaded" means the reference that is consistent with the current database state	WITHOUT_CLASSIFICATION	0.9999988892701105	WITHOUT_CLASSIFICATION	1.110729889484607E-6	IMPLEMENTATION
during flush we navigate the object graph to collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999479357819976	WITHOUT_CLASSIFICATION	5.206421800233959E-5	IMPLEMENTATION
if we instantiate a collection during the flush() process we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999990500939558	WITHOUT_CLASSIFICATION	9.499060442374166E-7	IMPLEMENTATION
new collections that get found + wrapped during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9993488854824085	WITHOUT_CLASSIFICATION	6.511145175914106E-4	IMPLEMENTATION
a newly wrapped collection is not dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.999859647506199	WITHOUT_CLASSIFICATION	1.4035249380090533E-4	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.9999711319867853	WITHOUT_CLASSIFICATION	2.8868013214564136E-5	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.9999711319867853	WITHOUT_CLASSIFICATION	2.8868013214564136E-5	IMPLEMENTATION
detached collections that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.999207182264187	WITHOUT_CLASSIFICATION	7.928177358128982E-4	IMPLEMENTATION
optimization	WITHOUT_CLASSIFICATION	0.9999684163504171	WITHOUT_CLASSIFICATION	3.158364958288959E-5	IMPLEMENTATION
optimization optimization	WITHOUT_CLASSIFICATION	0.9999759982556765	WITHOUT_CLASSIFICATION	2.400174432339238E-5	IMPLEMENTATION
re-snapshot	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.99991536168704	WITHOUT_CLASSIFICATION	8.46383129600491E-5	IMPLEMENTATION
note this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9998988994494361	WITHOUT_CLASSIFICATION	1.0110055056395875E-4	IMPLEMENTATION
memory optimization	WITHOUT_CLASSIFICATION	0.9999383758834769	WITHOUT_CLASSIFICATION	6.162411652309524E-5	IMPLEMENTATION
use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999588084506161	WITHOUT_CLASSIFICATION	4.119154938387984E-5	IMPLEMENTATION
copied from session	WITHOUT_CLASSIFICATION	0.9999450410496571	WITHOUT_CLASSIFICATION	5.495895034291421E-5	IMPLEMENTATION
this should not happen since the dtd prevents it	WITHOUT_CLASSIFICATION	0.9991155087379826	WITHOUT_CLASSIFICATION	8.844912620173931E-4	IMPLEMENTATION
joinprocessor needs to know if the where clause fragment came from a dynamic filter or not so it can put the where clause fragment in the right place in the sql ast. 'hasfiltercondition' keeps track of that fact.	WITHOUT_CLASSIFICATION	0.5605626344934604	IMPLEMENTATION	0.4394373655065396	WITHOUT_CLASSIFICATION
the current join represents the join between a many-to-many association table and its "target" table. here we need to apply any additional filters defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9979450726519965	WITHOUT_CLASSIFICATION	0.0020549273480035928	IMPLEMENTATION
check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.999795251778581	WITHOUT_CLASSIFICATION	2.0474822141904896E-4	IMPLEMENTATION
values is not null and is checkable we'll look deeper	WITHOUT_CLASSIFICATION	0.9999673615062747	WITHOUT_CLASSIFICATION	3.263849372519577E-5	IMPLEMENTATION
for non null args check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999902126654724	WITHOUT_CLASSIFICATION	9.787334527534439E-6	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9999655909341497	WITHOUT_CLASSIFICATION	3.44090658501854E-5	IMPLEMENTATION
persistent collections may have components	WITHOUT_CLASSIFICATION	0.9996106420127342	WITHOUT_CLASSIFICATION	3.89357987265799E-4	IMPLEMENTATION
check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999988885247827	WITHOUT_CLASSIFICATION	1.111475217311818E-6	IMPLEMENTATION
will check current level if some of them are not null or sublevels if they exist	WITHOUT_CLASSIFICATION	0.9998184760092108	WITHOUT_CLASSIFICATION	1.8152399078922356E-4	IMPLEMENTATION
do the test	WITHOUT_CLASSIFICATION	0.9999948829783957	WITHOUT_CLASSIFICATION	5.117021604260114E-6	IMPLEMENTATION
if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999984405733818	WITHOUT_CLASSIFICATION	1.5594266181645714E-6	IMPLEMENTATION
unwrap it	WITHOUT_CLASSIFICATION	0.9999800936272394	WITHOUT_CLASSIFICATION	1.9906372760619046E-5	IMPLEMENTATION
see if the entity is already bound to this session if not look at the entity identifier and assume that the entity is persistent if the id is not "unsaved" (that is we rely on foreign keys to keep database integrity)	WITHOUT_CLASSIFICATION	0.9915679082884526	WITHOUT_CLASSIFICATION	0.0084320917115474	IMPLEMENTATION
an unfetched association can only point to an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999997169271686	WITHOUT_CLASSIFICATION	2.8307283141622215E-7	IMPLEMENTATION
let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999871660404722	WITHOUT_CLASSIFICATION	1.2833959527744197E-5	IMPLEMENTATION
let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999798010766644	WITHOUT_CLASSIFICATION	2.0198923335551025E-5	IMPLEMENTATION
we use the assumed value if there is one to avoid hitting the database	WITHOUT_CLASSIFICATION	0.9999996763989617	WITHOUT_CLASSIFICATION	3.236010382886053E-7	IMPLEMENTATION
hit the database after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9997630432180409	WITHOUT_CLASSIFICATION	2.3695678195918577E-4	IMPLEMENTATION
context-entity-identifier returns null explicitly if the entity is not associated with the persistence context so make some deeper checks	WITHOUT_CLASSIFICATION	0.9901730444029988	WITHOUT_CLASSIFICATION	0.009826955597001218	IMPLEMENTATION
int count = 0	WITHOUT_CLASSIFICATION	0.9999910042379943	WITHOUT_CLASSIFICATION	8.995762005758995E-6	IMPLEMENTATION
the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999826588233062	WITHOUT_CLASSIFICATION	1.7341176693888035E-5	IMPLEMENTATION
checkforend = false	WITHOUT_CLASSIFICATION	0.9998527992767714	WITHOUT_CLASSIFICATION	1.4720072322858352E-4	IMPLEMENTATION
count++	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999971054314245	WITHOUT_CLASSIFICATION	2.894568575503899E-6	IMPLEMENTATION
we ran out of keys to try	WITHOUT_CLASSIFICATION	0.99998658084344	WITHOUT_CLASSIFICATION	1.3419156560066084E-5	IMPLEMENTATION
first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999998613576141	WITHOUT_CLASSIFICATION	1.3864238592449848E-7	IMPLEMENTATION
the first id found after the given id	WITHOUT_CLASSIFICATION	0.9998485250077137	WITHOUT_CLASSIFICATION	1.514749922862169E-4	IMPLEMENTATION
we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999889693968961	WITHOUT_CLASSIFICATION	1.1030603103970291E-5	IMPLEMENTATION
look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.999992055853293	WITHOUT_CLASSIFICATION	7.944146707035645E-6	IMPLEMENTATION
ignore this row of results! note the early exit	WITHOUT_CLASSIFICATION	0.9999222613351446	WITHOUT_CLASSIFICATION	7.773866485543498E-5	IMPLEMENTATION
initialize this collection	WITHOUT_CLASSIFICATION	0.9999019944302926	WITHOUT_CLASSIFICATION	9.800556970734501E-5	IMPLEMENTATION
create one	WITHOUT_CLASSIFICATION	0.999989891079264	WITHOUT_CLASSIFICATION	1.010892073594637E-5	IMPLEMENTATION
warning can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999920236092601	WITHOUT_CLASSIFICATION	7.976390739861963E-6	IMPLEMENTATION
there were no queued additions and the role has a cache	WITHOUT_CLASSIFICATION	0.9999997926878167	WITHOUT_CLASSIFICATION	2.0731218343273206E-7	IMPLEMENTATION
and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9969906625556171	WITHOUT_CLASSIFICATION	0.0030093374443830533	IMPLEMENTATION
some filters affecting the collection are enabled on the session so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9660632727296549	WITHOUT_CLASSIFICATION	0.033936727270345135	IMPLEMENTATION
cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999929174718425	WITHOUT_CLASSIFICATION	7.0825281574340696E-6	IMPLEMENTATION
loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999977886988264	WITHOUT_CLASSIFICATION	2.21130117360071E-5	IMPLEMENTATION
collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999958498656142	WITHOUT_CLASSIFICATION	4.150134385802221E-5	IMPLEMENTATION
simple cache of param metadata based on query string. ideally the original "user-supplied query" string should be used to retreive this metadata (i.e. not the para-list-expanded query string) to avoid unnecessary cache entries. used solely for caching param metadata for native-sql queries see getsqlparametermetadata() for a discussion as to why	WITHOUT_CLASSIFICATION	0.9998841646619442	WITHOUT_CLASSIFICATION	1.1583533805582677E-4	IMPLEMENTATION
the cache of the actual plans	WITHOUT_CLASSIFICATION	0.9999861439480817	WITHOUT_CLASSIFICATION	1.385605191816571E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999179931443145	WITHOUT_CLASSIFICATION	8.200685568552572E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999179931443145	WITHOUT_CLASSIFICATION	8.200685568552572E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999970792615879	WITHOUT_CLASSIFICATION	2.9207384121732325E-6	IMPLEMENTATION
for native-sql queries the param metadata is determined outside any relation to a query plan because query plan creation and/or retreival for a native-sql query depends on all of the return types having been set which might not be the case up-front when param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9991834509228862	WITHOUT_CLASSIFICATION	8.165490771137159E-4	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999852582901338	WITHOUT_CLASSIFICATION	1.4741709866122676E-5	IMPLEMENTATION
recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999799190254941	WITHOUT_CLASSIFICATION	2.008097450591522E-5	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999852582901338	WITHOUT_CLASSIFICATION	1.4741709866122676E-5	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.999993635490798	WITHOUT_CLASSIFICATION	6.364509202002499E-6	IMPLEMENTATION
break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999934360747547	WITHOUT_CLASSIFICATION	6.563925245281559E-6	IMPLEMENTATION
named parameter	WITHOUT_CLASSIFICATION	0.9999948288192301	WITHOUT_CLASSIFICATION	5.171180769813798E-6	IMPLEMENTATION
could be either an ordinal or jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999984977764221	WITHOUT_CLASSIFICATION	1.502223577852692E-6	IMPLEMENTATION
a peek ahead showed this as an jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999966739734765	WITHOUT_CLASSIFICATION	3.3260265234843417E-6	IMPLEMENTATION
make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999880112017618	WITHOUT_CLASSIFICATION	1.1988798238160791E-5	IMPLEMENTATION
pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999751936074485	WITHOUT_CLASSIFICATION	2.480639255152803E-5	IMPLEMENTATION
perform the actual work	WITHOUT_CLASSIFICATION	0.9999562603471255	WITHOUT_CLASSIFICATION	4.373965287461302E-5	IMPLEMENTATION
if everything went ok commit the transaction and close the obtained connection handle	WITHOUT_CLASSIFICATION	0.9998560852062854	WITHOUT_CLASSIFICATION	1.4391479371459034E-4	IMPLEMENTATION
at some point the processing went bad so we need to 1) make sure the connection handle gets released 2) try to cleanup the jta context as much as possible	WITHOUT_CLASSIFICATION	0.7995680626955236	WITHOUT_CLASSIFICATION	0.20043193730447637	IMPLEMENTATION
finally handle the exception	WITHOUT_CLASSIFICATION	0.9999758606875483	WITHOUT_CLASSIFICATION	2.4139312451704887E-5	IMPLEMENTATION
a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9997808483852797	WITHOUT_CLASSIFICATION	2.1915161472025105E-4	IMPLEMENTATION
saveorupdatecopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999927465690821	WITHOUT_CLASSIFICATION	7.2534309179518974E-6	IMPLEMENTATION
collectionpersister should not be null but we don't want to throw an exception if it is null	WITHOUT_CLASSIFICATION	0.9999922216774919	WITHOUT_CLASSIFICATION	7.778322508097541E-6	IMPLEMENTATION
otherwise a null or brand new collection this will also (inefficiently) handle arrays which have no snapshot so we can't do any better processarrayornewcollection(collection type)	WITHOUT_CLASSIFICATION	0.9994058017418209	WITHOUT_CLASSIFICATION	5.941982581790635E-4	IMPLEMENTATION
a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999317683273448	WITHOUT_CLASSIFICATION	6.823167265524372E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999952486389814	WITHOUT_CLASSIFICATION	4.751361018631992E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999952486389814	WITHOUT_CLASSIFICATION	4.751361018631992E-6	IMPLEMENTATION
force a substitution!	WITHOUT_CLASSIFICATION	0.9998813771671867	WITHOUT_CLASSIFICATION	1.1862283281318574E-4	IMPLEMENTATION
the user requested a "greater" (i.e. more restrictive) form of pessimistic lock	WITHOUT_CLASSIFICATION	0.9999857979435195	WITHOUT_CLASSIFICATION	1.4202056480385766E-5	IMPLEMENTATION
the database now holds a lock + the object is flushed from the cache so release the soft lock	WITHOUT_CLASSIFICATION	0.9999998941927892	WITHOUT_CLASSIFICATION	1.0580721075063785E-7	IMPLEMENTATION
now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999980077604109	WITHOUT_CLASSIFICATION	1.9922395891072006E-6	IMPLEMENTATION
search for collections by reachability updating their role. we don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999788305564563	WITHOUT_CLASSIFICATION	2.1169443543659642E-5	IMPLEMENTATION
this is a situation where the entity id is assigned by a post-insert generator and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999951340732395	WITHOUT_CLASSIFICATION	4.865926760438291E-6	IMPLEMENTATION
note we need to do the wrap here even if its not "dirty" because collections need wrapping but changes to _them_ don't dirty the container. also for versioned data we need to wrap before calling searchfordirtycollections	WITHOUT_CLASSIFICATION	0.9990415981590357	WITHOUT_CLASSIFICATION	9.584018409643273E-4	IMPLEMENTATION
grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999997007733118	WITHOUT_CLASSIFICATION	2.992266881766482E-7	IMPLEMENTATION
grab its current state	WITHOUT_CLASSIFICATION	0.999985676782828	WITHOUT_CLASSIFICATION	1.4323217171850956E-5	IMPLEMENTATION
schedule the update note that we intentionally do _not_ pass in currentpersistentstate!	WITHOUT_CLASSIFICATION	0.9999988851550443	WITHOUT_CLASSIFICATION	1.1148449557701315E-6	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999992116461032	WITHOUT_CLASSIFICATION	7.883538968620696E-7	IMPLEMENTATION
give the interceptor a chance to process property values if the properties were modified by the interceptor we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999934674022275	WITHOUT_CLASSIFICATION	6.532597772511343E-6	IMPLEMENTATION
compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999851251662767	WITHOUT_CLASSIFICATION	1.487483372326398E-5	IMPLEMENTATION
if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999998590304998	WITHOUT_CLASSIFICATION	1.409695001784086E-7	IMPLEMENTATION
increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999716140647907	WITHOUT_CLASSIFICATION	2.8385935209249028E-5	IMPLEMENTATION
check nullability but do not perform command execute we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999747544410562	WITHOUT_CLASSIFICATION	2.5245558943753718E-5	IMPLEMENTATION
give the interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999757074856978	WITHOUT_CLASSIFICATION	2.429251430219629E-5	IMPLEMENTATION
now we might need to recalculate the dirtyproperties array	WITHOUT_CLASSIFICATION	0.9992694934502415	WITHOUT_CLASSIFICATION	7.305065497583798E-4	IMPLEMENTATION
use the current version	WITHOUT_CLASSIFICATION	0.9999789051219995	WITHOUT_CLASSIFICATION	2.1094878000490785E-5	IMPLEMENTATION
interceptor returned null so do the dirtycheck ourself if possible	WITHOUT_CLASSIFICATION	0.9999993047994591	WITHOUT_CLASSIFICATION	6.952005410422028E-7	IMPLEMENTATION
object loaded by update()	WITHOUT_CLASSIFICATION	0.9999986938632491	WITHOUT_CLASSIFICATION	1.3061367508782215E-6	IMPLEMENTATION
dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9993992560537113	WITHOUT_CLASSIFICATION	6.007439462886779E-4	IMPLEMENTATION
dirty check against the database snapshot if possible/necessary	WITHOUT_CLASSIFICATION	0.9996813692801113	WITHOUT_CLASSIFICATION	3.186307198886587E-4	IMPLEMENTATION
the interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9424449930133244	WITHOUT_CLASSIFICATION	0.057555006986675546	IMPLEMENTATION
even process null collections	WITHOUT_CLASSIFICATION	0.9999971794039342	WITHOUT_CLASSIFICATION	2.8205960658300213E-6	IMPLEMENTATION
get the id from the object	WITHOUT_CLASSIFICATION	0.9999987358133522	WITHOUT_CLASSIFICATION	1.2641866477755746E-6	IMPLEMENTATION
always do an insert and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999980083236887	WITHOUT_CLASSIFICATION	1.9916763112709363E-6	IMPLEMENTATION
what is the version on the database?	WITHOUT_CLASSIFICATION	0.9998265383211469	WITHOUT_CLASSIFICATION	1.734616788531621E-4	IMPLEMENTATION
/ hhh-2378	WITHOUT_CLASSIFICATION	0.9999968572342754	WITHOUT_CLASSIFICATION	3.142765724572723E-6	IMPLEMENTATION
will result in a sql update	WITHOUT_CLASSIFICATION	0.9999999757993135	WITHOUT_CLASSIFICATION	2.4200686408911285E-8	IMPLEMENTATION
else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999963374183567	WITHOUT_CLASSIFICATION	3.6625816433965845E-6	IMPLEMENTATION
no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999994634774189	WITHOUT_CLASSIFICATION	5.365225810974323E-7	IMPLEMENTATION
refresh() does not pass an entityname	WITHOUT_CLASSIFICATION	0.999957654391837	WITHOUT_CLASSIFICATION	4.234560816294459E-5	IMPLEMENTATION
do not return a proxy! (this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9987399452548167	WITHOUT_CLASSIFICATION	0.0012600547451833888	IMPLEMENTATION
return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999776587153976	WITHOUT_CLASSIFICATION	2.2341284602400744E-5	IMPLEMENTATION
return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999987432828803	WITHOUT_CLASSIFICATION	1.2567171196259598E-6	IMPLEMENTATION
return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999902681375862	WITHOUT_CLASSIFICATION	9.731862413724209E-6	IMPLEMENTATION
this object was already loaded	WITHOUT_CLASSIFICATION	0.9999997628197147	WITHOUT_CLASSIFICATION	2.3718028525839297E-7	IMPLEMENTATION
entity was found in second-level cache	WITHOUT_CLASSIFICATION	0.999999750226592	WITHOUT_CLASSIFICATION	2.4977340793872936E-7	IMPLEMENTATION
make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9996245557329728	WITHOUT_CLASSIFICATION	3.7544426702706474E-4	IMPLEMENTATION
intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999967817711042	WITHOUT_CLASSIFICATION	3.2182288958583873E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pre-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999786112242118	WITHOUT_CLASSIFICATION	2.138877578814724E-5	IMPLEMENTATION
some statistics	WITHOUT_CLASSIFICATION	0.9997683172415729	WITHOUT_CLASSIFICATION	2.3168275842703223E-4	IMPLEMENTATION
safe from concurrent modification because of how entrylist() is implemented on identitymap	WITHOUT_CLASSIFICATION	0.9846608355357291	WITHOUT_CLASSIFICATION	0.01533916446427089	IMPLEMENTATION
initialize dirty flags for arrays + collections with composite elements and reset reached doupdate etc.	WITHOUT_CLASSIFICATION	0.9995589357153072	WITHOUT_CLASSIFICATION	4.410642846928252E-4	IMPLEMENTATION
among other things updatereachables() will recursively load all collections that are moving roles. this might cause entities to be loaded.	WITHOUT_CLASSIFICATION	0.9999751622077442	WITHOUT_CLASSIFICATION	2.483779225585446E-5	IMPLEMENTATION
so this needs to be safe from concurrent modification problems. it is safe because of how identitymap implements entryset()	WITHOUT_CLASSIFICATION	0.999980608547656	WITHOUT_CLASSIFICATION	1.939145234400862E-5	IMPLEMENTATION
update the status of the object and if necessary schedule an update	WITHOUT_CLASSIFICATION	0.9999997215976614	WITHOUT_CLASSIFICATION	2.7840233862586043E-7	IMPLEMENTATION
schedule updates to collections	WITHOUT_CLASSIFICATION	0.9999392074196833	WITHOUT_CLASSIFICATION	6.0792580316633855E-5	IMPLEMENTATION
we need to lock the collection caches before executing entity inserts/updates in order to account for bidi associations	WITHOUT_CLASSIFICATION	0.9999851947681857	WITHOUT_CLASSIFICATION	1.4805231814249357E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ post-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999786112242118	WITHOUT_CLASSIFICATION	2.138877578814724E-5	IMPLEMENTATION
the database has changed now so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999971042567204	WITHOUT_CLASSIFICATION	2.8957432796841706E-6	IMPLEMENTATION
if the collection is dereferenced remove from the session cache iter.remove() does not work since the entryset is not backed by the set	WITHOUT_CLASSIFICATION	0.9999998761369051	WITHOUT_CLASSIFICATION	1.2386309480243145E-7	IMPLEMENTATION
otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999466291530265	WITHOUT_CLASSIFICATION	5.33708469735697E-5	IMPLEMENTATION
get a snapshot	WITHOUT_CLASSIFICATION	0.9999932840766783	WITHOUT_CLASSIFICATION	6.715923321667965E-6	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999624426442363	WITHOUT_CLASSIFICATION	3.75573557637611E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999624426442363	WITHOUT_CLASSIFICATION	3.75573557637611E-5	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999996987283732	WITHOUT_CLASSIFICATION	3.0127162675967534E-7	IMPLEMENTATION
early exit!!!	WITHOUT_CLASSIFICATION	0.9999730728269116	WITHOUT_CLASSIFICATION	2.6927173088440744E-5	IMPLEMENTATION
ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999994322393423	WITHOUT_CLASSIFICATION	5.677606576832119E-7	IMPLEMENTATION
before any callbacks etc so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999998792921125	WITHOUT_CLASSIFICATION	1.207078874910432E-7	IMPLEMENTATION
ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999646123754297	WITHOUT_CLASSIFICATION	3.5387624570430244E-5	IMPLEMENTATION
typefactory.deepcopy( currentstate proptypes persister.getpropertyupdateability() deletedstate session )	WITHOUT_CLASSIFICATION	0.9999162136972058	WITHOUT_CLASSIFICATION	8.378630279413676E-5	IMPLEMENTATION
cascade-delete to collections before the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999186203415441	WITHOUT_CLASSIFICATION	8.137965845598076E-5	IMPLEMENTATION
cascade-delete to many-to-one after the parent was deleted	WITHOUT_CLASSIFICATION	0.9999883848361902	WITHOUT_CLASSIFICATION	1.161516380983515E-5	IMPLEMENTATION
if it is an initialized proxy let cascade handle it later on	WITHOUT_CLASSIFICATION	0.9999883090329666	WITHOUT_CLASSIFICATION	1.1690967033390684E-5	IMPLEMENTATION
assign the requested id to the proxy before reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999649927450822	WITHOUT_CLASSIFICATION	3.500725491776278E-5	IMPLEMENTATION
an uninitialized proxy noop don't even need to return an id since it is never a save()	WITHOUT_CLASSIFICATION	0.9998401092716133	WITHOUT_CLASSIFICATION	1.598907283867722E-4	IMPLEMENTATION
initialize properties of the event	WITHOUT_CLASSIFICATION	0.9999975803804698	WITHOUT_CLASSIFICATION	2.4196195301044917E-6	IMPLEMENTATION
return the id in the event object	WITHOUT_CLASSIFICATION	0.9999983849672177	WITHOUT_CLASSIFICATION	1.6150327822651458E-6	IMPLEMENTATION
transient or deleted	WITHOUT_CLASSIFICATION	0.9997336826567019	WITHOUT_CLASSIFICATION	2.663173432980125E-4	IMPLEMENTATION
use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.999918788849966	WITHOUT_CLASSIFICATION	8.121115003393062E-5	IMPLEMENTATION
assume this is a newly instantiated transient object which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.999963016270473	WITHOUT_CLASSIFICATION	3.6983729527071085E-5	IMPLEMENTATION
this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999688217227616	WITHOUT_CLASSIFICATION	3.1178277238336074E-5	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9994218095027696	WITHOUT_CLASSIFICATION	5.781904972303317E-4	IMPLEMENTATION
cachedstate	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
assume true since we don't really know and it doesn't matter	WITHOUT_CLASSIFICATION	0.99999230321386	WITHOUT_CLASSIFICATION	7.696786139916206E-6	IMPLEMENTATION
a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999774136660352	WITHOUT_CLASSIFICATION	2.2586333964787628E-5	IMPLEMENTATION
if the collection belonged to a different entity clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999617697052507	WITHOUT_CLASSIFICATION	3.823029474931068E-5	IMPLEMENTATION
log.debug( "calling onload()" )	WITHOUT_CLASSIFICATION	0.9999725479747231	WITHOUT_CLASSIFICATION	2.7452025276895127E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.999984181990816	WITHOUT_CLASSIFICATION	1.5818009184100214E-5	IMPLEMENTATION
note performexecutions() clears all collectionxxxxtion collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.999977959427328	WITHOUT_CLASSIFICATION	2.2040572671939816E-5	IMPLEMENTATION
if no array holder we found an unwrappered array (this can't occur because we now always call wrap() before getting to here) return (ah==null) ? true searchfordirtycollections(ah type)	WITHOUT_CLASSIFICATION	0.9999999319078785	WITHOUT_CLASSIFICATION	6.809212149721729E-8	IMPLEMENTATION
if not wrappered yet its dirty (this can't occur because we now always call wrap() before getting to here) return ( ! (obj instanceof persistentcollection) ) ? true searchfordirtycollections( (persistentcollection) obj type )	WITHOUT_CLASSIFICATION	0.9956228801503706	WITHOUT_CLASSIFICATION	0.004377119849629448	IMPLEMENTATION
we need to check even if it was not initialized because of delayed adds!	WITHOUT_CLASSIFICATION	0.9993816195976415	WITHOUT_CLASSIFICATION	6.18380402358466E-4	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999902216837468	WITHOUT_CLASSIFICATION	9.778316253062016E-6	IMPLEMENTATION
find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999856606295866	WITHOUT_CLASSIFICATION	1.433937041339024E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.999984181990816	WITHOUT_CLASSIFICATION	1.5818009184100214E-5	IMPLEMENTATION
check the persistence context for an entry relating to this entity to be merged	WITHOUT_CLASSIFICATION	0.9996796479633715	WITHOUT_CLASSIFICATION	3.203520366285263E-4	IMPLEMENTATION
we have specialized case of a detached entity from the perspective of the merge operation. specifically we have an incoming entity instance which has a corresponding entry in the current persistence context but registered under a different entity instance	WITHOUT_CLASSIFICATION	0.999999969739646	WITHOUT_CLASSIFICATION	3.026035406052686E-8	IMPLEMENTATION
deleted	WITHOUT_CLASSIFICATION	0.9998421136468034	WITHOUT_CLASSIFICATION	1.5788635319654508E-4	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999752488512033	WITHOUT_CLASSIFICATION	2.475114879681816E-5	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy cascadeonmerge(event persister entity copycache cascades.cascade_before_merge)	WITHOUT_CLASSIFICATION	0.9999999530172619	WITHOUT_CLASSIFICATION	4.698273820741247E-8	IMPLEMENTATION
this bit is only really absolutely necessary for handling requestedid but is also good if we merge multiple object graphs since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.999999985806532	WITHOUT_CLASSIFICATION	1.4193468086995552E-8	IMPLEMENTATION
continue we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9997745181622855	WITHOUT_CLASSIFICATION	2.25481837714537E-4	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.999999971336541	WITHOUT_CLASSIFICATION	2.8663459168095638E-8	IMPLEMENTATION
check that entity id = requestedid	WITHOUT_CLASSIFICATION	0.9962384113887214	WITHOUT_CLASSIFICATION	0.0037615886112785757	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999752488512033	WITHOUT_CLASSIFICATION	2.475114879681816E-5	IMPLEMENTATION
we got here because we assumed that an instance with an assigned id was detached when it was really persistent	WITHOUT_CLASSIFICATION	0.9999955016747187	WITHOUT_CLASSIFICATION	4.498325281204388E-6	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.999999971336541	WITHOUT_CLASSIFICATION	2.8663459168095638E-8	IMPLEMENTATION
copyvalues works by reflection so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999536126708513	WITHOUT_CLASSIFICATION	4.638732914862501E-5	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999420333188828	WITHOUT_CLASSIFICATION	5.796668111727327E-5	IMPLEMENTATION
source.getbatcher().executebatch() found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9997272790047094	WITHOUT_CLASSIFICATION	2.7272099529063046E-4	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999992116461032	WITHOUT_CLASSIFICATION	7.883538968620696E-7	IMPLEMENTATION
now done in entityidentityinsertaction persister.setidentifier( entity id source.getentitymode() )	WITHOUT_CLASSIFICATION	0.9999654741763161	WITHOUT_CLASSIFICATION	3.452582368385475E-5	IMPLEMENTATION
source.getpersistencecontext().removenonexist( new entitykey( id persister source.getentitymode() ) )	WITHOUT_CLASSIFICATION	0.9997804427094332	WITHOUT_CLASSIFICATION	2.1955729056683941E-4	IMPLEMENTATION
keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999999585536885	WITHOUT_CLASSIFICATION	4.1446311531870387E-8	IMPLEMENTATION
cascade-save to many-to-one before the parent is saved	WITHOUT_CLASSIFICATION	0.9999911739014853	WITHOUT_CLASSIFICATION	8.82609851479086E-6	IMPLEMENTATION
pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999999557292388	WITHOUT_CLASSIFICATION	4.4270761245655615E-8	IMPLEMENTATION
the object is persistent	WITHOUT_CLASSIFICATION	0.9999986369126753	WITHOUT_CLASSIFICATION	1.3630873246751847E-6	IMPLEMENTATION
the entity is associated with the session so check its status	WITHOUT_CLASSIFICATION	0.9999626577840178	WITHOUT_CLASSIFICATION	3.734221598225739E-5	IMPLEMENTATION
do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999946223939428	WITHOUT_CLASSIFICATION	5.377606057163821E-6	IMPLEMENTATION
ie. e.status==deleted	WITHOUT_CLASSIFICATION	0.9999711319867853	WITHOUT_CLASSIFICATION	2.8868013214564136E-5	IMPLEMENTATION
the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999990884932456	WITHOUT_CLASSIFICATION	9.115067543851849E-7	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999902216837468	WITHOUT_CLASSIFICATION	9.778316253062016E-6	IMPLEMENTATION
private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999971393387421	WITHOUT_CLASSIFICATION	2.860661257844267E-6	IMPLEMENTATION
first try to find a matching constructor accepting a violatedconstraintnameextracter param	WITHOUT_CLASSIFICATION	0.9991849231312102	WITHOUT_CLASSIFICATION	8.150768687898666E-4	IMPLEMENTATION
eat it and try next	WITHOUT_CLASSIFICATION	0.9999467549679142	WITHOUT_CLASSIFICATION	5.3245032085765186E-5	IMPLEMENTATION
otherwise try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.998680586770873	WITHOUT_CLASSIFICATION	0.0013194132291269997	IMPLEMENTATION
oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999929932710645	WITHOUT_CLASSIFICATION	7.006728935596814E-6	IMPLEMENTATION
collectionpropertymapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999582444102534	WITHOUT_CLASSIFICATION	4.175558974660955E-5	IMPLEMENTATION
remove initial " "	WITHOUT_CLASSIFICATION	0.999995746157732	WITHOUT_CLASSIFICATION	4.253842267919921E-6	IMPLEMENTATION
remove initial " and "	WITHOUT_CLASSIFICATION	0.9999966761083497	WITHOUT_CLASSIFICATION	3.3238916502991954E-6	IMPLEMENTATION
beforeclasstokens.add("new") definitely don't have this!!	WITHOUT_CLASSIFICATION	0.9999241824025428	WITHOUT_CLASSIFICATION	7.5817597457242E-5	IMPLEMENTATION
notafterclasstokens.add("")	WITHOUT_CLASSIFICATION	0.9999711319867853	WITHOUT_CLASSIFICATION	2.8868013214564136E-5	IMPLEMENTATION
just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9998461144104097	WITHOUT_CLASSIFICATION	1.538855895902414E-4	IMPLEMENTATION
update last non-whitespace token if necessary	WITHOUT_CLASSIFICATION	0.9999971038944377	WITHOUT_CLASSIFICATION	2.896105562287822E-6	IMPLEMENTATION
select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999986198300141	WITHOUT_CLASSIFICATION	1.3801699859505404E-6	IMPLEMENTATION
scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999887315495938	WITHOUT_CLASSIFICATION	1.1268450406251652E-5	IMPLEMENTATION
note this!!	WITHOUT_CLASSIFICATION	0.9999765332694113	WITHOUT_CLASSIFICATION	2.3466730588664746E-5	IMPLEMENTATION
error message constants.	WITHOUT_CLASSIFICATION	0.9997821777733391	WITHOUT_CLASSIFICATION	2.1782222666092216E-4	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999549199258659	WITHOUT_CLASSIFICATION	4.508007413408541E-5	IMPLEMENTATION
semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.998900565997301	WITHOUT_CLASSIFICATION	0.0010994340026989628	IMPLEMENTATION
handle collection-fiter compilation. important note this is modifying the input (hql) tree not the output tree!	WITHOUT_CLASSIFICATION	0.9982350276636152	WITHOUT_CLASSIFICATION	0.0017649723363849252	IMPLEMENTATION
show the modified ast.	WITHOUT_CLASSIFICATION	0.9995373712933672	WITHOUT_CLASSIFICATION	4.626287066327813E-4	IMPLEMENTATION
create a parameter specification for the collection filter	WITHOUT_CLASSIFICATION	0.9998877960554299	WITHOUT_CLASSIFICATION	1.1220394457016721E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999698301943878	WITHOUT_CLASSIFICATION	3.016980561219023E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999698301943878	WITHOUT_CLASSIFICATION	3.016980561219023E-5	IMPLEMENTATION
get the names of the columns used to link between the collection owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999994550210719	WITHOUT_CLASSIFICATION	5.449789281381842E-7	IMPLEMENTATION
the path ast should be a dotnode and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9997546558854097	WITHOUT_CLASSIFICATION	2.453441145903407E-4	IMPLEMENTATION
tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999885491451617	WITHOUT_CLASSIFICATION	1.1450854838441092E-5	IMPLEMENTATION
re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999921844636961	WITHOUT_CLASSIFICATION	7.815536303931342E-6	IMPLEMENTATION
don't forget to resolve the argument! resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9970879291800208	WITHOUT_CLASSIFICATION	0.002912070819979284	IMPLEMENTATION
resolve everything up to this dot but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999356352081314	WITHOUT_CLASSIFICATION	6.436479186852355E-5	IMPLEMENTATION
should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999994216133387	WITHOUT_CLASSIFICATION	5.783866613493357E-7	IMPLEMENTATION
was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999999356368094	WITHOUT_CLASSIFICATION	6.436319054783723E-8	IMPLEMENTATION
attach any mapping-defined "order by" fragments	WITHOUT_CLASSIFICATION	0.9999903410517672	WITHOUT_CLASSIFICATION	9.658948232881885E-6	IMPLEMENTATION
use the explicitly declared select expression determine the return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999974922628433	WITHOUT_CLASSIFICATION	2.507737156691877E-6	IMPLEMENTATION
after that process the joins. invoke a delegate to do the work as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999123132067983	WITHOUT_CLASSIFICATION	8.768679320171759E-5	IMPLEMENTATION
make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999982456811893	WITHOUT_CLASSIFICATION	1.7543188106930815E-6	IMPLEMENTATION
we need to generate ids as part of this bulk insert. note that this is only supported for sequence-style generators and post-insert-style generators basically only in-db generators	WITHOUT_CLASSIFICATION	0.9999721737094952	WITHOUT_CLASSIFICATION	2.7826290504761923E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999698301943878	WITHOUT_CLASSIFICATION	3.016980561219023E-5	IMPLEMENTATION
we need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.999978069890519	WITHOUT_CLASSIFICATION	2.1930109481040134E-5	IMPLEMENTATION
we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999597986683941	WITHOUT_CLASSIFICATION	4.020133160590317E-5	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999842627583325	WITHOUT_CLASSIFICATION	1.573724166743508E-5	IMPLEMENTATION
generate implicit joins only if necessary.	WITHOUT_CLASSIFICATION	0.9999504248159079	WITHOUT_CLASSIFICATION	4.957518409206749E-5	IMPLEMENTATION
notify the from element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999998938533201	WITHOUT_CLASSIFICATION	1.061466799056708E-7	IMPLEMENTATION
turn off includesubclasses on all fromelements.	WITHOUT_CLASSIFICATION	0.9999337601718009	WITHOUT_CLASSIFICATION	6.623982819914058E-5	IMPLEMENTATION
create the node initially with the param name so that it shows appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999941433600611	WITHOUT_CLASSIFICATION	5.8566399388658055E-6	IMPLEMENTATION
use the delegate resolve identifiers as from element aliases.	WITHOUT_CLASSIFICATION	0.9999857583639681	WITHOUT_CLASSIFICATION	1.424163603190733E-5	IMPLEMENTATION
select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999975716807633	WITHOUT_CLASSIFICATION	2.428319236717927E-6	IMPLEMENTATION
no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999914536433846	WITHOUT_CLASSIFICATION	8.546356615402485E-6	IMPLEMENTATION
make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999619257941053	WITHOUT_CLASSIFICATION	3.807420589480061E-5	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999549199258659	WITHOUT_CLASSIFICATION	4.508007413408541E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999698301943878	WITHOUT_CLASSIFICATION	3.016980561219023E-5	IMPLEMENTATION
--commented out by inspection (12/11/04 1056 am) int getwarningcount()	WITHOUT_CLASSIFICATION	0.9999974855400927	WITHOUT_CLASSIFICATION	2.514459907312297E-6	IMPLEMENTATION
alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999267070069595	WITHOUT_CLASSIFICATION	7.32929930404984E-5	IMPLEMENTATION
switch	WITHOUT_CLASSIFICATION	0.9999879637107032	WITHOUT_CLASSIFICATION	1.203628929675112E-5	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9996834036743177	WITHOUT_CLASSIFICATION	3.165963256821943E-4	IMPLEMENTATION
just do the regular thing if you can't find the ctor your ast must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999898729034076	WITHOUT_CLASSIFICATION	1.0127096592422508E-5	IMPLEMENTATION
initialize sql nodes here.	WITHOUT_CLASSIFICATION	0.9999651659583488	WITHOUT_CLASSIFICATION	3.48340416512711E-5	IMPLEMENTATION
semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998350622206159	WITHOUT_CLASSIFICATION	1.6493777938404698E-4	IMPLEMENTATION
if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999999260701222	WITHOUT_CLASSIFICATION	7.392987780260938E-8	IMPLEMENTATION
this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999997709796252	WITHOUT_CLASSIFICATION	2.290203747404952E-7	IMPLEMENTATION
--- inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999328799649256	WITHOUT_CLASSIFICATION	6.712003507431514E-5	IMPLEMENTATION
check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999029026676126	WITHOUT_CLASSIFICATION	9.709733238733845E-5	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999968572342754	WITHOUT_CLASSIFICATION	3.142765724572723E-6	IMPLEMENTATION
these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999892044378277	WITHOUT_CLASSIFICATION	1.0795562172209394E-5	IMPLEMENTATION
again both should be fromelements	WITHOUT_CLASSIFICATION	0.9999623353099286	WITHOUT_CLASSIFICATION	3.766469007126156E-5	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.999993635490798	WITHOUT_CLASSIFICATION	6.364509202002499E-6	IMPLEMENTATION
right represents a joins originating from left or both right and left reprersent joins originating from the same fromelement	WITHOUT_CLASSIFICATION	0.9999985324338017	WITHOUT_CLASSIFICATION	1.4675661982884735E-6	IMPLEMENTATION
check a set of parent/child nodes in the from-clause tree to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999993445354202	WITHOUT_CLASSIFICATION	6.5546457984182E-7	IMPLEMENTATION
right represents a joins originating from left	WITHOUT_CLASSIFICATION	0.9999981610498855	WITHOUT_CLASSIFICATION	1.838950114574438E-6	IMPLEMENTATION
all clear	WITHOUT_CLASSIFICATION	0.9999903908256567	WITHOUT_CLASSIFICATION	9.609174343361378E-6	IMPLEMENTATION
ignore the token class name parameter and use a specific token class.	WITHOUT_CLASSIFICATION	0.999999572141019	WITHOUT_CLASSIFICATION	4.2785898112203863E-7	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999901060246962	WITHOUT_CLASSIFICATION	9.893975303835083E-6	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999901060246962	WITHOUT_CLASSIFICATION	9.893975303835083E-6	IMPLEMENTATION
remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9998993298269855	WITHOUT_CLASSIFICATION	1.0067017301442247E-4	IMPLEMENTATION
don't care about other param types here just those explicitly user-defined	WITHOUT_CLASSIFICATION	0.9998947846802775	WITHOUT_CLASSIFICATION	1.0521531972243391E-4	IMPLEMENTATION
if the query is already compiled skip the compilation.	WITHOUT_CLASSIFICATION	0.999997552017089	WITHOUT_CLASSIFICATION	2.447982910985085E-6	IMPLEMENTATION
remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9998801283159249	WITHOUT_CLASSIFICATION	1.1987168407509619E-4	IMPLEMENTATION
phase 1 parse the hql into an ast.	WITHOUT_CLASSIFICATION	0.9999993554698985	WITHOUT_CLASSIFICATION	6.445301013781066E-7	IMPLEMENTATION
phase 2 analyze the hql ast and produce an sql ast.	WITHOUT_CLASSIFICATION	0.9999997246371619	WITHOUT_CLASSIFICATION	2.753628381295582E-7	IMPLEMENTATION
phase 3 generate the sql.	WITHOUT_CLASSIFICATION	0.9998745864940402	WITHOUT_CLASSIFICATION	1.254135059598479E-4	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9940993554398994	WITHOUT_CLASSIFICATION	0.005900644560100692	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9940993554398994	WITHOUT_CLASSIFICATION	0.005900644560100692	IMPLEMENTATION
only needed during compilation phase	WITHOUT_CLASSIFICATION	0.9837288076764844	WITHOUT_CLASSIFICATION	0.01627119232351557	IMPLEMENTATION
transform the tree.	WITHOUT_CLASSIFICATION	0.9999763265752243	WITHOUT_CLASSIFICATION	2.367342477575446E-5	IMPLEMENTATION
parse the query string into an hql ast.	WITHOUT_CLASSIFICATION	0.9999990768302446	WITHOUT_CLASSIFICATION	9.231697553462875E-7	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9997510920393561	WITHOUT_CLASSIFICATION	2.4890796064392057E-4	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9997510920393561	WITHOUT_CLASSIFICATION	2.4890796064392057E-4	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9997510920393561	WITHOUT_CLASSIFICATION	2.4890796064392057E-4	IMPLEMENTATION
note ( max - 1 ) because first is zero-based while max is not	WITHOUT_CLASSIFICATION	0.9999776222064489	WITHOUT_CLASSIFICATION	2.2377793551052316E-5	IMPLEMENTATION
-- package local methods for the queryloader delegate --	WITHOUT_CLASSIFICATION	0.9999662155327185	WITHOUT_CLASSIFICATION	3.378446728141871E-5	IMPLEMENTATION
if there are no collection fetches then no further checks are needed	WITHOUT_CLASSIFICATION	0.9986599578311821	WITHOUT_CLASSIFICATION	0.0013400421688177981	IMPLEMENTATION
a shallow query is ok (although technically there should be no fetching here)	WITHOUT_CLASSIFICATION	0.9999994806150986	WITHOUT_CLASSIFICATION	5.193849013312405E-7	IMPLEMENTATION
should be the first but just to be safe	WITHOUT_CLASSIFICATION	0.9999983673224452	WITHOUT_CLASSIFICATION	1.6326775549069338E-6	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999698301943878	WITHOUT_CLASSIFICATION	3.016980561219023E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999698301943878	WITHOUT_CLASSIFICATION	3.016980561219023E-5	IMPLEMENTATION
impl note allows multiple collection fetches as long as the entire fecthed graph still "points back" to a single root entity for return	WITHOUT_CLASSIFICATION	0.9999803812729262	WITHOUT_CLASSIFICATION	1.9618727073716684E-5	IMPLEMENTATION
otherwise we have a non-scalar select with defined collection fetch(es). make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999899590803478	WITHOUT_CLASSIFICATION	1.004091965221661E-5	IMPLEMENTATION
this is not strictly true. we actually just need to make sure that it is ordered by root-entity pk and that that order-by comes before any non-root-entity ordering	WITHOUT_CLASSIFICATION	0.9792375637774172	WITHOUT_CLASSIFICATION	0.02076243622258285	IMPLEMENTATION
paramtranslations = new parametertranslationsimpl( collectedparameterspecifications )	WITHOUT_CLASSIFICATION	0.9999320881017575	WITHOUT_CLASSIFICATION	6.791189824251082E-5	IMPLEMENTATION
we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999985676277924	WITHOUT_CLASSIFICATION	1.4323722075572004E-6	IMPLEMENTATION
igndore it	WITHOUT_CLASSIFICATION	0.999979812581862	WITHOUT_CLASSIFICATION	2.0187418137984718E-5	IMPLEMENTATION
we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999982936770414	WITHOUT_CLASSIFICATION	1.7063229585200991E-6	IMPLEMENTATION
[jsd] the fix for hhh-558	WITHOUT_CLASSIFICATION	0.9982967840717754	WITHOUT_CLASSIFICATION	0.0017032159282245648	IMPLEMENTATION
if the token can tell us if it could be an identifier	WITHOUT_CLASSIFICATION	0.9999691716160672	WITHOUT_CLASSIFICATION	3.082838393285283E-5	IMPLEMENTATION
and the expected token type was an identifier then	WITHOUT_CLASSIFICATION	0.9999998831191296	WITHOUT_CLASSIFICATION	1.1688087047284929E-7	IMPLEMENTATION
use the token as an identifier.	WITHOUT_CLASSIFICATION	0.999996706894858	WITHOUT_CLASSIFICATION	3.29310514205231E-6	IMPLEMENTATION
add the token to the ast.	WITHOUT_CLASSIFICATION	0.9999119258863599	WITHOUT_CLASSIFICATION	8.807411364009463E-5	IMPLEMENTATION
(not (eq a b) ) => (ne a b)	WITHOUT_CLASSIFICATION	0.999990362205395	WITHOUT_CLASSIFICATION	9.637794605137222E-6	IMPLEMENTATION
(not (ne a b) ) => (eq a b)	WITHOUT_CLASSIFICATION	0.999990362205395	WITHOUT_CLASSIFICATION	9.637794605137222E-6	IMPLEMENTATION
(not (lt a b) ) => (ge a b)	WITHOUT_CLASSIFICATION	0.999990362205395	WITHOUT_CLASSIFICATION	9.637794605137222E-6	IMPLEMENTATION
(not (ge a b) ) => (lt a b)	WITHOUT_CLASSIFICATION	0.999990362205395	WITHOUT_CLASSIFICATION	9.637794605137222E-6	IMPLEMENTATION
(not (le a b) ) => (gt a b)	WITHOUT_CLASSIFICATION	0.999990362205395	WITHOUT_CLASSIFICATION	9.637794605137222E-6	IMPLEMENTATION
(not (like a b) ) => (not_like a b)	WITHOUT_CLASSIFICATION	0.9999929002179307	WITHOUT_CLASSIFICATION	7.099782069315302E-6	IMPLEMENTATION
(not (not_like a b) ) => (like a b)	WITHOUT_CLASSIFICATION	0.9999929002179307	WITHOUT_CLASSIFICATION	7.099782069315302E-6	IMPLEMENTATION
(not (is_not_null a b) ) => (is_null a b)	WITHOUT_CLASSIFICATION	0.9999911079995258	WITHOUT_CLASSIFICATION	8.892000474250817E-6	IMPLEMENTATION
(not (between a b) ) => (not_between a b)	WITHOUT_CLASSIFICATION	0.9999911079995258	WITHOUT_CLASSIFICATION	8.892000474250817E-6	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9997655000179752	WITHOUT_CLASSIFICATION	2.344999820248228E-4	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999901060246962	WITHOUT_CLASSIFICATION	9.893975303835083E-6	IMPLEMENTATION
if if otherwise handle the error normally.	WITHOUT_CLASSIFICATION	0.9990549719144315	WITHOUT_CLASSIFICATION	9.450280855684501E-4	IMPLEMENTATION
(not (not_between a b) ) => (between a b)	WITHOUT_CLASSIFICATION	0.9999911079995258	WITHOUT_CLASSIFICATION	8.892000474250817E-6	IMPLEMENTATION
this can never happen because this rule will always eliminate the child not.case notreturn x.getfirstchild() (not (not x) ) => (x)	WITHOUT_CLASSIFICATION	0.9999838993245	WITHOUT_CLASSIFICATION	1.6100675499960565E-5	IMPLEMENTATION
just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999603323247277	WITHOUT_CLASSIFICATION	3.966767527242146E-5	IMPLEMENTATION
(eq null b) => (is_null b)	WITHOUT_CLASSIFICATION	0.9999963974291565	WITHOUT_CLASSIFICATION	3.6025708434671965E-6	IMPLEMENTATION
(eq a null) => (is_null a)	WITHOUT_CLASSIFICATION	0.9999906849892191	WITHOUT_CLASSIFICATION	9.315010780884072E-6	IMPLEMENTATION
note because we're using astutil.createparent() the tree must be created from the bottom up. is empty x => (exists (query (select_from (from x) ) ) )	WITHOUT_CLASSIFICATION	0.9999999092608062	WITHOUT_CLASSIFICATION	9.073919386272936E-8	IMPLEMENTATION
add not if it's negated.	WITHOUT_CLASSIFICATION	0.9975811023074066	WITHOUT_CLASSIFICATION	0.0024188976925933327	IMPLEMENTATION
create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.999716556645191	WITHOUT_CLASSIFICATION	2.8344335480900805E-4	IMPLEMENTATION
case 1 multi token keywords group by and order by the next token ( lt(2) ) should be 'by' otherwise this is just an ident.	WITHOUT_CLASSIFICATION	0.999994734478801	WITHOUT_CLASSIFICATION	5.265521198941377E-6	IMPLEMENTATION
case 2 the current token is after from and before '.'.	WITHOUT_CLASSIFICATION	0.9999996202909491	WITHOUT_CLASSIFICATION	3.797090508892468E-7	IMPLEMENTATION
this handles hhh-354 where there is a strange property name in a where clause. if the lookahead contains a dot then something that isn't an ident	WITHOUT_CLASSIFICATION	0.999999990291151	WITHOUT_CLASSIFICATION	9.708848877522759E-9	IMPLEMENTATION
see if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999999466817278	WITHOUT_CLASSIFICATION	5.331827218721093E-8	IMPLEMENTATION
set it!	WITHOUT_CLASSIFICATION	0.9999937124090172	WITHOUT_CLASSIFICATION	6.2875909827017484E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.999977527394885	WITHOUT_CLASSIFICATION	2.2472605114975415E-5	IMPLEMENTATION
strip the " where "	WITHOUT_CLASSIFICATION	0.9999063879189218	WITHOUT_CLASSIFICATION	9.361208107818327E-5	IMPLEMENTATION
don't really know all the codes required to adequately decipher returned jdbc exceptions here. simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.563738424947847	IMPLEMENTATION	0.43626157505215296	WITHOUT_CLASSIFICATION
at the very least cleanup the data )	WITHOUT_CLASSIFICATION	0.9999995023253884	WITHOUT_CLASSIFICATION	4.976746115502514E-7	IMPLEMENTATION
first save off the pertinent ids as the return value	WITHOUT_CLASSIFICATION	0.9999984682490257	WITHOUT_CLASSIFICATION	1.531750974341476E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999959415883848	WITHOUT_CLASSIFICATION	4.058411615193816E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999959415883848	WITHOUT_CLASSIFICATION	4.058411615193816E-6	IMPLEMENTATION
start performing the updates	WITHOUT_CLASSIFICATION	0.9999967041146057	WITHOUT_CLASSIFICATION	3.295885394411103E-6	IMPLEMENTATION
first save off the pertinent ids saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999994880195819	WITHOUT_CLASSIFICATION	5.119804179787214E-7	IMPLEMENTATION
start performing the deletes	WITHOUT_CLASSIFICATION	0.9999968691939064	WITHOUT_CLASSIFICATION	3.130806093528637E-6	IMPLEMENTATION
otherwise everything ok.	WITHOUT_CLASSIFICATION	0.9994066292599796	WITHOUT_CLASSIFICATION	5.933707400204528E-4	IMPLEMENTATION
visit width-first then depth	WITHOUT_CLASSIFICATION	0.9999851255322022	WITHOUT_CLASSIFICATION	1.4874467797727213E-5	IMPLEMENTATION
if the types report logical equivalence return true	WITHOUT_CLASSIFICATION	0.9999886212551996	WITHOUT_CLASSIFICATION	1.1378744800417389E-5	IMPLEMENTATION
otherwise perform a "deep equivalence" check	WITHOUT_CLASSIFICATION	0.9982411083800014	WITHOUT_CLASSIFICATION	0.0017588916199986107	IMPLEMENTATION
if there is no where node make one.	WITHOUT_CLASSIFICATION	0.9999953705116884	WITHOUT_CLASSIFICATION	4.629488311689718E-6	IMPLEMENTATION
inject the where after the parent	WITHOUT_CLASSIFICATION	0.9999586230100442	WITHOUT_CLASSIFICATION	4.1376989955839944E-5	IMPLEMENTATION
never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999959881149354	WITHOUT_CLASSIFICATION	4.0118850646163966E-6	IMPLEMENTATION
moved here from selectclause [jsd]	WITHOUT_CLASSIFICATION	0.9999595238390482	WITHOUT_CLASSIFICATION	4.0476160951828115E-5	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999968572342754	WITHOUT_CLASSIFICATION	3.142765724572723E-6	IMPLEMENTATION
use the table fromelement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999944717628211	WITHOUT_CLASSIFICATION	5.5282371789177245E-6	IMPLEMENTATION
set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999996484484799	WITHOUT_CLASSIFICATION	3.5155152011259016E-7	IMPLEMENTATION
if the uresolved property path isn't set yet just use the property name.	WITHOUT_CLASSIFICATION	0.999978805571384	WITHOUT_CLASSIFICATION	2.1194428616072197E-5	IMPLEMENTATION
the 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999942925964556	WITHOUT_CLASSIFICATION	5.707403544439832E-6	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999999969766151	WITHOUT_CLASSIFICATION	3.023384903961121E-8	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999999969766151	WITHOUT_CLASSIFICATION	3.023384903961121E-8	IMPLEMENTATION
if this dot has already been resolved stop now.	WITHOUT_CLASSIFICATION	0.9999469120975788	WITHOUT_CLASSIFICATION	5.30879024212669E-5	IMPLEMENTATION
if there is no data type for this node and we're at the end of the path (top most dot node) then this might be a java constant.	WITHOUT_CLASSIFICATION	0.9999999239532446	WITHOUT_CLASSIFICATION	7.604675548123999E-8	IMPLEMENTATION
the property is a collection	WITHOUT_CLASSIFICATION	0.9999952347731734	WITHOUT_CLASSIFICATION	4.765226826535814E-6	IMPLEMENTATION
the property is a component	WITHOUT_CLASSIFICATION	0.9999994400541584	WITHOUT_CLASSIFICATION	5.599458415930858E-7	IMPLEMENTATION
the property is another class..	WITHOUT_CLASSIFICATION	0.9999931993531107	WITHOUT_CLASSIFICATION	6.800646889216815E-6	IMPLEMENTATION
otherwise this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999552408553309	WITHOUT_CLASSIFICATION	4.4759144669053785E-5	IMPLEMENTATION
foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.99999291461368	WITHOUT_CLASSIFICATION	7.085386319995856E-6	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9997958847968603	WITHOUT_CLASSIFICATION	2.0411520313967388E-4	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999419055343125	WITHOUT_CLASSIFICATION	5.80944656873816E-5	IMPLEMENTATION
in non-select queries the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999996211358555	WITHOUT_CLASSIFICATION	3.788641445847155E-7	IMPLEMENTATION
this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999755847041324	WITHOUT_CLASSIFICATION	2.441529586756906E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9997958847968603	WITHOUT_CLASSIFICATION	2.0411520313967388E-4	IMPLEMENTATION
even though we might find a pre-existing element by join path we may not be able to reuse it	WITHOUT_CLASSIFICATION	0.9979263245967557	WITHOUT_CLASSIFICATION	0.002073675403244359	IMPLEMENTATION
note addduplicatealias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999783055608443	WITHOUT_CLASSIFICATION	2.169443915566768E-5	IMPLEMENTATION
if the from-clauses are the same we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999964136231265	WITHOUT_CLASSIFICATION	3.5863768735845514E-6	IMPLEMENTATION
again null != null here	WITHOUT_CLASSIFICATION	0.9999853590318007	WITHOUT_CLASSIFICATION	1.4640968199345757E-5	IMPLEMENTATION
if this is an implied join in a from element then use the impled join type which is part of the tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999999997378539	WITHOUT_CLASSIFICATION	2.621460451635386E-10	IMPLEMENTATION
otherwise (subquery case) dont reuse the fromelement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.999995763771567	WITHOUT_CLASSIFICATION	4.236228433043981E-6	IMPLEMENTATION
we know only the lhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9997745325534921	WITHOUT_CLASSIFICATION	2.2546744650781827E-4	IMPLEMENTATION
the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999916860098855	WITHOUT_CLASSIFICATION	8.313990114524856E-6	IMPLEMENTATION
only the identifier property field name can be a reference to the associated entity's pk	WITHOUT_CLASSIFICATION	0.9999956685303786	WITHOUT_CLASSIFICATION	4.3314696214066815E-6	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.999849148616605	WITHOUT_CLASSIFICATION	1.508513833949509E-4	IMPLEMENTATION
append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9996493114171915	WITHOUT_CLASSIFICATION	3.506885828085114E-4	IMPLEMENTATION
if the lhs is a collection use collectionpropertymapping	WITHOUT_CLASSIFICATION	0.9999977048432508	WITHOUT_CLASSIFICATION	2.2951567492447533E-6	IMPLEMENTATION
tell the destination fromelement to 'includesubclasses'.	WITHOUT_CLASSIFICATION	0.999921471692061	WITHOUT_CLASSIFICATION	7.852830793896096E-5	IMPLEMENTATION
use theta style (for regression) move the node up after the origin node.	WITHOUT_CLASSIFICATION	0.9997447180472797	WITHOUT_CLASSIFICATION	2.5528195272031464E-4	IMPLEMENTATION
don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999684141946789	WITHOUT_CLASSIFICATION	3.158580532122566E-5	IMPLEMENTATION
for expected parameter type injection we expect that the lhs represents some form of property ref and that the children of the in-list represent one-or-more params.	WITHOUT_CLASSIFICATION	0.9999990997436641	WITHOUT_CLASSIFICATION	9.002563357949212E-7	IMPLEMENTATION
we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999938266141513	WITHOUT_CLASSIFICATION	6.173385848808261E-6	IMPLEMENTATION
we have something like "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9997914908774456	WITHOUT_CLASSIFICATION	2.0850912255438475E-4	IMPLEMENTATION
we have something like "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9997914908774456	WITHOUT_CLASSIFICATION	2.0850912255438475E-4	IMPLEMENTATION
we know only the rhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9997745325534921	WITHOUT_CLASSIFICATION	2.2546744650781827E-4	IMPLEMENTATION
handle the (assumed) valid cases #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9937554115381126	WITHOUT_CLASSIFICATION	0.0062445884618873146	IMPLEMENTATION
one or the other needs to be a datetime for us to get into this method in the first place	WITHOUT_CLASSIFICATION	0.9999616065884388	WITHOUT_CLASSIFICATION	3.8393411561117316E-5	IMPLEMENTATION
#3 - note that this is also true of "datetime - param"	WITHOUT_CLASSIFICATION	0.9999893027183265	WITHOUT_CLASSIFICATION	1.0697281673535404E-5	IMPLEMENTATION
#2	WITHOUT_CLASSIFICATION	0.9999838640279883	WITHOUT_CLASSIFICATION	1.6135972011720652E-5	IMPLEMENTATION
generate the inner join -- the elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999656227604787	WITHOUT_CLASSIFICATION	3.437723952127788E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999817760727957	WITHOUT_CLASSIFICATION	1.8223927204196263E-5	IMPLEMENTATION
the 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999974693339266	WITHOUT_CLASSIFICATION	2.5306660734055812E-6	IMPLEMENTATION
add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9991598931372524	WITHOUT_CLASSIFICATION	8.401068627476409E-4	IMPLEMENTATION
sometimes use the element table alias sometimes use the umm collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999899400982022	WITHOUT_CLASSIFICATION	1.0059901797721726E-5	IMPLEMENTATION
now set the text for this node. it should be the element columns.	WITHOUT_CLASSIFICATION	0.9999090722903802	WITHOUT_CLASSIFICATION	9.092770961982513E-5	IMPLEMENTATION
get the function return value type based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.999979070543763	WITHOUT_CLASSIFICATION	2.0929456236879065E-5	IMPLEMENTATION
this will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999552372002077	WITHOUT_CLASSIFICATION	4.4762799792213966E-5	IMPLEMENTATION
mutation depends on the types of nodes invloved	WITHOUT_CLASSIFICATION	0.9998430999300515	WITHOUT_CLASSIFICATION	1.569000699485004E-4	IMPLEMENTATION
"pass along" our initial embedded parameter node(s) to the first generated sql fragment so that it can be handled later for parameter binding	WITHOUT_CLASSIFICATION	0.9999984784960655	WITHOUT_CLASSIFICATION	1.5215039345369222E-6	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999446271431821	WITHOUT_CLASSIFICATION	5.537285681796377E-5	IMPLEMENTATION
generated select expressions are already resolved nothing to do.	WITHOUT_CLASSIFICATION	0.9999997258315846	WITHOUT_CLASSIFICATION	2.741684154379375E-7	IMPLEMENTATION
the path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999963654535208	WITHOUT_CLASSIFICATION	3.6345464791378756E-6	IMPLEMENTATION
the hql class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999967225950713	WITHOUT_CLASSIFICATION	3.2774049287594326E-6	IMPLEMENTATION
associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999450363158163	WITHOUT_CLASSIFICATION	5.4963684183535316E-5	IMPLEMENTATION
try the parent fromclause	WITHOUT_CLASSIFICATION	0.9999617818955149	WITHOUT_CLASSIFICATION	3.821810448499753E-5	IMPLEMENTATION
add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999734871772684	WITHOUT_CLASSIFICATION	2.6512822731538905E-5	IMPLEMENTATION
make sure that all from elements registered with this from clause are actually in the ast.	WITHOUT_CLASSIFICATION	0.9999965654968181	WITHOUT_CLASSIFICATION	3.43450318198061E-6	IMPLEMENTATION
invoke setscalarcolumntext on each constructor argument.	WITHOUT_CLASSIFICATION	0.9997609033766475	WITHOUT_CLASSIFICATION	2.3909662335254228E-4	IMPLEMENTATION
collect the select expressions skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999986849105876	WITHOUT_CLASSIFICATION	1.315089412359373E-6	IMPLEMENTATION
return an empty type array	WITHOUT_CLASSIFICATION	0.9999199924346751	WITHOUT_CLASSIFICATION	8.000756532487844E-5	IMPLEMENTATION
constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999959559800184	WITHOUT_CLASSIFICATION	4.04401998149492E-6	IMPLEMENTATION
this is the exception returned by reflecthelper.getconstructor() if it cannot locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.999999167394882	WITHOUT_CLASSIFICATION	8.326051179667656E-7	IMPLEMENTATION
if there is no order by make one	WITHOUT_CLASSIFICATION	0.9999990404705471	WITHOUT_CLASSIFICATION	9.595294529382148E-7	IMPLEMENTATION
find the where if there is no where find the from	WITHOUT_CLASSIFICATION	0.9999997056435819	WITHOUT_CLASSIFICATION	2.9435641819634396E-7	IMPLEMENTATION
now inject the newly built order by into the tree	WITHOUT_CLASSIFICATION	0.999991456470189	WITHOUT_CLASSIFICATION	8.543529810932999E-6	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999771201980376	WITHOUT_CLASSIFICATION	2.287980196228226E-5	IMPLEMENTATION
logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.999944625786368	WITHOUT_CLASSIFICATION	5.5374213631982305E-5	IMPLEMENTATION
render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999897389067335	WITHOUT_CLASSIFICATION	1.0261093266586034E-5	IMPLEMENTATION
class names in the from clause result in a joinsequence (the old fromparser does this).	WITHOUT_CLASSIFICATION	0.9999999990442604	WITHOUT_CLASSIFICATION	9.55739603155106E-10	IMPLEMENTATION
for many-to-many joins use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999991605544624	WITHOUT_CLASSIFICATION	8.394455376335634E-7	IMPLEMENTATION
otherwise use the property mapping.	WITHOUT_CLASSIFICATION	0.9998764594151776	WITHOUT_CLASSIFICATION	1.2354058482246685E-4	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9996128605830081	WITHOUT_CLASSIFICATION	3.871394169918357E-4	IMPLEMENTATION
if the property is a special collection property name return a collectionpropertymapping.	WITHOUT_CLASSIFICATION	0.9999995827836385	WITHOUT_CLASSIFICATION	4.172163615533172E-7	IMPLEMENTATION
collection of components.	WITHOUT_CLASSIFICATION	0.9999693062643825	WITHOUT_CLASSIFICATION	3.069373561740583E-5	IMPLEMENTATION
make sure the lhs is "assignable"	WITHOUT_CLASSIFICATION	0.9999881914934106	WITHOUT_CLASSIFICATION	1.1808506589294713E-5	IMPLEMENTATION
false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9916891011505019	WITHOUT_CLASSIFICATION	0.00831089884949808	IMPLEMENTATION
register the fromelement with the from clause now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9998851732923758	WITHOUT_CLASSIFICATION	1.1482670762426573E-4	IMPLEMENTATION
currently allowed	WITHOUT_CLASSIFICATION	0.9999785034083406	WITHOUT_CLASSIFICATION	2.149659165936351E-5	IMPLEMENTATION
hhh-276 implied joins in a subselect where clause - the destination needs to be added to the destination's from clause. not sure if this is will fix everything but it works.	WITHOUT_CLASSIFICATION	0.9999517225968808	WITHOUT_CLASSIFICATION	4.827740311914611E-5	IMPLEMENTATION
return classalias == null ? classname classalias	WITHOUT_CLASSIFICATION	0.9999847652644902	WITHOUT_CLASSIFICATION	1.5234735509828237E-5	IMPLEMENTATION
this is an explicit from element.	WITHOUT_CLASSIFICATION	0.9999930709136343	WITHOUT_CLASSIFICATION	6.9290863657164525E-6	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999771201980376	WITHOUT_CLASSIFICATION	2.287980196228226E-5	IMPLEMENTATION
fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999873682969689	WITHOUT_CLASSIFICATION	1.2631703031059351E-5	IMPLEMENTATION
if it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9991620137294517	WITHOUT_CLASSIFICATION	8.379862705483646E-4	IMPLEMENTATION
since this is an explicit from element it can't be implied in the from clause.	WITHOUT_CLASSIFICATION	0.9999999902228208	WITHOUT_CLASSIFICATION	9.777179171963643E-9	IMPLEMENTATION
do nothing eplicit from elements are always in the projection list.	WITHOUT_CLASSIFICATION	0.9999998377565482	WITHOUT_CLASSIFICATION	1.622434518956693E-7	IMPLEMENTATION
propertyname refers to something like collection.size	WITHOUT_CLASSIFICATION	0.9996283749110253	WITHOUT_CLASSIFICATION	3.71625088974641E-4	IMPLEMENTATION
property name is a sub-path of a component	WITHOUT_CLASSIFICATION	0.9999996539234833	WITHOUT_CLASSIFICATION	3.460765166637408E-7	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999419055343125	WITHOUT_CLASSIFICATION	5.80944656873816E-5	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.999997649360341	WITHOUT_CLASSIFICATION	2.350639659059121E-6	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999446271431821	WITHOUT_CLASSIFICATION	5.537285681796377E-5	IMPLEMENTATION
dotnode uses null here	WITHOUT_CLASSIFICATION	0.9999265105745998	WITHOUT_CLASSIFICATION	7.348942540015563E-5	IMPLEMENTATION
we represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999934314317935	WITHOUT_CLASSIFICATION	6.568568206401851E-6	IMPLEMENTATION
we are the lhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999972811719962	WITHOUT_CLASSIFICATION	2.7188280039057473E-6	IMPLEMENTATION
we are the rhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999968993237578	WITHOUT_CLASSIFICATION	3.100676242089486E-6	IMPLEMENTATION
we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999911016737048	WITHOUT_CLASSIFICATION	8.898326295253068E-6	IMPLEMENTATION
early exit!!! return so the resolve call explicitly coming from dotnode can resolve this	WITHOUT_CLASSIFICATION	0.9999924131923437	WITHOUT_CLASSIFICATION	7.586807656268151E-6	IMPLEMENTATION
assume this ident's text does not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9955214924378741	WITHOUT_CLASSIFICATION	0.004478507562125873	IMPLEMENTATION
just ignore it for now it'll get resolved later	WITHOUT_CLASSIFICATION	0.9999988664571838	WITHOUT_CLASSIFICATION	1.1335428160817058E-6	IMPLEMENTATION
this is not actually a constant but a reference to from element.	WITHOUT_CLASSIFICATION	0.9999347654757543	WITHOUT_CLASSIFICATION	6.523452424572485E-5	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999981115876331	WITHOUT_CLASSIFICATION	1.8884123668565396E-6	IMPLEMENTATION
these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9982668407967193	WITHOUT_CLASSIFICATION	0.0017331592032807214	IMPLEMENTATION
used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999880903075686	WITHOUT_CLASSIFICATION	1.1909692431271115E-5	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9840050961370871	WITHOUT_CLASSIFICATION	0.015994903862912864	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9840050961370871	WITHOUT_CLASSIFICATION	0.015994903862912864	IMPLEMENTATION
naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999999433019301	WITHOUT_CLASSIFICATION	5.66980700140377E-8	IMPLEMENTATION
this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9887462341193687	WITHOUT_CLASSIFICATION	0.011253765880631384	IMPLEMENTATION
do not over-write the column text as that has already been "rendered" during resolve	WITHOUT_CLASSIFICATION	0.997492266404105	WITHOUT_CLASSIFICATION	0.0025077335958948784	IMPLEMENTATION
for some reason the antlr.commonast initialization routines force this method to get called twice. the first time with an empty string	WITHOUT_CLASSIFICATION	0.999765309465366	WITHOUT_CLASSIFICATION	2.3469053463382795E-4	IMPLEMENTATION
look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999984053684734	WITHOUT_CLASSIFICATION	1.5946315265675773E-6	IMPLEMENTATION
add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999291548323764	WITHOUT_CLASSIFICATION	7.08451676236585E-5	IMPLEMENTATION
if the from element isn't in the same clause create a new from element.	WITHOUT_CLASSIFICATION	0.9999996303266807	WITHOUT_CLASSIFICATION	3.6967331930068296E-7	IMPLEMENTATION
this is the root level node. generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999628775059759	WITHOUT_CLASSIFICATION	3.712249402407708E-5	IMPLEMENTATION
correlated subqueries create 'special' implied from nodes because correlated subselects can't use an ansi-style join	WITHOUT_CLASSIFICATION	0.9999976687746402	WITHOUT_CLASSIFICATION	2.331225359783333E-6	IMPLEMENTATION
super-duper-classic-parser-regression-testing-mojo-magic	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
a collection of entities	WITHOUT_CLASSIFICATION	0.9999763321334978	WITHOUT_CLASSIFICATION	2.3667866502264925E-5	IMPLEMENTATION
a collection of components	WITHOUT_CLASSIFICATION	0.9999858889127429	WITHOUT_CLASSIFICATION	1.4111087257126906E-5	IMPLEMENTATION
a collection of scalar elements	WITHOUT_CLASSIFICATION	0.9999913746026424	WITHOUT_CLASSIFICATION	8.625397357455836E-6	IMPLEMENTATION
according to both the ansi-sql and ejb3 specs trim can either take exactly one parameter or a variable number of parameters between 1 and 4. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if only <trim specification> is omitted both is assumed if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.9999999994771694	WITHOUT_CLASSIFICATION	5.228305716935056E-10	IMPLEMENTATION
don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999918285254464	WITHOUT_CLASSIFICATION	8.171474553588161E-6	IMPLEMENTATION
treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999982501418896	WITHOUT_CLASSIFICATION	1.7498581104882476E-6	IMPLEMENTATION
( implied && dotnode.usethetastyleimplicitjoins ) ) {	WITHOUT_CLASSIFICATION	0.9999796293105025	WITHOUT_CLASSIFICATION	2.0370689497477288E-5	IMPLEMENTATION
the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9996908019065032	WITHOUT_CLASSIFICATION	3.091980934968554E-4	IMPLEMENTATION
create the from element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.999999915999537	WITHOUT_CLASSIFICATION	8.400046306395615E-8	IMPLEMENTATION
if the join is implied then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999967375278953	WITHOUT_CLASSIFICATION	3.2624721045838294E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
the associated entity is implied but it must be included in the from. the collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999997373911738	WITHOUT_CLASSIFICATION	2.6260882617610204E-7	IMPLEMENTATION
tag this node as a join. don't include subclasses in the join. this is a clollection join.	WITHOUT_CLASSIFICATION	0.9999991730301221	WITHOUT_CLASSIFICATION	8.269698779406567E-7	IMPLEMENTATION
get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999996879246721	WITHOUT_CLASSIFICATION	3.1207532798213657E-7	IMPLEMENTATION
origin path implied columns classalias	WITHOUT_CLASSIFICATION	0.9999846547284151	WITHOUT_CLASSIFICATION	1.5345271584929594E-5	IMPLEMENTATION
implied	WITHOUT_CLASSIFICATION	0.999983713412756	WITHOUT_CLASSIFICATION	1.6286587243925928E-5	IMPLEMENTATION
for implied many-to-many just add the end join.	WITHOUT_CLASSIFICATION	0.9998982307329577	WITHOUT_CLASSIFICATION	1.017692670423266E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855890818498	WITHOUT_CLASSIFICATION	1.4410918150106853E-5	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999991795162593	WITHOUT_CLASSIFICATION	8.204837407588085E-7	IMPLEMENTATION
this causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999845982703648	WITHOUT_CLASSIFICATION	1.5401729635254962E-5	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9999939608842942	WITHOUT_CLASSIFICATION	6.039115705819051E-6	IMPLEMENTATION
frontbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999996242220041	WITHOUT_CLASSIFICATION	3.757779959284822E-7	IMPLEMENTATION
the types represented in the sql result set. @return the types represented in the sql result set.	WITHOUT_CLASSIFICATION	0.9999987750511381	WITHOUT_CLASSIFICATION	1.2249488618847033E-6	IMPLEMENTATION
public type[] getsqlresulttypes() {return sqlresulttypes}	WITHOUT_CLASSIFICATION	0.9999961159468329	WITHOUT_CLASSIFICATION	3.884053167022343E-6	IMPLEMENTATION
first collect all of the select expressions. note this must be done before invoking setscalarcolumntext() because setscalarcolumntext() changes the ast!!!	WITHOUT_CLASSIFICATION	0.9999673572003035	WITHOUT_CLASSIFICATION	3.264279969646336E-5	IMPLEMENTATION
first allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9987237750673741	WITHOUT_CLASSIFICATION	0.0012762249326259717	IMPLEMENTATION
sqlresulttypelist.addall( constructorargumenttypelist )	WITHOUT_CLASSIFICATION	0.9999725479747231	WITHOUT_CLASSIFICATION	2.7452025276895127E-5	IMPLEMENTATION
if the data type is not an association type it could not have been in the from clause.	WITHOUT_CLASSIFICATION	0.9999982822786968	WITHOUT_CLASSIFICATION	1.7177213031542394E-6	IMPLEMENTATION
sqlresulttypelist.add( type )	WITHOUT_CLASSIFICATION	0.9999739985215657	WITHOUT_CLASSIFICATION	2.6001478434338405E-5	IMPLEMENTATION
always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9992676743135944	WITHOUT_CLASSIFICATION	7.323256864055996E-4	IMPLEMENTATION
add the fetched entities	WITHOUT_CLASSIFICATION	0.9999407245894114	WITHOUT_CLASSIFICATION	5.9275410588492185E-5	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999943658090822	WITHOUT_CLASSIFICATION	5.634190917888397E-6	IMPLEMENTATION
function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996006020391092	WITHOUT_CLASSIFICATION	3.993979608907684E-4	IMPLEMENTATION
if there are any scalars (non-entities) selected render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999996263406499	WITHOUT_CLASSIFICATION	3.7365935006933166E-7	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
arraylist sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999713699603203	WITHOUT_CLASSIFICATION	2.863003967963175E-5	IMPLEMENTATION
sqlresulttypes = ( type[] ) sqlresulttypelist.toarray( new type[sqlresulttypelist.size()] )	WITHOUT_CLASSIFICATION	0.9999723143253062	WITHOUT_CLASSIFICATION	2.7685674693874625E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997302548280663	WITHOUT_CLASSIFICATION	2.6974517193360337E-4	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.7748148307512215	WITHOUT_CLASSIFICATION	0.22518516924877857	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999859309319095	WITHOUT_CLASSIFICATION	1.40690680905921E-5	IMPLEMENTATION
generate an 2d array of column names the first dimension is parallel with the return types array. the second dimension is the list of column names for each type.	WITHOUT_CLASSIFICATION	0.9999966958709309	WITHOUT_CLASSIFICATION	3.3041290691559842E-6	IMPLEMENTATION
generate the select expression.	WITHOUT_CLASSIFICATION	0.9999585454641882	WITHOUT_CLASSIFICATION	4.145453581182152E-5	IMPLEMENTATION
union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996312073161021	WITHOUT_CLASSIFICATION	3.687926838979065E-4	IMPLEMENTATION
skip 'distinct' and 'all' so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999214721677857	WITHOUT_CLASSIFICATION	7.852783221432831E-5	IMPLEMENTATION
create sql_token nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999929654338183	WITHOUT_CLASSIFICATION	7.034566181647447E-6	IMPLEMENTATION
generate the property select tokens.	WITHOUT_CLASSIFICATION	0.999977981649464	WITHOUT_CLASSIFICATION	2.201835053590287E-5	IMPLEMENTATION
get the function name node.	WITHOUT_CLASSIFICATION	0.9999879827340383	WITHOUT_CLASSIFICATION	1.2017265961696982E-5	IMPLEMENTATION
method expressions in a select should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999974522285128	WITHOUT_CLASSIFICATION	2.547771487147364E-6	IMPLEMENTATION
if this is 'elements' then create a new from element.	WITHOUT_CLASSIFICATION	0.9999987647471221	WITHOUT_CLASSIFICATION	1.2352528778808187E-6	IMPLEMENTATION
not elements(x)	WITHOUT_CLASSIFICATION	0.9975412448227569	WITHOUT_CLASSIFICATION	0.002458755177243102	IMPLEMENTATION
dialect function	WITHOUT_CLASSIFICATION	0.9999608091911618	WITHOUT_CLASSIFICATION	3.919080883815905E-5	IMPLEMENTATION
collection 'property function'	WITHOUT_CLASSIFICATION	0.9999511823572453	WITHOUT_CLASSIFICATION	4.881764275460564E-5	IMPLEMENTATION
if the constant is an ident figure out what it means	WITHOUT_CLASSIFICATION	0.9999688272364752	WITHOUT_CLASSIFICATION	3.117276352476182E-5	IMPLEMENTATION
ident is a class alias in the from.	WITHOUT_CLASSIFICATION	0.9999994978937473	WITHOUT_CLASSIFICATION	5.02106252612547E-7	IMPLEMENTATION
resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999715514986149	WITHOUT_CLASSIFICATION	2.8448501385011596E-5	IMPLEMENTATION
otherwise it's a literal.	WITHOUT_CLASSIFICATION	0.999626139592798	WITHOUT_CLASSIFICATION	3.738604072019639E-4	IMPLEMENTATION
the name of an entity class	WITHOUT_CLASSIFICATION	0.9999992678791211	WITHOUT_CLASSIFICATION	7.321208789978193E-7	IMPLEMENTATION
the class discriminator value	WITHOUT_CLASSIFICATION	0.9999942545886943	WITHOUT_CLASSIFICATION	5.745411305698653E-6	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999955585144881	WITHOUT_CLASSIFICATION	4.4414855118668775E-6	IMPLEMENTATION
add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999975444490883	WITHOUT_CLASSIFICATION	2.4555509117389687E-6	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9998863163997997	WITHOUT_CLASSIFICATION	1.136836002001856E-4	IMPLEMENTATION
child == parent.getfirstchild()	WITHOUT_CLASSIFICATION	0.9998891456851013	WITHOUT_CLASSIFICATION	1.1085431489866738E-4	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9998863163997997	WITHOUT_CLASSIFICATION	1.136836002001856E-4	IMPLEMENTATION
filter conditions need to be inserted before the hql where condition and the theta join node. this is because org.hibernate.loader.loader binds the filter parameters first then it binds all the hql query parameters see org.hibernate.loader.loader.processfilterparameters().	WITHOUT_CLASSIFICATION	0.9983099687910784	WITHOUT_CLASSIFICATION	0.0016900312089216435	IMPLEMENTATION
put the filters node before the hql condition and theta joins	WITHOUT_CLASSIFICATION	0.9999398579779623	WITHOUT_CLASSIFICATION	6.014202203768645E-5	IMPLEMENTATION
add the current fragment to the filters node	WITHOUT_CLASSIFICATION	0.9994486437645562	WITHOUT_CLASSIFICATION	5.513562354437055E-4	IMPLEMENTATION
create a new theta_joins node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999854873759334	WITHOUT_CLASSIFICATION	1.4512624066576723E-5	IMPLEMENTATION
put the theta_joins node before the hql condition after the filters.	WITHOUT_CLASSIFICATION	0.9999679593826579	WITHOUT_CLASSIFICATION	3.204061734199184E-5	IMPLEMENTATION
add the current fragment to the theta_joins node	WITHOUT_CLASSIFICATION	0.9994397754441827	WITHOUT_CLASSIFICATION	5.602245558173194E-4	IMPLEMENTATION
first try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999977866230404	WITHOUT_CLASSIFICATION	2.2133769595048255E-6	IMPLEMENTATION
unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999420404280243	WITHOUT_CLASSIFICATION	5.795957197565182E-5	IMPLEMENTATION
if that didn't work try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999976837697334	WITHOUT_CLASSIFICATION	2.3162302666244135E-6	IMPLEMENTATION
implicit joins use theta style (where pk = fk) explicit joins use join (after from)	WITHOUT_CLASSIFICATION	0.9998536709999284	WITHOUT_CLASSIFICATION	1.4632900007156556E-4	IMPLEMENTATION
locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999914638114232	WITHOUT_CLASSIFICATION	8.536188576756952E-6	IMPLEMENTATION
determine the type of the first argument	WITHOUT_CLASSIFICATION	0.999999172082678	WITHOUT_CLASSIFICATION	8.279173221070696E-7	IMPLEMENTATION
use the dot node to emit the first column name. create the column names folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999683339956731	WITHOUT_CLASSIFICATION	3.166600432689746E-5	IMPLEMENTATION
note this simply constructs a "raw" sql_token representing the where fragment and injects this into the tree. this "works" however it is probably not the best long-term solution. at some point we probably want to apply an additional grammar to properly tokenize this where fragment into constituent parts focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.987199451168505	WITHOUT_CLASSIFICATION	0.012800548831495003	IMPLEMENTATION
append the text of the current node.	WITHOUT_CLASSIFICATION	0.9994303503831858	WITHOUT_CLASSIFICATION	5.696496168140787E-4	IMPLEMENTATION
if the node has a first child recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999991437993703	WITHOUT_CLASSIFICATION	8.562006296088153E-7	IMPLEMENTATION
if there is a second child (rhs) recurse into that child.	WITHOUT_CLASSIFICATION	0.999999562665249	WITHOUT_CLASSIFICATION	4.373347509825272E-7	IMPLEMENTATION
iterate through the aliasjoinsequence pairs and generate sql token nodes.	WITHOUT_CLASSIFICATION	0.9999908585203731	WITHOUT_CLASSIFICATION	9.14147962694827E-6	IMPLEMENTATION
if the from element represents a join_fragment and it is a theta-style join convert its type from join_fragment to from_fragment	WITHOUT_CLASSIFICATION	0.9999995484856748	WITHOUT_CLASSIFICATION	4.515143252361467E-7	IMPLEMENTATION
this is used during sqlgenerator processing	WITHOUT_CLASSIFICATION	0.9999937354642149	WITHOUT_CLASSIFICATION	6.264535785197348E-6	IMPLEMENTATION
if there is a from fragment and the from element is an explicit then add the from part.	WITHOUT_CLASSIFICATION	0.9999999689761563	WITHOUT_CLASSIFICATION	3.102384382239001E-8	IMPLEMENTATION
&& stringhelper.isnotempty( frag )	WITHOUT_CLASSIFICATION	0.9999729252803004	WITHOUT_CLASSIFICATION	2.707471969962186E-5	IMPLEMENTATION
the from fragment will probably begin with ' '. remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999995618971066	WITHOUT_CLASSIFICATION	4.3810289344629965E-7	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9997542899616858	WITHOUT_CLASSIFICATION	2.4571003831411024E-4	IMPLEMENTATION
select p from p in class eg.person order by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999999422629603	WITHOUT_CLASSIFICATION	5.7737039671172786E-8	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999995752337816	WITHOUT_CLASSIFICATION	4.247662184908463E-7	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9999972701206233	WITHOUT_CLASSIFICATION	2.7298793766588418E-6	IMPLEMENTATION
default mode	WITHOUT_CLASSIFICATION	0.9999819846413305	WITHOUT_CLASSIFICATION	1.8015358669496118E-5	IMPLEMENTATION
queryjoinfragment join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9999323288536386	WITHOUT_CLASSIFICATION	6.767114636135088E-5	IMPLEMENTATION
reset the dotcount (but not the path) after reset!	WITHOUT_CLASSIFICATION	0.9995643473109525	WITHOUT_CLASSIFICATION	4.356526890475448E-4	IMPLEMENTATION
after reset!	WITHOUT_CLASSIFICATION	0.9999795569741867	WITHOUT_CLASSIFICATION	2.0443025813340005E-5	IMPLEMENTATION
we don't need to worry about any condition in the on clause here (tofromfragmentstring) since anything in the on condition is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999661557728393	WITHOUT_CLASSIFICATION	3.3844227160719024E-5	IMPLEMENTATION
bit_length feels a bit broken to me. we have to cast to char in order to pass when a numeric value is supplied. but of course the answers given will be wildly different for these two datatypes. 1234.5678 will be 9 bytes as a char string but will be 8 or 16 bytes as a true numeric. jay nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999999999446842	WITHOUT_CLASSIFICATION	5.531572515299985E-11	IMPLEMENTATION
dotcount>=2	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
do the corresponding rhs	WITHOUT_CLASSIFICATION	0.9999416937730968	WITHOUT_CLASSIFICATION	5.8306226903085534E-5	IMPLEMENTATION
if its "id"	WITHOUT_CLASSIFICATION	0.9999915659505421	WITHOUT_CLASSIFICATION	8.434049457952823E-6	IMPLEMENTATION
or its the id property name	WITHOUT_CLASSIFICATION	0.9999746824802035	WITHOUT_CLASSIFICATION	2.5317519796438776E-5	IMPLEMENTATION
join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9999323288536386	WITHOUT_CLASSIFICATION	6.767114636135088E-5	IMPLEMENTATION
important!!	WITHOUT_CLASSIFICATION	0.9999620207500572	WITHOUT_CLASSIFICATION	3.797924994287519E-5	IMPLEMENTATION
string[] keycols = collpersister.getkeycolumnnames()	WITHOUT_CLASSIFICATION	0.9999253136069569	WITHOUT_CLASSIFICATION	7.468639304310481E-5	IMPLEMENTATION
an association	WITHOUT_CLASSIFICATION	0.9999924339186373	WITHOUT_CLASSIFICATION	7.566081362656608E-6	IMPLEMENTATION
allow index() function	WITHOUT_CLASSIFICATION	0.9997907162518701	WITHOUT_CLASSIFICATION	2.0928374812999477E-4	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9736692767104175	WITHOUT_CLASSIFICATION	0.026330723289582456	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999995752337816	WITHOUT_CLASSIFICATION	4.247662184908463E-7	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9999620121005702	WITHOUT_CLASSIFICATION	3.798789942980245E-5	IMPLEMENTATION
collections of values	WITHOUT_CLASSIFICATION	0.9999968718339884	WITHOUT_CLASSIFICATION	3.1281660115103505E-6	IMPLEMENTATION
opening paren in new foo ( )	WITHOUT_CLASSIFICATION	0.9999985027915173	WITHOUT_CLASSIFICATION	1.4972084828096715E-6	IMPLEMENTATION
if we are inside a new result() but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999970558193793	WITHOUT_CLASSIFICATION	2.9441806208121307E-6	IMPLEMENTATION
special case	WITHOUT_CLASSIFICATION	0.9999819073801375	WITHOUT_CLASSIFICATION	1.80926198624595E-5	IMPLEMENTATION
the name of an sql function	WITHOUT_CLASSIFICATION	0.9999987483887284	WITHOUT_CLASSIFICATION	1.251611271623161E-6	IMPLEMENTATION
null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.999995644286667	WITHOUT_CLASSIFICATION	4.355713332966415E-6	IMPLEMENTATION
this is basically a copy/paste of orderbyparser might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999865720383909	WITHOUT_CLASSIFICATION	1.3427961608958628E-5	IMPLEMENTATION
select p from p in class eg.person group by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999998723690459	WITHOUT_CLASSIFICATION	1.2763095421785672E-7	IMPLEMENTATION
return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999683934966949	WITHOUT_CLASSIFICATION	3.1606503305258814E-5	IMPLEMENTATION
register collection role	WITHOUT_CLASSIFICATION	0.9998753843442792	WITHOUT_CLASSIFICATION	1.2461565572075272E-4	IMPLEMENTATION
the keyword used to specify an identity column if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999977825164875	WITHOUT_CLASSIFICATION	2.2174835124690875E-6	IMPLEMENTATION
.getelementpropertymapping()	WITHOUT_CLASSIFICATION	0.9999711319867853	WITHOUT_CLASSIFICATION	2.8868013214564136E-5	IMPLEMENTATION
crossjoins.add(name)	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
ie no select clause in hql	WITHOUT_CLASSIFICATION	0.9999984781081913	WITHOUT_CLASSIFICATION	1.521891808671488E-6	IMPLEMENTATION
initialize the set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.999995705500395	WITHOUT_CLASSIFICATION	4.294499605093011E-6	IMPLEMENTATION
ie. no select clause	WITHOUT_CLASSIFICATION	0.9999773158874181	WITHOUT_CLASSIFICATION	2.2684112581857616E-5	IMPLEMENTATION
there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999867254092887	WITHOUT_CLASSIFICATION	1.3274590711229296E-5	IMPLEMENTATION
return the concrete type or the underlying type if a concrete type was not specified	WITHOUT_CLASSIFICATION	0.9999984696032392	WITHOUT_CLASSIFICATION	1.5303967607438642E-6	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9999620121005702	WITHOUT_CLASSIFICATION	3.798789942980245E-5	IMPLEMENTATION
q.addcollection(collectionname collectionrole)	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9971122186739574	WITHOUT_CLASSIFICATION	0.0028877813260426125	IMPLEMENTATION
can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999790645737093	WITHOUT_CLASSIFICATION	2.0935426290725364E-5	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9997361569793469	WITHOUT_CLASSIFICATION	2.6384302065313517E-4	IMPLEMENTATION
this is the legacy behaviour for hql queries	WITHOUT_CLASSIFICATION	0.9999933468211465	WITHOUT_CLASSIFICATION	6.653178853508326E-6	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989433847723492	WITHOUT_CLASSIFICATION	0.00105661522765073	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989433847723492	WITHOUT_CLASSIFICATION	0.00105661522765073	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces early exit!!!!	WITHOUT_CLASSIFICATION	0.9999970645456981	WITHOUT_CLASSIFICATION	2.9354543019042867E-6	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989433847723492	WITHOUT_CLASSIFICATION	0.00105661522765073	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989433847723492	WITHOUT_CLASSIFICATION	0.00105661522765073	IMPLEMENTATION
need this since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9997838083281005	WITHOUT_CLASSIFICATION	2.1619167189947173E-4	IMPLEMENTATION
tokens that close a sub expression tokens that open a sub expression tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999685145422805	WITHOUT_CLASSIFICATION	3.148545771944062E-5	IMPLEMENTATION
expressionterminators.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999736653232161	WITHOUT_CLASSIFICATION	2.6334676783999284E-5	IMPLEMENTATION
expressionopeners.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999736653232161	WITHOUT_CLASSIFICATION	2.6334676783999284E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource) early exit!!!!	WITHOUT_CLASSIFICATION	0.9999420218012626	WITHOUT_CLASSIFICATION	5.797819873747668E-5	IMPLEMENTATION
otherwise a trim-specification and/or a trim-character have been specified we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character (what is to be trimmed off?) the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9914355370317705	WITHOUT_CLASSIFICATION	0.00856446296822948	IMPLEMENTATION
inside a between and expression	WITHOUT_CLASSIFICATION	0.9999417213165812	WITHOUT_CLASSIFICATION	5.827868341890653E-5	IMPLEMENTATION
were an odd or even number of nots encountered the join string built up by compound paths inside this expression a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999999585811813	WITHOUT_CLASSIFICATION	4.141881867630537E-8	IMPLEMENTATION
ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999702782079417	WITHOUT_CLASSIFICATION	2.9721792058295666E-5	IMPLEMENTATION
cope with []	WITHOUT_CLASSIFICATION	0.9999483716944141	WITHOUT_CLASSIFICATION	5.162830558593335E-5	IMPLEMENTATION
cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9997917379352417	WITHOUT_CLASSIFICATION	2.0826206475830798E-4	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999890503704547	WITHOUT_CLASSIFICATION	1.0949629545312656E-5	IMPLEMENTATION
cope with a subselect	WITHOUT_CLASSIFICATION	0.999965188217175	WITHOUT_CLASSIFICATION	3.4811782824943644E-5	IMPLEMENTATION
cope with special cases of and not ()	WITHOUT_CLASSIFICATION	0.9998175564094957	WITHOUT_CLASSIFICATION	1.8244359050443402E-4	IMPLEMENTATION
close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999988025376269	WITHOUT_CLASSIFICATION	1.197462373105901E-6	IMPLEMENTATION
take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999947882527468	WITHOUT_CLASSIFICATION	5.211747253237528E-6	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999970792615879	WITHOUT_CLASSIFICATION	2.9207384121732325E-6	IMPLEMENTATION
process a token mapping oo path expressions to sql expressions	WITHOUT_CLASSIFICATION	0.9999910935748784	WITHOUT_CLASSIFICATION	8.906425121549606E-6	IMPLEMENTATION
open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999856755346849	WITHOUT_CLASSIFICATION	1.4324465315033309E-5	IMPLEMENTATION
cope with special cases of and not )	WITHOUT_CLASSIFICATION	0.9983095188307611	WITHOUT_CLASSIFICATION	0.001690481169238875	IMPLEMENTATION
the next one up must also be	WITHOUT_CLASSIFICATION	0.9999360951140598	WITHOUT_CLASSIFICATION	6.390488594024277E-5	IMPLEMENTATION
add any joins	WITHOUT_CLASSIFICATION	0.9999547480885629	WITHOUT_CLASSIFICATION	4.5251911437153646E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999970792615879	WITHOUT_CLASSIFICATION	2.9207384121732325E-6	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9999972701206233	WITHOUT_CLASSIFICATION	2.7298793766588418E-6	IMPLEMENTATION
path expression	WITHOUT_CLASSIFICATION	0.9997497425085617	WITHOUT_CLASSIFICATION	2.502574914382133E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999839261654578	WITHOUT_CLASSIFICATION	1.6073834542160095E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999195100309413	WITHOUT_CLASSIFICATION	8.048996905878358E-5	IMPLEMENTATION
anything else	WITHOUT_CLASSIFICATION	0.9999349509861954	WITHOUT_CLASSIFICATION	6.504901380456323E-5	IMPLEMENTATION
the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999549419659409	WITHOUT_CLASSIFICATION	4.505803405897184E-5	IMPLEMENTATION
careful with this!	WITHOUT_CLASSIFICATION	0.9999000052611534	WITHOUT_CLASSIFICATION	9.999473884661874E-5	IMPLEMENTATION
the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.999949795626375	WITHOUT_CLASSIFICATION	5.020437362505503E-5	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.9999832173424106	WITHOUT_CLASSIFICATION	1.6782657589497526E-5	IMPLEMENTATION
notice no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999999199657619	WITHOUT_CLASSIFICATION	8.003423810934276E-8	IMPLEMENTATION
cannot instantiate	WITHOUT_CLASSIFICATION	0.9999953362489832	WITHOUT_CLASSIFICATION	4.663751016875921E-6	IMPLEMENTATION
start by looking for hql keywords	WITHOUT_CLASSIFICATION	0.999999435330901	WITHOUT_CLASSIFICATION	5.646690989959851E-7	IMPLEMENTATION
inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999798175058333	WITHOUT_CLASSIFICATION	2.0182494166596224E-5	IMPLEMENTATION
'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9998336493258473	WITHOUT_CLASSIFICATION	1.6635067415281097E-4	IMPLEMENTATION
now anything that is not a hql keyword	WITHOUT_CLASSIFICATION	0.9993211932684982	WITHOUT_CLASSIFICATION	6.78806731501763E-4	IMPLEMENTATION
process the "old" hql style where aliases appear _first_ ie. using the in or in class constructions	WITHOUT_CLASSIFICATION	0.9999996435366678	WITHOUT_CLASSIFICATION	3.564633321488154E-7	IMPLEMENTATION
treat it as a classname	WITHOUT_CLASSIFICATION	0.9999225580049388	WITHOUT_CLASSIFICATION	7.744199506118362E-5	IMPLEMENTATION
treat it as a path expression	WITHOUT_CLASSIFICATION	0.9994763084319795	WITHOUT_CLASSIFICATION	5.236915680204979E-4	IMPLEMENTATION
starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999991056095983	WITHOUT_CLASSIFICATION	8.943904016133618E-7	IMPLEMENTATION
starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999012188631491	WITHOUT_CLASSIFICATION	9.878113685093518E-5	IMPLEMENTATION
allow odmg oql style from person p p.cars c	WITHOUT_CLASSIFICATION	0.9999655732714514	WITHOUT_CLASSIFICATION	3.442672854861438E-5	IMPLEMENTATION
handle quoted strings	WITHOUT_CLASSIFICATION	0.9994530590206433	WITHOUT_CLASSIFICATION	5.469409793566678E-4	IMPLEMENTATION
object insertions updates and deletions have list semantics because they must happen in the right order so as to respect referential integrity	WITHOUT_CLASSIFICATION	0.9999999527452414	WITHOUT_CLASSIFICATION	4.7254758511884547E-8	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.9999832173424106	WITHOUT_CLASSIFICATION	1.6782657589497526E-5	IMPLEMENTATION
ignore whitespace	WITHOUT_CLASSIFICATION	0.9999416259377834	WITHOUT_CLASSIFICATION	5.837406221675889E-5	IMPLEMENTATION
do replacements	WITHOUT_CLASSIFICATION	0.9999344420192339	WITHOUT_CLASSIFICATION	6.555798076612295E-5	IMPLEMENTATION
handle hql2 collection syntax	WITHOUT_CLASSIFICATION	0.9997143787489091	WITHOUT_CLASSIFICATION	2.856212510908101E-4	IMPLEMENTATION
uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.999986226512582	WITHOUT_CLASSIFICATION	1.3773487418168869E-5	IMPLEMENTATION
abstractselectingdelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999771201980376	WITHOUT_CLASSIFICATION	2.287980196228226E-5	IMPLEMENTATION
hilo params	WITHOUT_CLASSIFICATION	0.9999623787112591	WITHOUT_CLASSIFICATION	3.762128874079306E-5	IMPLEMENTATION
sql = query	WITHOUT_CLASSIFICATION	0.9999733953349998	WITHOUT_CLASSIFICATION	2.660466500013328E-5	IMPLEMENTATION
performance opt	WITHOUT_CLASSIFICATION	0.99936918532616	WITHOUT_CLASSIFICATION	6.308146738400509E-4	IMPLEMENTATION
sql = update	WITHOUT_CLASSIFICATION	0.9999886651759853	WITHOUT_CLASSIFICATION	1.1334824014623135E-5	IMPLEMENTATION
hilo config	WITHOUT_CLASSIFICATION	0.9996990821736768	WITHOUT_CLASSIFICATION	3.0091782632327726E-4	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.999993604812296	WITHOUT_CLASSIFICATION	6.395187703937244E-6	IMPLEMENTATION
don't allow comments on these insert statements as comments totally blow up the oracle getgeneratedkeys "support" (	WITHOUT_CLASSIFICATION	0.9999777417101675	WITHOUT_CLASSIFICATION	2.2258289832565445E-5	IMPLEMENTATION
abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999999402724843	WITHOUT_CLASSIFICATION	5.972751566198632E-8	IMPLEMENTATION
throw new identifiergenerationexception("save associated object first or disable cascade for inverse association")	WITHOUT_CLASSIFICATION	0.9999966202450404	WITHOUT_CLASSIFICATION	3.3797549596306673E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9994734776386032	WITHOUT_CLASSIFICATION	5.265223613968924E-4	IMPLEMENTATION
do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999803012819507	WITHOUT_CLASSIFICATION	1.969871804923981E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999990815137096	WITHOUT_CLASSIFICATION	9.184862902351367E-7	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.999993604812296	WITHOUT_CLASSIFICATION	6.395187703937244E-6	IMPLEMENTATION
do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999756407270641	WITHOUT_CLASSIFICATION	2.435927293581521E-5	IMPLEMENTATION
column and table should be renamed but it would break the public api	WITHOUT_CLASSIFICATION	0.9999890997987756	WITHOUT_CLASSIFICATION	1.090020122433198E-5	IMPLEMENTATION
loaded entity instances by entitykey	WITHOUT_CLASSIFICATION	0.9999917426286483	WITHOUT_CLASSIFICATION	8.257371351697394E-6	IMPLEMENTATION
if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.999976896424232	WITHOUT_CLASSIFICATION	2.3103575767968925E-5	IMPLEMENTATION
the default	WITHOUT_CLASSIFICATION	0.9999954723544698	WITHOUT_CLASSIFICATION	4.527645530126652E-6	IMPLEMENTATION
unfortunately not really safe to normalize this to 1 as an initial value like we do the others because we would not be able to control this if we are using a sequence	WITHOUT_CLASSIFICATION	0.999973039364183	WITHOUT_CLASSIFICATION	2.6960635816954655E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9994734776386032	WITHOUT_CLASSIFICATION	5.265223613968924E-4	IMPLEMENTATION
identity map of collectionentry instances by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999944239241584	WITHOUT_CLASSIFICATION	5.576075841625739E-6	IMPLEMENTATION
general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999991070744265	WITHOUT_CLASSIFICATION	8.929255735035272E-6	IMPLEMENTATION
table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999642417324421	WITHOUT_CLASSIFICATION	3.575826755779638E-5	IMPLEMENTATION
configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9610305630052042	WITHOUT_CLASSIFICATION	0.03896943699479586	IMPLEMENTATION
identifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998420144097382	WITHOUT_CLASSIFICATION	1.579855902618271E-4	IMPLEMENTATION
persistentidentifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998420144097382	WITHOUT_CLASSIFICATION	1.579855902618271E-4	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999972276637179	WITHOUT_CLASSIFICATION	2.772336282129816E-6	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999972276637179	WITHOUT_CLASSIFICATION	2.772336282129816E-6	IMPLEMENTATION
fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999976400715112	WITHOUT_CLASSIFICATION	2.359928488958616E-6	IMPLEMENTATION
we just hit the last position	WITHOUT_CLASSIFICATION	0.9999973379958552	WITHOUT_CLASSIFICATION	2.6620041448265427E-6	IMPLEMENTATION
scroll ahead	WITHOUT_CLASSIFICATION	0.9999848722051231	WITHOUT_CLASSIFICATION	1.5127794876905395E-5	IMPLEMENTATION
scroll backward	WITHOUT_CLASSIFICATION	0.9999585269511058	WITHOUT_CLASSIFICATION	4.1473048894162517E-5	IMPLEMENTATION
we have not yet hit the last result	WITHOUT_CLASSIFICATION	0.9978888820967032	WITHOUT_CLASSIFICATION	0.0021111179032967963	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999670822329141	WITHOUT_CLASSIFICATION	3.291776708587431E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999925232025585	WITHOUT_CLASSIFICATION	7.476797441493526E-6	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999810034741716	WITHOUT_CLASSIFICATION	1.89965258284428E-5	IMPLEMENTATION
do this when all the properties are updateable since there is a certain likelihood that the information will already be snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999999894263494	WITHOUT_CLASSIFICATION	1.0573650538513973E-8	IMPLEMENTATION
inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999674581244563	WITHOUT_CLASSIFICATION	3.254187554370287E-5	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999670822329141	WITHOUT_CLASSIFICATION	3.291776708587431E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999925232025585	WITHOUT_CLASSIFICATION	7.476797441493526E-6	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999810034741716	WITHOUT_CLASSIFICATION	1.89965258284428E-5	IMPLEMENTATION
caches	WITHOUT_CLASSIFICATION	0.9999837659366951	WITHOUT_CLASSIFICATION	1.6234063304875008E-5	IMPLEMENTATION
generators	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
cache region is defined by the root-class in the hierarchy	WITHOUT_CLASSIFICATION	0.9999994328759506	WITHOUT_CLASSIFICATION	5.671240493736347E-7	IMPLEMENTATION
check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999987869785508	WITHOUT_CLASSIFICATION	1.213021449149114E-6	IMPLEMENTATION
after all persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999985580437566	WITHOUT_CLASSIFICATION	1.4419562434199326E-6	IMPLEMENTATION
if we get here it is possible that we have a proxy 'in the way' of the merge map resolution note decided to put this here rather than in the above loop as i was nervous about the performance of the loop-in-loop especially considering this is far more likely the 'edge case'	WITHOUT_CLASSIFICATION	0.999997811375431	WITHOUT_CLASSIFICATION	2.188624568989424E-6	IMPLEMENTATION
jndi + serialization	WITHOUT_CLASSIFICATION	0.9999148057929668	WITHOUT_CLASSIFICATION	8.519420703316924E-5	IMPLEMENTATION
checking for named queries	WITHOUT_CLASSIFICATION	0.9999072721847961	WITHOUT_CLASSIFICATION	9.272781520387676E-5	IMPLEMENTATION
stats	WITHOUT_CLASSIFICATION	0.9999892248069305	WITHOUT_CLASSIFICATION	1.0775193069498127E-5	IMPLEMENTATION
entitynotfounddelegate	WITHOUT_CLASSIFICATION	0.9999711319867853	WITHOUT_CLASSIFICATION	2.8868013214564136E-5	IMPLEMENTATION
check named hql queries	WITHOUT_CLASSIFICATION	0.9999511129110545	WITHOUT_CLASSIFICATION	4.888708894536458E-5	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999770581423777	WITHOUT_CLASSIFICATION	2.2941857622356625E-5	IMPLEMENTATION
prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9999277933374875	WITHOUT_CLASSIFICATION	7.220666251251931E-5	IMPLEMENTATION
from javax.naming.referenceable	WITHOUT_CLASSIFICATION	0.9999933858507876	WITHOUT_CLASSIFICATION	6.6141492125182335E-6	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.999994981521414	WITHOUT_CLASSIFICATION	5.0184785859177645E-6	IMPLEMENTATION
for a dynamic-class	WITHOUT_CLASSIFICATION	0.999984378073128	WITHOUT_CLASSIFICATION	1.5621926872076477E-5	IMPLEMENTATION
test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.999999683632523	WITHOUT_CLASSIFICATION	3.163674770296711E-7	IMPLEMENTATION
note early exit	WITHOUT_CLASSIFICATION	0.9999165002039477	WITHOUT_CLASSIFICATION	8.349979605231668E-5	IMPLEMENTATION
for backward-compatability	WITHOUT_CLASSIFICATION	0.9999848264963612	WITHOUT_CLASSIFICATION	1.5173503638795814E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.999844930147959	WITHOUT_CLASSIFICATION	1.5506985204089636E-4	IMPLEMENTATION
to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999995613890287	WITHOUT_CLASSIFICATION	4.3861097136314797E-7	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999975573863414	WITHOUT_CLASSIFICATION	2.442613658615842E-6	IMPLEMENTATION
must add to jndi _after_ adding to hashmaps because some jndi servers use serialization	WITHOUT_CLASSIFICATION	0.9966774206188632	WITHOUT_CLASSIFICATION	0.0033225793811368087	IMPLEMENTATION
make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9998683968943783	WITHOUT_CLASSIFICATION	1.3160310562169362E-4	IMPLEMENTATION
for each of the defined parameters make sure its value has been set	WITHOUT_CLASSIFICATION	0.9999967667847283	WITHOUT_CLASSIFICATION	3.233215271718483E-6	IMPLEMENTATION
we never need to apply locks to the sql	WITHOUT_CLASSIFICATION	0.9968279675213142	WITHOUT_CLASSIFICATION	0.0031720324786859186	IMPLEMENTATION
inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999974008678398	WITHOUT_CLASSIFICATION	2.5991321601994485E-5	IMPLEMENTATION
deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999736929459064	WITHOUT_CLASSIFICATION	2.6307054093543735E-5	IMPLEMENTATION
during deserialization we need to reconnect all proxies and collections to this session as well as the entityentry and collectionentry instances these associations are transient because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999944285496167	WITHOUT_CLASSIFICATION	5.571450383247461E-6	IMPLEMENTATION
updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999723058768858	WITHOUT_CLASSIFICATION	2.7694123114272025E-5	IMPLEMENTATION
loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999869237490319	WITHOUT_CLASSIFICATION	1.3076250968070051E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999965065417348	WITHOUT_CLASSIFICATION	3.4934582653319393E-6	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999965065417348	WITHOUT_CLASSIFICATION	3.4934582653319393E-6	IMPLEMENTATION
first try to load it from the temp pc associated to this ss	WITHOUT_CLASSIFICATION	0.9999787104582472	WITHOUT_CLASSIFICATION	2.128954175288034E-5	IMPLEMENTATION
if the metadata allowed proxy creation and caller did not request forceful eager loading generate a proxy	WITHOUT_CLASSIFICATION	0.9998956341519856	WITHOUT_CLASSIFICATION	1.0436584801440317E-4	IMPLEMENTATION
otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9996591394990298	WITHOUT_CLASSIFICATION	3.408605009701244E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999968572342754	WITHOUT_CLASSIFICATION	3.142765724572723E-6	IMPLEMENTATION
no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999155766356236	WITHOUT_CLASSIFICATION	8.442336437643906E-5	IMPLEMENTATION
after setting values to object entitymode	WITHOUT_CLASSIFICATION	0.9999998097813511	WITHOUT_CLASSIFICATION	1.9021864890432465E-7	IMPLEMENTATION
for ejb3	WITHOUT_CLASSIFICATION	0.9999914315334432	WITHOUT_CLASSIFICATION	8.568466556797194E-6	IMPLEMENTATION
just ignore	WITHOUT_CLASSIFICATION	0.9999688152529368	WITHOUT_CLASSIFICATION	3.1184747063249754E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.999892082633078	WITHOUT_CLASSIFICATION	1.0791736692205813E-4	IMPLEMENTATION
saveorupdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999603717542268	WITHOUT_CLASSIFICATION	3.962824577322294E-5	IMPLEMENTATION
update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999605415856256	WITHOUT_CLASSIFICATION	3.94584143743701E-5	IMPLEMENTATION
lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999603717542268	WITHOUT_CLASSIFICATION	3.962824577322294E-5	IMPLEMENTATION
persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999603717542268	WITHOUT_CLASSIFICATION	3.962824577322294E-5	IMPLEMENTATION
persistonflush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999603717542268	WITHOUT_CLASSIFICATION	3.962824577322294E-5	IMPLEMENTATION
merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999603822246514	WITHOUT_CLASSIFICATION	3.9617775348580584E-5	IMPLEMENTATION
saveorupdatecopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999603717542268	WITHOUT_CLASSIFICATION	3.962824577322294E-5	IMPLEMENTATION
delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999604135824203	WITHOUT_CLASSIFICATION	3.9586417579778044E-5	IMPLEMENTATION
load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999603717542268	WITHOUT_CLASSIFICATION	3.962824577322294E-5	IMPLEMENTATION
refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999603717542268	WITHOUT_CLASSIFICATION	3.962824577322294E-5	IMPLEMENTATION
replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999603717542268	WITHOUT_CLASSIFICATION	3.962824577322294E-5	IMPLEMENTATION
do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9969931750718306	WITHOUT_CLASSIFICATION	0.0030068249281693955	IMPLEMENTATION
this is an internal error of some sort	WITHOUT_CLASSIFICATION	0.9994979689219482	WITHOUT_CLASSIFICATION	5.020310780517085E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999978264288711	WITHOUT_CLASSIFICATION	2.17357112875374E-6	IMPLEMENTATION
only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.999972984690627	WITHOUT_CLASSIFICATION	2.7015309372965568E-5	IMPLEMENTATION
if it was previously unreferenced we need to flush in order to get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999999904246171	WITHOUT_CLASSIFICATION	9.575382962210506E-9	IMPLEMENTATION
not for internal use	WITHOUT_CLASSIFICATION	0.9980261439793611	WITHOUT_CLASSIFICATION	0.001973856020638843	IMPLEMENTATION
otherwise we only need to flush if there are in-memory changes to the queried tables	WITHOUT_CLASSIFICATION	0.9998919689646569	WITHOUT_CLASSIFICATION	1.080310353429551E-4	IMPLEMENTATION
might need to run a different filter entirely after the flush because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9116206727780853	WITHOUT_CLASSIFICATION	0.08837932722191463	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999978264288711	WITHOUT_CLASSIFICATION	2.17357112875374E-6	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999978264288711	WITHOUT_CLASSIFICATION	2.17357112875374E-6	IMPLEMENTATION
if it is initialized see if the underlying instance is contained since we need to account for the fact that it might have been evicted	WITHOUT_CLASSIFICATION	0.9999934727229498	WITHOUT_CLASSIFICATION	6.5272770501542825E-6	IMPLEMENTATION
basically just an adapted copy of find(criteriaimpl)	WITHOUT_CLASSIFICATION	0.9999812717152594	WITHOUT_CLASSIFICATION	1.872828474068587E-5	IMPLEMENTATION
it is possible for this method to be called during flush processing so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9998724301954407	WITHOUT_CLASSIFICATION	1.275698045592619E-4	IMPLEMENTATION
nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.999996109348467	WITHOUT_CLASSIFICATION	3.890651533043588E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.999977527394885	WITHOUT_CLASSIFICATION	2.2472605114975415E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.999844930147959	WITHOUT_CLASSIFICATION	1.5506985204089636E-4	IMPLEMENTATION
we need to writeobject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9997926150207976	WITHOUT_CLASSIFICATION	2.073849792024568E-4	IMPLEMENTATION
the old-time stand-by	WITHOUT_CLASSIFICATION	0.999981002378148	WITHOUT_CLASSIFICATION	1.8997621852004173E-5	IMPLEMENTATION
parameter bind values	WITHOUT_CLASSIFICATION	0.9999988577604975	WITHOUT_CLASSIFICATION	1.1422395024993882E-6	IMPLEMENTATION
parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999953940192093	WITHOUT_CLASSIFICATION	4.605980790698838E-5	IMPLEMENTATION
prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999985840127306	WITHOUT_CLASSIFICATION	1.41598726949768E-6	IMPLEMENTATION
execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999812673335098	WITHOUT_CLASSIFICATION	1.873266649022564E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999799972488017	WITHOUT_CLASSIFICATION	2.000275119830852E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999799972488017	WITHOUT_CLASSIFICATION	2.000275119830852E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999799972488017	WITHOUT_CLASSIFICATION	2.000275119830852E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999799972488017	WITHOUT_CLASSIFICATION	2.000275119830852E-5	IMPLEMENTATION
fieldinterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999771201980376	WITHOUT_CLASSIFICATION	2.287980196228226E-5	IMPLEMENTATION
subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999747570163716	WITHOUT_CLASSIFICATION	2.5242983628360427E-5	IMPLEMENTATION
let's assume that there is only one lazy fetch group for now!	WITHOUT_CLASSIFICATION	0.9999866679287592	WITHOUT_CLASSIFICATION	1.333207124089256E-5	IMPLEMENTATION
fieldhandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999771201980376	WITHOUT_CLASSIFICATION	2.287980196228226E-5	IMPLEMENTATION
should not need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9964287988240712	WITHOUT_CLASSIFICATION	0.003571201175928702	IMPLEMENTATION
should probably no-op commit/rollback here at least in jta scenarios	WITHOUT_CLASSIFICATION	0.9999836932943988	WITHOUT_CLASSIFICATION	1.6306705601126714E-5	IMPLEMENTATION
base expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999931350229522	WITHOUT_CLASSIFICATION	6.86497704780858E-6	IMPLEMENTATION
various expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999965669159971	WITHOUT_CLASSIFICATION	3.433084002904956E-5	IMPLEMENTATION
explicitly perform no checking	WITHOUT_CLASSIFICATION	0.9997405920374601	WITHOUT_CLASSIFICATION	2.594079625399083E-4	IMPLEMENTATION
used from testsuite	WITHOUT_CLASSIFICATION	0.9999959383133371	WITHOUT_CLASSIFICATION	4.061686662827305E-6	IMPLEMENTATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.999999900202205	WITHOUT_CLASSIFICATION	9.97977949536016E-8	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999179931443145	WITHOUT_CLASSIFICATION	8.200685568552572E-5	IMPLEMENTATION
register synch stats.connect()	WITHOUT_CLASSIFICATION	0.9999682924472425	WITHOUT_CLASSIFICATION	3.170755275743196E-5	IMPLEMENTATION
noncritical swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999804446045902	WITHOUT_CLASSIFICATION	1.9555395409688497E-5	IMPLEMENTATION
calls executebatch()	WITHOUT_CLASSIFICATION	0.9999297734056828	WITHOUT_CLASSIFICATION	7.022659431717654E-5	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9999611304921334	WITHOUT_CLASSIFICATION	3.886950786652132E-5	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9999611304921334	WITHOUT_CLASSIFICATION	3.886950786652132E-5	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9999611304921334	WITHOUT_CLASSIFICATION	3.886950786652132E-5	IMPLEMENTATION
sybase driver (jconnect) throwing npe here in certain cases but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.999997459563121	WITHOUT_CLASSIFICATION	2.5404368789413124E-6	IMPLEMENTATION
see explanation above	WITHOUT_CLASSIFICATION	0.9999742829590405	WITHOUT_CLASSIFICATION	2.571704095948443E-5	IMPLEMENTATION
if we are in the process of releasing no sense checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999999293666342	WITHOUT_CLASSIFICATION	7.063336583177266E-8	IMPLEMENTATION
early exit!!!!	WITHOUT_CLASSIFICATION	0.9999730728269116	WITHOUT_CLASSIFICATION	2.6927173088440744E-5	IMPLEMENTATION
resultset impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999773823964682	WITHOUT_CLASSIFICATION	2.261760353185257E-5	IMPLEMENTATION
resultset impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999773823964682	WITHOUT_CLASSIFICATION	2.261760353185257E-5	IMPLEMENTATION
refer to comment in statefulpersistencecontext.addcollection()	WITHOUT_CLASSIFICATION	0.9999902593904225	WITHOUT_CLASSIFICATION	9.74060957751801E-6	IMPLEMENTATION
connectionmanager.callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998420144097382	WITHOUT_CLASSIFICATION	1.579855902618271E-4	IMPLEMENTATION
note success = false because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9992030021869321	WITHOUT_CLASSIFICATION	7.969978130678176E-4	IMPLEMENTATION
we already have a callback registered either a local (org.hibernate.transaction) transaction has accepted callback responsibilities or we have previously registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999993458045655	WITHOUT_CLASSIFICATION	6.541954344638601E-7	IMPLEMENTATION
the configured transaction-factory says it only supports local callback mode so no sense attempting to register a jta synchronization	WITHOUT_CLASSIFICATION	0.999924876379172	WITHOUT_CLASSIFICATION	7.512362082797593E-5	IMPLEMENTATION
transactions marked for rollback-only cause some tm impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9935951676299992	WITHOUT_CLASSIFICATION	0.006404832370000718	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432526794741	WITHOUT_CLASSIFICATION	5.674732052582677E-5	IMPLEMENTATION
postinitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999985857529249	WITHOUT_CLASSIFICATION	1.4142470751538978E-6	IMPLEMENTATION
cannot handle single quotes	WITHOUT_CLASSIFICATION	0.999960417022978	WITHOUT_CLASSIFICATION	3.9582977022025913E-5	IMPLEMENTATION
todo for 4.0 private static final logger log = loggerfactory.getlogger( sqlstatementlogger.class ) this is the legacy logging 'category'	WITHOUT_CLASSIFICATION	0.9323427348690014	WITHOUT_CLASSIFICATION	0.06765726513099857	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999875808513604	WITHOUT_CLASSIFICATION	1.2419148639606378E-5	IMPLEMENTATION
don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999928222979814	WITHOUT_CLASSIFICATION	7.1777020185793115E-6	IMPLEMENTATION
don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999973783205988	WITHOUT_CLASSIFICATION	2.6216794012892325E-6	IMPLEMENTATION
position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999909094554691	WITHOUT_CLASSIFICATION	9.090544530924479E-6	IMPLEMENTATION
sequentially read the result set in reverse until we recognize a change in the key value. at that point we are pointed at the last physical sequential row for the logical row in which we are interested in processing	WITHOUT_CLASSIFICATION	0.999999999608109	WITHOUT_CLASSIFICATION	3.918909815586107E-10	IMPLEMENTATION
read backwards until we read past the first physical sequential row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999999940621837	WITHOUT_CLASSIFICATION	5.9378163971649346E-9	IMPLEMENTATION
finally read ahead one row to position result set cursor at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999999994501813	WITHOUT_CLASSIFICATION	5.498186401816456E-10	IMPLEMENTATION
now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999999481291351	WITHOUT_CLASSIFICATION	5.187086494993864E-8	IMPLEMENTATION
force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9998866355971306	WITHOUT_CLASSIFICATION	1.1336440286926035E-4	IMPLEMENTATION
this is equivalent to the old behavior	WITHOUT_CLASSIFICATION	0.9999888405578506	WITHOUT_CLASSIFICATION	1.1159442149392948E-5	IMPLEMENTATION
if null owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999998819424584	WITHOUT_CLASSIFICATION	1.1805754156370008E-7	IMPLEMENTATION
final string querystring	WITHOUT_CLASSIFICATION	0.9999959871191799	WITHOUT_CLASSIFICATION	4.012880820118962E-6	IMPLEMENTATION
if it was a reference to self don't need to nullify unless we are using native id generation in which case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999999868800749	WITHOUT_CLASSIFICATION	1.3119925127346874E-8	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999971054314245	WITHOUT_CLASSIFICATION	2.894568575503899E-6	IMPLEMENTATION
in an effort to avoid concurrent-modification-exceptions (from potential recursive calls back through here as a result of the eventual call to persistentcollection#endread) we scan the internal loadingcollections map for matches and store those matches in a temp collection. the temp collection is then used to "drive" the #endread processing.	WITHOUT_CLASSIFICATION	0.9999999573724341	WITHOUT_CLASSIFICATION	4.262756589442377E-8	IMPLEMENTATION
we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999871814325569	WITHOUT_CLASSIFICATION	1.2818567443171444E-5	IMPLEMENTATION
can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999861393571912	WITHOUT_CLASSIFICATION	1.386064280877733E-5	IMPLEMENTATION
first we need to suspend any current jta transaction and obtain a jdbc connection	WITHOUT_CLASSIFICATION	0.9868873550876848	WITHOUT_CLASSIFICATION	0.013112644912315142	IMPLEMENTATION
getresultlist(results)	WITHOUT_CLASSIFICATION	0.9999711319867853	WITHOUT_CLASSIFICATION	2.8868013214564136E-5	IMPLEMENTATION
if we only returned one entity query by key is more efficient	WITHOUT_CLASSIFICATION	0.9999993750244078	WITHOUT_CLASSIFICATION	6.249755920535183E-7	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9994218095027696	WITHOUT_CLASSIFICATION	5.781904972303317E-4	IMPLEMENTATION
handle empty collection	WITHOUT_CLASSIFICATION	0.9958891489940372	WITHOUT_CLASSIFICATION	0.004110851005962752	IMPLEMENTATION
else no collection element but also no owner	WITHOUT_CLASSIFICATION	0.9999995314149464	WITHOUT_CLASSIFICATION	4.685850537307233E-7	IMPLEMENTATION
handle empty collections	WITHOUT_CLASSIFICATION	0.9967516605197089	WITHOUT_CLASSIFICATION	0.00324833948029113	IMPLEMENTATION
else this is not a collection initializer (and empty collections will be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999777210723183	WITHOUT_CLASSIFICATION	2.2278927681732355E-5	IMPLEMENTATION
validate() instances of validatable	WITHOUT_CLASSIFICATION	0.9999774223019009	WITHOUT_CLASSIFICATION	2.2577698099140074E-5	IMPLEMENTATION
if we know there is exactly 1 row we can skip. it would be great if we could _always_ skip this it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9861664763143836	WITHOUT_CLASSIFICATION	0.013833523685616432	IMPLEMENTATION
remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999968556274844	WITHOUT_CLASSIFICATION	3.144372515664596E-6	IMPLEMENTATION
null version means the object is in the process of being loaded somewhere else in the resultset	WITHOUT_CLASSIFICATION	0.9999999993332354	WITHOUT_CLASSIFICATION	6.667646438282319E-10	IMPLEMENTATION
problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999860006500577	WITHOUT_CLASSIFICATION	1.3999349942274623E-5	IMPLEMENTATION
use the id passed in	WITHOUT_CLASSIFICATION	0.9999889086371918	WITHOUT_CLASSIFICATION	1.1091362808170755E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999952486389814	WITHOUT_CLASSIFICATION	4.751361018631992E-6	IMPLEMENTATION
prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999881903813438	WITHOUT_CLASSIFICATION	1.1809618656318413E-5	IMPLEMENTATION
no point doing this if none was requested	WITHOUT_CLASSIFICATION	0.9999999518519952	WITHOUT_CLASSIFICATION	4.814800480402585E-8	IMPLEMENTATION
if the object is already loaded return the loaded one	WITHOUT_CLASSIFICATION	0.9999999192920901	WITHOUT_CLASSIFICATION	8.070790982103282E-8	IMPLEMENTATION
its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9998772694580026	WITHOUT_CLASSIFICATION	1.2273054199745767E-4	IMPLEMENTATION
cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9993042509266175	WITHOUT_CLASSIFICATION	6.957490733825437E-4	IMPLEMENTATION
the load() which takes an entity does not pass an entityname	WITHOUT_CLASSIFICATION	0.9999705937472148	WITHOUT_CLASSIFICATION	2.940625278520734E-5	IMPLEMENTATION
we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999848294391498	WITHOUT_CLASSIFICATION	1.5170560850309066E-5	IMPLEMENTATION
look for a proxy	WITHOUT_CLASSIFICATION	0.9999804979329056	WITHOUT_CLASSIFICATION	1.9502067094402707E-5	IMPLEMENTATION
we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9995315317540154	WITHOUT_CLASSIFICATION	4.6846824598459753E-4	IMPLEMENTATION
its the given optional object	WITHOUT_CLASSIFICATION	0.9999918727897025	WITHOUT_CLASSIFICATION	8.127210297505864E-6	IMPLEMENTATION
instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999899860531122	WITHOUT_CLASSIFICATION	1.0013946887774781E-5	IMPLEMENTATION
need to hydrate it.	WITHOUT_CLASSIFICATION	0.9980580925195224	WITHOUT_CLASSIFICATION	0.0019419074804776573	IMPLEMENTATION
return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999974762278304	WITHOUT_CLASSIFICATION	2.5237721696279924E-6	IMPLEMENTATION
will be ignored using the existing entry instead	WITHOUT_CLASSIFICATION	0.9999861001091979	WITHOUT_CLASSIFICATION	1.3899890802252348E-5	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999805494412	WITHOUT_CLASSIFICATION	1.9450558836672488E-8	IMPLEMENTATION
materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999926246541545	WITHOUT_CLASSIFICATION	7.375345845435683E-6	IMPLEMENTATION
get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999966983825513	WITHOUT_CLASSIFICATION	3.3016174487521988E-6	IMPLEMENTATION
ok in normal hibernate usage to delete a detached entity jpa however forbids it thus this is a hook for hem to affect this behavior	WITHOUT_CLASSIFICATION	0.999999536887106	WITHOUT_CLASSIFICATION	4.631128940584085E-7	IMPLEMENTATION
the entry will be removed after the flush and will no longer override the stale snapshot this is now handled by removeentity() in entitydeleteaction persistencecontext.removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.9999566142834627	WITHOUT_CLASSIFICATION	4.338571653729718E-5	IMPLEMENTATION
addinitializedcollection(collection persister id)	WITHOUT_CLASSIFICATION	0.999958226161076	WITHOUT_CLASSIFICATION	4.177383892401331E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.999984181990816	WITHOUT_CLASSIFICATION	1.5818009184100214E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.999984181990816	WITHOUT_CLASSIFICATION	1.5818009184100214E-5	IMPLEMENTATION
|| oj.getjoinable().consumescollectionalias()	WITHOUT_CLASSIFICATION	0.9999782575087197	WITHOUT_CLASSIFICATION	2.174249128017413E-5	IMPLEMENTATION
here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9837350368655484	WITHOUT_CLASSIFICATION	0.016264963134451613	IMPLEMENTATION
code to handle subclasses of topclass	WITHOUT_CLASSIFICATION	0.99996854616805	WITHOUT_CLASSIFICATION	3.145383195003063E-5	IMPLEMENTATION
woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999975874759999	WITHOUT_CLASSIFICATION	2.4125240002376944E-6	IMPLEMENTATION
we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999808770821654	WITHOUT_CLASSIFICATION	1.9122917834553156E-5	IMPLEMENTATION
we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999774288457588	WITHOUT_CLASSIFICATION	2.2571154241274153E-5	IMPLEMENTATION
synchronized to avoid multi-thread access issues defined as method synch to avoid potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999978275883634	WITHOUT_CLASSIFICATION	2.1724116366673946E-6	IMPLEMENTATION
allows various loaders (ok mainly the queryloader ) to check whether scrolling of their result set should be allowed. by default it is allowed.	WITHOUT_CLASSIFICATION	0.9999999253379777	WITHOUT_CLASSIFICATION	7.466202233756575E-8	IMPLEMENTATION
before adding to collection!	WITHOUT_CLASSIFICATION	0.9999497879940391	WITHOUT_CLASSIFICATION	5.021200596080258E-5	IMPLEMENTATION
if the current depth is 0 the root thing being loaded is the many-to-many collection itself. here it is alright to use an inner join	WITHOUT_CLASSIFICATION	0.9999975549866434	WITHOUT_CLASSIFICATION	2.4450133565681415E-6	IMPLEMENTATION
operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999509215560498	WITHOUT_CLASSIFICATION	4.907844395023882E-5	IMPLEMENTATION
simple because we can't have a one-to-one or a collection (or even a property-ref) in a composite-element	WITHOUT_CLASSIFICATION	0.9999995256862741	WITHOUT_CLASSIFICATION	4.7431372582885655E-7	IMPLEMENTATION
a composite key	WITHOUT_CLASSIFICATION	0.9999687066225429	WITHOUT_CLASSIFICATION	3.129337745712654E-5	IMPLEMENTATION
if no batch use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999890053743969	WITHOUT_CLASSIFICATION	1.0994625603024793E-5	IMPLEMENTATION
it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999634728586575	WITHOUT_CLASSIFICATION	3.6527141342568486E-5	IMPLEMENTATION
needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.6223598946515091	IMPLEMENTATION	0.37764010534849096	WITHOUT_CLASSIFICATION
&& etype.isreferencetoprimarykey()	WITHOUT_CLASSIFICATION	0.9999737318839436	WITHOUT_CLASSIFICATION	2.6268116056530807E-5	IMPLEMENTATION
it might still need to apply a collection ordering based on a many-to-many defined order-by	WITHOUT_CLASSIFICATION	0.8933480210618984	WITHOUT_CLASSIFICATION	0.10665197893810166	IMPLEMENTATION
if a composite key use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching todo unnecessary for databases with ansi-style joins	WITHOUT_CLASSIFICATION	0.821709645998272	WITHOUT_CLASSIFICATION	0.17829035400172796	IMPLEMENTATION
belong to other persister belong to other persister	WITHOUT_CLASSIFICATION	0.9999739681279662	WITHOUT_CLASSIFICATION	2.6031872033814938E-5	IMPLEMENTATION
we found it	WITHOUT_CLASSIFICATION	0.9999645608323802	WITHOUT_CLASSIFICATION	3.543916761978936E-5	IMPLEMENTATION
we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999977310288238	WITHOUT_CLASSIFICATION	2.2689711761679648E-6	IMPLEMENTATION
disable a join back to this same association	WITHOUT_CLASSIFICATION	0.999825287551348	WITHOUT_CLASSIFICATION	1.7471244865193628E-4	IMPLEMENTATION
note unlike all other loaders this one is not multithreaded or cacheable!!	WITHOUT_CLASSIFICATION	0.9975947671177793	WITHOUT_CLASSIFICATION	0.0024052328822206435	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9999619227758307	WITHOUT_CLASSIFICATION	3.8077224169225413E-5	IMPLEMENTATION
root entity comes last	WITHOUT_CLASSIFICATION	0.999985428483723	WITHOUT_CLASSIFICATION	1.4571516276997639E-5	IMPLEMENTATION
deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999761717816347	WITHOUT_CLASSIFICATION	2.3828218365248683E-5	IMPLEMENTATION
alias may be null early exit	WITHOUT_CLASSIFICATION	0.9998944609189222	WITHOUT_CLASSIFICATION	1.0553908107784455E-4	IMPLEMENTATION
if it is a compound path	WITHOUT_CLASSIFICATION	0.9999936216060014	WITHOUT_CLASSIFICATION	6.378393998580462E-6	IMPLEMENTATION
otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9998111716651582	WITHOUT_CLASSIFICATION	1.8882833484174002E-4	IMPLEMENTATION
if its the root criteria we are done	WITHOUT_CLASSIFICATION	0.9999993460133826	WITHOUT_CLASSIFICATION	6.539866173814584E-7	IMPLEMENTATION
otherwise recurse	WITHOUT_CLASSIFICATION	0.9996208447224151	WITHOUT_CLASSIFICATION	3.7915527758496066E-4	IMPLEMENTATION
the criteria instance	WITHOUT_CLASSIFICATION	0.9999907284288376	WITHOUT_CLASSIFICATION	9.271571162418539E-6	IMPLEMENTATION
the entity name	WITHOUT_CLASSIFICATION	0.999982129454997	WITHOUT_CLASSIFICATION	1.7870545003078346E-5	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9999512804037101	WITHOUT_CLASSIFICATION	4.871959628988135E-5	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9999512804037101	WITHOUT_CLASSIFICATION	4.871959628988135E-5	IMPLEMENTATION
it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999890497309927	WITHOUT_CLASSIFICATION	1.09502690074202E-5	IMPLEMENTATION
should never happen i think	WITHOUT_CLASSIFICATION	0.9969452792720223	WITHOUT_CLASSIFICATION	0.0030547207279776442	IMPLEMENTATION
detect discriminator values	WITHOUT_CLASSIFICATION	0.9999909328864879	WITHOUT_CLASSIFICATION	9.067113512227322E-6	IMPLEMENTATION
convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.999952745108255	WITHOUT_CLASSIFICATION	4.7254891744979994E-5	IMPLEMENTATION
and the qualifier is not the alias of this criteria -> check to see if we belong to some criteria other than the one that created us	WITHOUT_CLASSIFICATION	0.9999586127628302	WITHOUT_CLASSIFICATION	4.1387237169913376E-5	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.999986427427061	WITHOUT_CLASSIFICATION	1.3572572938984336E-5	IMPLEMENTATION
otherwise this is an ordinary value.	WITHOUT_CLASSIFICATION	0.999935306958083	WITHOUT_CLASSIFICATION	6.469304191706716E-5	IMPLEMENTATION
currently not cachable if autodiscover types is in effect (e.g. "select ")	WITHOUT_CLASSIFICATION	0.999993970478466	WITHOUT_CLASSIFICATION	6.029521533948361E-6	IMPLEMENTATION
private final string[] sqlaliases private final string[] sqlaliassuffixes	WITHOUT_CLASSIFICATION	0.9999981175031555	WITHOUT_CLASSIFICATION	1.882496844629745E-6	IMPLEMENTATION
this is only needed (afaict) for resulttransformer processing	WITHOUT_CLASSIFICATION	0.9123418391589957	WITHOUT_CLASSIFICATION	0.08765816084100422	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999998722759948	WITHOUT_CLASSIFICATION	1.2772400514905194E-7	IMPLEMENTATION
build an array with indices equal to the total number of actual returns in the result hibernate will return for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999999107287297	WITHOUT_CLASSIFICATION	8.927127035212264E-8	IMPLEMENTATION
replace {.} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9971481949499531	WITHOUT_CLASSIFICATION	0.0028518050500469425	IMPLEMENTATION
no additional open braces found in the string append the rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999985324295201	WITHOUT_CLASSIFICATION	1.4675704799052215E-6	IMPLEMENTATION
apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999233170131806	WITHOUT_CLASSIFICATION	7.668298681939478E-5	IMPLEMENTATION
it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999957849215833	WITHOUT_CLASSIFICATION	4.215078416741632E-6	IMPLEMENTATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.7217909714948986	IMPLEMENTATION	0.27820902850510143	WITHOUT_CLASSIFICATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.7217909714948986	IMPLEMENTATION	0.27820902850510143	WITHOUT_CLASSIFICATION
the current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999840946068257	WITHOUT_CLASSIFICATION	1.5905393174229415E-5	IMPLEMENTATION
it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.999998900953519	WITHOUT_CLASSIFICATION	1.0990464809713672E-6	IMPLEMENTATION
possibly handle something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999176047848928	WITHOUT_CLASSIFICATION	8.23952151071701E-5	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999915901978591	WITHOUT_CLASSIFICATION	8.409802140937066E-6	IMPLEMENTATION
private final list persisters = new arraylist()	WITHOUT_CLASSIFICATION	0.9999979922974334	WITHOUT_CLASSIFICATION	2.0077025666494554E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999179931443145	WITHOUT_CLASSIFICATION	8.200685568552572E-5	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999902216837468	WITHOUT_CLASSIFICATION	9.778316253062016E-6	IMPLEMENTATION
private final list scalartypes = new arraylist() private final list scalarcolumnaliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999979922974334	WITHOUT_CLASSIFICATION	2.0077025666494554E-6	IMPLEMENTATION
now process the returns	WITHOUT_CLASSIFICATION	0.9999798841894072	WITHOUT_CLASSIFICATION	2.0115810592766096E-5	IMPLEMENTATION
private list collectionowneraliases = new arraylist() private list collectionaliases = new arraylist() private list collectionpersisters = new arraylist() private list collectionresults = new arraylist()	WITHOUT_CLASSIFICATION	0.9999941390349784	WITHOUT_CLASSIFICATION	5.8609650216657005E-6	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999744960036612	WITHOUT_CLASSIFICATION	2.5503996338756317E-5	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999744960036612	WITHOUT_CLASSIFICATION	2.5503996338756317E-5	IMPLEMENTATION
make sure the owner alias is known	WITHOUT_CLASSIFICATION	0.9999957411450144	WITHOUT_CLASSIFICATION	4.258854985569963E-6	IMPLEMENTATION
first break down the returns into maps keyed by alias so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999954093975422	WITHOUT_CLASSIFICATION	4.590602457875594E-6	IMPLEMENTATION
scalarcolumnaliases.add( typereturn.getcolumnalias() ) scalartypes.add( typereturn.gettype() )	WITHOUT_CLASSIFICATION	0.9999725479747231	WITHOUT_CLASSIFICATION	2.7452025276895127E-5	IMPLEMENTATION
if this return's alias has not been processed yet do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9992767520879349	WITHOUT_CLASSIFICATION	7.232479120651399E-4	IMPLEMENTATION
collectionowneraliases.add( owneralias )	WITHOUT_CLASSIFICATION	0.9999725479747231	WITHOUT_CLASSIFICATION	2.7452025276895127E-5	IMPLEMENTATION
for merging of versioned entities we consider the version having been changed only when 1) the two version values are different and 2) the target actually represents database state! this second condition is a special case which allows an entity to be merged during the same transaction (though during a seperate operation) in which it was originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999999999987613	WITHOUT_CLASSIFICATION	1.2386295291008493E-12	IMPLEMENTATION
this is the second pass through on a merge op so here we limit the replacement to associations types (value types were already replaced during the first pass)	WITHOUT_CLASSIFICATION	0.9999905744252178	WITHOUT_CLASSIFICATION	9.425574782296539E-6	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999420333188828	WITHOUT_CLASSIFICATION	5.796668111727327E-5	IMPLEMENTATION
cascade-save to collections after the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999994501783943	WITHOUT_CLASSIFICATION	5.498216055816804E-7	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9997655000179752	WITHOUT_CLASSIFICATION	2.344999820248228E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999698301943878	WITHOUT_CLASSIFICATION	3.016980561219023E-5	IMPLEMENTATION
currently only the hibernate-supplied dbtimestamptype is supported here	WITHOUT_CLASSIFICATION	0.9999976733950854	WITHOUT_CLASSIFICATION	2.3266049145517883E-6	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999842627583325	WITHOUT_CLASSIFICATION	1.573724166743508E-5	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9996834036743177	WITHOUT_CLASSIFICATION	3.165963256821943E-4	IMPLEMENTATION
not so sure this is even valid subtree. but if it was it'd represent two unrelated table references	WITHOUT_CLASSIFICATION	0.9999990772633315	WITHOUT_CLASSIFICATION	9.227366685475936E-7	IMPLEMENTATION
(not (gt a b) ) => (le a b)	WITHOUT_CLASSIFICATION	0.999990362205395	WITHOUT_CLASSIFICATION	9.637794605137222E-6	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9999939608842942	WITHOUT_CLASSIFICATION	6.039115705819051E-6	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998950815351124	WITHOUT_CLASSIFICATION	1.0491846488753708E-4	IMPLEMENTATION
sqlresulttypes = selectclause.getsqlresulttypes()	WITHOUT_CLASSIFICATION	0.9999242762711081	WITHOUT_CLASSIFICATION	7.572372889177453E-5	IMPLEMENTATION
by default	WITHOUT_CLASSIFICATION	0.999998787795195	WITHOUT_CLASSIFICATION	1.2122048049776968E-6	IMPLEMENTATION
this is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.99990775642431	WITHOUT_CLASSIFICATION	9.224357569000942E-5	IMPLEMENTATION
-- loader implementation --	WITHOUT_CLASSIFICATION	0.9999504228674124	WITHOUT_CLASSIFICATION	4.9577132587523605E-5	IMPLEMENTATION
-- loader overrides --	WITHOUT_CLASSIFICATION	0.9999920131191332	WITHOUT_CLASSIFICATION	7.986880866694481E-6	IMPLEMENTATION
(not (is_null a b) ) => (is_not_null a b)	WITHOUT_CLASSIFICATION	0.9999911079995258	WITHOUT_CLASSIFICATION	8.892000474250817E-6	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9995296129351919	WITHOUT_CLASSIFICATION	4.703870648081499E-4	IMPLEMENTATION
meant to handle dynamic instantiation queries	WITHOUT_CLASSIFICATION	0.9998745222473007	WITHOUT_CLASSIFICATION	1.2547775269933743E-4	IMPLEMENTATION
--- query translator methods ---	WITHOUT_CLASSIFICATION	0.9999865790064584	WITHOUT_CLASSIFICATION	1.3420993541604352E-5	IMPLEMENTATION
-- implementation private methods --	WITHOUT_CLASSIFICATION	0.9999925320148929	WITHOUT_CLASSIFICATION	7.467985107184012E-6	IMPLEMENTATION
deduplicate unique constraints sharing the same columns this is needed by hibernate annotations since it creates automagically unique constraints for the user	WITHOUT_CLASSIFICATION	0.9992002055266846	WITHOUT_CLASSIFICATION	7.997944733154148E-4	IMPLEMENTATION
try to find out the name of the primary key to create it as identity if the identitygenerator is used	WITHOUT_CLASSIFICATION	0.9999998891400997	WITHOUT_CLASSIFICATION	1.1085990035238267E-7	IMPLEMENTATION
to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9997500004591859	WITHOUT_CLASSIFICATION	2.499995408140529E-4	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999999969766151	WITHOUT_CLASSIFICATION	3.023384903961121E-8	IMPLEMENTATION
used also for generation of fk names!	WITHOUT_CLASSIFICATION	0.999987968011335	WITHOUT_CLASSIFICATION	1.2031988664865869E-5	IMPLEMENTATION
usually useless	WITHOUT_CLASSIFICATION	0.9999666005625042	WITHOUT_CLASSIFICATION	3.339943749585339E-5	IMPLEMENTATION
added this caching as i noticed that gettype() is being called multiple times	WITHOUT_CLASSIFICATION	0.9999935564942417	WITHOUT_CLASSIFICATION	6.443505758366914E-6	IMPLEMENTATION
do not add unique constraint on db not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9947399194712045	WITHOUT_CLASSIFICATION	0.0052600805287954305	IMPLEMENTATION
for backward compatibility disable this	WITHOUT_CLASSIFICATION	0.9998151243357749	WITHOUT_CLASSIFICATION	1.8487566422505295E-4	IMPLEMENTATION
may be final may be final may be final	WITHOUT_CLASSIFICATION	0.9999575823072997	WITHOUT_CLASSIFICATION	4.241769270034102E-5	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9999395020717404	WITHOUT_CLASSIFICATION	6.0497928259559314E-5	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9999395020717404	WITHOUT_CLASSIFICATION	6.0497928259559314E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999948510091597	WITHOUT_CLASSIFICATION	5.148990840298989E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999896970255736	WITHOUT_CLASSIFICATION	1.0302974426499387E-5	IMPLEMENTATION
the root of the incoming property path matched one of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999758602281358	WITHOUT_CLASSIFICATION	2.4139771864265453E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999721710485542	WITHOUT_CLASSIFICATION	2.782895144583499E-5	IMPLEMENTATION
flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999468493475226	WITHOUT_CLASSIFICATION	5.3150652477233265E-5	IMPLEMENTATION
an identifier mapper => getkey will be included in the getnonduplicatedpropertyiterator() and checked later so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999998298007545	WITHOUT_CLASSIFICATION	1.7019924540128918E-7	IMPLEMENTATION
if the hibernate-mapping did not specify a schema/catalog use the defaults specified by properties - but note that if the schema/catalog were specified in hibernate-mapping or as params they will already be initialized and will override the values set here (they are in identifiergeneratorproperties)	WITHOUT_CLASSIFICATION	0.999999998399621	WITHOUT_CLASSIFICATION	1.6003790366084659E-9	IMPLEMENTATION
pass the entity-name if not a collection-id	WITHOUT_CLASSIFICATION	0.9996869185396573	WITHOUT_CLASSIFICATION	3.130814603427085E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999948510091597	WITHOUT_CLASSIFICATION	5.148990840298989E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999896970255736	WITHOUT_CLASSIFICATION	1.0302974426499387E-5	IMPLEMENTATION
pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9998911354006179	WITHOUT_CLASSIFICATION	1.0886459938211673E-4	IMPLEMENTATION
needed to satisfy keyvalue	WITHOUT_CLASSIFICATION	0.7336947267968347	WITHOUT_CLASSIFICATION	0.2663052732031653	IMPLEMENTATION
empty means no scoping	WITHOUT_CLASSIFICATION	0.9999733770397357	WITHOUT_CLASSIFICATION	2.662296026436327E-5	IMPLEMENTATION
index should be last column listed	WITHOUT_CLASSIFICATION	0.9998025140509246	WITHOUT_CLASSIFICATION	1.974859490754673E-4	IMPLEMENTATION
if it is a formula index use the element columns in the pk	WITHOUT_CLASSIFICATION	0.9999999110190714	WITHOUT_CLASSIFICATION	8.89809285809718E-8	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns	WITHOUT_CLASSIFICATION	0.9998204468259287	WITHOUT_CLASSIFICATION	1.7955317407125914E-4	IMPLEMENTATION
arraylist list = new arraylist()list.addall( getkey().getconstraintcolumns() )list.addall( getindex().getconstraintcolumns() )getcollectiontable().createuniquekey(list)	WITHOUT_CLASSIFICATION	0.9999721891028074	WITHOUT_CLASSIFICATION	2.7810897192569813E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999702264004008	WITHOUT_CLASSIFICATION	2.977359959914965E-5	IMPLEMENTATION
no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999987943370344	WITHOUT_CLASSIFICATION	1.205662965486207E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.546577820141834	IMPLEMENTATION	0.453422179858166	WITHOUT_CLASSIFICATION
the case of a foreign key to something other than the pk is handled in createpropertyrefconstraints	WITHOUT_CLASSIFICATION	0.9999416128728115	WITHOUT_CLASSIFICATION	5.838712718839915E-5	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.546577820141834	IMPLEMENTATION	0.453422179858166	WITHOUT_CLASSIFICATION
if the property mapping consists of all formulas make it non-updateable	WITHOUT_CLASSIFICATION	0.9999835871299068	WITHOUT_CLASSIFICATION	1.6412870093253833E-5	IMPLEMENTATION
columnupdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999782575087197	WITHOUT_CLASSIFICATION	2.174249128017413E-5	IMPLEMENTATION
if the property mapping consists of all formulas make it insertable	WITHOUT_CLASSIFICATION	0.9999835871299068	WITHOUT_CLASSIFICATION	1.6412870093253833E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999995219448328	WITHOUT_CLASSIFICATION	4.780551671947936E-6	IMPLEMENTATION
expected type is intrinsic here	WITHOUT_CLASSIFICATION	0.9999460108467071	WITHOUT_CLASSIFICATION	5.398915329281584E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999702264004008	WITHOUT_CLASSIFICATION	2.977359959914965E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999702264004008	WITHOUT_CLASSIFICATION	2.977359959914965E-5	IMPLEMENTATION
return memberpersister.getpropertytype(propertyname)	WITHOUT_CLASSIFICATION	0.9999824799475202	WITHOUT_CLASSIFICATION	1.7520052479813316E-5	IMPLEMENTATION
return memberpersister.tocolumns(alias propertyname)	WITHOUT_CLASSIFICATION	0.9999825191317024	WITHOUT_CLASSIFICATION	1.7480868297624396E-5	IMPLEMENTATION
return memberpersister.gettype()	WITHOUT_CLASSIFICATION	0.9999824799475202	WITHOUT_CLASSIFICATION	1.7520052479813316E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999625350310373	WITHOUT_CLASSIFICATION	3.7464968962821884E-5	IMPLEMENTATION
return !isonetomany()	WITHOUT_CLASSIFICATION	0.999981010511013	WITHOUT_CLASSIFICATION	1.8989488986974126E-5	IMPLEMENTATION
instanceof associationtype	WITHOUT_CLASSIFICATION	0.9999790235302682	WITHOUT_CLASSIFICATION	2.0976469731666735E-5	IMPLEMENTATION
we need to determine the best way to know that two joinables represent a single many-to-many	WITHOUT_CLASSIFICATION	0.9928922656072772	WITHOUT_CLASSIFICATION	0.007107734392722836	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.999983756348386	WITHOUT_CLASSIFICATION	1.6243651613981387E-5	IMPLEMENTATION
public boolean issubselectloadable()	WITHOUT_CLASSIFICATION	0.9999985125111756	WITHOUT_CLASSIFICATION	1.4874888244437502E-6	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999890999247469	WITHOUT_CLASSIFICATION	1.0900075253091453E-5	IMPLEMENTATION
columns	WITHOUT_CLASSIFICATION	0.9999961987864432	WITHOUT_CLASSIFICATION	3.801213556873444E-6	IMPLEMENTATION
sql statements	WITHOUT_CLASSIFICATION	0.9999872335666076	WITHOUT_CLASSIFICATION	1.276643339255511E-5	IMPLEMENTATION
extra information about the element type	WITHOUT_CLASSIFICATION	0.9999959232553365	WITHOUT_CLASSIFICATION	4.076744663467431E-6	IMPLEMENTATION
types	WITHOUT_CLASSIFICATION	0.9999568218240097	WITHOUT_CLASSIFICATION	4.317817599020115E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999948510091597	WITHOUT_CLASSIFICATION	5.148990840298989E-6	IMPLEMENTATION
private final string unquotedidentifiercolumnname	WITHOUT_CLASSIFICATION	0.9999992254520097	WITHOUT_CLASSIFICATION	7.745479903533687E-7	IMPLEMENTATION
dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999935180477182	WITHOUT_CLASSIFICATION	6.481952281891982E-6	IMPLEMENTATION
dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999915866033429	WITHOUT_CLASSIFICATION	8.413396657088979E-6	IMPLEMENTATION
nativesql collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999590702726442	WITHOUT_CLASSIFICATION	4.092972735579393E-5	IMPLEMENTATION
unquotedkeycolumnnames = stringhelper.unquote(keycolumnaliases)	WITHOUT_CLASSIFICATION	0.9999242762711081	WITHOUT_CLASSIFICATION	7.572372889177453E-5	IMPLEMENTATION
element	WITHOUT_CLASSIFICATION	0.999993366852779	WITHOUT_CLASSIFICATION	6.6331472210410575E-6	IMPLEMENTATION
nativesql collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999750922729858	WITHOUT_CLASSIFICATION	2.4907727014233985E-5	IMPLEMENTATION
index and row select	WITHOUT_CLASSIFICATION	0.9999289927813191	WITHOUT_CLASSIFICATION	7.10072186809463E-5	IMPLEMENTATION
nativesql collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9997650322390094	WITHOUT_CLASSIFICATION	2.349677609906043E-4	IMPLEMENTATION
unquotedidentifiercolumnname = identifiercolumnalias	WITHOUT_CLASSIFICATION	0.9999242762711081	WITHOUT_CLASSIFICATION	7.572372889177453E-5	IMPLEMENTATION
unquotedidentifiercolumnname = null	WITHOUT_CLASSIFICATION	0.9999773129735223	WITHOUT_CLASSIFICATION	2.2687026477718308E-5	IMPLEMENTATION
generate the sql	WITHOUT_CLASSIFICATION	0.9999677818415079	WITHOUT_CLASSIFICATION	3.221815849210318E-5	IMPLEMENTATION
for non-arrays we don't need to know the element class elementtype.returnedclass()	WITHOUT_CLASSIFICATION	0.9984704443516492	WITHOUT_CLASSIFICATION	0.0015295556483507617	IMPLEMENTATION
not all classpersisters implement propertymapping!	WITHOUT_CLASSIFICATION	0.6567586292705275	WITHOUT_CLASSIFICATION	0.3432413707294725	IMPLEMENTATION
handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9997149872679104	WITHOUT_CLASSIFICATION	2.8501273208950774E-4	IMPLEMENTATION
handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9998501711112474	WITHOUT_CLASSIFICATION	1.4982888875258047E-4	IMPLEMENTATION
if there is a user-specified loader return that todo filters!?	WITHOUT_CLASSIFICATION	0.9871295649227484	WITHOUT_CLASSIFICATION	0.012870435077251545	IMPLEMENTATION
take care of any entities that might have been evicted!	WITHOUT_CLASSIFICATION	0.9999690607142755	WITHOUT_CLASSIFICATION	3.0939285724488696E-5	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.999983756348386	WITHOUT_CLASSIFICATION	1.6243651613981387E-5	IMPLEMENTATION
run a subquery loader	WITHOUT_CLASSIFICATION	0.9999650424560272	WITHOUT_CLASSIFICATION	3.495754397267764E-5	IMPLEMENTATION
needed by arrays	WITHOUT_CLASSIFICATION	0.873685983661718	WITHOUT_CLASSIFICATION	0.12631401633828196	IMPLEMENTATION
todo something with formulas	WITHOUT_CLASSIFICATION	0.5221779691077405	IMPLEMENTATION	0.4778220308922595	WITHOUT_CLASSIFICATION
an assertion	WITHOUT_CLASSIFICATION	0.9999846671405888	WITHOUT_CLASSIFICATION	1.5332859411302734E-5	IMPLEMENTATION
remove all the old entries	WITHOUT_CLASSIFICATION	0.9999979108762638	WITHOUT_CLASSIFICATION	2.0891237362179104E-6	IMPLEMENTATION
create all the new entries	WITHOUT_CLASSIFICATION	0.9999882984937342	WITHOUT_CLASSIFICATION	1.1701506265873372E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999625350310373	WITHOUT_CLASSIFICATION	3.7464968962821884E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999625350310373	WITHOUT_CLASSIFICATION	3.7464968962821884E-5	IMPLEMENTATION
delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9975706948053995	WITHOUT_CLASSIFICATION	0.0024293051946005207	IMPLEMENTATION
insert all the new entries	WITHOUT_CLASSIFICATION	0.9999926044220848	WITHOUT_CLASSIFICATION	7.395577915184148E-6	IMPLEMENTATION
==elementtype ??	WITHOUT_CLASSIFICATION	0.9999823063935851	WITHOUT_CLASSIFICATION	1.7693606414919007E-5	IMPLEMENTATION
update all the modified entries	WITHOUT_CLASSIFICATION	0.999949706769419	WITHOUT_CLASSIFICATION	5.029323058102342E-5	IMPLEMENTATION
identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9996437525094929	WITHOUT_CLASSIFICATION	3.5624749050704456E-4	IMPLEMENTATION
update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999576366548801	WITHOUT_CLASSIFICATION	4.2363345119843166E-5	IMPLEMENTATION
will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999978060201722	WITHOUT_CLASSIFICATION	2.193979827843171E-6	IMPLEMENTATION
now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999999360367838	WITHOUT_CLASSIFICATION	6.396321613438419E-8	IMPLEMENTATION
buf.append( selectfragment( lhsalias "" ) )ignore suffix for collection columns!	WITHOUT_CLASSIFICATION	0.9999896106003068	WITHOUT_CLASSIFICATION	1.0389399693162238E-5	IMPLEMENTATION
use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999975363781896	WITHOUT_CLASSIFICATION	2.463621810431294E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999977166293624	WITHOUT_CLASSIFICATION	2.283370637626844E-6	IMPLEMENTATION
private final string roottablename	WITHOUT_CLASSIFICATION	0.9999992254520097	WITHOUT_CLASSIFICATION	7.745479903533687E-7	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9998299371102696	WITHOUT_CLASSIFICATION	1.7006288973039346E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999948510091597	WITHOUT_CLASSIFICATION	5.148990840298989E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999977166293624	WITHOUT_CLASSIFICATION	2.283370637626844E-6	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999960106967368	WITHOUT_CLASSIFICATION	3.989303263145908E-6	IMPLEMENTATION
this could also just be true all the time	WITHOUT_CLASSIFICATION	0.9999575061270685	WITHOUT_CLASSIFICATION	4.249387293154151E-5	IMPLEMENTATION
chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999890213450193	WITHOUT_CLASSIFICATION	1.0978654980796105E-5	IMPLEMENTATION
todo check this.	WITHOUT_CLASSIFICATION	0.7775949554278295	IMPLEMENTATION	0.22240504457217042	WITHOUT_CLASSIFICATION
initialization	WITHOUT_CLASSIFICATION	0.9998299371102696	WITHOUT_CLASSIFICATION	1.7006288973039346E-4	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.999993009958991	WITHOUT_CLASSIFICATION	6.990041008978467E-6	IMPLEMENTATION
the closure of all properties in the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999999284376762	WITHOUT_CLASSIFICATION	7.156232377917483E-8	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999999288077888	WITHOUT_CLASSIFICATION	7.119221127538873E-8	IMPLEMENTATION
subclass discrimination works by assigning particular values to certain combinations of null primary key values in the outer join using an sql case	WITHOUT_CLASSIFICATION	0.9999999996838362	WITHOUT_CLASSIFICATION	3.161637959416439E-10	IMPLEMENTATION
multitables	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999948510091597	WITHOUT_CLASSIFICATION	5.148990840298989E-6	IMPLEMENTATION
subclass closure properties	WITHOUT_CLASSIFICATION	0.9999914983283748	WITHOUT_CLASSIFICATION	8.501671625270786E-6	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999960290118678	WITHOUT_CLASSIFICATION	3.970988132158076E-6	IMPLEMENTATION
( (column) model.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999891422965725	WITHOUT_CLASSIFICATION	1.0857703427395084E-5	IMPLEMENTATION
( (column) sc.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999891422965725	WITHOUT_CLASSIFICATION	1.0857703427395084E-5	IMPLEMENTATION
don't need subclass tables because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999155565810892	WITHOUT_CLASSIFICATION	8.444341891075888E-5	IMPLEMENTATION
special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9941042874940271	WITHOUT_CLASSIFICATION	0.0058957125059728045	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999977166293624	WITHOUT_CLASSIFICATION	2.283370637626844E-6	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.999993009958991	WITHOUT_CLASSIFICATION	6.990041008978467E-6	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999999288077888	WITHOUT_CLASSIFICATION	7.119221127538873E-8	IMPLEMENTATION
get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999940069125329	WITHOUT_CLASSIFICATION	5.993087467063056E-6	IMPLEMENTATION
now look up the object we are really interested in! (this lets us correctly handle proxies and multi-row or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999962365889684	WITHOUT_CLASSIFICATION	3.763411031626994E-6	IMPLEMENTATION
discriminator column	WITHOUT_CLASSIFICATION	0.999869412065992	WITHOUT_CLASSIFICATION	1.3058793400793186E-4	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9998299371102696	WITHOUT_CLASSIFICATION	1.7006288973039346E-4	IMPLEMENTATION
private final map propertytablenumbersbyname = new hashmap()	WITHOUT_CLASSIFICATION	0.9999963489160661	WITHOUT_CLASSIFICATION	3.6510839338075965E-6	IMPLEMENTATION
class + table	WITHOUT_CLASSIFICATION	0.9999932892256376	WITHOUT_CLASSIFICATION	6.710774362397585E-6	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.999962015624628	WITHOUT_CLASSIFICATION	3.798437537190586E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999941448376932	WITHOUT_CLASSIFICATION	5.85516230676638E-6	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999960290118678	WITHOUT_CLASSIFICATION	3.970988132158076E-6	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999960106967368	WITHOUT_CLASSIFICATION	3.989303263145908E-6	IMPLEMENTATION
joins	WITHOUT_CLASSIFICATION	0.9999836990764441	WITHOUT_CLASSIFICATION	1.6300923555862625E-5	IMPLEMENTATION
propertytablenumbersbyname.put( prop.getname() join )	WITHOUT_CLASSIFICATION	0.9999754673929722	WITHOUT_CLASSIFICATION	2.453260702791632E-5	IMPLEMENTATION
access cached sql	WITHOUT_CLASSIFICATION	0.9999878516084196	WITHOUT_CLASSIFICATION	1.2148391580420907E-5	IMPLEMENTATION
figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9991588679756916	WITHOUT_CLASSIFICATION	8.411320243083946E-4	IMPLEMENTATION
figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9776321980983427	WITHOUT_CLASSIFICATION	0.022367801901657325	IMPLEMENTATION
figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9106453866669177	WITHOUT_CLASSIFICATION	0.08935461333308221	IMPLEMENTATION
render the sql	WITHOUT_CLASSIFICATION	0.9999912530964828	WITHOUT_CLASSIFICATION	8.746903517191845E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999995219448328	WITHOUT_CLASSIFICATION	4.780551671947936E-6	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999926215745067	WITHOUT_CLASSIFICATION	7.378425493183061E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
the optional sql string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999993713675159	WITHOUT_CLASSIFICATION	6.286324839980368E-7	IMPLEMENTATION
information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999842236637393	WITHOUT_CLASSIFICATION	1.577633626077549E-5	IMPLEMENTATION
information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999998418050002	WITHOUT_CLASSIFICATION	1.5819499976538706E-7	IMPLEMENTATION
information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999995595516925	WITHOUT_CLASSIFICATION	4.4044830750778805E-7	IMPLEMENTATION
dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999863240413845	WITHOUT_CLASSIFICATION	1.3675958615599203E-5	IMPLEMENTATION
sql strings	WITHOUT_CLASSIFICATION	0.9999575360995901	WITHOUT_CLASSIFICATION	4.246390040985836E-5	IMPLEMENTATION
for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999984112510313	WITHOUT_CLASSIFICATION	1.5887489686662464E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999941448376932	WITHOUT_CLASSIFICATION	5.85516230676638E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
identifier	WITHOUT_CLASSIFICATION	0.9999789131627758	WITHOUT_CLASSIFICATION	2.1086837224135327E-5	IMPLEMENTATION
version	WITHOUT_CLASSIFICATION	0.9999940769340662	WITHOUT_CLASSIFICATION	5.923065933818721E-6	IMPLEMENTATION
where string	WITHOUT_CLASSIFICATION	0.9999643257222833	WITHOUT_CLASSIFICATION	3.5674277716659136E-5	IMPLEMENTATION
subclass property closure	WITHOUT_CLASSIFICATION	0.999987418216868	WITHOUT_CLASSIFICATION	1.2581783131899588E-5	IMPLEMENTATION
before add -)	WITHOUT_CLASSIFICATION	0.9999271206589142	WITHOUT_CLASSIFICATION	7.287934108580759E-5	IMPLEMENTATION
handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999867952631998	WITHOUT_CLASSIFICATION	1.3204736800328251E-5	IMPLEMENTATION
only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999720232506742	WITHOUT_CLASSIFICATION	2.79767493256842E-5	IMPLEMENTATION
note early exit here	WITHOUT_CLASSIFICATION	0.9992915035733494	WITHOUT_CLASSIFICATION	7.08496426650708E-4	IMPLEMENTATION
object have been loaded with setreadonly(true) hhh-2236	WITHOUT_CLASSIFICATION	0.9999830996261884	WITHOUT_CLASSIFICATION	1.690037381164871E-5	IMPLEMENTATION
note this assumes something about how propertyselectfragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.988045689180616	WITHOUT_CLASSIFICATION	0.011954310819384027	IMPLEMENTATION
strip leading " "	WITHOUT_CLASSIFICATION	0.9999544552366835	WITHOUT_CLASSIFICATION	4.554476331656366E-5	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999999599676174	WITHOUT_CLASSIFICATION	4.00323825478861E-8	IMPLEMENTATION
otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9995757866355863	WITHOUT_CLASSIFICATION	4.242133644137513E-4	IMPLEMENTATION
null owner ok??	WITHOUT_CLASSIFICATION	0.9999936829738524	WITHOUT_CLASSIFICATION	6.317026147557158E-6	IMPLEMENTATION
null sql means that the only lazy properties are shared pk one-to-one associations which are handled differently in the type#nullsafeget code	WITHOUT_CLASSIFICATION	0.9999997468953642	WITHOUT_CLASSIFICATION	2.531046357941316E-7	IMPLEMENTATION
create a new from node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999995733293359	WITHOUT_CLASSIFICATION	4.266706640639659E-7	IMPLEMENTATION
the difficulty here is exactly what do we update in order to force the version to be incremented in the db	WITHOUT_CLASSIFICATION	0.9998989070011272	WITHOUT_CLASSIFICATION	1.0109299887286359E-4	IMPLEMENTATION
performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.999993084363323	WITHOUT_CLASSIFICATION	6.9156366770177465E-6	IMPLEMENTATION
properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.999706165462425	WITHOUT_CLASSIFICATION	2.9383453757504533E-4	IMPLEMENTATION
enable for hhh-440 which we don't like	WITHOUT_CLASSIFICATION	0.9999328776341064	WITHOUT_CLASSIFICATION	6.71223658935649E-5	IMPLEMENTATION
aliases	WITHOUT_CLASSIFICATION	0.9999843444037064	WITHOUT_CLASSIFICATION	1.5655596293541957E-5	IMPLEMENTATION
aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999944589023847	WITHOUT_CLASSIFICATION	5.54109761534314E-6	IMPLEMENTATION
aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999854280138343	WITHOUT_CLASSIFICATION	1.4571986165687727E-5	IMPLEMENTATION
fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.99999903126462	WITHOUT_CLASSIFICATION	9.687353801153358E-7	IMPLEMENTATION
embedded composite ids ( alias.idname1 alias.idname2 )	WITHOUT_CLASSIFICATION	0.999981574981249	WITHOUT_CLASSIFICATION	1.8425018751064585E-5	IMPLEMENTATION
todo skip formulas?	WITHOUT_CLASSIFICATION	0.7330210569180665	IMPLEMENTATION	0.26697894308193354	WITHOUT_CLASSIFICATION
don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9983504773103972	WITHOUT_CLASSIFICATION	0.0016495226896027521	IMPLEMENTATION
do two passes for collection property-ref!	WITHOUT_CLASSIFICATION	0.99989981809648	WITHOUT_CLASSIFICATION	1.0018190351992879E-4	IMPLEMENTATION
select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999856054967284	WITHOUT_CLASSIFICATION	1.4394503271570027E-5	IMPLEMENTATION
todo eventually rowidname[j]	WITHOUT_CLASSIFICATION	0.9191192833697348	WITHOUT_CLASSIFICATION	0.08088071663026519	IMPLEMENTATION
this is a property of the table which we are updating	WITHOUT_CLASSIFICATION	0.9999983247530678	WITHOUT_CLASSIFICATION	1.67524693209176E-6	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.999849148616605	WITHOUT_CLASSIFICATION	1.508513833949509E-4	IMPLEMENTATION
we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999982927442117	WITHOUT_CLASSIFICATION	1.7072557883454512E-6	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.999997649360341	WITHOUT_CLASSIFICATION	2.350639659059121E-6	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999870954853587	WITHOUT_CLASSIFICATION	1.2904514641366363E-5	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9999824899893379	WITHOUT_CLASSIFICATION	1.751001066215492E-5	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9999380435520834	WITHOUT_CLASSIFICATION	6.195644791659027E-5	IMPLEMENTATION
more specifically "? [op] datetime" 1) if the operator is minus the param needs to be of some datetime type 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9996996935645995	WITHOUT_CLASSIFICATION	3.0030643540047064E-4	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9999824899893379	WITHOUT_CLASSIFICATION	1.751001066215492E-5	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999870954853587	WITHOUT_CLASSIFICATION	1.2904514641366363E-5	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9999380435520834	WITHOUT_CLASSIFICATION	6.195644791659027E-5	IMPLEMENTATION
add the primary key	WITHOUT_CLASSIFICATION	0.9999659088049772	WITHOUT_CLASSIFICATION	3.4091195022773304E-5	IMPLEMENTATION
delegate already handles pk columns	WITHOUT_CLASSIFICATION	0.9999914995435163	WITHOUT_CLASSIFICATION	8.500456483722756E-6	IMPLEMENTATION
we can't batch joined inserts especially not if it is an identity insert nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9998146907431964	WITHOUT_CLASSIFICATION	1.8530925680370513E-4	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.9999939238152016	WITHOUT_CLASSIFICATION	6.076184798460178E-6	IMPLEMENTATION
write the values of fields onto the prepared statement - we must use the state at the time the insert was issued (cos of foreign key constraints). not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999991990419486	WITHOUT_CLASSIFICATION	8.00958051401575E-7	IMPLEMENTATION
todo shouldnt inserts be expectations.none?	WITHOUT_CLASSIFICATION	0.8118188315459453	WITHOUT_CLASSIFICATION	0.18818116845405466	IMPLEMENTATION
don't bother trying to update we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9994705803439307	WITHOUT_CLASSIFICATION	5.294196560693011E-4	IMPLEMENTATION
if all fields are null we might need to delete existing row	WITHOUT_CLASSIFICATION	0.999890249109378	WITHOUT_CLASSIFICATION	1.0975089062204548E-4	IMPLEMENTATION
there is probably a row there so try to update if no rows were updated we will find out	WITHOUT_CLASSIFICATION	0.9999999984494605	WITHOUT_CLASSIFICATION	1.5505394368967452E-9	IMPLEMENTATION
note updates to joined tables can't be batched	WITHOUT_CLASSIFICATION	0.9999823181855643	WITHOUT_CLASSIFICATION	1.768181443572569E-5	IMPLEMENTATION
starting index	WITHOUT_CLASSIFICATION	0.9998686637593476	WITHOUT_CLASSIFICATION	1.3133624065242807E-4	IMPLEMENTATION
now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999920681991606	WITHOUT_CLASSIFICATION	7.931800839252734E-6	IMPLEMENTATION
write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9997561868305657	WITHOUT_CLASSIFICATION	2.43813169434441E-4	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.9999939238152016	WITHOUT_CLASSIFICATION	6.076184798460178E-6	IMPLEMENTATION
do the key. the key is immutable so we can use the _current_ object state - not necessarily the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999997115635367	WITHOUT_CLASSIFICATION	2.8843646331812306E-7	IMPLEMENTATION
we should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999993749796744	WITHOUT_CLASSIFICATION	6.250203256494075E-7	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9998804848672278	WITHOUT_CLASSIFICATION	1.1951513277225192E-4	IMPLEMENTATION
note dirtyfields==null means we had no snapshot and we couldn't get one using select-before-update oldfields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyfields)	WITHOUT_CLASSIFICATION	0.9999997799654121	WITHOUT_CLASSIFICATION	2.2003458780969048E-7	IMPLEMENTATION
more specifically "datetime [op] ?" 1) if the operator is minus we really cannot determine the expected type as either another datetime or numeric would be valid 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9999635305917005	WITHOUT_CLASSIFICATION	3.6469408299565564E-5	IMPLEMENTATION
for the case of dynamic-update="true" we need to generate the update sql	WITHOUT_CLASSIFICATION	0.9999686221416563	WITHOUT_CLASSIFICATION	3.137785834369559E-5	IMPLEMENTATION
don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9409884543431998	WITHOUT_CLASSIFICATION	0.059011545656800085	IMPLEMENTATION
for the case of dynamic-update="false" or no snapshot we use the static sql	WITHOUT_CLASSIFICATION	0.9999987617740569	WITHOUT_CLASSIFICATION	1.2382259430426903E-6	IMPLEMENTATION
if not "get" then try "is"	WITHOUT_CLASSIFICATION	0.9997349334400975	WITHOUT_CLASSIFICATION	2.650665599025174E-4	IMPLEMENTATION
now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.999997967647683	WITHOUT_CLASSIFICATION	2.0323523169547426E-6	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999647148467697	WITHOUT_CLASSIFICATION	3.5285153230339846E-5	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999647148467697	WITHOUT_CLASSIFICATION	3.5285153230339846E-5	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999917352985028	WITHOUT_CLASSIFICATION	8.26470149721966E-6	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999917352985028	WITHOUT_CLASSIFICATION	8.26470149721966E-6	IMPLEMENTATION
not supported	WITHOUT_CLASSIFICATION	0.9994403818707768	WITHOUT_CLASSIFICATION	5.596181292232388E-4	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9998804848672278	WITHOUT_CLASSIFICATION	1.1951513277225192E-4	IMPLEMENTATION
we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9967763507768371	WITHOUT_CLASSIFICATION	0.003223649223162941	IMPLEMENTATION
otherwise utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9903208513045625	WITHOUT_CLASSIFICATION	0.009679148695437482	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999723378062032	WITHOUT_CLASSIFICATION	2.7662193796730146E-5	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999723378062032	WITHOUT_CLASSIFICATION	2.7662193796730146E-5	IMPLEMENTATION
all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999773799966799	WITHOUT_CLASSIFICATION	2.2620003320152303E-5	IMPLEMENTATION
notice that we skip the first table it is the driving table!	WITHOUT_CLASSIFICATION	0.9999735797634633	WITHOUT_CLASSIFICATION	2.6420236536561728E-5	IMPLEMENTATION
we can inner join to superclass tables (the row must be there) we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999556142784399	WITHOUT_CLASSIFICATION	4.438572156004459E-5	IMPLEMENTATION
skip the driving table	WITHOUT_CLASSIFICATION	0.9999375932884245	WITHOUT_CLASSIFICATION	6.240671157558362E-5	IMPLEMENTATION
get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999995068383454	WITHOUT_CLASSIFICATION	4.931616546388231E-7	IMPLEMENTATION
here we work under the following assumptions ------------ valid cases -------------------------------------- 1) datetime + {something other than datetime} always results in a datetime ( db will catch invalid conversions ) 2) datetime - datetime always results in a double 3) datetime - {something other than datetime} always results in a datetime ( db will catch invalid conversions ) ------------ invalid cases ------------------------------------ 4) datetime + datetime 5) {something other than datetime} - datetime 6) datetime {any type} 7) datetime / {any type} 8) {any type} / datetime doing so allows us to properly handle parameters as either the left or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.999999934352279	WITHOUT_CLASSIFICATION	6.564772113327739E-8	IMPLEMENTATION
render the where and from parts	WITHOUT_CLASSIFICATION	0.9999907021033819	WITHOUT_CLASSIFICATION	9.297896617984739E-6	IMPLEMENTATION
we could regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999728554385463	WITHOUT_CLASSIFICATION	2.7144561453718657E-5	IMPLEMENTATION
now render the joins	WITHOUT_CLASSIFICATION	0.9999814697038358	WITHOUT_CLASSIFICATION	1.8530296164221562E-5	IMPLEMENTATION
this will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999929509745638	WITHOUT_CLASSIFICATION	7.049025436231751E-6	IMPLEMENTATION
now render the select clause	WITHOUT_CLASSIFICATION	0.9999754968643455	WITHOUT_CLASSIFICATION	2.4503135654579067E-5	IMPLEMENTATION
now tie it all together	WITHOUT_CLASSIFICATION	0.9999509793710433	WITHOUT_CLASSIFICATION	4.9020628956717215E-5	IMPLEMENTATION
insert/update/delete sql	WITHOUT_CLASSIFICATION	0.9999897634723182	WITHOUT_CLASSIFICATION	1.023652768177791E-5	IMPLEMENTATION
select sql	WITHOUT_CLASSIFICATION	0.9999962383863519	WITHOUT_CLASSIFICATION	3.761613648112078E-6	IMPLEMENTATION
no need to check laziness dirty checking handles that	WITHOUT_CLASSIFICATION	0.9135241436272961	WITHOUT_CLASSIFICATION	0.08647585637270389	IMPLEMENTATION
fully resolve the map reference create implicit joins.	WITHOUT_CLASSIFICATION	0.9999941819197494	WITHOUT_CLASSIFICATION	5.818080250638738E-6	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999751482738548	WITHOUT_CLASSIFICATION	2.485172614513574E-5	IMPLEMENTATION
the basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9998161430017863	WITHOUT_CLASSIFICATION	1.8385699821371862E-4	IMPLEMENTATION
for dialects which are known to not support ansi-sql row-value-constructor syntax we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9950446315576018	WITHOUT_CLASSIFICATION	0.004955368442398165	IMPLEMENTATION
due to the complexity in initializing the selectclause do not generate one here. if it is not found simply return null also do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999998712440058	WITHOUT_CLASSIFICATION	1.2875599415359415E-7	IMPLEMENTATION
check the version unsaved-value if appropriate	WITHOUT_CLASSIFICATION	0.9999259445552061	WITHOUT_CLASSIFICATION	7.405544479385769E-5	IMPLEMENTATION
let this take precedence if defined since it works for assigned identifiers	WITHOUT_CLASSIFICATION	0.9999998307359476	WITHOUT_CLASSIFICATION	1.6926405246375425E-7	IMPLEMENTATION
check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9994938407088219	WITHOUT_CLASSIFICATION	5.061592911781584E-4	IMPLEMENTATION
check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999997454327333	WITHOUT_CLASSIFICATION	2.545672666676765E-7	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999968572342754	WITHOUT_CLASSIFICATION	3.142765724572723E-6	IMPLEMENTATION
for property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999693293101105	WITHOUT_CLASSIFICATION	3.067068988950264E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999999599676174	WITHOUT_CLASSIFICATION	4.00323825478861E-8	IMPLEMENTATION
force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999855382147841	WITHOUT_CLASSIFICATION	1.4461785216033097E-5	IMPLEMENTATION
if this from element is a collection and the path is a collection property (maxindex etc.) then generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999982661561437	WITHOUT_CLASSIFICATION	1.7338438561987498E-6	IMPLEMENTATION
entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999743032187108	WITHOUT_CLASSIFICATION	2.5696781289184843E-5	IMPLEMENTATION
collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999964440327186	WITHOUT_CLASSIFICATION	3.555967281395576E-5	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.999997865269427	WITHOUT_CLASSIFICATION	2.1347305730160283E-6	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.999997865269427	WITHOUT_CLASSIFICATION	2.1347305730160283E-6	IMPLEMENTATION
only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999987218237981	WITHOUT_CLASSIFICATION	1.278176201859322E-6	IMPLEMENTATION
try "get"	WITHOUT_CLASSIFICATION	0.9999828155756988	WITHOUT_CLASSIFICATION	1.7184424301179617E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999952486389814	WITHOUT_CLASSIFICATION	4.751361018631992E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999952486389814	WITHOUT_CLASSIFICATION	4.751361018631992E-6	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9996128605830081	WITHOUT_CLASSIFICATION	3.871394169918357E-4	IMPLEMENTATION
this page intentionally left blank )	WITHOUT_CLASSIFICATION	0.9999670669576091	WITHOUT_CLASSIFICATION	3.293304239090345E-5	IMPLEMENTATION
do not do anything	WITHOUT_CLASSIFICATION	0.9935487214722308	WITHOUT_CLASSIFICATION	0.006451278527769159	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.999977527394885	WITHOUT_CLASSIFICATION	2.2472605114975415E-5	IMPLEMENTATION
cant instantiate	WITHOUT_CLASSIFICATION	0.9999670703375112	WITHOUT_CLASSIFICATION	3.292966248877521E-5	IMPLEMENTATION
if it is a property of an embedded component invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999999296940058	WITHOUT_CLASSIFICATION	7.030599423578152E-8	IMPLEMENTATION
otherwise	WITHOUT_CLASSIFICATION	0.9998226134907734	WITHOUT_CLASSIFICATION	1.7738650922665525E-4	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.9999135048470631	WITHOUT_CLASSIFICATION	8.649515293699821E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999847129518364	WITHOUT_CLASSIFICATION	1.5287048163506106E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999847129518364	WITHOUT_CLASSIFICATION	1.5287048163506106E-5	IMPLEMENTATION
hhh-2481 make sure the callback gets cleared otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9996934483435692	WITHOUT_CLASSIFICATION	3.065516564307814E-4	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999889386495274	WITHOUT_CLASSIFICATION	1.1061350472654543E-5	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999889386495274	WITHOUT_CLASSIFICATION	1.1061350472654543E-5	IMPLEMENTATION
note interface is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999928046123309	WITHOUT_CLASSIFICATION	7.195387669104284E-6	IMPLEMENTATION
interfaces arguments	WITHOUT_CLASSIFICATION	0.9999841948010799	WITHOUT_CLASSIFICATION	1.5805198920143427E-5	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
get the caller	WITHOUT_CLASSIFICATION	0.9999975494602166	WITHOUT_CLASSIFICATION	2.4505397834030493E-6	IMPLEMENTATION
get the caller principals	WITHOUT_CLASSIFICATION	0.999998137744727	WITHOUT_CLASSIFICATION	1.8622552730932175E-6	IMPLEMENTATION
private static final alias default_alias = new alias(10 null)	WITHOUT_CLASSIFICATION	0.9999810487792536	WITHOUT_CLASSIFICATION	1.8951220746348906E-5	IMPLEMENTATION
needed to bump this up to dotnode because that is the only thing which currently knows about the property-ref path in the correct format it is either this or recurse over the dotnodes constructing the property path just like dotnode does internally	WITHOUT_CLASSIFICATION	0.9995142799337683	WITHOUT_CLASSIFICATION	4.857200662317124E-4	IMPLEMENTATION
if the identifier is quoted remove the quotes	WITHOUT_CLASSIFICATION	0.9999992038719108	WITHOUT_CLASSIFICATION	7.961280892641396E-7	IMPLEMENTATION
truncate the identifier to the max alias length less the suffix length	WITHOUT_CLASSIFICATION	0.999991482444159	WITHOUT_CLASSIFICATION	8.517555840952145E-6	IMPLEMENTATION
full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.999739325851422	WITHOUT_CLASSIFICATION	2.6067414857797015E-4	IMPLEMENTATION
null is not considered the same type as integer. $non-nls-1 $non-nls-1	WITHOUT_CLASSIFICATION	0.9999618768386187	WITHOUT_CLASSIFICATION	3.8123161381303605E-5	IMPLEMENTATION
the outerjoinsafterwhere needs to come before where clause to properly handle dynamic filters	WITHOUT_CLASSIFICATION	0.9827222362136118	WITHOUT_CLASSIFICATION	0.017277763786388237	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999837158978664	WITHOUT_CLASSIFICATION	1.6284102133613536E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999837158978664	WITHOUT_CLASSIFICATION	1.6284102133613536E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999837158978664	WITHOUT_CLASSIFICATION	1.6284102133613536E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999837158978664	WITHOUT_CLASSIFICATION	1.6284102133613536E-5	IMPLEMENTATION
strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999984022166499	WITHOUT_CLASSIFICATION	1.5977833499774496E-6	IMPLEMENTATION
if the condition is not already there	WITHOUT_CLASSIFICATION	0.9999803204268263	WITHOUT_CLASSIFICATION	1.967957317371039E-5	IMPLEMENTATION
dontspace.add("'")	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
for mysql	WITHOUT_CLASSIFICATION	0.9999928687885752	WITHOUT_CLASSIFICATION	7.1312114247853964E-6	IMPLEMENTATION
hashmap columnsunique = new hashmap()	WITHOUT_CLASSIFICATION	0.9999504281624314	WITHOUT_CLASSIFICATION	4.957183756872342E-5	IMPLEMENTATION
null caused some problems	WITHOUT_CLASSIFICATION	0.9999833104942994	WITHOUT_CLASSIFICATION	1.6689505700622683E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999179931443145	WITHOUT_CLASSIFICATION	8.200685568552572E-5	IMPLEMENTATION
not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999955278435586	WITHOUT_CLASSIFICATION	4.4721564413907295E-6	IMPLEMENTATION
even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999698955926449	WITHOUT_CLASSIFICATION	3.0104407355144515E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999179931443145	WITHOUT_CLASSIFICATION	8.200685568552572E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999179931443145	WITHOUT_CLASSIFICATION	8.200685568552572E-5	IMPLEMENTATION
if true then execute db updates otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999938963825253	WITHOUT_CLASSIFICATION	6.103617474641973E-6	IMPLEMENTATION
we only release the connection	WITHOUT_CLASSIFICATION	0.9992224369257224	WITHOUT_CLASSIFICATION	7.775630742775241E-4	IMPLEMENTATION
deprecated option	WITHOUT_CLASSIFICATION	0.9998849936562653	WITHOUT_CLASSIFICATION	1.1500634373466118E-4	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999992040967615	WITHOUT_CLASSIFICATION	7.959032385348221E-7	IMPLEMENTATION
actually this last test is probably unnecessary since beforecompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999999993736797	WITHOUT_CLASSIFICATION	6.263204051063522E-10	IMPLEMENTATION
this one only really needed for badly-behaved applications! (if the transactionmanager has a sychronization registered its a noop) (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.7075870901874743	IMPLEMENTATION	0.29241290981252555	WITHOUT_CLASSIFICATION
create an dotnode ast for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999891737061293	WITHOUT_CLASSIFICATION	1.0826293870767613E-5	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999992040967615	WITHOUT_CLASSIFICATION	7.959032385348221E-7	IMPLEMENTATION
if we could not register a synchronization do the before/after completion callbacks ourself (but we need to let jdbccontext know that this is what we are going to do so it doesn't keep trying to register synchronizations)	WITHOUT_CLASSIFICATION	0.7848285724426214	IMPLEMENTATION	0.21517142755737864	WITHOUT_CLASSIFICATION
swallow it and continue to roll back jta transaction	WITHOUT_CLASSIFICATION	0.9998631179549259	WITHOUT_CLASSIFICATION	1.3688204507412917E-4	IMPLEMENTATION
so the transaction is already rolled back by jta spec	WITHOUT_CLASSIFICATION	0.9999991809323807	WITHOUT_CLASSIFICATION	8.19067619247507E-7	IMPLEMENTATION
this method is a noop if there is a synchronization!	WITHOUT_CLASSIFICATION	0.9999974496830274	WITHOUT_CLASSIFICATION	2.5503169725719E-6	IMPLEMENTATION
two conditions where we need to transform this to a theta-join syntax 1) 'elem' is the "root from-element" in correlated subqueries 2) the dotnode.usethetastyleimplicitjoins has been set to true and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999965681756466	WITHOUT_CLASSIFICATION	3.431824353460327E-6	IMPLEMENTATION
websphere however is not a sane jee/jta container	WITHOUT_CLASSIFICATION	0.9997792916592484	WITHOUT_CLASSIFICATION	2.2070834075164203E-4	IMPLEMENTATION
for sane jee/jta containers the transaction itself functions as its identifier	WITHOUT_CLASSIFICATION	0.9999969852220575	WITHOUT_CLASSIFICATION	3.014777942435447E-6	IMPLEMENTATION
swallow the transaction was finished	WITHOUT_CLASSIFICATION	0.9999983097665768	WITHOUT_CLASSIFICATION	1.690233423203937E-6	IMPLEMENTATION
all aliastoentitymapresulttransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989776184057	WITHOUT_CLASSIFICATION	1.0223815942618243E-6	IMPLEMENTATION
create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999957942409358	WITHOUT_CLASSIFICATION	4.205759064248311E-6	IMPLEMENTATION
all distinctrootentityresulttransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989776184057	WITHOUT_CLASSIFICATION	1.0223815942618243E-6	IMPLEMENTATION
map of entitymode -> tuplizer	WITHOUT_CLASSIFICATION	0.9999971743033496	WITHOUT_CLASSIFICATION	2.825696650458184E-6	IMPLEMENTATION
this is a virtual id property	WITHOUT_CLASSIFICATION	0.9997467351927515	WITHOUT_CLASSIFICATION	2.5326480724846133E-4	IMPLEMENTATION
this one needed only for guessentitymode()	WITHOUT_CLASSIFICATION	0.7603676639846811	WITHOUT_CLASSIFICATION	0.23963233601531894	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999899409464887	WITHOUT_CLASSIFICATION	1.0059053511227596E-5	IMPLEMENTATION
todo move this to sf per hhh-3517 also see hhh-1907 and componentmetamodel	WITHOUT_CLASSIFICATION	0.6131500984842102	IMPLEMENTATION	0.3868499015157899	WITHOUT_CLASSIFICATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999998413720418	WITHOUT_CLASSIFICATION	1.5862795832285888E-7	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999850888170538	WITHOUT_CLASSIFICATION	1.4911182946140665E-5	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.999998678696733	WITHOUT_CLASSIFICATION	1.3213032669730902E-6	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999850888170538	WITHOUT_CLASSIFICATION	1.4911182946140665E-5	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999639050442388	WITHOUT_CLASSIFICATION	3.6094955761168E-5	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999993378480752	WITHOUT_CLASSIFICATION	6.621519248445544E-7	IMPLEMENTATION
private final sessionfactoryimplementor sessionfactory	WITHOUT_CLASSIFICATION	0.9999980913548098	WITHOUT_CLASSIFICATION	1.9086451902388045E-6	IMPLEMENTATION
cached for efficiency	WITHOUT_CLASSIFICATION	0.9999793568159615	WITHOUT_CLASSIFICATION	2.0643184038399563E-5	IMPLEMENTATION
public componentmetamodel(component component sessionfactoryimplementor sessionfactory) {	WITHOUT_CLASSIFICATION	0.9999985738701939	WITHOUT_CLASSIFICATION	1.4261298062269662E-6	IMPLEMENTATION
this.sessionfactory = sessionfactory	WITHOUT_CLASSIFICATION	0.9999242762711081	WITHOUT_CLASSIFICATION	7.572372889177453E-5	IMPLEMENTATION
it was not embedded so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999977161685323	WITHOUT_CLASSIFICATION	2.2838314677916734E-6	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999998413720418	WITHOUT_CLASSIFICATION	1.5862795832285888E-7	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.999998678696733	WITHOUT_CLASSIFICATION	1.3213032669730902E-6	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999639050442388	WITHOUT_CLASSIFICATION	3.6094955761168E-5	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9999363556828558	WITHOUT_CLASSIFICATION	6.364431714430977E-5	IMPLEMENTATION
return currentid	WITHOUT_CLASSIFICATION	0.9999750118863248	WITHOUT_CLASSIFICATION	2.4988113675155316E-5	IMPLEMENTATION
reset the id	WITHOUT_CLASSIFICATION	0.9998141974743499	WITHOUT_CLASSIFICATION	1.858025256501532E-4	IMPLEMENTATION
origin.adddestination( destination ) this was the cause of hhh-242 origin.settype( from_fragment ) set the parent node type so that the ast is properly formed. the destination node will have all the from text. the parent node is a collection join too (voodoo - see joinprocessor)	WITHOUT_CLASSIFICATION	0.9999999394508292	WITHOUT_CLASSIFICATION	6.054917072379027E-8	IMPLEMENTATION
reset the version	WITHOUT_CLASSIFICATION	0.9999884409652654	WITHOUT_CLASSIFICATION	1.155903473460893E-5	IMPLEMENTATION
the default is to simply not lazy fetch properties for now	WITHOUT_CLASSIFICATION	0.9999057634621777	WITHOUT_CLASSIFICATION	9.423653782232988E-5	IMPLEMENTATION
add the second join the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999838646011431	WITHOUT_CLASSIFICATION	1.613539885686813E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999751482738548	WITHOUT_CLASSIFICATION	2.485172614513574E-5	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999993378480752	WITHOUT_CLASSIFICATION	6.621519248445544E-7	IMPLEMENTATION
determine the id getter and setter methods from the proxy interface (if any) determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.7030212556152731	WITHOUT_CLASSIFICATION	0.29697874438472693	IMPLEMENTATION
return getfactory().getsettings().getbytecodeprovider().getproxyfactoryfactory().buildproxyfactory()	WITHOUT_CLASSIFICATION	0.9999824799475202	WITHOUT_CLASSIFICATION	1.7520052479813316E-5	IMPLEMENTATION
not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9998557170214127	WITHOUT_CLASSIFICATION	1.442829785872722E-4	IMPLEMENTATION
superclass entity-name	WITHOUT_CLASSIFICATION	0.9999837452108885	WITHOUT_CLASSIFICATION	1.625478911150236E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999751482738548	WITHOUT_CLASSIFICATION	2.485172614513574E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
init the aliases after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999922588553243	WITHOUT_CLASSIFICATION	7.741144675665812E-6	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999751482738548	WITHOUT_CLASSIFICATION	2.485172614513574E-5	IMPLEMENTATION
legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999945126946909	WITHOUT_CLASSIFICATION	5.4873053090859066E-6	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999943658090822	WITHOUT_CLASSIFICATION	5.634190917888397E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
note this affects the return value!	WITHOUT_CLASSIFICATION	0.999950472547257	WITHOUT_CLASSIFICATION	4.952745274305465E-5	IMPLEMENTATION
need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9997530329152959	WITHOUT_CLASSIFICATION	2.469670847040502E-4	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999859309319095	WITHOUT_CLASSIFICATION	1.40690680905921E-5	IMPLEMENTATION
collection types	WITHOUT_CLASSIFICATION	0.9998298679399336	WITHOUT_CLASSIFICATION	1.701320600663769E-4	IMPLEMENTATION
convenience methods relating to operations across arrays of types	WITHOUT_CLASSIFICATION	0.9998810219113489	WITHOUT_CLASSIFICATION	1.1897808865114262E-4	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999979677370983	WITHOUT_CLASSIFICATION	2.0322629017451696E-6	IMPLEMENTATION
blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999669620242613	WITHOUT_CLASSIFICATION	3.3037975738709796E-5	IMPLEMENTATION
value is the entity name	WITHOUT_CLASSIFICATION	0.9999929266215035	WITHOUT_CLASSIFICATION	7.073378496464549E-6	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.999984181990816	WITHOUT_CLASSIFICATION	1.5818009184100214E-5	IMPLEMENTATION
generate id select fragment and then property select fragment for each expression just like generateselectfragments().	WITHOUT_CLASSIFICATION	0.9994397413036674	WITHOUT_CLASSIFICATION	5.602586963324973E-4	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
xml is the entity name	WITHOUT_CLASSIFICATION	0.999994952882942	WITHOUT_CLASSIFICATION	5.047117057986874E-6	IMPLEMENTATION
special case this is the leaf of the containment graph even though not immutable	WITHOUT_CLASSIFICATION	0.9999237039551006	WITHOUT_CLASSIFICATION	7.629604489937258E-5	IMPLEMENTATION
tolerates nulls	WITHOUT_CLASSIFICATION	0.9999658144645552	WITHOUT_CLASSIFICATION	3.418553544470324E-5	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
metatype is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999931995143962	WITHOUT_CLASSIFICATION	6.8004856037831395E-6	IMPLEMENTATION
get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999985362112234	WITHOUT_CLASSIFICATION	1.4637887767003309E-6	IMPLEMENTATION
look through the fromelement's children to find any collections of values that should be fetched	WITHOUT_CLASSIFICATION	0.9999869678265579	WITHOUT_CLASSIFICATION	1.3032173442103385E-5	IMPLEMENTATION
return associationtype.foreign_key_to_parent this is better but causes a transient object exception	WITHOUT_CLASSIFICATION	0.999999941235005	WITHOUT_CLASSIFICATION	5.876499492803883E-8	IMPLEMENTATION
use the lower case function name. remember whether we're in a select clause or not.	WITHOUT_CLASSIFICATION	0.9999979568766874	WITHOUT_CLASSIFICATION	2.0431233127287446E-6	IMPLEMENTATION
ident might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999924806943683	WITHOUT_CLASSIFICATION	7.519305631638897E-6	IMPLEMENTATION
todo!!!	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
st.settimestamp( index new timestamp( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9999901563146072	WITHOUT_CLASSIFICATION	9.843685392754605E-6	IMPLEMENTATION
st.setdate( index new date( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9999901563146072	WITHOUT_CLASSIFICATION	9.843685392754605E-6	IMPLEMENTATION
both are timestamps	WITHOUT_CLASSIFICATION	0.9999925246104644	WITHOUT_CLASSIFICATION	7.475389535698307E-6	IMPLEMENTATION
at least one is a plain old date	WITHOUT_CLASSIFICATION	0.9999980810494198	WITHOUT_CLASSIFICATION	1.9189505802877003E-6	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999855860324941	WITHOUT_CLASSIFICATION	1.4413967505908796E-5	IMPLEMENTATION
if the corresponding sql value is null the reader we got is null as well	WITHOUT_CLASSIFICATION	0.9999999903488093	WITHOUT_CLASSIFICATION	9.651190817804885E-9	IMPLEMENTATION
fetch reader content up to the end - and put characters in a stringbuffer	WITHOUT_CLASSIFICATION	0.9997471423729981	WITHOUT_CLASSIFICATION	2.5285762700185625E-4	IMPLEMENTATION
return stringbuffer content as a large string	WITHOUT_CLASSIFICATION	0.9999623096649917	WITHOUT_CLASSIFICATION	3.769033500830042E-5	IMPLEMENTATION
or types.longvarchar?	WITHOUT_CLASSIFICATION	0.999978967095563	WITHOUT_CLASSIFICATION	2.103290443708709E-5	IMPLEMENTATION
not called at runtime so doesn't matter if its slow )	WITHOUT_CLASSIFICATION	0.999997480362667	WITHOUT_CLASSIFICATION	2.5196373330720933E-6	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.7748148307512215	WITHOUT_CLASSIFICATION	0.22518516924877857	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999955585144881	WITHOUT_CLASSIFICATION	4.4414855118668775E-6	IMPLEMENTATION
different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.999975413976107	WITHOUT_CLASSIFICATION	2.4586023892950337E-5	IMPLEMENTATION
cache this	WITHOUT_CLASSIFICATION	0.9999290310518011	WITHOUT_CLASSIFICATION	7.09689481989622E-5	IMPLEMENTATION
only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999265906694514	WITHOUT_CLASSIFICATION	7.340933054855405E-5	IMPLEMENTATION
forcefully remove leading ands from where fragments the grammar will handle adding them	WITHOUT_CLASSIFICATION	0.9999993159695957	WITHOUT_CLASSIFICATION	6.840304042874796E-7	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
create a new filters node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999854873759334	WITHOUT_CLASSIFICATION	1.4512624066576723E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
public object instantiate(object parent sessionimplementor session) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999950647206697	WITHOUT_CLASSIFICATION	4.935279330307896E-6	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999817760727957	WITHOUT_CLASSIFICATION	1.8223927204196263E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999817760727957	WITHOUT_CLASSIFICATION	1.8223927204196263E-5	IMPLEMENTATION
versiontype impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ note simply returns null for seed() and next() as the only known application of binary types for versioning is for use with the timestamp datatype supported by sybase and sql server which are completely db-generated values	WITHOUT_CLASSIFICATION	0.9999998946259679	WITHOUT_CLASSIFICATION	1.0537403206635813E-7	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999979677370983	WITHOUT_CLASSIFICATION	2.0322629017451696E-6	IMPLEMENTATION
not really necessary i guess	WITHOUT_CLASSIFICATION	0.9930385381642416	WITHOUT_CLASSIFICATION	0.006961461835758502	IMPLEMENTATION
clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999950558850499	WITHOUT_CLASSIFICATION	4.94411495007572E-6	IMPLEMENTATION
we do not have to worry about queued additions to uninitialized collections since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9997460658200725	WITHOUT_CLASSIFICATION	2.5393417992746907E-4	IMPLEMENTATION
collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999972866746394	WITHOUT_CLASSIFICATION	2.71332536071212E-6	IMPLEMENTATION
remember the uk value	WITHOUT_CLASSIFICATION	0.9997311064855291	WITHOUT_CLASSIFICATION	2.6889351447092065E-4	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999855860324941	WITHOUT_CLASSIFICATION	1.4413967505908796E-5	IMPLEMENTATION
processcollectionproperty(token q.getcollectionpersister(collectionrole) collectionname)	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
we must use the "remembered" uk value since it is not available from the entityentry during assembly	WITHOUT_CLASSIFICATION	0.9999877229554809	WITHOUT_CLASSIFICATION	1.2277044519118602E-5	IMPLEMENTATION
collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9993181306971696	WITHOUT_CLASSIFICATION	6.818693028305118E-4	IMPLEMENTATION
return false	WITHOUT_CLASSIFICATION	0.9999659405824396	WITHOUT_CLASSIFICATION	3.405941756049882E-5	IMPLEMENTATION
this just handles a particular case of component projection perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999990491578048	WITHOUT_CLASSIFICATION	9.508421951228204E-7	IMPLEMENTATION
note we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.999999960593032	WITHOUT_CLASSIFICATION	3.940696792666191E-8	IMPLEMENTATION
the key is the owning entity itself so get the id from the key	WITHOUT_CLASSIFICATION	0.9999997278424034	WITHOUT_CLASSIFICATION	2.7215759656085793E-7	IMPLEMENTATION
if the original is a persistentcollection and that original was not flagged as dirty then reset the target's dirty flag here after the copy operation. </p> one thing to be careful of here is a "bare" original collection in which case we should never ever ever reset the dirty flag on the target because we simply do not know	WITHOUT_CLASSIFICATION	0.9990571889085172	WITHOUT_CLASSIFICATION	9.428110914827208E-4	IMPLEMENTATION
ignore subselect keywords	WITHOUT_CLASSIFICATION	0.999960540493047	WITHOUT_CLASSIFICATION	3.9459506953177506E-5	IMPLEMENTATION
copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999041296289995	WITHOUT_CLASSIFICATION	9.587037100047221E-5	IMPLEMENTATION
for a null target or a target which is the same as the original we need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.999998214666181	WITHOUT_CLASSIFICATION	1.785333818939342E-6	IMPLEMENTATION
by default just use an unanticipated capacity since we don't know how to extract the capacity to use from original here	WITHOUT_CLASSIFICATION	0.9999828213821267	WITHOUT_CLASSIFICATION	1.717861787323326E-5	IMPLEMENTATION
get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999663698330247	WITHOUT_CLASSIFICATION	3.363016697524607E-5	IMPLEMENTATION
check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999988367510395	WITHOUT_CLASSIFICATION	1.1632489605348465E-6	IMPLEMENTATION
check if it is already completely loaded but unowned	WITHOUT_CLASSIFICATION	0.9999998077039116	WITHOUT_CLASSIFICATION	1.9229608835851664E-7	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9943964643622644	WITHOUT_CLASSIFICATION	0.005603535637735704	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
create a new collection wrapper to be initialized later	WITHOUT_CLASSIFICATION	0.9999889619515865	WITHOUT_CLASSIFICATION	1.1038048413526594E-5	IMPLEMENTATION
some jdbc drivers erroneously return an empty array here for a null db value /	WITHOUT_CLASSIFICATION	0.9999066517503327	WITHOUT_CLASSIFICATION	9.334824966736507E-5	IMPLEMENTATION
our column span is the number of columns in the pk	WITHOUT_CLASSIFICATION	0.9999997489290269	WITHOUT_CLASSIFICATION	2.510709732198406E-7	IMPLEMENTATION
cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.999997641889857	WITHOUT_CLASSIFICATION	2.3581101430664256E-6	IMPLEMENTATION
we already know current is not null	WITHOUT_CLASSIFICATION	0.9903930509457712	WITHOUT_CLASSIFICATION	0.009606949054228748	IMPLEMENTATION
the ids are fully resolved so compare them with isdirty() not ismodified()	WITHOUT_CLASSIFICATION	0.9999661378005537	WITHOUT_CLASSIFICATION	3.386219944631916E-5	IMPLEMENTATION
the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9995851043507387	WITHOUT_CLASSIFICATION	4.1489564926139614E-4	IMPLEMENTATION
----------------------------------------------------------- constructors	WITHOUT_CLASSIFICATION	0.9999670866062244	WITHOUT_CLASSIFICATION	3.29133937756262E-5	IMPLEMENTATION
----------------------------------------------------- instance variables	WITHOUT_CLASSIFICATION	0.9999900901010732	WITHOUT_CLASSIFICATION	9.909898926737558E-6	IMPLEMENTATION
public static jdbcexception newjdbcexception(string string sqlexception root string sql) { string = string + " [" + sql + ']' log.error(string root) logexceptions(root) return new jdbcexception(string root sql) } public static jdbcexception newjdbcexception(string string sqlexception root) { log.error(string root) logexceptions(root) return new jdbcexception(string root) }	WITHOUT_CLASSIFICATION	0.9999753105577627	WITHOUT_CLASSIFICATION	2.468944223733486E-5	IMPLEMENTATION
--------------------------------------------------------- public methods	WITHOUT_CLASSIFICATION	0.9999971144782234	WITHOUT_CLASSIFICATION	2.8855217767108724E-6	IMPLEMENTATION
compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999891292317351	WITHOUT_CLASSIFICATION	1.0870768264787675E-5	IMPLEMENTATION
simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999768990162005	WITHOUT_CLASSIFICATION	2.3100983799570386E-5	IMPLEMENTATION
sybase fail if we don't do that sigh	WITHOUT_CLASSIFICATION	0.9999887087510986	WITHOUT_CLASSIFICATION	1.1291248901459404E-5	IMPLEMENTATION
handles things like a and b or c a and ( b or c ) not a and not b not ( a and b ) x between y and z (overloaded "and") x in ( a b c ) (overloaded brackets) not not a a is not null (overloaded "not") etc and expressions like foo = bar (maps to foo.id = bar.id) foo.bar = 'foo' (maps to foo.bar = 'foo') foo.bar.baz = 1.0 (maps to foo.bar = bar.id and bar.baz = 1.0) 1.0 = foo.bar.baz (maps to bar.baz = 1.0 and foo.bar = bar.id) foo.bar.baz = a.b.c (maps to bar.baz = b.c and foo.bar = bar.id and a.b = b.id) foo.bar.baz + a.b.c (maps to bar.baz + b.c and foo.bar = bar.id and a.b = b.id) ( foo.bar.baz + 1.0 ) < 2.0 (maps to ( bar.baz + 1.0 ) < 2.0 and foo.bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999924538382305	WITHOUT_CLASSIFICATION	7.5461617695465205E-6	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999873804602626	WITHOUT_CLASSIFICATION	1.2619539737304288E-5	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999873804602626	WITHOUT_CLASSIFICATION	1.2619539737304288E-5	IMPLEMENTATION
try to "pretty print" it	WITHOUT_CLASSIFICATION	0.99993759759455	WITHOUT_CLASSIFICATION	6.24024054499324E-5	IMPLEMENTATION
otherwise just dump it	WITHOUT_CLASSIFICATION	0.9997820281579388	WITHOUT_CLASSIFICATION	2.1797184206110513E-4	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999994720225911	WITHOUT_CLASSIFICATION	5.279774090144314E-7	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999994720225911	WITHOUT_CLASSIFICATION	5.279774090144314E-7	IMPLEMENTATION
use default behavior	WITHOUT_CLASSIFICATION	0.9999934142535744	WITHOUT_CLASSIFICATION	6.585746425668907E-6	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999890503704547	WITHOUT_CLASSIFICATION	1.0949629545312656E-5	IMPLEMENTATION
the mru cache used to keep hard references to the most recently used query plans note lru here is a bit of a misnomer it indicates that lru entries are removed the actual kept entries are the mru entries	WITHOUT_CLASSIFICATION	0.9997149667219661	WITHOUT_CLASSIFICATION	2.8503327803387665E-4	IMPLEMENTATION
we want to be able to just use the defaults if jndi environment properties are not supplied so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999996927225312	WITHOUT_CLASSIFICATION	3.0727746875304094E-7	IMPLEMENTATION
clone -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999973111874347	WITHOUT_CLASSIFICATION	2.688812565349105E-6	IMPLEMENTATION
serialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999756793381311	WITHOUT_CLASSIFICATION	2.4320661868852444E-5	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999982181241174	WITHOUT_CLASSIFICATION	1.7818758826563961E-6	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999982181241174	WITHOUT_CLASSIFICATION	1.7818758826563961E-6	IMPLEMENTATION
deserialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999755643559282	WITHOUT_CLASSIFICATION	2.4435644071830678E-5	IMPLEMENTATION
static methods only - hide constructor	WITHOUT_CLASSIFICATION	0.9996900473950707	WITHOUT_CLASSIFICATION	3.099526049292693E-4	IMPLEMENTATION
&& !('_'==character)	WITHOUT_CLASSIFICATION	0.9999625350310373	WITHOUT_CLASSIFICATION	3.7464968962821884E-5	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9999522527044695	WITHOUT_CLASSIFICATION	4.774729553046125E-5	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9999522527044695	WITHOUT_CLASSIFICATION	4.774729553046125E-5	IMPLEMENTATION
includes last '.'	WITHOUT_CLASSIFICATION	0.9998570337641869	WITHOUT_CLASSIFICATION	1.4296623581310823E-4	IMPLEMENTATION
+1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999682176683744	WITHOUT_CLASSIFICATION	3.178233162557712E-5	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999713151469286	WITHOUT_CLASSIFICATION	2.868485307128507E-5	IMPLEMENTATION
first time we find match!	WITHOUT_CLASSIFICATION	0.9999814913238838	WITHOUT_CLASSIFICATION	1.85086761161755E-5	IMPLEMENTATION
entitynames may now include slashes for the representations classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999988659315957	WITHOUT_CLASSIFICATION	1.1340684043142418E-6	IMPLEMENTATION
wrapped iterators	WITHOUT_CLASSIFICATION	0.9999581632625492	WITHOUT_CLASSIFICATION	4.183673745094449E-5	IMPLEMENTATION
index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999772431997467	WITHOUT_CLASSIFICATION	2.2756800253308278E-5	IMPLEMENTATION
the current iterator	WITHOUT_CLASSIFICATION	0.9998904894170318	WITHOUT_CLASSIFICATION	1.0951058296822717E-4	IMPLEMENTATION
the last used iterator	WITHOUT_CLASSIFICATION	0.9999902099641584	WITHOUT_CLASSIFICATION	9.790035841564184E-6	IMPLEMENTATION
it was a boolean expression	WITHOUT_CLASSIFICATION	0.999998843596791	WITHOUT_CLASSIFICATION	1.1564032089510552E-6	IMPLEMENTATION
public static object[] clone(class elementclass object[] array) {object[] result = (object[]) array.newinstance( elementclass array.length )system.arraycopy(array 0 result 0 array.length)return result}	WITHOUT_CLASSIFICATION	0.9999944535072378	WITHOUT_CLASSIFICATION	5.546492762175627E-6	IMPLEMENTATION
call this before any iterator method to make sure that the current iterator is not exhausted	WITHOUT_CLASSIFICATION	0.9777343996557895	WITHOUT_CLASSIFICATION	0.022265600344210504	IMPLEMENTATION
doable if needed	WITHOUT_CLASSIFICATION	0.9256695454315399	WITHOUT_CLASSIFICATION	0.07433045456846005	IMPLEMENTATION
set last used iterator here in case the user calls remove before calling hasnext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999854461786783	WITHOUT_CLASSIFICATION	1.4553821321700098E-5	IMPLEMENTATION
peek ahead	WITHOUT_CLASSIFICATION	0.9999883598543268	WITHOUT_CLASSIFICATION	1.1640145673127126E-5	IMPLEMENTATION
if we reach the end of the string w/o finding the matching end that is an exception	WITHOUT_CLASSIFICATION	0.9999988726961884	WITHOUT_CLASSIFICATION	1.1273038116367493E-6	IMPLEMENTATION
we have a placeholder spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999655864534096	WITHOUT_CLASSIFICATION	3.441354659042064E-5	IMPLEMENTATION
make sure spinning forward did not put us past the end of the buffer	WITHOUT_CLASSIFICATION	0.9888315256392353	WITHOUT_CLASSIFICATION	0.011168474360764753	IMPLEMENTATION
first try to locate this resource through the current context classloader.	WITHOUT_CLASSIFICATION	0.9993988819624973	WITHOUT_CLASSIFICATION	6.01118037502769E-4	IMPLEMENTATION
next try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999292515266566	WITHOUT_CLASSIFICATION	7.074847334350501E-5	IMPLEMENTATION
next try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9997070450676542	WITHOUT_CLASSIFICATION	2.9295493234587954E-4	IMPLEMENTATION
anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999381897450468	WITHOUT_CLASSIFICATION	6.181025495327638E-5	IMPLEMENTATION
would need an identityset for this!	WITHOUT_CLASSIFICATION	0.9991870293684976	WITHOUT_CLASSIFICATION	8.129706315023463E-4	IMPLEMENTATION
arrays.aslist doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999944852267912	WITHOUT_CLASSIFICATION	5.51477320866141E-6	IMPLEMENTATION
faster?	WITHOUT_CLASSIFICATION	0.9999836981565862	WITHOUT_CLASSIFICATION	1.6301843413841834E-5	IMPLEMENTATION
the name of a class	WITHOUT_CLASSIFICATION	0.999998214236162	WITHOUT_CLASSIFICATION	1.7857638381146409E-6	IMPLEMENTATION
its the listener class name	WITHOUT_CLASSIFICATION	0.999996151007306	WITHOUT_CLASSIFICATION	3.848992693993859E-6	IMPLEMENTATION
allow 987654321	WITHOUT_CLASSIFICATION	0.9997351803677881	WITHOUT_CLASSIFICATION	2.648196322119903E-4	IMPLEMENTATION
default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999999016726699	WITHOUT_CLASSIFICATION	9.832733009791145E-8	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.999994981521414	WITHOUT_CLASSIFICATION	5.0184785859177645E-6	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999975573863414	WITHOUT_CLASSIFICATION	2.442613658615842E-6	IMPLEMENTATION
first lets determine whether to apply cglib or javassist based instrumentation	WITHOUT_CLASSIFICATION	0.9999955451780881	WITHOUT_CLASSIFICATION	4.454821911942756E-6	IMPLEMENTATION
make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999940949209045	WITHOUT_CLASSIFICATION	5.905079095375438E-6	IMPLEMENTATION
entirely optional!!	WITHOUT_CLASSIFICATION	0.9999620169627572	WITHOUT_CLASSIFICATION	3.798303724271373E-5	IMPLEMENTATION
its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999815798464474	WITHOUT_CLASSIFICATION	1.842015355260741E-5	IMPLEMENTATION
context.unbind(boundname)	WITHOUT_CLASSIFICATION	0.9999711319867853	WITHOUT_CLASSIFICATION	2.8868013214564136E-5	IMPLEMENTATION
readresolveobject	WITHOUT_CLASSIFICATION	0.999962012935408	WITHOUT_CLASSIFICATION	3.7987064592035605E-5	IMPLEMENTATION
cfg.setproperty("hibernate.show_sql" "true")	WITHOUT_CLASSIFICATION	0.9999742311260307	WITHOUT_CLASSIFICATION	2.576887396927966E-5	IMPLEMENTATION
defensive convenience methods	WITHOUT_CLASSIFICATION	0.9999719957682627	WITHOUT_CLASSIFICATION	2.8004231737435615E-5	IMPLEMENTATION
create the sessionfactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999977079626824	WITHOUT_CLASSIFICATION	2.2920373175410863E-6	IMPLEMENTATION
make sure you log the exception as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999830844149774	WITHOUT_CLASSIFICATION	1.6915585022655753E-5	IMPLEMENTATION
begin unit of work	WITHOUT_CLASSIFICATION	0.9999633275111547	WITHOUT_CLASSIFICATION	3.66724888454298E-5	IMPLEMENTATION
write html header	WITHOUT_CLASSIFICATION	0.9998882226018154	WITHOUT_CLASSIFICATION	1.1177739818459943E-4	IMPLEMENTATION
handle actions	WITHOUT_CLASSIFICATION	0.9998796103413754	WITHOUT_CLASSIFICATION	1.2038965862459294E-4	IMPLEMENTATION
print page	WITHOUT_CLASSIFICATION	0.9999949167813351	WITHOUT_CLASSIFICATION	5.083218664868637E-6	IMPLEMENTATION
write html footer	WITHOUT_CLASSIFICATION	0.9999154402421302	WITHOUT_CLASSIFICATION	8.455975786973854E-5	IMPLEMENTATION
end unit of work	WITHOUT_CLASSIFICATION	0.999881769714891	WITHOUT_CLASSIFICATION	1.1823028510905744E-4	IMPLEMENTATION
start the session to be used for this request	WITHOUT_CLASSIFICATION	0.999993454522108	WITHOUT_CLASSIFICATION	6.545477892079309E-6	IMPLEMENTATION
make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9990627546931807	WITHOUT_CLASSIFICATION	9.372453068191405E-4	IMPLEMENTATION
pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9998505454357489	WITHOUT_CLASSIFICATION	1.494545642511051E-4	IMPLEMENTATION
remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999914897283324	WITHOUT_CLASSIFICATION	8.510271667539648E-6	IMPLEMENTATION
eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999785546892551	WITHOUT_CLASSIFICATION	2.1445310744960575E-5	IMPLEMENTATION
if we want to handle it bidirectional and detached we also need to load this collection with an eager outer-join fetch this time with criteria and not hql	WITHOUT_CLASSIFICATION	0.5171173916598968	WITHOUT_CLASSIFICATION	0.48288260834010316	IMPLEMENTATION
event anevent = (event) session .createcriteria(event.class).setfetchmode("participants" fetchmode.join) .add( expression.eq("id" eventid) ) .uniqueresult() eager fetch the colleciton so we can use it detached	WITHOUT_CLASSIFICATION	0.9998941181768676	WITHOUT_CLASSIFICATION	1.0588182313252073E-4	IMPLEMENTATION
end of first unit of work	WITHOUT_CLASSIFICATION	0.9999051018399135	WITHOUT_CLASSIFICATION	9.489816008648524E-5	IMPLEMENTATION
or bidirectional safety method setting both sides aperson.addtoevent(anevent)	WITHOUT_CLASSIFICATION	0.9999900903213282	WITHOUT_CLASSIFICATION	9.909678671821849E-6	IMPLEMENTATION
begin second unit of work	WITHOUT_CLASSIFICATION	0.9999853906173894	WITHOUT_CLASSIFICATION	1.4609382610585227E-5	IMPLEMENTATION
reattachment of aperson	WITHOUT_CLASSIFICATION	0.9999814592339789	WITHOUT_CLASSIFICATION	1.8540766021109414E-5	IMPLEMENTATION
the getemailaddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9997250642581589	WITHOUT_CLASSIFICATION	2.7493574184114366E-4	IMPLEMENTATION
we need our tm so get it now and avoid doing other work if there is a problem	WITHOUT_CLASSIFICATION	0.9999995411679927	WITHOUT_CLASSIFICATION	4.588320072253842E-7	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999719848630321	WITHOUT_CLASSIFICATION	2.801513696799659E-5	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999719848630321	WITHOUT_CLASSIFICATION	2.801513696799659E-5	IMPLEMENTATION
jbc put a version in the node when it created as part of some internal operation. we are always newer but if the jbc version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.999999999996988	WITHOUT_CLASSIFICATION	3.0120575806833514E-12	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for properties with hibernate-specific overrides to detect and warn about conflicting declarations	WITHOUT_CLASSIFICATION	0.9999008974546788	WITHOUT_CLASSIFICATION	9.910254532113363E-5	IMPLEMENTATION
not null if the isolation level has been specified in the configuration file. otherwise it is left to the driver's default value.	WITHOUT_CLASSIFICATION	0.9998249701642442	WITHOUT_CLASSIFICATION	1.7502983575575347E-4	IMPLEMENTATION
configured outside of hibernate (i.e. servlet container or java bean container already has proxool pools running and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999998004498488	WITHOUT_CLASSIFICATION	1.9955015116840071E-7	IMPLEMENTATION
if you're closing down the connectionprovider chances are an is not a real big deal just warn	WITHOUT_CLASSIFICATION	0.9999796550715879	WITHOUT_CLASSIFICATION	2.034492841206101E-5	IMPLEMENTATION
(as is always optional for consistency with sql/oql)	WITHOUT_CLASSIFICATION	0.9999926392714993	WITHOUT_CLASSIFICATION	7.360728500664144E-6	IMPLEMENTATION
process the "new" hql style where aliases are assigned _after_ the class name or path expression ie. using the as construction	WITHOUT_CLASSIFICATION	0.9999987063616582	WITHOUT_CLASSIFICATION	1.2936383417358879E-6	IMPLEMENTATION
the loaded owner will be set to null after the collection is removed so capture its value as the affected owner so it is accessible to both pre- and post- events	WITHOUT_CLASSIFICATION	0.999999913118318	WITHOUT_CLASSIFICATION	8.688168196057479E-8	IMPLEMENTATION
is a primitive type invokespecial	WITHOUT_CLASSIFICATION	0.999997094808671	WITHOUT_CLASSIFICATION	2.9051913288756026E-6	IMPLEMENTATION
array of primitive type do nothing	WITHOUT_CLASSIFICATION	0.9999983319696772	WITHOUT_CLASSIFICATION	1.6680303226709387E-6	IMPLEMENTATION
handle a path expression or class name that appears at the start in the "new" hql style or an alias that appears at the start in the "old" hql style	WITHOUT_CLASSIFICATION	0.9999956409262348	WITHOUT_CLASSIFICATION	4.35907376511172E-6	IMPLEMENTATION
handle <= >= != is not not between not in	WITHOUT_CLASSIFICATION	0.9998632924276262	WITHOUT_CLASSIFICATION	1.3670757237382907E-4	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999939445142	WITHOUT_CLASSIFICATION	6.0554857840436434E-9	IMPLEMENTATION
transfer an explicitly defined entity name handle the lazy attribute	WITHOUT_CLASSIFICATION	0.999952739742282	WITHOUT_CLASSIFICATION	4.7260257717876985E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999990815137096	WITHOUT_CLASSIFICATION	9.184862902351367E-7	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999990815137096	WITHOUT_CLASSIFICATION	9.184862902351367E-7	IMPLEMENTATION
get meta's from <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999984939422292	WITHOUT_CLASSIFICATION	1.5060577708995138E-6	IMPLEMENTATION
parameters on the property mapping should override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999624492890511	WITHOUT_CLASSIFICATION	3.755071094887256E-5	IMPLEMENTATION
fetch="join" overrides default laziness fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999953899469112	WITHOUT_CLASSIFICATION	4.610053088859515E-6	IMPLEMENTATION
note special case default to join and non-lazy for the "second join" of the many-to-many	WITHOUT_CLASSIFICATION	0.9999995229145776	WITHOUT_CLASSIFICATION	4.770854223619837E-7	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.999993604812296	WITHOUT_CLASSIFICATION	6.395187703937244E-6	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999925232025585	WITHOUT_CLASSIFICATION	7.476797441493526E-6	IMPLEMENTATION
void setcomponenttuplizerfactory(componenttuplizerfactory componenttuplizerfactory) { this.componenttuplizerfactory = componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.999832669928618	WITHOUT_CLASSIFICATION	1.6733007138191336E-4	IMPLEMENTATION
element index -> id	WITHOUT_CLASSIFICATION	0.9999419807789395	WITHOUT_CLASSIFICATION	5.80192210603782E-5	IMPLEMENTATION
note that it might be better to iterate the snapshot but this is safe assuming the user implements equals() properly as required by the set contract!	WITHOUT_CLASSIFICATION	0.9999915107999384	WITHOUT_CLASSIFICATION	8.489200061466423E-6	IMPLEMENTATION
collections detect changes made via their public interface and mark themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9996590905652382	WITHOUT_CLASSIFICATION	3.409094347618776E-4	IMPLEMENTATION
essentially if the real session is closed allow any method call to pass through since the real session will complain by throwing an appropriate exception note that allowing close() above has the same basic effect but we capture that there simply to perform the unbind	WITHOUT_CLASSIFICATION	0.9999997080708011	WITHOUT_CLASSIFICATION	2.9192919901265896E-7	IMPLEMENTATION
the default sqlexceptionconverter for all dialects is based on sqlstate since sqlerrorcode is extremely vendor-specific. specific dialects may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9983203381534148	WITHOUT_CLASSIFICATION	0.0016796618465850822	IMPLEMENTATION
only necessary for postgre < 7.4 httpanoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999731423027682	WITHOUT_CLASSIFICATION	2.6857697231806298E-5	IMPLEMENTATION
select topic syntax from information_schema.help where section like 'function%' order by section topic see also -> httpwww.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999996488207175	WITHOUT_CLASSIFICATION	3.5117928256279864E-7	IMPLEMENTATION
registercolumntype(types.varbinary "character($l)") registercolumntype(types.blob "character($l)" ) for use prior to cp 11.0 registercolumntype(types.clob "character($l)" )	WITHOUT_CLASSIFICATION	0.9999764292322321	WITHOUT_CLASSIFICATION	2.3570767767906905E-5	IMPLEMENTATION
the blob type requires a size arguement - this defaults to bytes - no arg defaults to 1 whole byte! other argument mods include k - kilobyte m - megabyte g - gigabyte. refer to the pbdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999611133831708	WITHOUT_CLASSIFICATION	3.888661682910893E-5	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9958942505955708	WITHOUT_CLASSIFICATION	0.004105749404429184	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.999999814545031	WITHOUT_CLASSIFICATION	1.8545496895623403E-7	IMPLEMENTATION
add the comment nest the main query in an outer select add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999992610847294	WITHOUT_CLASSIFICATION	7.38915270631708E-7	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999142122743411	WITHOUT_CLASSIFICATION	8.578772565895783E-5	IMPLEMENTATION
note for object <-> sql datatype mappings see configuration manager | advanced | sql | system ddl datatype mappings tbdregistercolumntype(types.binary "binary($1)") changed 08-11-2005 jsl	WITHOUT_CLASSIFICATION	0.999999998832202	WITHOUT_CLASSIFICATION	1.1677979048971131E-9	IMPLEMENTATION
trim(end_keyword string-expression-1 from string-expression-2) use hibernate implementation "from" is one of the parameters they pass in position ?3 registerfunction( "trim" new sqlfunctiontemplate(hibernate.string "trim(?1 ?2 from ?3)") )	WITHOUT_CLASSIFICATION	0.999997803751777	WITHOUT_CLASSIFICATION	2.1962482229200904E-6	IMPLEMENTATION
whether this dialect has an identity clause added to the data type or a completely seperate identity data type	WITHOUT_CLASSIFICATION	0.9999999598407756	WITHOUT_CLASSIFICATION	4.0159224322630754E-8	IMPLEMENTATION
according to both the ansi-sql and jpa specs trim takes a variable number of parameters between 1 and 4. at least one paramer (trimsource) is required. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if <trim specification> is omitted both is assumed. if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.9999999987669033	WITHOUT_CLASSIFICATION	1.233096667330619E-9	IMPLEMENTATION
/ prepare persisters and link them up with their cache region/access-strategy	WITHOUT_CLASSIFICATION	0.9999983403913991	WITHOUT_CLASSIFICATION	1.6596086007847206E-6	IMPLEMENTATION
named queries	WITHOUT_CLASSIFICATION	0.9999858911908519	WITHOUT_CLASSIFICATION	1.410880914806239E-5	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999770581423777	WITHOUT_CLASSIFICATION	2.2941857622356625E-5	IMPLEMENTATION
does not handle arrays (thats ok cos they can't be lazy) or newly instantiated collections so we can do the cast	WITHOUT_CLASSIFICATION	0.9998912956198279	WITHOUT_CLASSIFICATION	1.0870438017205979E-4	IMPLEMENTATION
collection deletions are a special case since update() can add deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999837032930514	WITHOUT_CLASSIFICATION	1.629670694860738E-5	IMPLEMENTATION
we can do the cast since orphan-delete does not apply to 1. newly instantiated collections 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999692804036446	WITHOUT_CLASSIFICATION	3.0719596355450524E-5	IMPLEMENTATION
if the natural-id is marked as non-mutable it is not retrieved during a normal database-snapshot operation	WITHOUT_CLASSIFICATION	0.9999982748221348	WITHOUT_CLASSIFICATION	1.7251778652022718E-6	IMPLEMENTATION
watch out for a case where old is still referenced somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999999872663898	WITHOUT_CLASSIFICATION	1.2733610239660255E-8	IMPLEMENTATION
slice to get the columns for this component property	WITHOUT_CLASSIFICATION	0.9999997336655738	WITHOUT_CLASSIFICATION	2.6633442625160875E-7	IMPLEMENTATION
int result = 17 result = 37 result + type.hashcode() result = 37 result + ( value==null ? 0 value.hashcode() ) return result	WITHOUT_CLASSIFICATION	0.9999991003719456	WITHOUT_CLASSIFICATION	8.996280544139941E-7	IMPLEMENTATION
the collectionentry.isreached() stuff is just to detect any silly users who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999992120503614	WITHOUT_CLASSIFICATION	7.879496386514408E-7	IMPLEMENTATION
detached collection wrappers that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9989979470454006	WITHOUT_CLASSIFICATION	0.0010020529545994358	IMPLEMENTATION
the unique property value represented here may or may not be serializable so we do an explicit check here in order to generate a better error message	WITHOUT_CLASSIFICATION	0.8309093976855261	WITHOUT_CLASSIFICATION	0.16909060231447393	IMPLEMENTATION
if the version of a newly instantiated object is not the same as the version seed value use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999849209228574	WITHOUT_CLASSIFICATION	1.507907714250903E-5	IMPLEMENTATION
ie. we never have to null out a reference to an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999972319394673	WITHOUT_CLASSIFICATION	2.7680605326520225E-6	IMPLEMENTATION
ignore this row the collection is in process of being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999996905390737	WITHOUT_CLASSIFICATION	3.094609262719299E-7	IMPLEMENTATION
entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currently not yet used	WITHOUT_CLASSIFICATION	0.9973975231064153	WITHOUT_CLASSIFICATION	0.002602476893584637	IMPLEMENTATION
should be ok performance-wise to generate new delegate instances for each request since these are locally stack-scoped. besides it makes the code much easier to read than the old transactionhelper stuff	WITHOUT_CLASSIFICATION	0.9999999885556822	WITHOUT_CLASSIFICATION	1.1444317805555769E-8	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9997638675253124	WITHOUT_CLASSIFICATION	2.3613247468753893E-4	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9997638675253124	WITHOUT_CLASSIFICATION	2.3613247468753893E-4	IMPLEMENTATION
wrap up any new collections directly referenced by the object or its components	WITHOUT_CLASSIFICATION	0.9999999217362994	WITHOUT_CLASSIFICATION	7.826370061795763E-8	IMPLEMENTATION
remove any snapshot not really for memory management purposes but rather because it might now be stale and there is no longer any entityentry to take precedence this is now handled by removeentity() session.getpersistencecontext().removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.9999985590029105	WITHOUT_CLASSIFICATION	1.4409970896182627E-6	IMPLEMENTATION
skip this check for composite-ids relating to dom4j entity-mode alternatively we could add a check to make sure the incoming id value is an instance of element	WITHOUT_CLASSIFICATION	0.9922589770957603	WITHOUT_CLASSIFICATION	0.007741022904239681	IMPLEMENTATION
upgrade the lock if necessary lock(result lockmode)	WITHOUT_CLASSIFICATION	0.9999916457545002	WITHOUT_CLASSIFICATION	8.354245499808255E-6	IMPLEMENTATION
now any collections that are initialized inside this block do not get updated - they are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9526713422160336	WITHOUT_CLASSIFICATION	0.04732865778396647	IMPLEMENTATION
we must clone embedded composite identifiers or we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999999169565901	WITHOUT_CLASSIFICATION	8.304340990198258E-8	IMPLEMENTATION
sub-insertions should occur before containing insertion so try to do the callback now	WITHOUT_CLASSIFICATION	0.9999197394391428	WITHOUT_CLASSIFICATION	8.026056085713062E-5	IMPLEMENTATION
the entity is not associated with the session so try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9995386409495852	WITHOUT_CLASSIFICATION	4.613590504146802E-4	IMPLEMENTATION
scan the query string for class names appearing in the from clause and replace with all persistent implementors of the class/interface returning multiple query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999778220660729	WITHOUT_CLASSIFICATION	2.2177933927209505E-5	IMPLEMENTATION
save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999605794809229	WITHOUT_CLASSIFICATION	3.942051907714491E-5	IMPLEMENTATION
evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999603717542268	WITHOUT_CLASSIFICATION	3.962824577322294E-5	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999978264288711	WITHOUT_CLASSIFICATION	2.17357112875374E-6	IMPLEMENTATION
if it is an uninitialized proxy pointing with this session then when it is accessed the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999999039552615	WITHOUT_CLASSIFICATION	9.60447385632852E-8	IMPLEMENTATION
generate an explicit join for the root dot node. the implied joins will be collected and passed up to the root dot node.	WITHOUT_CLASSIFICATION	0.99999644751639	WITHOUT_CLASSIFICATION	3.5524836098866987E-6	IMPLEMENTATION
a session is considered to contain an entity only if the entity has an entry in the session's persistence context and the entry reports that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9967269663731831	WITHOUT_CLASSIFICATION	0.0032730336268168366	IMPLEMENTATION
does the collection referenced by this fromelement specify an order-by attribute? if so attach it to the query's order-by	WITHOUT_CLASSIFICATION	0.9999998865827687	WITHOUT_CLASSIFICATION	1.134172312484026E-7	IMPLEMENTATION
and the token could be an identifer and the error is a mismatched token error	WITHOUT_CLASSIFICATION	0.9999868887753434	WITHOUT_CLASSIFICATION	1.3111224656695191E-5	IMPLEMENTATION
if a where clause was specified in the update/delete query use it to limit the returned ids here	WITHOUT_CLASSIFICATION	0.9999996781480298	WITHOUT_CLASSIFICATION	3.218519701389296E-7	IMPLEMENTATION
int parameterstart = getwalker().getnumberofparametersinsetclause() list allparams = getidselectparameterspecifications() iterator whereparams = allparams.sublist( parameterstart allparams.size() ).iterator()	WITHOUT_CLASSIFICATION	0.999975282935013	WITHOUT_CLASSIFICATION	2.4717064987041736E-5	IMPLEMENTATION
default implementation if this node has a data type and that data type is not an association then this is scalar.	WITHOUT_CLASSIFICATION	0.9999968976128851	WITHOUT_CLASSIFICATION	3.102387114950237E-6	IMPLEMENTATION
resolve the lhs fully generate implicit joins. pass in the property name so that the resolver can discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999975309855902	WITHOUT_CLASSIFICATION	2.469014409912319E-6	IMPLEMENTATION
if the propertytype is null and there isn't a parent just stop now there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999999162948746	WITHOUT_CLASSIFICATION	8.370512540745286E-8	IMPLEMENTATION
we do not look for an existing join on the same path because it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9979439297121838	WITHOUT_CLASSIFICATION	0.002056070287816113	IMPLEMENTATION
our parent is another dot node meaning we are being further dereferenced. thus we need to generate a join unless the parent refers to the associated entity's pk (because 'our' table would know the fk).	WITHOUT_CLASSIFICATION	0.9843874589705872	WITHOUT_CLASSIFICATION	0.015612541029412655	IMPLEMENTATION
public final currency getcurrency(int col) throws hibernateexception {return (currency) get(col)}	WITHOUT_CLASSIFICATION	0.9999955745993467	WITHOUT_CLASSIFICATION	4.425400653283542E-6	IMPLEMENTATION
here we have two possibilities 1) the property-name matches the explicitly identifier property name 2) the property-name matches the implicit 'id' property name	WITHOUT_CLASSIFICATION	0.9998295025618118	WITHOUT_CLASSIFICATION	1.7049743818825958E-4	IMPLEMENTATION
set the unresolved path in this node and the parent. set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999434385329545	WITHOUT_CLASSIFICATION	5.6561467045483596E-5	IMPLEMENTATION
get the first child to be considered. sub-classes may do this differently in order to skip nodes that are not select expressions (e.g. distinct).	WITHOUT_CLASSIFICATION	0.9997276830837563	WITHOUT_CLASSIFICATION	2.7231691624370584E-4	IMPLEMENTATION
if this is an entity and the property is the identifier property then use getidentifiertype(). note that the propertyname.equals( propertypath ) checks whether we have a component key reference where the component class property name is the same as the entity id property name if the two are not equal this is the case and we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999986436735256	WITHOUT_CLASSIFICATION	1.3563264743486751E-6	IMPLEMENTATION
for a subquery the alias to use depends on a few things (we already know this is not an overall select) 1) if this from_element represents a correlation to the outer-most query a) if the outer query represents a multi-table persister we need to use the given alias in anticipation of one of the multi-table executors being used (as this subquery will actually be used in the "id select" phase of that multi-table executor) b) otherwise we need to use the persister's table name as the column qualification 2) otherwise (not correlated) use the given alias	WITHOUT_CLASSIFICATION	0.9959641630822105	WITHOUT_CLASSIFICATION	0.004035836917789514	IMPLEMENTATION
not a collection? return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9996774405433901	WITHOUT_CLASSIFICATION	3.225594566098843E-4	IMPLEMENTATION
collection of <many-to-any/> mappings used to circumvent the component-collection check below	WITHOUT_CLASSIFICATION	0.9999460782618121	WITHOUT_CLASSIFICATION	5.392173818778993E-5	IMPLEMENTATION
otherwise the destination node was implied by the from clause and the from clause processor will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999984938997744	WITHOUT_CLASSIFICATION	1.5061002256805138E-6	IMPLEMENTATION
if the first identifier in the path referrs to the class alias (not the class name) then this is a correlated subselect. if it's a correlated sub-select use the existing table alias. otherwise generate a new one.	WITHOUT_CLASSIFICATION	0.9999971669090131	WITHOUT_CLASSIFICATION	2.8330909869061873E-6	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999981115876331	WITHOUT_CLASSIFICATION	1.8884123668565396E-6	IMPLEMENTATION
an ident node can represent an index expression if the ident represents a naked property ref note this makes the assumption (which is currently the case in the hql-sql grammar) that the ident is first resolved itself (addrexpr -> resolve()). the other option if that changes is to call resolve from here but it is currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999835558274	WITHOUT_CLASSIFICATION	1.644417263433342E-8	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9997542899616858	WITHOUT_CLASSIFICATION	2.4571003831411024E-4	IMPLEMENTATION
if this is an implied join in a from clause then use ansi-style joining and set the flag on the fromelement that indicates that it was implied in the from clause itself.	WITHOUT_CLASSIFICATION	0.9999999515594225	WITHOUT_CLASSIFICATION	4.844057750116911E-8	IMPLEMENTATION
origin.adddestination(destination) add the query spaces.	WITHOUT_CLASSIFICATION	0.9999602878057887	WITHOUT_CLASSIFICATION	3.9712194211293764E-5	IMPLEMENTATION
for an explicit many-to-many relationship add a second join from the intermediate (many-to-many) table to the destination table. also make sure that the from element's idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999989406168752	WITHOUT_CLASSIFICATION	1.0593831247323237E-6	IMPLEMENTATION
reset the node type because the rest of the system is expecting from_fragment all we wanted was for the factory to create the right sub-class. this might get reset again later on anyway to make the sql generation simpler.	WITHOUT_CLASSIFICATION	0.9999953298526674	WITHOUT_CLASSIFICATION	4.670147332682426E-6	IMPLEMENTATION
explicit = true this is an explict select. arraylist sqlresulttypelist = new arraylist()	WITHOUT_CLASSIFICATION	0.9999922399523239	WITHOUT_CLASSIFICATION	7.760047676084425E-6	IMPLEMENTATION
sqlresulttypelist.add( type ) generate the select expression.	WITHOUT_CLASSIFICATION	0.9999626617683005	WITHOUT_CLASSIFICATION	3.733823169943868E-5	IMPLEMENTATION
if the expression list has exactly one expression and the type of the expression is a collection then this might be a collection function such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999997757385435	WITHOUT_CLASSIFICATION	2.2426145641633267E-7	IMPLEMENTATION
need to parse off the column qualifiers this is assuming (which is true as of now) that this is only used from update and delete hql statement parsing	WITHOUT_CLASSIFICATION	0.9997703981325201	WITHOUT_CLASSIFICATION	2.2960186747988948E-4	IMPLEMENTATION
for regression testing against output from the old parser found it easiest to simply reorder the fromelements here into ascending order in terms of injecting them into the resulting sql ast in orders relative to those expected by the old parser this is definitely another of those "only needed for regression purposes". the syntheticandfactory then simply injects them as it encounters them.	WITHOUT_CLASSIFICATION	0.9999932707954564	WITHOUT_CLASSIFICATION	6.729204543578392E-6	IMPLEMENTATION
the uber-rule here is that we need to include subclass joins if the fromelement is in any way dereferenced by a property from the subclass table otherwise we end up with column references qualified by a non-existent table reference in the resulting sql	WITHOUT_CLASSIFICATION	0.9999732454847097	WITHOUT_CLASSIFICATION	2.6754515290380113E-5	IMPLEMENTATION
classic translator does not support collection of ordinal param metadata	WITHOUT_CLASSIFICATION	0.9992365930335305	WITHOUT_CLASSIFICATION	7.634069664693824E-4	IMPLEMENTATION
the following variables are stacks that keep information about each subexpression in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999999845395263	WITHOUT_CLASSIFICATION	1.5460473631996398E-8	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999939445142	WITHOUT_CLASSIFICATION	6.0554857840436434E-9	IMPLEMENTATION
should not be able to reach last without maxposition being set unless there are no results	WITHOUT_CLASSIFICATION	0.9999924829460197	WITHOUT_CLASSIFICATION	7.517053980300894E-6	IMPLEMENTATION
we found it in the temp pc. should indicate we are in the midst of processing a result set containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999962942248021	WITHOUT_CLASSIFICATION	3.7057751979656246E-6	IMPLEMENTATION
do not use proxiesbykey since not all proxies that point to this session's instances are in that collection!	WITHOUT_CLASSIFICATION	0.9998683129614323	WITHOUT_CLASSIFICATION	1.3168703856763608E-4	IMPLEMENTATION
if there is no tm configured we will not be able to access the javax.transaction.transaction object in order to register a synch anyway.	WITHOUT_CLASSIFICATION	0.999999988574915	WITHOUT_CLASSIFICATION	1.1425084958909696E-8	IMPLEMENTATION
since the result set cursor is always left at the first physical row after the "last processed" we need to jump back one position to get the key value we are interested in skipping	WITHOUT_CLASSIFICATION	0.9999999834125937	WITHOUT_CLASSIFICATION	1.6587406318108933E-8	IMPLEMENTATION
true if this is a query and we are loading multiple instances of the same collection role otherwise this is a collectioninitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999964762089535	WITHOUT_CLASSIFICATION	3.523791046465066E-6	IMPLEMENTATION
we don't need to worry about existing version being uninitialized because this block isn't called by a re-entrant load (re-entrant loads _always_ have lock mode none)	WITHOUT_CLASSIFICATION	0.9996492458844076	WITHOUT_CLASSIFICATION	3.50754115592365E-4	IMPLEMENTATION
add temp entry so that the next step is circular-reference safe - only needed because some types don't take proper advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.7393193537037619	WITHOUT_CLASSIFICATION	0.26068064629623816	IMPLEMENTATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.999999900202205	WITHOUT_CLASSIFICATION	9.97977949536016E-8	IMPLEMENTATION
log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9529297382778413	WITHOUT_CLASSIFICATION	0.04707026172215864	IMPLEMENTATION
ps.close() just close it do not try to return it to the pool! note early exit!	WITHOUT_CLASSIFICATION	0.9999513702221262	WITHOUT_CLASSIFICATION	4.8629777873841286E-5	IMPLEMENTATION
this has been shown to happen occasionally in rare cases when using a transaction manager + transaction-timeout where the timeout calls back through hibernate's registered transaction synchronization on a separate "reaping" thread. in cases where that reaping thread executes through this block at the same time the main application thread does we can get into situations where these cmes occur. and though it is not "allowed" per-se the end result without handling it specifically is infinite looping. so here we simply break the loop	WITHOUT_CLASSIFICATION	0.9993096897342417	WITHOUT_CLASSIFICATION	6.903102657583765E-4	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9997361569793469	WITHOUT_CLASSIFICATION	2.6384302065313517E-4	IMPLEMENTATION
can't cache this stuff either (per-invocation) we are given a map of user-alias -> lock mode create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999996694306981	WITHOUT_CLASSIFICATION	3.30569301860609E-7	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns getcollectiontable().createuniquekey( getidentifier().getconstraintcolumns() )	WITHOUT_CLASSIFICATION	0.9998149342356145	WITHOUT_CLASSIFICATION	1.8506576438560276E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957891148843	WITHOUT_CLASSIFICATION	4.210885115701143E-6	IMPLEMENTATION
isset = collection.isset() issorted = collection.issorted()	WITHOUT_CLASSIFICATION	0.999924419100581	WITHOUT_CLASSIFICATION	7.558089941891956E-5	IMPLEMENTATION
lists arrays sets maps bags	WITHOUT_CLASSIFICATION	0.9999938153056845	WITHOUT_CLASSIFICATION	6.184694315488447E-6	IMPLEMENTATION
we finish all the "removes" first to take care of possible unique constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999081384138168	WITHOUT_CLASSIFICATION	9.186158618321692E-5	IMPLEMENTATION
use a combination of foreign key columns and pk columns since the ordering of removal and addition is not guaranteed when a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999827061150478	WITHOUT_CLASSIFICATION	1.729388495223386E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957891148843	WITHOUT_CLASSIFICATION	4.210885115701143E-6	IMPLEMENTATION
information about properties of this class including inherited properties (only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.8924893256370449	WITHOUT_CLASSIFICATION	0.1075106743629551	IMPLEMENTATION
all this only really needs to consider properties of this class not its subclasses but since we are reusing code used for sequential selects we use the subclass closure	WITHOUT_CLASSIFICATION	0.9999999277915087	WITHOUT_CLASSIFICATION	7.220849121460828E-8	IMPLEMENTATION
here we render the select column list based on the properties defined as being generated. for partial component generation we currently just re-select the whole component rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999903249180283	WITHOUT_CLASSIFICATION	9.67508197170173E-6	IMPLEMENTATION
this is the root (versioned) table and we are using version-based optimistic locking if we are not updating the version also don't check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9997277584098428	WITHOUT_CLASSIFICATION	2.722415901571719E-4	IMPLEMENTATION
optimistic-lock="all" include all updatable properties optimistic-lock="dirty" include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999947973397982	WITHOUT_CLASSIFICATION	5.202660201770271E-6	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9998804848672278	WITHOUT_CLASSIFICATION	1.1951513277225192E-4	IMPLEMENTATION
check to see if the connection is in auto-commit mode (no connection means aggressive connection release outside a jta transaction context so must be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999892570995347	WITHOUT_CLASSIFICATION	1.0742900465212096E-5	IMPLEMENTATION
need to treat this as if it where optimistic-lock="all" (dirty does not make sense) first we need to locate the "loaded" state note it potentially could be a proxy so perform the location the safe way	WITHOUT_CLASSIFICATION	0.9972275252083779	WITHOUT_CLASSIFICATION	0.0027724747916221663	IMPLEMENTATION
we always assume an instance with a null identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999997486580247	WITHOUT_CLASSIFICATION	2.51341975385505E-7	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9999890899776666	WITHOUT_CLASSIFICATION	1.091002233351085E-5	IMPLEMENTATION
allow any identifier quoted with backtick only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.999943117009087	WITHOUT_CLASSIFICATION	5.688299091303783E-5	IMPLEMENTATION
following doesn't handle (null not null) but unnecessary since this would mean all rows	WITHOUT_CLASSIFICATION	0.9996865633889864	WITHOUT_CLASSIFICATION	3.1343661101358397E-4	IMPLEMENTATION
impl note due to the delayed population of setters (setters cached for performance) we really cannot pro0perly define equality for this transformer	WITHOUT_CLASSIFICATION	0.999999731017273	WITHOUT_CLASSIFICATION	2.6898272698105135E-7	IMPLEMENTATION
we need to dirty check collections since they can cause an owner version number increment	WITHOUT_CLASSIFICATION	0.9993944849168258	WITHOUT_CLASSIFICATION	6.055150831742369E-4	IMPLEMENTATION
return the id so we can use it to reset the proxy id return result	WITHOUT_CLASSIFICATION	0.9999912236694628	WITHOUT_CLASSIFICATION	8.776330537118708E-6	IMPLEMENTATION
optimizer = getfactory().getsettings().getbytecodeprovider().getreflectionoptimizer( mappedclass getternames setternames proptypes )	WITHOUT_CLASSIFICATION	0.9999219511739476	WITHOUT_CLASSIFICATION	7.804882605243697E-5	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9943964643622644	WITHOUT_CLASSIFICATION	0.005603535637735704	IMPLEMENTATION
we now have the value of the property-ref we reference. however we need to dig a little deeper as that property might also be an entity type in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999830020835252	WITHOUT_CLASSIFICATION	1.6997916474877772E-5	IMPLEMENTATION
retrieve the value of the designated column in the current row of this resultset object as a java.io.reader object	WITHOUT_CLASSIFICATION	0.9999967794850897	WITHOUT_CLASSIFICATION	3.2205149102415124E-6	IMPLEMENTATION
not absolutely necessary but helps for some equals()/hashcode() implementations	WITHOUT_CLASSIFICATION	0.9978130437533351	WITHOUT_CLASSIFICATION	0.00218695624666493	IMPLEMENTATION
this should be a call to resolve() not resolveidentifier() 'cos it might be a property-ref and we did not cache the referenced value	WITHOUT_CLASSIFICATION	0.9946866270530891	WITHOUT_CLASSIFICATION	0.005313372946910886	IMPLEMENTATION
if we have <tt>not-found="ignore"</tt> association mapped to a formula we always need to dirty check it so we can update the second-level cache	WITHOUT_CLASSIFICATION	0.9992585084261134	WITHOUT_CLASSIFICATION	7.414915738865868E-4	IMPLEMENTATION
can't just return null here since that would cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999954512852344	WITHOUT_CLASSIFICATION	4.548714765659905E-6	IMPLEMENTATION
for arrays replaceelements() may return a different reference since the array length might not match	WITHOUT_CLASSIFICATION	0.9996527986889688	WITHOUT_CLASSIFICATION	3.4720131103122985E-4	IMPLEMENTATION
actual cache of the entries. soft references are used for both the keys and the values here since the values pertaining to the mru entries are kept in a seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999999085497	WITHOUT_CLASSIFICATION	9.145026176769228E-11	IMPLEMENTATION
as soon as we encounter our first letter return the substring from that position	WITHOUT_CLASSIFICATION	0.9999983956719397	WITHOUT_CLASSIFICATION	1.6043280602871293E-6	IMPLEMENTATION
note expected in the syntax type=listenerclass ({sep}type=listenerclass) where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999994043031291	WITHOUT_CLASSIFICATION	5.956968709738479E-7	IMPLEMENTATION
istransactioncallbackregistered denotes whether any hibernate transaction has registered as a callback against this jdbccontext only one such callback is allowed. directly serializing this value causes problems with jdbctransaction or really any transaction impl where the callback is local to the transaction instance itself since that transaction is not serialized along with the jdbccontext. thus we handle that fact here explicitly	WITHOUT_CLASSIFICATION	0.9999951910879463	WITHOUT_CLASSIFICATION	4.8089120537242905E-6	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999875808513604	WITHOUT_CLASSIFICATION	1.2419148639606378E-5	IMPLEMENTATION
we call getkeyfromresultset() here so that we can know the key value upon which to perform the breaking logic. however it is also then called from getrowfromresultset() which is certainly not the most efficient. but the call here is needed and there currently is no other way without refactoring of the doquery()/getrowfromresultset() methods	WITHOUT_CLASSIFICATION	0.5802816414396966	IMPLEMENTATION	0.4197183585603033	WITHOUT_CLASSIFICATION
this check is needed since processing leaves the cursor after the last physical row for the current logical row thus if we are after the last physical row this might be caused by either 1) scrolling to the last logical row 2) scrolling past the last logical row in the latter scenario the previous logical row really is the last logical row. in all other cases we should process back two logical records (the current logic row plus the previous logical row).	WITHOUT_CLASSIFICATION	0.9997042545626372	WITHOUT_CLASSIFICATION	2.9574543736269563E-4	IMPLEMENTATION
and perform the load	WITHOUT_CLASSIFICATION	0.9999571644152729	WITHOUT_CLASSIFICATION	4.283558472707986E-5	IMPLEMENTATION
important reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999703904873699	WITHOUT_CLASSIFICATION	2.960951263014287E-5	IMPLEMENTATION
this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999985572372996	WITHOUT_CLASSIFICATION	1.4427627004994904E-6	IMPLEMENTATION
we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999998465170554	WITHOUT_CLASSIFICATION	1.5348294456750433E-7	IMPLEMENTATION
we did not find a collection element in the result set so we ensure that a collection is created with the owner's identifier since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.999998222427202	WITHOUT_CLASSIFICATION	1.7775727978878337E-6	IMPLEMENTATION
this is a collection initializer so we must create a collection for each of the passed-in keys to account for the possibility that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999999456226044	WITHOUT_CLASSIFICATION	5.4377395513524975E-8	IMPLEMENTATION
grab its state from the resultset and keep it in the session (but don't yet initialize the object itself) note that we acquire lockmode.read even if it was not requested	WITHOUT_CLASSIFICATION	0.9999999795376748	WITHOUT_CLASSIFICATION	2.0462325169595166E-8	IMPLEMENTATION
a many-to-many decrement currentdepth here to allow join across the association table without exceeding max_fetch_depth (i.e. the "currentdepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9997776364987756	WITHOUT_CLASSIFICATION	2.223635012243472E-4	IMPLEMENTATION
if not a composite key use "foo in (? ? ?)" for batching if no batch and not a composite key use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999647023669072	WITHOUT_CLASSIFICATION	3.529763309285096E-5	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9999619227758307	WITHOUT_CLASSIFICATION	3.8077224169225413E-5	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999933193957269	WITHOUT_CLASSIFICATION	6.680604273151926E-6	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999933193957269	WITHOUT_CLASSIFICATION	6.680604273151926E-6	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.999986427427061	WITHOUT_CLASSIFICATION	1.3572572938984336E-5	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999998722759948	WITHOUT_CLASSIFICATION	1.2772400514905194E-7	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999915901978591	WITHOUT_CLASSIFICATION	8.409802140937066E-6	IMPLEMENTATION
translates an ast join type (i.e. the token type) into a joinfragment.xxx join type. @param astjointype the ast join type (from hqlsqltokentypes or sqltokentypes) @return a joinfragment.xxx join type. @see joinfragment @see sqltokentypes	WITHOUT_CLASSIFICATION	0.9999973815720393	WITHOUT_CLASSIFICATION	2.618427960743201E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.999977527394885	WITHOUT_CLASSIFICATION	2.2472605114975415E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.999977527394885	WITHOUT_CLASSIFICATION	2.2472605114975415E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999702264004008	WITHOUT_CLASSIFICATION	2.977359959914965E-5	IMPLEMENTATION
public list getcollectionaliases() { return collectionaliases } public list getcollectionowners() { return collectionowners } public list getcollectionowneraliases() { return collectionowneraliases } public list getcollectionpersisters() { return collectionpersisters } public map getalias2persister() { return alias2persister } public boolean iscollectioninitializer() { return iscollectioninitializer } public list getpersisters() { return persisters } public map getalias2owneralias() { return alias2owneralias } public list getscalartypes() { return scalartypes } public list getscalarcolumnaliases() { return scalarcolumnaliases } public list getpropertyresults() { return propertyresults } public list getcollectionpropertyresults() { return collectionresults } public map getalias2return() { return alias2return }	WITHOUT_CLASSIFICATION	0.999998720729616	WITHOUT_CLASSIFICATION	1.2792703840254103E-6	IMPLEMENTATION
sqlqueryparser parser = new sqlqueryparser( sqlquery processor.getalias2persister() processor.getalias2return() aliases collaliases collpersisters suffixes collsuffixes ) sql = parser.process() namedparameterbindpoints = parser.getnamedparameters()	WITHOUT_CLASSIFICATION	0.9999219659111718	WITHOUT_CLASSIFICATION	7.803408882820088E-5	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998950815351124	WITHOUT_CLASSIFICATION	1.0491846488753708E-4	IMPLEMENTATION
sqlaliassuffixes[i] = element.getcolumnaliassuffix()	WITHOUT_CLASSIFICATION	0.9999242762711081	WITHOUT_CLASSIFICATION	7.572372889177453E-5	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9995296129351919	WITHOUT_CLASSIFICATION	4.703870648081499E-4	IMPLEMENTATION
at this point we have (drivingsqlalias) the sql alias of the driving table corresponding to the given user alias. however the driving table is not (necessarily) the table against which we want to apply locks. mainly the exception case here is joined-subclass hierarchies where we instead want to apply the lock against the root table (for all other strategies it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9987641750462847	WITHOUT_CLASSIFICATION	0.0012358249537153347	IMPLEMENTATION
the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999804447266518	WITHOUT_CLASSIFICATION	1.9555273348237476E-5	IMPLEMENTATION
we have a mapped identifier property and the root of the incoming property path matched that identifier property	WITHOUT_CLASSIFICATION	0.9999310278335705	WITHOUT_CLASSIFICATION	6.897216642952828E-5	IMPLEMENTATION
we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999745612532116	WITHOUT_CLASSIFICATION	2.5438746788478427E-5	IMPLEMENTATION
both many-to-one and one-to-one are represented as a property. entitypersister is relying on this value to determine "lazy fetch groups" in terms of field-level interception. so we need to make sure that we return true here for the case of many-to-one and one-to-one with lazy="no-proxy" impl note - lazy="no-proxy" currently forces both lazy and unwrap to be set to true. the other case we are extremely interested in here is that of lazy="proxy" where lazy is set to true but unwrap is set to false. thus we use both here under the assumption that this return is really only ever used during persister construction to determine the lazy property/field fetch groupings. if that assertion changes then this check needs to change as well. partially this is an issue with the overloading of the term "lazy" here	WITHOUT_CLASSIFICATION	0.9999999941523385	WITHOUT_CLASSIFICATION	5.847661526371861E-9	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997275402558	WITHOUT_CLASSIFICATION	2.7245974418906635E-7	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999997275402558	WITHOUT_CLASSIFICATION	2.7245974418906635E-7	IMPLEMENTATION
roottablename = persistentclass.getroottable().getqualifiedname( factory.getdialect() factory.getdefaultcatalog() factory.getdefaultschema() )	WITHOUT_CLASSIFICATION	0.9999219511739476	WITHOUT_CLASSIFICATION	7.804882605243697E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999960290118678	WITHOUT_CLASSIFICATION	3.970988132158076E-6	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999948510091597	WITHOUT_CLASSIFICATION	5.148990840298989E-6	IMPLEMENTATION
protected void initpropertypaths(final string pathfinal type typefinal string[] columnsfinal string[] formulatemplatesfinal mapping factory)throws mappingexception {addformulapropertypath(path type formulatemplates)initpropertypaths(path type columns formulatemplates factory)}	WITHOUT_CLASSIFICATION	0.9999988952810254	WITHOUT_CLASSIFICATION	1.1047189747180802E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
custom sql (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999966969854418	WITHOUT_CLASSIFICATION	3.303014558226427E-6	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999926215745067	WITHOUT_CLASSIFICATION	7.378425493183061E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
aliases for identifier ( alias.id ) skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.999998900605376	WITHOUT_CLASSIFICATION	1.0993946240024708E-6	IMPLEMENTATION
decide which resultset to get the property value from	WITHOUT_CLASSIFICATION	0.9999986149009596	WITHOUT_CLASSIFICATION	1.3850990402896922E-6	IMPLEMENTATION
note it is conceptually possible that a usertype could map null to a non-null value so the following is arguable	WITHOUT_CLASSIFICATION	0.9999669970814089	WITHOUT_CLASSIFICATION	3.300291859116319E-5	IMPLEMENTATION
the contract of entitytuplizer.determineconcretesubclassentityname says that returning null is an indication that the specified entity-name (this.getentityname) should be used.	WITHOUT_CLASSIFICATION	0.9999641382364634	WITHOUT_CLASSIFICATION	3.586176353666146E-5	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9999890899776666	WITHOUT_CLASSIFICATION	1.091002233351085E-5	IMPLEMENTATION
cache these since they are stateless this one could even be static	WITHOUT_CLASSIFICATION	0.9999779156301969	WITHOUT_CLASSIFICATION	2.2084369803173598E-5	IMPLEMENTATION
"as" is not in keywords	WITHOUT_CLASSIFICATION	0.9999155465712903	WITHOUT_CLASSIFICATION	8.445342870958332E-5	IMPLEMENTATION
--commented out by inspection (12/4/04 910 am) public abstract void addcondition(string alias string[] columns string condition)	WITHOUT_CLASSIFICATION	0.9999999645671369	WITHOUT_CLASSIFICATION	3.5432863192991226E-8	IMPLEMENTATION
use the id column alias	WITHOUT_CLASSIFICATION	0.9996554775431	WITHOUT_CLASSIFICATION	3.445224568999525E-4	IMPLEMENTATION
private list aliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999943713810787	WITHOUT_CLASSIFICATION	5.6286189212666325E-6	IMPLEMENTATION
columns.add(columnname) aliases.add(tablealias)	WITHOUT_CLASSIFICATION	0.9999733658186652	WITHOUT_CLASSIFICATION	2.663418133471316E-5	IMPLEMENTATION
where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999145712436807	WITHOUT_CLASSIFICATION	8.542875631935294E-5	IMPLEMENTATION
revert to traditional hibernate behavior of setting initialpoolsize to minpoolsize unless otherwise specified with a c3p0.-style parameter.	WITHOUT_CLASSIFICATION	0.999970335968877	WITHOUT_CLASSIFICATION	2.9664031123086722E-5	IMPLEMENTATION
arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.999853285925363	WITHOUT_CLASSIFICATION	1.4671407463692963E-4	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9987591112423702	WITHOUT_CLASSIFICATION	0.001240888757629904	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9987591112423702	WITHOUT_CLASSIFICATION	0.001240888757629904	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999992040967615	WITHOUT_CLASSIFICATION	7.959032385348221E-7	IMPLEMENTATION
essentially 1) if we have a local (hibernate) transaction in progress and it already has the usertransaction cached use that usertransaction to determine the status. 2) if a transaction manager has been located use that transaction manager to determine the status. 3) finally as the last resort try to lookup the usertransaction via jndi and use that to determine the status.	WITHOUT_CLASSIFICATION	0.9999999421013799	WITHOUT_CLASSIFICATION	5.789862022706037E-8	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999179931443145	WITHOUT_CLASSIFICATION	8.200685568552572E-5	IMPLEMENTATION
swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999693864345098	WITHOUT_CLASSIFICATION	3.06135654900588E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999721710485542	WITHOUT_CLASSIFICATION	2.782895144583499E-5	IMPLEMENTATION
we need to dirty check many-to-ones with not-found="ignore" in order to update the cache (not the database) since in this case a null entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999901346112017	WITHOUT_CLASSIFICATION	9.865388798245448E-6	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999899409464887	WITHOUT_CLASSIFICATION	1.0059053511227596E-5	IMPLEMENTATION
regions can get instantiated in the course of normal work (e.g. a named query region will be created the first time the query is executed) so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999999999783783	WITHOUT_CLASSIFICATION	2.1621650241327874E-11	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9999363556828558	WITHOUT_CLASSIFICATION	6.364431714430977E-5	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999946185946577	WITHOUT_CLASSIFICATION	5.381405342377245E-6	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999751482738548	WITHOUT_CLASSIFICATION	2.485172614513574E-5	IMPLEMENTATION
note this is being used from the process of shutting down a sessionfactory. specific things to consider (1) this clearing of the region should not propagate to other nodes on the cluster (if any) this is the cache-mode-local option bit (2) really just trying a best effort to cleanup after ourselves lock failures etc are not critical here this is the fail-silently option bit	WITHOUT_CLASSIFICATION	0.9968223033748138	WITHOUT_CLASSIFICATION	0.0031776966251862437	IMPLEMENTATION
need to extract the component values and check for subtype replacements	WITHOUT_CLASSIFICATION	0.9999870613554787	WITHOUT_CLASSIFICATION	1.2938644521228813E-5	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999983949269756	WITHOUT_CLASSIFICATION	1.6050730243543891E-6	IMPLEMENTATION
for now just "re-flatten" the metamodel since this is temporary stuff anyway (hhh-1907)	WITHOUT_CLASSIFICATION	0.9999998850953765	WITHOUT_CLASSIFICATION	1.1490462350382211E-7	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9999622365218116	WITHOUT_CLASSIFICATION	3.7763478188326065E-5	IMPLEMENTATION
this solution would allow us to eliminate the owner arg to disassemble() but what if the collection was null and then later had elements added? seems unsafe session.getpersistencecontext().getcollectionentry( (persistentcollection) value ).getkey()	WITHOUT_CLASSIFICATION	0.9999649438472464	WITHOUT_CLASSIFICATION	3.505615275359393E-5	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9999513066350055	WITHOUT_CLASSIFICATION	4.869336499441645E-5	IMPLEMENTATION
some collections are not lazy	WITHOUT_CLASSIFICATION	0.9883483762038702	WITHOUT_CLASSIFICATION	0.0116516237961299	IMPLEMENTATION
here we don't want to suspend the tx. if we do 1) we might be caching query results that reflect uncommitted changes. no tx == no wl on cache node so other threads can prematurely see those query results 2) no tx == immediate replication. more overhead plus we spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9983392940381652	WITHOUT_CLASSIFICATION	0.0016607059618347292	IMPLEMENTATION
return the (fully resolved) identifier value but do not resolve to the actual referenced entity instance note the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999982018539386	WITHOUT_CLASSIFICATION	1.7981460613728704E-6	IMPLEMENTATION
add a zero (or quite low) timeout option so we don't block. ignore any timeoutexception. basically we forego caching the query result in order to avoid blocking. reads are done with suspended tx so they should not hold the lock for long. not caching the query result is ok since any subsequent read will just see the old result with its out-of-date timestamp that result will be discarded and the db query performed again.	WITHOUT_CLASSIFICATION	0.999999999999053	WITHOUT_CLASSIFICATION	9.470337620818596E-13	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999713151469286	WITHOUT_CLASSIFICATION	2.868485307128507E-5	IMPLEMENTATION
we have the jbcwritemutex so no other local thread will be trying to write this key. it's possible here some remote thread has come in and changed the values again but since we are reading the values to write to jbc right now we know we are writing the latest values i.e. we don't assume that what we cached in entry.update() above is what we should write to jbc now. our write could be redundant i.e. we are writing what some remote thread just came in an wrote. there is a chance that yet another remote thread will update us and we'll then overwrite that later data in jbc. but all remote nodes will ignore that change in their localcache the only place it will live will be in jbc where it can only effect the initial state transfer values on newly joined nodes (i.e. populatelocalcache()).	WITHOUT_CLASSIFICATION	0.9938824581720411	WITHOUT_CLASSIFICATION	0.006117541827958953	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999973302186096	WITHOUT_CLASSIFICATION	2.6697813904915725E-6	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999973302186096	WITHOUT_CLASSIFICATION	2.6697813904915725E-6	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9998231003766135	WITHOUT_CLASSIFICATION	1.768996233865054E-4	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9955849687555081	WITHOUT_CLASSIFICATION	0.004415031244491956	IMPLEMENTATION
we need to obtain the lock before any actions are executed since this may be an inverse="true" bidirectional association and it is one of the earlier entity actions which actually updates the database (this action is resposible for second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999924957828819	WITHOUT_CLASSIFICATION	7.504217118168914E-6	IMPLEMENTATION
postdelete after actually deleting a row record the fact that the instance no longer exists on the database (needed for identity-column key generation) and remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999993638816562	WITHOUT_CLASSIFICATION	6.361183437064968E-7	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9994734776386032	WITHOUT_CLASSIFICATION	5.265223613968924E-4	IMPLEMENTATION
