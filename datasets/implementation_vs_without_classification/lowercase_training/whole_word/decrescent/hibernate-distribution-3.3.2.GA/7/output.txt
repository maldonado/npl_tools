todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.8345629358596057	IMPLEMENTATION	0.1654370641403942	WITHOUT_CLASSIFICATION
todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.8345629358596057	IMPLEMENTATION	0.1654370641403942	WITHOUT_CLASSIFICATION
todo return new lock(ts)	IMPLEMENTATION	0.7626093878331635	WITHOUT_CLASSIFICATION	0.2373906121668366	IMPLEMENTATION
todo if lock.gettimestamp().equals(ts)	IMPLEMENTATION	0.8886491154692073	WITHOUT_CLASSIFICATION	0.11135088453079266	IMPLEMENTATION
todo mappings.getlogicaltablename(ownertable)	IMPLEMENTATION	0.6074258109349762	WITHOUT_CLASSIFICATION	0.3925741890650238	IMPLEMENTATION
todo handle typedefs	IMPLEMENTATION	0.8509206280720064	IMPLEMENTATION	0.1490793719279936	WITHOUT_CLASSIFICATION
todo check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.9672636870498018	WITHOUT_CLASSIFICATION	0.032736312950198306	IMPLEMENTATION
todo bindpropertyresults(alias returnelem)	IMPLEMENTATION	0.6074258109349762	WITHOUT_CLASSIFICATION	0.3925741890650238	IMPLEMENTATION
todo validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.645765733584444	WITHOUT_CLASSIFICATION	0.3542342664155561	IMPLEMENTATION
todo native ids	IMPLEMENTATION	0.6586892832640107	WITHOUT_CLASSIFICATION	0.3413107167359893	IMPLEMENTATION
todo if we are using identity columns fetch the identifier	IMPLEMENTATION	0.9984823452155408	WITHOUT_CLASSIFICATION	0.0015176547844592335	IMPLEMENTATION
todo handle property-ref	IMPLEMENTATION	0.7857236000164441	IMPLEMENTATION	0.21427639998355577	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.9039140235666071	IMPLEMENTATION	0.09608597643339296	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.9039140235666071	IMPLEMENTATION	0.09608597643339296	WITHOUT_CLASSIFICATION
todo check if mimer sql cannot handle the way db2 does	IMPLEMENTATION	0.9947947944325048	WITHOUT_CLASSIFICATION	0.0052052055674951464	IMPLEMENTATION
todo restrict violation	IMPLEMENTATION	0.7799309484185488	WITHOUT_CLASSIFICATION	0.22006905158145107	IMPLEMENTATION
todo lowercasing done here. was done "at random" before maybe not needed at all ?	IMPLEMENTATION	0.9999992566221568	IMPLEMENTATION	7.43377843145152E-7	WITHOUT_CLASSIFICATION
todo tolowercase was not done before. only used in template.	IMPLEMENTATION	0.8279987911827015	WITHOUT_CLASSIFICATION	0.17200120881729855	IMPLEMENTATION
add an entry for this type of entity. we can be assured that all referenced entities have already been processed so specify that this entity is with the latest batch. doing the batch number before adding the name to the list is a faster way to get an accurate number.	IMPLEMENTATION	0.9999983706471157	WITHOUT_CLASSIFICATION	1.6293528842865055E-6	IMPLEMENTATION
todo avoid this for non-new instances where mightbedirty==false	IMPLEMENTATION	0.6293055522145717	WITHOUT_CLASSIFICATION	0.37069444778542815	IMPLEMENTATION
todo optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.7356271108801764	IMPLEMENTATION	0.26437288911982354	WITHOUT_CLASSIFICATION
we could move this inside if we wanted to tolerate collection initializations during collection dirty checking	IMPLEMENTATION	0.9992258544791649	WITHOUT_CLASSIFICATION	7.741455208350735E-4	IMPLEMENTATION
todo assertion only could be optimized away	IMPLEMENTATION	0.5182272526295411	IMPLEMENTATION	0.4817727473704591	WITHOUT_CLASSIFICATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.88011063695694	IMPLEMENTATION	0.11988936304305987	WITHOUT_CLASSIFICATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.88011063695694	IMPLEMENTATION	0.11988936304305987	WITHOUT_CLASSIFICATION
todo why aren't these the same?	IMPLEMENTATION	0.8869559519817265	IMPLEMENTATION	0.11304404801827353	WITHOUT_CLASSIFICATION
todo always true for now but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.8709836943857434	WITHOUT_CLASSIFICATION	0.12901630561425653	IMPLEMENTATION
todo or should we return 'containstablealias'??	IMPLEMENTATION	0.5601859013301997	WITHOUT_CLASSIFICATION	0.43981409866980037	IMPLEMENTATION
todo arithmetic expressions multiple new foo()	IMPLEMENTATION	0.6980242270436205	WITHOUT_CLASSIFICATION	0.30197577295637934	IMPLEMENTATION
todo for some dialects it would be appropriate to add the renderorderbypropertiesselect() to other select strings	IMPLEMENTATION	0.991419447004764	IMPLEMENTATION	0.008580552995235899	WITHOUT_CLASSIFICATION
todo cache the persister this shows up in yourkit	IMPLEMENTATION	0.8183918897227771	IMPLEMENTATION	0.1816081102772229	WITHOUT_CLASSIFICATION
todo theoretically non-threadsafe	IMPLEMENTATION	0.6074258109349762	WITHOUT_CLASSIFICATION	0.3925741890650238	IMPLEMENTATION
todo look at optimizing these	IMPLEMENTATION	0.6399351236451916	WITHOUT_CLASSIFICATION	0.36006487635480844	IMPLEMENTATION
todo maybe call it getrowselection() ?	IMPLEMENTATION	0.9551573569675906	IMPLEMENTATION	0.0448426430324093	WITHOUT_CLASSIFICATION
todo make this handle multiple collection roles!	IMPLEMENTATION	0.9971237890112926	IMPLEMENTATION	0.002876210988707388	WITHOUT_CLASSIFICATION
todo can we limit stored procedures ?!	IMPLEMENTATION	0.8320707690964502	WITHOUT_CLASSIFICATION	0.16792923090354986	IMPLEMENTATION
todo not visible to the user!	IMPLEMENTATION	0.8813691240374625	IMPLEMENTATION	0.11863087596253746	WITHOUT_CLASSIFICATION
todo unnecessary for databases with ansi-style joins	IMPLEMENTATION	0.69199552023937	WITHOUT_CLASSIFICATION	0.3080044797606299	IMPLEMENTATION
todo use these in methods above	IMPLEMENTATION	0.8173232129123119	WITHOUT_CLASSIFICATION	0.1826767870876882	IMPLEMENTATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.9241151064783923	IMPLEMENTATION	0.07588489352160763	WITHOUT_CLASSIFICATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.9241151064783923	IMPLEMENTATION	0.07588489352160763	WITHOUT_CLASSIFICATION
todo temporary initial step towards hhh-1907	IMPLEMENTATION	0.9482330850129147	WITHOUT_CLASSIFICATION	0.05176691498708535	IMPLEMENTATION
todo remove this once componentmetamodel is complete and merged	IMPLEMENTATION	0.5948227509234107	WITHOUT_CLASSIFICATION	0.4051772490765892	IMPLEMENTATION
todo handle supportsnotnullunique=false but such a case does not exist in the wild so far	IMPLEMENTATION	0.9963421117345549	WITHOUT_CLASSIFICATION	0.003657888265444955	IMPLEMENTATION
todo still need to make collectionpersisters entitymode-aware	IMPLEMENTATION	0.9976508224043662	IMPLEMENTATION	0.0023491775956338136	WITHOUT_CLASSIFICATION
todo add owner argument!!	IMPLEMENTATION	0.7053168421166566	WITHOUT_CLASSIFICATION	0.2946831578833434	IMPLEMENTATION
todo formulas ?	IMPLEMENTATION	0.5243387260740899	WITHOUT_CLASSIFICATION	0.47566127392590996	IMPLEMENTATION
todo include the rowids!!!!	IMPLEMENTATION	0.9391975194088358	WITHOUT_CLASSIFICATION	0.0608024805911643	IMPLEMENTATION
todo cache this sql	IMPLEMENTATION	0.540423656144797	WITHOUT_CLASSIFICATION	0.45957634385520296	IMPLEMENTATION
todo create uk loaders for component properties	IMPLEMENTATION	0.9454195428196485	WITHOUT_CLASSIFICATION	0.05458045718035154	IMPLEMENTATION
todo cache this in an instvar	IMPLEMENTATION	0.9266999290379885	WITHOUT_CLASSIFICATION	0.07330007096201152	IMPLEMENTATION
/ todo look at perhaps caching this	IMPLEMENTATION	0.908513458898626	IMPLEMENTATION	0.09148654110137405	WITHOUT_CLASSIFICATION
todo eventually put this back in once we think all is fixed object otheralias = columnsunique.put(qualifiedcolumn columnalias)	IMPLEMENTATION	0.9219527066719574	WITHOUT_CLASSIFICATION	0.07804729332804258	IMPLEMENTATION
todo if we support multiple fetch groups we would need to clone the set of lazy properties!	IMPLEMENTATION	0.8662481072262753	IMPLEMENTATION	0.1337518927737247	WITHOUT_CLASSIFICATION
todo proxies!	IMPLEMENTATION	0.5749724394894905	WITHOUT_CLASSIFICATION	0.42502756051050955	IMPLEMENTATION
todo terrible implementation!	IMPLEMENTATION	0.6780161634955364	WITHOUT_CLASSIFICATION	0.32198383650446366	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.5749724394894905	WITHOUT_CLASSIFICATION	0.42502756051050955	IMPLEMENTATION
todo i don't really like this implementation it would be better if this was handled by searchfordirtycollections()	IMPLEMENTATION	0.9983468388954508	IMPLEMENTATION	0.0016531611045492586	WITHOUT_CLASSIFICATION
todo check if key contains the owner id	IMPLEMENTATION	0.5123419220787768	IMPLEMENTATION	0.48765807792122334	WITHOUT_CLASSIFICATION
todo proxies!	IMPLEMENTATION	0.5749724394894905	WITHOUT_CLASSIFICATION	0.42502756051050955	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9999577606950019	WITHOUT_CLASSIFICATION	4.2239304998104606E-5	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9999577606950019	WITHOUT_CLASSIFICATION	4.2239304998104606E-5	IMPLEMENTATION
if we are still not resolved we might represent a constant. needed to add this here because the allowance of naked-prop-refs in the grammar collides with the definition of literals/constants ("nondeterminism"). todo cleanup the grammar so that "processconstants" is always just handled from here	IMPLEMENTATION	0.9999900379069433	IMPLEMENTATION	9.96209305675383E-6	WITHOUT_CLASSIFICATION
todo add referencedclass to disambiguate to fks on the same columns pointing to different tables	IMPLEMENTATION	0.5136556108315754	IMPLEMENTATION	0.4863443891684246	WITHOUT_CLASSIFICATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999987974796916	WITHOUT_CLASSIFICATION	1.2025203085406435E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999869784435809	WITHOUT_CLASSIFICATION	1.3021556419178834E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999869784435809	WITHOUT_CLASSIFICATION	1.3021556419178834E-5	IMPLEMENTATION
| this | bean | args | raw bean |	WITHOUT_CLASSIFICATION	0.9999394168352143	WITHOUT_CLASSIFICATION	6.058316478573332E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
astore 4 store the raw bean	WITHOUT_CLASSIFICATION	0.99996878376367	WITHOUT_CLASSIFICATION	3.121623632989206E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999818944181674	WITHOUT_CLASSIFICATION	1.810558183249336E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999818944181674	WITHOUT_CLASSIFICATION	1.810558183249336E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999948727899565	WITHOUT_CLASSIFICATION	5.127210043607379E-6	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999664164199068	WITHOUT_CLASSIFICATION	3.358358009330261E-5	IMPLEMENTATION
putfield new value of the field	WITHOUT_CLASSIFICATION	0.9999885149835057	WITHOUT_CLASSIFICATION	1.1485016494314284E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999926968774699	WITHOUT_CLASSIFICATION	7.303122530041451E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999994191142677	WITHOUT_CLASSIFICATION	5.8088573222739E-7	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999994191142677	WITHOUT_CLASSIFICATION	5.8088573222739E-7	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999758002599202	WITHOUT_CLASSIFICATION	2.4199740079789908E-5	IMPLEMENTATION
just decrement the lock don't recache (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9991659335935861	WITHOUT_CLASSIFICATION	8.34066406414004E-4	IMPLEMENTATION
decode row selection	WITHOUT_CLASSIFICATION	0.9999873127909543	WITHOUT_CLASSIFICATION	1.2687209045778145E-5	IMPLEMENTATION
disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.999998038800236	WITHOUT_CLASSIFICATION	1.9611997639796767E-6	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999987664629512	WITHOUT_CLASSIFICATION	1.2335370488242472E-6	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.99992444110464	WITHOUT_CLASSIFICATION	7.555889536008479E-5	IMPLEMENTATION
row id	WITHOUT_CLASSIFICATION	0.9999288281293124	WITHOUT_CLASSIFICATION	7.117187068765156E-5	IMPLEMENTATION
composite-id	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999597116381514	WITHOUT_CLASSIFICATION	4.028836184851171E-5	IMPLEMENTATION
property prop = new property() prop.setname("id") prop.setpropertyaccessorname("embedded") prop.setvalue(id) entity.setidentifierproperty(prop)	WITHOUT_CLASSIFICATION	0.9999581143640363	WITHOUT_CLASSIFICATION	4.188563596366357E-5	IMPLEMENTATION
dynamic insert	WITHOUT_CLASSIFICATION	0.9999874479803338	WITHOUT_CLASSIFICATION	1.2552019666298933E-5	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999766233819719	WITHOUT_CLASSIFICATION	2.337661802813042E-5	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999983222064851	WITHOUT_CLASSIFICATION	1.6777935148092608E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999712422110779	WITHOUT_CLASSIFICATION	2.875778892205752E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999712422110779	WITHOUT_CLASSIFICATION	2.875778892205752E-5	IMPLEMENTATION
generated properties can never be insertable	WITHOUT_CLASSIFICATION	0.9995730339347618	WITHOUT_CLASSIFICATION	4.2696606523816326E-4	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999894605723696	WITHOUT_CLASSIFICATION	1.0539427630310537E-5	IMPLEMENTATION
by default natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999994787584414	WITHOUT_CLASSIFICATION	5.212415586611548E-7	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999812622177635	WITHOUT_CLASSIFICATION	1.8737782236513394E-5	IMPLEMENTATION
we found some extends attributes referencing entities which were not already processed. here we need to locate all entity-names and class-names contained in this document itself making sure that these get removed from the extendz list such that only extends names which require us to delay processing (i.e. external to this document and not yet processed) are contained in the returned result	WITHOUT_CLASSIFICATION	0.981705515796107	WITHOUT_CLASSIFICATION	0.018294484203892975	IMPLEMENTATION
build a resultsetmappingdefinition given a containing element for the "return-xxx" elements @param resultsetelem the element containing the return definitions. @param path no clue @param mappings the current processing state. @return the description of the mappings	WITHOUT_CLASSIFICATION	0.9999285535067542	WITHOUT_CLASSIFICATION	7.144649324585626E-5	IMPLEMENTATION
private boolean showsql private boolean formatsql	WITHOUT_CLASSIFICATION	0.999996720472246	WITHOUT_CLASSIFICATION	3.2795277539951353E-6	IMPLEMENTATION
public boolean isshowsqlenabled() { return showsql } public boolean isformatsqlenabled() { return formatsql }	WITHOUT_CLASSIFICATION	0.9999905328362289	WITHOUT_CLASSIFICATION	9.467163771045537E-6	IMPLEMENTATION
set a custom entity resolver. this entity resolver must be set before addxxx(misc) call. default value is {@link org.hibernate.util.dtdentityresolver} @param entityresolver entity resolver to use	WITHOUT_CLASSIFICATION	0.9999950830957637	WITHOUT_CLASSIFICATION	4.916904236267733E-6	IMPLEMENTATION
final list extendsqueue	WITHOUT_CLASSIFICATION	0.9999953945683563	WITHOUT_CLASSIFICATION	4.605431643689199E-6	IMPLEMENTATION
if close() is called guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999996508856727	WITHOUT_CLASSIFICATION	3.491143272319325E-7	IMPLEMENTATION
if a threadlocalsessioncontext-bound session happens to get serialized to be completely correct we need to make sure that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999804973609321	WITHOUT_CLASSIFICATION	1.950263906783651E-5	IMPLEMENTATION
on the inverse it makes sense that if a threadlocalsessioncontext- bound session then gets deserialized to go ahead and re-bind it to the threadlocalsessioncontext session map.	WITHOUT_CLASSIFICATION	0.9999965358006058	WITHOUT_CLASSIFICATION	3.4641993942190477E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999987095343091	WITHOUT_CLASSIFICATION	1.2904656908507942E-6	IMPLEMENTATION
60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999869026589278	WITHOUT_CLASSIFICATION	1.309734107222527E-5	IMPLEMENTATION
optimisticcache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999655718959796	WITHOUT_CLASSIFICATION	3.4428104020508654E-5	IMPLEMENTATION
cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999467070480924	WITHOUT_CLASSIFICATION	5.329295190752387E-5	IMPLEMENTATION
option.setdataversion( nonlockingdataversion.instance )	WITHOUT_CLASSIFICATION	0.9999480037932571	WITHOUT_CLASSIFICATION	5.199620674294662E-5	IMPLEMENTATION
do the put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9988714643200683	WITHOUT_CLASSIFICATION	0.001128535679931672	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
tree cache in optimistic mode seems to have as very difficult time with remove calls on non-existent nodes (npes)	WITHOUT_CLASSIFICATION	0.9998775733958163	WITHOUT_CLASSIFICATION	1.22426604183728E-4	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.999986086087407	WITHOUT_CLASSIFICATION	1.3913912593094884E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.999986086087407	WITHOUT_CLASSIFICATION	1.3913912593094884E-5	IMPLEMENTATION
do the failfast put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9988714643200683	WITHOUT_CLASSIFICATION	0.001128535679931672	IMPLEMENTATION
note evict() operates locally only (i.e. does not propogate to any other nodes in the potential cluster). this is exactly what is needed when we destroy() here destroy() is used as part of the process of shutting down a sessionfactory thus these removals should not be propogated	WITHOUT_CLASSIFICATION	0.8845957343211581	WITHOUT_CLASSIFICATION	0.11540426567884186	IMPLEMENTATION
protected regionrootlistener listener	WITHOUT_CLASSIFICATION	0.9999196592056899	WITHOUT_CLASSIFICATION	8.034079431013482E-5	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999550024267138	WITHOUT_CLASSIFICATION	4.499757328622468E-5	IMPLEMENTATION
if we've been blocking for the mutex perhaps another thread has already reestablished the root. in case the node was reestablised via replication confirm it's marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999999433393053	WITHOUT_CLASSIFICATION	5.6660694627398894E-8	IMPLEMENTATION
for pessimistic locking we just want to toss out our ref to any old invalid root node and get the latest (may be null)	WITHOUT_CLASSIFICATION	0.9999996522185599	WITHOUT_CLASSIFICATION	3.4778144015535944E-7	IMPLEMENTATION
the rest only matters for optimistic locking where we need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9963415020104761	WITHOUT_CLASSIFICATION	0.0036584979895238753	IMPLEMENTATION
don't hold a transactional lock for this	WITHOUT_CLASSIFICATION	0.999955663080205	WITHOUT_CLASSIFICATION	4.4336919795005606E-5	IMPLEMENTATION
make sure the root node for the region exists and has a dataversion that never complains	WITHOUT_CLASSIFICATION	0.999524526943271	WITHOUT_CLASSIFICATION	4.754730567289619E-4	IMPLEMENTATION
never evict this node	WITHOUT_CLASSIFICATION	0.999076396782676	WITHOUT_CLASSIFICATION	9.236032173239174E-4	IMPLEMENTATION
fix up the resident flag	WITHOUT_CLASSIFICATION	0.9808091309488752	WITHOUT_CLASSIFICATION	0.019190869051124722	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.999986086087407	WITHOUT_CLASSIFICATION	1.3913912593094884E-5	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999905939633712	WITHOUT_CLASSIFICATION	9.406036628836421E-6	IMPLEMENTATION
no-op. we don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9971446096690498	WITHOUT_CLASSIFICATION	0.002855390330950214	IMPLEMENTATION
this should only be possible if the caches are constructor injected	WITHOUT_CLASSIFICATION	0.9999919478368675	WITHOUT_CLASSIFICATION	8.052163132511706E-6	IMPLEMENTATION
we only build caches if none were passed in. passing in caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999990376919489	WITHOUT_CLASSIFICATION	9.623080511103423E-7	IMPLEMENTATION
set up the cache factory	WITHOUT_CLASSIFICATION	0.9999854168941698	WITHOUT_CLASSIFICATION	1.4583105830191216E-5	IMPLEMENTATION
see if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999997090177694	WITHOUT_CLASSIFICATION	2.909822307231012E-7	IMPLEMENTATION
default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999995404308052	WITHOUT_CLASSIFICATION	4.5956919479308936E-7	IMPLEMENTATION
default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999997706541786	WITHOUT_CLASSIFICATION	2.293458213377587E-7	IMPLEMENTATION
for timestamps we default to a separate config	WITHOUT_CLASSIFICATION	0.9999941270221371	WITHOUT_CLASSIFICATION	5.87297786295963E-6	IMPLEMENTATION
we can't change the tm on a running cache just check if the cache has no tm and we're ok with that	WITHOUT_CLASSIFICATION	0.9999989895772324	WITHOUT_CLASSIFICATION	1.0104227675849415E-6	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.999943138090811	WITHOUT_CLASSIFICATION	5.686190918889886E-5	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9999022976538422	WITHOUT_CLASSIFICATION	9.770234615776746E-5	IMPLEMENTATION
this method should be implemented assuming it's valid to do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.766716519579099	WITHOUT_CLASSIFICATION	0.23328348042090094	IMPLEMENTATION
make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9996400702590444	WITHOUT_CLASSIFICATION	3.599297409555254E-4	IMPLEMENTATION
we use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999487050287713	WITHOUT_CLASSIFICATION	5.129497122862717E-5	IMPLEMENTATION
following methods we don't delegate since they have so little logic it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.944954992056531	WITHOUT_CLASSIFICATION	0.05504500794346905	IMPLEMENTATION
if jbc is using invalidation we don't want to propagate changes. we use the timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.999990118508625	WITHOUT_CLASSIFICATION	9.88149137500562E-6	IMPLEMENTATION
we don't want to waste effort setting an option if jbc is already in local mode. if jbc is repl_(a)sync then check if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999948843544839	WITHOUT_CLASSIFICATION	5.115645516032348E-6	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents updates add a zero (or low) timeout option so we don't block waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999743866246199	WITHOUT_CLASSIFICATION	2.5613375380070734E-5	IMPLEMENTATION
double check the distributed cache	WITHOUT_CLASSIFICATION	0.999992490081061	WITHOUT_CLASSIFICATION	7.50991893907971E-6	IMPLEMENTATION
get an exclusive right to update jbc for this key from this node.	WITHOUT_CLASSIFICATION	0.9999991123802817	WITHOUT_CLASSIFICATION	8.876197183306479E-7	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9999930920033391	WITHOUT_CLASSIFICATION	6.907996660941045E-6	IMPLEMENTATION
initial load from jbc	WITHOUT_CLASSIFICATION	0.9999990899009812	WITHOUT_CLASSIFICATION	9.10099018915085E-7	IMPLEMENTATION
see if we had a 2nd invalidation from the same initial preinvalidation timestamp. if so only increment if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999999992814055	WITHOUT_CLASSIFICATION	7.185944203372978E-10	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9999930920033391	WITHOUT_CLASSIFICATION	6.907996660941045E-6	IMPLEMENTATION
if the workspace node has null as well ok if not we've been modified in a non-comparable manner which we have to treat as us being newer	WITHOUT_CLASSIFICATION	0.9999851602242955	WITHOUT_CLASSIFICATION	1.4839775704536488E-5	IMPLEMENTATION
the standard comparator types are not serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999843968853054	WITHOUT_CLASSIFICATION	1.5603114694666765E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999661216623683	WITHOUT_CLASSIFICATION	3.387833763171595E-5	IMPLEMENTATION
construct the cache	WITHOUT_CLASSIFICATION	0.9999636636338793	WITHOUT_CLASSIFICATION	3.633636612069647E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999885934934367	WITHOUT_CLASSIFICATION	1.140650656319769E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999885934934367	WITHOUT_CLASSIFICATION	1.140650656319769E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999602740113359	WITHOUT_CLASSIFICATION	3.972598866408431E-5	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for initialpoolsize which hibernate sensibly lets default to minpoolsize but we'll let users override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999999702690211	WITHOUT_CLASSIFICATION	2.973097886717751E-8	IMPLEMENTATION
datasource unpooled = datasources.unpooleddatasource(jdbcurl props.getproperty(environment.user) props.getproperty(environment.pass))	WITHOUT_CLASSIFICATION	0.9999386273908517	WITHOUT_CLASSIFICATION	6.13726091482716E-5	IMPLEMENTATION
true if the pool is borrowed from the outside false if we used to create it	WITHOUT_CLASSIFICATION	0.9999997497598021	WITHOUT_CLASSIFICATION	2.50240197869262E-7	IMPLEMENTATION
get a connection from the pool (thru drivermanager cfr. proxool doc)	WITHOUT_CLASSIFICATION	0.9998480151569351	WITHOUT_CLASSIFICATION	1.5198484306481335E-4	IMPLEMENTATION
set the transaction isolation if defined	WITHOUT_CLASSIFICATION	0.9999987659232129	WITHOUT_CLASSIFICATION	1.234076787118237E-6	IMPLEMENTATION
toggle autocommit to false if set	WITHOUT_CLASSIFICATION	0.9999922544953413	WITHOUT_CLASSIFICATION	7.745504658600925E-6	IMPLEMENTATION
return the connection	WITHOUT_CLASSIFICATION	0.9991094725491132	WITHOUT_CLASSIFICATION	8.905274508867401E-4	IMPLEMENTATION
get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999717151559596	WITHOUT_CLASSIFICATION	2.8284844040377957E-5	IMPLEMENTATION
default the proxool alias setting	WITHOUT_CLASSIFICATION	0.9999993752215438	WITHOUT_CLASSIFICATION	6.247784562443611E-7	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999992721867756	WITHOUT_CLASSIFICATION	7.278132243823244E-7	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999992721867756	WITHOUT_CLASSIFICATION	7.278132243823244E-7	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998148538486832	WITHOUT_CLASSIFICATION	1.8514615131676976E-4	IMPLEMENTATION
set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999617828482168	WITHOUT_CLASSIFICATION	3.821715178319694E-5	IMPLEMENTATION
configured using the jaxp configurator	WITHOUT_CLASSIFICATION	0.9999921746466661	WITHOUT_CLASSIFICATION	7.825353333836867E-6	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999992721867756	WITHOUT_CLASSIFICATION	7.278132243823244E-7	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998148538486832	WITHOUT_CLASSIFICATION	1.8514615131676976E-4	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998148538486832	WITHOUT_CLASSIFICATION	1.8514615131676976E-4	IMPLEMENTATION
configured using the properties file configurator	WITHOUT_CLASSIFICATION	0.9999766586069738	WITHOUT_CLASSIFICATION	2.334139302611935E-5	IMPLEMENTATION
remember isolation level	WITHOUT_CLASSIFICATION	0.9992065883943932	WITHOUT_CLASSIFICATION	7.934116056068273E-4	IMPLEMENTATION
if the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999999961661582	WITHOUT_CLASSIFICATION	3.83384174694295E-9	IMPLEMENTATION
we have created the pool ourselves so shut it down	WITHOUT_CLASSIFICATION	0.9999969262872132	WITHOUT_CLASSIFICATION	3.0737127868609864E-6	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9992314580256655	WITHOUT_CLASSIFICATION	7.685419743344263E-4	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9992314580256655	WITHOUT_CLASSIFICATION	7.685419743344263E-4	IMPLEMENTATION
always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999954710147481	WITHOUT_CLASSIFICATION	4.528985251841039E-6	IMPLEMENTATION
public currency getcurrency(int col) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999808172286802	WITHOUT_CLASSIFICATION	1.9182771319847165E-5	IMPLEMENTATION
default is pojo	WITHOUT_CLASSIFICATION	0.9999981202295325	WITHOUT_CLASSIFICATION	1.8797704674719681E-6	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999994300193887	WITHOUT_CLASSIFICATION	5.699806113717162E-7	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999994300193887	WITHOUT_CLASSIFICATION	5.699806113717162E-7	IMPLEMENTATION
private cacheentry cacheentry	WITHOUT_CLASSIFICATION	0.9999941001526197	WITHOUT_CLASSIFICATION	5.89984738025713E-6	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9986453994549042	WITHOUT_CLASSIFICATION	0.0013546005450958461	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9999765514773196	WITHOUT_CLASSIFICATION	2.3448522680410055E-5	IMPLEMENTATION
get the updated snapshot of the entity state by cloning current state it is safe to copy in place since by this time no-one else (should have) has a reference to the array	WITHOUT_CLASSIFICATION	0.9999999980670445	WITHOUT_CLASSIFICATION	1.932955463139449E-9	IMPLEMENTATION
this entity defines proeprty generation so process those generated values	WITHOUT_CLASSIFICATION	0.99999908736343	WITHOUT_CLASSIFICATION	9.126365698967121E-7	IMPLEMENTATION
have the entity entry perform post-update processing passing it the update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.999928828380358	WITHOUT_CLASSIFICATION	7.117161964194144E-5	IMPLEMENTATION
!persister.iscacheinvalidationrequired()	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9997765296083035	WITHOUT_CLASSIFICATION	2.2347039169646582E-4	IMPLEMENTATION
sort first by role name	WITHOUT_CLASSIFICATION	0.9999799947586773	WITHOUT_CLASSIFICATION	2.0005241322705236E-5	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9999765514773196	WITHOUT_CLASSIFICATION	2.3448522680410055E-5	IMPLEMENTATION
then by fk	WITHOUT_CLASSIFICATION	0.9999948262879752	WITHOUT_CLASSIFICATION	5.173712024778902E-6	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.999983813749144	WITHOUT_CLASSIFICATION	1.618625085603268E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.999983813749144	WITHOUT_CLASSIFICATION	1.618625085603268E-5	IMPLEMENTATION
an existing collection that was either non-empty or uninitialized is replaced by null or a different collection (if the collection is uninitialized hibernate has no way of knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999999371697053	WITHOUT_CLASSIFICATION	6.283029468556694E-8	IMPLEMENTATION
this method is called when a new non-null collection is persisted or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999992138064251	WITHOUT_CLASSIFICATION	7.861935749226762E-7	IMPLEMENTATION
boolean put = persister.getcache().insert(ck cacheentry)	WITHOUT_CLASSIFICATION	0.9998814246674923	WITHOUT_CLASSIFICATION	1.1857533250767536E-4	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.990938509637339	WITHOUT_CLASSIFICATION	0.009061490362661039	IMPLEMENTATION
do nothing - we only need to notify the cache	WITHOUT_CLASSIFICATION	0.9999675181144377	WITHOUT_CLASSIFICATION	3.2481885562267596E-5	IMPLEMENTATION
sort first by entity name	WITHOUT_CLASSIFICATION	0.9999805090161098	WITHOUT_CLASSIFICATION	1.9490983890181958E-5	IMPLEMENTATION
then by id	WITHOUT_CLASSIFICATION	0.9999781661501229	WITHOUT_CLASSIFICATION	2.1833849877083736E-5	IMPLEMENTATION
to be safe	WITHOUT_CLASSIFICATION	0.9999896642472195	WITHOUT_CLASSIFICATION	1.03357527805294E-5	IMPLEMENTATION
no transformations took place so handle it as we would a non-instrumented class	WITHOUT_CLASSIFICATION	0.9999505683476948	WITHOUT_CLASSIFICATION	4.943165230524511E-5	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999050671102	WITHOUT_CLASSIFICATION	9.493288977418978E-8	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999050671102	WITHOUT_CLASSIFICATION	9.493288977418978E-8	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9993104425975381	WITHOUT_CLASSIFICATION	6.8955740246186E-4	IMPLEMENTATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999987974796916	WITHOUT_CLASSIFICATION	1.2025203085406435E-6	IMPLEMENTATION
set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999967320114	WITHOUT_CLASSIFICATION	3.2679886000382753E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
invokespecial	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999869784435809	WITHOUT_CLASSIFICATION	1.3021556419178834E-5	IMPLEMENTATION
aload_1 load bean	WITHOUT_CLASSIFICATION	0.9999574415802736	WITHOUT_CLASSIFICATION	4.255841972637658E-5	IMPLEMENTATION
checkcast cast bean	WITHOUT_CLASSIFICATION	0.9999761837823762	WITHOUT_CLASSIFICATION	2.3816217623841515E-5	IMPLEMENTATION
astore_3 store bean	WITHOUT_CLASSIFICATION	0.9999031544799241	WITHOUT_CLASSIFICATION	9.684552007592899E-5	IMPLEMENTATION
aload_2 args	WITHOUT_CLASSIFICATION	0.9999535697553477	WITHOUT_CLASSIFICATION	4.6430244652375074E-5	IMPLEMENTATION
iconst_i continue to aastore growing stack is 1	WITHOUT_CLASSIFICATION	0.9999891841504983	WITHOUT_CLASSIFICATION	1.08158495017852E-5	IMPLEMENTATION
new	WITHOUT_CLASSIFICATION	0.9999899749280605	WITHOUT_CLASSIFICATION	1.0025071939558829E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999860727164736	WITHOUT_CLASSIFICATION	1.3927283526556553E-5	IMPLEMENTATION
aload_3 load the raw bean	WITHOUT_CLASSIFICATION	0.9999829757346804	WITHOUT_CLASSIFICATION	1.7024265319669523E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
aastore args	WITHOUT_CLASSIFICATION	0.9999535697553477	WITHOUT_CLASSIFICATION	4.6430244652375074E-5	IMPLEMENTATION
| this | bean | args | i | raw bean | exception |	WITHOUT_CLASSIFICATION	0.9999148930649968	WITHOUT_CLASSIFICATION	8.510693500315945E-5	IMPLEMENTATION
required to exception table iconst_0 i	WITHOUT_CLASSIFICATION	0.9998366742675804	WITHOUT_CLASSIFICATION	1.63325732419517E-4	IMPLEMENTATION
istore_3 store i	WITHOUT_CLASSIFICATION	0.9993912376232498	WITHOUT_CLASSIFICATION	6.087623767501412E-4	IMPLEMENTATION
aload_1 load the bean	WITHOUT_CLASSIFICATION	0.9999826626313381	WITHOUT_CLASSIFICATION	1.733736866189815E-5	IMPLEMENTATION
checkcast cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999960342303703	WITHOUT_CLASSIFICATION	3.965769629656992E-6	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999818944181674	WITHOUT_CLASSIFICATION	1.810558183249336E-5	IMPLEMENTATION
start region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9999418449821745	WITHOUT_CLASSIFICATION	5.8155017825493626E-5	IMPLEMENTATION
iinc 3 1	WITHOUT_CLASSIFICATION	0.9999416919944524	WITHOUT_CLASSIFICATION	5.830800554761473E-5	IMPLEMENTATION
aload 4 load the raw bean	WITHOUT_CLASSIFICATION	0.9999862826405425	WITHOUT_CLASSIFICATION	1.3717359457612661E-5	IMPLEMENTATION
aload_2 load the args	WITHOUT_CLASSIFICATION	0.9999799945367862	WITHOUT_CLASSIFICATION	2.0005463213850976E-5	IMPLEMENTATION
iconst_i	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
aaload	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999860882035486	WITHOUT_CLASSIFICATION	1.3911796451323292E-5	IMPLEMENTATION
checkcast (case of primitive type) invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999914035793231	WITHOUT_CLASSIFICATION	8.596420676915835E-6	IMPLEMENTATION
checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999966199427252	WITHOUT_CLASSIFICATION	3.38005727488823E-6	IMPLEMENTATION
current stack len = 2	WITHOUT_CLASSIFICATION	0.9999759652838782	WITHOUT_CLASSIFICATION	2.4034716121754606E-5	IMPLEMENTATION
end region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9990371008675314	WITHOUT_CLASSIFICATION	9.628991324685697E-4	IMPLEMENTATION
register in exception table	WITHOUT_CLASSIFICATION	0.9999987082814551	WITHOUT_CLASSIFICATION	1.2917185449513406E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999869784435809	WITHOUT_CLASSIFICATION	1.3021556419178834E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999869784435809	WITHOUT_CLASSIFICATION	1.3021556419178834E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999860727164736	WITHOUT_CLASSIFICATION	1.3927283526556553E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999860882035486	WITHOUT_CLASSIFICATION	1.3911796451323292E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999948727899565	WITHOUT_CLASSIFICATION	5.127210043607379E-6	IMPLEMENTATION
astore 5 store exception	WITHOUT_CLASSIFICATION	0.999991160282492	WITHOUT_CLASSIFICATION	8.839717508002388E-6	IMPLEMENTATION
new bulkaccessorexception	WITHOUT_CLASSIFICATION	0.9999816115773004	WITHOUT_CLASSIFICATION	1.838842269957372E-5	IMPLEMENTATION
aload 5 load exception	WITHOUT_CLASSIFICATION	0.9999961156091899	WITHOUT_CLASSIFICATION	3.884390810112728E-6	IMPLEMENTATION
iload_3 i	WITHOUT_CLASSIFICATION	0.9999113721785967	WITHOUT_CLASSIFICATION	8.8627821403249E-5	IMPLEMENTATION
invokespecial bulkaccessorexception.<init>	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
athrow	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
warning classfile only	WITHOUT_CLASSIFICATION	0.9999972972493935	WITHOUT_CLASSIFICATION	2.702750606461181E-6	IMPLEMENTATION
swallow	WITHOUT_CLASSIFICATION	0.9999859005818906	WITHOUT_CLASSIFICATION	1.4099418109413946E-5	IMPLEMENTATION
local variable | this |	WITHOUT_CLASSIFICATION	0.9999284564300537	WITHOUT_CLASSIFICATION	7.15435699463387E-5	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9998939469268502	WITHOUT_CLASSIFICATION	1.0605307314980004E-4	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9998939469268502	WITHOUT_CLASSIFICATION	1.0605307314980004E-4	IMPLEMENTATION
getfield get field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9999974641108109	WITHOUT_CLASSIFICATION	2.5358891890708037E-6	IMPLEMENTATION
areturn return the value of the field	WITHOUT_CLASSIFICATION	0.9999850821294953	WITHOUT_CLASSIFICATION	1.4917870504639378E-5	IMPLEMENTATION
local variables | this | callback |	WITHOUT_CLASSIFICATION	0.9999646245802704	WITHOUT_CLASSIFICATION	3.537541972962163E-5	IMPLEMENTATION
aload_1 load callback	WITHOUT_CLASSIFICATION	0.9999451210898623	WITHOUT_CLASSIFICATION	5.487891013771945E-5	IMPLEMENTATION
putfield put field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9999495047551676	WITHOUT_CLASSIFICATION	5.04952448323327E-5	IMPLEMENTATION
case of non-static field	WITHOUT_CLASSIFICATION	0.9999931132886395	WITHOUT_CLASSIFICATION	6.886711360448011E-6	IMPLEMENTATION
getfield get each field	WITHOUT_CLASSIFICATION	0.9999945535046112	WITHOUT_CLASSIFICATION	5.446495388844481E-6	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999664164199068	WITHOUT_CLASSIFICATION	3.358358009330261E-5	IMPLEMENTATION
ifnonnull	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.9999574346600087	WITHOUT_CLASSIFICATION	4.2565339991276774E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.9999574346600087	WITHOUT_CLASSIFICATION	4.2565339991276774E-5	IMPLEMENTATION
store_1 each type	WITHOUT_CLASSIFICATION	0.9999538700989103	WITHOUT_CLASSIFICATION	4.6129901089670075E-5	IMPLEMENTATION
ldc name of the field	WITHOUT_CLASSIFICATION	0.9999947231274523	WITHOUT_CLASSIFICATION	5.2768725476762794E-6	IMPLEMENTATION
load_1 each type	WITHOUT_CLASSIFICATION	0.9999538700989103	WITHOUT_CLASSIFICATION	4.6129901089670075E-5	IMPLEMENTATION
invokeinterface invoke callback.read() each type	WITHOUT_CLASSIFICATION	0.9999615501841126	WITHOUT_CLASSIFICATION	3.844981588737855E-5	IMPLEMENTATION
int	WITHOUT_CLASSIFICATION	0.9999939200266735	WITHOUT_CLASSIFICATION	6.079973326477131E-6	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999869784435809	WITHOUT_CLASSIFICATION	1.3021556419178834E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999860727164736	WITHOUT_CLASSIFICATION	1.3927283526556553E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999860882035486	WITHOUT_CLASSIFICATION	1.3911796451323292E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999860882035486	WITHOUT_CLASSIFICATION	1.3911796451323292E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
putfield	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999869784435809	WITHOUT_CLASSIFICATION	1.3021556419178834E-5	IMPLEMENTATION
ldc field name	WITHOUT_CLASSIFICATION	0.999978567659298	WITHOUT_CLASSIFICATION	2.14323407020261E-5	IMPLEMENTATION
getfield old value of the field	WITHOUT_CLASSIFICATION	0.9999945705981899	WITHOUT_CLASSIFICATION	5.429401810111105E-6	IMPLEMENTATION
invokeinterface callback.write(..)	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999926968774699	WITHOUT_CLASSIFICATION	7.303122530041451E-6	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999926968774699	WITHOUT_CLASSIFICATION	7.303122530041451E-6	IMPLEMENTATION
not array	WITHOUT_CLASSIFICATION	0.9992681294625143	WITHOUT_CLASSIFICATION	7.31870537485683E-4	IMPLEMENTATION
array of reference type	WITHOUT_CLASSIFICATION	0.9999980621191429	WITHOUT_CLASSIFICATION	1.9378808571909814E-6	IMPLEMENTATION
boolean	WITHOUT_CLASSIFICATION	0.9999943188136271	WITHOUT_CLASSIFICATION	5.6811863728262265E-6	IMPLEMENTATION
byte	WITHOUT_CLASSIFICATION	0.9999866807725997	WITHOUT_CLASSIFICATION	1.3319227400357764E-5	IMPLEMENTATION
char	WITHOUT_CLASSIFICATION	0.999996325663578	WITHOUT_CLASSIFICATION	3.6743364219795775E-6	IMPLEMENTATION
short	WITHOUT_CLASSIFICATION	0.9999860574882802	WITHOUT_CLASSIFICATION	1.3942511719915004E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999994191142677	WITHOUT_CLASSIFICATION	5.8088573222739E-7	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999876498877893	WITHOUT_CLASSIFICATION	1.2350112210729585E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999876498877893	WITHOUT_CLASSIFICATION	1.2350112210729585E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999758002599202	WITHOUT_CLASSIFICATION	2.4199740079789908E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999758002599202	WITHOUT_CLASSIFICATION	2.4199740079789908E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999309673178974	WITHOUT_CLASSIFICATION	6.903268210249393E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999309673178974	WITHOUT_CLASSIFICATION	6.903268210249393E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999989099854508	WITHOUT_CLASSIFICATION	1.0900145492212534E-6	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999989099854508	WITHOUT_CLASSIFICATION	1.0900145492212534E-6	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999926968774699	WITHOUT_CLASSIFICATION	7.303122530041451E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999994191142677	WITHOUT_CLASSIFICATION	5.8088573222739E-7	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999876498877893	WITHOUT_CLASSIFICATION	1.2350112210729585E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999876498877893	WITHOUT_CLASSIFICATION	1.2350112210729585E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999758002599202	WITHOUT_CLASSIFICATION	2.4199740079789908E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999309673178974	WITHOUT_CLASSIFICATION	6.903268210249393E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999309673178974	WITHOUT_CLASSIFICATION	6.903268210249393E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999989099854508	WITHOUT_CLASSIFICATION	1.0900145492212534E-6	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.9999350302162373	WITHOUT_CLASSIFICATION	6.49697837626876E-5	IMPLEMENTATION
mainly for oscache	WITHOUT_CLASSIFICATION	0.9999854224755302	WITHOUT_CLASSIFICATION	1.4577524469899455E-5	IMPLEMENTATION
decrement the lock	WITHOUT_CLASSIFICATION	0.9999780833328029	WITHOUT_CLASSIFICATION	2.1916667197129418E-5	IMPLEMENTATION
create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999211477507639	WITHOUT_CLASSIFICATION	7.885224923610918E-5	IMPLEMENTATION
recache the updated state	WITHOUT_CLASSIFICATION	0.9999936744622077	WITHOUT_CLASSIFICATION	6.325537792349045E-6	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.999987663888346	WITHOUT_CLASSIFICATION	1.23361116540258E-5	IMPLEMENTATION
null clientlock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999999607461821	WITHOUT_CLASSIFICATION	3.925381794873198E-8	IMPLEMENTATION
we really could refresh the item if it is not a lock but it might be slower return freshtimestamp < txtimestamp	WITHOUT_CLASSIFICATION	0.9999749892734381	WITHOUT_CLASSIFICATION	2.501072656184488E-5	IMPLEMENTATION
by requiring < we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999997122363525	WITHOUT_CLASSIFICATION	2.8776364753721865E-7	IMPLEMENTATION
the user provided resulttransformer not the one used with "select new". here to avoid mangling transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.997361431924646	WITHOUT_CLASSIFICATION	0.002638568075353986	IMPLEMENTATION
disassemble positional parameters	WITHOUT_CLASSIFICATION	0.999937147532455	WITHOUT_CLASSIFICATION	6.285246754506628E-5	IMPLEMENTATION
disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999797466292831	WITHOUT_CLASSIFICATION	2.025337071691091E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999602740113359	WITHOUT_CLASSIFICATION	3.972598866408431E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.999987663888346	WITHOUT_CLASSIFICATION	1.23361116540258E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.999987663888346	WITHOUT_CLASSIFICATION	1.23361116540258E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.999987663888346	WITHOUT_CLASSIFICATION	1.23361116540258E-5	IMPLEMENTATION
this is called from settingsfactory irregardless trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999965398463262	WITHOUT_CLASSIFICATION	3.460153673728924E-6	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9999936449985772	WITHOUT_CLASSIFICATION	6.355001422708412E-6	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9999936449985772	WITHOUT_CLASSIFICATION	6.355001422708412E-6	IMPLEMENTATION
throw new unsupportedoperationexception("can't write to a readonly object")	WITHOUT_CLASSIFICATION	0.9998505909382722	WITHOUT_CLASSIFICATION	1.4940906172783392E-4	IMPLEMENTATION
assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999999708848121	WITHOUT_CLASSIFICATION	2.9115187882964597E-8	IMPLEMENTATION
persister.setidentifier(result id) before calling interceptor for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999918687446616	WITHOUT_CLASSIFICATION	8.131255338507012E-6	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9997181757104602	WITHOUT_CLASSIFICATION	2.8182428953983044E-4	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9997181757104602	WITHOUT_CLASSIFICATION	2.8182428953983044E-4	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999987664629512	WITHOUT_CLASSIFICATION	1.2335370488242472E-6	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.999982305649151	WITHOUT_CLASSIFICATION	1.7694350849064608E-5	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.999982305649151	WITHOUT_CLASSIFICATION	1.7694350849064608E-5	IMPLEMENTATION
classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9997413842684312	WITHOUT_CLASSIFICATION	2.586157315688414E-4	IMPLEMENTATION
get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999977166487476	WITHOUT_CLASSIFICATION	2.2833512524051005E-6	IMPLEMENTATION
get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999983222064851	WITHOUT_CLASSIFICATION	1.6777935148092608E-6	IMPLEMENTATION
db-objectname	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
mutable	WITHOUT_CLASSIFICATION	0.9999859303663675	WITHOUT_CLASSIFICATION	1.4069633632497969E-5	IMPLEMENTATION
where	WITHOUT_CLASSIFICATION	0.9999601992912418	WITHOUT_CLASSIFICATION	3.980070875816541E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.99992444110464	WITHOUT_CLASSIFICATION	7.555889536008479E-5	IMPLEMENTATION
polymorphism	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.7943437571679685	WITHOUT_CLASSIFICATION	0.2056562428320315	IMPLEMENTATION
id	WITHOUT_CLASSIFICATION	0.9999023191142072	WITHOUT_CLASSIFICATION	9.76808857928059E-5	IMPLEMENTATION
version / timestamp	WITHOUT_CLASSIFICATION	0.9999905000104048	WITHOUT_CLASSIFICATION	9.499989595265106E-6	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999597116381514	WITHOUT_CLASSIFICATION	4.028836184851171E-5	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999884088194153	WITHOUT_CLASSIFICATION	1.1591180584748603E-5	IMPLEMENTATION
this is either a <version/> tag with no type attribute or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.999993023553281	WITHOUT_CLASSIFICATION	6.97644671897388E-6	IMPLEMENTATION
for version properties marked as being generated make sure they are "always" generated aka "insert" is invalid this is dis-allowed by the dtd but just to make sure	WITHOUT_CLASSIFICATION	0.9999999030560283	WITHOUT_CLASSIFICATION	9.694397172634328E-8	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999597116381514	WITHOUT_CLASSIFICATION	4.028836184851171E-5	IMPLEMENTATION
( (column) discrim.getcolumniterator().next() ).settype(type)	WITHOUT_CLASSIFICATION	0.9999812622177635	WITHOUT_CLASSIFICATION	1.8737782236513394E-5	IMPLEMENTATION
go ahead and set the lazy here since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9998948005011731	WITHOUT_CLASSIFICATION	1.0519949882699259E-4	IMPLEMENTATION
dynamic update	WITHOUT_CLASSIFICATION	0.999994278425399	WITHOUT_CLASSIFICATION	5.721574601053629E-6	IMPLEMENTATION
import	WITHOUT_CLASSIFICATION	0.9999708331945926	WITHOUT_CLASSIFICATION	2.91668054073792E-5	IMPLEMENTATION
batch size	WITHOUT_CLASSIFICATION	0.9999873084565836	WITHOUT_CLASSIFICATION	1.2691543416393756E-5	IMPLEMENTATION
select before update	WITHOUT_CLASSIFICATION	0.9999974014413059	WITHOUT_CLASSIFICATION	2.5985586939651013E-6	IMPLEMENTATION
optimistic lock mode	WITHOUT_CLASSIFICATION	0.999900031479523	WITHOUT_CLASSIFICATION	9.996852047695525E-5	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999766233819719	WITHOUT_CLASSIFICATION	2.337661802813042E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999959867298938	WITHOUT_CLASSIFICATION	4.013270106219234E-6	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999983222064851	WITHOUT_CLASSIFICATION	1.6777935148092608E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999712422110779	WITHOUT_CLASSIFICATION	2.875778892205752E-5	IMPLEMENTATION
joined subclasses	WITHOUT_CLASSIFICATION	0.9999865431757836	WITHOUT_CLASSIFICATION	1.3456824216270764E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999887842414378	WITHOUT_CLASSIFICATION	1.1215758562194948E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.99992444110464	WITHOUT_CLASSIFICATION	7.555889536008479E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999959867298938	WITHOUT_CLASSIFICATION	4.013270106219234E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999712422110779	WITHOUT_CLASSIFICATION	2.875778892205752E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999887842414378	WITHOUT_CLASSIFICATION	1.1215758562194948E-5	IMPLEMENTATION
model.getkey().settype( new type( model.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9999630619864356	WITHOUT_CLASSIFICATION	3.6938013564515184E-5	IMPLEMENTATION
tablename	WITHOUT_CLASSIFICATION	0.9999859700911726	WITHOUT_CLASSIFICATION	1.4029908827415811E-5	IMPLEMENTATION
join.getkey().settype( new type( lazz.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9999630619864356	WITHOUT_CLASSIFICATION	3.6938013564515184E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999712422110779	WITHOUT_CLASSIFICATION	2.875778892205752E-5	IMPLEMENTATION
column(s)	WITHOUT_CLASSIFICATION	0.999985909843202	WITHOUT_CLASSIFICATION	1.4090156797888525E-5	IMPLEMENTATION
column index	WITHOUT_CLASSIFICATION	0.999627991005378	WITHOUT_CLASSIFICATION	3.7200899462204196E-4	IMPLEMENTATION
column unique-key	WITHOUT_CLASSIFICATION	0.9999013173422928	WITHOUT_CLASSIFICATION	9.868265770714351E-5	IMPLEMENTATION
automatically makes a column with the default name if none is specifed by xml	WITHOUT_CLASSIFICATION	0.9999999438827878	WITHOUT_CLASSIFICATION	5.6117212343885854E-8	IMPLEMENTATION
for an any	WITHOUT_CLASSIFICATION	0.9999992930932988	WITHOUT_CLASSIFICATION	7.069067010807935E-7	IMPLEMENTATION
insertable simply because that is the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9931819133615013	WITHOUT_CLASSIFICATION	0.0068180866384986195	IMPLEMENTATION
the user specifically supplied insert="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999959915145618	WITHOUT_CLASSIFICATION	4.008485438291153E-6	IMPLEMENTATION
properties generated on update can never be updateable	WITHOUT_CLASSIFICATION	0.9996403277181795	WITHOUT_CLASSIFICATION	3.596722818205512E-4	IMPLEMENTATION
updateable only because the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9966054818575885	WITHOUT_CLASSIFICATION	0.003394518142411566	IMPLEMENTATION
the user specifically supplied update="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999959915145618	WITHOUT_CLASSIFICATION	4.008485438291153E-6	IMPLEMENTATION
rolename	WITHOUT_CLASSIFICATION	0.9999868643458101	WITHOUT_CLASSIFICATION	1.3135654189859279E-5	IMPLEMENTATION
fetch strategy	WITHOUT_CLASSIFICATION	0.9999588356392909	WITHOUT_CLASSIFICATION	4.116436070914389E-5	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999894605723696	WITHOUT_CLASSIFICATION	1.0539427630310537E-5	IMPLEMENTATION
tablename = mappings.getnamingstrategy().propertytotablename( classname path )	WITHOUT_CLASSIFICATION	0.9996377176422636	WITHOUT_CLASSIFICATION	3.6228235773643505E-4	IMPLEMENTATION
sort	WITHOUT_CLASSIFICATION	0.9999617307545793	WITHOUT_CLASSIFICATION	3.826924542061162E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999959867298938	WITHOUT_CLASSIFICATION	4.013270106219234E-6	IMPLEMENTATION
unsorted natural comparator.class.name	WITHOUT_CLASSIFICATION	0.9999647773246055	WITHOUT_CLASSIFICATION	3.522267539438479E-5	IMPLEMENTATION
orphan delete (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999459240980801	WITHOUT_CLASSIFICATION	5.407590191991273E-5	IMPLEMENTATION
set up second pass	WITHOUT_CLASSIFICATION	0.9999645632815309	WITHOUT_CLASSIFICATION	3.5436718469059716E-5	IMPLEMENTATION
an "embedded" component (composite ids and unique) note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9996056367607918	WITHOUT_CLASSIFICATION	3.9436323920815513E-4	IMPLEMENTATION
a nested composite element	WITHOUT_CLASSIFICATION	0.9999676791342704	WITHOUT_CLASSIFICATION	3.232086572950066E-5	IMPLEMENTATION
for an any we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999911894537264	WITHOUT_CLASSIFICATION	8.810546273503856E-6	IMPLEMENTATION
note special case one-to-one constrained=false cannot be proxied so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999999495494045	WITHOUT_CLASSIFICATION	5.045059542997585E-8	IMPLEMENTATION
use old (hb 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999992416928006	WITHOUT_CLASSIFICATION	7.583071993322878E-7	IMPLEMENTATION
lazy = !join	WITHOUT_CLASSIFICATION	0.999926539630899	WITHOUT_CLASSIFICATION	7.346036910101506E-5	IMPLEMENTATION
generator	WITHOUT_CLASSIFICATION	0.9999886524981301	WITHOUT_CLASSIFICATION	1.1347501869933381E-5	IMPLEMENTATION
id unsaved-value	WITHOUT_CLASSIFICATION	0.9997211519906906	WITHOUT_CLASSIFICATION	2.788480093095499E-4	IMPLEMENTATION
version unsaved-value	WITHOUT_CLASSIFICATION	0.9999427514185271	WITHOUT_CLASSIFICATION	5.7248581472935094E-5	IMPLEMENTATION
not necessarily a unique property reference	WITHOUT_CLASSIFICATION	0.9993947396434432	WITHOUT_CLASSIFICATION	6.05260356556949E-4	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999812622177635	WITHOUT_CLASSIFICATION	1.8737782236513394E-5	IMPLEMENTATION
contained elements	WITHOUT_CLASSIFICATION	0.9999818272224439	WITHOUT_CLASSIFICATION	1.8172777556065926E-5	IMPLEMENTATION
for non-inverse one-to-many with a not-null fk add a backref!	WITHOUT_CLASSIFICATION	0.9999457500406338	WITHOUT_CLASSIFICATION	5.4249959366273254E-5	IMPLEMENTATION
bind the where	WITHOUT_CLASSIFICATION	0.9999308996792821	WITHOUT_CLASSIFICATION	6.910032071793097E-5	IMPLEMENTATION
bind the order-by	WITHOUT_CLASSIFICATION	0.9999754987716059	WITHOUT_CLASSIFICATION	2.450122839425875E-5	IMPLEMENTATION
bind the filters	WITHOUT_CLASSIFICATION	0.9999760440866318	WITHOUT_CLASSIFICATION	2.3955913368255296E-5	IMPLEMENTATION
overriding inherited meta attribute. hbx-621 & hbx-793	WITHOUT_CLASSIFICATION	0.9999782128643885	WITHOUT_CLASSIFICATION	2.1787135611479535E-5	IMPLEMENTATION
first iterate over all elements capable of defining an extends attribute collecting all found extends references if they cannot be resolved against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999909593726	WITHOUT_CLASSIFICATION	9.040627405657664E-9	IMPLEMENTATION
mappings might contain either the "raw" extends name (in the case of an entity-name mapping) or a fqn (in the case of a pojo mapping).	WITHOUT_CLASSIFICATION	0.9999982762626907	WITHOUT_CLASSIFICATION	1.7237373092995437E-6	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9977155275389048	WITHOUT_CLASSIFICATION	0.002284472461095245	IMPLEMENTATION
sessionfactory name	WITHOUT_CLASSIFICATION	0.9999747790105384	WITHOUT_CLASSIFICATION	2.522098946160046E-5	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9998159426655845	WITHOUT_CLASSIFICATION	1.8405733441548752E-4	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9998159426655845	WITHOUT_CLASSIFICATION	1.8405733441548752E-4	IMPLEMENTATION
interrogate jdbc metadata	WITHOUT_CLASSIFICATION	0.999984819141315	WITHOUT_CLASSIFICATION	1.5180858685024177E-5	IMPLEMENTATION
user supplied jdbc connections	WITHOUT_CLASSIFICATION	0.9999916945772375	WITHOUT_CLASSIFICATION	8.305422762552504E-6	IMPLEMENTATION
use dialect default properties	WITHOUT_CLASSIFICATION	0.9999894375234443	WITHOUT_CLASSIFICATION	1.0562476555717875E-5	IMPLEMENTATION
transaction settings	WITHOUT_CLASSIFICATION	0.999994287373492	WITHOUT_CLASSIFICATION	5.712626507885134E-6	IMPLEMENTATION
sql generation settings	WITHOUT_CLASSIFICATION	0.9999991046708767	WITHOUT_CLASSIFICATION	8.953291233627061E-7	IMPLEMENTATION
query parser settings	WITHOUT_CLASSIFICATION	0.999993251389133	WITHOUT_CLASSIFICATION	6.74861086693059E-6	IMPLEMENTATION
second-level / query cache	WITHOUT_CLASSIFICATION	0.9999952918857268	WITHOUT_CLASSIFICATION	4.708114273217234E-6	IMPLEMENTATION
the cache provider is needed when we either have second-level cache enabled or query cache enabled. note that usesecondlevelcache is enabled by default	WITHOUT_CLASSIFICATION	0.9990512525726356	WITHOUT_CLASSIFICATION	9.487474273643046E-4	IMPLEMENTATION
sql exception converter	WITHOUT_CLASSIFICATION	0.9999985576074346	WITHOUT_CLASSIFICATION	1.442392565393393E-6	IMPLEMENTATION
statistics and logging	WITHOUT_CLASSIFICATION	0.9999959859028963	WITHOUT_CLASSIFICATION	4.014097103752558E-6	IMPLEMENTATION
settings.setshowsqlenabled(showsql)	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
settings.setformatsqlenabled(formatsql)	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
schema export	WITHOUT_CLASSIFICATION	0.9999712243332044	WITHOUT_CLASSIFICATION	2.877566679567173E-5	IMPLEMENTATION
string provider = properties.getproperty( environment.bytecode_provider ) log.info( "bytecode provider name " + provider ) bytecodeprovider bytecodeprovider = buildbytecodeprovider( provider ) settings.setbytecodeprovider( bytecodeprovider )	WITHOUT_CLASSIFICATION	0.9999587178886707	WITHOUT_CLASSIFICATION	4.128211132921103E-5	IMPLEMENTATION
legacy behavior apply the bridge	WITHOUT_CLASSIFICATION	0.9999817784673752	WITHOUT_CLASSIFICATION	1.8221532624777254E-5	IMPLEMENTATION
maybe a concrete sqlpropertyresult type but map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.99974576619048	WITHOUT_CLASSIFICATION	2.542338095200992E-4	IMPLEMENTATION
if dotted and not load-collection nor return-join regular property	WITHOUT_CLASSIFICATION	0.99922107532885	WITHOUT_CLASSIFICATION	7.789246711500026E-4	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907 private bytecodeprovider bytecodeprovider	WITHOUT_CLASSIFICATION	0.821798252201668	WITHOUT_CLASSIFICATION	0.17820174779833206	IMPLEMENTATION
public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999869748304817	WITHOUT_CLASSIFICATION	1.3025169518205498E-5	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999764837103087	WITHOUT_CLASSIFICATION	2.351628969133452E-5	IMPLEMENTATION
package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997623246451126	WITHOUT_CLASSIFICATION	2.3767535488747026E-4	IMPLEMENTATION
void setshowsqlenabled(boolean b) { showsql = b } void setformatsqlenabled(boolean b) { formatsql = b }	WITHOUT_CLASSIFICATION	0.9998848381396925	WITHOUT_CLASSIFICATION	1.1516186030750093E-4	IMPLEMENTATION
public bytecodeprovider getbytecodeprovider() { return bytecodeprovider } void setbytecodeprovider(bytecodeprovider bytecodeprovider) { this.bytecodeprovider = bytecodeprovider }	WITHOUT_CLASSIFICATION	0.9999756058818263	WITHOUT_CLASSIFICATION	2.4394118173695815E-5	IMPLEMENTATION
using local since the inheritedmetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9996259048198939	WITHOUT_CLASSIFICATION	3.7409518010610274E-4	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907	WITHOUT_CLASSIFICATION	0.821798252201668	WITHOUT_CLASSIFICATION	0.17820174779833206	IMPLEMENTATION
protected list extendsqueue	WITHOUT_CLASSIFICATION	0.999987699197645	WITHOUT_CLASSIFICATION	1.2300802355009919E-5	IMPLEMENTATION
extendsqueue = new arraylist()	WITHOUT_CLASSIFICATION	0.9999679826261644	WITHOUT_CLASSIFICATION	3.201737383553564E-5	IMPLEMENTATION
componenttuplizerfactory = new componenttuplizerfactory()	WITHOUT_CLASSIFICATION	0.9999563974018565	WITHOUT_CLASSIFICATION	4.3602598143461946E-5	IMPLEMENTATION
if doc is null then for whatever reason the cached file cannot be used	WITHOUT_CLASSIFICATION	0.9999999981682713	WITHOUT_CLASSIFICATION	1.8317286199618733E-9	IMPLEMENTATION
drop them in reverse order in case db needs it done that way	WITHOUT_CLASSIFICATION	0.9999902292981423	WITHOUT_CLASSIFICATION	9.77070185768316E-6	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999764837103087	WITHOUT_CLASSIFICATION	2.351628969133452E-5	IMPLEMENTATION
this method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999589417402015	WITHOUT_CLASSIFICATION	4.105825979845332E-5	IMPLEMENTATION
iterator iterator = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9999100673486588	WITHOUT_CLASSIFICATION	8.993265134118495E-5	IMPLEMENTATION
iterator iter = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9999101301900208	WITHOUT_CLASSIFICATION	8.986980997915699E-5	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999823757291498	WITHOUT_CLASSIFICATION	1.7624270850171592E-5	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999823757291498	WITHOUT_CLASSIFICATION	1.7624270850171592E-5	IMPLEMENTATION
settings.setcomponenttuplizerfactory( this.getcomponenttuplizerfactory() )	WITHOUT_CLASSIFICATION	0.9999480037932571	WITHOUT_CLASSIFICATION	5.199620674294662E-5	IMPLEMENTATION
private final list extendsqueue	WITHOUT_CLASSIFICATION	0.9999985506197825	WITHOUT_CLASSIFICATION	1.4493802175107606E-6	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9999597281576884	WITHOUT_CLASSIFICATION	4.027184231161104E-5	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9999597281576884	WITHOUT_CLASSIFICATION	4.027184231161104E-5	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9977155275389048	WITHOUT_CLASSIFICATION	0.002284472461095245	IMPLEMENTATION
set use_reflection_optimizer to false to fix hhh-227	WITHOUT_CLASSIFICATION	0.9929125853356842	WITHOUT_CLASSIFICATION	0.0070874146643158204	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9995035178096335	WITHOUT_CLASSIFICATION	4.964821903664979E-4	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9999678713323855	WITHOUT_CLASSIFICATION	3.21286676144115E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9993104425975381	WITHOUT_CLASSIFICATION	6.8955740246186E-4	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9995035178096335	WITHOUT_CLASSIFICATION	4.964821903664979E-4	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9999678713323855	WITHOUT_CLASSIFICATION	3.21286676144115E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8953573540520186	WITHOUT_CLASSIFICATION	0.10464264594798152	IMPLEMENTATION
maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999998573110344	WITHOUT_CLASSIFICATION	1.4268896564756788E-7	IMPLEMENTATION
the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999866657901301	WITHOUT_CLASSIFICATION	1.3334209869859479E-5	IMPLEMENTATION
the element has changed	WITHOUT_CLASSIFICATION	0.9999997639012268	WITHOUT_CLASSIFICATION	2.360987731713585E-7	IMPLEMENTATION
careful these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.99801603961455	WITHOUT_CLASSIFICATION	0.001983960385449964	IMPLEMENTATION
needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.8857837596353167	WITHOUT_CLASSIFICATION	0.1142162403646832	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9993734662991692	WITHOUT_CLASSIFICATION	6.265337008308827E-4	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9993734662991692	WITHOUT_CLASSIFICATION	6.265337008308827E-4	IMPLEMENTATION
do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999907755818431	WITHOUT_CLASSIFICATION	9.224418156807903E-6	IMPLEMENTATION
short-circuit(s) no new elements the old list contains only orphans no old elements so no orphans neither	WITHOUT_CLASSIFICATION	0.9999999673193616	WITHOUT_CLASSIFICATION	3.268063841439914E-8	IMPLEMENTATION
create the collection holding the orphans	WITHOUT_CLASSIFICATION	0.9999757983587365	WITHOUT_CLASSIFICATION	2.4201641263473292E-5	IMPLEMENTATION
collect entityidentifier(s) of the current elements - add them into a hashset for fast access	WITHOUT_CLASSIFICATION	0.999999854056566	WITHOUT_CLASSIFICATION	1.459434340748499E-7	IMPLEMENTATION
iterate over the old list	WITHOUT_CLASSIFICATION	0.9999995586935118	WITHOUT_CLASSIFICATION	4.413064881523319E-7	IMPLEMENTATION
(array==null) ? templist.size()	WITHOUT_CLASSIFICATION	0.999956769662406	WITHOUT_CLASSIFICATION	4.32303375939704E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9993104425975381	WITHOUT_CLASSIFICATION	6.8955740246186E-4	IMPLEMENTATION
(array==null) ? templist.get(i)	WITHOUT_CLASSIFICATION	0.999956769662406	WITHOUT_CLASSIFICATION	4.32303375939704E-5	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9999966459011286	WITHOUT_CLASSIFICATION	3.3540988714643088E-6	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9999966459011286	WITHOUT_CLASSIFICATION	3.3540988714643088E-6	IMPLEMENTATION
amazingly these two will work because abstractcollection uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999928344355741	WITHOUT_CLASSIFICATION	7.165564425935667E-6	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8953573540520186	WITHOUT_CLASSIFICATION	0.10464264594798152	IMPLEMENTATION
finally what it's all about	WITHOUT_CLASSIFICATION	0.9991781328868731	WITHOUT_CLASSIFICATION	8.218671131268965E-4	IMPLEMENTATION
note that if we load this collection from a cartesian product the multiplicity would be broken so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999991949308145	WITHOUT_CLASSIFICATION	8.050691855749618E-7	IMPLEMENTATION
anyway here we implement <set> semantics for a <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.997439104235704	WITHOUT_CLASSIFICATION	0.002560895764295976	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999982652856914	WITHOUT_CLASSIFICATION	1.7347143086753077E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999648233173631	WITHOUT_CLASSIFICATION	3.517668263689522E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8953573540520186	WITHOUT_CLASSIFICATION	0.10464264594798152	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999982652856914	WITHOUT_CLASSIFICATION	1.7347143086753077E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999648233173631	WITHOUT_CLASSIFICATION	3.517668263689522E-5	IMPLEMENTATION
public boolean equals(object other) {read()return bag.equals(other)}public int hashcode(object other) {read()return bag.hashcode()}	WITHOUT_CLASSIFICATION	0.9999988946613867	WITHOUT_CLASSIFICATION	1.105338613315579E-6	IMPLEMENTATION
list operations	WITHOUT_CLASSIFICATION	0.9999573488977841	WITHOUT_CLASSIFICATION	4.265110221590198E-5	IMPLEMENTATION
pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999829053055395	WITHOUT_CLASSIFICATION	1.709469446057143E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8953573540520186	WITHOUT_CLASSIFICATION	0.10464264594798152	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8953573540520186	WITHOUT_CLASSIFICATION	0.10464264594798152	IMPLEMENTATION
from map	WITHOUT_CLASSIFICATION	0.9999961272177076	WITHOUT_CLASSIFICATION	3.872782292328544E-6	IMPLEMENTATION
from sortedmap	WITHOUT_CLASSIFICATION	0.9999891635577598	WITHOUT_CLASSIFICATION	1.0836442240195459E-5	IMPLEMENTATION
inject the data	WITHOUT_CLASSIFICATION	0.9999959544856583	WITHOUT_CLASSIFICATION	4.045514341747365E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999987095343091	WITHOUT_CLASSIFICATION	1.2904656908507942E-6	IMPLEMENTATION
default pool size 20	WITHOUT_CLASSIFICATION	0.9999908251601292	WITHOUT_CLASSIFICATION	9.174839870924217E-6	IMPLEMENTATION
trying via forname() first to be as close to drivermanager's semantics	WITHOUT_CLASSIFICATION	0.9999960292154575	WITHOUT_CLASSIFICATION	3.9707845425183674E-6	IMPLEMENTATION
if debug level is enabled then log the password otherwise mask it	WITHOUT_CLASSIFICATION	0.9999684985880378	WITHOUT_CLASSIFICATION	3.150141196207516E-5	IMPLEMENTATION
register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999930833379509	WITHOUT_CLASSIFICATION	6.916662049086758E-6	IMPLEMENTATION
wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999941995901404	WITHOUT_CLASSIFICATION	5.800409859653928E-6	IMPLEMENTATION
then bind it	WITHOUT_CLASSIFICATION	0.9999835738413713	WITHOUT_CLASSIFICATION	1.642615862872093E-5	IMPLEMENTATION
try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.998924665013935	WITHOUT_CLASSIFICATION	0.0010753349860650964	IMPLEMENTATION
allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9995582425624018	WITHOUT_CLASSIFICATION	4.417574375981239E-4	IMPLEMENTATION
limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999999058453352	WITHOUT_CLASSIFICATION	9.415466483094795E-8	IMPLEMENTATION
allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9996145273136057	WITHOUT_CLASSIFICATION	3.8547268639433925E-4	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999182231150837	WITHOUT_CLASSIFICATION	8.1776884916249E-5	IMPLEMENTATION
we could register the session against the transaction even though it is not started but we'd have no guarentee of ever getting the map entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999983574131474	WITHOUT_CLASSIFICATION	1.6425868526166759E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999987095343091	WITHOUT_CLASSIFICATION	1.2904656908507942E-6	IMPLEMENTATION
private string propertyname	WITHOUT_CLASSIFICATION	0.9999970938453793	WITHOUT_CLASSIFICATION	2.9061546207893754E-6	IMPLEMENTATION
public propertyprojection project() {return projections.property(getpropertyname())}	WITHOUT_CLASSIFICATION	0.999993628670469	WITHOUT_CLASSIFICATION	6.371329531051055E-6	IMPLEMENTATION
string[] fk = stringhelper.qualify( "collection_" cp.getkeycolumnnames() )	WITHOUT_CLASSIFICATION	0.9998527843045356	WITHOUT_CLASSIFICATION	1.4721569546443267E-4	IMPLEMENTATION
" collection_ where " +	WITHOUT_CLASSIFICATION	0.9998536118094203	WITHOUT_CLASSIFICATION	1.463881905796717E-4	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.999959720950316	WITHOUT_CLASSIFICATION	4.02790496838937E-5	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.999959720950316	WITHOUT_CLASSIFICATION	4.02790496838937E-5	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999987095343091	WITHOUT_CLASSIFICATION	1.2904656908507942E-6	IMPLEMENTATION
the following two lines were added to ensure that this.params is not null which can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999377785265399	WITHOUT_CLASSIFICATION	6.22214734601374E-5	IMPLEMENTATION
with two-deep subqueries the same alias would get generated for both using the old method (criteriaquery.generatesqlalias()) so that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999998969891973	WITHOUT_CLASSIFICATION	1.0301080269179856E-7	IMPLEMENTATION
implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9878453956585986	WITHOUT_CLASSIFICATION	0.01215460434140142	IMPLEMENTATION
pull off the last " "	WITHOUT_CLASSIFICATION	0.9999907469000491	WITHOUT_CLASSIFICATION	9.253099950971339E-6	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999859041432677	WITHOUT_CLASSIFICATION	1.4095856732241034E-5	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999892001750573	WITHOUT_CLASSIFICATION	1.0799824942640228E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource)	WITHOUT_CLASSIFICATION	0.9998246911641644	WITHOUT_CLASSIFICATION	1.7530883583556986E-4	IMPLEMENTATION
not_supported_should_use_jdbc3_preparedstatement.getgeneratedkeys_method	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999917822458999	WITHOUT_CLASSIFICATION	8.217754100062831E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
oracle did add support for ansi case statements in 9i	WITHOUT_CLASSIFICATION	0.9999973198762127	WITHOUT_CLASSIFICATION	2.6801237873482538E-6	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999995804346068	WITHOUT_CLASSIFICATION	4.1956539319373296E-7	IMPLEMENTATION
informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999907742288293	WITHOUT_CLASSIFICATION	9.225771170707144E-6	IMPLEMENTATION
or byte or text? or money	WITHOUT_CLASSIFICATION	0.9999865362011348	WITHOUT_CLASSIFICATION	1.3463798865282427E-5	IMPLEMENTATION
strip table-owner because informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9998915672483364	WITHOUT_CLASSIFICATION	1.0843275166362306E-4	IMPLEMENTATION
build the map of standard ansi sql aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987642680882	WITHOUT_CLASSIFICATION	1.235731911882664E-6	IMPLEMENTATION
pre h3.2 behavior super.getreturntype(ct m)	WITHOUT_CLASSIFICATION	0.9999795917897565	WITHOUT_CLASSIFICATION	2.040821024356559E-5	IMPLEMENTATION
finally use the sqltype if == on hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9958407677587765	WITHOUT_CLASSIFICATION	0.004159232241223561	IMPLEMENTATION
because numeric can be anything	WITHOUT_CLASSIFICATION	0.9997930038285145	WITHOUT_CLASSIFICATION	2.0699617148549126E-4	IMPLEMENTATION
constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999577983438067	WITHOUT_CLASSIFICATION	4.22016561932874E-5	IMPLEMENTATION
standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999990514595289	WITHOUT_CLASSIFICATION	9.485404711381218E-7	IMPLEMENTATION
map second/minute/hour/day/month/year to ansi extract() override on subclasses	WITHOUT_CLASSIFICATION	0.9995857963242146	WITHOUT_CLASSIFICATION	4.142036757853526E-4	IMPLEMENTATION
register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999916548599886	WITHOUT_CLASSIFICATION	8.34514001138077E-6	IMPLEMENTATION
database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989312766116204	WITHOUT_CLASSIFICATION	0.00106872338837962	IMPLEMENTATION
hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994096844336392	WITHOUT_CLASSIFICATION	5.903155663607389E-4	IMPLEMENTATION
keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995775212981284	WITHOUT_CLASSIFICATION	4.2247870187167667E-4	IMPLEMENTATION
native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999977819563584	WITHOUT_CLASSIFICATION	2.2180436415964508E-5	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994175281604629	WITHOUT_CLASSIFICATION	5.824718395371175E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994447624157726	WITHOUT_CLASSIFICATION	5.552375842274359E-4	IMPLEMENTATION
guid support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993705103623466	WITHOUT_CLASSIFICATION	6.294896376534836E-4	IMPLEMENTATION
limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993705103623466	WITHOUT_CLASSIFICATION	6.294896376534836E-4	IMPLEMENTATION
by default we report no support	WITHOUT_CLASSIFICATION	0.9999700849143445	WITHOUT_CLASSIFICATION	2.9915085655490836E-5	IMPLEMENTATION
by default we report no support for nowait lock semantics	WITHOUT_CLASSIFICATION	0.9999893976439835	WITHOUT_CLASSIFICATION	1.0602356016551991E-5	IMPLEMENTATION
table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995297997148554	WITHOUT_CLASSIFICATION	4.70200285144545E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995561992343645	WITHOUT_CLASSIFICATION	4.438007656355115E-4	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990841316632619	WITHOUT_CLASSIFICATION	9.158683367381269E-4	IMPLEMENTATION
current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994484054171137	WITHOUT_CLASSIFICATION	5.515945828863529E-4	IMPLEMENTATION
sqlexception support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994056013034436	WITHOUT_CLASSIFICATION	5.943986965564927E-4	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993705103623466	WITHOUT_CLASSIFICATION	6.294896376534836E-4	IMPLEMENTATION
identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992903603047303	WITHOUT_CLASSIFICATION	7.096396952697698E-4	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993705103623466	WITHOUT_CLASSIFICATION	6.294896376534836E-4	IMPLEMENTATION
grrr for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.999996230680619	WITHOUT_CLASSIFICATION	3.7693193809103674E-6	IMPLEMENTATION
informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999654746745401	WITHOUT_CLASSIFICATION	3.452532545996461E-5	IMPLEMENTATION
return false here as most databases do not properly support this construct	WITHOUT_CLASSIFICATION	0.8622225620492324	IMPLEMENTATION	0.13777743795076755	WITHOUT_CLASSIFICATION
mckoi has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999994598978473	WITHOUT_CLASSIFICATION	5.401021527656454E-7	IMPLEMENTATION
oracle8 and previous define only a "date" type which is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.999998924074337	WITHOUT_CLASSIFICATION	1.0759256630784195E-6	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999800053845151	WITHOUT_CLASSIFICATION	1.9994615484828213E-5	IMPLEMENTATION
" cascade"	WITHOUT_CLASSIFICATION	0.9999716628398941	WITHOUT_CLASSIFICATION	2.8337160105786637E-5	IMPLEMENTATION
trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999891526399588	WITHOUT_CLASSIFICATION	1.0847360041165613E-5	IMPLEMENTATION
public boolean droptemporarytableafteruse() {we have to because postgres sets current txto rollback only after a failed create tablereturn true}	WITHOUT_CLASSIFICATION	0.9999947873882783	WITHOUT_CLASSIFICATION	5.212611721689103E-6	IMPLEMENTATION
check violation	WITHOUT_CLASSIFICATION	0.9997843731748114	WITHOUT_CLASSIFICATION	2.1562682518860816E-4	IMPLEMENTATION
unique violation	WITHOUT_CLASSIFICATION	0.9999167236312194	WITHOUT_CLASSIFICATION	8.327636878059115E-5	IMPLEMENTATION
foreign key violation	WITHOUT_CLASSIFICATION	0.9999552548567406	WITHOUT_CLASSIFICATION	4.4745143259366365E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
not null violation	WITHOUT_CLASSIFICATION	0.9993182766426965	WITHOUT_CLASSIFICATION	6.817233573036292E-4	IMPLEMENTATION
all other	WITHOUT_CLASSIFICATION	0.9999650592000779	WITHOUT_CLASSIFICATION	3.494079992201234E-5	IMPLEMENTATION
register the type of the out param - postgresql uses types.other	WITHOUT_CLASSIFICATION	0.9999962376100836	WITHOUT_CLASSIFICATION	3.7623899164175763E-6	IMPLEMENTATION
seems to not really public boolean supportsrowvalueconstructorsyntax() { return true }	WITHOUT_CLASSIFICATION	0.9998228513606526	WITHOUT_CLASSIFICATION	1.7714863934742008E-4	IMPLEMENTATION
seems to have spotty lob suppport	WITHOUT_CLASSIFICATION	0.9999506198114405	WITHOUT_CLASSIFICATION	4.9380188559550405E-5	IMPLEMENTATION
hhh-2300	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
ignore (probably h2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9993436266468748	WITHOUT_CLASSIFICATION	6.563733531251189E-4	IMPLEMENTATION
numeric functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999171417001673	WITHOUT_CLASSIFICATION	8.28582998326468E-5	IMPLEMENTATION
string functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999881216861817	WITHOUT_CLASSIFICATION	1.1878313818293519E-5	IMPLEMENTATION
time and date functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999291823752772	WITHOUT_CLASSIFICATION	7.081762472279739E-5	IMPLEMENTATION
system functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999217469824129	WITHOUT_CLASSIFICATION	7.825301758716755E-5	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9996540371323072	WITHOUT_CLASSIFICATION	3.45962867692873E-4	IMPLEMENTATION
23000 check constraint violation {0} 23001 unique index or primary key violation {0}	WITHOUT_CLASSIFICATION	0.9996765720533749	WITHOUT_CLASSIFICATION	3.234279466251626E-4	IMPLEMENTATION
display the dialect version.	WITHOUT_CLASSIFICATION	0.9999955317289606	WITHOUT_CLASSIFICATION	4.468271039327252E-6	IMPLEMENTATION
the rdms concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999690493665919	WITHOUT_CLASSIFICATION	3.095063340811796E-5	IMPLEMENTATION
dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999557017840173	WITHOUT_CLASSIFICATION	4.4298215982739E-5	IMPLEMENTATION
original dialect.java returns " for update"	WITHOUT_CLASSIFICATION	0.999900787787188	WITHOUT_CLASSIFICATION	9.921221281201569E-5	IMPLEMENTATION
verify the state of this new method in hibernate 3.0 dialect.java	WITHOUT_CLASSIFICATION	0.9999994685279767	WITHOUT_CLASSIFICATION	5.314720233392573E-7	IMPLEMENTATION
origial dialect.java returns true	WITHOUT_CLASSIFICATION	0.9999657131094816	WITHOUT_CLASSIFICATION	3.4286890518529445E-5	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999707338849124	WITHOUT_CLASSIFICATION	2.926611508762075E-5	IMPLEMENTATION
sequence methods - start. the rdms dialect needs these	WITHOUT_CLASSIFICATION	0.9999805236420456	WITHOUT_CLASSIFICATION	1.947635795440901E-5	IMPLEMENTATION
methods to make it possible to use the native id generator	WITHOUT_CLASSIFICATION	0.9975017759581839	WITHOUT_CLASSIFICATION	0.0024982240418160943	IMPLEMENTATION
the where clause was added to eliminate this statement from brute force searches.	WITHOUT_CLASSIFICATION	0.9999897272601664	WITHOUT_CLASSIFICATION	1.0272739833495225E-5	IMPLEMENTATION
sequence methods - end	WITHOUT_CLASSIFICATION	0.9999662837404528	WITHOUT_CLASSIFICATION	3.371625954717299E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999800053845151	WITHOUT_CLASSIFICATION	1.9994615484828213E-5	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9993573934407629	WITHOUT_CLASSIFICATION	6.426065592370748E-4	IMPLEMENTATION
used with drop table to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999966000726965	WITHOUT_CLASSIFICATION	3.3999273033393624E-6	IMPLEMENTATION
rdms supports the union all clause.	WITHOUT_CLASSIFICATION	0.9998876178908271	WITHOUT_CLASSIFICATION	1.1238210917288335E-4	IMPLEMENTATION
rdms has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.999999459813824	WITHOUT_CLASSIFICATION	5.401861760306655E-7	IMPLEMENTATION
multi-param dialect functions	WITHOUT_CLASSIFICATION	0.9999824927521688	WITHOUT_CLASSIFICATION	1.7507247831233332E-5	IMPLEMENTATION
function templates	WITHOUT_CLASSIFICATION	0.9999771807250676	WITHOUT_CLASSIFICATION	2.2819274932388734E-5	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9996540371323072	WITHOUT_CLASSIFICATION	3.45962867692873E-4	IMPLEMENTATION
this assumes schema support which is present in 1.8.0 and later	WITHOUT_CLASSIFICATION	0.9999501711801577	WITHOUT_CLASSIFICATION	4.982881984242066E-5	IMPLEMENTATION
hsqldb only supports read_uncommitted transaction isolation	WITHOUT_CLASSIFICATION	0.9999195159502127	WITHOUT_CLASSIFICATION	8.048404978743303E-5	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999884324431211	WITHOUT_CLASSIFICATION	1.156755687891493E-5	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.999919309264705	WITHOUT_CLASSIFICATION	8.069073529503154E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9998538248636502	WITHOUT_CLASSIFICATION	1.4617513634992271E-4	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999778511863557	WITHOUT_CLASSIFICATION	2.2148813644310854E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9998986944975785	WITHOUT_CLASSIFICATION	1.0130550242151762E-4	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999990427685176	WITHOUT_CLASSIFICATION	9.572314823689567E-7	IMPLEMENTATION
timesten has no blob/clob support but these types may be suitable for some applications. the length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999982168539946	WITHOUT_CLASSIFICATION	1.7831460054220086E-6	IMPLEMENTATION
new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999982397518776	WITHOUT_CLASSIFICATION	1.7602481223528786E-6	IMPLEMENTATION
public boolean supportsforupdatenowait() {return false}	WITHOUT_CLASSIFICATION	0.9999974353224707	WITHOUT_CLASSIFICATION	2.564677529416798E-6	IMPLEMENTATION
timesten has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.999999457834079	WITHOUT_CLASSIFICATION	5.421659210159894E-7	IMPLEMENTATION
iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999705325995586	WITHOUT_CLASSIFICATION	2.9467400441485866E-5	IMPLEMENTATION
add new ordered map	WITHOUT_CLASSIFICATION	0.9999594859010864	WITHOUT_CLASSIFICATION	4.051409891360101E-5	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" )	WITHOUT_CLASSIFICATION	0.999948040651606	WITHOUT_CLASSIFICATION	5.1959348394096756E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999790945674953	WITHOUT_CLASSIFICATION	2.090543250461849E-5	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999522508541671	WITHOUT_CLASSIFICATION	4.7749145832865315E-5	IMPLEMENTATION
return "select current_timestamp from rdb$database"	WITHOUT_CLASSIFICATION	0.9999913716095753	WITHOUT_CLASSIFICATION	8.628390424650398E-6	IMPLEMENTATION
registercolumntype data types	WITHOUT_CLASSIFICATION	0.9999916007714728	WITHOUT_CLASSIFICATION	8.399228527214393E-6	IMPLEMENTATION
hibernate seems to ignore this type	WITHOUT_CLASSIFICATION	0.999766403081902	WITHOUT_CLASSIFICATION	2.3359691809805044E-4	IMPLEMENTATION
ibid for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999790346111374	WITHOUT_CLASSIFICATION	2.096538886268116E-5	IMPLEMENTATION
tell hibernate to use getbytes instead of getbinarystream	WITHOUT_CLASSIFICATION	0.9999500118350733	WITHOUT_CLASSIFICATION	4.998816492679708E-5	IMPLEMENTATION
no batch statements	WITHOUT_CLASSIFICATION	0.999985014414067	WITHOUT_CLASSIFICATION	1.4985585933011445E-5	IMPLEMENTATION
we might want a special case for 192. this is very common for money types and here it is converted to 181	WITHOUT_CLASSIFICATION	0.9981719703462336	WITHOUT_CLASSIFICATION	0.001828029653766396	IMPLEMENTATION
no pointbase bit	WITHOUT_CLASSIFICATION	0.9999866097715684	WITHOUT_CLASSIFICATION	1.33902284316544E-5	IMPLEMENTATION
no pointbase tinyint	WITHOUT_CLASSIFICATION	0.9999864448029719	WITHOUT_CLASSIFICATION	1.355519702810259E-5	IMPLEMENTATION
pointbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999994598854285	WITHOUT_CLASSIFICATION	5.401145714778228E-7	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999800053845151	WITHOUT_CLASSIFICATION	1.9994615484828213E-5	IMPLEMENTATION
the current_timestamp is more accurate but only known to be supported in sql server 7.0 and later (i.e. sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.999970043248766	WITHOUT_CLASSIFICATION	2.995675123387332E-5	IMPLEMENTATION
sql server (at least up through 2005) does not support defining cascade delete constraints which can circel back to the mutating table	WITHOUT_CLASSIFICATION	0.9987193607386231	WITHOUT_CLASSIFICATION	0.0012806392613768191	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9948661811616615	WITHOUT_CLASSIFICATION	0.005133818838338551	IMPLEMENTATION
registercolumntype( types.blob 16777215 "mediumblob" ) registercolumntype( types.blob 65535 "blob" )	WITHOUT_CLASSIFICATION	0.999948040651606	WITHOUT_CLASSIFICATION	5.1959348394096845E-5	IMPLEMENTATION
registercolumntype( types.clob 16777215 "mediumtext" ) registercolumntype( types.clob 65535 "text" )	WITHOUT_CLASSIFICATION	0.999948265136539	WITHOUT_CLASSIFICATION	5.173486346108324E-5	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" ) registercolumntype( types.varchar 65535 "text" )	WITHOUT_CLASSIFICATION	0.999948265136539	WITHOUT_CLASSIFICATION	5.1734863461083134E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999800053845151	WITHOUT_CLASSIFICATION	1.9994615484828213E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999597378473438	WITHOUT_CLASSIFICATION	4.0262152656179196E-5	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999522508541671	WITHOUT_CLASSIFICATION	4.7749145832865315E-5	IMPLEMENTATION
sybase bit type does not support null values	WITHOUT_CLASSIFICATION	0.999927220452515	WITHOUT_CLASSIFICATION	7.277954748491246E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999790945674953	WITHOUT_CLASSIFICATION	2.090543250461849E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999882236004012	WITHOUT_CLASSIFICATION	1.1776399598837E-5	IMPLEMENTATION
not null (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.999118043879606	WITHOUT_CLASSIFICATION	8.819561203938874E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999996259125903	WITHOUT_CLASSIFICATION	3.740874098162574E-7	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999884324431211	WITHOUT_CLASSIFICATION	1.156755687891493E-5	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.999919309264705	WITHOUT_CLASSIFICATION	8.069073529503154E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9998538248636502	WITHOUT_CLASSIFICATION	1.4617513634992271E-4	IMPLEMENTATION
add another (inner) nested select add the main query close off the inner nested select	WITHOUT_CLASSIFICATION	0.999992132785141	WITHOUT_CLASSIFICATION	7.867214858946984E-6	IMPLEMENTATION
add the main query	WITHOUT_CLASSIFICATION	0.9999145242698033	WITHOUT_CLASSIFICATION	8.547573019666335E-5	IMPLEMENTATION
add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999820024704589	WITHOUT_CLASSIFICATION	1.7997529541149832E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999790945674953	WITHOUT_CLASSIFICATION	2.090543250461849E-5	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999882236004012	WITHOUT_CLASSIFICATION	1.1776399598837E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999800053845151	WITHOUT_CLASSIFICATION	1.9994615484828213E-5	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999778511863557	WITHOUT_CLASSIFICATION	2.2148813644310854E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9998986944975785	WITHOUT_CLASSIFICATION	1.0130550242151762E-4	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999990427685176	WITHOUT_CLASSIFICATION	9.572314823689567E-7	IMPLEMENTATION
features which change between 8i 9i and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999990166452055	WITHOUT_CLASSIFICATION	9.833547944919595E-6	IMPLEMENTATION
features which remain constant across 8i 9i and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999654196883209	WITHOUT_CLASSIFICATION	3.458031167903976E-5	IMPLEMENTATION
binary %stream character %stream	WITHOUT_CLASSIFICATION	0.9999409765313673	WITHOUT_CLASSIFICATION	5.902346863272471E-5	IMPLEMENTATION
getdefaultproperties().setproperty(environment.statement_batch_size no_batch)	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
hibernate impelemnts cast in dialect.java	WITHOUT_CLASSIFICATION	0.9999971785424191	WITHOUT_CLASSIFICATION	2.821457580948881E-6	IMPLEMENTATION
aggregate functions shouldn't be registered right? registerfunction( "list" new standardsqlfunction("list"hibernate.string) ) stopped on $list	WITHOUT_CLASSIFICATION	0.9987079764228044	WITHOUT_CLASSIFICATION	0.0012920235771955997	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993705103623466	WITHOUT_CLASSIFICATION	6.294896376534836E-4	IMPLEMENTATION
below is for cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.999998247707528	WITHOUT_CLASSIFICATION	1.7522924719869103E-6	IMPLEMENTATION
note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999849761107181	WITHOUT_CLASSIFICATION	1.5023889281862463E-5	IMPLEMENTATION
%upper is deprecated	WITHOUT_CLASSIFICATION	0.9999842374622802	WITHOUT_CLASSIFICATION	1.5762537719894296E-5	IMPLEMENTATION
the syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.999964725759184	WITHOUT_CLASSIFICATION	3.52742408158367E-5	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994175281604629	WITHOUT_CLASSIFICATION	5.824718395371175E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994447624157726	WITHOUT_CLASSIFICATION	5.552375842274359E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995561992343645	WITHOUT_CLASSIFICATION	4.438007656355115E-4	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
the syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999612072512102	WITHOUT_CLASSIFICATION	3.879274878978717E-5	IMPLEMENTATION
completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999837017238049	WITHOUT_CLASSIFICATION	1.6298276195094626E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994559827606528	WITHOUT_CLASSIFICATION	5.44017239347254E-4	IMPLEMENTATION
limit support (ala top) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997022524366599	WITHOUT_CLASSIFICATION	2.9774756334019286E-4	IMPLEMENTATION
intersystems cache' does not current support "select for update" syntax set your transaction mode to read_committed before using	WITHOUT_CLASSIFICATION	0.999599297017469	WITHOUT_CLASSIFICATION	4.007029825309893E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
<string>	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990841316632619	WITHOUT_CLASSIFICATION	9.158683367381269E-4	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993705103623466	WITHOUT_CLASSIFICATION	6.294896376534836E-4	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999707338849124	WITHOUT_CLASSIFICATION	2.926611508762075E-5	IMPLEMENTATION
does the limit clause come at the start of the select statement rather than at the end?	WITHOUT_CLASSIFICATION	0.999998562302135	WITHOUT_CLASSIFICATION	1.4376978649877237E-6	IMPLEMENTATION
does the limit clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999993807744143	WITHOUT_CLASSIFICATION	6.192255857952368E-7	IMPLEMENTATION
the name of the sql function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999974853002013	WITHOUT_CLASSIFICATION	2.514699798656824E-6	IMPLEMENTATION
create an outerjoingenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999935951394998	WITHOUT_CLASSIFICATION	6.404860500111347E-6	IMPLEMENTATION
the keyword used to insert a row without specifying any column values	WITHOUT_CLASSIFICATION	0.999998895048982	WITHOUT_CLASSIFICATION	1.1049510179282826E-6	IMPLEMENTATION
registerfunction( "trim" new standardsqlfunction( "trim" hibernate.string ) )	WITHOUT_CLASSIFICATION	0.9999630619864356	WITHOUT_CLASSIFICATION	3.6938013564515184E-5	IMPLEMENTATION
skip the from keyword in params	WITHOUT_CLASSIFICATION	0.9999979177629728	WITHOUT_CLASSIFICATION	2.0822370273058677E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999218141351409	WITHOUT_CLASSIFICATION	7.818586485903004E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999917822458999	WITHOUT_CLASSIFICATION	8.217754100062831E-6	IMPLEMENTATION
sqlfunction implementation	WITHOUT_CLASSIFICATION	0.9998753235568373	WITHOUT_CLASSIFICATION	1.2467644316269835E-4	IMPLEMENTATION
conceivable that the dialect ctor could throw hibernateexceptions so don't re-wrap	WITHOUT_CLASSIFICATION	0.9998933313284376	WITHOUT_CLASSIFICATION	1.0666867156234556E-4	IMPLEMENTATION
register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999816113653347	WITHOUT_CLASSIFICATION	1.8388634665231544E-5	IMPLEMENTATION
register resolvers set via environment property	WITHOUT_CLASSIFICATION	0.9999596707272805	WITHOUT_CLASSIFICATION	4.032927271934465E-5	IMPLEMENTATION
kept for backward compatibility until after the 3.1beta5 release of ha	WITHOUT_CLASSIFICATION	0.9999533244464305	WITHOUT_CLASSIFICATION	4.667555356943123E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9999611053801726	WITHOUT_CLASSIFICATION	3.8894619827469384E-5	IMPLEMENTATION
the cascadingaction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999966785464859	WITHOUT_CLASSIFICATION	3.3214535141122134E-5	IMPLEMENTATION
the cascadingaction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999954195913482	WITHOUT_CLASSIFICATION	4.5804086517939525E-5	IMPLEMENTATION
delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999955755728567	WITHOUT_CLASSIFICATION	4.424427143280611E-6	IMPLEMENTATION
orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9997837983399674	WITHOUT_CLASSIFICATION	2.1620166003247484E-4	IMPLEMENTATION
(lockmode) anything	WITHOUT_CLASSIFICATION	0.9999314436313905	WITHOUT_CLASSIFICATION	6.855636860955457E-5	IMPLEMENTATION
lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999896119581723	WITHOUT_CLASSIFICATION	1.03880418277483E-5	IMPLEMENTATION
refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998960294228287	WITHOUT_CLASSIFICATION	1.0397057717122986E-4	IMPLEMENTATION
evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998644962577177	WITHOUT_CLASSIFICATION	1.3550374228229076E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999737870611612	WITHOUT_CLASSIFICATION	2.621293883874997E-5	IMPLEMENTATION
orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9998270977688495	WITHOUT_CLASSIFICATION	1.729022311505151E-4	IMPLEMENTATION
for deprecated saveorupdatecopy()	WITHOUT_CLASSIFICATION	0.9999829725990002	WITHOUT_CLASSIFICATION	1.702740099984829E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998645189377698	WITHOUT_CLASSIFICATION	1.354810622301494E-4	IMPLEMENTATION
a proxy cannot be transient and it breaks foreignkeys.istransient	WITHOUT_CLASSIFICATION	0.9999990319465212	WITHOUT_CLASSIFICATION	9.68053478875393E-7	IMPLEMENTATION
replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999964618177632	WITHOUT_CLASSIFICATION	3.538182236732467E-6	IMPLEMENTATION
static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999888897619883	WITHOUT_CLASSIFICATION	1.1110238011717466E-5	IMPLEMENTATION
handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999594127495142	WITHOUT_CLASSIFICATION	4.058725048578825E-5	IMPLEMENTATION
actually the semantics of the next three are really "bag" note that unlike objects collection insertions updates deletions are not really remembered between flushes. we just re-use the same lists for convenience.	WITHOUT_CLASSIFICATION	0.9999866039778453	WITHOUT_CLASSIFICATION	1.3396022154573586E-5	IMPLEMENTATION
add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999760289172456	WITHOUT_CLASSIFICATION	2.3971082754367084E-5	IMPLEMENTATION
continue loop	WITHOUT_CLASSIFICATION	0.9999934001947651	WITHOUT_CLASSIFICATION	6.599805234925484E-6	IMPLEMENTATION
sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999679103798812	WITHOUT_CLASSIFICATION	3.2089620118811096E-5	IMPLEMENTATION
sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999804848355868	WITHOUT_CLASSIFICATION	1.9515164413235026E-5	IMPLEMENTATION
the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999919844709761	WITHOUT_CLASSIFICATION	8.015529023906137E-6	IMPLEMENTATION
the map of batch numbers to entityinsertaction lists	WITHOUT_CLASSIFICATION	0.9999919932938159	WITHOUT_CLASSIFICATION	8.006706184118219E-6	IMPLEMENTATION
optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9998323878841073	WITHOUT_CLASSIFICATION	1.676121158927316E-4	IMPLEMENTATION
the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999344675416193	WITHOUT_CLASSIFICATION	6.553245838072626E-5	IMPLEMENTATION
remove the current element from insertions. it will be added back later.	WITHOUT_CLASSIFICATION	0.9999999293118648	WITHOUT_CLASSIFICATION	7.068813523559293E-8	IMPLEMENTATION
the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999399672331314	WITHOUT_CLASSIFICATION	6.0032766868560994E-5	IMPLEMENTATION
there is already an existing batch for this type of entity. check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999998854046743	WITHOUT_CLASSIFICATION	1.1459532561686182E-7	IMPLEMENTATION
now rebuild the insertions list. there is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999989508172368	WITHOUT_CLASSIFICATION	1.0491827631668683E-6	IMPLEMENTATION
the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999962760308732	WITHOUT_CLASSIFICATION	3.723969126724662E-6	IMPLEMENTATION
loop through all the associations of the current entity and make sure that they are processed before the current batch number	WITHOUT_CLASSIFICATION	0.9999951481253523	WITHOUT_CLASSIFICATION	4.8518746477037795E-6	IMPLEMENTATION
find the batch number associated with the current association if any.	WITHOUT_CLASSIFICATION	0.9999768922029786	WITHOUT_CLASSIFICATION	2.310779702144932E-5	IMPLEMENTATION
create a new batch for this type. the batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999992125601697	WITHOUT_CLASSIFICATION	7.874398303240197E-7	IMPLEMENTATION
loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999514945675351	WITHOUT_CLASSIFICATION	4.8505432464845744E-5	IMPLEMENTATION
since this entity will now be processed in the latest possible batch we can be assured that it will come after all other associations there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9406072816746676	WITHOUT_CLASSIFICATION	0.0593927183253325	IMPLEMENTATION
cascade to current collection elements	WITHOUT_CLASSIFICATION	0.999944916014012	WITHOUT_CLASSIFICATION	5.508398598797443E-5	IMPLEMENTATION
not really necessary but good for consistency	WITHOUT_CLASSIFICATION	0.9998048064968396	WITHOUT_CLASSIFICATION	1.9519350316044305E-4	IMPLEMENTATION
we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999533092262526	WITHOUT_CLASSIFICATION	4.669077374739555E-5	IMPLEMENTATION
a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9996382213090432	WITHOUT_CLASSIFICATION	3.6177869095676407E-4	IMPLEMENTATION
handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9998001649023512	WITHOUT_CLASSIFICATION	1.9983509764881028E-4	IMPLEMENTATION
loaded entity instances by entityuniquekey	WITHOUT_CLASSIFICATION	0.9999888224936253	WITHOUT_CLASSIFICATION	1.1177506374758173E-5	IMPLEMENTATION
identity map of entityentry instances by the entity instance	WITHOUT_CLASSIFICATION	0.9999947915262677	WITHOUT_CLASSIFICATION	5.208473732278059E-6	IMPLEMENTATION
entity proxies by entitykey	WITHOUT_CLASSIFICATION	0.999990203567931	WITHOUT_CLASSIFICATION	9.796432069041462E-6	IMPLEMENTATION
snapshots of current database state for entities that have not been loaded	WITHOUT_CLASSIFICATION	0.998676041339626	WITHOUT_CLASSIFICATION	0.00132395866037397	IMPLEMENTATION
identity map of array holder arrayholder instances by the array instance	WITHOUT_CLASSIFICATION	0.9999993289154668	WITHOUT_CLASSIFICATION	6.710845332712E-7	IMPLEMENTATION
collection wrappers by the collectionkey key=collectionkey value=persistentcollection	WITHOUT_CLASSIFICATION	0.9999817253713434	WITHOUT_CLASSIFICATION	1.8274628656521183E-5	IMPLEMENTATION
set of entitykeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999666582708232	WITHOUT_CLASSIFICATION	3.3341729176683055E-5	IMPLEMENTATION
properties that we have tried to load and not found in the database	WITHOUT_CLASSIFICATION	0.9919270048597189	WITHOUT_CLASSIFICATION	0.008072995140281234	IMPLEMENTATION
a list of collection wrappers that were instantiating during result set processing that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999909522372746	WITHOUT_CLASSIFICATION	9.047762725304517E-6	IMPLEMENTATION
a container for collections we load up when the owning entity is not yet loaded for now this is purely transient!	WITHOUT_CLASSIFICATION	0.9970445086818563	WITHOUT_CLASSIFICATION	0.0029554913181436284	IMPLEMENTATION
downgrade locks	WITHOUT_CLASSIFICATION	0.9998992865318405	WITHOUT_CLASSIFICATION	1.0071346815952385E-4	IMPLEMENTATION
any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999925434157302	WITHOUT_CLASSIFICATION	7.456584269936246E-6	IMPLEMENTATION
unwrap the object	WITHOUT_CLASSIFICATION	0.9999947118507402	WITHOUT_CLASSIFICATION	5.288149259832809E-6	IMPLEMENTATION
initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999975611220575	WITHOUT_CLASSIFICATION	2.438877942532178E-6	IMPLEMENTATION
return the proxied object	WITHOUT_CLASSIFICATION	0.999996927263699	WITHOUT_CLASSIFICATION	3.0727363009951267E-6	IMPLEMENTATION
overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999951474977737	WITHOUT_CLASSIFICATION	4.852502226217829E-6	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999652242820297	WITHOUT_CLASSIFICATION	3.4775717970243735E-5	IMPLEMENTATION
or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999793516377288	WITHOUT_CLASSIFICATION	2.0648362271216653E-5	IMPLEMENTATION
treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9992705657257656	WITHOUT_CLASSIFICATION	7.294342742344077E-4	IMPLEMENTATION
do this work only at the very highest level of the load don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.999959385890588	WITHOUT_CLASSIFICATION	4.061410941196525E-5	IMPLEMENTATION
note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999984607443175	WITHOUT_CLASSIFICATION	1.539255682521929E-6	IMPLEMENTATION
it might be an unwrapped collection reference! try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999495934668672	WITHOUT_CLASSIFICATION	5.040653313289597E-5	IMPLEMENTATION
public boolean isnonexistant(entitykey key) {return nonexistantentitykeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999974350629685	WITHOUT_CLASSIFICATION	2.56493703157188E-6	IMPLEMENTATION
public boolean isnonexistant(entityuniquekey key) {return nonexistententityuniquekeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999974350629685	WITHOUT_CLASSIFICATION	2.56493703157188E-6	IMPLEMENTATION
iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999908761144035	WITHOUT_CLASSIFICATION	9.123885596532455E-6	IMPLEMENTATION
does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999997015035251	WITHOUT_CLASSIFICATION	2.984964748549405E-7	IMPLEMENTATION
check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.99999835272525	WITHOUT_CLASSIFICATION	1.6472747500602494E-6	IMPLEMENTATION
otherwise the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.999989975727261	WITHOUT_CLASSIFICATION	1.0024272739029036E-5	IMPLEMENTATION
adds remove as a sort-of alias for delete	WITHOUT_CLASSIFICATION	0.9999971378857533	WITHOUT_CLASSIFICATION	2.862114246797667E-6	IMPLEMENTATION
bad cast	WITHOUT_CLASSIFICATION	0.9999628064429236	WITHOUT_CLASSIFICATION	3.719355707640902E-5	IMPLEMENTATION
return lhspersister.getsubclasspropertycolumnnames(property)	WITHOUT_CLASSIFICATION	0.9999674950483245	WITHOUT_CLASSIFICATION	3.250495167551648E-5	IMPLEMENTATION
property-refs for associations defined on a component are not supported so no need to slice	WITHOUT_CLASSIFICATION	0.9999585192683659	WITHOUT_CLASSIFICATION	4.148073163412482E-5	IMPLEMENTATION
if there is no property-ref assume the join is to the subclass table (ie. the table of the subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999998473225498	WITHOUT_CLASSIFICATION	1.5267745017757747E-7	IMPLEMENTATION
handle a property-ref	WITHOUT_CLASSIFICATION	0.9998376443049087	WITHOUT_CLASSIFICATION	1.6235569509125733E-4	IMPLEMENTATION
nativesqlqueryreturn	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999934872379849	WITHOUT_CLASSIFICATION	6.512762015200989E-6	IMPLEMENTATION
why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999648982536841	WITHOUT_CLASSIFICATION	3.510174631594004E-5	IMPLEMENTATION
this.forcecacherefresh = forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999386224832104	WITHOUT_CLASSIFICATION	6.137751678960006E-5	IMPLEMENTATION
hella important optimization!!!	WITHOUT_CLASSIFICATION	0.9999484403353037	WITHOUT_CLASSIFICATION	5.155966469612839E-5	IMPLEMENTATION
return that.type.equals(type) && equalshelper.equals(that.value value)	WITHOUT_CLASSIFICATION	0.9999680353805324	WITHOUT_CLASSIFICATION	3.196461946770543E-5	IMPLEMENTATION
must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999609386456622	WITHOUT_CLASSIFICATION	3.906135433783209E-5	IMPLEMENTATION
take a snapshot	WITHOUT_CLASSIFICATION	0.9999759872042402	WITHOUT_CLASSIFICATION	2.4012795759791645E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9998894133914032	WITHOUT_CLASSIFICATION	1.1058660859667627E-4	IMPLEMENTATION
the owning entity may have been deleted and its identifier unset due to identifier-rollback in which case try to look up its identifier from the persistence context	WITHOUT_CLASSIFICATION	0.9990258824750854	WITHOUT_CLASSIFICATION	9.741175249145342E-4	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9999319691605282	WITHOUT_CLASSIFICATION	6.803083947179068E-5	IMPLEMENTATION
we've been here before	WITHOUT_CLASSIFICATION	0.9999418347666218	WITHOUT_CLASSIFICATION	5.8165233378289604E-5	IMPLEMENTATION
it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999998903231148	WITHOUT_CLASSIFICATION	1.0967688524580153E-7	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9999319691605282	WITHOUT_CLASSIFICATION	6.803083947179068E-5	IMPLEMENTATION
if either its role changed	WITHOUT_CLASSIFICATION	0.9999997674779052	WITHOUT_CLASSIFICATION	2.325220948568266E-7	IMPLEMENTATION
or its key changed	WITHOUT_CLASSIFICATION	0.9999975365245783	WITHOUT_CLASSIFICATION	2.4634754216360628E-6	IMPLEMENTATION
we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999410231974739	WITHOUT_CLASSIFICATION	5.897680252610402E-5	IMPLEMENTATION
we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9999284256936075	WITHOUT_CLASSIFICATION	7.157430639251485E-5	IMPLEMENTATION
force initialize!	WITHOUT_CLASSIFICATION	0.9997785241248559	WITHOUT_CLASSIFICATION	2.2147587514411137E-4	IMPLEMENTATION
else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999994104057542	WITHOUT_CLASSIFICATION	5.895942457391401E-7	IMPLEMENTATION
attributes maintained between flush cycles	WITHOUT_CLASSIFICATION	0.9999698830289724	WITHOUT_CLASSIFICATION	3.011697102764787E-5	IMPLEMENTATION
session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999922085177875	WITHOUT_CLASSIFICATION	7.791482212627264E-6	IMPLEMENTATION
allow the collectionsnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999219765445805	WITHOUT_CLASSIFICATION	7.802345541948462E-5	IMPLEMENTATION
attributes used only during flush cycle	WITHOUT_CLASSIFICATION	0.9999941906527755	WITHOUT_CLASSIFICATION	5.809347224395706E-6	IMPLEMENTATION
"current" means the reference that was found during flush()	WITHOUT_CLASSIFICATION	0.999999918490757	WITHOUT_CLASSIFICATION	8.150924301443187E-8	IMPLEMENTATION
"loaded" means the reference that is consistent with the current database state	WITHOUT_CLASSIFICATION	0.9999986752004125	WITHOUT_CLASSIFICATION	1.3247995874978103E-6	IMPLEMENTATION
during flush we navigate the object graph to collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9997481700935156	WITHOUT_CLASSIFICATION	2.51829906484448E-4	IMPLEMENTATION
if we instantiate a collection during the flush() process we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.999995466274654	WITHOUT_CLASSIFICATION	4.53372534599186E-6	IMPLEMENTATION
new collections that get found + wrapped during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9979055745019036	WITHOUT_CLASSIFICATION	0.0020944254980963264	IMPLEMENTATION
a newly wrapped collection is not dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9966247914452516	WITHOUT_CLASSIFICATION	0.003375208554748327	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.999974115135964	WITHOUT_CLASSIFICATION	2.5884864035990164E-5	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.999974115135964	WITHOUT_CLASSIFICATION	2.5884864035990164E-5	IMPLEMENTATION
detached collections that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9969133552976658	WITHOUT_CLASSIFICATION	0.0030866447023341144	IMPLEMENTATION
optimization	WITHOUT_CLASSIFICATION	0.9999700364805322	WITHOUT_CLASSIFICATION	2.996351946772041E-5	IMPLEMENTATION
optimization optimization	WITHOUT_CLASSIFICATION	0.9999807504121352	WITHOUT_CLASSIFICATION	1.9249587864776096E-5	IMPLEMENTATION
re-snapshot	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999590065230098	WITHOUT_CLASSIFICATION	4.099347699016007E-5	IMPLEMENTATION
note this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9992077199634049	WITHOUT_CLASSIFICATION	7.922800365951934E-4	IMPLEMENTATION
memory optimization	WITHOUT_CLASSIFICATION	0.999940213624166	WITHOUT_CLASSIFICATION	5.978637583402027E-5	IMPLEMENTATION
use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999005841745362	WITHOUT_CLASSIFICATION	9.941582546377289E-5	IMPLEMENTATION
copied from session	WITHOUT_CLASSIFICATION	0.9999397262068729	WITHOUT_CLASSIFICATION	6.0273793127139984E-5	IMPLEMENTATION
this should not happen since the dtd prevents it	WITHOUT_CLASSIFICATION	0.9975486002500522	WITHOUT_CLASSIFICATION	0.0024513997499477588	IMPLEMENTATION
joinprocessor needs to know if the where clause fragment came from a dynamic filter or not so it can put the where clause fragment in the right place in the sql ast. 'hasfiltercondition' keeps track of that fact.	WITHOUT_CLASSIFICATION	0.6664208754338886	WITHOUT_CLASSIFICATION	0.3335791245661114	IMPLEMENTATION
the current join represents the join between a many-to-many association table and its "target" table. here we need to apply any additional filters defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9994820562001439	WITHOUT_CLASSIFICATION	5.179437998561496E-4	IMPLEMENTATION
check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9993201817384356	WITHOUT_CLASSIFICATION	6.798182615642628E-4	IMPLEMENTATION
values is not null and is checkable we'll look deeper	WITHOUT_CLASSIFICATION	0.9999644453214687	WITHOUT_CLASSIFICATION	3.5554678531224045E-5	IMPLEMENTATION
for non null args check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999797686109047	WITHOUT_CLASSIFICATION	2.023138909542842E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9999611053801726	WITHOUT_CLASSIFICATION	3.8894619827469384E-5	IMPLEMENTATION
persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999126988819308	WITHOUT_CLASSIFICATION	8.730111806918046E-5	IMPLEMENTATION
check for all components values in the collection	WITHOUT_CLASSIFICATION	0.999998800875755	WITHOUT_CLASSIFICATION	1.199124244951491E-6	IMPLEMENTATION
will check current level if some of them are not null or sublevels if they exist	WITHOUT_CLASSIFICATION	0.9998757281047747	WITHOUT_CLASSIFICATION	1.242718952252993E-4	IMPLEMENTATION
do the test	WITHOUT_CLASSIFICATION	0.9999948313295591	WITHOUT_CLASSIFICATION	5.168670440883176E-6	IMPLEMENTATION
if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999986318118254	WITHOUT_CLASSIFICATION	1.3681881745668694E-6	IMPLEMENTATION
unwrap it	WITHOUT_CLASSIFICATION	0.9999888801092037	WITHOUT_CLASSIFICATION	1.1119890796341267E-5	IMPLEMENTATION
see if the entity is already bound to this session if not look at the entity identifier and assume that the entity is persistent if the id is not "unsaved" (that is we rely on foreign keys to keep database integrity)	WITHOUT_CLASSIFICATION	0.9489382987086716	WITHOUT_CLASSIFICATION	0.05106170129132836	IMPLEMENTATION
an unfetched association can only point to an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999994620150754	WITHOUT_CLASSIFICATION	5.379849245560911E-7	IMPLEMENTATION
let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999766910303146	WITHOUT_CLASSIFICATION	2.330896968536441E-5	IMPLEMENTATION
let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999613889379922	WITHOUT_CLASSIFICATION	3.86110620078229E-5	IMPLEMENTATION
we use the assumed value if there is one to avoid hitting the database	WITHOUT_CLASSIFICATION	0.9999990827980884	WITHOUT_CLASSIFICATION	9.172019116271482E-7	IMPLEMENTATION
hit the database after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999408938247103	WITHOUT_CLASSIFICATION	5.9106175289781936E-5	IMPLEMENTATION
context-entity-identifier returns null explicitly if the entity is not associated with the persistence context so make some deeper checks	WITHOUT_CLASSIFICATION	0.9918489821799523	WITHOUT_CLASSIFICATION	0.00815101782004757	IMPLEMENTATION
int count = 0	WITHOUT_CLASSIFICATION	0.9999926786214133	WITHOUT_CLASSIFICATION	7.32137858672859E-6	IMPLEMENTATION
the first key found after the given key	WITHOUT_CLASSIFICATION	0.999960340963241	WITHOUT_CLASSIFICATION	3.965903675898876E-5	IMPLEMENTATION
checkforend = false	WITHOUT_CLASSIFICATION	0.9999032717530847	WITHOUT_CLASSIFICATION	9.672824691526441E-5	IMPLEMENTATION
count++	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999940142652642	WITHOUT_CLASSIFICATION	5.985734735750409E-6	IMPLEMENTATION
we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999676936313139	WITHOUT_CLASSIFICATION	3.2306368686079284E-5	IMPLEMENTATION
first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999997758070521	WITHOUT_CLASSIFICATION	2.241929478097994E-7	IMPLEMENTATION
the first id found after the given id	WITHOUT_CLASSIFICATION	0.9996546751132375	WITHOUT_CLASSIFICATION	3.453248867625239E-4	IMPLEMENTATION
we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999764901613185	WITHOUT_CLASSIFICATION	2.3509838681473633E-5	IMPLEMENTATION
look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999926279294118	WITHOUT_CLASSIFICATION	7.372070588143198E-6	IMPLEMENTATION
ignore this row of results! note the early exit	WITHOUT_CLASSIFICATION	0.9999064107546025	WITHOUT_CLASSIFICATION	9.358924539742309E-5	IMPLEMENTATION
initialize this collection	WITHOUT_CLASSIFICATION	0.9999093162138356	WITHOUT_CLASSIFICATION	9.068378616436685E-5	IMPLEMENTATION
create one	WITHOUT_CLASSIFICATION	0.9999854551793222	WITHOUT_CLASSIFICATION	1.4544820677823301E-5	IMPLEMENTATION
warning can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999895826451883	WITHOUT_CLASSIFICATION	1.0417354811691115E-5	IMPLEMENTATION
there were no queued additions and the role has a cache	WITHOUT_CLASSIFICATION	0.9999995433835073	WITHOUT_CLASSIFICATION	4.56616492677232E-7	IMPLEMENTATION
and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9981537385081577	WITHOUT_CLASSIFICATION	0.0018462614918423926	IMPLEMENTATION
some filters affecting the collection are enabled on the session so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.954050355983461	WITHOUT_CLASSIFICATION	0.04594964401653902	IMPLEMENTATION
cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999882423587817	WITHOUT_CLASSIFICATION	1.1757641218301957E-5	IMPLEMENTATION
loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999635485129941	WITHOUT_CLASSIFICATION	3.6451487005828934E-5	IMPLEMENTATION
collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999313528957614	WITHOUT_CLASSIFICATION	6.864710423865405E-5	IMPLEMENTATION
simple cache of param metadata based on query string. ideally the original "user-supplied query" string should be used to retreive this metadata (i.e. not the para-list-expanded query string) to avoid unnecessary cache entries. used solely for caching param metadata for native-sql queries see getsqlparametermetadata() for a discussion as to why	WITHOUT_CLASSIFICATION	0.9997734609272465	WITHOUT_CLASSIFICATION	2.265390727534689E-4	IMPLEMENTATION
the cache of the actual plans	WITHOUT_CLASSIFICATION	0.9999891876577189	WITHOUT_CLASSIFICATION	1.0812342281028913E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999218141351409	WITHOUT_CLASSIFICATION	7.818586485903004E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999218141351409	WITHOUT_CLASSIFICATION	7.818586485903004E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999967205777676	WITHOUT_CLASSIFICATION	3.2794222324449507E-6	IMPLEMENTATION
for native-sql queries the param metadata is determined outside any relation to a query plan because query plan creation and/or retreival for a native-sql query depends on all of the return types having been set which might not be the case up-front when param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9945658583712156	WITHOUT_CLASSIFICATION	0.005434141628784411	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999690424178619	WITHOUT_CLASSIFICATION	3.095758213805801E-5	IMPLEMENTATION
recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999704191691232	WITHOUT_CLASSIFICATION	2.9580830876733302E-5	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999690424178619	WITHOUT_CLASSIFICATION	3.095758213805801E-5	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999955836808486	WITHOUT_CLASSIFICATION	4.416319151318659E-6	IMPLEMENTATION
break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999955850478304	WITHOUT_CLASSIFICATION	4.414952169562768E-6	IMPLEMENTATION
named parameter	WITHOUT_CLASSIFICATION	0.9999939107777263	WITHOUT_CLASSIFICATION	6.089222273761316E-6	IMPLEMENTATION
could be either an ordinal or jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999991192831197	WITHOUT_CLASSIFICATION	8.807168802452925E-7	IMPLEMENTATION
a peek ahead showed this as an jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999959193693756	WITHOUT_CLASSIFICATION	4.080630624409887E-6	IMPLEMENTATION
make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999875467080821	WITHOUT_CLASSIFICATION	1.2453291917866862E-5	IMPLEMENTATION
pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999506615462158	WITHOUT_CLASSIFICATION	4.933845378411448E-5	IMPLEMENTATION
perform the actual work	WITHOUT_CLASSIFICATION	0.9999574124252871	WITHOUT_CLASSIFICATION	4.258757471283594E-5	IMPLEMENTATION
if everything went ok commit the transaction and close the obtained connection handle	WITHOUT_CLASSIFICATION	0.9997349357580494	WITHOUT_CLASSIFICATION	2.6506424195059126E-4	IMPLEMENTATION
at some point the processing went bad so we need to 1) make sure the connection handle gets released 2) try to cleanup the jta context as much as possible	WITHOUT_CLASSIFICATION	0.5537090144018364	WITHOUT_CLASSIFICATION	0.4462909855981635	IMPLEMENTATION
finally handle the exception	WITHOUT_CLASSIFICATION	0.999975992049271	WITHOUT_CLASSIFICATION	2.4007950729028774E-5	IMPLEMENTATION
a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9996625281625504	WITHOUT_CLASSIFICATION	3.374718374496454E-4	IMPLEMENTATION
saveorupdatecopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999883049924929	WITHOUT_CLASSIFICATION	1.1695007507101717E-5	IMPLEMENTATION
collectionpersister should not be null but we don't want to throw an exception if it is null	WITHOUT_CLASSIFICATION	0.9999987599642749	WITHOUT_CLASSIFICATION	1.240035725076647E-6	IMPLEMENTATION
otherwise a null or brand new collection this will also (inefficiently) handle arrays which have no snapshot so we can't do any better processarrayornewcollection(collection type)	WITHOUT_CLASSIFICATION	0.9984067962386073	WITHOUT_CLASSIFICATION	0.0015932037613926911	IMPLEMENTATION
a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9998807938481031	WITHOUT_CLASSIFICATION	1.1920615189680436E-4	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999963788358683	WITHOUT_CLASSIFICATION	3.6211641315856887E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999963788358683	WITHOUT_CLASSIFICATION	3.6211641315856887E-6	IMPLEMENTATION
force a substitution!	WITHOUT_CLASSIFICATION	0.9998843952037405	WITHOUT_CLASSIFICATION	1.1560479625949717E-4	IMPLEMENTATION
the user requested a "greater" (i.e. more restrictive) form of pessimistic lock	WITHOUT_CLASSIFICATION	0.9999798038360947	WITHOUT_CLASSIFICATION	2.019616390531889E-5	IMPLEMENTATION
the database now holds a lock + the object is flushed from the cache so release the soft lock	WITHOUT_CLASSIFICATION	0.9999997092376645	WITHOUT_CLASSIFICATION	2.907623355840194E-7	IMPLEMENTATION
now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999989796485389	WITHOUT_CLASSIFICATION	1.0203514611168944E-6	IMPLEMENTATION
search for collections by reachability updating their role. we don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.999966900282367	WITHOUT_CLASSIFICATION	3.3099717632930934E-5	IMPLEMENTATION
this is a situation where the entity id is assigned by a post-insert generator and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.999995536094549	WITHOUT_CLASSIFICATION	4.463905450865026E-6	IMPLEMENTATION
note we need to do the wrap here even if its not "dirty" because collections need wrapping but changes to _them_ don't dirty the container. also for versioned data we need to wrap before calling searchfordirtycollections	WITHOUT_CLASSIFICATION	0.9995161747870878	WITHOUT_CLASSIFICATION	4.838252129121663E-4	IMPLEMENTATION
grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999996673158155	WITHOUT_CLASSIFICATION	3.3268418453781555E-7	IMPLEMENTATION
grab its current state	WITHOUT_CLASSIFICATION	0.999991093492684	WITHOUT_CLASSIFICATION	8.906507315970512E-6	IMPLEMENTATION
schedule the update note that we intentionally do _not_ pass in currentpersistentstate!	WITHOUT_CLASSIFICATION	0.9999975813977824	WITHOUT_CLASSIFICATION	2.418602217566362E-6	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999993298521178	WITHOUT_CLASSIFICATION	6.701478821273693E-7	IMPLEMENTATION
give the interceptor a chance to process property values if the properties were modified by the interceptor we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999650051003526	WITHOUT_CLASSIFICATION	3.499489964748492E-5	IMPLEMENTATION
compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999782802412307	WITHOUT_CLASSIFICATION	2.1719758769267367E-5	IMPLEMENTATION
if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999998961172534	WITHOUT_CLASSIFICATION	1.038827466011376E-7	IMPLEMENTATION
increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9996677670474964	WITHOUT_CLASSIFICATION	3.322329525036822E-4	IMPLEMENTATION
check nullability but do not perform command execute we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999616806900783	WITHOUT_CLASSIFICATION	3.831930992171688E-5	IMPLEMENTATION
give the interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999728151644522	WITHOUT_CLASSIFICATION	2.71848355477554E-5	IMPLEMENTATION
now we might need to recalculate the dirtyproperties array	WITHOUT_CLASSIFICATION	0.9994247498268508	WITHOUT_CLASSIFICATION	5.75250173149213E-4	IMPLEMENTATION
use the current version	WITHOUT_CLASSIFICATION	0.9999191372084528	WITHOUT_CLASSIFICATION	8.086279154723458E-5	IMPLEMENTATION
interceptor returned null so do the dirtycheck ourself if possible	WITHOUT_CLASSIFICATION	0.9999991784749028	WITHOUT_CLASSIFICATION	8.215250971279806E-7	IMPLEMENTATION
object loaded by update()	WITHOUT_CLASSIFICATION	0.9999985689690053	WITHOUT_CLASSIFICATION	1.4310309948107955E-6	IMPLEMENTATION
dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9991592347820416	WITHOUT_CLASSIFICATION	8.407652179585069E-4	IMPLEMENTATION
dirty check against the database snapshot if possible/necessary	WITHOUT_CLASSIFICATION	0.9995204458937142	WITHOUT_CLASSIFICATION	4.795541062858243E-4	IMPLEMENTATION
the interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9929672813900453	WITHOUT_CLASSIFICATION	0.007032718609954693	IMPLEMENTATION
even process null collections	WITHOUT_CLASSIFICATION	0.9999957317577608	WITHOUT_CLASSIFICATION	4.268242239295786E-6	IMPLEMENTATION
get the id from the object	WITHOUT_CLASSIFICATION	0.9999984616351668	WITHOUT_CLASSIFICATION	1.538364833202669E-6	IMPLEMENTATION
always do an insert and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999950441852659	WITHOUT_CLASSIFICATION	4.9558147341559594E-6	IMPLEMENTATION
what is the version on the database?	WITHOUT_CLASSIFICATION	0.9988851644819261	WITHOUT_CLASSIFICATION	0.001114835518073872	IMPLEMENTATION
/ hhh-2378	WITHOUT_CLASSIFICATION	0.9999973860674544	WITHOUT_CLASSIFICATION	2.613932545623303E-6	IMPLEMENTATION
will result in a sql update	WITHOUT_CLASSIFICATION	0.9999999778846499	WITHOUT_CLASSIFICATION	2.2115350185696845E-8	IMPLEMENTATION
else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999922845940398	WITHOUT_CLASSIFICATION	7.715405960162279E-6	IMPLEMENTATION
no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999996104343983	WITHOUT_CLASSIFICATION	3.8956560163196736E-7	IMPLEMENTATION
refresh() does not pass an entityname	WITHOUT_CLASSIFICATION	0.9999242954347936	WITHOUT_CLASSIFICATION	7.570456520644658E-5	IMPLEMENTATION
do not return a proxy! (this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9877565439527176	WITHOUT_CLASSIFICATION	0.012243456047282416	IMPLEMENTATION
return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999716083967282	WITHOUT_CLASSIFICATION	2.8391603271884877E-5	IMPLEMENTATION
return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999979503394077	WITHOUT_CLASSIFICATION	2.04966059223149E-6	IMPLEMENTATION
return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999889233425839	WITHOUT_CLASSIFICATION	1.1076657416116922E-5	IMPLEMENTATION
this object was already loaded	WITHOUT_CLASSIFICATION	0.9999997257507128	WITHOUT_CLASSIFICATION	2.742492871937035E-7	IMPLEMENTATION
entity was found in second-level cache	WITHOUT_CLASSIFICATION	0.9999995493132922	WITHOUT_CLASSIFICATION	4.5068670786460606E-7	IMPLEMENTATION
make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9995886755414075	WITHOUT_CLASSIFICATION	4.1132445859252585E-4	IMPLEMENTATION
intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999955338803377	WITHOUT_CLASSIFICATION	4.466119662361978E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pre-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999676382757695	WITHOUT_CLASSIFICATION	3.2361724230566655E-5	IMPLEMENTATION
some statistics	WITHOUT_CLASSIFICATION	0.9998676745666795	WITHOUT_CLASSIFICATION	1.3232543332054088E-4	IMPLEMENTATION
safe from concurrent modification because of how entrylist() is implemented on identitymap	WITHOUT_CLASSIFICATION	0.9373614259552584	WITHOUT_CLASSIFICATION	0.06263857404474164	IMPLEMENTATION
initialize dirty flags for arrays + collections with composite elements and reset reached doupdate etc.	WITHOUT_CLASSIFICATION	0.9980053623027633	WITHOUT_CLASSIFICATION	0.00199463769723679	IMPLEMENTATION
among other things updatereachables() will recursively load all collections that are moving roles. this might cause entities to be loaded.	WITHOUT_CLASSIFICATION	0.9999585624906066	WITHOUT_CLASSIFICATION	4.143750939344728E-5	IMPLEMENTATION
so this needs to be safe from concurrent modification problems. it is safe because of how identitymap implements entryset()	WITHOUT_CLASSIFICATION	0.9999685701060476	WITHOUT_CLASSIFICATION	3.142989395239431E-5	IMPLEMENTATION
update the status of the object and if necessary schedule an update	WITHOUT_CLASSIFICATION	0.9999996963713571	WITHOUT_CLASSIFICATION	3.036286428940593E-7	IMPLEMENTATION
schedule updates to collections	WITHOUT_CLASSIFICATION	0.9999264755293638	WITHOUT_CLASSIFICATION	7.352447063624522E-5	IMPLEMENTATION
we need to lock the collection caches before executing entity inserts/updates in order to account for bidi associations	WITHOUT_CLASSIFICATION	0.9999906059009617	WITHOUT_CLASSIFICATION	9.394099038335284E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ post-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999676382757695	WITHOUT_CLASSIFICATION	3.2361724230566655E-5	IMPLEMENTATION
the database has changed now so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999949477339244	WITHOUT_CLASSIFICATION	5.05226607559341E-6	IMPLEMENTATION
if the collection is dereferenced remove from the session cache iter.remove() does not work since the entryset is not backed by the set	WITHOUT_CLASSIFICATION	0.9999990291081338	WITHOUT_CLASSIFICATION	9.708918662564318E-7	IMPLEMENTATION
otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9996248785156786	WITHOUT_CLASSIFICATION	3.751214843213387E-4	IMPLEMENTATION
get a snapshot	WITHOUT_CLASSIFICATION	0.9999922657525662	WITHOUT_CLASSIFICATION	7.734247433881504E-6	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999597378473438	WITHOUT_CLASSIFICATION	4.0262152656179196E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999597378473438	WITHOUT_CLASSIFICATION	4.0262152656179196E-5	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999991293657576	WITHOUT_CLASSIFICATION	8.706342422951276E-7	IMPLEMENTATION
early exit!!!	WITHOUT_CLASSIFICATION	0.9999766063429968	WITHOUT_CLASSIFICATION	2.3393657003188186E-5	IMPLEMENTATION
ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999991974033746	WITHOUT_CLASSIFICATION	8.025966253082E-7	IMPLEMENTATION
before any callbacks etc so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999998672778513	WITHOUT_CLASSIFICATION	1.327221488054415E-7	IMPLEMENTATION
ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999390950249194	WITHOUT_CLASSIFICATION	6.090497508063582E-5	IMPLEMENTATION
typefactory.deepcopy( currentstate proptypes persister.getpropertyupdateability() deletedstate session )	WITHOUT_CLASSIFICATION	0.9998493905099985	WITHOUT_CLASSIFICATION	1.506094900015569E-4	IMPLEMENTATION
cascade-delete to collections before the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999320548668175	WITHOUT_CLASSIFICATION	6.794513318247575E-5	IMPLEMENTATION
cascade-delete to many-to-one after the parent was deleted	WITHOUT_CLASSIFICATION	0.9999841287273025	WITHOUT_CLASSIFICATION	1.5871272697457E-5	IMPLEMENTATION
if it is an initialized proxy let cascade handle it later on	WITHOUT_CLASSIFICATION	0.9999828751212527	WITHOUT_CLASSIFICATION	1.712487874731621E-5	IMPLEMENTATION
assign the requested id to the proxy before reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999641070300467	WITHOUT_CLASSIFICATION	3.5892969953255126E-5	IMPLEMENTATION
an uninitialized proxy noop don't even need to return an id since it is never a save()	WITHOUT_CLASSIFICATION	0.999439176925248	WITHOUT_CLASSIFICATION	5.608230747521035E-4	IMPLEMENTATION
initialize properties of the event	WITHOUT_CLASSIFICATION	0.9999845212646143	WITHOUT_CLASSIFICATION	1.547873538565751E-5	IMPLEMENTATION
return the id in the event object	WITHOUT_CLASSIFICATION	0.9999967224577009	WITHOUT_CLASSIFICATION	3.277542299188892E-6	IMPLEMENTATION
transient or deleted	WITHOUT_CLASSIFICATION	0.999808961867531	WITHOUT_CLASSIFICATION	1.9103813246894446E-4	IMPLEMENTATION
use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9998075705768162	WITHOUT_CLASSIFICATION	1.9242942318366434E-4	IMPLEMENTATION
assume this is a newly instantiated transient object which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.99997142122563	WITHOUT_CLASSIFICATION	2.8578774370034587E-5	IMPLEMENTATION
this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999607255123273	WITHOUT_CLASSIFICATION	3.9274487672786136E-5	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9989714370904453	WITHOUT_CLASSIFICATION	0.0010285629095546148	IMPLEMENTATION
cachedstate	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
assume true since we don't really know and it doesn't matter	WITHOUT_CLASSIFICATION	0.9998641271454769	WITHOUT_CLASSIFICATION	1.3587285452313288E-4	IMPLEMENTATION
a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999789705711732	WITHOUT_CLASSIFICATION	2.1029428826650186E-5	IMPLEMENTATION
if the collection belonged to a different entity clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999841996035258	WITHOUT_CLASSIFICATION	1.5800396474229997E-5	IMPLEMENTATION
log.debug( "calling onload()" )	WITHOUT_CLASSIFICATION	0.9999480037932571	WITHOUT_CLASSIFICATION	5.199620674294662E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999866953910221	WITHOUT_CLASSIFICATION	1.3304608977874065E-5	IMPLEMENTATION
note performexecutions() clears all collectionxxxxtion collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999755331621224	WITHOUT_CLASSIFICATION	2.4466837877647746E-5	IMPLEMENTATION
if no array holder we found an unwrappered array (this can't occur because we now always call wrap() before getting to here) return (ah==null) ? true searchfordirtycollections(ah type)	WITHOUT_CLASSIFICATION	0.9999997957283222	WITHOUT_CLASSIFICATION	2.0427167778750084E-7	IMPLEMENTATION
if not wrappered yet its dirty (this can't occur because we now always call wrap() before getting to here) return ( ! (obj instanceof persistentcollection) ) ? true searchfordirtycollections( (persistentcollection) obj type )	WITHOUT_CLASSIFICATION	0.898125476625406	WITHOUT_CLASSIFICATION	0.10187452337459399	IMPLEMENTATION
we need to check even if it was not initialized because of delayed adds!	WITHOUT_CLASSIFICATION	0.9986630854416022	WITHOUT_CLASSIFICATION	0.0013369145583977948	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999931625181716	WITHOUT_CLASSIFICATION	6.837481828434374E-6	IMPLEMENTATION
find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999124324499497	WITHOUT_CLASSIFICATION	8.756755005035698E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999866953910221	WITHOUT_CLASSIFICATION	1.3304608977874065E-5	IMPLEMENTATION
check the persistence context for an entry relating to this entity to be merged	WITHOUT_CLASSIFICATION	0.99983945957661	WITHOUT_CLASSIFICATION	1.6054042338993995E-4	IMPLEMENTATION
we have specialized case of a detached entity from the perspective of the merge operation. specifically we have an incoming entity instance which has a corresponding entry in the current persistence context but registered under a different entity instance	WITHOUT_CLASSIFICATION	0.9999999453291666	WITHOUT_CLASSIFICATION	5.467083344818881E-8	IMPLEMENTATION
deleted	WITHOUT_CLASSIFICATION	0.9998781635522613	WITHOUT_CLASSIFICATION	1.2183644773867134E-4	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999819768513736	WITHOUT_CLASSIFICATION	1.802314862650529E-5	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy cascadeonmerge(event persister entity copycache cascades.cascade_before_merge)	WITHOUT_CLASSIFICATION	0.999999881838096	WITHOUT_CLASSIFICATION	1.181619039822724E-7	IMPLEMENTATION
this bit is only really absolutely necessary for handling requestedid but is also good if we merge multiple object graphs since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999999443723817	WITHOUT_CLASSIFICATION	5.562761838026456E-8	IMPLEMENTATION
continue we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.999780644305399	WITHOUT_CLASSIFICATION	2.1935569460098588E-4	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999999263457473	WITHOUT_CLASSIFICATION	7.36542526937439E-8	IMPLEMENTATION
check that entity id = requestedid	WITHOUT_CLASSIFICATION	0.9953475822282186	WITHOUT_CLASSIFICATION	0.004652417771781388	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999819768513736	WITHOUT_CLASSIFICATION	1.802314862650529E-5	IMPLEMENTATION
we got here because we assumed that an instance with an assigned id was detached when it was really persistent	WITHOUT_CLASSIFICATION	0.9999816152647255	WITHOUT_CLASSIFICATION	1.8384735274499166E-5	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999999263457473	WITHOUT_CLASSIFICATION	7.36542526937439E-8	IMPLEMENTATION
copyvalues works by reflection so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999041884296651	WITHOUT_CLASSIFICATION	9.581157033499339E-5	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999652242820297	WITHOUT_CLASSIFICATION	3.4775717970243735E-5	IMPLEMENTATION
source.getbatcher().executebatch() found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9997543876675834	WITHOUT_CLASSIFICATION	2.4561233241667457E-4	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999993298521178	WITHOUT_CLASSIFICATION	6.701478821273693E-7	IMPLEMENTATION
now done in entityidentityinsertaction persister.setidentifier( entity id source.getentitymode() )	WITHOUT_CLASSIFICATION	0.9999022620916255	WITHOUT_CLASSIFICATION	9.773790837459072E-5	IMPLEMENTATION
source.getpersistencecontext().removenonexist( new entitykey( id persister source.getentitymode() ) )	WITHOUT_CLASSIFICATION	0.9995765945249484	WITHOUT_CLASSIFICATION	4.234054750515962E-4	IMPLEMENTATION
keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999996472579392	WITHOUT_CLASSIFICATION	3.5274206080956834E-7	IMPLEMENTATION
cascade-save to many-to-one before the parent is saved	WITHOUT_CLASSIFICATION	0.9999966774880437	WITHOUT_CLASSIFICATION	3.322511956291056E-6	IMPLEMENTATION
pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.999999953381587	WITHOUT_CLASSIFICATION	4.661841290505079E-8	IMPLEMENTATION
the object is persistent	WITHOUT_CLASSIFICATION	0.9999988623733362	WITHOUT_CLASSIFICATION	1.1376266637852882E-6	IMPLEMENTATION
the entity is associated with the session so check its status	WITHOUT_CLASSIFICATION	0.999886797510122	WITHOUT_CLASSIFICATION	1.1320248987800065E-4	IMPLEMENTATION
do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999954131182298	WITHOUT_CLASSIFICATION	4.586881770213676E-6	IMPLEMENTATION
ie. e.status==deleted	WITHOUT_CLASSIFICATION	0.999974115135964	WITHOUT_CLASSIFICATION	2.5884864035990164E-5	IMPLEMENTATION
the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999991496006858	WITHOUT_CLASSIFICATION	8.503993141968588E-7	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999931625181716	WITHOUT_CLASSIFICATION	6.837481828434374E-6	IMPLEMENTATION
private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999980245333083	WITHOUT_CLASSIFICATION	1.9754666916190442E-6	IMPLEMENTATION
first try to find a matching constructor accepting a violatedconstraintnameextracter param	WITHOUT_CLASSIFICATION	0.998933556593979	WITHOUT_CLASSIFICATION	0.0010664434060209378	IMPLEMENTATION
eat it and try next	WITHOUT_CLASSIFICATION	0.999918400156746	WITHOUT_CLASSIFICATION	8.15998432540415E-5	IMPLEMENTATION
otherwise try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9982703916929151	WITHOUT_CLASSIFICATION	0.001729608307084873	IMPLEMENTATION
oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999921942555926	WITHOUT_CLASSIFICATION	7.805744407427302E-6	IMPLEMENTATION
collectionpropertymapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999310764688142	WITHOUT_CLASSIFICATION	6.892353118577077E-5	IMPLEMENTATION
remove initial " "	WITHOUT_CLASSIFICATION	0.999994946117616	WITHOUT_CLASSIFICATION	5.053882384105612E-6	IMPLEMENTATION
remove initial " and "	WITHOUT_CLASSIFICATION	0.9999952892360476	WITHOUT_CLASSIFICATION	4.710763952420631E-6	IMPLEMENTATION
beforeclasstokens.add("new") definitely don't have this!!	WITHOUT_CLASSIFICATION	0.9998839255617064	WITHOUT_CLASSIFICATION	1.1607443829363264E-4	IMPLEMENTATION
notafterclasstokens.add("")	WITHOUT_CLASSIFICATION	0.999974115135964	WITHOUT_CLASSIFICATION	2.5884864035990164E-5	IMPLEMENTATION
just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9998644645017932	WITHOUT_CLASSIFICATION	1.3553549820669012E-4	IMPLEMENTATION
update last non-whitespace token if necessary	WITHOUT_CLASSIFICATION	0.9999971979967871	WITHOUT_CLASSIFICATION	2.802003212766538E-6	IMPLEMENTATION
select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999981942014875	WITHOUT_CLASSIFICATION	1.8057985124848108E-6	IMPLEMENTATION
scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999817747379531	WITHOUT_CLASSIFICATION	1.8225262046830364E-5	IMPLEMENTATION
note this!!	WITHOUT_CLASSIFICATION	0.9999793524465903	WITHOUT_CLASSIFICATION	2.0647553409681254E-5	IMPLEMENTATION
error message constants.	WITHOUT_CLASSIFICATION	0.999838315943427	WITHOUT_CLASSIFICATION	1.616840565730785E-4	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999101092886278	WITHOUT_CLASSIFICATION	8.989071137216351E-5	IMPLEMENTATION
semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9986937308325882	WITHOUT_CLASSIFICATION	0.0013062691674118098	IMPLEMENTATION
handle collection-fiter compilation. important note this is modifying the input (hql) tree not the output tree!	WITHOUT_CLASSIFICATION	0.9961025889165459	WITHOUT_CLASSIFICATION	0.0038974110834539655	IMPLEMENTATION
show the modified ast.	WITHOUT_CLASSIFICATION	0.9998164548192596	WITHOUT_CLASSIFICATION	1.8354518074033504E-4	IMPLEMENTATION
create a parameter specification for the collection filter	WITHOUT_CLASSIFICATION	0.9998581723455947	WITHOUT_CLASSIFICATION	1.4182765440517086E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999626718793386	WITHOUT_CLASSIFICATION	3.732812066146281E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999626718793386	WITHOUT_CLASSIFICATION	3.732812066146281E-5	IMPLEMENTATION
get the names of the columns used to link between the collection owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999992009498425	WITHOUT_CLASSIFICATION	7.990501574352801E-7	IMPLEMENTATION
the path ast should be a dotnode and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9997511230171903	WITHOUT_CLASSIFICATION	2.488769828097719E-4	IMPLEMENTATION
tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999907889906982	WITHOUT_CLASSIFICATION	9.211009301910293E-6	IMPLEMENTATION
re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999818905534595	WITHOUT_CLASSIFICATION	1.8109446540470476E-5	IMPLEMENTATION
don't forget to resolve the argument! resolve the collection function now.	WITHOUT_CLASSIFICATION	0.999040945607132	WITHOUT_CLASSIFICATION	9.590543928680115E-4	IMPLEMENTATION
resolve everything up to this dot but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999588005783577	WITHOUT_CLASSIFICATION	4.119942164238793E-5	IMPLEMENTATION
should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999988465410126	WITHOUT_CLASSIFICATION	1.1534589873921682E-6	IMPLEMENTATION
was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999999171295954	WITHOUT_CLASSIFICATION	8.287040455881337E-8	IMPLEMENTATION
attach any mapping-defined "order by" fragments	WITHOUT_CLASSIFICATION	0.9999861447855999	WITHOUT_CLASSIFICATION	1.38552144001264E-5	IMPLEMENTATION
use the explicitly declared select expression determine the return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999971384940356	WITHOUT_CLASSIFICATION	2.8615059644768784E-6	IMPLEMENTATION
after that process the joins. invoke a delegate to do the work as this is farily complex.	WITHOUT_CLASSIFICATION	0.9994347354578084	WITHOUT_CLASSIFICATION	5.65264542191649E-4	IMPLEMENTATION
make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999984029246133	WITHOUT_CLASSIFICATION	1.597075386679162E-6	IMPLEMENTATION
we need to generate ids as part of this bulk insert. note that this is only supported for sequence-style generators and post-insert-style generators basically only in-db generators	WITHOUT_CLASSIFICATION	0.9999813166563759	WITHOUT_CLASSIFICATION	1.8683343624013044E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999626718793386	WITHOUT_CLASSIFICATION	3.732812066146281E-5	IMPLEMENTATION
we need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9998713181392868	WITHOUT_CLASSIFICATION	1.2868186071322678E-4	IMPLEMENTATION
we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999622925637176	WITHOUT_CLASSIFICATION	3.7707436282432283E-5	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.999980084663048	WITHOUT_CLASSIFICATION	1.9915336952002265E-5	IMPLEMENTATION
generate implicit joins only if necessary.	WITHOUT_CLASSIFICATION	0.9999759201941718	WITHOUT_CLASSIFICATION	2.4079805828186715E-5	IMPLEMENTATION
notify the from element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999998822385296	WITHOUT_CLASSIFICATION	1.1776147032387357E-7	IMPLEMENTATION
turn off includesubclasses on all fromelements.	WITHOUT_CLASSIFICATION	0.9998864195351135	WITHOUT_CLASSIFICATION	1.1358046488655829E-4	IMPLEMENTATION
create the node initially with the param name so that it shows appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999870357863807	WITHOUT_CLASSIFICATION	1.2964213619344447E-5	IMPLEMENTATION
use the delegate resolve identifiers as from element aliases.	WITHOUT_CLASSIFICATION	0.9999835082864247	WITHOUT_CLASSIFICATION	1.6491713575309473E-5	IMPLEMENTATION
select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999971738230379	WITHOUT_CLASSIFICATION	2.826176962011483E-6	IMPLEMENTATION
no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999944555050659	WITHOUT_CLASSIFICATION	5.544494933998168E-6	IMPLEMENTATION
make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999194479479723	WITHOUT_CLASSIFICATION	8.055205202773907E-5	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999101092886278	WITHOUT_CLASSIFICATION	8.989071137216351E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999626718793386	WITHOUT_CLASSIFICATION	3.732812066146281E-5	IMPLEMENTATION
--commented out by inspection (12/11/04 1056 am) int getwarningcount()	WITHOUT_CLASSIFICATION	0.999995882401676	WITHOUT_CLASSIFICATION	4.117598324015417E-6	IMPLEMENTATION
alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9998024414896183	WITHOUT_CLASSIFICATION	1.9755851038176018E-4	IMPLEMENTATION
switch	WITHOUT_CLASSIFICATION	0.9999901382202253	WITHOUT_CLASSIFICATION	9.861779774672646E-6	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9994201365279579	WITHOUT_CLASSIFICATION	5.798634720420304E-4	IMPLEMENTATION
just do the regular thing if you can't find the ctor your ast must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999762342188773	WITHOUT_CLASSIFICATION	2.3765781122750683E-5	IMPLEMENTATION
initialize sql nodes here.	WITHOUT_CLASSIFICATION	0.9999722331667824	WITHOUT_CLASSIFICATION	2.776683321750027E-5	IMPLEMENTATION
semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997800717143083	WITHOUT_CLASSIFICATION	2.1992828569171596E-4	IMPLEMENTATION
if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999999272299332	WITHOUT_CLASSIFICATION	7.27700666998427E-8	IMPLEMENTATION
this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999994155112756	WITHOUT_CLASSIFICATION	5.844887243970317E-7	IMPLEMENTATION
--- inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999556073201126	WITHOUT_CLASSIFICATION	4.4392679887429306E-5	IMPLEMENTATION
check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9998210619777785	WITHOUT_CLASSIFICATION	1.78938022221504E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999973860674544	WITHOUT_CLASSIFICATION	2.613932545623303E-6	IMPLEMENTATION
these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999880000462754	WITHOUT_CLASSIFICATION	1.199995372461229E-5	IMPLEMENTATION
again both should be fromelements	WITHOUT_CLASSIFICATION	0.9999621408337389	WITHOUT_CLASSIFICATION	3.785916626115932E-5	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999955836808486	WITHOUT_CLASSIFICATION	4.416319151318659E-6	IMPLEMENTATION
right represents a joins originating from left or both right and left reprersent joins originating from the same fromelement	WITHOUT_CLASSIFICATION	0.9999979897022132	WITHOUT_CLASSIFICATION	2.0102977867016273E-6	IMPLEMENTATION
check a set of parent/child nodes in the from-clause tree to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999995607233236	WITHOUT_CLASSIFICATION	4.392766762812055E-7	IMPLEMENTATION
right represents a joins originating from left	WITHOUT_CLASSIFICATION	0.9999977367222231	WITHOUT_CLASSIFICATION	2.2632777769104446E-6	IMPLEMENTATION
all clear	WITHOUT_CLASSIFICATION	0.9999944534562051	WITHOUT_CLASSIFICATION	5.546543794814826E-6	IMPLEMENTATION
ignore the token class name parameter and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999967847295221	WITHOUT_CLASSIFICATION	3.2152704778026653E-6	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999896357848772	WITHOUT_CLASSIFICATION	1.0364215122742656E-5	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999896357848772	WITHOUT_CLASSIFICATION	1.0364215122742656E-5	IMPLEMENTATION
remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9997102399321017	WITHOUT_CLASSIFICATION	2.8976006789830527E-4	IMPLEMENTATION
don't care about other param types here just those explicitly user-defined	WITHOUT_CLASSIFICATION	0.9998658734206803	WITHOUT_CLASSIFICATION	1.341265793196332E-4	IMPLEMENTATION
if the query is already compiled skip the compilation.	WITHOUT_CLASSIFICATION	0.999997995524629	WITHOUT_CLASSIFICATION	2.004475371002045E-6	IMPLEMENTATION
remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9997934046158841	WITHOUT_CLASSIFICATION	2.065953841158807E-4	IMPLEMENTATION
phase 1 parse the hql into an ast.	WITHOUT_CLASSIFICATION	0.9999991478821232	WITHOUT_CLASSIFICATION	8.521178769138333E-7	IMPLEMENTATION
phase 2 analyze the hql ast and produce an sql ast.	WITHOUT_CLASSIFICATION	0.9999997704213075	WITHOUT_CLASSIFICATION	2.2957869246274502E-7	IMPLEMENTATION
phase 3 generate the sql.	WITHOUT_CLASSIFICATION	0.9999343634608034	WITHOUT_CLASSIFICATION	6.563653919655516E-5	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9994063866284959	WITHOUT_CLASSIFICATION	5.936133715041334E-4	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9994063866284959	WITHOUT_CLASSIFICATION	5.936133715041334E-4	IMPLEMENTATION
only needed during compilation phase	WITHOUT_CLASSIFICATION	0.981266040881375	WITHOUT_CLASSIFICATION	0.018733959118624993	IMPLEMENTATION
transform the tree.	WITHOUT_CLASSIFICATION	0.9999748558227748	WITHOUT_CLASSIFICATION	2.5144177225196705E-5	IMPLEMENTATION
parse the query string into an hql ast.	WITHOUT_CLASSIFICATION	0.9999985928222017	WITHOUT_CLASSIFICATION	1.4071777983587718E-6	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9998103798743297	WITHOUT_CLASSIFICATION	1.8962012567017887E-4	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9998103798743297	WITHOUT_CLASSIFICATION	1.8962012567017887E-4	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9998103798743297	WITHOUT_CLASSIFICATION	1.8962012567017887E-4	IMPLEMENTATION
note ( max - 1 ) because first is zero-based while max is not	WITHOUT_CLASSIFICATION	0.9999092947109	WITHOUT_CLASSIFICATION	9.07052891001204E-5	IMPLEMENTATION
-- package local methods for the queryloader delegate --	WITHOUT_CLASSIFICATION	0.9999412774071584	WITHOUT_CLASSIFICATION	5.872259284170519E-5	IMPLEMENTATION
if there are no collection fetches then no further checks are needed	WITHOUT_CLASSIFICATION	0.9982734816933356	WITHOUT_CLASSIFICATION	0.0017265183066643452	IMPLEMENTATION
a shallow query is ok (although technically there should be no fetching here)	WITHOUT_CLASSIFICATION	0.9999996860357113	WITHOUT_CLASSIFICATION	3.1396428870278787E-7	IMPLEMENTATION
should be the first but just to be safe	WITHOUT_CLASSIFICATION	0.9999990288062284	WITHOUT_CLASSIFICATION	9.71193771665516E-7	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999626718793386	WITHOUT_CLASSIFICATION	3.732812066146281E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999626718793386	WITHOUT_CLASSIFICATION	3.732812066146281E-5	IMPLEMENTATION
impl note allows multiple collection fetches as long as the entire fecthed graph still "points back" to a single root entity for return	WITHOUT_CLASSIFICATION	0.9999251727342149	WITHOUT_CLASSIFICATION	7.48272657851825E-5	IMPLEMENTATION
otherwise we have a non-scalar select with defined collection fetch(es). make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999677405187691	WITHOUT_CLASSIFICATION	3.225948123075774E-5	IMPLEMENTATION
this is not strictly true. we actually just need to make sure that it is ordered by root-entity pk and that that order-by comes before any non-root-entity ordering	WITHOUT_CLASSIFICATION	0.9749005906607139	WITHOUT_CLASSIFICATION	0.025099409339286158	IMPLEMENTATION
paramtranslations = new parametertranslationsimpl( collectedparameterspecifications )	WITHOUT_CLASSIFICATION	0.9999356414884751	WITHOUT_CLASSIFICATION	6.435851152488836E-5	IMPLEMENTATION
we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999959378981886	WITHOUT_CLASSIFICATION	4.062101811450228E-6	IMPLEMENTATION
igndore it	WITHOUT_CLASSIFICATION	0.999988777414515	WITHOUT_CLASSIFICATION	1.1222585484918763E-5	IMPLEMENTATION
we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999947635492372	WITHOUT_CLASSIFICATION	5.236450762701279E-6	IMPLEMENTATION
[jsd] the fix for hhh-558	WITHOUT_CLASSIFICATION	0.9988013190327938	WITHOUT_CLASSIFICATION	0.0011986809672061604	IMPLEMENTATION
if the token can tell us if it could be an identifier	WITHOUT_CLASSIFICATION	0.9999897659442137	WITHOUT_CLASSIFICATION	1.0234055786236474E-5	IMPLEMENTATION
and the expected token type was an identifier then	WITHOUT_CLASSIFICATION	0.9999997416570375	WITHOUT_CLASSIFICATION	2.5834296250490704E-7	IMPLEMENTATION
use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999953081083933	WITHOUT_CLASSIFICATION	4.6918916066665296E-6	IMPLEMENTATION
add the token to the ast.	WITHOUT_CLASSIFICATION	0.9999642216686084	WITHOUT_CLASSIFICATION	3.577833139146743E-5	IMPLEMENTATION
(not (eq a b) ) => (ne a b)	WITHOUT_CLASSIFICATION	0.9999895333299126	WITHOUT_CLASSIFICATION	1.0466670087471257E-5	IMPLEMENTATION
(not (ne a b) ) => (eq a b)	WITHOUT_CLASSIFICATION	0.9999895333299126	WITHOUT_CLASSIFICATION	1.0466670087471257E-5	IMPLEMENTATION
(not (lt a b) ) => (ge a b)	WITHOUT_CLASSIFICATION	0.9999895333299126	WITHOUT_CLASSIFICATION	1.0466670087471257E-5	IMPLEMENTATION
(not (ge a b) ) => (lt a b)	WITHOUT_CLASSIFICATION	0.9999895333299126	WITHOUT_CLASSIFICATION	1.0466670087471257E-5	IMPLEMENTATION
(not (le a b) ) => (gt a b)	WITHOUT_CLASSIFICATION	0.9999895333299126	WITHOUT_CLASSIFICATION	1.0466670087471257E-5	IMPLEMENTATION
(not (like a b) ) => (not_like a b)	WITHOUT_CLASSIFICATION	0.9999865495474823	WITHOUT_CLASSIFICATION	1.345045251773169E-5	IMPLEMENTATION
(not (not_like a b) ) => (like a b)	WITHOUT_CLASSIFICATION	0.9999865495474823	WITHOUT_CLASSIFICATION	1.345045251773169E-5	IMPLEMENTATION
(not (is_not_null a b) ) => (is_null a b)	WITHOUT_CLASSIFICATION	0.9999857556914894	WITHOUT_CLASSIFICATION	1.4244308510553056E-5	IMPLEMENTATION
(not (between a b) ) => (not_between a b)	WITHOUT_CLASSIFICATION	0.9999857556914894	WITHOUT_CLASSIFICATION	1.4244308510553056E-5	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9997353434020869	WITHOUT_CLASSIFICATION	2.6465659791312856E-4	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999896357848772	WITHOUT_CLASSIFICATION	1.0364215122742656E-5	IMPLEMENTATION
if if otherwise handle the error normally.	WITHOUT_CLASSIFICATION	0.9988019557831745	WITHOUT_CLASSIFICATION	0.0011980442168253857	IMPLEMENTATION
(not (not_between a b) ) => (between a b)	WITHOUT_CLASSIFICATION	0.9999857556914894	WITHOUT_CLASSIFICATION	1.4244308510553056E-5	IMPLEMENTATION
this can never happen because this rule will always eliminate the child not.case notreturn x.getfirstchild() (not (not x) ) => (x)	WITHOUT_CLASSIFICATION	0.9999274146442918	WITHOUT_CLASSIFICATION	7.258535570812296E-5	IMPLEMENTATION
just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999878329063691	WITHOUT_CLASSIFICATION	1.2167093630959335E-5	IMPLEMENTATION
(eq null b) => (is_null b)	WITHOUT_CLASSIFICATION	0.9999980463281194	WITHOUT_CLASSIFICATION	1.9536718806338073E-6	IMPLEMENTATION
(eq a null) => (is_null a)	WITHOUT_CLASSIFICATION	0.9999933984934093	WITHOUT_CLASSIFICATION	6.601506590803726E-6	IMPLEMENTATION
note because we're using astutil.createparent() the tree must be created from the bottom up. is empty x => (exists (query (select_from (from x) ) ) )	WITHOUT_CLASSIFICATION	0.9999998046795374	WITHOUT_CLASSIFICATION	1.9532046267474514E-7	IMPLEMENTATION
add not if it's negated.	WITHOUT_CLASSIFICATION	0.999094594354288	WITHOUT_CLASSIFICATION	9.054056457119271E-4	IMPLEMENTATION
create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9993414172865084	WITHOUT_CLASSIFICATION	6.585827134916644E-4	IMPLEMENTATION
case 1 multi token keywords group by and order by the next token ( lt(2) ) should be 'by' otherwise this is just an ident.	WITHOUT_CLASSIFICATION	0.999989780031435	WITHOUT_CLASSIFICATION	1.02199685649158E-5	IMPLEMENTATION
case 2 the current token is after from and before '.'.	WITHOUT_CLASSIFICATION	0.9999994834844688	WITHOUT_CLASSIFICATION	5.165155311986045E-7	IMPLEMENTATION
this handles hhh-354 where there is a strange property name in a where clause. if the lookahead contains a dot then something that isn't an ident	WITHOUT_CLASSIFICATION	0.9999999755673143	WITHOUT_CLASSIFICATION	2.443268564153783E-8	IMPLEMENTATION
see if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999999267384316	WITHOUT_CLASSIFICATION	7.326156841750098E-8	IMPLEMENTATION
set it!	WITHOUT_CLASSIFICATION	0.9999956474958258	WITHOUT_CLASSIFICATION	4.352504174277205E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999573992716272	WITHOUT_CLASSIFICATION	4.260072837281314E-5	IMPLEMENTATION
strip the " where "	WITHOUT_CLASSIFICATION	0.9998770029249779	WITHOUT_CLASSIFICATION	1.229970750220896E-4	IMPLEMENTATION
don't really know all the codes required to adequately decipher returned jdbc exceptions here. simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9246860277639591	WITHOUT_CLASSIFICATION	0.07531397223604089	IMPLEMENTATION
at the very least cleanup the data )	WITHOUT_CLASSIFICATION	0.9999975576839765	WITHOUT_CLASSIFICATION	2.44231602349703E-6	IMPLEMENTATION
first save off the pertinent ids as the return value	WITHOUT_CLASSIFICATION	0.9999954900952032	WITHOUT_CLASSIFICATION	4.5099047967960744E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999961384973907	WITHOUT_CLASSIFICATION	3.861502609346593E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999961384973907	WITHOUT_CLASSIFICATION	3.861502609346593E-6	IMPLEMENTATION
start performing the updates	WITHOUT_CLASSIFICATION	0.9999947714949441	WITHOUT_CLASSIFICATION	5.228505055963721E-6	IMPLEMENTATION
first save off the pertinent ids saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999987349208408	WITHOUT_CLASSIFICATION	1.2650791591411041E-6	IMPLEMENTATION
start performing the deletes	WITHOUT_CLASSIFICATION	0.9999950761962225	WITHOUT_CLASSIFICATION	4.923803777467584E-6	IMPLEMENTATION
otherwise everything ok.	WITHOUT_CLASSIFICATION	0.9993776198422026	WITHOUT_CLASSIFICATION	6.223801577973142E-4	IMPLEMENTATION
visit width-first then depth	WITHOUT_CLASSIFICATION	0.9999863034977529	WITHOUT_CLASSIFICATION	1.3696502247240114E-5	IMPLEMENTATION
if the types report logical equivalence return true	WITHOUT_CLASSIFICATION	0.9999910868170002	WITHOUT_CLASSIFICATION	8.913182999752326E-6	IMPLEMENTATION
otherwise perform a "deep equivalence" check	WITHOUT_CLASSIFICATION	0.9969528842019534	WITHOUT_CLASSIFICATION	0.0030471157980465494	IMPLEMENTATION
if there is no where node make one.	WITHOUT_CLASSIFICATION	0.9999934925637799	WITHOUT_CLASSIFICATION	6.5074362201421705E-6	IMPLEMENTATION
inject the where after the parent	WITHOUT_CLASSIFICATION	0.9999319579572413	WITHOUT_CLASSIFICATION	6.804204275863806E-5	IMPLEMENTATION
never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999984541987181	WITHOUT_CLASSIFICATION	1.5458012818783465E-6	IMPLEMENTATION
moved here from selectclause [jsd]	WITHOUT_CLASSIFICATION	0.9999788152140153	WITHOUT_CLASSIFICATION	2.1184785984729384E-5	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999973860674544	WITHOUT_CLASSIFICATION	2.613932545623303E-6	IMPLEMENTATION
use the table fromelement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999902813697711	WITHOUT_CLASSIFICATION	9.718630228866765E-6	IMPLEMENTATION
set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999990430632925	WITHOUT_CLASSIFICATION	9.569367076276857E-7	IMPLEMENTATION
if the uresolved property path isn't set yet just use the property name.	WITHOUT_CLASSIFICATION	0.9999542713172536	WITHOUT_CLASSIFICATION	4.572868274630604E-5	IMPLEMENTATION
the 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999854705055824	WITHOUT_CLASSIFICATION	1.4529494417589119E-5	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999666525945	WITHOUT_CLASSIFICATION	3.334740552449668E-8	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999666525945	WITHOUT_CLASSIFICATION	3.334740552449668E-8	IMPLEMENTATION
if this dot has already been resolved stop now.	WITHOUT_CLASSIFICATION	0.9999742559327234	WITHOUT_CLASSIFICATION	2.5744067276675058E-5	IMPLEMENTATION
if there is no data type for this node and we're at the end of the path (top most dot node) then this might be a java constant.	WITHOUT_CLASSIFICATION	0.9999998648512257	WITHOUT_CLASSIFICATION	1.3514877435074482E-7	IMPLEMENTATION
the property is a collection	WITHOUT_CLASSIFICATION	0.9999915975075053	WITHOUT_CLASSIFICATION	8.402492494747292E-6	IMPLEMENTATION
the property is a component	WITHOUT_CLASSIFICATION	0.999999217774702	WITHOUT_CLASSIFICATION	7.822252979760997E-7	IMPLEMENTATION
the property is another class..	WITHOUT_CLASSIFICATION	0.9999860708685933	WITHOUT_CLASSIFICATION	1.3929131406784115E-5	IMPLEMENTATION
otherwise this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999621810255794	WITHOUT_CLASSIFICATION	3.7818974420579926E-5	IMPLEMENTATION
foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999854996175784	WITHOUT_CLASSIFICATION	1.4500382421474416E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9997123726968363	WITHOUT_CLASSIFICATION	2.876273031636449E-4	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999696433745118	WITHOUT_CLASSIFICATION	3.0356625488210728E-5	IMPLEMENTATION
in non-select queries the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999998524510251	WITHOUT_CLASSIFICATION	1.4754897492330443E-7	IMPLEMENTATION
this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999766415817664	WITHOUT_CLASSIFICATION	2.3358418233579956E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9997123726968363	WITHOUT_CLASSIFICATION	2.876273031636449E-4	IMPLEMENTATION
even though we might find a pre-existing element by join path we may not be able to reuse it	WITHOUT_CLASSIFICATION	0.9949462036802272	WITHOUT_CLASSIFICATION	0.005053796319772863	IMPLEMENTATION
note addduplicatealias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999656233398421	WITHOUT_CLASSIFICATION	3.437666015792363E-5	IMPLEMENTATION
if the from-clauses are the same we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999950723913666	WITHOUT_CLASSIFICATION	4.92760863339623E-6	IMPLEMENTATION
again null != null here	WITHOUT_CLASSIFICATION	0.9999960306760027	WITHOUT_CLASSIFICATION	3.9693239972752E-6	IMPLEMENTATION
if this is an implied join in a from element then use the impled join type which is part of the tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999999998256287	WITHOUT_CLASSIFICATION	1.743712316827187E-10	IMPLEMENTATION
otherwise (subquery case) dont reuse the fromelement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999925851056131	WITHOUT_CLASSIFICATION	7.414894386941514E-6	IMPLEMENTATION
we know only the lhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9992298633491825	WITHOUT_CLASSIFICATION	7.701366508175039E-4	IMPLEMENTATION
the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999882772859325	WITHOUT_CLASSIFICATION	1.172271406740025E-5	IMPLEMENTATION
only the identifier property field name can be a reference to the associated entity's pk	WITHOUT_CLASSIFICATION	0.9999988220237224	WITHOUT_CLASSIFICATION	1.1779762776634204E-6	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9983357661790956	WITHOUT_CLASSIFICATION	0.0016642338209043922	IMPLEMENTATION
append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9989856676047012	WITHOUT_CLASSIFICATION	0.0010143323952987089	IMPLEMENTATION
if the lhs is a collection use collectionpropertymapping	WITHOUT_CLASSIFICATION	0.9999966638234862	WITHOUT_CLASSIFICATION	3.3361765138878893E-6	IMPLEMENTATION
tell the destination fromelement to 'includesubclasses'.	WITHOUT_CLASSIFICATION	0.9998820404251497	WITHOUT_CLASSIFICATION	1.1795957485022001E-4	IMPLEMENTATION
use theta style (for regression) move the node up after the origin node.	WITHOUT_CLASSIFICATION	0.999265986486159	WITHOUT_CLASSIFICATION	7.340135138409905E-4	IMPLEMENTATION
don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999539920312756	WITHOUT_CLASSIFICATION	4.600796872434836E-5	IMPLEMENTATION
for expected parameter type injection we expect that the lhs represents some form of property ref and that the children of the in-list represent one-or-more params.	WITHOUT_CLASSIFICATION	0.9999914190295021	WITHOUT_CLASSIFICATION	8.580970497861076E-6	IMPLEMENTATION
we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999831256677866	WITHOUT_CLASSIFICATION	1.687433221336953E-5	IMPLEMENTATION
we have something like "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9995704053673775	WITHOUT_CLASSIFICATION	4.2959463262247165E-4	IMPLEMENTATION
we have something like "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9995704053673775	WITHOUT_CLASSIFICATION	4.2959463262247165E-4	IMPLEMENTATION
we know only the rhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9992298633491825	WITHOUT_CLASSIFICATION	7.701366508175039E-4	IMPLEMENTATION
handle the (assumed) valid cases #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9984988975770691	WITHOUT_CLASSIFICATION	0.001501102422930874	IMPLEMENTATION
one or the other needs to be a datetime for us to get into this method in the first place	WITHOUT_CLASSIFICATION	0.9999856860360006	WITHOUT_CLASSIFICATION	1.4313963999274266E-5	IMPLEMENTATION
#3 - note that this is also true of "datetime - param"	WITHOUT_CLASSIFICATION	0.9999937484743884	WITHOUT_CLASSIFICATION	6.251525611518274E-6	IMPLEMENTATION
#2	WITHOUT_CLASSIFICATION	0.9999861450378249	WITHOUT_CLASSIFICATION	1.3854962175164047E-5	IMPLEMENTATION
generate the inner join -- the elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999750951152745	WITHOUT_CLASSIFICATION	2.4904884725535506E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.999983813749144	WITHOUT_CLASSIFICATION	1.618625085603268E-5	IMPLEMENTATION
the 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999959423939289	WITHOUT_CLASSIFICATION	4.05760607121466E-6	IMPLEMENTATION
add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9994622296208413	WITHOUT_CLASSIFICATION	5.377703791586618E-4	IMPLEMENTATION
sometimes use the element table alias sometimes use the umm collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999879161155643	WITHOUT_CLASSIFICATION	1.2083884435723322E-5	IMPLEMENTATION
now set the text for this node. it should be the element columns.	WITHOUT_CLASSIFICATION	0.9999752750944355	WITHOUT_CLASSIFICATION	2.472490556451917E-5	IMPLEMENTATION
get the function return value type based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999695760624951	WITHOUT_CLASSIFICATION	3.0423937504804125E-5	IMPLEMENTATION
this will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999468203817368	WITHOUT_CLASSIFICATION	5.317961826333188E-5	IMPLEMENTATION
mutation depends on the types of nodes invloved	WITHOUT_CLASSIFICATION	0.999739881246898	WITHOUT_CLASSIFICATION	2.6011875310202886E-4	IMPLEMENTATION
"pass along" our initial embedded parameter node(s) to the first generated sql fragment so that it can be handled later for parameter binding	WITHOUT_CLASSIFICATION	0.99999905878964	WITHOUT_CLASSIFICATION	9.412103599579231E-7	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999425613228435	WITHOUT_CLASSIFICATION	5.7438677156560074E-5	IMPLEMENTATION
generated select expressions are already resolved nothing to do.	WITHOUT_CLASSIFICATION	0.9999994023898555	WITHOUT_CLASSIFICATION	5.976101445330142E-7	IMPLEMENTATION
the path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999996996905518	WITHOUT_CLASSIFICATION	3.0030944824032255E-7	IMPLEMENTATION
the hql class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999957944384479	WITHOUT_CLASSIFICATION	4.20556155217112E-6	IMPLEMENTATION
associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999301416739068	WITHOUT_CLASSIFICATION	6.985832609316065E-5	IMPLEMENTATION
try the parent fromclause	WITHOUT_CLASSIFICATION	0.9999774830193975	WITHOUT_CLASSIFICATION	2.2516980602587706E-5	IMPLEMENTATION
add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999640730920357	WITHOUT_CLASSIFICATION	3.5926907964383456E-5	IMPLEMENTATION
make sure that all from elements registered with this from clause are actually in the ast.	WITHOUT_CLASSIFICATION	0.9999929510059448	WITHOUT_CLASSIFICATION	7.048994055330516E-6	IMPLEMENTATION
invoke setscalarcolumntext on each constructor argument.	WITHOUT_CLASSIFICATION	0.999610319887894	WITHOUT_CLASSIFICATION	3.8968011210600693E-4	IMPLEMENTATION
collect the select expressions skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999974160073405	WITHOUT_CLASSIFICATION	2.5839926594033816E-6	IMPLEMENTATION
return an empty type array	WITHOUT_CLASSIFICATION	0.9999038471926531	WITHOUT_CLASSIFICATION	9.615280734684171E-5	IMPLEMENTATION
constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999887422122427	WITHOUT_CLASSIFICATION	1.1257787757363404E-5	IMPLEMENTATION
this is the exception returned by reflecthelper.getconstructor() if it cannot locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999998272053048	WITHOUT_CLASSIFICATION	1.7279469520538578E-7	IMPLEMENTATION
if there is no order by make one	WITHOUT_CLASSIFICATION	0.9999983040534122	WITHOUT_CLASSIFICATION	1.6959465877854514E-6	IMPLEMENTATION
find the where if there is no where find the from	WITHOUT_CLASSIFICATION	0.999999630285475	WITHOUT_CLASSIFICATION	3.6971452500607883E-7	IMPLEMENTATION
now inject the newly built order by into the tree	WITHOUT_CLASSIFICATION	0.9999917974772093	WITHOUT_CLASSIFICATION	8.202522790674273E-6	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999655718959796	WITHOUT_CLASSIFICATION	3.4428104020508654E-5	IMPLEMENTATION
logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999426586295135	WITHOUT_CLASSIFICATION	5.7341370486487563E-5	IMPLEMENTATION
render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999968426293635	WITHOUT_CLASSIFICATION	3.157370636581341E-6	IMPLEMENTATION
class names in the from clause result in a joinsequence (the old fromparser does this).	WITHOUT_CLASSIFICATION	0.9999999959464207	WITHOUT_CLASSIFICATION	4.053579228688803E-9	IMPLEMENTATION
for many-to-many joins use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999990253637782	WITHOUT_CLASSIFICATION	9.74636221873045E-7	IMPLEMENTATION
otherwise use the property mapping.	WITHOUT_CLASSIFICATION	0.9996277533791627	WITHOUT_CLASSIFICATION	3.722466208373669E-4	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9999223963227601	WITHOUT_CLASSIFICATION	7.760367723992138E-5	IMPLEMENTATION
if the property is a special collection property name return a collectionpropertymapping.	WITHOUT_CLASSIFICATION	0.9999985671514987	WITHOUT_CLASSIFICATION	1.4328485013278783E-6	IMPLEMENTATION
collection of components.	WITHOUT_CLASSIFICATION	0.9999699988968949	WITHOUT_CLASSIFICATION	3.0001103105154575E-5	IMPLEMENTATION
make sure the lhs is "assignable"	WITHOUT_CLASSIFICATION	0.9999771504032849	WITHOUT_CLASSIFICATION	2.2849596715074977E-5	IMPLEMENTATION
false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9906374164957324	WITHOUT_CLASSIFICATION	0.009362583504267505	IMPLEMENTATION
register the fromelement with the from clause now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9996218336706006	WITHOUT_CLASSIFICATION	3.7816632939943604E-4	IMPLEMENTATION
currently allowed	WITHOUT_CLASSIFICATION	0.9999532929885319	WITHOUT_CLASSIFICATION	4.670701146816317E-5	IMPLEMENTATION
hhh-276 implied joins in a subselect where clause - the destination needs to be added to the destination's from clause. not sure if this is will fix everything but it works.	WITHOUT_CLASSIFICATION	0.9999599277957361	WITHOUT_CLASSIFICATION	4.007220426393629E-5	IMPLEMENTATION
return classalias == null ? classname classalias	WITHOUT_CLASSIFICATION	0.9999747397503508	WITHOUT_CLASSIFICATION	2.5260249649118966E-5	IMPLEMENTATION
this is an explicit from element.	WITHOUT_CLASSIFICATION	0.9999921323968449	WITHOUT_CLASSIFICATION	7.86760315507232E-6	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999655718959796	WITHOUT_CLASSIFICATION	3.4428104020508654E-5	IMPLEMENTATION
fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999730801990554	WITHOUT_CLASSIFICATION	2.691980094457178E-5	IMPLEMENTATION
if it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9992083797848736	WITHOUT_CLASSIFICATION	7.91620215126325E-4	IMPLEMENTATION
since this is an explicit from element it can't be implied in the from clause.	WITHOUT_CLASSIFICATION	0.9999999696678566	WITHOUT_CLASSIFICATION	3.0332143274379706E-8	IMPLEMENTATION
do nothing eplicit from elements are always in the projection list.	WITHOUT_CLASSIFICATION	0.9999997349152255	WITHOUT_CLASSIFICATION	2.6508477450012377E-7	IMPLEMENTATION
propertyname refers to something like collection.size	WITHOUT_CLASSIFICATION	0.999443126757723	WITHOUT_CLASSIFICATION	5.568732422770545E-4	IMPLEMENTATION
property name is a sub-path of a component	WITHOUT_CLASSIFICATION	0.9999993648785653	WITHOUT_CLASSIFICATION	6.351214347506247E-7	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999696433745118	WITHOUT_CLASSIFICATION	3.0356625488210728E-5	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999979309013964	WITHOUT_CLASSIFICATION	2.069098603467876E-6	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999425613228435	WITHOUT_CLASSIFICATION	5.7438677156560074E-5	IMPLEMENTATION
dotnode uses null here	WITHOUT_CLASSIFICATION	0.9999805589143435	WITHOUT_CLASSIFICATION	1.9441085656529916E-5	IMPLEMENTATION
we represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999856138740684	WITHOUT_CLASSIFICATION	1.438612593166739E-5	IMPLEMENTATION
we are the lhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999933758676329	WITHOUT_CLASSIFICATION	6.62413236718009E-6	IMPLEMENTATION
we are the rhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999933541491699	WITHOUT_CLASSIFICATION	6.645850830143782E-6	IMPLEMENTATION
we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999772292335797	WITHOUT_CLASSIFICATION	2.2770766420321485E-5	IMPLEMENTATION
early exit!!! return so the resolve call explicitly coming from dotnode can resolve this	WITHOUT_CLASSIFICATION	0.9999886048856631	WITHOUT_CLASSIFICATION	1.1395114336838945E-5	IMPLEMENTATION
assume this ident's text does not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9902468977055003	WITHOUT_CLASSIFICATION	0.009753102294499561	IMPLEMENTATION
just ignore it for now it'll get resolved later	WITHOUT_CLASSIFICATION	0.9999961453498907	WITHOUT_CLASSIFICATION	3.854650109296599E-6	IMPLEMENTATION
this is not actually a constant but a reference to from element.	WITHOUT_CLASSIFICATION	0.9999273659338893	WITHOUT_CLASSIFICATION	7.263406611078226E-5	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999921020950114	WITHOUT_CLASSIFICATION	7.89790498860829E-6	IMPLEMENTATION
these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9981279177730885	WITHOUT_CLASSIFICATION	0.0018720822269114974	IMPLEMENTATION
used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.999989217757219	WITHOUT_CLASSIFICATION	1.0782242780854248E-5	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9364518601414753	WITHOUT_CLASSIFICATION	0.06354813985852478	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9364518601414753	WITHOUT_CLASSIFICATION	0.06354813985852478	IMPLEMENTATION
naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999999456376856	WITHOUT_CLASSIFICATION	5.4362314424913835E-8	IMPLEMENTATION
this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9928794530389682	WITHOUT_CLASSIFICATION	0.007120546961031927	IMPLEMENTATION
do not over-write the column text as that has already been "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9963465632320161	WITHOUT_CLASSIFICATION	0.0036534367679840357	IMPLEMENTATION
for some reason the antlr.commonast initialization routines force this method to get called twice. the first time with an empty string	WITHOUT_CLASSIFICATION	0.9999550677086393	WITHOUT_CLASSIFICATION	4.493229136068643E-5	IMPLEMENTATION
look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.999998740007094	WITHOUT_CLASSIFICATION	1.2599929059784344E-6	IMPLEMENTATION
add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999764503904439	WITHOUT_CLASSIFICATION	2.3549609556191242E-5	IMPLEMENTATION
if the from element isn't in the same clause create a new from element.	WITHOUT_CLASSIFICATION	0.9999996367645142	WITHOUT_CLASSIFICATION	3.632354857823179E-7	IMPLEMENTATION
this is the root level node. generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999653335020667	WITHOUT_CLASSIFICATION	3.466649793330425E-5	IMPLEMENTATION
correlated subqueries create 'special' implied from nodes because correlated subselects can't use an ansi-style join	WITHOUT_CLASSIFICATION	0.9999895796176537	WITHOUT_CLASSIFICATION	1.0420382346377805E-5	IMPLEMENTATION
super-duper-classic-parser-regression-testing-mojo-magic	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
a collection of entities	WITHOUT_CLASSIFICATION	0.9999758463966834	WITHOUT_CLASSIFICATION	2.4153603316652497E-5	IMPLEMENTATION
a collection of components	WITHOUT_CLASSIFICATION	0.999986312556148	WITHOUT_CLASSIFICATION	1.3687443852046472E-5	IMPLEMENTATION
a collection of scalar elements	WITHOUT_CLASSIFICATION	0.9999884803228466	WITHOUT_CLASSIFICATION	1.1519677153402003E-5	IMPLEMENTATION
according to both the ansi-sql and ejb3 specs trim can either take exactly one parameter or a variable number of parameters between 1 and 4. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if only <trim specification> is omitted both is assumed if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.9999999984835501	WITHOUT_CLASSIFICATION	1.5164498841285589E-9	IMPLEMENTATION
don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999964436487316	WITHOUT_CLASSIFICATION	3.5563512683786654E-6	IMPLEMENTATION
treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999964294461914	WITHOUT_CLASSIFICATION	3.570553808490459E-6	IMPLEMENTATION
( implied && dotnode.usethetastyleimplicitjoins ) ) {	WITHOUT_CLASSIFICATION	0.9999460461166179	WITHOUT_CLASSIFICATION	5.3953883382038814E-5	IMPLEMENTATION
the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9998562981110167	WITHOUT_CLASSIFICATION	1.4370188898338567E-4	IMPLEMENTATION
create the from element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999998826497425	WITHOUT_CLASSIFICATION	1.1735025753469088E-7	IMPLEMENTATION
if the join is implied then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999981261915303	WITHOUT_CLASSIFICATION	1.8738084696518711E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
the associated entity is implied but it must be included in the from. the collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999998368231996	WITHOUT_CLASSIFICATION	1.6317680046826236E-7	IMPLEMENTATION
tag this node as a join. don't include subclasses in the join. this is a clollection join.	WITHOUT_CLASSIFICATION	0.9999992929222995	WITHOUT_CLASSIFICATION	7.070777004745986E-7	IMPLEMENTATION
get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.999999543427208	WITHOUT_CLASSIFICATION	4.565727920212704E-7	IMPLEMENTATION
origin path implied columns classalias	WITHOUT_CLASSIFICATION	0.9999708736915359	WITHOUT_CLASSIFICATION	2.9126308464139728E-5	IMPLEMENTATION
implied	WITHOUT_CLASSIFICATION	0.9999861089446704	WITHOUT_CLASSIFICATION	1.389105532942084E-5	IMPLEMENTATION
for implied many-to-many just add the end join.	WITHOUT_CLASSIFICATION	0.9999687842912803	WITHOUT_CLASSIFICATION	3.121570871971142E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792398306387	WITHOUT_CLASSIFICATION	2.076016936115715E-5	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999995804346068	WITHOUT_CLASSIFICATION	4.1956539319373296E-7	IMPLEMENTATION
this causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999649898434403	WITHOUT_CLASSIFICATION	3.501015655980079E-5	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9999940140832613	WITHOUT_CLASSIFICATION	5.985916738684184E-6	IMPLEMENTATION
frontbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999994610925742	WITHOUT_CLASSIFICATION	5.389074257580221E-7	IMPLEMENTATION
the types represented in the sql result set. @return the types represented in the sql result set.	WITHOUT_CLASSIFICATION	0.9999985230306321	WITHOUT_CLASSIFICATION	1.4769693678882195E-6	IMPLEMENTATION
public type[] getsqlresulttypes() {return sqlresulttypes}	WITHOUT_CLASSIFICATION	0.999993628670469	WITHOUT_CLASSIFICATION	6.371329531051055E-6	IMPLEMENTATION
first collect all of the select expressions. note this must be done before invoking setscalarcolumntext() because setscalarcolumntext() changes the ast!!!	WITHOUT_CLASSIFICATION	0.999976325308912	WITHOUT_CLASSIFICATION	2.367469108800486E-5	IMPLEMENTATION
first allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9980416094426721	WITHOUT_CLASSIFICATION	0.001958390557327921	IMPLEMENTATION
sqlresulttypelist.addall( constructorargumenttypelist )	WITHOUT_CLASSIFICATION	0.9999480037932571	WITHOUT_CLASSIFICATION	5.199620674294662E-5	IMPLEMENTATION
if the data type is not an association type it could not have been in the from clause.	WITHOUT_CLASSIFICATION	0.9999988967640602	WITHOUT_CLASSIFICATION	1.103235939905976E-6	IMPLEMENTATION
sqlresulttypelist.add( type )	WITHOUT_CLASSIFICATION	0.9999574227134974	WITHOUT_CLASSIFICATION	4.2577286502695445E-5	IMPLEMENTATION
always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9992581168168266	WITHOUT_CLASSIFICATION	7.418831831732815E-4	IMPLEMENTATION
add the fetched entities	WITHOUT_CLASSIFICATION	0.9999774020993116	WITHOUT_CLASSIFICATION	2.259790068840306E-5	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999862627105882	WITHOUT_CLASSIFICATION	1.3737289411839299E-5	IMPLEMENTATION
function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995206999686037	WITHOUT_CLASSIFICATION	4.793000313963476E-4	IMPLEMENTATION
if there are any scalars (non-entities) selected render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999997542817592	WITHOUT_CLASSIFICATION	2.4571824073011823E-7	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
arraylist sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999743675934771	WITHOUT_CLASSIFICATION	2.5632406522906247E-5	IMPLEMENTATION
sqlresulttypes = ( type[] ) sqlresulttypelist.toarray( new type[sqlresulttypelist.size()] )	WITHOUT_CLASSIFICATION	0.9999657663036958	WITHOUT_CLASSIFICATION	3.4233696304145346E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994559827606528	WITHOUT_CLASSIFICATION	5.44017239347254E-4	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.7943437571679685	WITHOUT_CLASSIFICATION	0.2056562428320315	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999902136835016	WITHOUT_CLASSIFICATION	9.786316498406314E-6	IMPLEMENTATION
generate an 2d array of column names the first dimension is parallel with the return types array. the second dimension is the list of column names for each type.	WITHOUT_CLASSIFICATION	0.9999986978221926	WITHOUT_CLASSIFICATION	1.3021778072726113E-6	IMPLEMENTATION
generate the select expression.	WITHOUT_CLASSIFICATION	0.9999638808400804	WITHOUT_CLASSIFICATION	3.6119159919589206E-5	IMPLEMENTATION
union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994030057094742	WITHOUT_CLASSIFICATION	5.969942905257962E-4	IMPLEMENTATION
skip 'distinct' and 'all' so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9996469713245381	WITHOUT_CLASSIFICATION	3.530286754620351E-4	IMPLEMENTATION
create sql_token nodes for the columns.	WITHOUT_CLASSIFICATION	0.999992324696782	WITHOUT_CLASSIFICATION	7.675303217974265E-6	IMPLEMENTATION
generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999651274099899	WITHOUT_CLASSIFICATION	3.48725900101691E-5	IMPLEMENTATION
get the function name node.	WITHOUT_CLASSIFICATION	0.9999936843359342	WITHOUT_CLASSIFICATION	6.315664065807256E-6	IMPLEMENTATION
method expressions in a select should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999967896947639	WITHOUT_CLASSIFICATION	3.2103052360687324E-6	IMPLEMENTATION
if this is 'elements' then create a new from element.	WITHOUT_CLASSIFICATION	0.9999990450880335	WITHOUT_CLASSIFICATION	9.549119664347201E-7	IMPLEMENTATION
not elements(x)	WITHOUT_CLASSIFICATION	0.9969494155259023	WITHOUT_CLASSIFICATION	0.003050584474097652	IMPLEMENTATION
dialect function	WITHOUT_CLASSIFICATION	0.9999701282599855	WITHOUT_CLASSIFICATION	2.9871740014361474E-5	IMPLEMENTATION
collection 'property function'	WITHOUT_CLASSIFICATION	0.9999493093415148	WITHOUT_CLASSIFICATION	5.069065848529345E-5	IMPLEMENTATION
if the constant is an ident figure out what it means	WITHOUT_CLASSIFICATION	0.9999832311196939	WITHOUT_CLASSIFICATION	1.6768880306073997E-5	IMPLEMENTATION
ident is a class alias in the from.	WITHOUT_CLASSIFICATION	0.9999994134729813	WITHOUT_CLASSIFICATION	5.865270188583373E-7	IMPLEMENTATION
resolve to an identity column.	WITHOUT_CLASSIFICATION	0.999984004785031	WITHOUT_CLASSIFICATION	1.599521496908165E-5	IMPLEMENTATION
otherwise it's a literal.	WITHOUT_CLASSIFICATION	0.9995963502633491	WITHOUT_CLASSIFICATION	4.0364973665079376E-4	IMPLEMENTATION
the name of an entity class	WITHOUT_CLASSIFICATION	0.9999995605735137	WITHOUT_CLASSIFICATION	4.394264862942208E-7	IMPLEMENTATION
the class discriminator value	WITHOUT_CLASSIFICATION	0.999994507713452	WITHOUT_CLASSIFICATION	5.4922865480676074E-6	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999908676200715	WITHOUT_CLASSIFICATION	9.132379928495562E-6	IMPLEMENTATION
add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999986189046659	WITHOUT_CLASSIFICATION	1.3810953340400191E-6	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9998287789920185	WITHOUT_CLASSIFICATION	1.7122100798151212E-4	IMPLEMENTATION
child == parent.getfirstchild()	WITHOUT_CLASSIFICATION	0.9998385336960438	WITHOUT_CLASSIFICATION	1.6146630395612506E-4	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9998287789920185	WITHOUT_CLASSIFICATION	1.7122100798151212E-4	IMPLEMENTATION
filter conditions need to be inserted before the hql where condition and the theta join node. this is because org.hibernate.loader.loader binds the filter parameters first then it binds all the hql query parameters see org.hibernate.loader.loader.processfilterparameters().	WITHOUT_CLASSIFICATION	0.9989179665834725	WITHOUT_CLASSIFICATION	0.001082033416527448	IMPLEMENTATION
put the filters node before the hql condition and theta joins	WITHOUT_CLASSIFICATION	0.9998940585375677	WITHOUT_CLASSIFICATION	1.0594146243225496E-4	IMPLEMENTATION
add the current fragment to the filters node	WITHOUT_CLASSIFICATION	0.9998936944238676	WITHOUT_CLASSIFICATION	1.0630557613251459E-4	IMPLEMENTATION
create a new theta_joins node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999909682892818	WITHOUT_CLASSIFICATION	9.031710718245182E-6	IMPLEMENTATION
put the theta_joins node before the hql condition after the filters.	WITHOUT_CLASSIFICATION	0.9999213739124975	WITHOUT_CLASSIFICATION	7.862608750259968E-5	IMPLEMENTATION
add the current fragment to the theta_joins node	WITHOUT_CLASSIFICATION	0.9998912747646987	WITHOUT_CLASSIFICATION	1.0872523530118381E-4	IMPLEMENTATION
first try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.999998252888363	WITHOUT_CLASSIFICATION	1.747111637109975E-6	IMPLEMENTATION
unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999774986279283	WITHOUT_CLASSIFICATION	2.250137207176321E-5	IMPLEMENTATION
if that didn't work try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999966089727422	WITHOUT_CLASSIFICATION	3.3910272578350715E-6	IMPLEMENTATION
implicit joins use theta style (where pk = fk) explicit joins use join (after from)	WITHOUT_CLASSIFICATION	0.9997827777316858	WITHOUT_CLASSIFICATION	2.1722226831417897E-4	IMPLEMENTATION
locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999948257024961	WITHOUT_CLASSIFICATION	5.174297503899812E-6	IMPLEMENTATION
determine the type of the first argument	WITHOUT_CLASSIFICATION	0.9999993958148615	WITHOUT_CLASSIFICATION	6.041851384428683E-7	IMPLEMENTATION
use the dot node to emit the first column name. create the column names folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999531951615471	WITHOUT_CLASSIFICATION	4.6804838452970784E-5	IMPLEMENTATION
note this simply constructs a "raw" sql_token representing the where fragment and injects this into the tree. this "works" however it is probably not the best long-term solution. at some point we probably want to apply an additional grammar to properly tokenize this where fragment into constituent parts focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9436924185195229	WITHOUT_CLASSIFICATION	0.05630758148047718	IMPLEMENTATION
append the text of the current node.	WITHOUT_CLASSIFICATION	0.9995013853297984	WITHOUT_CLASSIFICATION	4.98614670201673E-4	IMPLEMENTATION
if the node has a first child recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999990028541138	WITHOUT_CLASSIFICATION	9.971458862476309E-7	IMPLEMENTATION
if there is a second child (rhs) recurse into that child.	WITHOUT_CLASSIFICATION	0.9999996142517484	WITHOUT_CLASSIFICATION	3.857482516093289E-7	IMPLEMENTATION
iterate through the aliasjoinsequence pairs and generate sql token nodes.	WITHOUT_CLASSIFICATION	0.9999855809211617	WITHOUT_CLASSIFICATION	1.4419078838303262E-5	IMPLEMENTATION
if the from element represents a join_fragment and it is a theta-style join convert its type from join_fragment to from_fragment	WITHOUT_CLASSIFICATION	0.9999992568668006	WITHOUT_CLASSIFICATION	7.431331994791946E-7	IMPLEMENTATION
this is used during sqlgenerator processing	WITHOUT_CLASSIFICATION	0.9999931954318113	WITHOUT_CLASSIFICATION	6.80456818860885E-6	IMPLEMENTATION
if there is a from fragment and the from element is an explicit then add the from part.	WITHOUT_CLASSIFICATION	0.9999999921247453	WITHOUT_CLASSIFICATION	7.87525471054046E-9	IMPLEMENTATION
&& stringhelper.isnotempty( frag )	WITHOUT_CLASSIFICATION	0.9999487602914358	WITHOUT_CLASSIFICATION	5.123970856433869E-5	IMPLEMENTATION
the from fragment will probably begin with ' '. remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999998414703422	WITHOUT_CLASSIFICATION	1.5852965777840716E-7	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.999937263086801	WITHOUT_CLASSIFICATION	6.273691319907998E-5	IMPLEMENTATION
select p from p in class eg.person order by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999999132751888	WITHOUT_CLASSIFICATION	8.672481112448677E-8	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999995849848575	WITHOUT_CLASSIFICATION	4.1501514248518246E-7	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.999997518493566	WITHOUT_CLASSIFICATION	2.4815064340508683E-6	IMPLEMENTATION
default mode	WITHOUT_CLASSIFICATION	0.9999837395241565	WITHOUT_CLASSIFICATION	1.6260475843446243E-5	IMPLEMENTATION
queryjoinfragment join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9999469684628631	WITHOUT_CLASSIFICATION	5.303153713698024E-5	IMPLEMENTATION
reset the dotcount (but not the path) after reset!	WITHOUT_CLASSIFICATION	0.9973032092472525	WITHOUT_CLASSIFICATION	0.002696790752747593	IMPLEMENTATION
after reset!	WITHOUT_CLASSIFICATION	0.9999576431980366	WITHOUT_CLASSIFICATION	4.235680196347107E-5	IMPLEMENTATION
we don't need to worry about any condition in the on clause here (tofromfragmentstring) since anything in the on condition is already applied to the whole query	WITHOUT_CLASSIFICATION	0.999952761054219	WITHOUT_CLASSIFICATION	4.723894578086105E-5	IMPLEMENTATION
bit_length feels a bit broken to me. we have to cast to char in order to pass when a numeric value is supplied. but of course the answers given will be wildly different for these two datatypes. 1234.5678 will be 9 bytes as a char string but will be 8 or 16 bytes as a true numeric. jay nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999999999525041	WITHOUT_CLASSIFICATION	4.7495855412825225E-11	IMPLEMENTATION
dotcount>=2	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
do the corresponding rhs	WITHOUT_CLASSIFICATION	0.9999313809503863	WITHOUT_CLASSIFICATION	6.861904961372918E-5	IMPLEMENTATION
if its "id"	WITHOUT_CLASSIFICATION	0.9999919911660992	WITHOUT_CLASSIFICATION	8.008833900771777E-6	IMPLEMENTATION
or its the id property name	WITHOUT_CLASSIFICATION	0.9999610147823002	WITHOUT_CLASSIFICATION	3.898521769994288E-5	IMPLEMENTATION
join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9999469684628631	WITHOUT_CLASSIFICATION	5.303153713698024E-5	IMPLEMENTATION
important!!	WITHOUT_CLASSIFICATION	0.999959719844842	WITHOUT_CLASSIFICATION	4.028015515792919E-5	IMPLEMENTATION
string[] keycols = collpersister.getkeycolumnnames()	WITHOUT_CLASSIFICATION	0.9999391908665851	WITHOUT_CLASSIFICATION	6.080913341479743E-5	IMPLEMENTATION
an association	WITHOUT_CLASSIFICATION	0.9999934613196921	WITHOUT_CLASSIFICATION	6.538680307952622E-6	IMPLEMENTATION
allow index() function	WITHOUT_CLASSIFICATION	0.9999013468907595	WITHOUT_CLASSIFICATION	9.865310924042558E-5	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9948661811616615	WITHOUT_CLASSIFICATION	0.005133818838338551	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999995849848575	WITHOUT_CLASSIFICATION	4.1501514248518246E-7	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9999597100692407	WITHOUT_CLASSIFICATION	4.0289930759395026E-5	IMPLEMENTATION
collections of values	WITHOUT_CLASSIFICATION	0.9999975971142999	WITHOUT_CLASSIFICATION	2.402885700109499E-6	IMPLEMENTATION
opening paren in new foo ( )	WITHOUT_CLASSIFICATION	0.9999981623692696	WITHOUT_CLASSIFICATION	1.8376307304011214E-6	IMPLEMENTATION
if we are inside a new result() but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999946411096102	WITHOUT_CLASSIFICATION	5.358890389698948E-6	IMPLEMENTATION
special case	WITHOUT_CLASSIFICATION	0.9999746680695394	WITHOUT_CLASSIFICATION	2.533193046055752E-5	IMPLEMENTATION
the name of an sql function	WITHOUT_CLASSIFICATION	0.9999995656365959	WITHOUT_CLASSIFICATION	4.3436340420987295E-7	IMPLEMENTATION
null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999962861132173	WITHOUT_CLASSIFICATION	3.713886782796182E-6	IMPLEMENTATION
this is basically a copy/paste of orderbyparser might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999889753899024	WITHOUT_CLASSIFICATION	1.102461009755278E-5	IMPLEMENTATION
select p from p in class eg.person group by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999998290560188	WITHOUT_CLASSIFICATION	1.7094398125214194E-7	IMPLEMENTATION
return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9998793716135386	WITHOUT_CLASSIFICATION	1.2062838646141834E-4	IMPLEMENTATION
register collection role	WITHOUT_CLASSIFICATION	0.9998928781398593	WITHOUT_CLASSIFICATION	1.0712186014078361E-4	IMPLEMENTATION
the keyword used to specify an identity column if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999986816146547	WITHOUT_CLASSIFICATION	1.3183853453540696E-6	IMPLEMENTATION
.getelementpropertymapping()	WITHOUT_CLASSIFICATION	0.999974115135964	WITHOUT_CLASSIFICATION	2.5884864035990164E-5	IMPLEMENTATION
crossjoins.add(name)	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
ie no select clause in hql	WITHOUT_CLASSIFICATION	0.9999982921744988	WITHOUT_CLASSIFICATION	1.7078255012392231E-6	IMPLEMENTATION
initialize the set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999955364541833	WITHOUT_CLASSIFICATION	4.463545816721976E-6	IMPLEMENTATION
ie. no select clause	WITHOUT_CLASSIFICATION	0.9999810622526627	WITHOUT_CLASSIFICATION	1.8937747337276917E-5	IMPLEMENTATION
there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999919027124269	WITHOUT_CLASSIFICATION	8.097287573133926E-6	IMPLEMENTATION
return the concrete type or the underlying type if a concrete type was not specified	WITHOUT_CLASSIFICATION	0.9999970256878815	WITHOUT_CLASSIFICATION	2.9743121185345004E-6	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9999597100692407	WITHOUT_CLASSIFICATION	4.0289930759395026E-5	IMPLEMENTATION
q.addcollection(collectionname collectionrole)	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9943784825353527	WITHOUT_CLASSIFICATION	0.005621517464647265	IMPLEMENTATION
can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999506197040514	WITHOUT_CLASSIFICATION	4.938029594860144E-5	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9988159323395501	WITHOUT_CLASSIFICATION	0.0011840676604499242	IMPLEMENTATION
this is the legacy behaviour for hql queries	WITHOUT_CLASSIFICATION	0.9999935104625113	WITHOUT_CLASSIFICATION	6.489537488737197E-6	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989294471933367	WITHOUT_CLASSIFICATION	0.0010705528066633759	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989294471933367	WITHOUT_CLASSIFICATION	0.0010705528066633759	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces early exit!!!!	WITHOUT_CLASSIFICATION	0.999993729621024	WITHOUT_CLASSIFICATION	6.2703789760749405E-6	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989294471933367	WITHOUT_CLASSIFICATION	0.0010705528066633759	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989294471933367	WITHOUT_CLASSIFICATION	0.0010705528066633759	IMPLEMENTATION
need this since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9996343099710404	WITHOUT_CLASSIFICATION	3.656900289595947E-4	IMPLEMENTATION
tokens that close a sub expression tokens that open a sub expression tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.999947141307069	WITHOUT_CLASSIFICATION	5.2858692930981726E-5	IMPLEMENTATION
expressionterminators.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999652361061822	WITHOUT_CLASSIFICATION	3.4763893817767697E-5	IMPLEMENTATION
expressionopeners.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999652361061822	WITHOUT_CLASSIFICATION	3.4763893817767697E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource) early exit!!!!	WITHOUT_CLASSIFICATION	0.9998982086567643	WITHOUT_CLASSIFICATION	1.0179134323574335E-4	IMPLEMENTATION
otherwise a trim-specification and/or a trim-character have been specified we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character (what is to be trimmed off?) the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9980714670185843	WITHOUT_CLASSIFICATION	0.001928532981415706	IMPLEMENTATION
inside a between and expression	WITHOUT_CLASSIFICATION	0.999890992895294	WITHOUT_CLASSIFICATION	1.0900710470597263E-4	IMPLEMENTATION
were an odd or even number of nots encountered the join string built up by compound paths inside this expression a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999999303463294	WITHOUT_CLASSIFICATION	6.965367057431268E-8	IMPLEMENTATION
ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999672674919358	WITHOUT_CLASSIFICATION	3.273250806425223E-5	IMPLEMENTATION
cope with []	WITHOUT_CLASSIFICATION	0.9999409558499279	WITHOUT_CLASSIFICATION	5.904415007213024E-5	IMPLEMENTATION
cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9993670711479398	WITHOUT_CLASSIFICATION	6.329288520602548E-4	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.999988906546777	WITHOUT_CLASSIFICATION	1.1093453222994879E-5	IMPLEMENTATION
cope with a subselect	WITHOUT_CLASSIFICATION	0.9999589777155112	WITHOUT_CLASSIFICATION	4.102228448877091E-5	IMPLEMENTATION
cope with special cases of and not ()	WITHOUT_CLASSIFICATION	0.9991602077000021	WITHOUT_CLASSIFICATION	8.39792299997823E-4	IMPLEMENTATION
close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999977402060195	WITHOUT_CLASSIFICATION	2.2597939805483972E-6	IMPLEMENTATION
take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999915142112807	WITHOUT_CLASSIFICATION	8.485788719263877E-6	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999967205777676	WITHOUT_CLASSIFICATION	3.2794222324449507E-6	IMPLEMENTATION
process a token mapping oo path expressions to sql expressions	WITHOUT_CLASSIFICATION	0.9999529488925119	WITHOUT_CLASSIFICATION	4.705110748807913E-5	IMPLEMENTATION
open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999619991933348	WITHOUT_CLASSIFICATION	3.800080666505771E-5	IMPLEMENTATION
cope with special cases of and not )	WITHOUT_CLASSIFICATION	0.987659651093583	WITHOUT_CLASSIFICATION	0.01234034890641708	IMPLEMENTATION
the next one up must also be	WITHOUT_CLASSIFICATION	0.9999305668970047	WITHOUT_CLASSIFICATION	6.943310299532592E-5	IMPLEMENTATION
add any joins	WITHOUT_CLASSIFICATION	0.9999769017663598	WITHOUT_CLASSIFICATION	2.3098233640196723E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999967205777676	WITHOUT_CLASSIFICATION	3.2794222324449507E-6	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.999997518493566	WITHOUT_CLASSIFICATION	2.4815064340508683E-6	IMPLEMENTATION
path expression	WITHOUT_CLASSIFICATION	0.9995221324810676	WITHOUT_CLASSIFICATION	4.7786751893234326E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999737870611612	WITHOUT_CLASSIFICATION	2.621293883874997E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998645189377698	WITHOUT_CLASSIFICATION	1.354810622301494E-4	IMPLEMENTATION
anything else	WITHOUT_CLASSIFICATION	0.9998942079290483	WITHOUT_CLASSIFICATION	1.0579207095176996E-4	IMPLEMENTATION
the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9997886449216586	WITHOUT_CLASSIFICATION	2.1135507834128527E-4	IMPLEMENTATION
careful with this!	WITHOUT_CLASSIFICATION	0.9998264133622315	WITHOUT_CLASSIFICATION	1.7358663776850916E-4	IMPLEMENTATION
the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9998540358333944	WITHOUT_CLASSIFICATION	1.4596416660556604E-4	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.9999861802355224	WITHOUT_CLASSIFICATION	1.381976447760698E-5	IMPLEMENTATION
notice no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999997462387424	WITHOUT_CLASSIFICATION	2.537612576127122E-7	IMPLEMENTATION
cannot instantiate	WITHOUT_CLASSIFICATION	0.9999961684060722	WITHOUT_CLASSIFICATION	3.83159392784697E-6	IMPLEMENTATION
start by looking for hql keywords	WITHOUT_CLASSIFICATION	0.9999989038584529	WITHOUT_CLASSIFICATION	1.0961415470143822E-6	IMPLEMENTATION
inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999652313791516	WITHOUT_CLASSIFICATION	3.4768620848350015E-5	IMPLEMENTATION
'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9996457733791407	WITHOUT_CLASSIFICATION	3.5422662085927064E-4	IMPLEMENTATION
now anything that is not a hql keyword	WITHOUT_CLASSIFICATION	0.9982709452805344	WITHOUT_CLASSIFICATION	0.0017290547194655586	IMPLEMENTATION
process the "old" hql style where aliases appear _first_ ie. using the in or in class constructions	WITHOUT_CLASSIFICATION	0.9999994097591572	WITHOUT_CLASSIFICATION	5.902408426789904E-7	IMPLEMENTATION
treat it as a classname	WITHOUT_CLASSIFICATION	0.9999260272243994	WITHOUT_CLASSIFICATION	7.39727756005512E-5	IMPLEMENTATION
treat it as a path expression	WITHOUT_CLASSIFICATION	0.9991126586264844	WITHOUT_CLASSIFICATION	8.873413735157589E-4	IMPLEMENTATION
starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999982541777215	WITHOUT_CLASSIFICATION	1.7458222785483086E-6	IMPLEMENTATION
starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9996336324225167	WITHOUT_CLASSIFICATION	3.663675774833577E-4	IMPLEMENTATION
allow odmg oql style from person p p.cars c	WITHOUT_CLASSIFICATION	0.999972672354258	WITHOUT_CLASSIFICATION	2.7327645741942165E-5	IMPLEMENTATION
handle quoted strings	WITHOUT_CLASSIFICATION	0.9994841609182432	WITHOUT_CLASSIFICATION	5.158390817568082E-4	IMPLEMENTATION
object insertions updates and deletions have list semantics because they must happen in the right order so as to respect referential integrity	WITHOUT_CLASSIFICATION	0.9999997700650454	WITHOUT_CLASSIFICATION	2.299349546253419E-7	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.9999861802355224	WITHOUT_CLASSIFICATION	1.381976447760698E-5	IMPLEMENTATION
ignore whitespace	WITHOUT_CLASSIFICATION	0.9998997690959167	WITHOUT_CLASSIFICATION	1.0023090408322507E-4	IMPLEMENTATION
do replacements	WITHOUT_CLASSIFICATION	0.999936476018861	WITHOUT_CLASSIFICATION	6.352398113888209E-5	IMPLEMENTATION
handle hql2 collection syntax	WITHOUT_CLASSIFICATION	0.999611889898137	WITHOUT_CLASSIFICATION	3.8811010186302E-4	IMPLEMENTATION
uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999898736590546	WITHOUT_CLASSIFICATION	1.0126340945549573E-5	IMPLEMENTATION
abstractselectingdelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999655718959796	WITHOUT_CLASSIFICATION	3.4428104020508654E-5	IMPLEMENTATION
hilo params	WITHOUT_CLASSIFICATION	0.9999601050647461	WITHOUT_CLASSIFICATION	3.989493525391677E-5	IMPLEMENTATION
sql = query	WITHOUT_CLASSIFICATION	0.9999867015361505	WITHOUT_CLASSIFICATION	1.3298463849412685E-5	IMPLEMENTATION
performance opt	WITHOUT_CLASSIFICATION	0.9991883315096552	WITHOUT_CLASSIFICATION	8.116684903447203E-4	IMPLEMENTATION
sql = update	WITHOUT_CLASSIFICATION	0.99999502446482	WITHOUT_CLASSIFICATION	4.975535179987086E-6	IMPLEMENTATION
hilo config	WITHOUT_CLASSIFICATION	0.9997524039870646	WITHOUT_CLASSIFICATION	2.475960129354214E-4	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999746923082348	WITHOUT_CLASSIFICATION	2.5307691765229524E-5	IMPLEMENTATION
don't allow comments on these insert statements as comments totally blow up the oracle getgeneratedkeys "support" (	WITHOUT_CLASSIFICATION	0.9999408039706307	WITHOUT_CLASSIFICATION	5.9196029369395615E-5	IMPLEMENTATION
abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999999234058511	WITHOUT_CLASSIFICATION	7.65941489125213E-8	IMPLEMENTATION
throw new identifiergenerationexception("save associated object first or disable cascade for inverse association")	WITHOUT_CLASSIFICATION	0.9999989569152383	WITHOUT_CLASSIFICATION	1.0430847617126775E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9993104425975381	WITHOUT_CLASSIFICATION	6.8955740246186E-4	IMPLEMENTATION
do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999956260234913	WITHOUT_CLASSIFICATION	4.37397650863218E-6	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999983059925557	WITHOUT_CLASSIFICATION	1.6940074443396595E-6	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999746923082348	WITHOUT_CLASSIFICATION	2.5307691765229524E-5	IMPLEMENTATION
do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999342807976869	WITHOUT_CLASSIFICATION	6.571920231309274E-5	IMPLEMENTATION
column and table should be renamed but it would break the public api	WITHOUT_CLASSIFICATION	0.9999900433228085	WITHOUT_CLASSIFICATION	9.95667719154005E-6	IMPLEMENTATION
loaded entity instances by entitykey	WITHOUT_CLASSIFICATION	0.9999888224936253	WITHOUT_CLASSIFICATION	1.1177506374758173E-5	IMPLEMENTATION
if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999968957610917	WITHOUT_CLASSIFICATION	3.104238908162731E-6	IMPLEMENTATION
the default	WITHOUT_CLASSIFICATION	0.9999964095169583	WITHOUT_CLASSIFICATION	3.590483041627574E-6	IMPLEMENTATION
unfortunately not really safe to normalize this to 1 as an initial value like we do the others because we would not be able to control this if we are using a sequence	WITHOUT_CLASSIFICATION	0.9995391798399906	WITHOUT_CLASSIFICATION	4.6082016000938825E-4	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9993104425975381	WITHOUT_CLASSIFICATION	6.8955740246186E-4	IMPLEMENTATION
identity map of collectionentry instances by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999912185768821	WITHOUT_CLASSIFICATION	8.781423117909297E-6	IMPLEMENTATION
general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999546874461659	WITHOUT_CLASSIFICATION	4.531255383420235E-5	IMPLEMENTATION
table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999937147532455	WITHOUT_CLASSIFICATION	6.285246754506628E-5	IMPLEMENTATION
configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9580885439274678	WITHOUT_CLASSIFICATION	0.041911456072532195	IMPLEMENTATION
identifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998303322352962	WITHOUT_CLASSIFICATION	1.696677647038394E-4	IMPLEMENTATION
persistentidentifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998303322352962	WITHOUT_CLASSIFICATION	1.696677647038394E-4	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999942194042427	WITHOUT_CLASSIFICATION	5.780595757204708E-6	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999942194042427	WITHOUT_CLASSIFICATION	5.780595757204708E-6	IMPLEMENTATION
fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999957188562462	WITHOUT_CLASSIFICATION	4.281143753817057E-6	IMPLEMENTATION
we just hit the last position	WITHOUT_CLASSIFICATION	0.9999965601236215	WITHOUT_CLASSIFICATION	3.439876378668652E-6	IMPLEMENTATION
scroll ahead	WITHOUT_CLASSIFICATION	0.9999628631677598	WITHOUT_CLASSIFICATION	3.71368322401834E-5	IMPLEMENTATION
scroll backward	WITHOUT_CLASSIFICATION	0.9999345497776165	WITHOUT_CLASSIFICATION	6.545022238347147E-5	IMPLEMENTATION
we have not yet hit the last result	WITHOUT_CLASSIFICATION	0.9967266005266235	WITHOUT_CLASSIFICATION	0.003273399473376517	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999476485449345	WITHOUT_CLASSIFICATION	5.235145506550043E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999922042804414	WITHOUT_CLASSIFICATION	7.795719558468095E-6	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999697308857942	WITHOUT_CLASSIFICATION	3.0269114205731797E-5	IMPLEMENTATION
do this when all the properties are updateable since there is a certain likelihood that the information will already be snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999996778894328	WITHOUT_CLASSIFICATION	3.221105672900333E-7	IMPLEMENTATION
inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999944579747293	WITHOUT_CLASSIFICATION	5.542025270698885E-5	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999476485449345	WITHOUT_CLASSIFICATION	5.235145506550043E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999922042804414	WITHOUT_CLASSIFICATION	7.795719558468095E-6	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999697308857942	WITHOUT_CLASSIFICATION	3.0269114205731797E-5	IMPLEMENTATION
caches	WITHOUT_CLASSIFICATION	0.9999858965479121	WITHOUT_CLASSIFICATION	1.4103452087855582E-5	IMPLEMENTATION
generators	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
cache region is defined by the root-class in the hierarchy	WITHOUT_CLASSIFICATION	0.9999994365235098	WITHOUT_CLASSIFICATION	5.634764902763225E-7	IMPLEMENTATION
check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999991067144758	WITHOUT_CLASSIFICATION	8.932855242897925E-7	IMPLEMENTATION
after all persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999945592322375	WITHOUT_CLASSIFICATION	5.440767762598218E-6	IMPLEMENTATION
if we get here it is possible that we have a proxy 'in the way' of the merge map resolution note decided to put this here rather than in the above loop as i was nervous about the performance of the loop-in-loop especially considering this is far more likely the 'edge case'	WITHOUT_CLASSIFICATION	0.9999983931999763	WITHOUT_CLASSIFICATION	1.6068000237031299E-6	IMPLEMENTATION
jndi + serialization	WITHOUT_CLASSIFICATION	0.999906589460665	WITHOUT_CLASSIFICATION	9.341053933505309E-5	IMPLEMENTATION
checking for named queries	WITHOUT_CLASSIFICATION	0.9999944339566468	WITHOUT_CLASSIFICATION	5.566043353203965E-6	IMPLEMENTATION
stats	WITHOUT_CLASSIFICATION	0.9999908117482755	WITHOUT_CLASSIFICATION	9.188251724386136E-6	IMPLEMENTATION
entitynotfounddelegate	WITHOUT_CLASSIFICATION	0.999974115135964	WITHOUT_CLASSIFICATION	2.5884864035990164E-5	IMPLEMENTATION
check named hql queries	WITHOUT_CLASSIFICATION	0.9999448236930193	WITHOUT_CLASSIFICATION	5.51763069807609E-5	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999946871088815	WITHOUT_CLASSIFICATION	5.3128911184741154E-6	IMPLEMENTATION
prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9998992885126321	WITHOUT_CLASSIFICATION	1.0071148736781453E-4	IMPLEMENTATION
from javax.naming.referenceable	WITHOUT_CLASSIFICATION	0.999990525730208	WITHOUT_CLASSIFICATION	9.474269792025683E-6	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999950266171598	WITHOUT_CLASSIFICATION	4.973382840216921E-6	IMPLEMENTATION
for a dynamic-class	WITHOUT_CLASSIFICATION	0.999986572809948	WITHOUT_CLASSIFICATION	1.3427190052098396E-5	IMPLEMENTATION
test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9999997701322313	WITHOUT_CLASSIFICATION	2.2986776874401183E-7	IMPLEMENTATION
note early exit	WITHOUT_CLASSIFICATION	0.9999489733611261	WITHOUT_CLASSIFICATION	5.102663887381514E-5	IMPLEMENTATION
for backward-compatability	WITHOUT_CLASSIFICATION	0.9999893822905959	WITHOUT_CLASSIFICATION	1.0617709404071522E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.9997601701795837	WITHOUT_CLASSIFICATION	2.3982982041628525E-4	IMPLEMENTATION
to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999989658898901	WITHOUT_CLASSIFICATION	1.034110109810309E-6	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999949373704027	WITHOUT_CLASSIFICATION	5.062629597314856E-6	IMPLEMENTATION
must add to jndi _after_ adding to hashmaps because some jndi servers use serialization	WITHOUT_CLASSIFICATION	0.9971666751665998	WITHOUT_CLASSIFICATION	0.002833324833400129	IMPLEMENTATION
make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9997977377301579	WITHOUT_CLASSIFICATION	2.022622698421508E-4	IMPLEMENTATION
for each of the defined parameters make sure its value has been set	WITHOUT_CLASSIFICATION	0.9999940381954026	WITHOUT_CLASSIFICATION	5.961804597485895E-6	IMPLEMENTATION
we never need to apply locks to the sql	WITHOUT_CLASSIFICATION	0.9965687074702535	WITHOUT_CLASSIFICATION	0.003431292529746394	IMPLEMENTATION
inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999666737141536	WITHOUT_CLASSIFICATION	3.332628584643335E-5	IMPLEMENTATION
deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999965127241675	WITHOUT_CLASSIFICATION	3.487275832502871E-5	IMPLEMENTATION
during deserialization we need to reconnect all proxies and collections to this session as well as the entityentry and collectionentry instances these associations are transient because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999932760083377	WITHOUT_CLASSIFICATION	6.723991662383479E-6	IMPLEMENTATION
updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999629692685709	WITHOUT_CLASSIFICATION	3.703073142905631E-5	IMPLEMENTATION
loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999813864084954	WITHOUT_CLASSIFICATION	1.8613591504549483E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999934872379849	WITHOUT_CLASSIFICATION	6.512762015200989E-6	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999934872379849	WITHOUT_CLASSIFICATION	6.512762015200989E-6	IMPLEMENTATION
first try to load it from the temp pc associated to this ss	WITHOUT_CLASSIFICATION	0.9999749458080195	WITHOUT_CLASSIFICATION	2.5054191980447166E-5	IMPLEMENTATION
if the metadata allowed proxy creation and caller did not request forceful eager loading generate a proxy	WITHOUT_CLASSIFICATION	0.9998631822427106	WITHOUT_CLASSIFICATION	1.3681775728933962E-4	IMPLEMENTATION
otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9996880058103774	WITHOUT_CLASSIFICATION	3.119941896225292E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999973860674544	WITHOUT_CLASSIFICATION	2.613932545623303E-6	IMPLEMENTATION
no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9998649718018797	WITHOUT_CLASSIFICATION	1.3502819812028077E-4	IMPLEMENTATION
after setting values to object entitymode	WITHOUT_CLASSIFICATION	0.999999538830212	WITHOUT_CLASSIFICATION	4.6116978798871923E-7	IMPLEMENTATION
for ejb3	WITHOUT_CLASSIFICATION	0.9999942114162729	WITHOUT_CLASSIFICATION	5.788583727154918E-6	IMPLEMENTATION
just ignore	WITHOUT_CLASSIFICATION	0.9999429539271489	WITHOUT_CLASSIFICATION	5.7046072851108835E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9998894133914032	WITHOUT_CLASSIFICATION	1.1058660859667627E-4	IMPLEMENTATION
saveorupdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999037542302986	WITHOUT_CLASSIFICATION	9.624576970135776E-5	IMPLEMENTATION
update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999037655989668	WITHOUT_CLASSIFICATION	9.623440103330602E-5	IMPLEMENTATION
lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999037542302986	WITHOUT_CLASSIFICATION	9.624576970135776E-5	IMPLEMENTATION
persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999037542302986	WITHOUT_CLASSIFICATION	9.624576970135776E-5	IMPLEMENTATION
persistonflush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999037542302986	WITHOUT_CLASSIFICATION	9.624576970135776E-5	IMPLEMENTATION
merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999037542302986	WITHOUT_CLASSIFICATION	9.624576970135776E-5	IMPLEMENTATION
saveorupdatecopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999037542302986	WITHOUT_CLASSIFICATION	9.624576970135776E-5	IMPLEMENTATION
delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999037542302986	WITHOUT_CLASSIFICATION	9.624576970135776E-5	IMPLEMENTATION
load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999037542302986	WITHOUT_CLASSIFICATION	9.624576970135776E-5	IMPLEMENTATION
refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999037542302986	WITHOUT_CLASSIFICATION	9.624576970135776E-5	IMPLEMENTATION
replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999037542302986	WITHOUT_CLASSIFICATION	9.624576970135776E-5	IMPLEMENTATION
do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9948362413375095	WITHOUT_CLASSIFICATION	0.005163758662490484	IMPLEMENTATION
this is an internal error of some sort	WITHOUT_CLASSIFICATION	0.999812770418018	WITHOUT_CLASSIFICATION	1.8722958198215007E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999967319949428	WITHOUT_CLASSIFICATION	3.2680050572122617E-6	IMPLEMENTATION
only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999956442413618	WITHOUT_CLASSIFICATION	4.355758638257974E-6	IMPLEMENTATION
if it was previously unreferenced we need to flush in order to get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999999955730539	WITHOUT_CLASSIFICATION	4.426946081169122E-9	IMPLEMENTATION
not for internal use	WITHOUT_CLASSIFICATION	0.9976544136481588	WITHOUT_CLASSIFICATION	0.0023455863518412967	IMPLEMENTATION
otherwise we only need to flush if there are in-memory changes to the queried tables	WITHOUT_CLASSIFICATION	0.9999305941146635	WITHOUT_CLASSIFICATION	6.940588533661118E-5	IMPLEMENTATION
might need to run a different filter entirely after the flush because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9619378592040531	WITHOUT_CLASSIFICATION	0.038062140795946844	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999967319949428	WITHOUT_CLASSIFICATION	3.2680050572122617E-6	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999967319949428	WITHOUT_CLASSIFICATION	3.2680050572122617E-6	IMPLEMENTATION
if it is initialized see if the underlying instance is contained since we need to account for the fact that it might have been evicted	WITHOUT_CLASSIFICATION	0.999990499135992	WITHOUT_CLASSIFICATION	9.500864007971668E-6	IMPLEMENTATION
basically just an adapted copy of find(criteriaimpl)	WITHOUT_CLASSIFICATION	0.9999849642479848	WITHOUT_CLASSIFICATION	1.5035752015279454E-5	IMPLEMENTATION
it is possible for this method to be called during flush processing so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9997699068043905	WITHOUT_CLASSIFICATION	2.3009319560952175E-4	IMPLEMENTATION
nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999953204158597	WITHOUT_CLASSIFICATION	4.679584140357087E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999573992716272	WITHOUT_CLASSIFICATION	4.260072837281314E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.9997601701795837	WITHOUT_CLASSIFICATION	2.3982982041628525E-4	IMPLEMENTATION
we need to writeobject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9996697256646719	WITHOUT_CLASSIFICATION	3.302743353281022E-4	IMPLEMENTATION
the old-time stand-by	WITHOUT_CLASSIFICATION	0.9999835860623485	WITHOUT_CLASSIFICATION	1.6413937651508053E-5	IMPLEMENTATION
parameter bind values	WITHOUT_CLASSIFICATION	0.9999989659527101	WITHOUT_CLASSIFICATION	1.0340472898761557E-6	IMPLEMENTATION
parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999444793729498	WITHOUT_CLASSIFICATION	5.552062705008207E-5	IMPLEMENTATION
prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.99999849870649	WITHOUT_CLASSIFICATION	1.501293509958971E-6	IMPLEMENTATION
execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999771549450371	WITHOUT_CLASSIFICATION	2.2845054962918008E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999727392505935	WITHOUT_CLASSIFICATION	2.7260749406609166E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999727392505935	WITHOUT_CLASSIFICATION	2.7260749406609166E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999727392505935	WITHOUT_CLASSIFICATION	2.7260749406609166E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999727392505935	WITHOUT_CLASSIFICATION	2.7260749406609166E-5	IMPLEMENTATION
fieldinterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999655718959796	WITHOUT_CLASSIFICATION	3.4428104020508654E-5	IMPLEMENTATION
subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999675348126367	WITHOUT_CLASSIFICATION	3.246518736331524E-5	IMPLEMENTATION
let's assume that there is only one lazy fetch group for now!	WITHOUT_CLASSIFICATION	0.9999949574658276	WITHOUT_CLASSIFICATION	5.042534172409941E-6	IMPLEMENTATION
fieldhandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999655718959796	WITHOUT_CLASSIFICATION	3.4428104020508654E-5	IMPLEMENTATION
should not need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9984473710283226	WITHOUT_CLASSIFICATION	0.001552628971677437	IMPLEMENTATION
should probably no-op commit/rollback here at least in jta scenarios	WITHOUT_CLASSIFICATION	0.9999913892665666	WITHOUT_CLASSIFICATION	8.610733433417092E-6	IMPLEMENTATION
base expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999916458067477	WITHOUT_CLASSIFICATION	8.354193252314404E-6	IMPLEMENTATION
various expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999614960653145	WITHOUT_CLASSIFICATION	3.8503934685524786E-5	IMPLEMENTATION
explicitly perform no checking	WITHOUT_CLASSIFICATION	0.9999810089862348	WITHOUT_CLASSIFICATION	1.8991013765198245E-5	IMPLEMENTATION
used from testsuite	WITHOUT_CLASSIFICATION	0.9999949726968174	WITHOUT_CLASSIFICATION	5.02730318266924E-6	IMPLEMENTATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999998213831104	WITHOUT_CLASSIFICATION	1.7861688959556807E-7	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999218141351409	WITHOUT_CLASSIFICATION	7.818586485903004E-5	IMPLEMENTATION
register synch stats.connect()	WITHOUT_CLASSIFICATION	0.999978580531849	WITHOUT_CLASSIFICATION	2.141946815100144E-5	IMPLEMENTATION
noncritical swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999506998835622	WITHOUT_CLASSIFICATION	4.9300116437712566E-5	IMPLEMENTATION
calls executebatch()	WITHOUT_CLASSIFICATION	0.9999243779325251	WITHOUT_CLASSIFICATION	7.562206747483864E-5	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9999606044786172	WITHOUT_CLASSIFICATION	3.9395521382724177E-5	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9999606044786172	WITHOUT_CLASSIFICATION	3.9395521382724177E-5	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9999606044786172	WITHOUT_CLASSIFICATION	3.9395521382724177E-5	IMPLEMENTATION
sybase driver (jconnect) throwing npe here in certain cases but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.999998031060527	WITHOUT_CLASSIFICATION	1.9689394730554373E-6	IMPLEMENTATION
see explanation above	WITHOUT_CLASSIFICATION	0.9999711181943424	WITHOUT_CLASSIFICATION	2.8881805657626137E-5	IMPLEMENTATION
if we are in the process of releasing no sense checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999999868210994	WITHOUT_CLASSIFICATION	1.3178900667514988E-8	IMPLEMENTATION
early exit!!!!	WITHOUT_CLASSIFICATION	0.9999766063429968	WITHOUT_CLASSIFICATION	2.3393657003188186E-5	IMPLEMENTATION
resultset impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999675765290966	WITHOUT_CLASSIFICATION	3.242347090349659E-5	IMPLEMENTATION
resultset impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999675765290966	WITHOUT_CLASSIFICATION	3.242347090349659E-5	IMPLEMENTATION
refer to comment in statefulpersistencecontext.addcollection()	WITHOUT_CLASSIFICATION	0.9999971590216578	WITHOUT_CLASSIFICATION	2.8409783422612427E-6	IMPLEMENTATION
connectionmanager.callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998303322352962	WITHOUT_CLASSIFICATION	1.696677647038394E-4	IMPLEMENTATION
note success = false because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9978367997604856	WITHOUT_CLASSIFICATION	0.0021632002395145303	IMPLEMENTATION
we already have a callback registered either a local (org.hibernate.transaction) transaction has accepted callback responsibilities or we have previously registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999985521852744	WITHOUT_CLASSIFICATION	1.4478147256085789E-6	IMPLEMENTATION
the configured transaction-factory says it only supports local callback mode so no sense attempting to register a jta synchronization	WITHOUT_CLASSIFICATION	0.9999540763789697	WITHOUT_CLASSIFICATION	4.592362103035474E-5	IMPLEMENTATION
transactions marked for rollback-only cause some tm impls to throw exceptions	WITHOUT_CLASSIFICATION	0.99996986077247	WITHOUT_CLASSIFICATION	3.0139227529983255E-5	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999182231150837	WITHOUT_CLASSIFICATION	8.1776884916249E-5	IMPLEMENTATION
postinitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999985694162812	WITHOUT_CLASSIFICATION	1.4305837188082225E-6	IMPLEMENTATION
cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999533702947374	WITHOUT_CLASSIFICATION	4.66297052624963E-5	IMPLEMENTATION
todo for 4.0 private static final logger log = loggerfactory.getlogger( sqlstatementlogger.class ) this is the legacy logging 'category'	WITHOUT_CLASSIFICATION	0.9985404504904137	WITHOUT_CLASSIFICATION	0.0014595495095863355	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999778229834564	WITHOUT_CLASSIFICATION	2.2177016543632388E-5	IMPLEMENTATION
don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999567406872077	WITHOUT_CLASSIFICATION	4.3259312792189204E-5	IMPLEMENTATION
don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999828306665512	WITHOUT_CLASSIFICATION	1.716933344867687E-5	IMPLEMENTATION
position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999842814819009	WITHOUT_CLASSIFICATION	1.5718518099090608E-5	IMPLEMENTATION
sequentially read the result set in reverse until we recognize a change in the key value. at that point we are pointed at the last physical sequential row for the logical row in which we are interested in processing	WITHOUT_CLASSIFICATION	0.9999999992867467	WITHOUT_CLASSIFICATION	7.132534530604462E-10	IMPLEMENTATION
read backwards until we read past the first physical sequential row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999999118693033	WITHOUT_CLASSIFICATION	8.813069666408065E-8	IMPLEMENTATION
finally read ahead one row to position result set cursor at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999999854422903	WITHOUT_CLASSIFICATION	1.4557709703599034E-8	IMPLEMENTATION
now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999999299484267	WITHOUT_CLASSIFICATION	7.005157334036671E-8	IMPLEMENTATION
force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9998737980623794	WITHOUT_CLASSIFICATION	1.2620193762051925E-4	IMPLEMENTATION
this is equivalent to the old behavior	WITHOUT_CLASSIFICATION	0.9999690888644568	WITHOUT_CLASSIFICATION	3.091113554331073E-5	IMPLEMENTATION
if null owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999998865236516	WITHOUT_CLASSIFICATION	1.1347634843759441E-7	IMPLEMENTATION
final string querystring	WITHOUT_CLASSIFICATION	0.9999942291281607	WITHOUT_CLASSIFICATION	5.77087183929368E-6	IMPLEMENTATION
if it was a reference to self don't need to nullify unless we are using native id generation in which case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999999822703481	WITHOUT_CLASSIFICATION	1.7729651844971764E-8	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999940142652642	WITHOUT_CLASSIFICATION	5.985734735750409E-6	IMPLEMENTATION
in an effort to avoid concurrent-modification-exceptions (from potential recursive calls back through here as a result of the eventual call to persistentcollection#endread) we scan the internal loadingcollections map for matches and store those matches in a temp collection. the temp collection is then used to "drive" the #endread processing.	WITHOUT_CLASSIFICATION	0.9999998544871644	WITHOUT_CLASSIFICATION	1.4551283554944182E-7	IMPLEMENTATION
we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999881385121766	WITHOUT_CLASSIFICATION	1.1861487823365652E-5	IMPLEMENTATION
can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999844430925082	WITHOUT_CLASSIFICATION	1.5556907491805977E-5	IMPLEMENTATION
first we need to suspend any current jta transaction and obtain a jdbc connection	WITHOUT_CLASSIFICATION	0.9892393283020606	WITHOUT_CLASSIFICATION	0.010760671697939353	IMPLEMENTATION
getresultlist(results)	WITHOUT_CLASSIFICATION	0.999974115135964	WITHOUT_CLASSIFICATION	2.5884864035990164E-5	IMPLEMENTATION
if we only returned one entity query by key is more efficient	WITHOUT_CLASSIFICATION	0.9999983963509341	WITHOUT_CLASSIFICATION	1.6036490659695698E-6	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9989714370904453	WITHOUT_CLASSIFICATION	0.0010285629095546148	IMPLEMENTATION
handle empty collection	WITHOUT_CLASSIFICATION	0.9933200316957287	WITHOUT_CLASSIFICATION	0.006679968304271322	IMPLEMENTATION
else no collection element but also no owner	WITHOUT_CLASSIFICATION	0.9999992866653737	WITHOUT_CLASSIFICATION	7.133346263120256E-7	IMPLEMENTATION
handle empty collections	WITHOUT_CLASSIFICATION	0.9956556529674703	WITHOUT_CLASSIFICATION	0.004344347032529798	IMPLEMENTATION
else this is not a collection initializer (and empty collections will be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999482336991729	WITHOUT_CLASSIFICATION	5.176630082724874E-5	IMPLEMENTATION
validate() instances of validatable	WITHOUT_CLASSIFICATION	0.9999736472535153	WITHOUT_CLASSIFICATION	2.6352746484632013E-5	IMPLEMENTATION
if we know there is exactly 1 row we can skip. it would be great if we could _always_ skip this it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9935591879310123	WITHOUT_CLASSIFICATION	0.006440812068987665	IMPLEMENTATION
remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999968300249965	WITHOUT_CLASSIFICATION	3.1699750035969454E-6	IMPLEMENTATION
null version means the object is in the process of being loaded somewhere else in the resultset	WITHOUT_CLASSIFICATION	0.9999999846243022	WITHOUT_CLASSIFICATION	1.5375697778088238E-8	IMPLEMENTATION
problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999855501397371	WITHOUT_CLASSIFICATION	1.4449860262937202E-5	IMPLEMENTATION
use the id passed in	WITHOUT_CLASSIFICATION	0.9999758664973434	WITHOUT_CLASSIFICATION	2.413350265661748E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999963788358683	WITHOUT_CLASSIFICATION	3.6211641315856887E-6	IMPLEMENTATION
prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.999978717481306	WITHOUT_CLASSIFICATION	2.128251869397357E-5	IMPLEMENTATION
no point doing this if none was requested	WITHOUT_CLASSIFICATION	0.9999999467992456	WITHOUT_CLASSIFICATION	5.3200754475411524E-8	IMPLEMENTATION
if the object is already loaded return the loaded one	WITHOUT_CLASSIFICATION	0.9999997957995092	WITHOUT_CLASSIFICATION	2.0420049085816798E-7	IMPLEMENTATION
its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9998784094712712	WITHOUT_CLASSIFICATION	1.2159052872878648E-4	IMPLEMENTATION
cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9992907763856596	WITHOUT_CLASSIFICATION	7.09223614340388E-4	IMPLEMENTATION
the load() which takes an entity does not pass an entityname	WITHOUT_CLASSIFICATION	0.9999447835611621	WITHOUT_CLASSIFICATION	5.521643883783607E-5	IMPLEMENTATION
we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9998354962871607	WITHOUT_CLASSIFICATION	1.6450371283917309E-4	IMPLEMENTATION
look for a proxy	WITHOUT_CLASSIFICATION	0.9999807671761041	WITHOUT_CLASSIFICATION	1.9232823895997363E-5	IMPLEMENTATION
we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9994972737596794	WITHOUT_CLASSIFICATION	5.027262403204797E-4	IMPLEMENTATION
its the given optional object	WITHOUT_CLASSIFICATION	0.9999935344234211	WITHOUT_CLASSIFICATION	6.465576578864917E-6	IMPLEMENTATION
instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999898816378605	WITHOUT_CLASSIFICATION	1.0118362139407851E-5	IMPLEMENTATION
need to hydrate it.	WITHOUT_CLASSIFICATION	0.9986439000637628	WITHOUT_CLASSIFICATION	0.0013560999362371847	IMPLEMENTATION
return a newly loaded object	WITHOUT_CLASSIFICATION	0.999996237178391	WITHOUT_CLASSIFICATION	3.7628216090534267E-6	IMPLEMENTATION
will be ignored using the existing entry instead	WITHOUT_CLASSIFICATION	0.9999811083379322	WITHOUT_CLASSIFICATION	1.8891662067750137E-5	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.999999984371639	WITHOUT_CLASSIFICATION	1.5628361023746035E-8	IMPLEMENTATION
materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999851483977777	WITHOUT_CLASSIFICATION	1.4851602222354157E-5	IMPLEMENTATION
get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.999996341944566	WITHOUT_CLASSIFICATION	3.6580554340137788E-6	IMPLEMENTATION
ok in normal hibernate usage to delete a detached entity jpa however forbids it thus this is a hook for hem to affect this behavior	WITHOUT_CLASSIFICATION	0.9999998142768274	WITHOUT_CLASSIFICATION	1.8572317257972808E-7	IMPLEMENTATION
the entry will be removed after the flush and will no longer override the stale snapshot this is now handled by removeentity() in entitydeleteaction persistencecontext.removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.9997154877836385	WITHOUT_CLASSIFICATION	2.845122163614202E-4	IMPLEMENTATION
addinitializedcollection(collection persister id)	WITHOUT_CLASSIFICATION	0.999941903877256	WITHOUT_CLASSIFICATION	5.809612274405499E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999866953910221	WITHOUT_CLASSIFICATION	1.3304608977874065E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999866953910221	WITHOUT_CLASSIFICATION	1.3304608977874065E-5	IMPLEMENTATION
|| oj.getjoinable().consumescollectionalias()	WITHOUT_CLASSIFICATION	0.9999656803834093	WITHOUT_CLASSIFICATION	3.431961659075678E-5	IMPLEMENTATION
here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9839029721268324	WITHOUT_CLASSIFICATION	0.016097027873167552	IMPLEMENTATION
code to handle subclasses of topclass	WITHOUT_CLASSIFICATION	0.9999278104006899	WITHOUT_CLASSIFICATION	7.218959931007857E-5	IMPLEMENTATION
woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.999993692801475	WITHOUT_CLASSIFICATION	6.307198525017403E-6	IMPLEMENTATION
we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999747506541378	WITHOUT_CLASSIFICATION	2.5249345862312062E-5	IMPLEMENTATION
we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999473267006441	WITHOUT_CLASSIFICATION	5.267329935595143E-5	IMPLEMENTATION
synchronized to avoid multi-thread access issues defined as method synch to avoid potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999973079048308	WITHOUT_CLASSIFICATION	2.692095169147869E-6	IMPLEMENTATION
allows various loaders (ok mainly the queryloader ) to check whether scrolling of their result set should be allowed. by default it is allowed.	WITHOUT_CLASSIFICATION	0.9999999651413564	WITHOUT_CLASSIFICATION	3.4858643690804175E-8	IMPLEMENTATION
before adding to collection!	WITHOUT_CLASSIFICATION	0.9999688064207107	WITHOUT_CLASSIFICATION	3.119357928923498E-5	IMPLEMENTATION
if the current depth is 0 the root thing being loaded is the many-to-many collection itself. here it is alright to use an inner join	WITHOUT_CLASSIFICATION	0.9999995848840459	WITHOUT_CLASSIFICATION	4.1511595407769416E-7	IMPLEMENTATION
operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.999901219092651	WITHOUT_CLASSIFICATION	9.87809073490633E-5	IMPLEMENTATION
simple because we can't have a one-to-one or a collection (or even a property-ref) in a composite-element	WITHOUT_CLASSIFICATION	0.9999947606673135	WITHOUT_CLASSIFICATION	5.239332686495228E-6	IMPLEMENTATION
a composite key	WITHOUT_CLASSIFICATION	0.9999550280055501	WITHOUT_CLASSIFICATION	4.4971994449900106E-5	IMPLEMENTATION
if no batch use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999834003345006	WITHOUT_CLASSIFICATION	1.6599665499410575E-5	IMPLEMENTATION
it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999757289624785	WITHOUT_CLASSIFICATION	2.427103752143824E-5	IMPLEMENTATION
needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.6908745360307788	IMPLEMENTATION	0.3091254639692212	WITHOUT_CLASSIFICATION
&& etype.isreferencetoprimarykey()	WITHOUT_CLASSIFICATION	0.9999652854779351	WITHOUT_CLASSIFICATION	3.471452206495376E-5	IMPLEMENTATION
it might still need to apply a collection ordering based on a many-to-many defined order-by	WITHOUT_CLASSIFICATION	0.950692616544626	WITHOUT_CLASSIFICATION	0.049307383455373964	IMPLEMENTATION
if a composite key use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching todo unnecessary for databases with ansi-style joins	WITHOUT_CLASSIFICATION	0.7502267844409887	WITHOUT_CLASSIFICATION	0.2497732155590113	IMPLEMENTATION
belong to other persister belong to other persister	WITHOUT_CLASSIFICATION	0.9999420060308992	WITHOUT_CLASSIFICATION	5.799396910069758E-5	IMPLEMENTATION
we found it	WITHOUT_CLASSIFICATION	0.9999628035880862	WITHOUT_CLASSIFICATION	3.719641191381742E-5	IMPLEMENTATION
we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999953776854311	WITHOUT_CLASSIFICATION	4.622314568848868E-6	IMPLEMENTATION
disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9998052214196035	WITHOUT_CLASSIFICATION	1.9477858039660775E-4	IMPLEMENTATION
note unlike all other loaders this one is not multithreaded or cacheable!!	WITHOUT_CLASSIFICATION	0.997294392919208	WITHOUT_CLASSIFICATION	0.0027056070807921205	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9999633918394428	WITHOUT_CLASSIFICATION	3.660816055713033E-5	IMPLEMENTATION
root entity comes last	WITHOUT_CLASSIFICATION	0.9999890966740174	WITHOUT_CLASSIFICATION	1.0903325982712458E-5	IMPLEMENTATION
deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999037988438134	WITHOUT_CLASSIFICATION	9.620115618664894E-5	IMPLEMENTATION
alias may be null early exit	WITHOUT_CLASSIFICATION	0.9999914227357715	WITHOUT_CLASSIFICATION	8.577264228600586E-6	IMPLEMENTATION
if it is a compound path	WITHOUT_CLASSIFICATION	0.9999956410217948	WITHOUT_CLASSIFICATION	4.358978205135175E-6	IMPLEMENTATION
otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9998434748346706	WITHOUT_CLASSIFICATION	1.5652516532931992E-4	IMPLEMENTATION
if its the root criteria we are done	WITHOUT_CLASSIFICATION	0.9999985800128165	WITHOUT_CLASSIFICATION	1.4199871834853435E-6	IMPLEMENTATION
otherwise recurse	WITHOUT_CLASSIFICATION	0.9995236184694176	WITHOUT_CLASSIFICATION	4.7638153058229425E-4	IMPLEMENTATION
the criteria instance	WITHOUT_CLASSIFICATION	0.9999882345017903	WITHOUT_CLASSIFICATION	1.1765498209703232E-5	IMPLEMENTATION
the entity name	WITHOUT_CLASSIFICATION	0.9999845113530079	WITHOUT_CLASSIFICATION	1.5488646992060453E-5	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9998842173203261	WITHOUT_CLASSIFICATION	1.157826796740348E-4	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9998842173203261	WITHOUT_CLASSIFICATION	1.157826796740348E-4	IMPLEMENTATION
it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999945840052187	WITHOUT_CLASSIFICATION	5.415994781290151E-6	IMPLEMENTATION
should never happen i think	WITHOUT_CLASSIFICATION	0.998105855796647	WITHOUT_CLASSIFICATION	0.0018941442033528785	IMPLEMENTATION
detect discriminator values	WITHOUT_CLASSIFICATION	0.9999908639630777	WITHOUT_CLASSIFICATION	9.136036922314341E-6	IMPLEMENTATION
convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999609607849665	WITHOUT_CLASSIFICATION	3.9039215033508025E-5	IMPLEMENTATION
and the qualifier is not the alias of this criteria -> check to see if we belong to some criteria other than the one that created us	WITHOUT_CLASSIFICATION	0.9998928694683197	WITHOUT_CLASSIFICATION	1.0713053168036576E-4	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999867164760454	WITHOUT_CLASSIFICATION	1.3283523954631731E-5	IMPLEMENTATION
otherwise this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999431912985035	WITHOUT_CLASSIFICATION	5.68087014964744E-5	IMPLEMENTATION
currently not cachable if autodiscover types is in effect (e.g. "select ")	WITHOUT_CLASSIFICATION	0.9999936557354079	WITHOUT_CLASSIFICATION	6.344264592205524E-6	IMPLEMENTATION
private final string[] sqlaliases private final string[] sqlaliassuffixes	WITHOUT_CLASSIFICATION	0.9999962935611805	WITHOUT_CLASSIFICATION	3.7064388196050616E-6	IMPLEMENTATION
this is only needed (afaict) for resulttransformer processing	WITHOUT_CLASSIFICATION	0.94544122926946	WITHOUT_CLASSIFICATION	0.054558770730540086	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.999999914946262	WITHOUT_CLASSIFICATION	8.50537381063737E-8	IMPLEMENTATION
build an array with indices equal to the total number of actual returns in the result hibernate will return for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999997868344527	WITHOUT_CLASSIFICATION	2.1316554720670734E-7	IMPLEMENTATION
replace {.} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9961021923340698	WITHOUT_CLASSIFICATION	0.0038978076659302286	IMPLEMENTATION
no additional open braces found in the string append the rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.999996440808603	WITHOUT_CLASSIFICATION	3.559191397079953E-6	IMPLEMENTATION
apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999004999783854	WITHOUT_CLASSIFICATION	9.950002161466858E-5	IMPLEMENTATION
it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999969012814474	WITHOUT_CLASSIFICATION	3.0987185526518486E-6	IMPLEMENTATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9040831145258502	IMPLEMENTATION	0.09591688547414974	WITHOUT_CLASSIFICATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9040831145258502	IMPLEMENTATION	0.09591688547414974	WITHOUT_CLASSIFICATION
the current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999903012424718	WITHOUT_CLASSIFICATION	9.698757528273185E-6	IMPLEMENTATION
it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999988089409079	WITHOUT_CLASSIFICATION	1.1910590921156003E-6	IMPLEMENTATION
possibly handle something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9998488694480432	WITHOUT_CLASSIFICATION	1.5113055195680947E-4	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999772715664705	WITHOUT_CLASSIFICATION	2.272843352953603E-5	IMPLEMENTATION
private final list persisters = new arraylist()	WITHOUT_CLASSIFICATION	0.999998207229644	WITHOUT_CLASSIFICATION	1.7927703558517773E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999218141351409	WITHOUT_CLASSIFICATION	7.818586485903004E-5	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999931625181716	WITHOUT_CLASSIFICATION	6.837481828434374E-6	IMPLEMENTATION
private final list scalartypes = new arraylist() private final list scalarcolumnaliases = new arraylist()	WITHOUT_CLASSIFICATION	0.999998207229644	WITHOUT_CLASSIFICATION	1.7927703558517773E-6	IMPLEMENTATION
now process the returns	WITHOUT_CLASSIFICATION	0.9999559479495823	WITHOUT_CLASSIFICATION	4.405205041776798E-5	IMPLEMENTATION
private list collectionowneraliases = new arraylist() private list collectionaliases = new arraylist() private list collectionpersisters = new arraylist() private list collectionresults = new arraylist()	WITHOUT_CLASSIFICATION	0.9999960961573748	WITHOUT_CLASSIFICATION	3.903842625242151E-6	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999782057448456	WITHOUT_CLASSIFICATION	2.1794255154289114E-5	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999782057448456	WITHOUT_CLASSIFICATION	2.1794255154289114E-5	IMPLEMENTATION
make sure the owner alias is known	WITHOUT_CLASSIFICATION	0.9999931620617731	WITHOUT_CLASSIFICATION	6.837938226825985E-6	IMPLEMENTATION
first break down the returns into maps keyed by alias so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.999990651517483	WITHOUT_CLASSIFICATION	9.34848251696871E-6	IMPLEMENTATION
scalarcolumnaliases.add( typereturn.getcolumnalias() ) scalartypes.add( typereturn.gettype() )	WITHOUT_CLASSIFICATION	0.9999480037932571	WITHOUT_CLASSIFICATION	5.199620674294662E-5	IMPLEMENTATION
if this return's alias has not been processed yet do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9992141953605798	WITHOUT_CLASSIFICATION	7.858046394202336E-4	IMPLEMENTATION
collectionowneraliases.add( owneralias )	WITHOUT_CLASSIFICATION	0.9999480037932571	WITHOUT_CLASSIFICATION	5.199620674294662E-5	IMPLEMENTATION
for merging of versioned entities we consider the version having been changed only when 1) the two version values are different and 2) the target actually represents database state! this second condition is a special case which allows an entity to be merged during the same transaction (though during a seperate operation) in which it was originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999999999729026	WITHOUT_CLASSIFICATION	2.7097418375725937E-11	IMPLEMENTATION
this is the second pass through on a merge op so here we limit the replacement to associations types (value types were already replaced during the first pass)	WITHOUT_CLASSIFICATION	0.9999753721019795	WITHOUT_CLASSIFICATION	2.4627898020490835E-5	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999652242820297	WITHOUT_CLASSIFICATION	3.4775717970243735E-5	IMPLEMENTATION
cascade-save to collections after the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999983140326498	WITHOUT_CLASSIFICATION	1.6859673501510346E-6	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9997353434020869	WITHOUT_CLASSIFICATION	2.6465659791312856E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999626718793386	WITHOUT_CLASSIFICATION	3.732812066146281E-5	IMPLEMENTATION
currently only the hibernate-supplied dbtimestamptype is supported here	WITHOUT_CLASSIFICATION	0.9999981095927891	WITHOUT_CLASSIFICATION	1.890407210855873E-6	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.999980084663048	WITHOUT_CLASSIFICATION	1.9915336952002265E-5	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9994201365279579	WITHOUT_CLASSIFICATION	5.798634720420304E-4	IMPLEMENTATION
not so sure this is even valid subtree. but if it was it'd represent two unrelated table references	WITHOUT_CLASSIFICATION	0.999999902494546	WITHOUT_CLASSIFICATION	9.750545403720901E-8	IMPLEMENTATION
(not (gt a b) ) => (le a b)	WITHOUT_CLASSIFICATION	0.9999895333299126	WITHOUT_CLASSIFICATION	1.0466670087471257E-5	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9999940140832613	WITHOUT_CLASSIFICATION	5.985916738684184E-6	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9999343428515817	WITHOUT_CLASSIFICATION	6.56571484182614E-5	IMPLEMENTATION
sqlresulttypes = selectclause.getsqlresulttypes()	WITHOUT_CLASSIFICATION	0.9999386224832104	WITHOUT_CLASSIFICATION	6.137751678960006E-5	IMPLEMENTATION
by default	WITHOUT_CLASSIFICATION	0.9999991708439191	WITHOUT_CLASSIFICATION	8.29156080936697E-7	IMPLEMENTATION
this is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9998608039689209	WITHOUT_CLASSIFICATION	1.3919603107919132E-4	IMPLEMENTATION
-- loader implementation --	WITHOUT_CLASSIFICATION	0.9999410010942292	WITHOUT_CLASSIFICATION	5.899890577073612E-5	IMPLEMENTATION
-- loader overrides --	WITHOUT_CLASSIFICATION	0.9999885652691749	WITHOUT_CLASSIFICATION	1.1434730825110423E-5	IMPLEMENTATION
(not (is_null a b) ) => (is_not_null a b)	WITHOUT_CLASSIFICATION	0.9999857556914894	WITHOUT_CLASSIFICATION	1.4244308510553056E-5	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9973508571457524	WITHOUT_CLASSIFICATION	0.002649142854247522	IMPLEMENTATION
meant to handle dynamic instantiation queries	WITHOUT_CLASSIFICATION	0.999789592501497	WITHOUT_CLASSIFICATION	2.1040749850299856E-4	IMPLEMENTATION
--- query translator methods ---	WITHOUT_CLASSIFICATION	0.9999849757310248	WITHOUT_CLASSIFICATION	1.502426897525148E-5	IMPLEMENTATION
-- implementation private methods --	WITHOUT_CLASSIFICATION	0.9999872699856067	WITHOUT_CLASSIFICATION	1.2730014393324474E-5	IMPLEMENTATION
deduplicate unique constraints sharing the same columns this is needed by hibernate annotations since it creates automagically unique constraints for the user	WITHOUT_CLASSIFICATION	0.998656437911553	WITHOUT_CLASSIFICATION	0.0013435620884469934	IMPLEMENTATION
try to find out the name of the primary key to create it as identity if the identitygenerator is used	WITHOUT_CLASSIFICATION	0.9999998476996047	WITHOUT_CLASSIFICATION	1.5230039530812452E-7	IMPLEMENTATION
to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9995095881703023	WITHOUT_CLASSIFICATION	4.904118296976587E-4	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999666525945	WITHOUT_CLASSIFICATION	3.334740552449668E-8	IMPLEMENTATION
used also for generation of fk names!	WITHOUT_CLASSIFICATION	0.9999878806618387	WITHOUT_CLASSIFICATION	1.21193381612237E-5	IMPLEMENTATION
usually useless	WITHOUT_CLASSIFICATION	0.9999615172237619	WITHOUT_CLASSIFICATION	3.8482776238054386E-5	IMPLEMENTATION
added this caching as i noticed that gettype() is being called multiple times	WITHOUT_CLASSIFICATION	0.9999629532244608	WITHOUT_CLASSIFICATION	3.704677553922393E-5	IMPLEMENTATION
do not add unique constraint on db not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9884434331447873	WITHOUT_CLASSIFICATION	0.01155656685521263	IMPLEMENTATION
for backward compatibility disable this	WITHOUT_CLASSIFICATION	0.9998493052872893	WITHOUT_CLASSIFICATION	1.5069471271069012E-4	IMPLEMENTATION
may be final may be final may be final	WITHOUT_CLASSIFICATION	0.9999845616304108	WITHOUT_CLASSIFICATION	1.5438369589151896E-5	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9999823419787962	WITHOUT_CLASSIFICATION	1.7658021203806515E-5	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9999823419787962	WITHOUT_CLASSIFICATION	1.7658021203806515E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999959867298938	WITHOUT_CLASSIFICATION	4.013270106219234E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999884088194153	WITHOUT_CLASSIFICATION	1.1591180584748603E-5	IMPLEMENTATION
the root of the incoming property path matched one of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9994747639682235	WITHOUT_CLASSIFICATION	5.252360317765275E-4	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999661216623683	WITHOUT_CLASSIFICATION	3.387833763171595E-5	IMPLEMENTATION
flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999458248880659	WITHOUT_CLASSIFICATION	5.417511193404476E-5	IMPLEMENTATION
an identifier mapper => getkey will be included in the getnonduplicatedpropertyiterator() and checked later so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999996837848865	WITHOUT_CLASSIFICATION	3.1621511345709483E-7	IMPLEMENTATION
if the hibernate-mapping did not specify a schema/catalog use the defaults specified by properties - but note that if the schema/catalog were specified in hibernate-mapping or as params they will already be initialized and will override the values set here (they are in identifiergeneratorproperties)	WITHOUT_CLASSIFICATION	0.9999999857050013	WITHOUT_CLASSIFICATION	1.429499872953392E-8	IMPLEMENTATION
pass the entity-name if not a collection-id	WITHOUT_CLASSIFICATION	0.9995225997745494	WITHOUT_CLASSIFICATION	4.7740022545058697E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999959867298938	WITHOUT_CLASSIFICATION	4.013270106219234E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999884088194153	WITHOUT_CLASSIFICATION	1.1591180584748603E-5	IMPLEMENTATION
pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9997074468103729	WITHOUT_CLASSIFICATION	2.9255318962701963E-4	IMPLEMENTATION
needed to satisfy keyvalue	WITHOUT_CLASSIFICATION	0.754028604501874	WITHOUT_CLASSIFICATION	0.245971395498126	IMPLEMENTATION
empty means no scoping	WITHOUT_CLASSIFICATION	0.9999623811754128	WITHOUT_CLASSIFICATION	3.7618824587103715E-5	IMPLEMENTATION
index should be last column listed	WITHOUT_CLASSIFICATION	0.9998006100340898	WITHOUT_CLASSIFICATION	1.9938996591014005E-4	IMPLEMENTATION
if it is a formula index use the element columns in the pk	WITHOUT_CLASSIFICATION	0.9999999472376064	WITHOUT_CLASSIFICATION	5.2762393663724E-8	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns	WITHOUT_CLASSIFICATION	0.999414516635452	WITHOUT_CLASSIFICATION	5.854833645479325E-4	IMPLEMENTATION
arraylist list = new arraylist()list.addall( getkey().getconstraintcolumns() )list.addall( getindex().getconstraintcolumns() )getcollectiontable().createuniquekey(list)	WITHOUT_CLASSIFICATION	0.9999832717237596	WITHOUT_CLASSIFICATION	1.6728276240456765E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999719385239856	WITHOUT_CLASSIFICATION	2.806147601437678E-5	IMPLEMENTATION
no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999985360271266	WITHOUT_CLASSIFICATION	1.4639728733003304E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.6812047811602084	IMPLEMENTATION	0.31879521883979145	WITHOUT_CLASSIFICATION
the case of a foreign key to something other than the pk is handled in createpropertyrefconstraints	WITHOUT_CLASSIFICATION	0.9998768237845351	WITHOUT_CLASSIFICATION	1.2317621546486054E-4	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.6812047811602084	IMPLEMENTATION	0.31879521883979145	WITHOUT_CLASSIFICATION
if the property mapping consists of all formulas make it non-updateable	WITHOUT_CLASSIFICATION	0.9999661548110582	WITHOUT_CLASSIFICATION	3.38451889418895E-5	IMPLEMENTATION
columnupdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999656803834093	WITHOUT_CLASSIFICATION	3.431961659075678E-5	IMPLEMENTATION
if the property mapping consists of all formulas make it insertable	WITHOUT_CLASSIFICATION	0.9999661548110582	WITHOUT_CLASSIFICATION	3.38451889418895E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999900670049662	WITHOUT_CLASSIFICATION	9.93299503387966E-6	IMPLEMENTATION
expected type is intrinsic here	WITHOUT_CLASSIFICATION	0.999967375204563	WITHOUT_CLASSIFICATION	3.262479543706563E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999719385239856	WITHOUT_CLASSIFICATION	2.806147601437678E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999719385239856	WITHOUT_CLASSIFICATION	2.806147601437678E-5	IMPLEMENTATION
return memberpersister.getpropertytype(propertyname)	WITHOUT_CLASSIFICATION	0.9999674950483245	WITHOUT_CLASSIFICATION	3.250495167551648E-5	IMPLEMENTATION
return memberpersister.tocolumns(alias propertyname)	WITHOUT_CLASSIFICATION	0.9999675326058761	WITHOUT_CLASSIFICATION	3.246739412390507E-5	IMPLEMENTATION
return memberpersister.gettype()	WITHOUT_CLASSIFICATION	0.9999674950483245	WITHOUT_CLASSIFICATION	3.250495167551648E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999602945075071	WITHOUT_CLASSIFICATION	3.9705492492850016E-5	IMPLEMENTATION
return !isonetomany()	WITHOUT_CLASSIFICATION	0.9999761153549306	WITHOUT_CLASSIFICATION	2.3884645069389503E-5	IMPLEMENTATION
instanceof associationtype	WITHOUT_CLASSIFICATION	0.9999801536210965	WITHOUT_CLASSIFICATION	1.984637890350325E-5	IMPLEMENTATION
we need to determine the best way to know that two joinables represent a single many-to-many	WITHOUT_CLASSIFICATION	0.9932271579603447	WITHOUT_CLASSIFICATION	0.006772842039655286	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9999821087077106	WITHOUT_CLASSIFICATION	1.7891292289284907E-5	IMPLEMENTATION
public boolean issubselectloadable()	WITHOUT_CLASSIFICATION	0.9999974344120325	WITHOUT_CLASSIFICATION	2.5655879675189975E-6	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999887842414378	WITHOUT_CLASSIFICATION	1.1215758562194948E-5	IMPLEMENTATION
columns	WITHOUT_CLASSIFICATION	0.99999707605908	WITHOUT_CLASSIFICATION	2.9239409200029865E-6	IMPLEMENTATION
sql statements	WITHOUT_CLASSIFICATION	0.9999881504772432	WITHOUT_CLASSIFICATION	1.1849522756869559E-5	IMPLEMENTATION
extra information about the element type	WITHOUT_CLASSIFICATION	0.9999930871576677	WITHOUT_CLASSIFICATION	6.9128423322529596E-6	IMPLEMENTATION
types	WITHOUT_CLASSIFICATION	0.9999711008718665	WITHOUT_CLASSIFICATION	2.8899128133475085E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999959867298938	WITHOUT_CLASSIFICATION	4.013270106219234E-6	IMPLEMENTATION
private final string unquotedidentifiercolumnname	WITHOUT_CLASSIFICATION	0.9999981837103391	WITHOUT_CLASSIFICATION	1.8162896609731986E-6	IMPLEMENTATION
dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999919663181679	WITHOUT_CLASSIFICATION	8.033681831973562E-6	IMPLEMENTATION
dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.999989502939139	WITHOUT_CLASSIFICATION	1.0497060860936516E-5	IMPLEMENTATION
nativesql collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999373751507493	WITHOUT_CLASSIFICATION	6.262484925076875E-5	IMPLEMENTATION
unquotedkeycolumnnames = stringhelper.unquote(keycolumnaliases)	WITHOUT_CLASSIFICATION	0.9999386224832104	WITHOUT_CLASSIFICATION	6.137751678960006E-5	IMPLEMENTATION
element	WITHOUT_CLASSIFICATION	0.999994995480283	WITHOUT_CLASSIFICATION	5.004519717052734E-6	IMPLEMENTATION
nativesql collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999720557272862	WITHOUT_CLASSIFICATION	2.7944272713829748E-5	IMPLEMENTATION
index and row select	WITHOUT_CLASSIFICATION	0.9999024372751136	WITHOUT_CLASSIFICATION	9.756272488640379E-5	IMPLEMENTATION
nativesql collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9997029434093195	WITHOUT_CLASSIFICATION	2.9705659068043775E-4	IMPLEMENTATION
unquotedidentifiercolumnname = identifiercolumnalias	WITHOUT_CLASSIFICATION	0.9999386224832104	WITHOUT_CLASSIFICATION	6.137751678960006E-5	IMPLEMENTATION
unquotedidentifiercolumnname = null	WITHOUT_CLASSIFICATION	0.9999863106425935	WITHOUT_CLASSIFICATION	1.3689357406562537E-5	IMPLEMENTATION
generate the sql	WITHOUT_CLASSIFICATION	0.9999796925528474	WITHOUT_CLASSIFICATION	2.0307447152554784E-5	IMPLEMENTATION
for non-arrays we don't need to know the element class elementtype.returnedclass()	WITHOUT_CLASSIFICATION	0.998715974126655	WITHOUT_CLASSIFICATION	0.0012840258733450777	IMPLEMENTATION
not all classpersisters implement propertymapping!	WITHOUT_CLASSIFICATION	0.7110411492179589	WITHOUT_CLASSIFICATION	0.2889588507820411	IMPLEMENTATION
handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.999639458328813	WITHOUT_CLASSIFICATION	3.6054167118693814E-4	IMPLEMENTATION
handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9998520867775663	WITHOUT_CLASSIFICATION	1.4791322243375697E-4	IMPLEMENTATION
if there is a user-specified loader return that todo filters!?	WITHOUT_CLASSIFICATION	0.9822132804790342	WITHOUT_CLASSIFICATION	0.017786719520965732	IMPLEMENTATION
take care of any entities that might have been evicted!	WITHOUT_CLASSIFICATION	0.9999019058384643	WITHOUT_CLASSIFICATION	9.809416153573925E-5	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9999821087077106	WITHOUT_CLASSIFICATION	1.7891292289284907E-5	IMPLEMENTATION
run a subquery loader	WITHOUT_CLASSIFICATION	0.999970641672828	WITHOUT_CLASSIFICATION	2.9358327171936894E-5	IMPLEMENTATION
needed by arrays	WITHOUT_CLASSIFICATION	0.8413358345330824	WITHOUT_CLASSIFICATION	0.15866416546691764	IMPLEMENTATION
todo something with formulas	WITHOUT_CLASSIFICATION	0.5444894632880531	IMPLEMENTATION	0.45551053671194686	WITHOUT_CLASSIFICATION
an assertion	WITHOUT_CLASSIFICATION	0.9999876843357914	WITHOUT_CLASSIFICATION	1.2315664208494346E-5	IMPLEMENTATION
remove all the old entries	WITHOUT_CLASSIFICATION	0.9999971149335313	WITHOUT_CLASSIFICATION	2.8850664688253417E-6	IMPLEMENTATION
create all the new entries	WITHOUT_CLASSIFICATION	0.9999929212016504	WITHOUT_CLASSIFICATION	7.078798349598683E-6	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999602945075071	WITHOUT_CLASSIFICATION	3.9705492492850016E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999602945075071	WITHOUT_CLASSIFICATION	3.9705492492850016E-5	IMPLEMENTATION
delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9998164825547359	WITHOUT_CLASSIFICATION	1.8351744526419792E-4	IMPLEMENTATION
insert all the new entries	WITHOUT_CLASSIFICATION	0.9999937121441217	WITHOUT_CLASSIFICATION	6.287855878379861E-6	IMPLEMENTATION
==elementtype ??	WITHOUT_CLASSIFICATION	0.9999787996540519	WITHOUT_CLASSIFICATION	2.120034594812724E-5	IMPLEMENTATION
update all the modified entries	WITHOUT_CLASSIFICATION	0.9999753459276107	WITHOUT_CLASSIFICATION	2.4654072389295928E-5	IMPLEMENTATION
identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9994476071610731	WITHOUT_CLASSIFICATION	5.523928389269496E-4	IMPLEMENTATION
update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999587361843643	WITHOUT_CLASSIFICATION	4.126381563576912E-5	IMPLEMENTATION
will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999981575140879	WITHOUT_CLASSIFICATION	1.8424859121509045E-6	IMPLEMENTATION
now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999999162824258	WITHOUT_CLASSIFICATION	8.371757421725645E-8	IMPLEMENTATION
buf.append( selectfragment( lhsalias "" ) )ignore suffix for collection columns!	WITHOUT_CLASSIFICATION	0.999977821912358	WITHOUT_CLASSIFICATION	2.2178087642121754E-5	IMPLEMENTATION
use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.999997652264021	WITHOUT_CLASSIFICATION	2.3477359789475574E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999971254694415	WITHOUT_CLASSIFICATION	2.8745305584987223E-6	IMPLEMENTATION
private final string roottablename	WITHOUT_CLASSIFICATION	0.9999981837103391	WITHOUT_CLASSIFICATION	1.8162896609731986E-6	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9999409031089928	WITHOUT_CLASSIFICATION	5.9096891007195825E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999959867298938	WITHOUT_CLASSIFICATION	4.013270106219234E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999971254694415	WITHOUT_CLASSIFICATION	2.8745305584987223E-6	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999961873567685	WITHOUT_CLASSIFICATION	3.8126432313562772E-6	IMPLEMENTATION
this could also just be true all the time	WITHOUT_CLASSIFICATION	0.9999823761222862	WITHOUT_CLASSIFICATION	1.7623877713825757E-5	IMPLEMENTATION
chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999908572022892	WITHOUT_CLASSIFICATION	9.142797710800591E-6	IMPLEMENTATION
todo check this.	WITHOUT_CLASSIFICATION	0.8917112840915599	IMPLEMENTATION	0.10828871590844023	WITHOUT_CLASSIFICATION
initialization	WITHOUT_CLASSIFICATION	0.9999409031089928	WITHOUT_CLASSIFICATION	5.9096891007195825E-5	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9999563234375561	WITHOUT_CLASSIFICATION	4.36765624437525E-5	IMPLEMENTATION
the closure of all properties in the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999987746170259	WITHOUT_CLASSIFICATION	1.225382974076403E-6	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998068916575	WITHOUT_CLASSIFICATION	1.9310834253908248E-7	IMPLEMENTATION
subclass discrimination works by assigning particular values to certain combinations of null primary key values in the outer join using an sql case	WITHOUT_CLASSIFICATION	0.9999999999011541	WITHOUT_CLASSIFICATION	9.884598341851908E-11	IMPLEMENTATION
multitables	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999959867298938	WITHOUT_CLASSIFICATION	4.013270106219234E-6	IMPLEMENTATION
subclass closure properties	WITHOUT_CLASSIFICATION	0.9999547790266484	WITHOUT_CLASSIFICATION	4.5220973351607516E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999952859335707	WITHOUT_CLASSIFICATION	4.714066429336149E-6	IMPLEMENTATION
( (column) model.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999812622177635	WITHOUT_CLASSIFICATION	1.8737782236513394E-5	IMPLEMENTATION
( (column) sc.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999812622177635	WITHOUT_CLASSIFICATION	1.8737782236513394E-5	IMPLEMENTATION
don't need subclass tables because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9998113789298269	WITHOUT_CLASSIFICATION	1.886210701730742E-4	IMPLEMENTATION
special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9935494606555245	WITHOUT_CLASSIFICATION	0.006450539344475468	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999971254694415	WITHOUT_CLASSIFICATION	2.8745305584987223E-6	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9999563234375561	WITHOUT_CLASSIFICATION	4.36765624437525E-5	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998068916575	WITHOUT_CLASSIFICATION	1.9310834253908248E-7	IMPLEMENTATION
get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999901561132537	WITHOUT_CLASSIFICATION	9.84388674625573E-6	IMPLEMENTATION
now look up the object we are really interested in! (this lets us correctly handle proxies and multi-row or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999768911385074	WITHOUT_CLASSIFICATION	2.310886149253187E-5	IMPLEMENTATION
discriminator column	WITHOUT_CLASSIFICATION	0.999901325535916	WITHOUT_CLASSIFICATION	9.86744640839293E-5	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9999409031089928	WITHOUT_CLASSIFICATION	5.9096891007195825E-5	IMPLEMENTATION
private final map propertytablenumbersbyname = new hashmap()	WITHOUT_CLASSIFICATION	0.999995862029675	WITHOUT_CLASSIFICATION	4.137970324950272E-6	IMPLEMENTATION
class + table	WITHOUT_CLASSIFICATION	0.9999928634570239	WITHOUT_CLASSIFICATION	7.136542976128731E-6	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999597116381514	WITHOUT_CLASSIFICATION	4.028836184851171E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999712422110779	WITHOUT_CLASSIFICATION	2.875778892205752E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999952859335707	WITHOUT_CLASSIFICATION	4.714066429336149E-6	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999961873567685	WITHOUT_CLASSIFICATION	3.8126432313562772E-6	IMPLEMENTATION
joins	WITHOUT_CLASSIFICATION	0.999985890734245	WITHOUT_CLASSIFICATION	1.4109265754924487E-5	IMPLEMENTATION
propertytablenumbersbyname.put( prop.getname() join )	WITHOUT_CLASSIFICATION	0.9999550741803291	WITHOUT_CLASSIFICATION	4.492581967082781E-5	IMPLEMENTATION
access cached sql	WITHOUT_CLASSIFICATION	0.9999885141138214	WITHOUT_CLASSIFICATION	1.148588617854079E-5	IMPLEMENTATION
figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.999450766989514	WITHOUT_CLASSIFICATION	5.492330104860225E-4	IMPLEMENTATION
figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9521872370247897	WITHOUT_CLASSIFICATION	0.047812762975210324	IMPLEMENTATION
figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.8049242986173888	WITHOUT_CLASSIFICATION	0.19507570138261127	IMPLEMENTATION
render the sql	WITHOUT_CLASSIFICATION	0.9999925915400875	WITHOUT_CLASSIFICATION	7.408459912439439E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999900670049662	WITHOUT_CLASSIFICATION	9.93299503387966E-6	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999905561261693	WITHOUT_CLASSIFICATION	9.443873830767195E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
the optional sql string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999993053290994	WITHOUT_CLASSIFICATION	6.946709006291304E-7	IMPLEMENTATION
information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999795162318434	WITHOUT_CLASSIFICATION	2.0483768156516873E-5	IMPLEMENTATION
information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999986308936226	WITHOUT_CLASSIFICATION	1.3691063773460347E-6	IMPLEMENTATION
information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999993281597297	WITHOUT_CLASSIFICATION	6.71840270344986E-7	IMPLEMENTATION
dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999827309065509	WITHOUT_CLASSIFICATION	1.7269093449178483E-5	IMPLEMENTATION
sql strings	WITHOUT_CLASSIFICATION	0.99996846749145	WITHOUT_CLASSIFICATION	3.1532508550098905E-5	IMPLEMENTATION
for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999984565944064	WITHOUT_CLASSIFICATION	1.54340559356862E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999712422110779	WITHOUT_CLASSIFICATION	2.875778892205752E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
identifier	WITHOUT_CLASSIFICATION	0.999984546422502	WITHOUT_CLASSIFICATION	1.545357749794729E-5	IMPLEMENTATION
version	WITHOUT_CLASSIFICATION	0.9999687884436278	WITHOUT_CLASSIFICATION	3.121155637210026E-5	IMPLEMENTATION
where string	WITHOUT_CLASSIFICATION	0.9999448294272946	WITHOUT_CLASSIFICATION	5.517057270538556E-5	IMPLEMENTATION
subclass property closure	WITHOUT_CLASSIFICATION	0.9999784927769362	WITHOUT_CLASSIFICATION	2.1507223063721922E-5	IMPLEMENTATION
before add -)	WITHOUT_CLASSIFICATION	0.9999741778307336	WITHOUT_CLASSIFICATION	2.582216926635157E-5	IMPLEMENTATION
handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999729906730401	WITHOUT_CLASSIFICATION	2.7009326959893474E-5	IMPLEMENTATION
only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.999992894679925	WITHOUT_CLASSIFICATION	7.105320074921881E-6	IMPLEMENTATION
note early exit here	WITHOUT_CLASSIFICATION	0.999847136983491	WITHOUT_CLASSIFICATION	1.5286301650903257E-4	IMPLEMENTATION
object have been loaded with setreadonly(true) hhh-2236	WITHOUT_CLASSIFICATION	0.999975921150763	WITHOUT_CLASSIFICATION	2.4078849237165798E-5	IMPLEMENTATION
note this assumes something about how propertyselectfragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9944765100864215	WITHOUT_CLASSIFICATION	0.005523489913578577	IMPLEMENTATION
strip leading " "	WITHOUT_CLASSIFICATION	0.9999417409748192	WITHOUT_CLASSIFICATION	5.8259025180883805E-5	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999999702216871	WITHOUT_CLASSIFICATION	2.9778312882603762E-8	IMPLEMENTATION
otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9991532738072529	WITHOUT_CLASSIFICATION	8.467261927470506E-4	IMPLEMENTATION
null owner ok??	WITHOUT_CLASSIFICATION	0.9999945275506522	WITHOUT_CLASSIFICATION	5.472449347708733E-6	IMPLEMENTATION
null sql means that the only lazy properties are shared pk one-to-one associations which are handled differently in the type#nullsafeget code	WITHOUT_CLASSIFICATION	0.9999993130701117	WITHOUT_CLASSIFICATION	6.869298884029357E-7	IMPLEMENTATION
create a new from node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999993673064811	WITHOUT_CLASSIFICATION	6.326935189574277E-7	IMPLEMENTATION
the difficulty here is exactly what do we update in order to force the version to be incremented in the db	WITHOUT_CLASSIFICATION	0.9997274045413348	WITHOUT_CLASSIFICATION	2.725954586652078E-4	IMPLEMENTATION
performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999884304606222	WITHOUT_CLASSIFICATION	1.1569539377744417E-5	IMPLEMENTATION
properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9994948378229496	WITHOUT_CLASSIFICATION	5.051621770504136E-4	IMPLEMENTATION
enable for hhh-440 which we don't like	WITHOUT_CLASSIFICATION	0.99978950171577	WITHOUT_CLASSIFICATION	2.104982842299261E-4	IMPLEMENTATION
aliases	WITHOUT_CLASSIFICATION	0.999986439923671	WITHOUT_CLASSIFICATION	1.3560076329035813E-5	IMPLEMENTATION
aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999872378128156	WITHOUT_CLASSIFICATION	1.2762187184384745E-5	IMPLEMENTATION
aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999897975958923	WITHOUT_CLASSIFICATION	1.0202404107690622E-5	IMPLEMENTATION
fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999988933510263	WITHOUT_CLASSIFICATION	1.1066489736730257E-6	IMPLEMENTATION
embedded composite ids ( alias.idname1 alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999434336000269	WITHOUT_CLASSIFICATION	5.6566399973112966E-5	IMPLEMENTATION
todo skip formulas?	WITHOUT_CLASSIFICATION	0.7329427662742761	IMPLEMENTATION	0.2670572337257238	WITHOUT_CLASSIFICATION
don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9998945995682104	WITHOUT_CLASSIFICATION	1.0540043178960392E-4	IMPLEMENTATION
do two passes for collection property-ref!	WITHOUT_CLASSIFICATION	0.999923268678444	WITHOUT_CLASSIFICATION	7.673132155594273E-5	IMPLEMENTATION
select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999922785791381	WITHOUT_CLASSIFICATION	7.721420861954481E-6	IMPLEMENTATION
todo eventually rowidname[j]	WITHOUT_CLASSIFICATION	0.9460107142592104	WITHOUT_CLASSIFICATION	0.053989285740789754	IMPLEMENTATION
this is a property of the table which we are updating	WITHOUT_CLASSIFICATION	0.99999415229395	WITHOUT_CLASSIFICATION	5.8477060500668195E-6	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9983357661790956	WITHOUT_CLASSIFICATION	0.0016642338209043922	IMPLEMENTATION
we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.999997588390895	WITHOUT_CLASSIFICATION	2.4116091050225055E-6	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999979309013964	WITHOUT_CLASSIFICATION	2.069098603467876E-6	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999601645243587	WITHOUT_CLASSIFICATION	3.983547564132864E-5	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9998701319098834	WITHOUT_CLASSIFICATION	1.2986809011671758E-4	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9999762888474908	WITHOUT_CLASSIFICATION	2.3711152509192646E-5	IMPLEMENTATION
more specifically "? [op] datetime" 1) if the operator is minus the param needs to be of some datetime type 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.999817689909986	WITHOUT_CLASSIFICATION	1.8231009001398895E-4	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9998701319098834	WITHOUT_CLASSIFICATION	1.2986809011671758E-4	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999601645243587	WITHOUT_CLASSIFICATION	3.983547564132864E-5	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9999762888474908	WITHOUT_CLASSIFICATION	2.3711152509192646E-5	IMPLEMENTATION
add the primary key	WITHOUT_CLASSIFICATION	0.9999832486950756	WITHOUT_CLASSIFICATION	1.6751304924310217E-5	IMPLEMENTATION
delegate already handles pk columns	WITHOUT_CLASSIFICATION	0.9999874572990292	WITHOUT_CLASSIFICATION	1.254270097090079E-5	IMPLEMENTATION
we can't batch joined inserts especially not if it is an identity insert nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9995754026271116	WITHOUT_CLASSIFICATION	4.245973728883345E-4	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.9999953004403734	WITHOUT_CLASSIFICATION	4.699559626504284E-6	IMPLEMENTATION
write the values of fields onto the prepared statement - we must use the state at the time the insert was issued (cos of foreign key constraints). not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999965352382458	WITHOUT_CLASSIFICATION	3.4647617541486312E-6	IMPLEMENTATION
todo shouldnt inserts be expectations.none?	WITHOUT_CLASSIFICATION	0.7834980998290383	WITHOUT_CLASSIFICATION	0.2165019001709617	IMPLEMENTATION
don't bother trying to update we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9992331446520649	WITHOUT_CLASSIFICATION	7.668553479351326E-4	IMPLEMENTATION
if all fields are null we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999940956042304	WITHOUT_CLASSIFICATION	5.904395769628177E-6	IMPLEMENTATION
there is probably a row there so try to update if no rows were updated we will find out	WITHOUT_CLASSIFICATION	0.999999993140087	WITHOUT_CLASSIFICATION	6.859913043547263E-9	IMPLEMENTATION
note updates to joined tables can't be batched	WITHOUT_CLASSIFICATION	0.9999737768382622	WITHOUT_CLASSIFICATION	2.6223161737915896E-5	IMPLEMENTATION
starting index	WITHOUT_CLASSIFICATION	0.9998632888300693	WITHOUT_CLASSIFICATION	1.3671116993068167E-4	IMPLEMENTATION
now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999784377622848	WITHOUT_CLASSIFICATION	2.1562237715229802E-5	IMPLEMENTATION
write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9990160607972426	WITHOUT_CLASSIFICATION	9.839392027573448E-4	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.9999953004403734	WITHOUT_CLASSIFICATION	4.699559626504284E-6	IMPLEMENTATION
do the key. the key is immutable so we can use the _current_ object state - not necessarily the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999998426490658	WITHOUT_CLASSIFICATION	1.5735093424086977E-7	IMPLEMENTATION
we should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999975612707479	WITHOUT_CLASSIFICATION	2.438729252049177E-6	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997837123682419	WITHOUT_CLASSIFICATION	2.1628763175812128E-4	IMPLEMENTATION
note dirtyfields==null means we had no snapshot and we couldn't get one using select-before-update oldfields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyfields)	WITHOUT_CLASSIFICATION	0.9999996576928817	WITHOUT_CLASSIFICATION	3.423071183328971E-7	IMPLEMENTATION
more specifically "datetime [op] ?" 1) if the operator is minus we really cannot determine the expected type as either another datetime or numeric would be valid 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9999974569915651	WITHOUT_CLASSIFICATION	2.5430084349527087E-6	IMPLEMENTATION
for the case of dynamic-update="true" we need to generate the update sql	WITHOUT_CLASSIFICATION	0.9999912553091158	WITHOUT_CLASSIFICATION	8.744690884174661E-6	IMPLEMENTATION
don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9938730713174961	WITHOUT_CLASSIFICATION	0.006126928682503892	IMPLEMENTATION
for the case of dynamic-update="false" or no snapshot we use the static sql	WITHOUT_CLASSIFICATION	0.9999998658981357	WITHOUT_CLASSIFICATION	1.3410186425327776E-7	IMPLEMENTATION
if not "get" then try "is"	WITHOUT_CLASSIFICATION	0.999728299320558	WITHOUT_CLASSIFICATION	2.7170067944207795E-4	IMPLEMENTATION
now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9998892866959566	WITHOUT_CLASSIFICATION	1.107133040435558E-4	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999808159215829	WITHOUT_CLASSIFICATION	1.9184078416970062E-5	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999808159215829	WITHOUT_CLASSIFICATION	1.9184078416970062E-5	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999992072033965	WITHOUT_CLASSIFICATION	7.92796603613981E-7	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999992072033965	WITHOUT_CLASSIFICATION	7.92796603613981E-7	IMPLEMENTATION
not supported	WITHOUT_CLASSIFICATION	0.9988935683839555	WITHOUT_CLASSIFICATION	0.001106431616044427	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997837123682419	WITHOUT_CLASSIFICATION	2.1628763175812128E-4	IMPLEMENTATION
we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9996134307711748	WITHOUT_CLASSIFICATION	3.8656922882520864E-4	IMPLEMENTATION
otherwise utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9998102129163557	WITHOUT_CLASSIFICATION	1.8978708364436104E-4	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999780658614221	WITHOUT_CLASSIFICATION	2.193413857783379E-5	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999780658614221	WITHOUT_CLASSIFICATION	2.193413857783379E-5	IMPLEMENTATION
all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999818236939748	WITHOUT_CLASSIFICATION	1.817630602522169E-5	IMPLEMENTATION
notice that we skip the first table it is the driving table!	WITHOUT_CLASSIFICATION	0.9999652010296458	WITHOUT_CLASSIFICATION	3.4798970354147045E-5	IMPLEMENTATION
we can inner join to superclass tables (the row must be there) we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9998767123712834	WITHOUT_CLASSIFICATION	1.2328762871660314E-4	IMPLEMENTATION
skip the driving table	WITHOUT_CLASSIFICATION	0.9999544885281679	WITHOUT_CLASSIFICATION	4.551147183213998E-5	IMPLEMENTATION
get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999990344245182	WITHOUT_CLASSIFICATION	9.655754817670654E-7	IMPLEMENTATION
here we work under the following assumptions ------------ valid cases -------------------------------------- 1) datetime + {something other than datetime} always results in a datetime ( db will catch invalid conversions ) 2) datetime - datetime always results in a double 3) datetime - {something other than datetime} always results in a datetime ( db will catch invalid conversions ) ------------ invalid cases ------------------------------------ 4) datetime + datetime 5) {something other than datetime} - datetime 6) datetime {any type} 7) datetime / {any type} 8) {any type} / datetime doing so allows us to properly handle parameters as either the left or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999999723627057	WITHOUT_CLASSIFICATION	2.7637294306675888E-8	IMPLEMENTATION
render the where and from parts	WITHOUT_CLASSIFICATION	0.9999778042061279	WITHOUT_CLASSIFICATION	2.219579387201488E-5	IMPLEMENTATION
we could regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999443118221594	WITHOUT_CLASSIFICATION	5.568817784057447E-5	IMPLEMENTATION
now render the joins	WITHOUT_CLASSIFICATION	0.9999753938980191	WITHOUT_CLASSIFICATION	2.460610198075385E-5	IMPLEMENTATION
this will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999970335080706	WITHOUT_CLASSIFICATION	2.9664919294468875E-6	IMPLEMENTATION
now render the select clause	WITHOUT_CLASSIFICATION	0.999977913795046	WITHOUT_CLASSIFICATION	2.208620495412397E-5	IMPLEMENTATION
now tie it all together	WITHOUT_CLASSIFICATION	0.9999704285370907	WITHOUT_CLASSIFICATION	2.957146290923642E-5	IMPLEMENTATION
insert/update/delete sql	WITHOUT_CLASSIFICATION	0.9999922704281563	WITHOUT_CLASSIFICATION	7.729571843727136E-6	IMPLEMENTATION
select sql	WITHOUT_CLASSIFICATION	0.9999974400618291	WITHOUT_CLASSIFICATION	2.5599381709228733E-6	IMPLEMENTATION
no need to check laziness dirty checking handles that	WITHOUT_CLASSIFICATION	0.9925780555996314	WITHOUT_CLASSIFICATION	0.0074219444003685514	IMPLEMENTATION
fully resolve the map reference create implicit joins.	WITHOUT_CLASSIFICATION	0.9999938410435016	WITHOUT_CLASSIFICATION	6.158956498354736E-6	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999966751591999	WITHOUT_CLASSIFICATION	3.324840800097659E-5	IMPLEMENTATION
the basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9997797990845498	WITHOUT_CLASSIFICATION	2.2020091545015558E-4	IMPLEMENTATION
for dialects which are known to not support ansi-sql row-value-constructor syntax we should mutate the tree.	WITHOUT_CLASSIFICATION	0.988482568817171	WITHOUT_CLASSIFICATION	0.011517431182829023	IMPLEMENTATION
due to the complexity in initializing the selectclause do not generate one here. if it is not found simply return null also do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999985767435376	WITHOUT_CLASSIFICATION	1.42325646243755E-6	IMPLEMENTATION
check the version unsaved-value if appropriate	WITHOUT_CLASSIFICATION	0.9994097373327739	WITHOUT_CLASSIFICATION	5.902626672260137E-4	IMPLEMENTATION
let this take precedence if defined since it works for assigned identifiers	WITHOUT_CLASSIFICATION	0.999999777309293	WITHOUT_CLASSIFICATION	2.226907069879128E-7	IMPLEMENTATION
check the id unsaved-value	WITHOUT_CLASSIFICATION	0.999391958594527	WITHOUT_CLASSIFICATION	6.080414054729111E-4	IMPLEMENTATION
check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999997611562886	WITHOUT_CLASSIFICATION	2.3884371135519183E-7	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999973860674544	WITHOUT_CLASSIFICATION	2.613932545623303E-6	IMPLEMENTATION
for property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999525184000594	WITHOUT_CLASSIFICATION	4.7481599940594065E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999999702216871	WITHOUT_CLASSIFICATION	2.9778312882603762E-8	IMPLEMENTATION
force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999726605974287	WITHOUT_CLASSIFICATION	2.7339402571298407E-5	IMPLEMENTATION
if this from element is a collection and the path is a collection property (maxindex etc.) then generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999955780451597	WITHOUT_CLASSIFICATION	4.421954840332283E-6	IMPLEMENTATION
entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999658157147119	WITHOUT_CLASSIFICATION	3.4184285288181896E-5	IMPLEMENTATION
collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999552394800145	WITHOUT_CLASSIFICATION	4.4760519985474206E-5	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.9999980885404484	WITHOUT_CLASSIFICATION	1.9114595517246483E-6	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.9999980885404484	WITHOUT_CLASSIFICATION	1.9114595517246483E-6	IMPLEMENTATION
only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999977430862165	WITHOUT_CLASSIFICATION	2.2569137836292215E-6	IMPLEMENTATION
try "get"	WITHOUT_CLASSIFICATION	0.9999811727796258	WITHOUT_CLASSIFICATION	1.88272203741784E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999963788358683	WITHOUT_CLASSIFICATION	3.6211641315856887E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999963788358683	WITHOUT_CLASSIFICATION	3.6211641315856887E-6	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9999223963227601	WITHOUT_CLASSIFICATION	7.760367723992138E-5	IMPLEMENTATION
this page intentionally left blank )	WITHOUT_CLASSIFICATION	0.999967132691414	WITHOUT_CLASSIFICATION	3.28673085859602E-5	IMPLEMENTATION
do not do anything	WITHOUT_CLASSIFICATION	0.9907070782483127	WITHOUT_CLASSIFICATION	0.009292921751687264	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999573992716272	WITHOUT_CLASSIFICATION	4.260072837281314E-5	IMPLEMENTATION
cant instantiate	WITHOUT_CLASSIFICATION	0.9999665273129162	WITHOUT_CLASSIFICATION	3.34726870836759E-5	IMPLEMENTATION
if it is a property of an embedded component invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999998994773999	WITHOUT_CLASSIFICATION	1.0052260010762979E-7	IMPLEMENTATION
otherwise	WITHOUT_CLASSIFICATION	0.9998330483899777	WITHOUT_CLASSIFICATION	1.6695161002238098E-4	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.9999350302162373	WITHOUT_CLASSIFICATION	6.49697837626876E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999849107893308	WITHOUT_CLASSIFICATION	1.5089210669221614E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999849107893308	WITHOUT_CLASSIFICATION	1.5089210669221614E-5	IMPLEMENTATION
hhh-2481 make sure the callback gets cleared otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999313168582887	WITHOUT_CLASSIFICATION	6.868314171134442E-5	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999950394124868	WITHOUT_CLASSIFICATION	4.960587513111129E-6	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999950394124868	WITHOUT_CLASSIFICATION	4.960587513111129E-6	IMPLEMENTATION
note interface is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.999994094902555	WITHOUT_CLASSIFICATION	5.905097445080517E-6	IMPLEMENTATION
interfaces arguments	WITHOUT_CLASSIFICATION	0.9999805035627716	WITHOUT_CLASSIFICATION	1.9496437228475225E-5	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
get the caller	WITHOUT_CLASSIFICATION	0.9999975725941634	WITHOUT_CLASSIFICATION	2.4274058366853507E-6	IMPLEMENTATION
get the caller principals	WITHOUT_CLASSIFICATION	0.9999984405669732	WITHOUT_CLASSIFICATION	1.5594330268614262E-6	IMPLEMENTATION
private static final alias default_alias = new alias(10 null)	WITHOUT_CLASSIFICATION	0.9999984177359433	WITHOUT_CLASSIFICATION	1.5822640566976944E-6	IMPLEMENTATION
needed to bump this up to dotnode because that is the only thing which currently knows about the property-ref path in the correct format it is either this or recurse over the dotnodes constructing the property path just like dotnode does internally	WITHOUT_CLASSIFICATION	0.9998824560563903	WITHOUT_CLASSIFICATION	1.1754394360966833E-4	IMPLEMENTATION
if the identifier is quoted remove the quotes	WITHOUT_CLASSIFICATION	0.9999993009171293	WITHOUT_CLASSIFICATION	6.990828707314594E-7	IMPLEMENTATION
truncate the identifier to the max alias length less the suffix length	WITHOUT_CLASSIFICATION	0.9999878178504161	WITHOUT_CLASSIFICATION	1.2182149583867333E-5	IMPLEMENTATION
full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9994080826508343	WITHOUT_CLASSIFICATION	5.919173491657471E-4	IMPLEMENTATION
null is not considered the same type as integer. $non-nls-1 $non-nls-1	WITHOUT_CLASSIFICATION	0.9999179675308689	WITHOUT_CLASSIFICATION	8.203246913101041E-5	IMPLEMENTATION
the outerjoinsafterwhere needs to come before where clause to properly handle dynamic filters	WITHOUT_CLASSIFICATION	0.9617646892173483	WITHOUT_CLASSIFICATION	0.03823531078265177	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999859041432677	WITHOUT_CLASSIFICATION	1.4095856732241034E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999859041432677	WITHOUT_CLASSIFICATION	1.4095856732241034E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999859041432677	WITHOUT_CLASSIFICATION	1.4095856732241034E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999859041432677	WITHOUT_CLASSIFICATION	1.4095856732241034E-5	IMPLEMENTATION
strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999951209055759	WITHOUT_CLASSIFICATION	4.879094424155508E-6	IMPLEMENTATION
if the condition is not already there	WITHOUT_CLASSIFICATION	0.9999816319446679	WITHOUT_CLASSIFICATION	1.836805533204599E-5	IMPLEMENTATION
dontspace.add("'")	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
for mysql	WITHOUT_CLASSIFICATION	0.9999954895654634	WITHOUT_CLASSIFICATION	4.510434536574082E-6	IMPLEMENTATION
hashmap columnsunique = new hashmap()	WITHOUT_CLASSIFICATION	0.9999626877238635	WITHOUT_CLASSIFICATION	3.731227613644567E-5	IMPLEMENTATION
null caused some problems	WITHOUT_CLASSIFICATION	0.9999827837763543	WITHOUT_CLASSIFICATION	1.7216223645693167E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999218141351409	WITHOUT_CLASSIFICATION	7.818586485903004E-5	IMPLEMENTATION
not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999965023196429	WITHOUT_CLASSIFICATION	3.4976803570351758E-6	IMPLEMENTATION
even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999487528268685	WITHOUT_CLASSIFICATION	5.1247173131608394E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999218141351409	WITHOUT_CLASSIFICATION	7.818586485903004E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999218141351409	WITHOUT_CLASSIFICATION	7.818586485903004E-5	IMPLEMENTATION
if true then execute db updates otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.99999305487098	WITHOUT_CLASSIFICATION	6.945129020039109E-6	IMPLEMENTATION
we only release the connection	WITHOUT_CLASSIFICATION	0.9990585628581696	WITHOUT_CLASSIFICATION	9.414371418304114E-4	IMPLEMENTATION
deprecated option	WITHOUT_CLASSIFICATION	0.9997904217129985	WITHOUT_CLASSIFICATION	2.095782870014519E-4	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999996020985972	WITHOUT_CLASSIFICATION	3.979014028501788E-7	IMPLEMENTATION
actually this last test is probably unnecessary since beforecompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999999981328344	WITHOUT_CLASSIFICATION	1.8671657354829626E-9	IMPLEMENTATION
this one only really needed for badly-behaved applications! (if the transactionmanager has a sychronization registered its a noop) (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.7782583631866522	IMPLEMENTATION	0.22174163681334785	WITHOUT_CLASSIFICATION
create an dotnode ast for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999703073892617	WITHOUT_CLASSIFICATION	2.9692610738318896E-5	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999996020985972	WITHOUT_CLASSIFICATION	3.979014028501788E-7	IMPLEMENTATION
if we could not register a synchronization do the before/after completion callbacks ourself (but we need to let jdbccontext know that this is what we are going to do so it doesn't keep trying to register synchronizations)	WITHOUT_CLASSIFICATION	0.5697939773811657	IMPLEMENTATION	0.4302060226188343	WITHOUT_CLASSIFICATION
swallow it and continue to roll back jta transaction	WITHOUT_CLASSIFICATION	0.9998660315066896	WITHOUT_CLASSIFICATION	1.339684933103263E-4	IMPLEMENTATION
so the transaction is already rolled back by jta spec	WITHOUT_CLASSIFICATION	0.9999989026716845	WITHOUT_CLASSIFICATION	1.09732831560119E-6	IMPLEMENTATION
this method is a noop if there is a synchronization!	WITHOUT_CLASSIFICATION	0.9999984720232954	WITHOUT_CLASSIFICATION	1.5279767045628335E-6	IMPLEMENTATION
two conditions where we need to transform this to a theta-join syntax 1) 'elem' is the "root from-element" in correlated subqueries 2) the dotnode.usethetastyleimplicitjoins has been set to true and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999963634768378	WITHOUT_CLASSIFICATION	3.636523162066229E-6	IMPLEMENTATION
websphere however is not a sane jee/jta container	WITHOUT_CLASSIFICATION	0.9995657763283229	WITHOUT_CLASSIFICATION	4.3422367167705026E-4	IMPLEMENTATION
for sane jee/jta containers the transaction itself functions as its identifier	WITHOUT_CLASSIFICATION	0.999997261073225	WITHOUT_CLASSIFICATION	2.738926775059305E-6	IMPLEMENTATION
swallow the transaction was finished	WITHOUT_CLASSIFICATION	0.9999970438995833	WITHOUT_CLASSIFICATION	2.9561004166197564E-6	IMPLEMENTATION
all aliastoentitymapresulttransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999973072451064	WITHOUT_CLASSIFICATION	2.6927548937275463E-6	IMPLEMENTATION
create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999955421189288	WITHOUT_CLASSIFICATION	4.457881071130398E-6	IMPLEMENTATION
all distinctrootentityresulttransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999973072451064	WITHOUT_CLASSIFICATION	2.6927548937275463E-6	IMPLEMENTATION
map of entitymode -> tuplizer	WITHOUT_CLASSIFICATION	0.9999977921635324	WITHOUT_CLASSIFICATION	2.207836467568367E-6	IMPLEMENTATION
this is a virtual id property	WITHOUT_CLASSIFICATION	0.9996077891148559	WITHOUT_CLASSIFICATION	3.922108851441136E-4	IMPLEMENTATION
this one needed only for guessentitymode()	WITHOUT_CLASSIFICATION	0.749808592324693	WITHOUT_CLASSIFICATION	0.25019140767530706	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999840299379131	WITHOUT_CLASSIFICATION	1.59700620869005E-5	IMPLEMENTATION
todo move this to sf per hhh-3517 also see hhh-1907 and componentmetamodel	WITHOUT_CLASSIFICATION	0.6133291175813892	IMPLEMENTATION	0.3866708824186108	WITHOUT_CLASSIFICATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999999107179671	WITHOUT_CLASSIFICATION	8.928203290900559E-8	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999809848315122	WITHOUT_CLASSIFICATION	1.9015168487783025E-5	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999988077781398	WITHOUT_CLASSIFICATION	1.1922218602396098E-6	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999809848315122	WITHOUT_CLASSIFICATION	1.9015168487783025E-5	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999548831066107	WITHOUT_CLASSIFICATION	4.511689338923596E-5	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999898168550885	WITHOUT_CLASSIFICATION	1.0183144911514771E-5	IMPLEMENTATION
private final sessionfactoryimplementor sessionfactory	WITHOUT_CLASSIFICATION	0.9999962589150752	WITHOUT_CLASSIFICATION	3.7410849248090787E-6	IMPLEMENTATION
cached for efficiency	WITHOUT_CLASSIFICATION	0.9999852597822253	WITHOUT_CLASSIFICATION	1.4740217774544162E-5	IMPLEMENTATION
public componentmetamodel(component component sessionfactoryimplementor sessionfactory) {	WITHOUT_CLASSIFICATION	0.9999976633534915	WITHOUT_CLASSIFICATION	2.3366465086085715E-6	IMPLEMENTATION
this.sessionfactory = sessionfactory	WITHOUT_CLASSIFICATION	0.9999386224832104	WITHOUT_CLASSIFICATION	6.137751678960006E-5	IMPLEMENTATION
it was not embedded so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999979481804832	WITHOUT_CLASSIFICATION	2.0518195168418542E-6	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999999107179671	WITHOUT_CLASSIFICATION	8.928203290900559E-8	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999988077781398	WITHOUT_CLASSIFICATION	1.1922218602396098E-6	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999548831066107	WITHOUT_CLASSIFICATION	4.511689338923596E-5	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9999081885446461	WITHOUT_CLASSIFICATION	9.181145535384985E-5	IMPLEMENTATION
return currentid	WITHOUT_CLASSIFICATION	0.9999628217400681	WITHOUT_CLASSIFICATION	3.71782599319728E-5	IMPLEMENTATION
reset the id	WITHOUT_CLASSIFICATION	0.9995929373653338	WITHOUT_CLASSIFICATION	4.070626346662035E-4	IMPLEMENTATION
origin.adddestination( destination ) this was the cause of hhh-242 origin.settype( from_fragment ) set the parent node type so that the ast is properly formed. the destination node will have all the from text. the parent node is a collection join too (voodoo - see joinprocessor)	WITHOUT_CLASSIFICATION	0.9999999054136748	WITHOUT_CLASSIFICATION	9.458632532170066E-8	IMPLEMENTATION
reset the version	WITHOUT_CLASSIFICATION	0.9998699056234029	WITHOUT_CLASSIFICATION	1.300943765971231E-4	IMPLEMENTATION
the default is to simply not lazy fetch properties for now	WITHOUT_CLASSIFICATION	0.9997988839830689	WITHOUT_CLASSIFICATION	2.0111601693110324E-4	IMPLEMENTATION
add the second join the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999689837482906	WITHOUT_CLASSIFICATION	3.101625170931986E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999966751591999	WITHOUT_CLASSIFICATION	3.324840800097659E-5	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999898168550885	WITHOUT_CLASSIFICATION	1.0183144911514771E-5	IMPLEMENTATION
determine the id getter and setter methods from the proxy interface (if any) determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.7027172751030939	WITHOUT_CLASSIFICATION	0.29728272489690605	IMPLEMENTATION
return getfactory().getsettings().getbytecodeprovider().getproxyfactoryfactory().buildproxyfactory()	WITHOUT_CLASSIFICATION	0.9999674950483245	WITHOUT_CLASSIFICATION	3.250495167551648E-5	IMPLEMENTATION
not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9988836380692566	WITHOUT_CLASSIFICATION	0.0011163619307434256	IMPLEMENTATION
superclass entity-name	WITHOUT_CLASSIFICATION	0.9999865401370976	WITHOUT_CLASSIFICATION	1.3459862902271173E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999966751591999	WITHOUT_CLASSIFICATION	3.324840800097659E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
init the aliases after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999799525046276	WITHOUT_CLASSIFICATION	2.004749537242141E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999966751591999	WITHOUT_CLASSIFICATION	3.324840800097659E-5	IMPLEMENTATION
legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999921899250261	WITHOUT_CLASSIFICATION	7.810074973893794E-6	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999862627105882	WITHOUT_CLASSIFICATION	1.3737289411839299E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
note this affects the return value!	WITHOUT_CLASSIFICATION	0.9999379892786205	WITHOUT_CLASSIFICATION	6.201072137951027E-5	IMPLEMENTATION
need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9998423595302961	WITHOUT_CLASSIFICATION	1.576404697038803E-4	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999902136835016	WITHOUT_CLASSIFICATION	9.786316498406314E-6	IMPLEMENTATION
collection types	WITHOUT_CLASSIFICATION	0.9998384315384756	WITHOUT_CLASSIFICATION	1.6156846152440106E-4	IMPLEMENTATION
convenience methods relating to operations across arrays of types	WITHOUT_CLASSIFICATION	0.9998098257967661	WITHOUT_CLASSIFICATION	1.9017420323379238E-4	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999986706879127	WITHOUT_CLASSIFICATION	1.3293120872912447E-6	IMPLEMENTATION
blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999520429109603	WITHOUT_CLASSIFICATION	4.795708903965441E-5	IMPLEMENTATION
value is the entity name	WITHOUT_CLASSIFICATION	0.9999953449545046	WITHOUT_CLASSIFICATION	4.6550454953841945E-6	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999866953910221	WITHOUT_CLASSIFICATION	1.3304608977874065E-5	IMPLEMENTATION
generate id select fragment and then property select fragment for each expression just like generateselectfragments().	WITHOUT_CLASSIFICATION	0.9991377424372786	WITHOUT_CLASSIFICATION	8.622575627214646E-4	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
xml is the entity name	WITHOUT_CLASSIFICATION	0.9999970005752077	WITHOUT_CLASSIFICATION	2.9994247924129076E-6	IMPLEMENTATION
special case this is the leaf of the containment graph even though not immutable	WITHOUT_CLASSIFICATION	0.9997540923329529	WITHOUT_CLASSIFICATION	2.4590766704705265E-4	IMPLEMENTATION
tolerates nulls	WITHOUT_CLASSIFICATION	0.9999647166457376	WITHOUT_CLASSIFICATION	3.528335426237224E-5	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
metatype is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999908407821355	WITHOUT_CLASSIFICATION	9.159217864536275E-6	IMPLEMENTATION
get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999977924205247	WITHOUT_CLASSIFICATION	2.2075794752362024E-6	IMPLEMENTATION
look through the fromelement's children to find any collections of values that should be fetched	WITHOUT_CLASSIFICATION	0.999973720561947	WITHOUT_CLASSIFICATION	2.6279438052953015E-5	IMPLEMENTATION
return associationtype.foreign_key_to_parent this is better but causes a transient object exception	WITHOUT_CLASSIFICATION	0.9999998437004555	WITHOUT_CLASSIFICATION	1.5629954465985386E-7	IMPLEMENTATION
use the lower case function name. remember whether we're in a select clause or not.	WITHOUT_CLASSIFICATION	0.999998413124001	WITHOUT_CLASSIFICATION	1.5868759990587825E-6	IMPLEMENTATION
ident might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999919120281543	WITHOUT_CLASSIFICATION	8.087971845691088E-6	IMPLEMENTATION
todo!!!	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
st.settimestamp( index new timestamp( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9999216026908314	WITHOUT_CLASSIFICATION	7.839730916859162E-5	IMPLEMENTATION
st.setdate( index new date( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9999216026908314	WITHOUT_CLASSIFICATION	7.839730916859162E-5	IMPLEMENTATION
both are timestamps	WITHOUT_CLASSIFICATION	0.9999903466953965	WITHOUT_CLASSIFICATION	9.653304603371893E-6	IMPLEMENTATION
at least one is a plain old date	WITHOUT_CLASSIFICATION	0.9999856223689247	WITHOUT_CLASSIFICATION	1.4377631075234917E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.999987663888346	WITHOUT_CLASSIFICATION	1.23361116540258E-5	IMPLEMENTATION
if the corresponding sql value is null the reader we got is null as well	WITHOUT_CLASSIFICATION	0.9999999893855402	WITHOUT_CLASSIFICATION	1.0614459776995202E-8	IMPLEMENTATION
fetch reader content up to the end - and put characters in a stringbuffer	WITHOUT_CLASSIFICATION	0.9989246541030252	WITHOUT_CLASSIFICATION	0.0010753458969748157	IMPLEMENTATION
return stringbuffer content as a large string	WITHOUT_CLASSIFICATION	0.9998542946635175	WITHOUT_CLASSIFICATION	1.457053364824222E-4	IMPLEMENTATION
or types.longvarchar?	WITHOUT_CLASSIFICATION	0.9999857195405238	WITHOUT_CLASSIFICATION	1.4280459476087575E-5	IMPLEMENTATION
not called at runtime so doesn't matter if its slow )	WITHOUT_CLASSIFICATION	0.9999886707919313	WITHOUT_CLASSIFICATION	1.1329208068625698E-5	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.7943437571679685	WITHOUT_CLASSIFICATION	0.2056562428320315	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999908676200715	WITHOUT_CLASSIFICATION	9.132379928495562E-6	IMPLEMENTATION
different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999760655451685	WITHOUT_CLASSIFICATION	2.3934454831601508E-5	IMPLEMENTATION
cache this	WITHOUT_CLASSIFICATION	0.9999456343617992	WITHOUT_CLASSIFICATION	5.436563820076616E-5	IMPLEMENTATION
only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999601918808491	WITHOUT_CLASSIFICATION	3.98081191510414E-5	IMPLEMENTATION
forcefully remove leading ands from where fragments the grammar will handle adding them	WITHOUT_CLASSIFICATION	0.9999785121783227	WITHOUT_CLASSIFICATION	2.148782167730499E-5	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
create a new filters node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999909682892818	WITHOUT_CLASSIFICATION	9.031710718245182E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
public object instantiate(object parent sessionimplementor session) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999958833177675	WITHOUT_CLASSIFICATION	4.116682232590807E-6	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.999983813749144	WITHOUT_CLASSIFICATION	1.618625085603268E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.999983813749144	WITHOUT_CLASSIFICATION	1.618625085603268E-5	IMPLEMENTATION
versiontype impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ note simply returns null for seed() and next() as the only known application of binary types for versioning is for use with the timestamp datatype supported by sybase and sql server which are completely db-generated values	WITHOUT_CLASSIFICATION	0.9999997371747298	WITHOUT_CLASSIFICATION	2.628252701876898E-7	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999986706879127	WITHOUT_CLASSIFICATION	1.3293120872912447E-6	IMPLEMENTATION
not really necessary i guess	WITHOUT_CLASSIFICATION	0.9708701978559301	WITHOUT_CLASSIFICATION	0.02912980214406999	IMPLEMENTATION
clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999888821321328	WITHOUT_CLASSIFICATION	1.1117867867179923E-5	IMPLEMENTATION
we do not have to worry about queued additions to uninitialized collections since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9995210492877838	WITHOUT_CLASSIFICATION	4.789507122161221E-4	IMPLEMENTATION
collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999983109218116	WITHOUT_CLASSIFICATION	1.6890781883654667E-6	IMPLEMENTATION
remember the uk value	WITHOUT_CLASSIFICATION	0.9997072969553408	WITHOUT_CLASSIFICATION	2.9270304465911897E-4	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.999987663888346	WITHOUT_CLASSIFICATION	1.23361116540258E-5	IMPLEMENTATION
processcollectionproperty(token q.getcollectionpersister(collectionrole) collectionname)	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
we must use the "remembered" uk value since it is not available from the entityentry during assembly	WITHOUT_CLASSIFICATION	0.9999481397485923	WITHOUT_CLASSIFICATION	5.186025140764731E-5	IMPLEMENTATION
collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9995005110919639	WITHOUT_CLASSIFICATION	4.99488908035996E-4	IMPLEMENTATION
return false	WITHOUT_CLASSIFICATION	0.9999487727844787	WITHOUT_CLASSIFICATION	5.122721552121459E-5	IMPLEMENTATION
this just handles a particular case of component projection perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999997945085072	WITHOUT_CLASSIFICATION	2.0549149283592886E-7	IMPLEMENTATION
note we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999998690323291	WITHOUT_CLASSIFICATION	1.3096767087273315E-7	IMPLEMENTATION
the key is the owning entity itself so get the id from the key	WITHOUT_CLASSIFICATION	0.9999994396841649	WITHOUT_CLASSIFICATION	5.603158351561857E-7	IMPLEMENTATION
if the original is a persistentcollection and that original was not flagged as dirty then reset the target's dirty flag here after the copy operation. </p> one thing to be careful of here is a "bare" original collection in which case we should never ever ever reset the dirty flag on the target because we simply do not know	WITHOUT_CLASSIFICATION	0.9136474192720974	WITHOUT_CLASSIFICATION	0.0863525807279026	IMPLEMENTATION
ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999223011975882	WITHOUT_CLASSIFICATION	7.769880241184725E-5	IMPLEMENTATION
copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.99984648543519	WITHOUT_CLASSIFICATION	1.5351456481000852E-4	IMPLEMENTATION
for a null target or a target which is the same as the original we need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999983270172884	WITHOUT_CLASSIFICATION	1.6729827116627791E-6	IMPLEMENTATION
by default just use an unanticipated capacity since we don't know how to extract the capacity to use from original here	WITHOUT_CLASSIFICATION	0.999679756602936	WITHOUT_CLASSIFICATION	3.202433970641285E-4	IMPLEMENTATION
get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999068864774333	WITHOUT_CLASSIFICATION	9.31135225665981E-5	IMPLEMENTATION
check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.999996715578973	WITHOUT_CLASSIFICATION	3.284421026949533E-6	IMPLEMENTATION
check if it is already completely loaded but unowned	WITHOUT_CLASSIFICATION	0.9999998379638293	WITHOUT_CLASSIFICATION	1.6203617081321237E-7	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9905179426677002	WITHOUT_CLASSIFICATION	0.00948205733229982	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
create a new collection wrapper to be initialized later	WITHOUT_CLASSIFICATION	0.9999762390377155	WITHOUT_CLASSIFICATION	2.376096228444075E-5	IMPLEMENTATION
some jdbc drivers erroneously return an empty array here for a null db value /	WITHOUT_CLASSIFICATION	0.9999878472004783	WITHOUT_CLASSIFICATION	1.2152799521693996E-5	IMPLEMENTATION
our column span is the number of columns in the pk	WITHOUT_CLASSIFICATION	0.9999997889167728	WITHOUT_CLASSIFICATION	2.1108322725145395E-7	IMPLEMENTATION
cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999965512608426	WITHOUT_CLASSIFICATION	3.4487391572924565E-6	IMPLEMENTATION
we already know current is not null	WITHOUT_CLASSIFICATION	0.9895803578992665	WITHOUT_CLASSIFICATION	0.01041964210073356	IMPLEMENTATION
the ids are fully resolved so compare them with isdirty() not ismodified()	WITHOUT_CLASSIFICATION	0.999676284512169	WITHOUT_CLASSIFICATION	3.2371548783104235E-4	IMPLEMENTATION
the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9992438325975529	WITHOUT_CLASSIFICATION	7.561674024471146E-4	IMPLEMENTATION
----------------------------------------------------------- constructors	WITHOUT_CLASSIFICATION	0.9999476485449345	WITHOUT_CLASSIFICATION	5.235145506550043E-5	IMPLEMENTATION
----------------------------------------------------- instance variables	WITHOUT_CLASSIFICATION	0.9999804324204031	WITHOUT_CLASSIFICATION	1.9567579596875954E-5	IMPLEMENTATION
public static jdbcexception newjdbcexception(string string sqlexception root string sql) { string = string + " [" + sql + ']' log.error(string root) logexceptions(root) return new jdbcexception(string root sql) } public static jdbcexception newjdbcexception(string string sqlexception root) { log.error(string root) logexceptions(root) return new jdbcexception(string root) }	WITHOUT_CLASSIFICATION	0.9999967083501242	WITHOUT_CLASSIFICATION	3.291649875805769E-6	IMPLEMENTATION
--------------------------------------------------------- public methods	WITHOUT_CLASSIFICATION	0.9999956606175033	WITHOUT_CLASSIFICATION	4.339382496632442E-6	IMPLEMENTATION
compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999881825797674	WITHOUT_CLASSIFICATION	1.1817420232460055E-5	IMPLEMENTATION
simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.99996617323657	WITHOUT_CLASSIFICATION	3.382676342995501E-5	IMPLEMENTATION
sybase fail if we don't do that sigh	WITHOUT_CLASSIFICATION	0.9999599704270323	WITHOUT_CLASSIFICATION	4.002957296753257E-5	IMPLEMENTATION
handles things like a and b or c a and ( b or c ) not a and not b not ( a and b ) x between y and z (overloaded "and") x in ( a b c ) (overloaded brackets) not not a a is not null (overloaded "not") etc and expressions like foo = bar (maps to foo.id = bar.id) foo.bar = 'foo' (maps to foo.bar = 'foo') foo.bar.baz = 1.0 (maps to foo.bar = bar.id and bar.baz = 1.0) 1.0 = foo.bar.baz (maps to bar.baz = 1.0 and foo.bar = bar.id) foo.bar.baz = a.b.c (maps to bar.baz = b.c and foo.bar = bar.id and a.b = b.id) foo.bar.baz + a.b.c (maps to bar.baz + b.c and foo.bar = bar.id and a.b = b.id) ( foo.bar.baz + 1.0 ) < 2.0 (maps to ( bar.baz + 1.0 ) < 2.0 and foo.bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999875824197237	WITHOUT_CLASSIFICATION	1.2417580276331502E-5	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999202438138763	WITHOUT_CLASSIFICATION	7.975618612363568E-5	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999202438138763	WITHOUT_CLASSIFICATION	7.975618612363568E-5	IMPLEMENTATION
try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999569999973705	WITHOUT_CLASSIFICATION	4.300000262942997E-5	IMPLEMENTATION
otherwise just dump it	WITHOUT_CLASSIFICATION	0.9998945598794018	WITHOUT_CLASSIFICATION	1.0544012059819931E-4	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999965201432696	WITHOUT_CLASSIFICATION	3.4798567303329173E-6	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999965201432696	WITHOUT_CLASSIFICATION	3.4798567303329173E-6	IMPLEMENTATION
use default behavior	WITHOUT_CLASSIFICATION	0.9999929349956055	WITHOUT_CLASSIFICATION	7.065004394549985E-6	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.999988906546777	WITHOUT_CLASSIFICATION	1.1093453222994879E-5	IMPLEMENTATION
the mru cache used to keep hard references to the most recently used query plans note lru here is a bit of a misnomer it indicates that lru entries are removed the actual kept entries are the mru entries	WITHOUT_CLASSIFICATION	0.9998533236937683	WITHOUT_CLASSIFICATION	1.4667630623170638E-4	IMPLEMENTATION
we want to be able to just use the defaults if jndi environment properties are not supplied so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999754069358926	WITHOUT_CLASSIFICATION	2.4593064107367425E-5	IMPLEMENTATION
clone -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999955301549057	WITHOUT_CLASSIFICATION	4.469845094228505E-6	IMPLEMENTATION
serialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999684805658946	WITHOUT_CLASSIFICATION	3.151943410550062E-5	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999968601594322	WITHOUT_CLASSIFICATION	3.1398405676839527E-6	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999968601594322	WITHOUT_CLASSIFICATION	3.1398405676839527E-6	IMPLEMENTATION
deserialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999683356100842	WITHOUT_CLASSIFICATION	3.166438991575588E-5	IMPLEMENTATION
static methods only - hide constructor	WITHOUT_CLASSIFICATION	0.9999873453184006	WITHOUT_CLASSIFICATION	1.2654681599348476E-5	IMPLEMENTATION
&& !('_'==character)	WITHOUT_CLASSIFICATION	0.9999602945075071	WITHOUT_CLASSIFICATION	3.9705492492850016E-5	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.999955551555171	WITHOUT_CLASSIFICATION	4.444844482900033E-5	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.999955551555171	WITHOUT_CLASSIFICATION	4.444844482900033E-5	IMPLEMENTATION
includes last '.'	WITHOUT_CLASSIFICATION	0.9998372112164068	WITHOUT_CLASSIFICATION	1.627887835931393E-4	IMPLEMENTATION
+1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999886725518348	WITHOUT_CLASSIFICATION	1.1327448165300713E-5	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999097628236335	WITHOUT_CLASSIFICATION	9.023717636650724E-5	IMPLEMENTATION
first time we find match!	WITHOUT_CLASSIFICATION	0.9999686735500283	WITHOUT_CLASSIFICATION	3.132644997169484E-5	IMPLEMENTATION
entitynames may now include slashes for the representations classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999998957468673	WITHOUT_CLASSIFICATION	1.0425313270842817E-7	IMPLEMENTATION
wrapped iterators	WITHOUT_CLASSIFICATION	0.9999572605915062	WITHOUT_CLASSIFICATION	4.2739408493731454E-5	IMPLEMENTATION
index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999884325726544	WITHOUT_CLASSIFICATION	1.156742734563796E-5	IMPLEMENTATION
the current iterator	WITHOUT_CLASSIFICATION	0.9999430063313808	WITHOUT_CLASSIFICATION	5.6993668619365624E-5	IMPLEMENTATION
the last used iterator	WITHOUT_CLASSIFICATION	0.9999928971300135	WITHOUT_CLASSIFICATION	7.102869986592559E-6	IMPLEMENTATION
it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999990456892457	WITHOUT_CLASSIFICATION	9.543107542229608E-7	IMPLEMENTATION
public static object[] clone(class elementclass object[] array) {object[] result = (object[]) array.newinstance( elementclass array.length )system.arraycopy(array 0 result 0 array.length)return result}	WITHOUT_CLASSIFICATION	0.9999993363305841	WITHOUT_CLASSIFICATION	6.636694157995217E-7	IMPLEMENTATION
call this before any iterator method to make sure that the current iterator is not exhausted	WITHOUT_CLASSIFICATION	0.986454791571296	WITHOUT_CLASSIFICATION	0.013545208428704042	IMPLEMENTATION
doable if needed	WITHOUT_CLASSIFICATION	0.9348192453888262	WITHOUT_CLASSIFICATION	0.06518075461117376	IMPLEMENTATION
set last used iterator here in case the user calls remove before calling hasnext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999983710155982	WITHOUT_CLASSIFICATION	1.6289844017890566E-6	IMPLEMENTATION
peek ahead	WITHOUT_CLASSIFICATION	0.9999861691738692	WITHOUT_CLASSIFICATION	1.3830826130882177E-5	IMPLEMENTATION
if we reach the end of the string w/o finding the matching end that is an exception	WITHOUT_CLASSIFICATION	0.9999985647064105	WITHOUT_CLASSIFICATION	1.4352935894762104E-6	IMPLEMENTATION
we have a placeholder spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9998968460359886	WITHOUT_CLASSIFICATION	1.0315396401144603E-4	IMPLEMENTATION
make sure spinning forward did not put us past the end of the buffer	WITHOUT_CLASSIFICATION	0.9499487565651888	WITHOUT_CLASSIFICATION	0.050051243434811224	IMPLEMENTATION
first try to locate this resource through the current context classloader.	WITHOUT_CLASSIFICATION	0.9994917705342584	WITHOUT_CLASSIFICATION	5.082294657415536E-4	IMPLEMENTATION
next try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9998439266300968	WITHOUT_CLASSIFICATION	1.5607336990315423E-4	IMPLEMENTATION
next try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9996833611472318	WITHOUT_CLASSIFICATION	3.166388527682439E-4	IMPLEMENTATION
anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999102177968415	WITHOUT_CLASSIFICATION	8.978220315844752E-5	IMPLEMENTATION
would need an identityset for this!	WITHOUT_CLASSIFICATION	0.9995366473499081	WITHOUT_CLASSIFICATION	4.6335265009188906E-4	IMPLEMENTATION
arrays.aslist doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999942437853286	WITHOUT_CLASSIFICATION	5.756214671316727E-6	IMPLEMENTATION
faster?	WITHOUT_CLASSIFICATION	0.999985887940846	WITHOUT_CLASSIFICATION	1.41120591539117E-5	IMPLEMENTATION
the name of a class	WITHOUT_CLASSIFICATION	0.99999813520244	WITHOUT_CLASSIFICATION	1.864797559954849E-6	IMPLEMENTATION
its the listener class name	WITHOUT_CLASSIFICATION	0.9999953489825214	WITHOUT_CLASSIFICATION	4.65101747863189E-6	IMPLEMENTATION
allow 987654321	WITHOUT_CLASSIFICATION	0.9997983081018665	WITHOUT_CLASSIFICATION	2.0169189813344348E-4	IMPLEMENTATION
default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999999406443987	WITHOUT_CLASSIFICATION	5.935560136102341E-8	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999950266171598	WITHOUT_CLASSIFICATION	4.973382840216921E-6	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999949373704027	WITHOUT_CLASSIFICATION	5.062629597314856E-6	IMPLEMENTATION
first lets determine whether to apply cglib or javassist based instrumentation	WITHOUT_CLASSIFICATION	0.9999987622419956	WITHOUT_CLASSIFICATION	1.237758004462618E-6	IMPLEMENTATION
make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999697416929468	WITHOUT_CLASSIFICATION	3.025830705313204E-5	IMPLEMENTATION
entirely optional!!	WITHOUT_CLASSIFICATION	0.9999597147730745	WITHOUT_CLASSIFICATION	4.028522692547304E-5	IMPLEMENTATION
its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999408376309139	WITHOUT_CLASSIFICATION	5.9162369086091355E-5	IMPLEMENTATION
context.unbind(boundname)	WITHOUT_CLASSIFICATION	0.999974115135964	WITHOUT_CLASSIFICATION	2.5884864035990164E-5	IMPLEMENTATION
readresolveobject	WITHOUT_CLASSIFICATION	0.9999597082925349	WITHOUT_CLASSIFICATION	4.0291707465203686E-5	IMPLEMENTATION
cfg.setproperty("hibernate.show_sql" "true")	WITHOUT_CLASSIFICATION	0.9999648263089754	WITHOUT_CLASSIFICATION	3.517369102459783E-5	IMPLEMENTATION
defensive convenience methods	WITHOUT_CLASSIFICATION	0.9999772327114332	WITHOUT_CLASSIFICATION	2.276728856680689E-5	IMPLEMENTATION
create the sessionfactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999964784635231	WITHOUT_CLASSIFICATION	3.5215364767686437E-6	IMPLEMENTATION
make sure you log the exception as it might be swallowed	WITHOUT_CLASSIFICATION	0.99999547449235	WITHOUT_CLASSIFICATION	4.525507649906711E-6	IMPLEMENTATION
begin unit of work	WITHOUT_CLASSIFICATION	0.9999603222610209	WITHOUT_CLASSIFICATION	3.96777389791509E-5	IMPLEMENTATION
write html header	WITHOUT_CLASSIFICATION	0.9999332520150233	WITHOUT_CLASSIFICATION	6.674798497666703E-5	IMPLEMENTATION
handle actions	WITHOUT_CLASSIFICATION	0.9998366445581869	WITHOUT_CLASSIFICATION	1.6335544181308206E-4	IMPLEMENTATION
print page	WITHOUT_CLASSIFICATION	0.9999969176541482	WITHOUT_CLASSIFICATION	3.0823458517994277E-6	IMPLEMENTATION
write html footer	WITHOUT_CLASSIFICATION	0.9998637613186835	WITHOUT_CLASSIFICATION	1.3623868131644248E-4	IMPLEMENTATION
end unit of work	WITHOUT_CLASSIFICATION	0.9998622110425203	WITHOUT_CLASSIFICATION	1.3778895747968542E-4	IMPLEMENTATION
start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999935305851453	WITHOUT_CLASSIFICATION	6.469414854716326E-6	IMPLEMENTATION
make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9989986312156772	WITHOUT_CLASSIFICATION	0.0010013687843227258	IMPLEMENTATION
pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9996583971822358	WITHOUT_CLASSIFICATION	3.4160281776411927E-4	IMPLEMENTATION
remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999861303609984	WITHOUT_CLASSIFICATION	1.3869639001661225E-5	IMPLEMENTATION
eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999367486544877	WITHOUT_CLASSIFICATION	6.325134551227589E-5	IMPLEMENTATION
if we want to handle it bidirectional and detached we also need to load this collection with an eager outer-join fetch this time with criteria and not hql	WITHOUT_CLASSIFICATION	0.5352993691883075	WITHOUT_CLASSIFICATION	0.46470063081169255	IMPLEMENTATION
event anevent = (event) session .createcriteria(event.class).setfetchmode("participants" fetchmode.join) .add( expression.eq("id" eventid) ) .uniqueresult() eager fetch the colleciton so we can use it detached	WITHOUT_CLASSIFICATION	0.9998116941185338	WITHOUT_CLASSIFICATION	1.883058814662369E-4	IMPLEMENTATION
end of first unit of work	WITHOUT_CLASSIFICATION	0.9999030237708816	WITHOUT_CLASSIFICATION	9.697622911838838E-5	IMPLEMENTATION
or bidirectional safety method setting both sides aperson.addtoevent(anevent)	WITHOUT_CLASSIFICATION	0.9999856765425104	WITHOUT_CLASSIFICATION	1.4323457489712358E-5	IMPLEMENTATION
begin second unit of work	WITHOUT_CLASSIFICATION	0.9999821792249876	WITHOUT_CLASSIFICATION	1.7820775012418196E-5	IMPLEMENTATION
reattachment of aperson	WITHOUT_CLASSIFICATION	0.9999843554317404	WITHOUT_CLASSIFICATION	1.564456825970009E-5	IMPLEMENTATION
the getemailaddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9998847638980112	WITHOUT_CLASSIFICATION	1.1523610198876999E-4	IMPLEMENTATION
we need our tm so get it now and avoid doing other work if there is a problem	WITHOUT_CLASSIFICATION	0.9999996291053321	WITHOUT_CLASSIFICATION	3.708946679787143E-7	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9998359020883939	WITHOUT_CLASSIFICATION	1.640979116062073E-4	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9998359020883939	WITHOUT_CLASSIFICATION	1.640979116062073E-4	IMPLEMENTATION
jbc put a version in the node when it created as part of some internal operation. we are always newer but if the jbc version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999999999155824	WITHOUT_CLASSIFICATION	8.441759099844157E-11	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for properties with hibernate-specific overrides to detect and warn about conflicting declarations	WITHOUT_CLASSIFICATION	0.9990225414378937	WITHOUT_CLASSIFICATION	9.77458562106241E-4	IMPLEMENTATION
not null if the isolation level has been specified in the configuration file. otherwise it is left to the driver's default value.	WITHOUT_CLASSIFICATION	0.9999972710332158	WITHOUT_CLASSIFICATION	2.7289667841521824E-6	IMPLEMENTATION
configured outside of hibernate (i.e. servlet container or java bean container already has proxool pools running and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.999999454395615	WITHOUT_CLASSIFICATION	5.456043850128393E-7	IMPLEMENTATION
if you're closing down the connectionprovider chances are an is not a real big deal just warn	WITHOUT_CLASSIFICATION	0.9999805823976643	WITHOUT_CLASSIFICATION	1.941760233562621E-5	IMPLEMENTATION
(as is always optional for consistency with sql/oql)	WITHOUT_CLASSIFICATION	0.9999907921666176	WITHOUT_CLASSIFICATION	9.207833382482063E-6	IMPLEMENTATION
process the "new" hql style where aliases are assigned _after_ the class name or path expression ie. using the as construction	WITHOUT_CLASSIFICATION	0.9999950721535934	WITHOUT_CLASSIFICATION	4.927846406659204E-6	IMPLEMENTATION
the loaded owner will be set to null after the collection is removed so capture its value as the affected owner so it is accessible to both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999970193903686	WITHOUT_CLASSIFICATION	2.9806096314677792E-6	IMPLEMENTATION
is a primitive type invokespecial	WITHOUT_CLASSIFICATION	0.9999956201663471	WITHOUT_CLASSIFICATION	4.3798336529069365E-6	IMPLEMENTATION
array of primitive type do nothing	WITHOUT_CLASSIFICATION	0.999998278881491	WITHOUT_CLASSIFICATION	1.7211185090890897E-6	IMPLEMENTATION
handle a path expression or class name that appears at the start in the "new" hql style or an alias that appears at the start in the "old" hql style	WITHOUT_CLASSIFICATION	0.9999738460705009	WITHOUT_CLASSIFICATION	2.615392949910693E-5	IMPLEMENTATION
handle <= >= != is not not between not in	WITHOUT_CLASSIFICATION	0.9997838094200693	WITHOUT_CLASSIFICATION	2.1619057993076452E-4	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999906826421	WITHOUT_CLASSIFICATION	9.317357774661542E-9	IMPLEMENTATION
transfer an explicitly defined entity name handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999905726291849	WITHOUT_CLASSIFICATION	9.427370815212691E-6	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999983059925557	WITHOUT_CLASSIFICATION	1.6940074443396595E-6	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999983059925557	WITHOUT_CLASSIFICATION	1.6940074443396595E-6	IMPLEMENTATION
get meta's from <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999977166487476	WITHOUT_CLASSIFICATION	2.2833512524051005E-6	IMPLEMENTATION
parameters on the property mapping should override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9997276709253508	WITHOUT_CLASSIFICATION	2.7232907464924764E-4	IMPLEMENTATION
fetch="join" overrides default laziness fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.99999537841607	WITHOUT_CLASSIFICATION	4.621583930020382E-6	IMPLEMENTATION
note special case default to join and non-lazy for the "second join" of the many-to-many	WITHOUT_CLASSIFICATION	0.9999995065391615	WITHOUT_CLASSIFICATION	4.93460838518537E-7	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999746923082348	WITHOUT_CLASSIFICATION	2.5307691765229524E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999922042804414	WITHOUT_CLASSIFICATION	7.795719558468095E-6	IMPLEMENTATION
void setcomponenttuplizerfactory(componenttuplizerfactory componenttuplizerfactory) { this.componenttuplizerfactory = componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9998538802945486	WITHOUT_CLASSIFICATION	1.4611970545147648E-4	IMPLEMENTATION
element index -> id	WITHOUT_CLASSIFICATION	0.9999484185967074	WITHOUT_CLASSIFICATION	5.1581403292692095E-5	IMPLEMENTATION
note that it might be better to iterate the snapshot but this is safe assuming the user implements equals() properly as required by the set contract!	WITHOUT_CLASSIFICATION	0.9999979189732691	WITHOUT_CLASSIFICATION	2.081026730999024E-6	IMPLEMENTATION
collections detect changes made via their public interface and mark themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9990901187810948	WITHOUT_CLASSIFICATION	9.098812189052017E-4	IMPLEMENTATION
essentially if the real session is closed allow any method call to pass through since the real session will complain by throwing an appropriate exception note that allowing close() above has the same basic effect but we capture that there simply to perform the unbind	WITHOUT_CLASSIFICATION	0.9999972329797626	WITHOUT_CLASSIFICATION	2.767020237378019E-6	IMPLEMENTATION
the default sqlexceptionconverter for all dialects is based on sqlstate since sqlerrorcode is extremely vendor-specific. specific dialects may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.997212189781415	WITHOUT_CLASSIFICATION	0.0027878102185849812	IMPLEMENTATION
only necessary for postgre < 7.4 httpanoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999738853471853	WITHOUT_CLASSIFICATION	2.611465281463447E-5	IMPLEMENTATION
select topic syntax from information_schema.help where section like 'function%' order by section topic see also -> httpwww.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999990644911191	WITHOUT_CLASSIFICATION	9.35508880992759E-7	IMPLEMENTATION
registercolumntype(types.varbinary "character($l)") registercolumntype(types.blob "character($l)" ) for use prior to cp 11.0 registercolumntype(types.clob "character($l)" )	WITHOUT_CLASSIFICATION	0.9999518526739621	WITHOUT_CLASSIFICATION	4.814732603797504E-5	IMPLEMENTATION
the blob type requires a size arguement - this defaults to bytes - no arg defaults to 1 whole byte! other argument mods include k - kilobyte m - megabyte g - gigabyte. refer to the pbdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999928522779672	WITHOUT_CLASSIFICATION	7.147722032756385E-6	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9993573934407629	WITHOUT_CLASSIFICATION	6.426065592370748E-4	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999996259125903	WITHOUT_CLASSIFICATION	3.740874098162574E-7	IMPLEMENTATION
add the comment nest the main query in an outer select add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999999344695846	WITHOUT_CLASSIFICATION	6.553041549781537E-8	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999882236004012	WITHOUT_CLASSIFICATION	1.1776399598837E-5	IMPLEMENTATION
note for object <-> sql datatype mappings see configuration manager | advanced | sql | system ddl datatype mappings tbdregistercolumntype(types.binary "binary($1)") changed 08-11-2005 jsl	WITHOUT_CLASSIFICATION	0.9999999992875016	WITHOUT_CLASSIFICATION	7.124984653705729E-10	IMPLEMENTATION
trim(end_keyword string-expression-1 from string-expression-2) use hibernate implementation "from" is one of the parameters they pass in position ?3 registerfunction( "trim" new sqlfunctiontemplate(hibernate.string "trim(?1 ?2 from ?3)") )	WITHOUT_CLASSIFICATION	0.9999915877204802	WITHOUT_CLASSIFICATION	8.412279519804201E-6	IMPLEMENTATION
whether this dialect has an identity clause added to the data type or a completely seperate identity data type	WITHOUT_CLASSIFICATION	0.9999999642005065	WITHOUT_CLASSIFICATION	3.579949337119708E-8	IMPLEMENTATION
according to both the ansi-sql and jpa specs trim takes a variable number of parameters between 1 and 4. at least one paramer (trimsource) is required. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if <trim specification> is omitted both is assumed. if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.999999995509547	WITHOUT_CLASSIFICATION	4.490453005256867E-9	IMPLEMENTATION
/ prepare persisters and link them up with their cache region/access-strategy	WITHOUT_CLASSIFICATION	0.9999940248862557	WITHOUT_CLASSIFICATION	5.975113744364909E-6	IMPLEMENTATION
named queries	WITHOUT_CLASSIFICATION	0.9999839449306446	WITHOUT_CLASSIFICATION	1.6055069355442882E-5	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999946871088815	WITHOUT_CLASSIFICATION	5.3128911184741154E-6	IMPLEMENTATION
does not handle arrays (thats ok cos they can't be lazy) or newly instantiated collections so we can do the cast	WITHOUT_CLASSIFICATION	0.9996667039055362	WITHOUT_CLASSIFICATION	3.3329609446372803E-4	IMPLEMENTATION
collection deletions are a special case since update() can add deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999040865821719	WITHOUT_CLASSIFICATION	9.591341782811824E-5	IMPLEMENTATION
we can do the cast since orphan-delete does not apply to 1. newly instantiated collections 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9997161733647477	WITHOUT_CLASSIFICATION	2.8382663525224674E-4	IMPLEMENTATION
if the natural-id is marked as non-mutable it is not retrieved during a normal database-snapshot operation	WITHOUT_CLASSIFICATION	0.9999951585068213	WITHOUT_CLASSIFICATION	4.8414931787348135E-6	IMPLEMENTATION
watch out for a case where old is still referenced somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999999637973693	WITHOUT_CLASSIFICATION	3.620263075909556E-8	IMPLEMENTATION
slice to get the columns for this component property	WITHOUT_CLASSIFICATION	0.9999996850060755	WITHOUT_CLASSIFICATION	3.149939244729658E-7	IMPLEMENTATION
int result = 17 result = 37 result + type.hashcode() result = 37 result + ( value==null ? 0 value.hashcode() ) return result	WITHOUT_CLASSIFICATION	0.9999975779414925	WITHOUT_CLASSIFICATION	2.422058507417781E-6	IMPLEMENTATION
the collectionentry.isreached() stuff is just to detect any silly users who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999989417911332	WITHOUT_CLASSIFICATION	1.0582088668346236E-6	IMPLEMENTATION
detached collection wrappers that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9952547293146156	WITHOUT_CLASSIFICATION	0.004745270685384384	IMPLEMENTATION
the unique property value represented here may or may not be serializable so we do an explicit check here in order to generate a better error message	WITHOUT_CLASSIFICATION	0.956370142968884	WITHOUT_CLASSIFICATION	0.04362985703111594	IMPLEMENTATION
if the version of a newly instantiated object is not the same as the version seed value use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9998448545087424	WITHOUT_CLASSIFICATION	1.5514549125768067E-4	IMPLEMENTATION
ie. we never have to null out a reference to an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999971802033174	WITHOUT_CLASSIFICATION	2.819796682522666E-6	IMPLEMENTATION
ignore this row the collection is in process of being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999977682947482	WITHOUT_CLASSIFICATION	2.2317052517905298E-6	IMPLEMENTATION
entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currently not yet used	WITHOUT_CLASSIFICATION	0.9949593525978978	WITHOUT_CLASSIFICATION	0.005040647402102149	IMPLEMENTATION
should be ok performance-wise to generate new delegate instances for each request since these are locally stack-scoped. besides it makes the code much easier to read than the old transactionhelper stuff	WITHOUT_CLASSIFICATION	0.9999999508165927	WITHOUT_CLASSIFICATION	4.9183407350057374E-8	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9997882851491683	WITHOUT_CLASSIFICATION	2.1171485083178878E-4	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9997882851491683	WITHOUT_CLASSIFICATION	2.1171485083178878E-4	IMPLEMENTATION
wrap up any new collections directly referenced by the object or its components	WITHOUT_CLASSIFICATION	0.9999999274896307	WITHOUT_CLASSIFICATION	7.251036922808156E-8	IMPLEMENTATION
remove any snapshot not really for memory management purposes but rather because it might now be stale and there is no longer any entityentry to take precedence this is now handled by removeentity() session.getpersistencecontext().removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.999993239435042	WITHOUT_CLASSIFICATION	6.760564957943402E-6	IMPLEMENTATION
skip this check for composite-ids relating to dom4j entity-mode alternatively we could add a check to make sure the incoming id value is an instance of element	WITHOUT_CLASSIFICATION	0.9961013459964558	WITHOUT_CLASSIFICATION	0.003898654003544077	IMPLEMENTATION
upgrade the lock if necessary lock(result lockmode)	WITHOUT_CLASSIFICATION	0.9999883553531825	WITHOUT_CLASSIFICATION	1.1644646817611777E-5	IMPLEMENTATION
now any collections that are initialized inside this block do not get updated - they are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9597791360905119	WITHOUT_CLASSIFICATION	0.04022086390948816	IMPLEMENTATION
we must clone embedded composite identifiers or we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999995147876398	WITHOUT_CLASSIFICATION	4.852123601428594E-7	IMPLEMENTATION
sub-insertions should occur before containing insertion so try to do the callback now	WITHOUT_CLASSIFICATION	0.9998875843619499	WITHOUT_CLASSIFICATION	1.1241563805004287E-4	IMPLEMENTATION
the entity is not associated with the session so try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9982007491608894	WITHOUT_CLASSIFICATION	0.0017992508391105882	IMPLEMENTATION
scan the query string for class names appearing in the from clause and replace with all persistent implementors of the class/interface returning multiple query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999637652902279	WITHOUT_CLASSIFICATION	3.623470977207612E-5	IMPLEMENTATION
save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999037542302986	WITHOUT_CLASSIFICATION	9.624576970135776E-5	IMPLEMENTATION
evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999037542302986	WITHOUT_CLASSIFICATION	9.624576970135776E-5	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999967319949428	WITHOUT_CLASSIFICATION	3.2680050572122617E-6	IMPLEMENTATION
if it is an uninitialized proxy pointing with this session then when it is accessed the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999999187288645	WITHOUT_CLASSIFICATION	8.127113547878696E-8	IMPLEMENTATION
generate an explicit join for the root dot node. the implied joins will be collected and passed up to the root dot node.	WITHOUT_CLASSIFICATION	0.9999954715005773	WITHOUT_CLASSIFICATION	4.5284994227142925E-6	IMPLEMENTATION
a session is considered to contain an entity only if the entity has an entry in the session's persistence context and the entry reports that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9956228833825925	WITHOUT_CLASSIFICATION	0.0043771166174075525	IMPLEMENTATION
does the collection referenced by this fromelement specify an order-by attribute? if so attach it to the query's order-by	WITHOUT_CLASSIFICATION	0.9999999116176476	WITHOUT_CLASSIFICATION	8.838235241304181E-8	IMPLEMENTATION
and the token could be an identifer and the error is a mismatched token error	WITHOUT_CLASSIFICATION	0.9999839285878883	WITHOUT_CLASSIFICATION	1.6071412111760047E-5	IMPLEMENTATION
if a where clause was specified in the update/delete query use it to limit the returned ids here	WITHOUT_CLASSIFICATION	0.9999998548363368	WITHOUT_CLASSIFICATION	1.4516366307030732E-7	IMPLEMENTATION
int parameterstart = getwalker().getnumberofparametersinsetclause() list allparams = getidselectparameterspecifications() iterator whereparams = allparams.sublist( parameterstart allparams.size() ).iterator()	WITHOUT_CLASSIFICATION	0.9999849878981939	WITHOUT_CLASSIFICATION	1.5012101806082287E-5	IMPLEMENTATION
default implementation if this node has a data type and that data type is not an association then this is scalar.	WITHOUT_CLASSIFICATION	0.9999943889306733	WITHOUT_CLASSIFICATION	5.611069326689381E-6	IMPLEMENTATION
resolve the lhs fully generate implicit joins. pass in the property name so that the resolver can discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999826240964249	WITHOUT_CLASSIFICATION	1.7375903575024812E-5	IMPLEMENTATION
if the propertytype is null and there isn't a parent just stop now there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999999591523161	WITHOUT_CLASSIFICATION	4.084768384844522E-8	IMPLEMENTATION
we do not look for an existing join on the same path because it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9887862276905917	WITHOUT_CLASSIFICATION	0.01121377230940838	IMPLEMENTATION
our parent is another dot node meaning we are being further dereferenced. thus we need to generate a join unless the parent refers to the associated entity's pk (because 'our' table would know the fk).	WITHOUT_CLASSIFICATION	0.9852782232781486	WITHOUT_CLASSIFICATION	0.01472177672185143	IMPLEMENTATION
public final currency getcurrency(int col) throws hibernateexception {return (currency) get(col)}	WITHOUT_CLASSIFICATION	0.9999911928154498	WITHOUT_CLASSIFICATION	8.80718455021865E-6	IMPLEMENTATION
here we have two possibilities 1) the property-name matches the explicitly identifier property name 2) the property-name matches the implicit 'id' property name	WITHOUT_CLASSIFICATION	0.9999083775718302	WITHOUT_CLASSIFICATION	9.162242816986143E-5	IMPLEMENTATION
set the unresolved path in this node and the parent. set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999144773739145	WITHOUT_CLASSIFICATION	8.55226260855516E-5	IMPLEMENTATION
get the first child to be considered. sub-classes may do this differently in order to skip nodes that are not select expressions (e.g. distinct).	WITHOUT_CLASSIFICATION	0.9998952920580008	WITHOUT_CLASSIFICATION	1.047079419991736E-4	IMPLEMENTATION
if this is an entity and the property is the identifier property then use getidentifiertype(). note that the propertyname.equals( propertypath ) checks whether we have a component key reference where the component class property name is the same as the entity id property name if the two are not equal this is the case and we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999982015491619	WITHOUT_CLASSIFICATION	1.7984508380309211E-6	IMPLEMENTATION
for a subquery the alias to use depends on a few things (we already know this is not an overall select) 1) if this from_element represents a correlation to the outer-most query a) if the outer query represents a multi-table persister we need to use the given alias in anticipation of one of the multi-table executors being used (as this subquery will actually be used in the "id select" phase of that multi-table executor) b) otherwise we need to use the persister's table name as the column qualification 2) otherwise (not correlated) use the given alias	WITHOUT_CLASSIFICATION	0.9970975892101348	WITHOUT_CLASSIFICATION	0.002902410789865123	IMPLEMENTATION
not a collection? return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9988155213949085	WITHOUT_CLASSIFICATION	0.001184478605091559	IMPLEMENTATION
collection of <many-to-any/> mappings used to circumvent the component-collection check below	WITHOUT_CLASSIFICATION	0.9999085102315323	WITHOUT_CLASSIFICATION	9.148976846771662E-5	IMPLEMENTATION
otherwise the destination node was implied by the from clause and the from clause processor will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.999998560047333	WITHOUT_CLASSIFICATION	1.4399526669604623E-6	IMPLEMENTATION
if the first identifier in the path referrs to the class alias (not the class name) then this is a correlated subselect. if it's a correlated sub-select use the existing table alias. otherwise generate a new one.	WITHOUT_CLASSIFICATION	0.9999977164354907	WITHOUT_CLASSIFICATION	2.283564509266459E-6	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999921020950114	WITHOUT_CLASSIFICATION	7.89790498860829E-6	IMPLEMENTATION
an ident node can represent an index expression if the ident represents a naked property ref note this makes the assumption (which is currently the case in the hql-sql grammar) that the ident is first resolved itself (addrexpr -> resolve()). the other option if that changes is to call resolve from here but it is currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.999999968305742	WITHOUT_CLASSIFICATION	3.1694258035401684E-8	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.999937263086801	WITHOUT_CLASSIFICATION	6.273691319907998E-5	IMPLEMENTATION
if this is an implied join in a from clause then use ansi-style joining and set the flag on the fromelement that indicates that it was implied in the from clause itself.	WITHOUT_CLASSIFICATION	0.999999887086124	WITHOUT_CLASSIFICATION	1.1291387599971175E-7	IMPLEMENTATION
origin.adddestination(destination) add the query spaces.	WITHOUT_CLASSIFICATION	0.9999795283586475	WITHOUT_CLASSIFICATION	2.0471641352547982E-5	IMPLEMENTATION
for an explicit many-to-many relationship add a second join from the intermediate (many-to-many) table to the destination table. also make sure that the from element's idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999951189411346	WITHOUT_CLASSIFICATION	4.881058865465082E-6	IMPLEMENTATION
reset the node type because the rest of the system is expecting from_fragment all we wanted was for the factory to create the right sub-class. this might get reset again later on anyway to make the sql generation simpler.	WITHOUT_CLASSIFICATION	0.9999527268081413	WITHOUT_CLASSIFICATION	4.7273191858838725E-5	IMPLEMENTATION
explicit = true this is an explict select. arraylist sqlresulttypelist = new arraylist()	WITHOUT_CLASSIFICATION	0.9999961277561945	WITHOUT_CLASSIFICATION	3.872243805508786E-6	IMPLEMENTATION
sqlresulttypelist.add( type ) generate the select expression.	WITHOUT_CLASSIFICATION	0.9999405889994923	WITHOUT_CLASSIFICATION	5.941100050757447E-5	IMPLEMENTATION
if the expression list has exactly one expression and the type of the expression is a collection then this might be a collection function such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999996654294908	WITHOUT_CLASSIFICATION	3.3457050911056364E-7	IMPLEMENTATION
need to parse off the column qualifiers this is assuming (which is true as of now) that this is only used from update and delete hql statement parsing	WITHOUT_CLASSIFICATION	0.9999611176192482	WITHOUT_CLASSIFICATION	3.888238075179921E-5	IMPLEMENTATION
for regression testing against output from the old parser found it easiest to simply reorder the fromelements here into ascending order in terms of injecting them into the resulting sql ast in orders relative to those expected by the old parser this is definitely another of those "only needed for regression purposes". the syntheticandfactory then simply injects them as it encounters them.	WITHOUT_CLASSIFICATION	0.9999874149640874	WITHOUT_CLASSIFICATION	1.2585035912607126E-5	IMPLEMENTATION
the uber-rule here is that we need to include subclass joins if the fromelement is in any way dereferenced by a property from the subclass table otherwise we end up with column references qualified by a non-existent table reference in the resulting sql	WITHOUT_CLASSIFICATION	0.9999924807117162	WITHOUT_CLASSIFICATION	7.519288283782141E-6	IMPLEMENTATION
classic translator does not support collection of ordinal param metadata	WITHOUT_CLASSIFICATION	0.9982202690301992	WITHOUT_CLASSIFICATION	0.0017797309698008399	IMPLEMENTATION
the following variables are stacks that keep information about each subexpression in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999998990503288	WITHOUT_CLASSIFICATION	1.0094967123738436E-7	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999906826421	WITHOUT_CLASSIFICATION	9.317357774661542E-9	IMPLEMENTATION
should not be able to reach last without maxposition being set unless there are no results	WITHOUT_CLASSIFICATION	0.9999483311364304	WITHOUT_CLASSIFICATION	5.1668863569455854E-5	IMPLEMENTATION
we found it in the temp pc. should indicate we are in the midst of processing a result set containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999947570415004	WITHOUT_CLASSIFICATION	5.242958499599544E-6	IMPLEMENTATION
do not use proxiesbykey since not all proxies that point to this session's instances are in that collection!	WITHOUT_CLASSIFICATION	0.9989927062797438	WITHOUT_CLASSIFICATION	0.0010072937202562308	IMPLEMENTATION
if there is no tm configured we will not be able to access the javax.transaction.transaction object in order to register a synch anyway.	WITHOUT_CLASSIFICATION	0.999999948906199	WITHOUT_CLASSIFICATION	5.109380101732282E-8	IMPLEMENTATION
since the result set cursor is always left at the first physical row after the "last processed" we need to jump back one position to get the key value we are interested in skipping	WITHOUT_CLASSIFICATION	0.9999995709966571	WITHOUT_CLASSIFICATION	4.2900334291466577E-7	IMPLEMENTATION
true if this is a query and we are loading multiple instances of the same collection role otherwise this is a collectioninitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999925085187208	WITHOUT_CLASSIFICATION	7.491481279219896E-6	IMPLEMENTATION
we don't need to worry about existing version being uninitialized because this block isn't called by a re-entrant load (re-entrant loads _always_ have lock mode none)	WITHOUT_CLASSIFICATION	0.9988775601554812	WITHOUT_CLASSIFICATION	0.0011224398445187466	IMPLEMENTATION
add temp entry so that the next step is circular-reference safe - only needed because some types don't take proper advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.6351776617184908	WITHOUT_CLASSIFICATION	0.3648223382815092	IMPLEMENTATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999998213831104	WITHOUT_CLASSIFICATION	1.7861688959556807E-7	IMPLEMENTATION
log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9916179393062036	WITHOUT_CLASSIFICATION	0.008382060693796415	IMPLEMENTATION
ps.close() just close it do not try to return it to the pool! note early exit!	WITHOUT_CLASSIFICATION	0.9999655163266442	WITHOUT_CLASSIFICATION	3.4483673355812984E-5	IMPLEMENTATION
this has been shown to happen occasionally in rare cases when using a transaction manager + transaction-timeout where the timeout calls back through hibernate's registered transaction synchronization on a separate "reaping" thread. in cases where that reaping thread executes through this block at the same time the main application thread does we can get into situations where these cmes occur. and though it is not "allowed" per-se the end result without handling it specifically is infinite looping. so here we simply break the loop	WITHOUT_CLASSIFICATION	0.9996463283261708	WITHOUT_CLASSIFICATION	3.5367167382912293E-4	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9988159323395501	WITHOUT_CLASSIFICATION	0.0011840676604499242	IMPLEMENTATION
can't cache this stuff either (per-invocation) we are given a map of user-alias -> lock mode create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.999998714379207	WITHOUT_CLASSIFICATION	1.285620793041109E-6	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns getcollectiontable().createuniquekey( getidentifier().getconstraintcolumns() )	WITHOUT_CLASSIFICATION	0.9991360349650829	WITHOUT_CLASSIFICATION	8.639650349172317E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999903715855616	WITHOUT_CLASSIFICATION	9.628414438487943E-6	IMPLEMENTATION
isset = collection.isset() issorted = collection.issorted()	WITHOUT_CLASSIFICATION	0.9999387880998654	WITHOUT_CLASSIFICATION	6.121190013464227E-5	IMPLEMENTATION
lists arrays sets maps bags	WITHOUT_CLASSIFICATION	0.9999934753665555	WITHOUT_CLASSIFICATION	6.52463344449423E-6	IMPLEMENTATION
we finish all the "removes" first to take care of possible unique constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9994916889896486	WITHOUT_CLASSIFICATION	5.083110103514685E-4	IMPLEMENTATION
use a combination of foreign key columns and pk columns since the ordering of removal and addition is not guaranteed when a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9998475842257418	WITHOUT_CLASSIFICATION	1.5241577425824629E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999903715855616	WITHOUT_CLASSIFICATION	9.628414438487943E-6	IMPLEMENTATION
information about properties of this class including inherited properties (only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.5894937853695383	WITHOUT_CLASSIFICATION	0.4105062146304616	IMPLEMENTATION
all this only really needs to consider properties of this class not its subclasses but since we are reusing code used for sequential selects we use the subclass closure	WITHOUT_CLASSIFICATION	0.9999949854076121	WITHOUT_CLASSIFICATION	5.014592387827345E-6	IMPLEMENTATION
here we render the select column list based on the properties defined as being generated. for partial component generation we currently just re-select the whole component rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.999969186813847	WITHOUT_CLASSIFICATION	3.0813186152968126E-5	IMPLEMENTATION
this is the root (versioned) table and we are using version-based optimistic locking if we are not updating the version also don't check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.997402421212895	WITHOUT_CLASSIFICATION	0.0025975787871050505	IMPLEMENTATION
optimistic-lock="all" include all updatable properties optimistic-lock="dirty" include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999880011016201	WITHOUT_CLASSIFICATION	1.199889837981766E-5	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997837123682419	WITHOUT_CLASSIFICATION	2.1628763175812128E-4	IMPLEMENTATION
check to see if the connection is in auto-commit mode (no connection means aggressive connection release outside a jta transaction context so must be autocommit mode)	WITHOUT_CLASSIFICATION	0.99997709279842	WITHOUT_CLASSIFICATION	2.290720158006578E-5	IMPLEMENTATION
need to treat this as if it where optimistic-lock="all" (dirty does not make sense) first we need to locate the "loaded" state note it potentially could be a proxy so perform the location the safe way	WITHOUT_CLASSIFICATION	0.9971755621999553	WITHOUT_CLASSIFICATION	0.0028244378000447288	IMPLEMENTATION
we always assume an instance with a null identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999993898341534	WITHOUT_CLASSIFICATION	6.101658467200354E-7	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9998228073644205	WITHOUT_CLASSIFICATION	1.7719263557941425E-4	IMPLEMENTATION
allow any identifier quoted with backtick only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999433280352286	WITHOUT_CLASSIFICATION	5.6671964771382094E-5	IMPLEMENTATION
following doesn't handle (null not null) but unnecessary since this would mean all rows	WITHOUT_CLASSIFICATION	0.9982375849683418	WITHOUT_CLASSIFICATION	0.0017624150316581514	IMPLEMENTATION
impl note due to the delayed population of setters (setters cached for performance) we really cannot pro0perly define equality for this transformer	WITHOUT_CLASSIFICATION	0.9999994946471336	WITHOUT_CLASSIFICATION	5.053528664225703E-7	IMPLEMENTATION
we need to dirty check collections since they can cause an owner version number increment	WITHOUT_CLASSIFICATION	0.990471120448084	WITHOUT_CLASSIFICATION	0.009528879551915913	IMPLEMENTATION
return the id so we can use it to reset the proxy id return result	WITHOUT_CLASSIFICATION	0.9999365360155107	WITHOUT_CLASSIFICATION	6.346398448928018E-5	IMPLEMENTATION
optimizer = getfactory().getsettings().getbytecodeprovider().getreflectionoptimizer( mappedclass getternames setternames proptypes )	WITHOUT_CLASSIFICATION	0.9999094060362191	WITHOUT_CLASSIFICATION	9.05939637808743E-5	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9905179426677002	WITHOUT_CLASSIFICATION	0.00948205733229982	IMPLEMENTATION
we now have the value of the property-ref we reference. however we need to dig a little deeper as that property might also be an entity type in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999717231370292	WITHOUT_CLASSIFICATION	2.8276862970740937E-5	IMPLEMENTATION
retrieve the value of the designated column in the current row of this resultset object as a java.io.reader object	WITHOUT_CLASSIFICATION	0.9999984503862838	WITHOUT_CLASSIFICATION	1.549613716254328E-6	IMPLEMENTATION
not absolutely necessary but helps for some equals()/hashcode() implementations	WITHOUT_CLASSIFICATION	0.9990004219267267	WITHOUT_CLASSIFICATION	9.995780732732595E-4	IMPLEMENTATION
this should be a call to resolve() not resolveidentifier() 'cos it might be a property-ref and we did not cache the referenced value	WITHOUT_CLASSIFICATION	0.994072846807339	WITHOUT_CLASSIFICATION	0.005927153192660959	IMPLEMENTATION
if we have <tt>not-found="ignore"</tt> association mapped to a formula we always need to dirty check it so we can update the second-level cache	WITHOUT_CLASSIFICATION	0.9995418404856264	WITHOUT_CLASSIFICATION	4.5815951437352725E-4	IMPLEMENTATION
can't just return null here since that would cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999879507086117	WITHOUT_CLASSIFICATION	1.2049291388420867E-5	IMPLEMENTATION
for arrays replaceelements() may return a different reference since the array length might not match	WITHOUT_CLASSIFICATION	0.9997416613216314	WITHOUT_CLASSIFICATION	2.583386783685072E-4	IMPLEMENTATION
actual cache of the entries. soft references are used for both the keys and the values here since the values pertaining to the mru entries are kept in a seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999998029052	WITHOUT_CLASSIFICATION	1.9709473874795103E-10	IMPLEMENTATION
as soon as we encounter our first letter return the substring from that position	WITHOUT_CLASSIFICATION	0.9999921821539878	WITHOUT_CLASSIFICATION	7.817846012248878E-6	IMPLEMENTATION
note expected in the syntax type=listenerclass ({sep}type=listenerclass) where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999992838447372	WITHOUT_CLASSIFICATION	7.16155262820048E-7	IMPLEMENTATION
istransactioncallbackregistered denotes whether any hibernate transaction has registered as a callback against this jdbccontext only one such callback is allowed. directly serializing this value causes problems with jdbctransaction or really any transaction impl where the callback is local to the transaction instance itself since that transaction is not serialized along with the jdbccontext. thus we handle that fact here explicitly	WITHOUT_CLASSIFICATION	0.9996405319439708	WITHOUT_CLASSIFICATION	3.594680560291385E-4	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999778229834564	WITHOUT_CLASSIFICATION	2.2177016543632388E-5	IMPLEMENTATION
we call getkeyfromresultset() here so that we can know the key value upon which to perform the breaking logic. however it is also then called from getrowfromresultset() which is certainly not the most efficient. but the call here is needed and there currently is no other way without refactoring of the doquery()/getrowfromresultset() methods	WITHOUT_CLASSIFICATION	0.8433812272952904	IMPLEMENTATION	0.15661877270470953	WITHOUT_CLASSIFICATION
this check is needed since processing leaves the cursor after the last physical row for the current logical row thus if we are after the last physical row this might be caused by either 1) scrolling to the last logical row 2) scrolling past the last logical row in the latter scenario the previous logical row really is the last logical row. in all other cases we should process back two logical records (the current logic row plus the previous logical row).	WITHOUT_CLASSIFICATION	0.9959373583111376	WITHOUT_CLASSIFICATION	0.004062641688862432	IMPLEMENTATION
and perform the load	WITHOUT_CLASSIFICATION	0.999933913384698	WITHOUT_CLASSIFICATION	6.608661530209215E-5	IMPLEMENTATION
important reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999731245112565	WITHOUT_CLASSIFICATION	2.687548874347767E-5	IMPLEMENTATION
this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999954090339043	WITHOUT_CLASSIFICATION	4.590966095802307E-6	IMPLEMENTATION
we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999996714445214	WITHOUT_CLASSIFICATION	3.2855547864590453E-7	IMPLEMENTATION
we did not find a collection element in the result set so we ensure that a collection is created with the owner's identifier since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999805128154438	WITHOUT_CLASSIFICATION	1.94871845562551E-5	IMPLEMENTATION
this is a collection initializer so we must create a collection for each of the passed-in keys to account for the possibility that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999994778432149	WITHOUT_CLASSIFICATION	5.221567851804878E-7	IMPLEMENTATION
grab its state from the resultset and keep it in the session (but don't yet initialize the object itself) note that we acquire lockmode.read even if it was not requested	WITHOUT_CLASSIFICATION	0.9999999102282582	WITHOUT_CLASSIFICATION	8.977174184701297E-8	IMPLEMENTATION
a many-to-many decrement currentdepth here to allow join across the association table without exceeding max_fetch_depth (i.e. the "currentdepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999279368447244	WITHOUT_CLASSIFICATION	7.206315527562433E-5	IMPLEMENTATION
if not a composite key use "foo in (? ? ?)" for batching if no batch and not a composite key use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999428054704769	WITHOUT_CLASSIFICATION	5.7194529523136434E-5	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9999633918394428	WITHOUT_CLASSIFICATION	3.660816055713033E-5	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999954784454615	WITHOUT_CLASSIFICATION	4.521554538511011E-6	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999954784454615	WITHOUT_CLASSIFICATION	4.521554538511011E-6	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999867164760454	WITHOUT_CLASSIFICATION	1.3283523954631731E-5	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.999999914946262	WITHOUT_CLASSIFICATION	8.50537381063737E-8	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999772715664705	WITHOUT_CLASSIFICATION	2.272843352953603E-5	IMPLEMENTATION
translates an ast join type (i.e. the token type) into a joinfragment.xxx join type. @param astjointype the ast join type (from hqlsqltokentypes or sqltokentypes) @return a joinfragment.xxx join type. @see joinfragment @see sqltokentypes	WITHOUT_CLASSIFICATION	0.9999985862794666	WITHOUT_CLASSIFICATION	1.4137205333567516E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999573992716272	WITHOUT_CLASSIFICATION	4.260072837281314E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999573992716272	WITHOUT_CLASSIFICATION	4.260072837281314E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999719385239856	WITHOUT_CLASSIFICATION	2.806147601437678E-5	IMPLEMENTATION
public list getcollectionaliases() { return collectionaliases } public list getcollectionowners() { return collectionowners } public list getcollectionowneraliases() { return collectionowneraliases } public list getcollectionpersisters() { return collectionpersisters } public map getalias2persister() { return alias2persister } public boolean iscollectioninitializer() { return iscollectioninitializer } public list getpersisters() { return persisters } public map getalias2owneralias() { return alias2owneralias } public list getscalartypes() { return scalartypes } public list getscalarcolumnaliases() { return scalarcolumnaliases } public list getpropertyresults() { return propertyresults } public list getcollectionpropertyresults() { return collectionresults } public map getalias2return() { return alias2return }	WITHOUT_CLASSIFICATION	0.9999962573765347	WITHOUT_CLASSIFICATION	3.7426234651805864E-6	IMPLEMENTATION
sqlqueryparser parser = new sqlqueryparser( sqlquery processor.getalias2persister() processor.getalias2return() aliases collaliases collpersisters suffixes collsuffixes ) sql = parser.process() namedparameterbindpoints = parser.getnamedparameters()	WITHOUT_CLASSIFICATION	0.9999455459201342	WITHOUT_CLASSIFICATION	5.445407986586856E-5	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9999343428515817	WITHOUT_CLASSIFICATION	6.56571484182614E-5	IMPLEMENTATION
sqlaliassuffixes[i] = element.getcolumnaliassuffix()	WITHOUT_CLASSIFICATION	0.9999386224832104	WITHOUT_CLASSIFICATION	6.137751678960006E-5	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9973508571457524	WITHOUT_CLASSIFICATION	0.002649142854247522	IMPLEMENTATION
at this point we have (drivingsqlalias) the sql alias of the driving table corresponding to the given user alias. however the driving table is not (necessarily) the table against which we want to apply locks. mainly the exception case here is joined-subclass hierarchies where we instead want to apply the lock against the root table (for all other strategies it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9978297185000019	WITHOUT_CLASSIFICATION	0.002170281499998115	IMPLEMENTATION
the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999739836218053	WITHOUT_CLASSIFICATION	2.6016378194735745E-5	IMPLEMENTATION
we have a mapped identifier property and the root of the incoming property path matched that identifier property	WITHOUT_CLASSIFICATION	0.9996612867063268	WITHOUT_CLASSIFICATION	3.387132936731988E-4	IMPLEMENTATION
we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999688899512585	WITHOUT_CLASSIFICATION	3.111004874139644E-5	IMPLEMENTATION
both many-to-one and one-to-one are represented as a property. entitypersister is relying on this value to determine "lazy fetch groups" in terms of field-level interception. so we need to make sure that we return true here for the case of many-to-one and one-to-one with lazy="no-proxy" impl note - lazy="no-proxy" currently forces both lazy and unwrap to be set to true. the other case we are extremely interested in here is that of lazy="proxy" where lazy is set to true but unwrap is set to false. thus we use both here under the assumption that this return is really only ever used during persister construction to determine the lazy property/field fetch groupings. if that assertion changes then this check needs to change as well. partially this is an issue with the overloading of the term "lazy" here	WITHOUT_CLASSIFICATION	0.9999999996929824	WITHOUT_CLASSIFICATION	3.0701759324215427E-10	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993017594526	WITHOUT_CLASSIFICATION	6.982405473344058E-7	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993017594526	WITHOUT_CLASSIFICATION	6.982405473344058E-7	IMPLEMENTATION
roottablename = persistentclass.getroottable().getqualifiedname( factory.getdialect() factory.getdefaultcatalog() factory.getdefaultschema() )	WITHOUT_CLASSIFICATION	0.9999094060362191	WITHOUT_CLASSIFICATION	9.05939637808743E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999952859335707	WITHOUT_CLASSIFICATION	4.714066429336149E-6	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999959867298938	WITHOUT_CLASSIFICATION	4.013270106219234E-6	IMPLEMENTATION
protected void initpropertypaths(final string pathfinal type typefinal string[] columnsfinal string[] formulatemplatesfinal mapping factory)throws mappingexception {addformulapropertypath(path type formulatemplates)initpropertypaths(path type columns formulatemplates factory)}	WITHOUT_CLASSIFICATION	0.9999967644758809	WITHOUT_CLASSIFICATION	3.2355241189595314E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
custom sql (would be better if these were private)	WITHOUT_CLASSIFICATION	0.999997166910241	WITHOUT_CLASSIFICATION	2.8330897590310605E-6	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999905561261693	WITHOUT_CLASSIFICATION	9.443873830767195E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
aliases for identifier ( alias.id ) skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999982059864807	WITHOUT_CLASSIFICATION	1.794013519227511E-6	IMPLEMENTATION
decide which resultset to get the property value from	WITHOUT_CLASSIFICATION	0.9999963995983466	WITHOUT_CLASSIFICATION	3.6004016535198112E-6	IMPLEMENTATION
note it is conceptually possible that a usertype could map null to a non-null value so the following is arguable	WITHOUT_CLASSIFICATION	0.9999745955155195	WITHOUT_CLASSIFICATION	2.540448448058443E-5	IMPLEMENTATION
the contract of entitytuplizer.determineconcretesubclassentityname says that returning null is an indication that the specified entity-name (this.getentityname) should be used.	WITHOUT_CLASSIFICATION	0.9999885321007345	WITHOUT_CLASSIFICATION	1.1467899265514012E-5	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9998228073644205	WITHOUT_CLASSIFICATION	1.7719263557941425E-4	IMPLEMENTATION
cache these since they are stateless this one could even be static	WITHOUT_CLASSIFICATION	0.9999830605970311	WITHOUT_CLASSIFICATION	1.6939402968828826E-5	IMPLEMENTATION
"as" is not in keywords	WITHOUT_CLASSIFICATION	0.9999088294076509	WITHOUT_CLASSIFICATION	9.117059234912085E-5	IMPLEMENTATION
--commented out by inspection (12/4/04 910 am) public abstract void addcondition(string alias string[] columns string condition)	WITHOUT_CLASSIFICATION	0.9999999395887614	WITHOUT_CLASSIFICATION	6.041123853802282E-8	IMPLEMENTATION
use the id column alias	WITHOUT_CLASSIFICATION	0.9997427985990783	WITHOUT_CLASSIFICATION	2.572014009217113E-4	IMPLEMENTATION
private list aliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999962488548084	WITHOUT_CLASSIFICATION	3.751145191525913E-6	IMPLEMENTATION
columns.add(columnname) aliases.add(tablealias)	WITHOUT_CLASSIFICATION	0.9999647729474415	WITHOUT_CLASSIFICATION	3.5227052558486744E-5	IMPLEMENTATION
where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999592766826786	WITHOUT_CLASSIFICATION	4.0723317321370965E-5	IMPLEMENTATION
revert to traditional hibernate behavior of setting initialpoolsize to minpoolsize unless otherwise specified with a c3p0.-style parameter.	WITHOUT_CLASSIFICATION	0.9999228767214923	WITHOUT_CLASSIFICATION	7.712327850771285E-5	IMPLEMENTATION
arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9997907638593717	WITHOUT_CLASSIFICATION	2.0923614062837327E-4	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9966004770317468	WITHOUT_CLASSIFICATION	0.003399522968253224	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9966004770317468	WITHOUT_CLASSIFICATION	0.003399522968253224	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999996020985972	WITHOUT_CLASSIFICATION	3.979014028501788E-7	IMPLEMENTATION
essentially 1) if we have a local (hibernate) transaction in progress and it already has the usertransaction cached use that usertransaction to determine the status. 2) if a transaction manager has been located use that transaction manager to determine the status. 3) finally as the last resort try to lookup the usertransaction via jndi and use that to determine the status.	WITHOUT_CLASSIFICATION	0.9999999313454744	WITHOUT_CLASSIFICATION	6.865452562037598E-8	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999218141351409	WITHOUT_CLASSIFICATION	7.818586485903004E-5	IMPLEMENTATION
swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.999978019081943	WITHOUT_CLASSIFICATION	2.198091805711897E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999661216623683	WITHOUT_CLASSIFICATION	3.387833763171595E-5	IMPLEMENTATION
we need to dirty check many-to-ones with not-found="ignore" in order to update the cache (not the database) since in this case a null entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999718585436801	WITHOUT_CLASSIFICATION	2.814145631985352E-5	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999840299379131	WITHOUT_CLASSIFICATION	1.59700620869005E-5	IMPLEMENTATION
regions can get instantiated in the course of normal work (e.g. a named query region will be created the first time the query is executed) so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999999998800954	WITHOUT_CLASSIFICATION	1.199047475106355E-10	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9999081885446461	WITHOUT_CLASSIFICATION	9.181145535384985E-5	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999550024267138	WITHOUT_CLASSIFICATION	4.499757328622468E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999966751591999	WITHOUT_CLASSIFICATION	3.324840800097659E-5	IMPLEMENTATION
note this is being used from the process of shutting down a sessionfactory. specific things to consider (1) this clearing of the region should not propagate to other nodes on the cluster (if any) this is the cache-mode-local option bit (2) really just trying a best effort to cleanup after ourselves lock failures etc are not critical here this is the fail-silently option bit	WITHOUT_CLASSIFICATION	0.9463363641979752	WITHOUT_CLASSIFICATION	0.05366363580202487	IMPLEMENTATION
need to extract the component values and check for subtype replacements	WITHOUT_CLASSIFICATION	0.9999474129199822	WITHOUT_CLASSIFICATION	5.258708001769243E-5	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999905939633712	WITHOUT_CLASSIFICATION	9.406036628836421E-6	IMPLEMENTATION
for now just "re-flatten" the metamodel since this is temporary stuff anyway (hhh-1907)	WITHOUT_CLASSIFICATION	0.9999995923907042	WITHOUT_CLASSIFICATION	4.076092957010313E-7	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.999943138090811	WITHOUT_CLASSIFICATION	5.686190918889886E-5	IMPLEMENTATION
this solution would allow us to eliminate the owner arg to disassemble() but what if the collection was null and then later had elements added? seems unsafe session.getpersistencecontext().getcollectionentry( (persistentcollection) value ).getkey()	WITHOUT_CLASSIFICATION	0.9999850387514474	WITHOUT_CLASSIFICATION	1.4961248552605013E-5	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9999022976538422	WITHOUT_CLASSIFICATION	9.770234615776746E-5	IMPLEMENTATION
some collections are not lazy	WITHOUT_CLASSIFICATION	0.9978409354420651	WITHOUT_CLASSIFICATION	0.0021590645579348407	IMPLEMENTATION
here we don't want to suspend the tx. if we do 1) we might be caching query results that reflect uncommitted changes. no tx == no wl on cache node so other threads can prematurely see those query results 2) no tx == immediate replication. more overhead plus we spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9848973184500565	WITHOUT_CLASSIFICATION	0.015102681549943448	IMPLEMENTATION
return the (fully resolved) identifier value but do not resolve to the actual referenced entity instance note the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999958296059153	WITHOUT_CLASSIFICATION	4.170394084773063E-6	IMPLEMENTATION
add a zero (or quite low) timeout option so we don't block. ignore any timeoutexception. basically we forego caching the query result in order to avoid blocking. reads are done with suspended tx so they should not hold the lock for long. not caching the query result is ok since any subsequent read will just see the old result with its out-of-date timestamp that result will be discarded and the db query performed again.	WITHOUT_CLASSIFICATION	0.9999999994983493	WITHOUT_CLASSIFICATION	5.01650783556044E-10	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999097628236335	WITHOUT_CLASSIFICATION	9.023717636650724E-5	IMPLEMENTATION
we have the jbcwritemutex so no other local thread will be trying to write this key. it's possible here some remote thread has come in and changed the values again but since we are reading the values to write to jbc right now we know we are writing the latest values i.e. we don't assume that what we cached in entry.update() above is what we should write to jbc now. our write could be redundant i.e. we are writing what some remote thread just came in an wrote. there is a chance that yet another remote thread will update us and we'll then overwrite that later data in jbc. but all remote nodes will ignore that change in their localcache the only place it will live will be in jbc where it can only effect the initial state transfer values on newly joined nodes (i.e. populatelocalcache()).	WITHOUT_CLASSIFICATION	0.9995745195930764	WITHOUT_CLASSIFICATION	4.2548040692366983E-4	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999885934934367	WITHOUT_CLASSIFICATION	1.140650656319769E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999885934934367	WITHOUT_CLASSIFICATION	1.140650656319769E-5	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9986453994549042	WITHOUT_CLASSIFICATION	0.0013546005450958461	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.990938509637339	WITHOUT_CLASSIFICATION	0.009061490362661039	IMPLEMENTATION
we need to obtain the lock before any actions are executed since this may be an inverse="true" bidirectional association and it is one of the earlier entity actions which actually updates the database (this action is resposible for second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999921772147963	WITHOUT_CLASSIFICATION	7.82278520374145E-6	IMPLEMENTATION
postdelete after actually deleting a row record the fact that the instance no longer exists on the database (needed for identity-column key generation) and remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999918974914234	WITHOUT_CLASSIFICATION	8.102508576531164E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9993104425975381	WITHOUT_CLASSIFICATION	6.8955740246186E-4	IMPLEMENTATION
