todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.7369576384699401	IMPLEMENTATION	0.26304236153006	WITHOUT_CLASSIFICATION
todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.7369576384699401	IMPLEMENTATION	0.26304236153006	WITHOUT_CLASSIFICATION
todo return new lock(ts)	IMPLEMENTATION	0.9157427536458527	WITHOUT_CLASSIFICATION	0.08425724635414743	IMPLEMENTATION
todo if lock.gettimestamp().equals(ts)	IMPLEMENTATION	0.9093080335949411	WITHOUT_CLASSIFICATION	0.09069196640505903	IMPLEMENTATION
todo mappings.getlogicaltablename(ownertable)	IMPLEMENTATION	0.6413642492653724	WITHOUT_CLASSIFICATION	0.35863575073462756	IMPLEMENTATION
todo handle typedefs	IMPLEMENTATION	0.7289977437937453	IMPLEMENTATION	0.2710022562062548	WITHOUT_CLASSIFICATION
todo check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.9081014605808778	WITHOUT_CLASSIFICATION	0.09189853941912214	IMPLEMENTATION
todo bindpropertyresults(alias returnelem)	IMPLEMENTATION	0.6413642492653724	WITHOUT_CLASSIFICATION	0.35863575073462756	IMPLEMENTATION
todo validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.949396669367584	WITHOUT_CLASSIFICATION	0.05060333063241597	IMPLEMENTATION
todo native ids	IMPLEMENTATION	0.5630853326679487	WITHOUT_CLASSIFICATION	0.43691466733205137	IMPLEMENTATION
todo if we are using identity columns fetch the identifier	IMPLEMENTATION	0.9832587727992462	WITHOUT_CLASSIFICATION	0.01674122720075374	IMPLEMENTATION
todo handle property-ref	IMPLEMENTATION	0.705820067556784	IMPLEMENTATION	0.294179932443216	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.532947118257071	IMPLEMENTATION	0.4670528817429291	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.532947118257071	IMPLEMENTATION	0.4670528817429291	WITHOUT_CLASSIFICATION
todo check if mimer sql cannot handle the way db2 does	IMPLEMENTATION	0.7329750334344921	WITHOUT_CLASSIFICATION	0.26702496656550784	IMPLEMENTATION
todo restrict violation	IMPLEMENTATION	0.7855933772705457	WITHOUT_CLASSIFICATION	0.21440662272945427	IMPLEMENTATION
todo lowercasing done here. was done "at random" before maybe not needed at all ?	IMPLEMENTATION	0.9999873602565472	IMPLEMENTATION	1.2639743452873002E-5	WITHOUT_CLASSIFICATION
todo tolowercase was not done before. only used in template.	IMPLEMENTATION	0.8990662771084749	WITHOUT_CLASSIFICATION	0.10093372289152511	IMPLEMENTATION
add an entry for this type of entity. we can be assured that all referenced entities have already been processed so specify that this entity is with the latest batch. doing the batch number before adding the name to the list is a faster way to get an accurate number.	IMPLEMENTATION	0.9999783385983605	WITHOUT_CLASSIFICATION	2.1661401639428406E-5	IMPLEMENTATION
todo avoid this for non-new instances where mightbedirty==false	IMPLEMENTATION	0.6320560781538919	IMPLEMENTATION	0.367943921846108	WITHOUT_CLASSIFICATION
todo optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.7290747201897313	WITHOUT_CLASSIFICATION	0.2709252798102687	IMPLEMENTATION
we could move this inside if we wanted to tolerate collection initializations during collection dirty checking	IMPLEMENTATION	0.9997247807828512	WITHOUT_CLASSIFICATION	2.7521921714880707E-4	IMPLEMENTATION
todo assertion only could be optimized away	IMPLEMENTATION	0.8296719072055206	WITHOUT_CLASSIFICATION	0.1703280927944794	IMPLEMENTATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.8822937174366225	IMPLEMENTATION	0.1177062825633775	WITHOUT_CLASSIFICATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.8822937174366225	IMPLEMENTATION	0.1177062825633775	WITHOUT_CLASSIFICATION
todo why aren't these the same?	IMPLEMENTATION	0.9458396034227851	IMPLEMENTATION	0.054160396577214984	WITHOUT_CLASSIFICATION
todo always true for now but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.9776536664472545	WITHOUT_CLASSIFICATION	0.022346333552745533	IMPLEMENTATION
todo or should we return 'containstablealias'??	IMPLEMENTATION	0.7714029523295467	WITHOUT_CLASSIFICATION	0.2285970476704534	IMPLEMENTATION
todo arithmetic expressions multiple new foo()	IMPLEMENTATION	0.7728346933886899	WITHOUT_CLASSIFICATION	0.22716530661131015	IMPLEMENTATION
todo for some dialects it would be appropriate to add the renderorderbypropertiesselect() to other select strings	IMPLEMENTATION	0.9513333118407443	IMPLEMENTATION	0.0486666881592556	WITHOUT_CLASSIFICATION
todo cache the persister this shows up in yourkit	IMPLEMENTATION	0.9094029657111196	WITHOUT_CLASSIFICATION	0.09059703428888047	IMPLEMENTATION
todo theoretically non-threadsafe	IMPLEMENTATION	0.6413642492653724	WITHOUT_CLASSIFICATION	0.35863575073462756	IMPLEMENTATION
todo look at optimizing these	IMPLEMENTATION	0.5764147644237476	WITHOUT_CLASSIFICATION	0.4235852355762524	IMPLEMENTATION
todo maybe call it getrowselection() ?	IMPLEMENTATION	0.9058695041798576	IMPLEMENTATION	0.09413049582014246	WITHOUT_CLASSIFICATION
todo make this handle multiple collection roles!	IMPLEMENTATION	0.9547425428716372	IMPLEMENTATION	0.04525745712836279	WITHOUT_CLASSIFICATION
todo can we limit stored procedures ?!	IMPLEMENTATION	0.5706783257543813	IMPLEMENTATION	0.42932167424561873	WITHOUT_CLASSIFICATION
todo not visible to the user!	IMPLEMENTATION	0.8590202185294892	IMPLEMENTATION	0.14097978147051085	WITHOUT_CLASSIFICATION
todo unnecessary for databases with ansi-style joins	IMPLEMENTATION	0.830528700418715	WITHOUT_CLASSIFICATION	0.16947129958128507	IMPLEMENTATION
todo use these in methods above	IMPLEMENTATION	0.633112372982512	WITHOUT_CLASSIFICATION	0.3668876270174881	IMPLEMENTATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.7646403085048105	IMPLEMENTATION	0.23535969149518962	WITHOUT_CLASSIFICATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.7646403085048105	IMPLEMENTATION	0.23535969149518962	WITHOUT_CLASSIFICATION
todo temporary initial step towards hhh-1907	IMPLEMENTATION	0.9152945819612875	WITHOUT_CLASSIFICATION	0.0847054180387125	IMPLEMENTATION
todo remove this once componentmetamodel is complete and merged	IMPLEMENTATION	0.7839280278134393	IMPLEMENTATION	0.21607197218656077	WITHOUT_CLASSIFICATION
todo handle supportsnotnullunique=false but such a case does not exist in the wild so far	IMPLEMENTATION	0.9971034221796999	WITHOUT_CLASSIFICATION	0.0028965778203000267	IMPLEMENTATION
todo still need to make collectionpersisters entitymode-aware	IMPLEMENTATION	0.9963534743646807	IMPLEMENTATION	0.0036465256353192827	WITHOUT_CLASSIFICATION
todo add owner argument!!	IMPLEMENTATION	0.7801098533853258	WITHOUT_CLASSIFICATION	0.21989014661467424	IMPLEMENTATION
todo formulas ?	IMPLEMENTATION	0.5039764535134863	IMPLEMENTATION	0.4960235464865137	WITHOUT_CLASSIFICATION
todo include the rowids!!!!	IMPLEMENTATION	0.8856400827939719	WITHOUT_CLASSIFICATION	0.11435991720602805	IMPLEMENTATION
todo cache this sql	IMPLEMENTATION	0.6679951029585206	IMPLEMENTATION	0.33200489704147945	WITHOUT_CLASSIFICATION
todo create uk loaders for component properties	IMPLEMENTATION	0.9896202063078327	WITHOUT_CLASSIFICATION	0.010379793692167336	IMPLEMENTATION
todo cache this in an instvar	IMPLEMENTATION	0.9328619540567588	WITHOUT_CLASSIFICATION	0.06713804594324126	IMPLEMENTATION
/ todo look at perhaps caching this	IMPLEMENTATION	0.7963560331611526	IMPLEMENTATION	0.20364396683884758	WITHOUT_CLASSIFICATION
todo eventually put this back in once we think all is fixed object otheralias = columnsunique.put(qualifiedcolumn columnalias)	IMPLEMENTATION	0.791437579226063	IMPLEMENTATION	0.20856242077393708	WITHOUT_CLASSIFICATION
todo if we support multiple fetch groups we would need to clone the set of lazy properties!	IMPLEMENTATION	0.6987895368573773	IMPLEMENTATION	0.3012104631426227	WITHOUT_CLASSIFICATION
todo proxies!	IMPLEMENTATION	0.6173342322653929	WITHOUT_CLASSIFICATION	0.3826657677346071	IMPLEMENTATION
todo terrible implementation!	IMPLEMENTATION	0.6439668457063472	WITHOUT_CLASSIFICATION	0.3560331542936528	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.6173342322653929	WITHOUT_CLASSIFICATION	0.3826657677346071	IMPLEMENTATION
todo i don't really like this implementation it would be better if this was handled by searchfordirtycollections()	IMPLEMENTATION	0.9500618875136899	IMPLEMENTATION	0.04993811248631004	WITHOUT_CLASSIFICATION
todo check if key contains the owner id	IMPLEMENTATION	0.6894864241951111	WITHOUT_CLASSIFICATION	0.310513575804889	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.6173342322653929	WITHOUT_CLASSIFICATION	0.3826657677346071	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9996659474209787	WITHOUT_CLASSIFICATION	3.3405257902133575E-4	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9996659474209787	WITHOUT_CLASSIFICATION	3.3405257902133575E-4	IMPLEMENTATION
if we are still not resolved we might represent a constant. needed to add this here because the allowance of naked-prop-refs in the grammar collides with the definition of literals/constants ("nondeterminism"). todo cleanup the grammar so that "processconstants" is always just handled from here	IMPLEMENTATION	0.9677139185109905	IMPLEMENTATION	0.03228608148900946	WITHOUT_CLASSIFICATION
todo add referencedclass to disambiguate to fks on the same columns pointing to different tables	IMPLEMENTATION	0.8191943129688443	IMPLEMENTATION	0.1808056870311557	WITHOUT_CLASSIFICATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999873007809396	WITHOUT_CLASSIFICATION	1.2699219060382886E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9998709716983827	WITHOUT_CLASSIFICATION	1.2902830161719484E-4	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9998709716983827	WITHOUT_CLASSIFICATION	1.2902830161719484E-4	IMPLEMENTATION
| this | bean | args | raw bean |	WITHOUT_CLASSIFICATION	0.9993778188600767	WITHOUT_CLASSIFICATION	6.221811399234055E-4	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
astore 4 store the raw bean	WITHOUT_CLASSIFICATION	0.9998608108797626	WITHOUT_CLASSIFICATION	1.391891202373344E-4	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9994914225072934	WITHOUT_CLASSIFICATION	5.085774927065611E-4	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9994914225072934	WITHOUT_CLASSIFICATION	5.085774927065611E-4	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9997483295586251	WITHOUT_CLASSIFICATION	2.516704413748615E-4	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9997165675520806	WITHOUT_CLASSIFICATION	2.834324479194283E-4	IMPLEMENTATION
putfield new value of the field	WITHOUT_CLASSIFICATION	0.9999805036182217	WITHOUT_CLASSIFICATION	1.94963817783918E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999415603603997	WITHOUT_CLASSIFICATION	5.843963960014101E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.999982675309194	WITHOUT_CLASSIFICATION	1.7324690805999327E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.999982675309194	WITHOUT_CLASSIFICATION	1.7324690805999327E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9996103860530045	WITHOUT_CLASSIFICATION	3.896139469956226E-4	IMPLEMENTATION
just decrement the lock don't recache (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9973470114861008	WITHOUT_CLASSIFICATION	0.002652988513899189	IMPLEMENTATION
decode row selection	WITHOUT_CLASSIFICATION	0.9997670923795807	WITHOUT_CLASSIFICATION	2.3290762041916203E-4	IMPLEMENTATION
disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999331247479832	WITHOUT_CLASSIFICATION	6.687525201683425E-5	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9998128237353686	WITHOUT_CLASSIFICATION	1.8717626463143967E-4	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9978967873007772	WITHOUT_CLASSIFICATION	0.0021032126992228247	IMPLEMENTATION
row id	WITHOUT_CLASSIFICATION	0.9981037949766755	WITHOUT_CLASSIFICATION	0.0018962050233245298	IMPLEMENTATION
composite-id	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9996827139564163	WITHOUT_CLASSIFICATION	3.172860435837628E-4	IMPLEMENTATION
property prop = new property() prop.setname("id") prop.setpropertyaccessorname("embedded") prop.setvalue(id) entity.setidentifierproperty(prop)	WITHOUT_CLASSIFICATION	0.9996595299266805	WITHOUT_CLASSIFICATION	3.4047007331944914E-4	IMPLEMENTATION
dynamic insert	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9993695956324093	WITHOUT_CLASSIFICATION	6.304043675906003E-4	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999646490338593	WITHOUT_CLASSIFICATION	3.535096614066434E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9996594064444858	WITHOUT_CLASSIFICATION	3.405935555141073E-4	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9996594064444858	WITHOUT_CLASSIFICATION	3.405935555141073E-4	IMPLEMENTATION
generated properties can never be insertable	WITHOUT_CLASSIFICATION	0.9962736654308391	WITHOUT_CLASSIFICATION	0.00372633456916097	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9996644787597244	WITHOUT_CLASSIFICATION	3.3552124027555697E-4	IMPLEMENTATION
by default natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999816514761427	WITHOUT_CLASSIFICATION	1.834852385728966E-5	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9998009859616133	WITHOUT_CLASSIFICATION	1.9901403838664306E-4	IMPLEMENTATION
we found some extends attributes referencing entities which were not already processed. here we need to locate all entity-names and class-names contained in this document itself making sure that these get removed from the extendz list such that only extends names which require us to delay processing (i.e. external to this document and not yet processed) are contained in the returned result	WITHOUT_CLASSIFICATION	0.5393459033281482	WITHOUT_CLASSIFICATION	0.4606540966718517	IMPLEMENTATION
build a resultsetmappingdefinition given a containing element for the "return-xxx" elements @param resultsetelem the element containing the return definitions. @param path no clue @param mappings the current processing state. @return the description of the mappings	WITHOUT_CLASSIFICATION	0.9999889614078933	WITHOUT_CLASSIFICATION	1.103859210670974E-5	IMPLEMENTATION
private boolean showsql private boolean formatsql	WITHOUT_CLASSIFICATION	0.9999216323043583	WITHOUT_CLASSIFICATION	7.836769564173202E-5	IMPLEMENTATION
public boolean isshowsqlenabled() { return showsql } public boolean isformatsqlenabled() { return formatsql }	WITHOUT_CLASSIFICATION	0.9999947968914631	WITHOUT_CLASSIFICATION	5.203108536940886E-6	IMPLEMENTATION
set a custom entity resolver. this entity resolver must be set before addxxx(misc) call. default value is {@link org.hibernate.util.dtdentityresolver} @param entityresolver entity resolver to use	WITHOUT_CLASSIFICATION	0.9994582018026965	WITHOUT_CLASSIFICATION	5.41798197303494E-4	IMPLEMENTATION
final list extendsqueue	WITHOUT_CLASSIFICATION	0.9997394094970531	WITHOUT_CLASSIFICATION	2.605905029468422E-4	IMPLEMENTATION
if close() is called guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999790473655502	WITHOUT_CLASSIFICATION	2.095263444983578E-5	IMPLEMENTATION
if a threadlocalsessioncontext-bound session happens to get serialized to be completely correct we need to make sure that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9996674320315688	WITHOUT_CLASSIFICATION	3.325679684311495E-4	IMPLEMENTATION
on the inverse it makes sense that if a threadlocalsessioncontext- bound session then gets deserialized to go ahead and re-bind it to the threadlocalsessioncontext session map.	WITHOUT_CLASSIFICATION	0.9998091993337163	WITHOUT_CLASSIFICATION	1.908006662838112E-4	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998699690746401	WITHOUT_CLASSIFICATION	1.300309253599657E-4	IMPLEMENTATION
60 second lock timeout	WITHOUT_CLASSIFICATION	0.999656615854797	WITHOUT_CLASSIFICATION	3.4338414520302773E-4	IMPLEMENTATION
optimisticcache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994993849830722	WITHOUT_CLASSIFICATION	5.006150169277353E-4	IMPLEMENTATION
option.setdataversion( nonlockingdataversion.instance )	WITHOUT_CLASSIFICATION	0.9995246458529513	WITHOUT_CLASSIFICATION	4.7535414704869754E-4	IMPLEMENTATION
do the put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9994064215449961	WITHOUT_CLASSIFICATION	5.935784550037986E-4	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
tree cache in optimistic mode seems to have as very difficult time with remove calls on non-existent nodes (npes)	WITHOUT_CLASSIFICATION	0.9996720238244214	WITHOUT_CLASSIFICATION	3.2797617557856585E-4	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
do the failfast put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9994064215449961	WITHOUT_CLASSIFICATION	5.935784550037986E-4	IMPLEMENTATION
note evict() operates locally only (i.e. does not propogate to any other nodes in the potential cluster). this is exactly what is needed when we destroy() here destroy() is used as part of the process of shutting down a sessionfactory thus these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9889340347190546	IMPLEMENTATION	0.011065965280945465	WITHOUT_CLASSIFICATION
protected regionrootlistener listener	WITHOUT_CLASSIFICATION	0.9994702653956578	WITHOUT_CLASSIFICATION	5.297346043422503E-4	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9957497236124445	WITHOUT_CLASSIFICATION	0.004250276387555555	IMPLEMENTATION
if we've been blocking for the mutex perhaps another thread has already reestablished the root. in case the node was reestablised via replication confirm it's marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999858911824221	WITHOUT_CLASSIFICATION	1.4108817577832796E-5	IMPLEMENTATION
for pessimistic locking we just want to toss out our ref to any old invalid root node and get the latest (may be null)	WITHOUT_CLASSIFICATION	0.9999917384221032	WITHOUT_CLASSIFICATION	8.261577896803895E-6	IMPLEMENTATION
the rest only matters for optimistic locking where we need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.5906477258172089	WITHOUT_CLASSIFICATION	0.4093522741827911	IMPLEMENTATION
don't hold a transactional lock for this	WITHOUT_CLASSIFICATION	0.9997920862555011	WITHOUT_CLASSIFICATION	2.0791374449879015E-4	IMPLEMENTATION
make sure the root node for the region exists and has a dataversion that never complains	WITHOUT_CLASSIFICATION	0.9888603718448861	WITHOUT_CLASSIFICATION	0.011139628155113955	IMPLEMENTATION
never evict this node	WITHOUT_CLASSIFICATION	0.9921711807299988	WITHOUT_CLASSIFICATION	0.00782881927000132	IMPLEMENTATION
fix up the resident flag	WITHOUT_CLASSIFICATION	0.9959975033438041	WITHOUT_CLASSIFICATION	0.0040024966561958706	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999715815658575	WITHOUT_CLASSIFICATION	2.8418434142529765E-5	IMPLEMENTATION
no-op. we don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9983874971755732	WITHOUT_CLASSIFICATION	0.0016125028244269128	IMPLEMENTATION
this should only be possible if the caches are constructor injected	WITHOUT_CLASSIFICATION	0.9999755347402718	WITHOUT_CLASSIFICATION	2.4465259728199072E-5	IMPLEMENTATION
we only build caches if none were passed in. passing in caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999913981094247	WITHOUT_CLASSIFICATION	8.601890575336181E-6	IMPLEMENTATION
set up the cache factory	WITHOUT_CLASSIFICATION	0.9998231554094387	WITHOUT_CLASSIFICATION	1.76844590561288E-4	IMPLEMENTATION
see if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999958142447604	WITHOUT_CLASSIFICATION	4.185755239644226E-6	IMPLEMENTATION
default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.999994870849523	WITHOUT_CLASSIFICATION	5.129150477005381E-6	IMPLEMENTATION
default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999970907188548	WITHOUT_CLASSIFICATION	2.9092811451383297E-6	IMPLEMENTATION
for timestamps we default to a separate config	WITHOUT_CLASSIFICATION	0.9999659431910625	WITHOUT_CLASSIFICATION	3.405680893754137E-5	IMPLEMENTATION
we can't change the tm on a running cache just check if the cache has no tm and we're ok with that	WITHOUT_CLASSIFICATION	0.9997842783699734	WITHOUT_CLASSIFICATION	2.1572163002650738E-4	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9994934401470084	WITHOUT_CLASSIFICATION	5.06559852991697E-4	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.999759846087661	WITHOUT_CLASSIFICATION	2.4015391233893373E-4	IMPLEMENTATION
this method should be implemented assuming it's valid to do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.7675111987313109	WITHOUT_CLASSIFICATION	0.23248880126868923	IMPLEMENTATION
make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9992300496926267	WITHOUT_CLASSIFICATION	7.699503073733125E-4	IMPLEMENTATION
we use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9998971579541855	WITHOUT_CLASSIFICATION	1.0284204581443896E-4	IMPLEMENTATION
following methods we don't delegate since they have so little logic it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9916871061936442	WITHOUT_CLASSIFICATION	0.008312893806355729	IMPLEMENTATION
if jbc is using invalidation we don't want to propagate changes. we use the timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9994886071471146	WITHOUT_CLASSIFICATION	5.113928528853156E-4	IMPLEMENTATION
we don't want to waste effort setting an option if jbc is already in local mode. if jbc is repl_(a)sync then check if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999897605593164	WITHOUT_CLASSIFICATION	1.0239440683595814E-5	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents updates add a zero (or low) timeout option so we don't block waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999015504828366	WITHOUT_CLASSIFICATION	9.84495171635118E-5	IMPLEMENTATION
double check the distributed cache	WITHOUT_CLASSIFICATION	0.999947455922009	WITHOUT_CLASSIFICATION	5.254407799113337E-5	IMPLEMENTATION
get an exclusive right to update jbc for this key from this node.	WITHOUT_CLASSIFICATION	0.9999864001933093	WITHOUT_CLASSIFICATION	1.3599806690619744E-5	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9994780578297341	WITHOUT_CLASSIFICATION	5.219421702658562E-4	IMPLEMENTATION
initial load from jbc	WITHOUT_CLASSIFICATION	0.9999797981164371	WITHOUT_CLASSIFICATION	2.0201883562800224E-5	IMPLEMENTATION
see if we had a 2nd invalidation from the same initial preinvalidation timestamp. if so only increment if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999999805130936	WITHOUT_CLASSIFICATION	1.948690648718488E-8	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9994780578297341	WITHOUT_CLASSIFICATION	5.219421702658562E-4	IMPLEMENTATION
if the workspace node has null as well ok if not we've been modified in a non-comparable manner which we have to treat as us being newer	WITHOUT_CLASSIFICATION	0.9930776083830554	WITHOUT_CLASSIFICATION	0.006922391616944668	IMPLEMENTATION
the standard comparator types are not serializable but are singletons	WITHOUT_CLASSIFICATION	0.9998794820870982	WITHOUT_CLASSIFICATION	1.205179129017005E-4	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9994945258837485	WITHOUT_CLASSIFICATION	5.054741162515347E-4	IMPLEMENTATION
construct the cache	WITHOUT_CLASSIFICATION	0.9997579014356984	WITHOUT_CLASSIFICATION	2.4209856430168055E-4	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9997600253850786	WITHOUT_CLASSIFICATION	2.3997461492147531E-4	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9997600253850786	WITHOUT_CLASSIFICATION	2.3997461492147531E-4	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for initialpoolsize which hibernate sensibly lets default to minpoolsize but we'll let users override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.999999924087765	WITHOUT_CLASSIFICATION	7.591223506942992E-8	IMPLEMENTATION
datasource unpooled = datasources.unpooleddatasource(jdbcurl props.getproperty(environment.user) props.getproperty(environment.pass))	WITHOUT_CLASSIFICATION	0.9993932759159657	WITHOUT_CLASSIFICATION	6.06724084034229E-4	IMPLEMENTATION
true if the pool is borrowed from the outside false if we used to create it	WITHOUT_CLASSIFICATION	0.9999979659618642	WITHOUT_CLASSIFICATION	2.0340381357353735E-6	IMPLEMENTATION
get a connection from the pool (thru drivermanager cfr. proxool doc)	WITHOUT_CLASSIFICATION	0.9981585170454733	WITHOUT_CLASSIFICATION	0.0018414829545265897	IMPLEMENTATION
set the transaction isolation if defined	WITHOUT_CLASSIFICATION	0.9999723741303986	WITHOUT_CLASSIFICATION	2.762586960130191E-5	IMPLEMENTATION
toggle autocommit to false if set	WITHOUT_CLASSIFICATION	0.9999181721220957	WITHOUT_CLASSIFICATION	8.182787790431134E-5	IMPLEMENTATION
return the connection	WITHOUT_CLASSIFICATION	0.995853710583324	WITHOUT_CLASSIFICATION	0.004146289416676073	IMPLEMENTATION
get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.99996425418347	WITHOUT_CLASSIFICATION	3.5745816530011645E-5	IMPLEMENTATION
default the proxool alias setting	WITHOUT_CLASSIFICATION	0.9999923484571502	WITHOUT_CLASSIFICATION	7.651542849832169E-6	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9995375223650298	WITHOUT_CLASSIFICATION	4.6247763497014535E-4	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9995375223650298	WITHOUT_CLASSIFICATION	4.6247763497014535E-4	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9988973837041435	WITHOUT_CLASSIFICATION	0.0011026162958565236	IMPLEMENTATION
set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9985191747608334	WITHOUT_CLASSIFICATION	0.001480825239166712	IMPLEMENTATION
configured using the jaxp configurator	WITHOUT_CLASSIFICATION	0.9998798553316933	WITHOUT_CLASSIFICATION	1.2014466830669015E-4	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9995375223650298	WITHOUT_CLASSIFICATION	4.6247763497014535E-4	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9988973837041435	WITHOUT_CLASSIFICATION	0.0011026162958565236	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9988973837041435	WITHOUT_CLASSIFICATION	0.0011026162958565236	IMPLEMENTATION
configured using the properties file configurator	WITHOUT_CLASSIFICATION	0.9996636481302896	WITHOUT_CLASSIFICATION	3.363518697104365E-4	IMPLEMENTATION
remember isolation level	WITHOUT_CLASSIFICATION	0.9994458534997052	WITHOUT_CLASSIFICATION	5.541465002948371E-4	IMPLEMENTATION
if the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999997981378308	WITHOUT_CLASSIFICATION	2.0186216912472117E-7	IMPLEMENTATION
we have created the pool ourselves so shut it down	WITHOUT_CLASSIFICATION	0.9999952777643464	WITHOUT_CLASSIFICATION	4.722235653675173E-6	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9983076305007047	WITHOUT_CLASSIFICATION	0.001692369499295286	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9983076305007047	WITHOUT_CLASSIFICATION	0.001692369499295286	IMPLEMENTATION
always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.999479197130428	WITHOUT_CLASSIFICATION	5.208028695720566E-4	IMPLEMENTATION
public currency getcurrency(int col) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9998908544195677	WITHOUT_CLASSIFICATION	1.0914558043228108E-4	IMPLEMENTATION
default is pojo	WITHOUT_CLASSIFICATION	0.9999633962424729	WITHOUT_CLASSIFICATION	3.6603757527098736E-5	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999538344035105	WITHOUT_CLASSIFICATION	4.616559648956933E-5	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999538344035105	WITHOUT_CLASSIFICATION	4.616559648956933E-5	IMPLEMENTATION
private cacheentry cacheentry	WITHOUT_CLASSIFICATION	0.9998933767242871	WITHOUT_CLASSIFICATION	1.0662327571279598E-4	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9979265961679119	WITHOUT_CLASSIFICATION	0.002073403832088049	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9989447961113755	WITHOUT_CLASSIFICATION	0.0010552038886244566	IMPLEMENTATION
get the updated snapshot of the entity state by cloning current state it is safe to copy in place since by this time no-one else (should have) has a reference to the array	WITHOUT_CLASSIFICATION	0.9999930403892074	WITHOUT_CLASSIFICATION	6.95961079248229E-6	IMPLEMENTATION
this entity defines proeprty generation so process those generated values	WITHOUT_CLASSIFICATION	0.999982331777213	WITHOUT_CLASSIFICATION	1.7668222787047668E-5	IMPLEMENTATION
have the entity entry perform post-update processing passing it the update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9998031882740526	WITHOUT_CLASSIFICATION	1.9681172594737567E-4	IMPLEMENTATION
!persister.iscacheinvalidationrequired()	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9984744817718686	WITHOUT_CLASSIFICATION	0.0015255182281314577	IMPLEMENTATION
sort first by role name	WITHOUT_CLASSIFICATION	0.9994148282993146	WITHOUT_CLASSIFICATION	5.851717006854671E-4	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9989447961113755	WITHOUT_CLASSIFICATION	0.0010552038886244566	IMPLEMENTATION
then by fk	WITHOUT_CLASSIFICATION	0.9997641088898963	WITHOUT_CLASSIFICATION	2.3589111010378943E-4	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9995509144132142	WITHOUT_CLASSIFICATION	4.490855867857873E-4	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9995509144132142	WITHOUT_CLASSIFICATION	4.490855867857873E-4	IMPLEMENTATION
an existing collection that was either non-empty or uninitialized is replaced by null or a different collection (if the collection is uninitialized hibernate has no way of knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.999949767923604	WITHOUT_CLASSIFICATION	5.023207639591615E-5	IMPLEMENTATION
this method is called when a new non-null collection is persisted or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999485005511525	WITHOUT_CLASSIFICATION	5.1499448847552776E-5	IMPLEMENTATION
boolean put = persister.getcache().insert(ck cacheentry)	WITHOUT_CLASSIFICATION	0.9993531971295434	WITHOUT_CLASSIFICATION	6.468028704566346E-4	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9871437889730514	WITHOUT_CLASSIFICATION	0.01285621102694844	IMPLEMENTATION
do nothing - we only need to notify the cache	WITHOUT_CLASSIFICATION	0.99765232696181	WITHOUT_CLASSIFICATION	0.002347673038189842	IMPLEMENTATION
sort first by entity name	WITHOUT_CLASSIFICATION	0.9994113284531191	WITHOUT_CLASSIFICATION	5.886715468809926E-4	IMPLEMENTATION
then by id	WITHOUT_CLASSIFICATION	0.9989349418606376	WITHOUT_CLASSIFICATION	0.0010650581393623576	IMPLEMENTATION
to be safe	WITHOUT_CLASSIFICATION	0.9993517640719016	WITHOUT_CLASSIFICATION	6.48235928098301E-4	IMPLEMENTATION
no transformations took place so handle it as we would a non-instrumented class	WITHOUT_CLASSIFICATION	0.9985953628264373	WITHOUT_CLASSIFICATION	0.0014046371735626387	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999851112520336	WITHOUT_CLASSIFICATION	1.4888747966371167E-5	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999851112520336	WITHOUT_CLASSIFICATION	1.4888747966371167E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9912875218643532	WITHOUT_CLASSIFICATION	0.008712478135646757	IMPLEMENTATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999873007809396	WITHOUT_CLASSIFICATION	1.2699219060382886E-5	IMPLEMENTATION
set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9998517823061963	WITHOUT_CLASSIFICATION	1.482176938037007E-4	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
invokespecial	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9998709716983827	WITHOUT_CLASSIFICATION	1.2902830161719484E-4	IMPLEMENTATION
aload_1 load bean	WITHOUT_CLASSIFICATION	0.9997535521215233	WITHOUT_CLASSIFICATION	2.464478784767073E-4	IMPLEMENTATION
checkcast cast bean	WITHOUT_CLASSIFICATION	0.9996836401367251	WITHOUT_CLASSIFICATION	3.1635986327490235E-4	IMPLEMENTATION
astore_3 store bean	WITHOUT_CLASSIFICATION	0.9997303638458493	WITHOUT_CLASSIFICATION	2.6963615415066144E-4	IMPLEMENTATION
aload_2 args	WITHOUT_CLASSIFICATION	0.9996877047595643	WITHOUT_CLASSIFICATION	3.1229524043565314E-4	IMPLEMENTATION
iconst_i continue to aastore growing stack is 1	WITHOUT_CLASSIFICATION	0.9993552540324525	WITHOUT_CLASSIFICATION	6.447459675474139E-4	IMPLEMENTATION
new	WITHOUT_CLASSIFICATION	0.999746408589108	WITHOUT_CLASSIFICATION	2.5359141089193246E-4	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
aload_3 load the raw bean	WITHOUT_CLASSIFICATION	0.9998757663090685	WITHOUT_CLASSIFICATION	1.242336909315087E-4	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
aastore args	WITHOUT_CLASSIFICATION	0.9996877047595643	WITHOUT_CLASSIFICATION	3.1229524043565314E-4	IMPLEMENTATION
| this | bean | args | i | raw bean | exception |	WITHOUT_CLASSIFICATION	0.999139271556408	WITHOUT_CLASSIFICATION	8.607284435919824E-4	IMPLEMENTATION
required to exception table iconst_0 i	WITHOUT_CLASSIFICATION	0.9980575558753885	WITHOUT_CLASSIFICATION	0.0019424441246114691	IMPLEMENTATION
istore_3 store i	WITHOUT_CLASSIFICATION	0.9993198005834903	WITHOUT_CLASSIFICATION	6.801994165097274E-4	IMPLEMENTATION
aload_1 load the bean	WITHOUT_CLASSIFICATION	0.9998757663090685	WITHOUT_CLASSIFICATION	1.242336909315087E-4	IMPLEMENTATION
checkcast cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9998037952324921	WITHOUT_CLASSIFICATION	1.9620476750791622E-4	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9994914225072934	WITHOUT_CLASSIFICATION	5.085774927065611E-4	IMPLEMENTATION
start region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9956883991132636	WITHOUT_CLASSIFICATION	0.004311600886736464	IMPLEMENTATION
iinc 3 1	WITHOUT_CLASSIFICATION	0.9995779327599164	WITHOUT_CLASSIFICATION	4.2206724008369016E-4	IMPLEMENTATION
aload 4 load the raw bean	WITHOUT_CLASSIFICATION	0.9998727823478252	WITHOUT_CLASSIFICATION	1.272176521747382E-4	IMPLEMENTATION
aload_2 load the args	WITHOUT_CLASSIFICATION	0.9998777585967776	WITHOUT_CLASSIFICATION	1.222414032224267E-4	IMPLEMENTATION
iconst_i	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
aaload	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
checkcast (case of primitive type) invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.999891348162633	WITHOUT_CLASSIFICATION	1.0865183736706505E-4	IMPLEMENTATION
checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999195101267337	WITHOUT_CLASSIFICATION	8.048987326624283E-5	IMPLEMENTATION
current stack len = 2	WITHOUT_CLASSIFICATION	0.9998096576428114	WITHOUT_CLASSIFICATION	1.9034235718859993E-4	IMPLEMENTATION
end region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9927820804630966	WITHOUT_CLASSIFICATION	0.007217919536903495	IMPLEMENTATION
register in exception table	WITHOUT_CLASSIFICATION	0.9999710954771409	WITHOUT_CLASSIFICATION	2.8904522859128972E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9998709716983827	WITHOUT_CLASSIFICATION	1.2902830161719484E-4	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9998709716983827	WITHOUT_CLASSIFICATION	1.2902830161719484E-4	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9997483295586251	WITHOUT_CLASSIFICATION	2.516704413748615E-4	IMPLEMENTATION
astore 5 store exception	WITHOUT_CLASSIFICATION	0.9999210881087301	WITHOUT_CLASSIFICATION	7.891189126986232E-5	IMPLEMENTATION
new bulkaccessorexception	WITHOUT_CLASSIFICATION	0.9998380669329419	WITHOUT_CLASSIFICATION	1.619330670581586E-4	IMPLEMENTATION
aload 5 load exception	WITHOUT_CLASSIFICATION	0.9999278755877888	WITHOUT_CLASSIFICATION	7.212441221111439E-5	IMPLEMENTATION
iload_3 i	WITHOUT_CLASSIFICATION	0.9988820042689838	WITHOUT_CLASSIFICATION	0.001117995731016222	IMPLEMENTATION
invokespecial bulkaccessorexception.<init>	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
athrow	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
warning classfile only	WITHOUT_CLASSIFICATION	0.9998911444276823	WITHOUT_CLASSIFICATION	1.0885557231766934E-4	IMPLEMENTATION
swallow	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
local variable | this |	WITHOUT_CLASSIFICATION	0.9994018116346871	WITHOUT_CLASSIFICATION	5.981883653129494E-4	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9995426863244101	WITHOUT_CLASSIFICATION	4.5731367558992807E-4	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9995426863244101	WITHOUT_CLASSIFICATION	4.5731367558992807E-4	IMPLEMENTATION
getfield get field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9999709832034585	WITHOUT_CLASSIFICATION	2.9016796541440945E-5	IMPLEMENTATION
areturn return the value of the field	WITHOUT_CLASSIFICATION	0.9999900813055098	WITHOUT_CLASSIFICATION	9.918694490185948E-6	IMPLEMENTATION
local variables | this | callback |	WITHOUT_CLASSIFICATION	0.9994763722295432	WITHOUT_CLASSIFICATION	5.236277704568002E-4	IMPLEMENTATION
aload_1 load callback	WITHOUT_CLASSIFICATION	0.9997801814534696	WITHOUT_CLASSIFICATION	2.1981854653043271E-4	IMPLEMENTATION
putfield put field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9998751221331819	WITHOUT_CLASSIFICATION	1.2487786681810253E-4	IMPLEMENTATION
case of non-static field	WITHOUT_CLASSIFICATION	0.9999493521537844	WITHOUT_CLASSIFICATION	5.064784621557401E-5	IMPLEMENTATION
getfield get each field	WITHOUT_CLASSIFICATION	0.9999266133606606	WITHOUT_CLASSIFICATION	7.338663933942368E-5	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9997165675520806	WITHOUT_CLASSIFICATION	2.834324479194283E-4	IMPLEMENTATION
ifnonnull	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.9999726009031439	WITHOUT_CLASSIFICATION	2.7399096856198093E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.9999726009031439	WITHOUT_CLASSIFICATION	2.7399096856198093E-5	IMPLEMENTATION
store_1 each type	WITHOUT_CLASSIFICATION	0.9999058423376953	WITHOUT_CLASSIFICATION	9.415766230472235E-5	IMPLEMENTATION
ldc name of the field	WITHOUT_CLASSIFICATION	0.9999202273520902	WITHOUT_CLASSIFICATION	7.977264790982386E-5	IMPLEMENTATION
load_1 each type	WITHOUT_CLASSIFICATION	0.9999058423376953	WITHOUT_CLASSIFICATION	9.415766230472235E-5	IMPLEMENTATION
invokeinterface invoke callback.read() each type	WITHOUT_CLASSIFICATION	0.9999159166938318	WITHOUT_CLASSIFICATION	8.408330616811305E-5	IMPLEMENTATION
int	WITHOUT_CLASSIFICATION	0.9996547548901131	WITHOUT_CLASSIFICATION	3.452451098869313E-4	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9998709716983827	WITHOUT_CLASSIFICATION	1.2902830161719484E-4	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
putfield	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9998709716983827	WITHOUT_CLASSIFICATION	1.2902830161719484E-4	IMPLEMENTATION
ldc field name	WITHOUT_CLASSIFICATION	0.9996735076460778	WITHOUT_CLASSIFICATION	3.26492353922205E-4	IMPLEMENTATION
getfield old value of the field	WITHOUT_CLASSIFICATION	0.9999787032079946	WITHOUT_CLASSIFICATION	2.1296792005366022E-5	IMPLEMENTATION
invokeinterface callback.write(..)	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999415603603997	WITHOUT_CLASSIFICATION	5.843963960014101E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999415603603997	WITHOUT_CLASSIFICATION	5.843963960014101E-5	IMPLEMENTATION
not array	WITHOUT_CLASSIFICATION	0.9929626571813259	WITHOUT_CLASSIFICATION	0.007037342818674092	IMPLEMENTATION
array of reference type	WITHOUT_CLASSIFICATION	0.9999769724978266	WITHOUT_CLASSIFICATION	2.3027502173481036E-5	IMPLEMENTATION
boolean	WITHOUT_CLASSIFICATION	0.9996778186657157	WITHOUT_CLASSIFICATION	3.221813342844096E-4	IMPLEMENTATION
byte	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
char	WITHOUT_CLASSIFICATION	0.9997802370274905	WITHOUT_CLASSIFICATION	2.1976297250953113E-4	IMPLEMENTATION
short	WITHOUT_CLASSIFICATION	0.9995593923603321	WITHOUT_CLASSIFICATION	4.4060763966778606E-4	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.999982675309194	WITHOUT_CLASSIFICATION	1.7324690805999327E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9995568962994368	WITHOUT_CLASSIFICATION	4.431037005632005E-4	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9995568962994368	WITHOUT_CLASSIFICATION	4.431037005632005E-4	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9996103860530045	WITHOUT_CLASSIFICATION	3.896139469956226E-4	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9996103860530045	WITHOUT_CLASSIFICATION	3.896139469956226E-4	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9997840551979829	WITHOUT_CLASSIFICATION	2.1594480201711947E-4	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9997840551979829	WITHOUT_CLASSIFICATION	2.1594480201711947E-4	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999210649642355	WITHOUT_CLASSIFICATION	7.893503576448765E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999210649642355	WITHOUT_CLASSIFICATION	7.893503576448765E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999415603603997	WITHOUT_CLASSIFICATION	5.843963960014101E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.999982675309194	WITHOUT_CLASSIFICATION	1.7324690805999327E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9995568962994368	WITHOUT_CLASSIFICATION	4.431037005632005E-4	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9995568962994368	WITHOUT_CLASSIFICATION	4.431037005632005E-4	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9996103860530045	WITHOUT_CLASSIFICATION	3.896139469956226E-4	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9997840551979829	WITHOUT_CLASSIFICATION	2.1594480201711947E-4	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9997840551979829	WITHOUT_CLASSIFICATION	2.1594480201711947E-4	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999210649642355	WITHOUT_CLASSIFICATION	7.893503576448765E-5	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.999602271668576	WITHOUT_CLASSIFICATION	3.977283314239913E-4	IMPLEMENTATION
mainly for oscache	WITHOUT_CLASSIFICATION	0.9998811481681733	WITHOUT_CLASSIFICATION	1.1885183182676046E-4	IMPLEMENTATION
decrement the lock	WITHOUT_CLASSIFICATION	0.9998293771733245	WITHOUT_CLASSIFICATION	1.706228266754777E-4	IMPLEMENTATION
create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999590218338036	WITHOUT_CLASSIFICATION	4.097816619648468E-5	IMPLEMENTATION
recache the updated state	WITHOUT_CLASSIFICATION	0.9998741261734838	WITHOUT_CLASSIFICATION	1.2587382651609754E-4	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9995588299272636	WITHOUT_CLASSIFICATION	4.411700727363373E-4	IMPLEMENTATION
null clientlock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999921190486556	WITHOUT_CLASSIFICATION	7.880951344478385E-6	IMPLEMENTATION
we really could refresh the item if it is not a lock but it might be slower return freshtimestamp < txtimestamp	WITHOUT_CLASSIFICATION	0.9999992763959269	WITHOUT_CLASSIFICATION	7.236040730504702E-7	IMPLEMENTATION
by requiring < we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999906592723184	WITHOUT_CLASSIFICATION	9.340727681530549E-6	IMPLEMENTATION
the user provided resulttransformer not the one used with "select new". here to avoid mangling transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.992308190635368	WITHOUT_CLASSIFICATION	0.00769180936463198	IMPLEMENTATION
disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9997436605326339	WITHOUT_CLASSIFICATION	2.5633946736616146E-4	IMPLEMENTATION
disassemble named parameters	WITHOUT_CLASSIFICATION	0.9998410862558035	WITHOUT_CLASSIFICATION	1.5891374419644828E-4	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9995588299272636	WITHOUT_CLASSIFICATION	4.411700727363373E-4	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9995588299272636	WITHOUT_CLASSIFICATION	4.411700727363373E-4	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9995588299272636	WITHOUT_CLASSIFICATION	4.411700727363373E-4	IMPLEMENTATION
this is called from settingsfactory irregardless trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9996962741329439	WITHOUT_CLASSIFICATION	3.037258670560734E-4	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9998607107293551	WITHOUT_CLASSIFICATION	1.3928927064484165E-4	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9998607107293551	WITHOUT_CLASSIFICATION	1.3928927064484165E-4	IMPLEMENTATION
throw new unsupportedoperationexception("can't write to a readonly object")	WITHOUT_CLASSIFICATION	0.9994720699218138	WITHOUT_CLASSIFICATION	5.27930078186207E-4	IMPLEMENTATION
assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999946268461286	WITHOUT_CLASSIFICATION	5.373153871382612E-6	IMPLEMENTATION
persister.setidentifier(result id) before calling interceptor for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999413029537108	WITHOUT_CLASSIFICATION	5.8697046289377405E-5	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9952753894368535	WITHOUT_CLASSIFICATION	0.004724610563146503	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9952753894368535	WITHOUT_CLASSIFICATION	0.004724610563146503	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9998128237353686	WITHOUT_CLASSIFICATION	1.8717626463143967E-4	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9998228153782195	WITHOUT_CLASSIFICATION	1.7718462178053216E-4	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9998228153782195	WITHOUT_CLASSIFICATION	1.7718462178053216E-4	IMPLEMENTATION
classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999148106369148	WITHOUT_CLASSIFICATION	8.518936308524292E-5	IMPLEMENTATION
get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999642461337351	WITHOUT_CLASSIFICATION	3.5753866264817496E-5	IMPLEMENTATION
get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999646490338593	WITHOUT_CLASSIFICATION	3.535096614066434E-5	IMPLEMENTATION
db-objectname	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
mutable	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
where	WITHOUT_CLASSIFICATION	0.9992508700265806	WITHOUT_CLASSIFICATION	7.491299734193091E-4	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9978967873007772	WITHOUT_CLASSIFICATION	0.0021032126992228247	IMPLEMENTATION
polymorphism	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.5359355428947685	WITHOUT_CLASSIFICATION	0.4640644571052314	IMPLEMENTATION
id	WITHOUT_CLASSIFICATION	0.997999944574659	WITHOUT_CLASSIFICATION	0.0020000554253409926	IMPLEMENTATION
version / timestamp	WITHOUT_CLASSIFICATION	0.9996337866221015	WITHOUT_CLASSIFICATION	3.6621337789852557E-4	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9996827139564163	WITHOUT_CLASSIFICATION	3.172860435837628E-4	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.999916145360997	WITHOUT_CLASSIFICATION	8.385463900295839E-5	IMPLEMENTATION
this is either a <version/> tag with no type attribute or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999648260358374	WITHOUT_CLASSIFICATION	3.517396416258165E-5	IMPLEMENTATION
for version properties marked as being generated make sure they are "always" generated aka "insert" is invalid this is dis-allowed by the dtd but just to make sure	WITHOUT_CLASSIFICATION	0.999994492642506	WITHOUT_CLASSIFICATION	5.507357494111894E-6	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9996827139564163	WITHOUT_CLASSIFICATION	3.172860435837628E-4	IMPLEMENTATION
( (column) discrim.getcolumniterator().next() ).settype(type)	WITHOUT_CLASSIFICATION	0.9998009859616133	WITHOUT_CLASSIFICATION	1.9901403838664306E-4	IMPLEMENTATION
go ahead and set the lazy here since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9998670564447683	WITHOUT_CLASSIFICATION	1.3294355523177877E-4	IMPLEMENTATION
dynamic update	WITHOUT_CLASSIFICATION	0.9999251345333968	WITHOUT_CLASSIFICATION	7.486546660309305E-5	IMPLEMENTATION
import	WITHOUT_CLASSIFICATION	0.9989976898322496	WITHOUT_CLASSIFICATION	0.0010023101677503633	IMPLEMENTATION
batch size	WITHOUT_CLASSIFICATION	0.9995851936857761	WITHOUT_CLASSIFICATION	4.148063142238281E-4	IMPLEMENTATION
select before update	WITHOUT_CLASSIFICATION	0.999964953364147	WITHOUT_CLASSIFICATION	3.504663585304429E-5	IMPLEMENTATION
optimistic lock mode	WITHOUT_CLASSIFICATION	0.9997154974288478	WITHOUT_CLASSIFICATION	2.8450257115222416E-4	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9993695956324093	WITHOUT_CLASSIFICATION	6.304043675906003E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9996203667756252	WITHOUT_CLASSIFICATION	3.796332243749135E-4	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999646490338593	WITHOUT_CLASSIFICATION	3.535096614066434E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9996594064444858	WITHOUT_CLASSIFICATION	3.405935555141073E-4	IMPLEMENTATION
joined subclasses	WITHOUT_CLASSIFICATION	0.9997872171057189	WITHOUT_CLASSIFICATION	2.127828942810325E-4	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9997511081662124	WITHOUT_CLASSIFICATION	2.488918337876702E-4	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9978967873007772	WITHOUT_CLASSIFICATION	0.0021032126992228247	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9996203667756252	WITHOUT_CLASSIFICATION	3.796332243749135E-4	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9996594064444858	WITHOUT_CLASSIFICATION	3.405935555141073E-4	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9997511081662124	WITHOUT_CLASSIFICATION	2.488918337876702E-4	IMPLEMENTATION
model.getkey().settype( new type( model.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9997280676241255	WITHOUT_CLASSIFICATION	2.7193237587458776E-4	IMPLEMENTATION
tablename	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
join.getkey().settype( new type( lazz.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9997280676241255	WITHOUT_CLASSIFICATION	2.7193237587458776E-4	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9996594064444858	WITHOUT_CLASSIFICATION	3.405935555141073E-4	IMPLEMENTATION
column(s)	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
column index	WITHOUT_CLASSIFICATION	0.9995071329391488	WITHOUT_CLASSIFICATION	4.928670608511837E-4	IMPLEMENTATION
column unique-key	WITHOUT_CLASSIFICATION	0.9997102507386185	WITHOUT_CLASSIFICATION	2.897492613814973E-4	IMPLEMENTATION
automatically makes a column with the default name if none is specifed by xml	WITHOUT_CLASSIFICATION	0.9999972637656395	WITHOUT_CLASSIFICATION	2.736234360510169E-6	IMPLEMENTATION
for an any	WITHOUT_CLASSIFICATION	0.9999625810274274	WITHOUT_CLASSIFICATION	3.741897257262977E-5	IMPLEMENTATION
insertable simply because that is the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9978489960908398	WITHOUT_CLASSIFICATION	0.00215100390916026	IMPLEMENTATION
the user specifically supplied insert="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999728024532438	WITHOUT_CLASSIFICATION	2.7197546756159198E-5	IMPLEMENTATION
properties generated on update can never be updateable	WITHOUT_CLASSIFICATION	0.9964066859235675	WITHOUT_CLASSIFICATION	0.0035933140764323832	IMPLEMENTATION
updateable only because the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9995540651659757	WITHOUT_CLASSIFICATION	4.459348340243353E-4	IMPLEMENTATION
the user specifically supplied update="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999728024532438	WITHOUT_CLASSIFICATION	2.7197546756159198E-5	IMPLEMENTATION
rolename	WITHOUT_CLASSIFICATION	0.9996101837500961	WITHOUT_CLASSIFICATION	3.89816249903891E-4	IMPLEMENTATION
fetch strategy	WITHOUT_CLASSIFICATION	0.999655365919223	WITHOUT_CLASSIFICATION	3.4463408077701276E-4	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9996644787597244	WITHOUT_CLASSIFICATION	3.3552124027555697E-4	IMPLEMENTATION
tablename = mappings.getnamingstrategy().propertytotablename( classname path )	WITHOUT_CLASSIFICATION	0.9991734283382734	WITHOUT_CLASSIFICATION	8.265716617266537E-4	IMPLEMENTATION
sort	WITHOUT_CLASSIFICATION	0.9995648799169522	WITHOUT_CLASSIFICATION	4.351200830478957E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9996203667756252	WITHOUT_CLASSIFICATION	3.796332243749135E-4	IMPLEMENTATION
unsorted natural comparator.class.name	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
orphan delete (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9998047605028386	WITHOUT_CLASSIFICATION	1.9523949716133613E-4	IMPLEMENTATION
set up second pass	WITHOUT_CLASSIFICATION	0.9997329748757077	WITHOUT_CLASSIFICATION	2.6702512429235587E-4	IMPLEMENTATION
an "embedded" component (composite ids and unique) note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9892693501266292	WITHOUT_CLASSIFICATION	0.010730649873370855	IMPLEMENTATION
a nested composite element	WITHOUT_CLASSIFICATION	0.9995009174317703	WITHOUT_CLASSIFICATION	4.990825682296944E-4	IMPLEMENTATION
for an any we will have to use reflection	WITHOUT_CLASSIFICATION	0.9997577055764677	WITHOUT_CLASSIFICATION	2.4229442353238106E-4	IMPLEMENTATION
note special case one-to-one constrained=false cannot be proxied so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999918074748797	WITHOUT_CLASSIFICATION	8.192525120352523E-6	IMPLEMENTATION
use old (hb 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999586492410903	WITHOUT_CLASSIFICATION	4.1350758909576785E-5	IMPLEMENTATION
lazy = !join	WITHOUT_CLASSIFICATION	0.9992825523662554	WITHOUT_CLASSIFICATION	7.174476337445293E-4	IMPLEMENTATION
generator	WITHOUT_CLASSIFICATION	0.9995649275349875	WITHOUT_CLASSIFICATION	4.3507246501252284E-4	IMPLEMENTATION
id unsaved-value	WITHOUT_CLASSIFICATION	0.9985674083767072	WITHOUT_CLASSIFICATION	0.0014325916232928143	IMPLEMENTATION
version unsaved-value	WITHOUT_CLASSIFICATION	0.9991934528097823	WITHOUT_CLASSIFICATION	8.065471902177883E-4	IMPLEMENTATION
not necessarily a unique property reference	WITHOUT_CLASSIFICATION	0.9967653345002656	WITHOUT_CLASSIFICATION	0.003234665499734421	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9998009859616133	WITHOUT_CLASSIFICATION	1.9901403838664306E-4	IMPLEMENTATION
contained elements	WITHOUT_CLASSIFICATION	0.999894082575901	WITHOUT_CLASSIFICATION	1.059174240990446E-4	IMPLEMENTATION
for non-inverse one-to-many with a not-null fk add a backref!	WITHOUT_CLASSIFICATION	0.9998885121065265	WITHOUT_CLASSIFICATION	1.1148789347347206E-4	IMPLEMENTATION
bind the where	WITHOUT_CLASSIFICATION	0.9996998825804166	WITHOUT_CLASSIFICATION	3.0011741958335333E-4	IMPLEMENTATION
bind the order-by	WITHOUT_CLASSIFICATION	0.9998224375054732	WITHOUT_CLASSIFICATION	1.775624945267888E-4	IMPLEMENTATION
bind the filters	WITHOUT_CLASSIFICATION	0.9998224375054732	WITHOUT_CLASSIFICATION	1.775624945267888E-4	IMPLEMENTATION
overriding inherited meta attribute. hbx-621 & hbx-793	WITHOUT_CLASSIFICATION	0.9997463832851298	WITHOUT_CLASSIFICATION	2.536167148702557E-4	IMPLEMENTATION
first iterate over all elements capable of defining an extends attribute collecting all found extends references if they cannot be resolved against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999990074298472	WITHOUT_CLASSIFICATION	9.925701528241097E-7	IMPLEMENTATION
mappings might contain either the "raw" extends name (in the case of an entity-name mapping) or a fqn (in the case of a pojo mapping).	WITHOUT_CLASSIFICATION	0.999962670068958	WITHOUT_CLASSIFICATION	3.732993104207221E-5	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9962589668796866	WITHOUT_CLASSIFICATION	0.003741033120313357	IMPLEMENTATION
sessionfactory name	WITHOUT_CLASSIFICATION	0.999598707778713	WITHOUT_CLASSIFICATION	4.0129222128712917E-4	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9889743889901718	WITHOUT_CLASSIFICATION	0.01102561100982828	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9889743889901718	WITHOUT_CLASSIFICATION	0.01102561100982828	IMPLEMENTATION
interrogate jdbc metadata	WITHOUT_CLASSIFICATION	0.999716907959248	WITHOUT_CLASSIFICATION	2.830920407521547E-4	IMPLEMENTATION
user supplied jdbc connections	WITHOUT_CLASSIFICATION	0.9999179812570302	WITHOUT_CLASSIFICATION	8.201874296979113E-5	IMPLEMENTATION
use dialect default properties	WITHOUT_CLASSIFICATION	0.9999280889514047	WITHOUT_CLASSIFICATION	7.19110485952702E-5	IMPLEMENTATION
transaction settings	WITHOUT_CLASSIFICATION	0.999895419800068	WITHOUT_CLASSIFICATION	1.0458019993197975E-4	IMPLEMENTATION
sql generation settings	WITHOUT_CLASSIFICATION	0.9999286932688227	WITHOUT_CLASSIFICATION	7.130673117719531E-5	IMPLEMENTATION
query parser settings	WITHOUT_CLASSIFICATION	0.9999115799797869	WITHOUT_CLASSIFICATION	8.842002021317658E-5	IMPLEMENTATION
second-level / query cache	WITHOUT_CLASSIFICATION	0.9998196579722358	WITHOUT_CLASSIFICATION	1.8034202776418475E-4	IMPLEMENTATION
the cache provider is needed when we either have second-level cache enabled or query cache enabled. note that usesecondlevelcache is enabled by default	WITHOUT_CLASSIFICATION	0.7578664616112225	WITHOUT_CLASSIFICATION	0.24213353838877755	IMPLEMENTATION
sql exception converter	WITHOUT_CLASSIFICATION	0.9998528128829176	WITHOUT_CLASSIFICATION	1.4718711708237793E-4	IMPLEMENTATION
statistics and logging	WITHOUT_CLASSIFICATION	0.9997965680799743	WITHOUT_CLASSIFICATION	2.0343192002567696E-4	IMPLEMENTATION
settings.setshowsqlenabled(showsql)	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
settings.setformatsqlenabled(formatsql)	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
schema export	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
string provider = properties.getproperty( environment.bytecode_provider ) log.info( "bytecode provider name " + provider ) bytecodeprovider bytecodeprovider = buildbytecodeprovider( provider ) settings.setbytecodeprovider( bytecodeprovider )	WITHOUT_CLASSIFICATION	0.999324508974561	WITHOUT_CLASSIFICATION	6.754910254390749E-4	IMPLEMENTATION
legacy behavior apply the bridge	WITHOUT_CLASSIFICATION	0.9998611193927007	WITHOUT_CLASSIFICATION	1.3888060729922602E-4	IMPLEMENTATION
maybe a concrete sqlpropertyresult type but map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9993933563427524	WITHOUT_CLASSIFICATION	6.066436572475827E-4	IMPLEMENTATION
if dotted and not load-collection nor return-join regular property	WITHOUT_CLASSIFICATION	0.9989882102918869	WITHOUT_CLASSIFICATION	0.0010117897081130603	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907 private bytecodeprovider bytecodeprovider	WITHOUT_CLASSIFICATION	0.7892820744656656	WITHOUT_CLASSIFICATION	0.2107179255343344	IMPLEMENTATION
public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999140912313499	WITHOUT_CLASSIFICATION	8.590876865019916E-5	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999928400308539	WITHOUT_CLASSIFICATION	7.159969146207541E-6	IMPLEMENTATION
package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995599141460008	WITHOUT_CLASSIFICATION	4.40085853999286E-4	IMPLEMENTATION
void setshowsqlenabled(boolean b) { showsql = b } void setformatsqlenabled(boolean b) { formatsql = b }	WITHOUT_CLASSIFICATION	0.999777275915579	WITHOUT_CLASSIFICATION	2.2272408442105531E-4	IMPLEMENTATION
public bytecodeprovider getbytecodeprovider() { return bytecodeprovider } void setbytecodeprovider(bytecodeprovider bytecodeprovider) { this.bytecodeprovider = bytecodeprovider }	WITHOUT_CLASSIFICATION	0.9999860940921043	WITHOUT_CLASSIFICATION	1.3905907895772008E-5	IMPLEMENTATION
using local since the inheritedmetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9902299192235284	WITHOUT_CLASSIFICATION	0.009770080776471497	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907	WITHOUT_CLASSIFICATION	0.7892820744656656	WITHOUT_CLASSIFICATION	0.2107179255343344	IMPLEMENTATION
protected list extendsqueue	WITHOUT_CLASSIFICATION	0.9998753430944176	WITHOUT_CLASSIFICATION	1.2465690558245078E-4	IMPLEMENTATION
extendsqueue = new arraylist()	WITHOUT_CLASSIFICATION	0.9996568064696665	WITHOUT_CLASSIFICATION	3.431935303334305E-4	IMPLEMENTATION
componenttuplizerfactory = new componenttuplizerfactory()	WITHOUT_CLASSIFICATION	0.9996528962607433	WITHOUT_CLASSIFICATION	3.471037392566604E-4	IMPLEMENTATION
if doc is null then for whatever reason the cached file cannot be used	WITHOUT_CLASSIFICATION	0.9999972464631524	WITHOUT_CLASSIFICATION	2.7535368476968806E-6	IMPLEMENTATION
drop them in reverse order in case db needs it done that way	WITHOUT_CLASSIFICATION	0.9997036979068313	WITHOUT_CLASSIFICATION	2.963020931686296E-4	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999928400308539	WITHOUT_CLASSIFICATION	7.159969146207541E-6	IMPLEMENTATION
this method may be called many times!!	WITHOUT_CLASSIFICATION	0.9983017325679885	WITHOUT_CLASSIFICATION	0.0016982674320114375	IMPLEMENTATION
iterator iterator = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9987336666176735	WITHOUT_CLASSIFICATION	0.0012663333823265542	IMPLEMENTATION
iterator iter = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9987336666176735	WITHOUT_CLASSIFICATION	0.0012663333823265542	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9991492100153447	WITHOUT_CLASSIFICATION	8.507899846553338E-4	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9991492100153447	WITHOUT_CLASSIFICATION	8.507899846553338E-4	IMPLEMENTATION
settings.setcomponenttuplizerfactory( this.getcomponenttuplizerfactory() )	WITHOUT_CLASSIFICATION	0.9995246458529513	WITHOUT_CLASSIFICATION	4.7535414704869754E-4	IMPLEMENTATION
private final list extendsqueue	WITHOUT_CLASSIFICATION	0.9999007345157741	WITHOUT_CLASSIFICATION	9.926548422586083E-5	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9996856106781469	WITHOUT_CLASSIFICATION	3.1438932185311956E-4	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9996856106781469	WITHOUT_CLASSIFICATION	3.1438932185311956E-4	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9962589668796866	WITHOUT_CLASSIFICATION	0.003741033120313357	IMPLEMENTATION
set use_reflection_optimizer to false to fix hhh-227	WITHOUT_CLASSIFICATION	0.995912875899008	WITHOUT_CLASSIFICATION	0.004087124100992021	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9996533071818976	WITHOUT_CLASSIFICATION	3.466928181023756E-4	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9996309737382154	WITHOUT_CLASSIFICATION	3.6902626178461314E-4	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9912875218643532	WITHOUT_CLASSIFICATION	0.008712478135646757	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9996533071818976	WITHOUT_CLASSIFICATION	3.466928181023756E-4	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9996309737382154	WITHOUT_CLASSIFICATION	3.6902626178461314E-4	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.698085446658877	WITHOUT_CLASSIFICATION	0.3019145533411231	IMPLEMENTATION
maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.999998847021274	WITHOUT_CLASSIFICATION	1.1529787259959032E-6	IMPLEMENTATION
the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9996317911294073	WITHOUT_CLASSIFICATION	3.682088705926702E-4	IMPLEMENTATION
the element has changed	WITHOUT_CLASSIFICATION	0.9999942099068726	WITHOUT_CLASSIFICATION	5.790093127438245E-6	IMPLEMENTATION
careful these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9931749142290274	WITHOUT_CLASSIFICATION	0.006825085770972701	IMPLEMENTATION
needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.8151374406138284	WITHOUT_CLASSIFICATION	0.18486255938617166	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9983158116588055	WITHOUT_CLASSIFICATION	0.0016841883411945653	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9983158116588055	WITHOUT_CLASSIFICATION	0.0016841883411945653	IMPLEMENTATION
do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9987459437805151	WITHOUT_CLASSIFICATION	0.001254056219484879	IMPLEMENTATION
short-circuit(s) no new elements the old list contains only orphans no old elements so no orphans neither	WITHOUT_CLASSIFICATION	0.9999992082069075	WITHOUT_CLASSIFICATION	7.917930926236769E-7	IMPLEMENTATION
create the collection holding the orphans	WITHOUT_CLASSIFICATION	0.9999747740267224	WITHOUT_CLASSIFICATION	2.5225973277602297E-5	IMPLEMENTATION
collect entityidentifier(s) of the current elements - add them into a hashset for fast access	WITHOUT_CLASSIFICATION	0.9999840826117156	WITHOUT_CLASSIFICATION	1.5917388284375125E-5	IMPLEMENTATION
iterate over the old list	WITHOUT_CLASSIFICATION	0.9999790542231297	WITHOUT_CLASSIFICATION	2.0945776870325875E-5	IMPLEMENTATION
(array==null) ? templist.size()	WITHOUT_CLASSIFICATION	0.9995307790520103	WITHOUT_CLASSIFICATION	4.692209479897672E-4	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9912875218643532	WITHOUT_CLASSIFICATION	0.008712478135646757	IMPLEMENTATION
(array==null) ? templist.get(i)	WITHOUT_CLASSIFICATION	0.9995307790520103	WITHOUT_CLASSIFICATION	4.692209479897672E-4	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9998778346148729	WITHOUT_CLASSIFICATION	1.2216538512715823E-4	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9998778346148729	WITHOUT_CLASSIFICATION	1.2216538512715823E-4	IMPLEMENTATION
amazingly these two will work because abstractcollection uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9991097982421759	WITHOUT_CLASSIFICATION	8.902017578240384E-4	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.698085446658877	WITHOUT_CLASSIFICATION	0.3019145533411231	IMPLEMENTATION
finally what it's all about	WITHOUT_CLASSIFICATION	0.9895274075935233	WITHOUT_CLASSIFICATION	0.010472592406476638	IMPLEMENTATION
note that if we load this collection from a cartesian product the multiplicity would be broken so use an idbag instead	WITHOUT_CLASSIFICATION	0.999992288927289	WITHOUT_CLASSIFICATION	7.711072710998809E-6	IMPLEMENTATION
anyway here we implement <set> semantics for a <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9866626039301785	WITHOUT_CLASSIFICATION	0.013337396069821471	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999714059157876	WITHOUT_CLASSIFICATION	2.8594084212446733E-5	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9955481960269192	WITHOUT_CLASSIFICATION	0.004451803973080724	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.698085446658877	WITHOUT_CLASSIFICATION	0.3019145533411231	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999714059157876	WITHOUT_CLASSIFICATION	2.8594084212446733E-5	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9955481960269192	WITHOUT_CLASSIFICATION	0.004451803973080724	IMPLEMENTATION
public boolean equals(object other) {read()return bag.equals(other)}public int hashcode(object other) {read()return bag.hashcode()}	WITHOUT_CLASSIFICATION	0.9999727657765298	WITHOUT_CLASSIFICATION	2.7234223470195413E-5	IMPLEMENTATION
list operations	WITHOUT_CLASSIFICATION	0.9997974833649134	WITHOUT_CLASSIFICATION	2.0251663508666107E-4	IMPLEMENTATION
pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999806507900145	WITHOUT_CLASSIFICATION	1.9349209985516653E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.698085446658877	WITHOUT_CLASSIFICATION	0.3019145533411231	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.698085446658877	WITHOUT_CLASSIFICATION	0.3019145533411231	IMPLEMENTATION
from map	WITHOUT_CLASSIFICATION	0.9997929746904429	WITHOUT_CLASSIFICATION	2.0702530955714842E-4	IMPLEMENTATION
from sortedmap	WITHOUT_CLASSIFICATION	0.9998837296800431	WITHOUT_CLASSIFICATION	1.1627031995695687E-4	IMPLEMENTATION
inject the data	WITHOUT_CLASSIFICATION	0.9996882569159526	WITHOUT_CLASSIFICATION	3.11743084047404E-4	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998699690746401	WITHOUT_CLASSIFICATION	1.300309253599657E-4	IMPLEMENTATION
default pool size 20	WITHOUT_CLASSIFICATION	0.9999638220618254	WITHOUT_CLASSIFICATION	3.617793817461491E-5	IMPLEMENTATION
trying via forname() first to be as close to drivermanager's semantics	WITHOUT_CLASSIFICATION	0.9996169326919118	WITHOUT_CLASSIFICATION	3.8306730808830016E-4	IMPLEMENTATION
if debug level is enabled then log the password otherwise mask it	WITHOUT_CLASSIFICATION	0.9998103171694617	WITHOUT_CLASSIFICATION	1.8968283053822307E-4	IMPLEMENTATION
register a cleanup synch	WITHOUT_CLASSIFICATION	0.9993438845216295	WITHOUT_CLASSIFICATION	6.561154783705495E-4	IMPLEMENTATION
wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999871533934452	WITHOUT_CLASSIFICATION	1.2846606554744967E-5	IMPLEMENTATION
then bind it	WITHOUT_CLASSIFICATION	0.9998204957907998	WITHOUT_CLASSIFICATION	1.7950420920015254E-4	IMPLEMENTATION
try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9988515786186786	WITHOUT_CLASSIFICATION	0.001148421381321441	IMPLEMENTATION
allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9789215343771798	WITHOUT_CLASSIFICATION	0.021078465622820227	IMPLEMENTATION
limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999921462117435	WITHOUT_CLASSIFICATION	7.853788256490533E-6	IMPLEMENTATION
allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9960102767875542	WITHOUT_CLASSIFICATION	0.003989723212445807	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
we could register the session against the transaction even though it is not started but we'd have no guarentee of ever getting the map entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999974558313295	WITHOUT_CLASSIFICATION	2.5441686705224662E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998699690746401	WITHOUT_CLASSIFICATION	1.300309253599657E-4	IMPLEMENTATION
private string propertyname	WITHOUT_CLASSIFICATION	0.9999536370687144	WITHOUT_CLASSIFICATION	4.636293128548869E-5	IMPLEMENTATION
public propertyprojection project() {return projections.property(getpropertyname())}	WITHOUT_CLASSIFICATION	0.9999518754175317	WITHOUT_CLASSIFICATION	4.812458246829022E-5	IMPLEMENTATION
string[] fk = stringhelper.qualify( "collection_" cp.getkeycolumnnames() )	WITHOUT_CLASSIFICATION	0.9990097547299485	WITHOUT_CLASSIFICATION	9.902452700515096E-4	IMPLEMENTATION
" collection_ where " +	WITHOUT_CLASSIFICATION	0.9994090183999671	WITHOUT_CLASSIFICATION	5.909816000329537E-4	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998699690746401	WITHOUT_CLASSIFICATION	1.300309253599657E-4	IMPLEMENTATION
the following two lines were added to ensure that this.params is not null which can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.7993274208330226	WITHOUT_CLASSIFICATION	0.20067257916697742	IMPLEMENTATION
with two-deep subqueries the same alias would get generated for both using the old method (criteriaquery.generatesqlalias()) so that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999988440459858	WITHOUT_CLASSIFICATION	1.1559540141664715E-6	IMPLEMENTATION
implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9833447833727449	WITHOUT_CLASSIFICATION	0.01665521662725508	IMPLEMENTATION
pull off the last " "	WITHOUT_CLASSIFICATION	0.9999410403572471	WITHOUT_CLASSIFICATION	5.895964275297865E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999171896971394	WITHOUT_CLASSIFICATION	8.281030286064791E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource)	WITHOUT_CLASSIFICATION	0.9951475239898097	WITHOUT_CLASSIFICATION	0.004852476010190391	IMPLEMENTATION
not_supported_should_use_jdbc3_preparedstatement.getgeneratedkeys_method	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9985027423502234	WITHOUT_CLASSIFICATION	0.0014972576497766226	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
oracle did add support for ansi case statements in 9i	WITHOUT_CLASSIFICATION	0.999931646640273	WITHOUT_CLASSIFICATION	6.83533597270019E-5	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9997846392741839	WITHOUT_CLASSIFICATION	2.1536072581610893E-4	IMPLEMENTATION
informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999526296706396	WITHOUT_CLASSIFICATION	4.737032936046333E-5	IMPLEMENTATION
or byte or text? or money	WITHOUT_CLASSIFICATION	0.9997505266962216	WITHOUT_CLASSIFICATION	2.494733037785223E-4	IMPLEMENTATION
strip table-owner because informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999354115862106	WITHOUT_CLASSIFICATION	6.458841378941836E-5	IMPLEMENTATION
build the map of standard ansi sql aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999700205033297	WITHOUT_CLASSIFICATION	2.9979496670323093E-5	IMPLEMENTATION
pre h3.2 behavior super.getreturntype(ct m)	WITHOUT_CLASSIFICATION	0.9997231619349016	WITHOUT_CLASSIFICATION	2.7683806509843593E-4	IMPLEMENTATION
finally use the sqltype if == on hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9806763540246475	WITHOUT_CLASSIFICATION	0.0193236459753525	IMPLEMENTATION
because numeric can be anything	WITHOUT_CLASSIFICATION	0.9993345527905877	WITHOUT_CLASSIFICATION	6.654472094123168E-4	IMPLEMENTATION
constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993851310350939	WITHOUT_CLASSIFICATION	6.148689649062788E-4	IMPLEMENTATION
standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9998206018747287	WITHOUT_CLASSIFICATION	1.793981252712294E-4	IMPLEMENTATION
map second/minute/hour/day/month/year to ansi extract() override on subclasses	WITHOUT_CLASSIFICATION	0.9975505135224576	WITHOUT_CLASSIFICATION	0.0024494864775424477	IMPLEMENTATION
register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999918217556711	WITHOUT_CLASSIFICATION	8.178244328857756E-6	IMPLEMENTATION
database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988229123574932	WITHOUT_CLASSIFICATION	0.0011770876425068123	IMPLEMENTATION
hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988229123574932	WITHOUT_CLASSIFICATION	0.0011770876425068123	IMPLEMENTATION
keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9968499684419386	WITHOUT_CLASSIFICATION	0.003150031558061338	IMPLEMENTATION
native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996164942482029	WITHOUT_CLASSIFICATION	3.8350575179714E-4	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9967454770417891	WITHOUT_CLASSIFICATION	0.0032545229582110636	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9977840762999458	WITHOUT_CLASSIFICATION	0.002215923700054164	IMPLEMENTATION
guid support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9963001360583618	WITHOUT_CLASSIFICATION	0.0036998639416383782	IMPLEMENTATION
limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9963001360583618	WITHOUT_CLASSIFICATION	0.0036998639416383782	IMPLEMENTATION
by default we report no support	WITHOUT_CLASSIFICATION	0.9983985347690386	WITHOUT_CLASSIFICATION	0.0016014652309613864	IMPLEMENTATION
by default we report no support for nowait lock semantics	WITHOUT_CLASSIFICATION	0.9994277352013017	WITHOUT_CLASSIFICATION	5.72264798698336E-4	IMPLEMENTATION
table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9971974520814154	WITHOUT_CLASSIFICATION	0.002802547918584545	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9973155646582497	WITHOUT_CLASSIFICATION	0.002684435341750398	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9963507745451319	WITHOUT_CLASSIFICATION	0.003649225454868077	IMPLEMENTATION
current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.995341455353046	WITHOUT_CLASSIFICATION	0.004658544646953981	IMPLEMENTATION
sqlexception support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9963001360583618	WITHOUT_CLASSIFICATION	0.0036998639416383782	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9963001360583618	WITHOUT_CLASSIFICATION	0.0036998639416383782	IMPLEMENTATION
identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9950393246034099	WITHOUT_CLASSIFICATION	0.0049606753965900025	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9963001360583618	WITHOUT_CLASSIFICATION	0.0036998639416383782	IMPLEMENTATION
grrr for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999704897303974	WITHOUT_CLASSIFICATION	2.951026960260088E-5	IMPLEMENTATION
informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
return false here as most databases do not properly support this construct	WITHOUT_CLASSIFICATION	0.8572204128806559	WITHOUT_CLASSIFICATION	0.14277958711934405	IMPLEMENTATION
mckoi has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999844086288037	WITHOUT_CLASSIFICATION	1.5591371196278796E-5	IMPLEMENTATION
oracle8 and previous define only a "date" type which is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999457191261697	WITHOUT_CLASSIFICATION	5.428087383030313E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9997028681702071	WITHOUT_CLASSIFICATION	2.971318297929071E-4	IMPLEMENTATION
" cascade"	WITHOUT_CLASSIFICATION	0.999392512352038	WITHOUT_CLASSIFICATION	6.074876479620351E-4	IMPLEMENTATION
trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999390412502458	WITHOUT_CLASSIFICATION	6.0958749754313784E-5	IMPLEMENTATION
public boolean droptemporarytableafteruse() {we have to because postgres sets current txto rollback only after a failed create tablereturn true}	WITHOUT_CLASSIFICATION	0.9999862450941502	WITHOUT_CLASSIFICATION	1.3754905849762135E-5	IMPLEMENTATION
check violation	WITHOUT_CLASSIFICATION	0.9984934751195137	WITHOUT_CLASSIFICATION	0.0015065248804863273	IMPLEMENTATION
unique violation	WITHOUT_CLASSIFICATION	0.9995198805048086	WITHOUT_CLASSIFICATION	4.8011949519142946E-4	IMPLEMENTATION
foreign key violation	WITHOUT_CLASSIFICATION	0.9998410681600333	WITHOUT_CLASSIFICATION	1.5893183996685078E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
not null violation	WITHOUT_CLASSIFICATION	0.995276337225848	WITHOUT_CLASSIFICATION	0.0047236627741520385	IMPLEMENTATION
all other	WITHOUT_CLASSIFICATION	0.9972963074853961	WITHOUT_CLASSIFICATION	0.0027036925146039885	IMPLEMENTATION
register the type of the out param - postgresql uses types.other	WITHOUT_CLASSIFICATION	0.9999649932209768	WITHOUT_CLASSIFICATION	3.5006779023165E-5	IMPLEMENTATION
seems to not really public boolean supportsrowvalueconstructorsyntax() { return true }	WITHOUT_CLASSIFICATION	0.9999711087406324	WITHOUT_CLASSIFICATION	2.8891259367568477E-5	IMPLEMENTATION
seems to have spotty lob suppport	WITHOUT_CLASSIFICATION	0.9997326789245177	WITHOUT_CLASSIFICATION	2.673210754823597E-4	IMPLEMENTATION
hhh-2300	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
ignore (probably h2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9997498644319349	WITHOUT_CLASSIFICATION	2.50135568065118E-4	IMPLEMENTATION
numeric functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
string functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998754880212174	WITHOUT_CLASSIFICATION	1.2451197878270482E-4	IMPLEMENTATION
time and date functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996188227593925	WITHOUT_CLASSIFICATION	3.811772406074704E-4	IMPLEMENTATION
system functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999184656976617	WITHOUT_CLASSIFICATION	8.153430233830345E-4	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9961465954906544	WITHOUT_CLASSIFICATION	0.003853404509345602	IMPLEMENTATION
23000 check constraint violation {0} 23001 unique index or primary key violation {0}	WITHOUT_CLASSIFICATION	0.9990827430872916	WITHOUT_CLASSIFICATION	9.172569127084179E-4	IMPLEMENTATION
display the dialect version.	WITHOUT_CLASSIFICATION	0.9998034687702637	WITHOUT_CLASSIFICATION	1.9653122973631285E-4	IMPLEMENTATION
the rdms concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999602821114993	WITHOUT_CLASSIFICATION	3.971788850077007E-5	IMPLEMENTATION
dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990831087905725	WITHOUT_CLASSIFICATION	9.168912094275717E-4	IMPLEMENTATION
original dialect.java returns " for update"	WITHOUT_CLASSIFICATION	0.9995317830065124	WITHOUT_CLASSIFICATION	4.682169934876471E-4	IMPLEMENTATION
verify the state of this new method in hibernate 3.0 dialect.java	WITHOUT_CLASSIFICATION	0.9999930860550712	WITHOUT_CLASSIFICATION	6.913944928739648E-6	IMPLEMENTATION
origial dialect.java returns true	WITHOUT_CLASSIFICATION	0.9997297657455029	WITHOUT_CLASSIFICATION	2.7023425449713306E-4	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9996911755680536	WITHOUT_CLASSIFICATION	3.088244319463318E-4	IMPLEMENTATION
sequence methods - start. the rdms dialect needs these	WITHOUT_CLASSIFICATION	0.9994658495732167	WITHOUT_CLASSIFICATION	5.341504267832655E-4	IMPLEMENTATION
methods to make it possible to use the native id generator	WITHOUT_CLASSIFICATION	0.9732863482416089	WITHOUT_CLASSIFICATION	0.026713651758391188	IMPLEMENTATION
the where clause was added to eliminate this statement from brute force searches.	WITHOUT_CLASSIFICATION	0.9999568388508313	WITHOUT_CLASSIFICATION	4.31611491686192E-5	IMPLEMENTATION
sequence methods - end	WITHOUT_CLASSIFICATION	0.9998202397831347	WITHOUT_CLASSIFICATION	1.797602168652777E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9997028681702071	WITHOUT_CLASSIFICATION	2.971318297929071E-4	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9987806501323685	WITHOUT_CLASSIFICATION	0.0012193498676315781	IMPLEMENTATION
used with drop table to delete all records in the table.	WITHOUT_CLASSIFICATION	0.999989039791607	WITHOUT_CLASSIFICATION	1.0960208393000574E-5	IMPLEMENTATION
rdms supports the union all clause.	WITHOUT_CLASSIFICATION	0.9997346573264559	WITHOUT_CLASSIFICATION	2.6534267354409437E-4	IMPLEMENTATION
rdms has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999844086288037	WITHOUT_CLASSIFICATION	1.5591371196278796E-5	IMPLEMENTATION
multi-param dialect functions	WITHOUT_CLASSIFICATION	0.999716907959248	WITHOUT_CLASSIFICATION	2.830920407521547E-4	IMPLEMENTATION
function templates	WITHOUT_CLASSIFICATION	0.9994900491334127	WITHOUT_CLASSIFICATION	5.099508665873129E-4	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9961465954906544	WITHOUT_CLASSIFICATION	0.003853404509345602	IMPLEMENTATION
this assumes schema support which is present in 1.8.0 and later	WITHOUT_CLASSIFICATION	0.9984164374971829	WITHOUT_CLASSIFICATION	0.001583562502817011	IMPLEMENTATION
hsqldb only supports read_uncommitted transaction isolation	WITHOUT_CLASSIFICATION	0.9998343428861474	WITHOUT_CLASSIFICATION	1.6565711385266746E-4	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9998754880212174	WITHOUT_CLASSIFICATION	1.2451197878270482E-4	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9997200055900662	WITHOUT_CLASSIFICATION	2.799944099338047E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9942189338006896	WITHOUT_CLASSIFICATION	0.005781066199310479	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999883969530194	WITHOUT_CLASSIFICATION	1.1603046980430773E-5	IMPLEMENTATION
timesten has no blob/clob support but these types may be suitable for some applications. the length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9996372175623802	WITHOUT_CLASSIFICATION	3.6278243761975963E-4	IMPLEMENTATION
new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999868127434002	WITHOUT_CLASSIFICATION	1.3187256599805322E-5	IMPLEMENTATION
public boolean supportsforupdatenowait() {return false}	WITHOUT_CLASSIFICATION	0.9999650868614445	WITHOUT_CLASSIFICATION	3.491313855549087E-5	IMPLEMENTATION
timesten has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999844086288037	WITHOUT_CLASSIFICATION	1.5591371196278796E-5	IMPLEMENTATION
iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9966457061556067	WITHOUT_CLASSIFICATION	0.003354293844393323	IMPLEMENTATION
add new ordered map	WITHOUT_CLASSIFICATION	0.9998006013834927	WITHOUT_CLASSIFICATION	1.993986165073371E-4	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" )	WITHOUT_CLASSIFICATION	0.9995246458529513	WITHOUT_CLASSIFICATION	4.7535414704869754E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999289366539219	WITHOUT_CLASSIFICATION	7.106334607800319E-5	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9998173628625311	WITHOUT_CLASSIFICATION	1.826371374689177E-4	IMPLEMENTATION
return "select current_timestamp from rdb$database"	WITHOUT_CLASSIFICATION	0.999969478401501	WITHOUT_CLASSIFICATION	3.052159849909411E-5	IMPLEMENTATION
registercolumntype data types	WITHOUT_CLASSIFICATION	0.9985470329902676	WITHOUT_CLASSIFICATION	0.0014529670097323882	IMPLEMENTATION
hibernate seems to ignore this type	WITHOUT_CLASSIFICATION	0.9999070344247812	WITHOUT_CLASSIFICATION	9.296557521883886E-5	IMPLEMENTATION
ibid for current_time and current_date	WITHOUT_CLASSIFICATION	0.9998640683016207	WITHOUT_CLASSIFICATION	1.359316983794269E-4	IMPLEMENTATION
tell hibernate to use getbytes instead of getbinarystream	WITHOUT_CLASSIFICATION	0.998327824396982	WITHOUT_CLASSIFICATION	0.0016721756030179484	IMPLEMENTATION
no batch statements	WITHOUT_CLASSIFICATION	0.9997771888218973	WITHOUT_CLASSIFICATION	2.2281117810263657E-4	IMPLEMENTATION
we might want a special case for 192. this is very common for money types and here it is converted to 181	WITHOUT_CLASSIFICATION	0.9894989524726846	WITHOUT_CLASSIFICATION	0.010501047527315477	IMPLEMENTATION
no pointbase bit	WITHOUT_CLASSIFICATION	0.9998120820489134	WITHOUT_CLASSIFICATION	1.8791795108665473E-4	IMPLEMENTATION
no pointbase tinyint	WITHOUT_CLASSIFICATION	0.9998057058168509	WITHOUT_CLASSIFICATION	1.9429418314918193E-4	IMPLEMENTATION
pointbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999844086288037	WITHOUT_CLASSIFICATION	1.5591371196278796E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9997028681702071	WITHOUT_CLASSIFICATION	2.971318297929071E-4	IMPLEMENTATION
the current_timestamp is more accurate but only known to be supported in sql server 7.0 and later (i.e. sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9978086563316222	WITHOUT_CLASSIFICATION	0.002191343668377871	IMPLEMENTATION
sql server (at least up through 2005) does not support defining cascade delete constraints which can circel back to the mutating table	WITHOUT_CLASSIFICATION	0.9978690718011487	WITHOUT_CLASSIFICATION	0.0021309281988513102	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9949285306387352	WITHOUT_CLASSIFICATION	0.005071469361264842	IMPLEMENTATION
registercolumntype( types.blob 16777215 "mediumblob" ) registercolumntype( types.blob 65535 "blob" )	WITHOUT_CLASSIFICATION	0.9995246458529513	WITHOUT_CLASSIFICATION	4.7535414704869754E-4	IMPLEMENTATION
registercolumntype( types.clob 16777215 "mediumtext" ) registercolumntype( types.clob 65535 "text" )	WITHOUT_CLASSIFICATION	0.9995246458529513	WITHOUT_CLASSIFICATION	4.7535414704869754E-4	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" ) registercolumntype( types.varchar 65535 "text" )	WITHOUT_CLASSIFICATION	0.9995246458529513	WITHOUT_CLASSIFICATION	4.7535414704869754E-4	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9997028681702071	WITHOUT_CLASSIFICATION	2.971318297929071E-4	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9998173628625311	WITHOUT_CLASSIFICATION	1.826371374689177E-4	IMPLEMENTATION
sybase bit type does not support null values	WITHOUT_CLASSIFICATION	0.9993376543443	WITHOUT_CLASSIFICATION	6.623456557000025E-4	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999289366539219	WITHOUT_CLASSIFICATION	7.106334607800319E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9998568607109689	WITHOUT_CLASSIFICATION	1.4313928903109403E-4	IMPLEMENTATION
not null (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9966946040762981	WITHOUT_CLASSIFICATION	0.003305395923701929	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.999958770357901	WITHOUT_CLASSIFICATION	4.122964209901392E-5	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9998754880212174	WITHOUT_CLASSIFICATION	1.2451197878270482E-4	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
add another (inner) nested select add the main query close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999574066732229	WITHOUT_CLASSIFICATION	4.259332677712534E-5	IMPLEMENTATION
add the main query	WITHOUT_CLASSIFICATION	0.9998736804870902	WITHOUT_CLASSIFICATION	1.2631951290974244E-4	IMPLEMENTATION
add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9997503655387325	WITHOUT_CLASSIFICATION	2.496344612675112E-4	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999289366539219	WITHOUT_CLASSIFICATION	7.106334607800319E-5	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9998568607109689	WITHOUT_CLASSIFICATION	1.4313928903109403E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9997028681702071	WITHOUT_CLASSIFICATION	2.971318297929071E-4	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9997200055900662	WITHOUT_CLASSIFICATION	2.799944099338047E-4	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9942189338006896	WITHOUT_CLASSIFICATION	0.005781066199310479	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999883969530194	WITHOUT_CLASSIFICATION	1.1603046980430773E-5	IMPLEMENTATION
features which change between 8i 9i and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997437624679634	WITHOUT_CLASSIFICATION	2.562375320366377E-4	IMPLEMENTATION
features which remain constant across 8i 9i and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992018080885775	WITHOUT_CLASSIFICATION	7.98191911422576E-4	IMPLEMENTATION
binary %stream character %stream	WITHOUT_CLASSIFICATION	0.9997290803492825	WITHOUT_CLASSIFICATION	2.7091965071750034E-4	IMPLEMENTATION
getdefaultproperties().setproperty(environment.statement_batch_size no_batch)	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
hibernate impelemnts cast in dialect.java	WITHOUT_CLASSIFICATION	0.9999688645635215	WITHOUT_CLASSIFICATION	3.113543647852075E-5	IMPLEMENTATION
aggregate functions shouldn't be registered right? registerfunction( "list" new standardsqlfunction("list"hibernate.string) ) stopped on $list	WITHOUT_CLASSIFICATION	0.9960705292797847	WITHOUT_CLASSIFICATION	0.003929470720215328	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9963001360583618	WITHOUT_CLASSIFICATION	0.0036998639416383782	IMPLEMENTATION
below is for cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999965263576616	WITHOUT_CLASSIFICATION	3.4736423383522833E-6	IMPLEMENTATION
note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9993811282739333	WITHOUT_CLASSIFICATION	6.188717260667219E-4	IMPLEMENTATION
%upper is deprecated	WITHOUT_CLASSIFICATION	0.9997179743713838	WITHOUT_CLASSIFICATION	2.820256286162325E-4	IMPLEMENTATION
the syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9998782916135734	WITHOUT_CLASSIFICATION	1.2170838642657655E-4	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9967454770417891	WITHOUT_CLASSIFICATION	0.0032545229582110636	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9977840762999458	WITHOUT_CLASSIFICATION	0.002215923700054164	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9973155646582497	WITHOUT_CLASSIFICATION	0.002684435341750398	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
the syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9997942692477891	WITHOUT_CLASSIFICATION	2.0573075221085342E-4	IMPLEMENTATION
completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9997300863224803	WITHOUT_CLASSIFICATION	2.6991367751971784E-4	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9964717605043574	WITHOUT_CLASSIFICATION	0.0035282394956425976	IMPLEMENTATION
limit support (ala top) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9963444142339217	WITHOUT_CLASSIFICATION	0.003655585766078314	IMPLEMENTATION
intersystems cache' does not current support "select for update" syntax set your transaction mode to read_committed before using	WITHOUT_CLASSIFICATION	0.9925079418741856	WITHOUT_CLASSIFICATION	0.007492058125814439	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
<string>	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9963507745451319	WITHOUT_CLASSIFICATION	0.003649225454868077	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9963001360583618	WITHOUT_CLASSIFICATION	0.0036998639416383782	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9996911755680536	WITHOUT_CLASSIFICATION	3.088244319463318E-4	IMPLEMENTATION
does the limit clause come at the start of the select statement rather than at the end?	WITHOUT_CLASSIFICATION	0.9999945459669793	WITHOUT_CLASSIFICATION	5.4540330206757906E-6	IMPLEMENTATION
does the limit clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999812748806294	WITHOUT_CLASSIFICATION	1.872511937060377E-5	IMPLEMENTATION
the name of the sql function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9995065699408314	WITHOUT_CLASSIFICATION	4.934300591686279E-4	IMPLEMENTATION
create an outerjoingenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999877144781275	WITHOUT_CLASSIFICATION	1.2285521872508366E-5	IMPLEMENTATION
the keyword used to insert a row without specifying any column values	WITHOUT_CLASSIFICATION	0.9999834321733335	WITHOUT_CLASSIFICATION	1.6567826666533162E-5	IMPLEMENTATION
registerfunction( "trim" new standardsqlfunction( "trim" hibernate.string ) )	WITHOUT_CLASSIFICATION	0.9997280676241255	WITHOUT_CLASSIFICATION	2.7193237587458776E-4	IMPLEMENTATION
skip the from keyword in params	WITHOUT_CLASSIFICATION	0.9999899874139637	WITHOUT_CLASSIFICATION	1.0012586036228973E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9993155974245415	WITHOUT_CLASSIFICATION	6.844025754585908E-4	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9985027423502234	WITHOUT_CLASSIFICATION	0.0014972576497766226	IMPLEMENTATION
sqlfunction implementation	WITHOUT_CLASSIFICATION	0.9993561605526452	WITHOUT_CLASSIFICATION	6.438394473548548E-4	IMPLEMENTATION
conceivable that the dialect ctor could throw hibernateexceptions so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999477955452395	WITHOUT_CLASSIFICATION	5.2204454760616056E-5	IMPLEMENTATION
register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9997067470862047	WITHOUT_CLASSIFICATION	2.9325291379531977E-4	IMPLEMENTATION
register resolvers set via environment property	WITHOUT_CLASSIFICATION	0.9985312121984562	WITHOUT_CLASSIFICATION	0.0014687878015438908	IMPLEMENTATION
kept for backward compatibility until after the 3.1beta5 release of ha	WITHOUT_CLASSIFICATION	0.9999115440617352	WITHOUT_CLASSIFICATION	8.84559382648066E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9996863328380806	WITHOUT_CLASSIFICATION	3.1366716191941413E-4	IMPLEMENTATION
the cascadingaction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997454038014397	WITHOUT_CLASSIFICATION	2.545961985602446E-4	IMPLEMENTATION
the cascadingaction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996006716573881	WITHOUT_CLASSIFICATION	3.9932834261187665E-4	IMPLEMENTATION
delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999336866298467	WITHOUT_CLASSIFICATION	6.631337015320892E-5	IMPLEMENTATION
orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9991451985993135	WITHOUT_CLASSIFICATION	8.54801400686413E-4	IMPLEMENTATION
(lockmode) anything	WITHOUT_CLASSIFICATION	0.9989464786207632	WITHOUT_CLASSIFICATION	0.0010535213792367123	IMPLEMENTATION
lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9997422067901085	WITHOUT_CLASSIFICATION	2.577932098914919E-4	IMPLEMENTATION
refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9996640378640406	WITHOUT_CLASSIFICATION	3.359621359594245E-4	IMPLEMENTATION
evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9992021661948134	WITHOUT_CLASSIFICATION	7.978338051865916E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9996698448615494	WITHOUT_CLASSIFICATION	3.3015513845059636E-4	IMPLEMENTATION
orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.998371119215833	WITHOUT_CLASSIFICATION	0.001628880784167009	IMPLEMENTATION
for deprecated saveorupdatecopy()	WITHOUT_CLASSIFICATION	0.9998831151275053	WITHOUT_CLASSIFICATION	1.168848724948017E-4	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9992021661948134	WITHOUT_CLASSIFICATION	7.978338051865916E-4	IMPLEMENTATION
a proxy cannot be transient and it breaks foreignkeys.istransient	WITHOUT_CLASSIFICATION	0.9998242821823164	WITHOUT_CLASSIFICATION	1.7571781768348487E-4	IMPLEMENTATION
replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998735451037385	WITHOUT_CLASSIFICATION	1.2645489626159567E-4	IMPLEMENTATION
static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996596543708451	WITHOUT_CLASSIFICATION	3.403456291548838E-4	IMPLEMENTATION
handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9998114968730258	WITHOUT_CLASSIFICATION	1.8850312697413704E-4	IMPLEMENTATION
actually the semantics of the next three are really "bag" note that unlike objects collection insertions updates deletions are not really remembered between flushes. we just re-use the same lists for convenience.	WITHOUT_CLASSIFICATION	0.9999004964596058	WITHOUT_CLASSIFICATION	9.950354039416531E-5	IMPLEMENTATION
add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9992814258316335	WITHOUT_CLASSIFICATION	7.185741683664532E-4	IMPLEMENTATION
continue loop	WITHOUT_CLASSIFICATION	0.9995549937911058	WITHOUT_CLASSIFICATION	4.450062088941591E-4	IMPLEMENTATION
sort the updates by fk	WITHOUT_CLASSIFICATION	0.9997859017636458	WITHOUT_CLASSIFICATION	2.1409823635412076E-4	IMPLEMENTATION
sort the updates by pk	WITHOUT_CLASSIFICATION	0.9997859017636458	WITHOUT_CLASSIFICATION	2.1409823635412076E-4	IMPLEMENTATION
the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999418204763131	WITHOUT_CLASSIFICATION	5.817952368693598E-5	IMPLEMENTATION
the map of batch numbers to entityinsertaction lists	WITHOUT_CLASSIFICATION	0.9999362941430882	WITHOUT_CLASSIFICATION	6.370585691185426E-5	IMPLEMENTATION
optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9994361721346859	WITHOUT_CLASSIFICATION	5.638278653139774E-4	IMPLEMENTATION
the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9997355146873038	WITHOUT_CLASSIFICATION	2.6448531269619875E-4	IMPLEMENTATION
remove the current element from insertions. it will be added back later.	WITHOUT_CLASSIFICATION	0.9999975586138881	WITHOUT_CLASSIFICATION	2.4413861118690424E-6	IMPLEMENTATION
the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9998347244702126	WITHOUT_CLASSIFICATION	1.6527552978741426E-4	IMPLEMENTATION
there is already an existing batch for this type of entity. check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999997238022763	WITHOUT_CLASSIFICATION	2.7619772367137965E-7	IMPLEMENTATION
now rebuild the insertions list. there is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999978028522326	WITHOUT_CLASSIFICATION	2.1971477673403453E-6	IMPLEMENTATION
the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9998935987860776	WITHOUT_CLASSIFICATION	1.0640121392238932E-4	IMPLEMENTATION
loop through all the associations of the current entity and make sure that they are processed before the current batch number	WITHOUT_CLASSIFICATION	0.9991957493876599	WITHOUT_CLASSIFICATION	8.042506123400949E-4	IMPLEMENTATION
find the batch number associated with the current association if any.	WITHOUT_CLASSIFICATION	0.999924199119632	WITHOUT_CLASSIFICATION	7.580088036798263E-5	IMPLEMENTATION
create a new batch for this type. the batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999949385499479	WITHOUT_CLASSIFICATION	5.061450052079695E-6	IMPLEMENTATION
loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9948711247981584	WITHOUT_CLASSIFICATION	0.005128875201841605	IMPLEMENTATION
since this entity will now be processed in the latest possible batch we can be assured that it will come after all other associations there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.6576181964749678	WITHOUT_CLASSIFICATION	0.3423818035250323	IMPLEMENTATION
cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9997999239571365	WITHOUT_CLASSIFICATION	2.000760428635558E-4	IMPLEMENTATION
not really necessary but good for consistency	WITHOUT_CLASSIFICATION	0.9997158019137056	WITHOUT_CLASSIFICATION	2.841980862944115E-4	IMPLEMENTATION
we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9997332146071649	WITHOUT_CLASSIFICATION	2.6678539283508175E-4	IMPLEMENTATION
a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9990228767727031	WITHOUT_CLASSIFICATION	9.77123227296863E-4	IMPLEMENTATION
handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9987726419251527	WITHOUT_CLASSIFICATION	0.0012273580748473152	IMPLEMENTATION
loaded entity instances by entityuniquekey	WITHOUT_CLASSIFICATION	0.9995963449005757	WITHOUT_CLASSIFICATION	4.036550994242142E-4	IMPLEMENTATION
identity map of entityentry instances by the entity instance	WITHOUT_CLASSIFICATION	0.999919063567657	WITHOUT_CLASSIFICATION	8.093643234297706E-5	IMPLEMENTATION
entity proxies by entitykey	WITHOUT_CLASSIFICATION	0.999628450805993	WITHOUT_CLASSIFICATION	3.715491940069406E-4	IMPLEMENTATION
snapshots of current database state for entities that have not been loaded	WITHOUT_CLASSIFICATION	0.9973137759709327	WITHOUT_CLASSIFICATION	0.002686224029067153	IMPLEMENTATION
identity map of array holder arrayholder instances by the array instance	WITHOUT_CLASSIFICATION	0.9999778872805088	WITHOUT_CLASSIFICATION	2.2112719491204948E-5	IMPLEMENTATION
collection wrappers by the collectionkey key=collectionkey value=persistentcollection	WITHOUT_CLASSIFICATION	0.9998022042860178	WITHOUT_CLASSIFICATION	1.9779571398222294E-4	IMPLEMENTATION
set of entitykeys of deleted objects	WITHOUT_CLASSIFICATION	0.9974884856703339	WITHOUT_CLASSIFICATION	0.002511514329666176	IMPLEMENTATION
properties that we have tried to load and not found in the database	WITHOUT_CLASSIFICATION	0.996150628617656	WITHOUT_CLASSIFICATION	0.0038493713823438535	IMPLEMENTATION
a list of collection wrappers that were instantiating during result set processing that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9996341755850574	WITHOUT_CLASSIFICATION	3.658244149427101E-4	IMPLEMENTATION
a container for collections we load up when the owning entity is not yet loaded for now this is purely transient!	WITHOUT_CLASSIFICATION	0.9985640332061717	WITHOUT_CLASSIFICATION	0.0014359667938282426	IMPLEMENTATION
downgrade locks	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9998892924528261	WITHOUT_CLASSIFICATION	1.1070754717391412E-4	IMPLEMENTATION
unwrap the object	WITHOUT_CLASSIFICATION	0.9998648520938571	WITHOUT_CLASSIFICATION	1.3514790614278801E-4	IMPLEMENTATION
initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999260953027126	WITHOUT_CLASSIFICATION	7.390469728739658E-5	IMPLEMENTATION
return the proxied object	WITHOUT_CLASSIFICATION	0.9999649222239635	WITHOUT_CLASSIFICATION	3.507777603651075E-5	IMPLEMENTATION
overwrite old proxy	WITHOUT_CLASSIFICATION	0.9998934888025605	WITHOUT_CLASSIFICATION	1.0651119743952344E-4	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9998240435627767	WITHOUT_CLASSIFICATION	1.759564372233442E-4	IMPLEMENTATION
or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9997617283702672	WITHOUT_CLASSIFICATION	2.382716297327559E-4	IMPLEMENTATION
treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9925328932158027	WITHOUT_CLASSIFICATION	0.007467106784197227	IMPLEMENTATION
do this work only at the very highest level of the load don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9982701278970297	WITHOUT_CLASSIFICATION	0.001729872102970213	IMPLEMENTATION
note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999599375231306	WITHOUT_CLASSIFICATION	4.006247686950424E-5	IMPLEMENTATION
it might be an unwrapped collection reference! try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9992356512726164	WITHOUT_CLASSIFICATION	7.643487273837228E-4	IMPLEMENTATION
public boolean isnonexistant(entitykey key) {return nonexistantentitykeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999650277502276	WITHOUT_CLASSIFICATION	3.4972249772473046E-5	IMPLEMENTATION
public boolean isnonexistant(entityuniquekey key) {return nonexistententityuniquekeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999650277502276	WITHOUT_CLASSIFICATION	3.4972249772473046E-5	IMPLEMENTATION
iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999523149497672	WITHOUT_CLASSIFICATION	4.768505023277979E-5	IMPLEMENTATION
does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999909534648317	WITHOUT_CLASSIFICATION	9.04653516830068E-6	IMPLEMENTATION
check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999108194960271	WITHOUT_CLASSIFICATION	8.918050397283914E-5	IMPLEMENTATION
otherwise the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9998332633879002	WITHOUT_CLASSIFICATION	1.6673661209984285E-4	IMPLEMENTATION
adds remove as a sort-of alias for delete	WITHOUT_CLASSIFICATION	0.9999690499740794	WITHOUT_CLASSIFICATION	3.095002592059963E-5	IMPLEMENTATION
bad cast	WITHOUT_CLASSIFICATION	0.9993220258726455	WITHOUT_CLASSIFICATION	6.779741273545423E-4	IMPLEMENTATION
return lhspersister.getsubclasspropertycolumnnames(property)	WITHOUT_CLASSIFICATION	0.9999166725837143	WITHOUT_CLASSIFICATION	8.332741628574232E-5	IMPLEMENTATION
property-refs for associations defined on a component are not supported so no need to slice	WITHOUT_CLASSIFICATION	0.9989053669420139	WITHOUT_CLASSIFICATION	0.0010946330579860546	IMPLEMENTATION
if there is no property-ref assume the join is to the subclass table (ie. the table of the subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999967087718046	WITHOUT_CLASSIFICATION	3.2912281954344545E-6	IMPLEMENTATION
handle a property-ref	WITHOUT_CLASSIFICATION	0.9987455320046796	WITHOUT_CLASSIFICATION	0.001254467995320337	IMPLEMENTATION
nativesqlqueryreturn	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.999567014718679	WITHOUT_CLASSIFICATION	4.3298528132107867E-4	IMPLEMENTATION
why is all others non final ?	WITHOUT_CLASSIFICATION	0.981740379846751	WITHOUT_CLASSIFICATION	0.018259620153248984	IMPLEMENTATION
this.forcecacherefresh = forcecacherefresh	WITHOUT_CLASSIFICATION	0.9993932759159657	WITHOUT_CLASSIFICATION	6.06724084034229E-4	IMPLEMENTATION
hella important optimization!!!	WITHOUT_CLASSIFICATION	0.9996237773858052	WITHOUT_CLASSIFICATION	3.762226141947896E-4	IMPLEMENTATION
return that.type.equals(type) && equalshelper.equals(that.value value)	WITHOUT_CLASSIFICATION	0.9999187112281435	WITHOUT_CLASSIFICATION	8.128877185656552E-5	IMPLEMENTATION
must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9986093781947903	WITHOUT_CLASSIFICATION	0.0013906218052096599	IMPLEMENTATION
take a snapshot	WITHOUT_CLASSIFICATION	0.9996138049607081	WITHOUT_CLASSIFICATION	3.8619503929190034E-4	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9934869598014862	WITHOUT_CLASSIFICATION	0.006513040198513841	IMPLEMENTATION
the owning entity may have been deleted and its identifier unset due to identifier-rollback in which case try to look up its identifier from the persistence context	WITHOUT_CLASSIFICATION	0.9991652859745235	WITHOUT_CLASSIFICATION	8.347140254765248E-4	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9984268143824859	WITHOUT_CLASSIFICATION	0.0015731856175140947	IMPLEMENTATION
we've been here before	WITHOUT_CLASSIFICATION	0.9990899431610394	WITHOUT_CLASSIFICATION	9.100568389605332E-4	IMPLEMENTATION
it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999407436150827	WITHOUT_CLASSIFICATION	5.925638491721398E-5	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9984268143824859	WITHOUT_CLASSIFICATION	0.0015731856175140947	IMPLEMENTATION
if either its role changed	WITHOUT_CLASSIFICATION	0.9999938622329031	WITHOUT_CLASSIFICATION	6.137767096997981E-6	IMPLEMENTATION
or its key changed	WITHOUT_CLASSIFICATION	0.9999731326390945	WITHOUT_CLASSIFICATION	2.6867360905537564E-5	IMPLEMENTATION
we will need to create new entries	WITHOUT_CLASSIFICATION	0.9996708612465506	WITHOUT_CLASSIFICATION	3.291387534494981E-4	IMPLEMENTATION
we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9982283922643902	WITHOUT_CLASSIFICATION	0.0017716077356098709	IMPLEMENTATION
force initialize!	WITHOUT_CLASSIFICATION	0.9993416397594853	WITHOUT_CLASSIFICATION	6.583602405147019E-4	IMPLEMENTATION
else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999942112208489	WITHOUT_CLASSIFICATION	5.788779151055411E-6	IMPLEMENTATION
attributes maintained between flush cycles	WITHOUT_CLASSIFICATION	0.9997362345125936	WITHOUT_CLASSIFICATION	2.6376548740631345E-4	IMPLEMENTATION
session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9998949983115616	WITHOUT_CLASSIFICATION	1.0500168843840934E-4	IMPLEMENTATION
allow the collectionsnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9994856882584732	WITHOUT_CLASSIFICATION	5.143117415267633E-4	IMPLEMENTATION
attributes used only during flush cycle	WITHOUT_CLASSIFICATION	0.9998504892139151	WITHOUT_CLASSIFICATION	1.49510786084942E-4	IMPLEMENTATION
"current" means the reference that was found during flush()	WITHOUT_CLASSIFICATION	0.9999364392858306	WITHOUT_CLASSIFICATION	6.356071416934905E-5	IMPLEMENTATION
"loaded" means the reference that is consistent with the current database state	WITHOUT_CLASSIFICATION	0.9998984813535601	WITHOUT_CLASSIFICATION	1.0151864643997318E-4	IMPLEMENTATION
during flush we navigate the object graph to collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9751186657147259	WITHOUT_CLASSIFICATION	0.02488133428527415	IMPLEMENTATION
if we instantiate a collection during the flush() process we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999677383824437	WITHOUT_CLASSIFICATION	3.2261617556258486E-5	IMPLEMENTATION
new collections that get found + wrapped during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9945445473710474	WITHOUT_CLASSIFICATION	0.005455452628952658	IMPLEMENTATION
a newly wrapped collection is not dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9876561618895733	WITHOUT_CLASSIFICATION	0.012343838110426704	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.999716907959248	WITHOUT_CLASSIFICATION	2.830920407521547E-4	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.999716907959248	WITHOUT_CLASSIFICATION	2.830920407521547E-4	IMPLEMENTATION
detached collections that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9904584865737832	WITHOUT_CLASSIFICATION	0.009541513426216732	IMPLEMENTATION
optimization	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
optimization optimization	WITHOUT_CLASSIFICATION	0.999716907959248	WITHOUT_CLASSIFICATION	2.830920407521547E-4	IMPLEMENTATION
re-snapshot	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9993686484483302	WITHOUT_CLASSIFICATION	6.313515516698821E-4	IMPLEMENTATION
note this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9969684891469011	WITHOUT_CLASSIFICATION	0.0030315108530989112	IMPLEMENTATION
memory optimization	WITHOUT_CLASSIFICATION	0.9994643973508899	WITHOUT_CLASSIFICATION	5.356026491101974E-4	IMPLEMENTATION
use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9997838969595023	WITHOUT_CLASSIFICATION	2.1610304049762117E-4	IMPLEMENTATION
copied from session	WITHOUT_CLASSIFICATION	0.9999063525912587	WITHOUT_CLASSIFICATION	9.364740874131382E-5	IMPLEMENTATION
this should not happen since the dtd prevents it	WITHOUT_CLASSIFICATION	0.9907927113119567	WITHOUT_CLASSIFICATION	0.009207288688043321	IMPLEMENTATION
joinprocessor needs to know if the where clause fragment came from a dynamic filter or not so it can put the where clause fragment in the right place in the sql ast. 'hasfiltercondition' keeps track of that fact.	WITHOUT_CLASSIFICATION	0.8900457555823023	WITHOUT_CLASSIFICATION	0.1099542444176978	IMPLEMENTATION
the current join represents the join between a many-to-many association table and its "target" table. here we need to apply any additional filters defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9931412296576118	WITHOUT_CLASSIFICATION	0.0068587703423882386	IMPLEMENTATION
check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9960778357846595	WITHOUT_CLASSIFICATION	0.003922164215340459	IMPLEMENTATION
values is not null and is checkable we'll look deeper	WITHOUT_CLASSIFICATION	0.9982846593080382	WITHOUT_CLASSIFICATION	0.0017153406919617766	IMPLEMENTATION
for non null args check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9996571324001806	WITHOUT_CLASSIFICATION	3.428675998192856E-4	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9996863328380806	WITHOUT_CLASSIFICATION	3.1366716191941413E-4	IMPLEMENTATION
persistent collections may have components	WITHOUT_CLASSIFICATION	0.9995664341000928	WITHOUT_CLASSIFICATION	4.3356589990708663E-4	IMPLEMENTATION
check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999889878495477	WITHOUT_CLASSIFICATION	1.1012150452205264E-5	IMPLEMENTATION
will check current level if some of them are not null or sublevels if they exist	WITHOUT_CLASSIFICATION	0.9981725821292478	WITHOUT_CLASSIFICATION	0.0018274178707521837	IMPLEMENTATION
do the test	WITHOUT_CLASSIFICATION	0.9999289844160121	WITHOUT_CLASSIFICATION	7.10155839878926E-5	IMPLEMENTATION
if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999797250852585	WITHOUT_CLASSIFICATION	2.0274914741478225E-5	IMPLEMENTATION
unwrap it	WITHOUT_CLASSIFICATION	0.9993748680267359	WITHOUT_CLASSIFICATION	6.251319732640917E-4	IMPLEMENTATION
see if the entity is already bound to this session if not look at the entity identifier and assume that the entity is persistent if the id is not "unsaved" (that is we rely on foreign keys to keep database integrity)	WITHOUT_CLASSIFICATION	0.9757238210846841	WITHOUT_CLASSIFICATION	0.024276178915315815	IMPLEMENTATION
an unfetched association can only point to an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999768324295074	WITHOUT_CLASSIFICATION	2.3167570492513968E-5	IMPLEMENTATION
let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9998451960962074	WITHOUT_CLASSIFICATION	1.548039037926963E-4	IMPLEMENTATION
let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.999779830497654	WITHOUT_CLASSIFICATION	2.201695023460548E-4	IMPLEMENTATION
we use the assumed value if there is one to avoid hitting the database	WITHOUT_CLASSIFICATION	0.9999784794368572	WITHOUT_CLASSIFICATION	2.1520563142669545E-5	IMPLEMENTATION
hit the database after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9997736085969611	WITHOUT_CLASSIFICATION	2.26391403038912E-4	IMPLEMENTATION
context-entity-identifier returns null explicitly if the entity is not associated with the persistence context so make some deeper checks	WITHOUT_CLASSIFICATION	0.99722698919744	WITHOUT_CLASSIFICATION	0.0027730108025598417	IMPLEMENTATION
int count = 0	WITHOUT_CLASSIFICATION	0.9996223168765901	WITHOUT_CLASSIFICATION	3.7768312340992184E-4	IMPLEMENTATION
the first key found after the given key	WITHOUT_CLASSIFICATION	0.9989661335708667	WITHOUT_CLASSIFICATION	0.0010338664291332563	IMPLEMENTATION
checkforend = false	WITHOUT_CLASSIFICATION	0.99970139782145	WITHOUT_CLASSIFICATION	2.9860217855015076E-4	IMPLEMENTATION
count++	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999559906939354	WITHOUT_CLASSIFICATION	4.400930606450419E-5	IMPLEMENTATION
we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9998075153602713	WITHOUT_CLASSIFICATION	1.9248463972871324E-4	IMPLEMENTATION
first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999987867940638	WITHOUT_CLASSIFICATION	1.2132059361376192E-6	IMPLEMENTATION
the first id found after the given id	WITHOUT_CLASSIFICATION	0.9917376567626752	WITHOUT_CLASSIFICATION	0.008262343237324844	IMPLEMENTATION
we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9997573702680762	WITHOUT_CLASSIFICATION	2.4262973192369213E-4	IMPLEMENTATION
look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999829211462052	WITHOUT_CLASSIFICATION	1.7078853794747482E-5	IMPLEMENTATION
ignore this row of results! note the early exit	WITHOUT_CLASSIFICATION	0.9999618055297	WITHOUT_CLASSIFICATION	3.819447030002572E-5	IMPLEMENTATION
initialize this collection	WITHOUT_CLASSIFICATION	0.9996674197702085	WITHOUT_CLASSIFICATION	3.3258022979160834E-4	IMPLEMENTATION
create one	WITHOUT_CLASSIFICATION	0.9999106197715186	WITHOUT_CLASSIFICATION	8.938022848137201E-5	IMPLEMENTATION
warning can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9995234697570771	WITHOUT_CLASSIFICATION	4.7653024292294946E-4	IMPLEMENTATION
there were no queued additions and the role has a cache	WITHOUT_CLASSIFICATION	0.9999937045551776	WITHOUT_CLASSIFICATION	6.295444822385641E-6	IMPLEMENTATION
and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9836342525561503	WITHOUT_CLASSIFICATION	0.016365747443849617	IMPLEMENTATION
some filters affecting the collection are enabled on the session so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9853615358994376	WITHOUT_CLASSIFICATION	0.014638464100562333	IMPLEMENTATION
cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996856737985194	WITHOUT_CLASSIFICATION	3.143262014807077E-4	IMPLEMENTATION
loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996417885464701	WITHOUT_CLASSIFICATION	3.582114535298681E-4	IMPLEMENTATION
collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998026411325028	WITHOUT_CLASSIFICATION	1.9735886749724035E-4	IMPLEMENTATION
simple cache of param metadata based on query string. ideally the original "user-supplied query" string should be used to retreive this metadata (i.e. not the para-list-expanded query string) to avoid unnecessary cache entries. used solely for caching param metadata for native-sql queries see getsqlparametermetadata() for a discussion as to why	WITHOUT_CLASSIFICATION	0.9305331419255255	WITHOUT_CLASSIFICATION	0.06946685807447445	IMPLEMENTATION
the cache of the actual plans	WITHOUT_CLASSIFICATION	0.9998801130101567	WITHOUT_CLASSIFICATION	1.1988698984323985E-4	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9993155974245415	WITHOUT_CLASSIFICATION	6.844025754585908E-4	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9993155974245415	WITHOUT_CLASSIFICATION	6.844025754585908E-4	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9998264464242107	WITHOUT_CLASSIFICATION	1.7355357578922463E-4	IMPLEMENTATION
for native-sql queries the param metadata is determined outside any relation to a query plan because query plan creation and/or retreival for a native-sql query depends on all of the return types having been set which might not be the case up-front when param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9869343612297725	WITHOUT_CLASSIFICATION	0.013065638770227513	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.999556611120227	WITHOUT_CLASSIFICATION	4.4338887977297535E-4	IMPLEMENTATION
recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996874628934929	WITHOUT_CLASSIFICATION	3.125371065071899E-4	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.999556611120227	WITHOUT_CLASSIFICATION	4.4338887977297535E-4	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9998009314895547	WITHOUT_CLASSIFICATION	1.9906851044530576E-4	IMPLEMENTATION
break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9998508258492836	WITHOUT_CLASSIFICATION	1.491741507164501E-4	IMPLEMENTATION
named parameter	WITHOUT_CLASSIFICATION	0.9998317695694964	WITHOUT_CLASSIFICATION	1.682304305036574E-4	IMPLEMENTATION
could be either an ordinal or jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999797620064895	WITHOUT_CLASSIFICATION	2.0237993510458255E-5	IMPLEMENTATION
a peek ahead showed this as an jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9998780368041166	WITHOUT_CLASSIFICATION	1.2196319588345775E-4	IMPLEMENTATION
make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9996337683775713	WITHOUT_CLASSIFICATION	3.6623162242872766E-4	IMPLEMENTATION
pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9996412666461099	WITHOUT_CLASSIFICATION	3.5873335389010415E-4	IMPLEMENTATION
perform the actual work	WITHOUT_CLASSIFICATION	0.9993231656943858	WITHOUT_CLASSIFICATION	6.768343056141908E-4	IMPLEMENTATION
if everything went ok commit the transaction and close the obtained connection handle	WITHOUT_CLASSIFICATION	0.9742501462706931	WITHOUT_CLASSIFICATION	0.02574985372930697	IMPLEMENTATION
at some point the processing went bad so we need to 1) make sure the connection handle gets released 2) try to cleanup the jta context as much as possible	WITHOUT_CLASSIFICATION	0.6478895669644512	IMPLEMENTATION	0.35211043303554873	WITHOUT_CLASSIFICATION
finally handle the exception	WITHOUT_CLASSIFICATION	0.9996571721887197	WITHOUT_CLASSIFICATION	3.4282781128017176E-4	IMPLEMENTATION
a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9968468252442292	WITHOUT_CLASSIFICATION	0.003153174755770778	IMPLEMENTATION
saveorupdatecopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9997666234075927	WITHOUT_CLASSIFICATION	2.3337659240738634E-4	IMPLEMENTATION
collectionpersister should not be null but we don't want to throw an exception if it is null	WITHOUT_CLASSIFICATION	0.999861739582438	WITHOUT_CLASSIFICATION	1.3826041756205386E-4	IMPLEMENTATION
otherwise a null or brand new collection this will also (inefficiently) handle arrays which have no snapshot so we can't do any better processarrayornewcollection(collection type)	WITHOUT_CLASSIFICATION	0.9951720620494239	WITHOUT_CLASSIFICATION	0.004827937950576156	IMPLEMENTATION
a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9987933760319718	WITHOUT_CLASSIFICATION	0.0012066239680281674	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9997462099476413	WITHOUT_CLASSIFICATION	2.537900523586829E-4	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9997462099476413	WITHOUT_CLASSIFICATION	2.537900523586829E-4	IMPLEMENTATION
force a substitution!	WITHOUT_CLASSIFICATION	0.9993997714793019	WITHOUT_CLASSIFICATION	6.002285206980297E-4	IMPLEMENTATION
the user requested a "greater" (i.e. more restrictive) form of pessimistic lock	WITHOUT_CLASSIFICATION	0.9996424765121135	WITHOUT_CLASSIFICATION	3.5752348788644706E-4	IMPLEMENTATION
the database now holds a lock + the object is flushed from the cache so release the soft lock	WITHOUT_CLASSIFICATION	0.9999940989944064	WITHOUT_CLASSIFICATION	5.901005593638729E-6	IMPLEMENTATION
now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999872918992053	WITHOUT_CLASSIFICATION	1.2708100794656776E-5	IMPLEMENTATION
search for collections by reachability updating their role. we don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9969523467487976	WITHOUT_CLASSIFICATION	0.003047653251202306	IMPLEMENTATION
this is a situation where the entity id is assigned by a post-insert generator and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9958229169223279	WITHOUT_CLASSIFICATION	0.004177083077672093	IMPLEMENTATION
note we need to do the wrap here even if its not "dirty" because collections need wrapping but changes to _them_ don't dirty the container. also for versioned data we need to wrap before calling searchfordirtycollections	WITHOUT_CLASSIFICATION	0.9988348418671954	WITHOUT_CLASSIFICATION	0.001165158132804546	IMPLEMENTATION
grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999984200817431	WITHOUT_CLASSIFICATION	1.5799182568848498E-6	IMPLEMENTATION
grab its current state	WITHOUT_CLASSIFICATION	0.999883948478398	WITHOUT_CLASSIFICATION	1.1605152160194911E-4	IMPLEMENTATION
schedule the update note that we intentionally do _not_ pass in currentpersistentstate!	WITHOUT_CLASSIFICATION	0.9999706582261478	WITHOUT_CLASSIFICATION	2.9341773852106133E-5	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999032798362048	WITHOUT_CLASSIFICATION	9.672016379517504E-5	IMPLEMENTATION
give the interceptor a chance to process property values if the properties were modified by the interceptor we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9994237669565849	WITHOUT_CLASSIFICATION	5.762330434152021E-4	IMPLEMENTATION
compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9997139714338705	WITHOUT_CLASSIFICATION	2.8602856612946136E-4	IMPLEMENTATION
if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999865326776702	WITHOUT_CLASSIFICATION	1.3467322329654104E-5	IMPLEMENTATION
increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9992783972254414	WITHOUT_CLASSIFICATION	7.216027745585791E-4	IMPLEMENTATION
check nullability but do not perform command execute we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9961309874208997	WITHOUT_CLASSIFICATION	0.0038690125791002914	IMPLEMENTATION
give the interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999380119757043	WITHOUT_CLASSIFICATION	6.198802429567454E-5	IMPLEMENTATION
now we might need to recalculate the dirtyproperties array	WITHOUT_CLASSIFICATION	0.9988712314573693	WITHOUT_CLASSIFICATION	0.001128768542630642	IMPLEMENTATION
use the current version	WITHOUT_CLASSIFICATION	0.9986582794735613	WITHOUT_CLASSIFICATION	0.0013417205264387173	IMPLEMENTATION
interceptor returned null so do the dirtycheck ourself if possible	WITHOUT_CLASSIFICATION	0.999976512462491	WITHOUT_CLASSIFICATION	2.3487537509039553E-5	IMPLEMENTATION
object loaded by update()	WITHOUT_CLASSIFICATION	0.9998162631163221	WITHOUT_CLASSIFICATION	1.8373688367786728E-4	IMPLEMENTATION
dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9984465590684161	WITHOUT_CLASSIFICATION	0.0015534409315839553	IMPLEMENTATION
dirty check against the database snapshot if possible/necessary	WITHOUT_CLASSIFICATION	0.999427708021464	WITHOUT_CLASSIFICATION	5.722919785360999E-4	IMPLEMENTATION
the interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9994874569023416	WITHOUT_CLASSIFICATION	5.125430976583648E-4	IMPLEMENTATION
even process null collections	WITHOUT_CLASSIFICATION	0.9998071195883327	WITHOUT_CLASSIFICATION	1.9288041166721164E-4	IMPLEMENTATION
get the id from the object	WITHOUT_CLASSIFICATION	0.9999319928991941	WITHOUT_CLASSIFICATION	6.80071008059501E-5	IMPLEMENTATION
always do an insert and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9991476354288621	WITHOUT_CLASSIFICATION	8.523645711379159E-4	IMPLEMENTATION
what is the version on the database?	WITHOUT_CLASSIFICATION	0.9653514214386174	WITHOUT_CLASSIFICATION	0.03464857856138271	IMPLEMENTATION
/ hhh-2378	WITHOUT_CLASSIFICATION	0.9998205050515236	WITHOUT_CLASSIFICATION	1.794949484763383E-4	IMPLEMENTATION
will result in a sql update	WITHOUT_CLASSIFICATION	0.9999962322313047	WITHOUT_CLASSIFICATION	3.767768695175243E-6	IMPLEMENTATION
else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999188304660261	WITHOUT_CLASSIFICATION	8.116953397386886E-5	IMPLEMENTATION
no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999010866155885	WITHOUT_CLASSIFICATION	9.8913384411476E-5	IMPLEMENTATION
refresh() does not pass an entityname	WITHOUT_CLASSIFICATION	0.9996563609234052	WITHOUT_CLASSIFICATION	3.436390765948092E-4	IMPLEMENTATION
do not return a proxy! (this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.997489845523834	WITHOUT_CLASSIFICATION	0.0025101544761659744	IMPLEMENTATION
return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999806134937866	WITHOUT_CLASSIFICATION	1.9386506213298483E-5	IMPLEMENTATION
return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999702597615073	WITHOUT_CLASSIFICATION	2.9740238492744254E-5	IMPLEMENTATION
return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999642901358519	WITHOUT_CLASSIFICATION	3.570986414814863E-5	IMPLEMENTATION
this object was already loaded	WITHOUT_CLASSIFICATION	0.9999709501489042	WITHOUT_CLASSIFICATION	2.904985109580879E-5	IMPLEMENTATION
entity was found in second-level cache	WITHOUT_CLASSIFICATION	0.9999785688093009	WITHOUT_CLASSIFICATION	2.143119069902349E-5	IMPLEMENTATION
make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9983811382971917	WITHOUT_CLASSIFICATION	0.0016188617028083515	IMPLEMENTATION
intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9996693507643267	WITHOUT_CLASSIFICATION	3.3064923567329167E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pre-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997194348413355	WITHOUT_CLASSIFICATION	2.8056515866445574E-4	IMPLEMENTATION
some statistics	WITHOUT_CLASSIFICATION	0.9993052014419924	WITHOUT_CLASSIFICATION	6.947985580075419E-4	IMPLEMENTATION
safe from concurrent modification because of how entrylist() is implemented on identitymap	WITHOUT_CLASSIFICATION	0.9764022327765313	WITHOUT_CLASSIFICATION	0.023597767223468683	IMPLEMENTATION
initialize dirty flags for arrays + collections with composite elements and reset reached doupdate etc.	WITHOUT_CLASSIFICATION	0.9993614358508975	WITHOUT_CLASSIFICATION	6.3856414910251E-4	IMPLEMENTATION
among other things updatereachables() will recursively load all collections that are moving roles. this might cause entities to be loaded.	WITHOUT_CLASSIFICATION	0.9988110920003734	WITHOUT_CLASSIFICATION	0.0011889079996265334	IMPLEMENTATION
so this needs to be safe from concurrent modification problems. it is safe because of how identitymap implements entryset()	WITHOUT_CLASSIFICATION	0.999259712664875	WITHOUT_CLASSIFICATION	7.402873351249656E-4	IMPLEMENTATION
update the status of the object and if necessary schedule an update	WITHOUT_CLASSIFICATION	0.9999970006280643	WITHOUT_CLASSIFICATION	2.999371935626772E-6	IMPLEMENTATION
schedule updates to collections	WITHOUT_CLASSIFICATION	0.9992682760375854	WITHOUT_CLASSIFICATION	7.317239624146885E-4	IMPLEMENTATION
we need to lock the collection caches before executing entity inserts/updates in order to account for bidi associations	WITHOUT_CLASSIFICATION	0.9999237548830335	WITHOUT_CLASSIFICATION	7.624511696654466E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ post-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997194348413355	WITHOUT_CLASSIFICATION	2.8056515866445574E-4	IMPLEMENTATION
the database has changed now so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999613040706632	WITHOUT_CLASSIFICATION	3.8695929336757785E-5	IMPLEMENTATION
if the collection is dereferenced remove from the session cache iter.remove() does not work since the entryset is not backed by the set	WITHOUT_CLASSIFICATION	0.9999495006519588	WITHOUT_CLASSIFICATION	5.049934804129062E-5	IMPLEMENTATION
otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9995570865364916	WITHOUT_CLASSIFICATION	4.429134635084978E-4	IMPLEMENTATION
get a snapshot	WITHOUT_CLASSIFICATION	0.9998894026830714	WITHOUT_CLASSIFICATION	1.1059731692856836E-4	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999638227021721	WITHOUT_CLASSIFICATION	3.617729782784467E-5	IMPLEMENTATION
early exit!!!	WITHOUT_CLASSIFICATION	0.9998695127856638	WITHOUT_CLASSIFICATION	1.304872143362617E-4	IMPLEMENTATION
ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999935345347556	WITHOUT_CLASSIFICATION	6.4654652444622664E-6	IMPLEMENTATION
before any callbacks etc so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999961212371399	WITHOUT_CLASSIFICATION	3.878762860110027E-6	IMPLEMENTATION
ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9983530012839419	WITHOUT_CLASSIFICATION	0.0016469987160581097	IMPLEMENTATION
typefactory.deepcopy( currentstate proptypes persister.getpropertyupdateability() deletedstate session )	WITHOUT_CLASSIFICATION	0.9995428215513755	WITHOUT_CLASSIFICATION	4.5717844862445966E-4	IMPLEMENTATION
cascade-delete to collections before the collection owner is deleted	WITHOUT_CLASSIFICATION	0.999655361804486	WITHOUT_CLASSIFICATION	3.446381955140196E-4	IMPLEMENTATION
cascade-delete to many-to-one after the parent was deleted	WITHOUT_CLASSIFICATION	0.9994785548207973	WITHOUT_CLASSIFICATION	5.214451792027983E-4	IMPLEMENTATION
if it is an initialized proxy let cascade handle it later on	WITHOUT_CLASSIFICATION	0.999170391451508	WITHOUT_CLASSIFICATION	8.296085484918876E-4	IMPLEMENTATION
assign the requested id to the proxy before reassociating the proxy	WITHOUT_CLASSIFICATION	0.9994415003945689	WITHOUT_CLASSIFICATION	5.584996054310696E-4	IMPLEMENTATION
an uninitialized proxy noop don't even need to return an id since it is never a save()	WITHOUT_CLASSIFICATION	0.9943635204584811	WITHOUT_CLASSIFICATION	0.005636479541518903	IMPLEMENTATION
initialize properties of the event	WITHOUT_CLASSIFICATION	0.9999753670953057	WITHOUT_CLASSIFICATION	2.463290469436025E-5	IMPLEMENTATION
return the id in the event object	WITHOUT_CLASSIFICATION	0.9999894908875777	WITHOUT_CLASSIFICATION	1.0509112422258811E-5	IMPLEMENTATION
transient or deleted	WITHOUT_CLASSIFICATION	0.9989095835408863	WITHOUT_CLASSIFICATION	0.0010904164591136497	IMPLEMENTATION
use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9982082440527356	WITHOUT_CLASSIFICATION	0.0017917559472644025	IMPLEMENTATION
assume this is a newly instantiated transient object which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9971493716437313	WITHOUT_CLASSIFICATION	0.0028506283562687597	IMPLEMENTATION
this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9994628627137945	WITHOUT_CLASSIFICATION	5.371372862055156E-4	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.997771059685526	WITHOUT_CLASSIFICATION	0.0022289403144739486	IMPLEMENTATION
cachedstate	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
assume true since we don't really know and it doesn't matter	WITHOUT_CLASSIFICATION	0.998762138502953	WITHOUT_CLASSIFICATION	0.0012378614970469527	IMPLEMENTATION
a "detached" collection!	WITHOUT_CLASSIFICATION	0.9997106489717027	WITHOUT_CLASSIFICATION	2.8935102829738297E-4	IMPLEMENTATION
if the collection belonged to a different entity clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999836766432638	WITHOUT_CLASSIFICATION	1.6323356736191046E-5	IMPLEMENTATION
log.debug( "calling onload()" )	WITHOUT_CLASSIFICATION	0.9995246458529513	WITHOUT_CLASSIFICATION	4.7535414704869754E-4	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9998695127856638	WITHOUT_CLASSIFICATION	1.304872143362617E-4	IMPLEMENTATION
note performexecutions() clears all collectionxxxxtion collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999520150681239	WITHOUT_CLASSIFICATION	4.798493187597483E-5	IMPLEMENTATION
if no array holder we found an unwrappered array (this can't occur because we now always call wrap() before getting to here) return (ah==null) ? true searchfordirtycollections(ah type)	WITHOUT_CLASSIFICATION	0.9999969401148963	WITHOUT_CLASSIFICATION	3.0598851038155826E-6	IMPLEMENTATION
if not wrappered yet its dirty (this can't occur because we now always call wrap() before getting to here) return ( ! (obj instanceof persistentcollection) ) ? true searchfordirtycollections( (persistentcollection) obj type )	WITHOUT_CLASSIFICATION	0.983164240616903	WITHOUT_CLASSIFICATION	0.01683575938309703	IMPLEMENTATION
we need to check even if it was not initialized because of delayed adds!	WITHOUT_CLASSIFICATION	0.9968734077445236	WITHOUT_CLASSIFICATION	0.0031265922554763676	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9998874286148957	WITHOUT_CLASSIFICATION	1.125713851043974E-4	IMPLEMENTATION
find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9952230326577229	WITHOUT_CLASSIFICATION	0.0047769673422770375	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9998695127856638	WITHOUT_CLASSIFICATION	1.304872143362617E-4	IMPLEMENTATION
check the persistence context for an entry relating to this entity to be merged	WITHOUT_CLASSIFICATION	0.9988853501617349	WITHOUT_CLASSIFICATION	0.0011146498382651538	IMPLEMENTATION
we have specialized case of a detached entity from the perspective of the merge operation. specifically we have an incoming entity instance which has a corresponding entry in the current persistence context but registered under a different entity instance	WITHOUT_CLASSIFICATION	0.9999998876748393	WITHOUT_CLASSIFICATION	1.123251606851369E-7	IMPLEMENTATION
deleted	WITHOUT_CLASSIFICATION	0.9982358245693006	WITHOUT_CLASSIFICATION	0.0017641754306994713	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9998140674138285	WITHOUT_CLASSIFICATION	1.8593258617151376E-4	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy cascadeonmerge(event persister entity copycache cascades.cascade_before_merge)	WITHOUT_CLASSIFICATION	0.999992675447758	WITHOUT_CLASSIFICATION	7.324552242064313E-6	IMPLEMENTATION
this bit is only really absolutely necessary for handling requestedid but is also good if we merge multiple object graphs since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999945700298696	WITHOUT_CLASSIFICATION	5.429970130388351E-6	IMPLEMENTATION
continue we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9981564399239904	WITHOUT_CLASSIFICATION	0.0018435600760095645	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999948503420913	WITHOUT_CLASSIFICATION	5.1496579085977E-6	IMPLEMENTATION
check that entity id = requestedid	WITHOUT_CLASSIFICATION	0.9645303030920621	WITHOUT_CLASSIFICATION	0.03546969690793779	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9998140674138285	WITHOUT_CLASSIFICATION	1.8593258617151376E-4	IMPLEMENTATION
we got here because we assumed that an instance with an assigned id was detached when it was really persistent	WITHOUT_CLASSIFICATION	0.9999294251635165	WITHOUT_CLASSIFICATION	7.057483648350944E-5	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999948503420913	WITHOUT_CLASSIFICATION	5.1496579085977E-6	IMPLEMENTATION
copyvalues works by reflection so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9993026344239049	WITHOUT_CLASSIFICATION	6.973655760951615E-4	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9998240435627767	WITHOUT_CLASSIFICATION	1.759564372233442E-4	IMPLEMENTATION
source.getbatcher().executebatch() found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.8335858682299219	WITHOUT_CLASSIFICATION	0.16641413177007813	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999032798362048	WITHOUT_CLASSIFICATION	9.672016379517504E-5	IMPLEMENTATION
now done in entityidentityinsertaction persister.setidentifier( entity id source.getentitymode() )	WITHOUT_CLASSIFICATION	0.9998918456235051	WITHOUT_CLASSIFICATION	1.0815437649488095E-4	IMPLEMENTATION
source.getpersistencecontext().removenonexist( new entitykey( id persister source.getentitymode() ) )	WITHOUT_CLASSIFICATION	0.9982547961531902	WITHOUT_CLASSIFICATION	0.0017452038468097333	IMPLEMENTATION
keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999949863883812	WITHOUT_CLASSIFICATION	5.0136116187861755E-6	IMPLEMENTATION
cascade-save to many-to-one before the parent is saved	WITHOUT_CLASSIFICATION	0.9998475616916622	WITHOUT_CLASSIFICATION	1.5243830833778995E-4	IMPLEMENTATION
pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999959594586688	WITHOUT_CLASSIFICATION	4.040541331246218E-6	IMPLEMENTATION
the object is persistent	WITHOUT_CLASSIFICATION	0.9999028591222452	WITHOUT_CLASSIFICATION	9.714087775479884E-5	IMPLEMENTATION
the entity is associated with the session so check its status	WITHOUT_CLASSIFICATION	0.9998736452152296	WITHOUT_CLASSIFICATION	1.2635478477037273E-4	IMPLEMENTATION
do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999006835956353	WITHOUT_CLASSIFICATION	9.931640436457935E-5	IMPLEMENTATION
ie. e.status==deleted	WITHOUT_CLASSIFICATION	0.999716907959248	WITHOUT_CLASSIFICATION	2.830920407521547E-4	IMPLEMENTATION
the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999142585953466	WITHOUT_CLASSIFICATION	8.574140465347446E-5	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9998874286148957	WITHOUT_CLASSIFICATION	1.125713851043974E-4	IMPLEMENTATION
private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999702326940597	WITHOUT_CLASSIFICATION	2.97673059404122E-5	IMPLEMENTATION
first try to find a matching constructor accepting a violatedconstraintnameextracter param	WITHOUT_CLASSIFICATION	0.9954041920581979	WITHOUT_CLASSIFICATION	0.004595807941802139	IMPLEMENTATION
eat it and try next	WITHOUT_CLASSIFICATION	0.999115457439338	WITHOUT_CLASSIFICATION	8.845425606618686E-4	IMPLEMENTATION
otherwise try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.996578826918234	WITHOUT_CLASSIFICATION	0.003421173081766013	IMPLEMENTATION
oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.999888411116588	WITHOUT_CLASSIFICATION	1.1158888341203339E-4	IMPLEMENTATION
collectionpropertymapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9995557824230615	WITHOUT_CLASSIFICATION	4.442175769385159E-4	IMPLEMENTATION
remove initial " "	WITHOUT_CLASSIFICATION	0.9999435008309419	WITHOUT_CLASSIFICATION	5.6499169058224636E-5	IMPLEMENTATION
remove initial " and "	WITHOUT_CLASSIFICATION	0.9999361090665154	WITHOUT_CLASSIFICATION	6.389093348457024E-5	IMPLEMENTATION
beforeclasstokens.add("new") definitely don't have this!!	WITHOUT_CLASSIFICATION	0.9995547020682117	WITHOUT_CLASSIFICATION	4.452979317881901E-4	IMPLEMENTATION
notafterclasstokens.add("")	WITHOUT_CLASSIFICATION	0.999716907959248	WITHOUT_CLASSIFICATION	2.830920407521547E-4	IMPLEMENTATION
just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.999979258054605	WITHOUT_CLASSIFICATION	2.0741945395008918E-5	IMPLEMENTATION
update last non-whitespace token if necessary	WITHOUT_CLASSIFICATION	0.9999827942802065	WITHOUT_CLASSIFICATION	1.720571979346326E-5	IMPLEMENTATION
select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9998789562056339	WITHOUT_CLASSIFICATION	1.2104379436600825E-4	IMPLEMENTATION
scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9998363360224494	WITHOUT_CLASSIFICATION	1.636639775506674E-4	IMPLEMENTATION
note this!!	WITHOUT_CLASSIFICATION	0.999726185604199	WITHOUT_CLASSIFICATION	2.7381439580100356E-4	IMPLEMENTATION
error message constants.	WITHOUT_CLASSIFICATION	0.9953567378875061	WITHOUT_CLASSIFICATION	0.004643262112493814	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993675490717683	WITHOUT_CLASSIFICATION	6.324509282316456E-4	IMPLEMENTATION
semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9987630075567215	WITHOUT_CLASSIFICATION	0.0012369924432784586	IMPLEMENTATION
handle collection-fiter compilation. important note this is modifying the input (hql) tree not the output tree!	WITHOUT_CLASSIFICATION	0.9789284484917162	WITHOUT_CLASSIFICATION	0.021071551508283857	IMPLEMENTATION
show the modified ast.	WITHOUT_CLASSIFICATION	0.99979481760877	WITHOUT_CLASSIFICATION	2.0518239123010112E-4	IMPLEMENTATION
create a parameter specification for the collection filter	WITHOUT_CLASSIFICATION	0.9999884828489067	WITHOUT_CLASSIFICATION	1.151715109323231E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995808946190322	WITHOUT_CLASSIFICATION	4.19105380967733E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995808946190322	WITHOUT_CLASSIFICATION	4.19105380967733E-4	IMPLEMENTATION
get the names of the columns used to link between the collection owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999912691453494	WITHOUT_CLASSIFICATION	8.730854650650768E-6	IMPLEMENTATION
the path ast should be a dotnode and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9988500333657223	WITHOUT_CLASSIFICATION	0.001149966634277703	IMPLEMENTATION
tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9998749621288157	WITHOUT_CLASSIFICATION	1.250378711843777E-4	IMPLEMENTATION
re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9998280283645639	WITHOUT_CLASSIFICATION	1.7197163543613864E-4	IMPLEMENTATION
don't forget to resolve the argument! resolve the collection function now.	WITHOUT_CLASSIFICATION	0.999539054174314	WITHOUT_CLASSIFICATION	4.609458256860255E-4	IMPLEMENTATION
resolve everything up to this dot but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999625769137578	WITHOUT_CLASSIFICATION	3.742308624214462E-5	IMPLEMENTATION
should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9995772246594881	WITHOUT_CLASSIFICATION	4.227753405119245E-4	IMPLEMENTATION
was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999971136611226	WITHOUT_CLASSIFICATION	2.886338877363329E-6	IMPLEMENTATION
attach any mapping-defined "order by" fragments	WITHOUT_CLASSIFICATION	0.9998252293975285	WITHOUT_CLASSIFICATION	1.7477060247144568E-4	IMPLEMENTATION
use the explicitly declared select expression determine the return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9996387545878013	WITHOUT_CLASSIFICATION	3.6124541219872193E-4	IMPLEMENTATION
after that process the joins. invoke a delegate to do the work as this is farily complex.	WITHOUT_CLASSIFICATION	0.9722407498299026	WITHOUT_CLASSIFICATION	0.02775925017009737	IMPLEMENTATION
make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9997838593011384	WITHOUT_CLASSIFICATION	2.161406988614209E-4	IMPLEMENTATION
we need to generate ids as part of this bulk insert. note that this is only supported for sequence-style generators and post-insert-style generators basically only in-db generators	WITHOUT_CLASSIFICATION	0.999759341860473	WITHOUT_CLASSIFICATION	2.4065813952711118E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995808946190322	WITHOUT_CLASSIFICATION	4.19105380967733E-4	IMPLEMENTATION
we need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9989892964174766	WITHOUT_CLASSIFICATION	0.0010107035825233568	IMPLEMENTATION
we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9996199323200009	WITHOUT_CLASSIFICATION	3.8006767999912764E-4	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9987083933640682	WITHOUT_CLASSIFICATION	0.0012916066359318036	IMPLEMENTATION
generate implicit joins only if necessary.	WITHOUT_CLASSIFICATION	0.9999752165622166	WITHOUT_CLASSIFICATION	2.4783437783545753E-5	IMPLEMENTATION
notify the from element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999257065186202	WITHOUT_CLASSIFICATION	7.429348137982766E-5	IMPLEMENTATION
turn off includesubclasses on all fromelements.	WITHOUT_CLASSIFICATION	0.9991343695058831	WITHOUT_CLASSIFICATION	8.656304941170269E-4	IMPLEMENTATION
create the node initially with the param name so that it shows appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999930407822074	WITHOUT_CLASSIFICATION	6.959217792573388E-6	IMPLEMENTATION
use the delegate resolve identifiers as from element aliases.	WITHOUT_CLASSIFICATION	0.9999677249595178	WITHOUT_CLASSIFICATION	3.227504048211025E-5	IMPLEMENTATION
select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999036527559453	WITHOUT_CLASSIFICATION	9.634724405472156E-5	IMPLEMENTATION
no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9996965470259006	WITHOUT_CLASSIFICATION	3.034529740994351E-4	IMPLEMENTATION
make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9987826413834563	WITHOUT_CLASSIFICATION	0.0012173586165437139	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993675490717683	WITHOUT_CLASSIFICATION	6.324509282316456E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995808946190322	WITHOUT_CLASSIFICATION	4.19105380967733E-4	IMPLEMENTATION
--commented out by inspection (12/11/04 1056 am) int getwarningcount()	WITHOUT_CLASSIFICATION	0.9998213109597375	WITHOUT_CLASSIFICATION	1.7868904026245772E-4	IMPLEMENTATION
alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9979211835425787	WITHOUT_CLASSIFICATION	0.002078816457421285	IMPLEMENTATION
switch	WITHOUT_CLASSIFICATION	0.9996790693856403	WITHOUT_CLASSIFICATION	3.209306143596545E-4	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9989486892504172	WITHOUT_CLASSIFICATION	0.0010513107495826984	IMPLEMENTATION
just do the regular thing if you can't find the ctor your ast must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9998247921100833	WITHOUT_CLASSIFICATION	1.752078899167424E-4	IMPLEMENTATION
initialize sql nodes here.	WITHOUT_CLASSIFICATION	0.9994420516383038	WITHOUT_CLASSIFICATION	5.579483616961368E-4	IMPLEMENTATION
semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997331973761708	WITHOUT_CLASSIFICATION	2.6680262382918174E-4	IMPLEMENTATION
if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999991675203047	WITHOUT_CLASSIFICATION	8.324796952125823E-7	IMPLEMENTATION
this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999467528977029	WITHOUT_CLASSIFICATION	5.324710229711891E-5	IMPLEMENTATION
--- inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.999925299247799	WITHOUT_CLASSIFICATION	7.47007522009077E-5	IMPLEMENTATION
check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9972475797657151	WITHOUT_CLASSIFICATION	0.0027524202342849922	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9998205050515236	WITHOUT_CLASSIFICATION	1.794949484763383E-4	IMPLEMENTATION
these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9992719707779039	WITHOUT_CLASSIFICATION	7.28029222096134E-4	IMPLEMENTATION
again both should be fromelements	WITHOUT_CLASSIFICATION	0.9996956786907638	WITHOUT_CLASSIFICATION	3.0432130923617034E-4	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9998009314895547	WITHOUT_CLASSIFICATION	1.9906851044530576E-4	IMPLEMENTATION
right represents a joins originating from left or both right and left reprersent joins originating from the same fromelement	WITHOUT_CLASSIFICATION	0.999943250582064	WITHOUT_CLASSIFICATION	5.674941793607147E-5	IMPLEMENTATION
check a set of parent/child nodes in the from-clause tree to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999573399076426	WITHOUT_CLASSIFICATION	4.2660092357490004E-5	IMPLEMENTATION
right represents a joins originating from left	WITHOUT_CLASSIFICATION	0.9999170565171978	WITHOUT_CLASSIFICATION	8.294348280222792E-5	IMPLEMENTATION
all clear	WITHOUT_CLASSIFICATION	0.9994766675847708	WITHOUT_CLASSIFICATION	5.233324152291957E-4	IMPLEMENTATION
ignore the token class name parameter and use a specific token class.	WITHOUT_CLASSIFICATION	0.9998087054988651	WITHOUT_CLASSIFICATION	1.912945011348481E-4	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9988826522807442	WITHOUT_CLASSIFICATION	0.0011173477192557633	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9988826522807442	WITHOUT_CLASSIFICATION	0.0011173477192557633	IMPLEMENTATION
remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9998466560625033	WITHOUT_CLASSIFICATION	1.533439374967047E-4	IMPLEMENTATION
don't care about other param types here just those explicitly user-defined	WITHOUT_CLASSIFICATION	0.9996359498062897	WITHOUT_CLASSIFICATION	3.6405019371028185E-4	IMPLEMENTATION
if the query is already compiled skip the compilation.	WITHOUT_CLASSIFICATION	0.9999781842581299	WITHOUT_CLASSIFICATION	2.1815741870134508E-5	IMPLEMENTATION
remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9999560962345018	WITHOUT_CLASSIFICATION	4.390376549834498E-5	IMPLEMENTATION
phase 1 parse the hql into an ast.	WITHOUT_CLASSIFICATION	0.9999462498274492	WITHOUT_CLASSIFICATION	5.3750172550811874E-5	IMPLEMENTATION
phase 2 analyze the hql ast and produce an sql ast.	WITHOUT_CLASSIFICATION	0.9999960703575999	WITHOUT_CLASSIFICATION	3.929642400122879E-6	IMPLEMENTATION
phase 3 generate the sql.	WITHOUT_CLASSIFICATION	0.9999706627193787	WITHOUT_CLASSIFICATION	2.9337280621227614E-5	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9992837856465718	WITHOUT_CLASSIFICATION	7.162143534282729E-4	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9992837856465718	WITHOUT_CLASSIFICATION	7.162143534282729E-4	IMPLEMENTATION
only needed during compilation phase	WITHOUT_CLASSIFICATION	0.7948345666879763	WITHOUT_CLASSIFICATION	0.2051654333120237	IMPLEMENTATION
transform the tree.	WITHOUT_CLASSIFICATION	0.9998298956168099	WITHOUT_CLASSIFICATION	1.7010438319004883E-4	IMPLEMENTATION
parse the query string into an hql ast.	WITHOUT_CLASSIFICATION	0.9999399426319585	WITHOUT_CLASSIFICATION	6.0057368041522244E-5	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9996104817555855	WITHOUT_CLASSIFICATION	3.8951824441439453E-4	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9996104817555855	WITHOUT_CLASSIFICATION	3.8951824441439453E-4	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9996104817555855	WITHOUT_CLASSIFICATION	3.8951824441439453E-4	IMPLEMENTATION
note ( max - 1 ) because first is zero-based while max is not	WITHOUT_CLASSIFICATION	0.9983073526342316	WITHOUT_CLASSIFICATION	0.0016926473657683347	IMPLEMENTATION
-- package local methods for the queryloader delegate --	WITHOUT_CLASSIFICATION	0.99993126192052	WITHOUT_CLASSIFICATION	6.873807948003614E-5	IMPLEMENTATION
if there are no collection fetches then no further checks are needed	WITHOUT_CLASSIFICATION	0.997899776798793	WITHOUT_CLASSIFICATION	0.0021002232012070575	IMPLEMENTATION
a shallow query is ok (although technically there should be no fetching here)	WITHOUT_CLASSIFICATION	0.999848689739489	WITHOUT_CLASSIFICATION	1.513102605109905E-4	IMPLEMENTATION
should be the first but just to be safe	WITHOUT_CLASSIFICATION	0.9999859294370677	WITHOUT_CLASSIFICATION	1.4070562932462063E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995808946190322	WITHOUT_CLASSIFICATION	4.19105380967733E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995808946190322	WITHOUT_CLASSIFICATION	4.19105380967733E-4	IMPLEMENTATION
impl note allows multiple collection fetches as long as the entire fecthed graph still "points back" to a single root entity for return	WITHOUT_CLASSIFICATION	0.9989851765752209	WITHOUT_CLASSIFICATION	0.0010148234247791062	IMPLEMENTATION
otherwise we have a non-scalar select with defined collection fetch(es). make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999606673429632	WITHOUT_CLASSIFICATION	3.933265703690435E-5	IMPLEMENTATION
this is not strictly true. we actually just need to make sure that it is ordered by root-entity pk and that that order-by comes before any non-root-entity ordering	WITHOUT_CLASSIFICATION	0.7416533607405033	WITHOUT_CLASSIFICATION	0.2583466392594967	IMPLEMENTATION
paramtranslations = new parametertranslationsimpl( collectedparameterspecifications )	WITHOUT_CLASSIFICATION	0.9994237499335621	WITHOUT_CLASSIFICATION	5.762500664379677E-4	IMPLEMENTATION
we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.999949964029665	WITHOUT_CLASSIFICATION	5.0035970335016504E-5	IMPLEMENTATION
igndore it	WITHOUT_CLASSIFICATION	0.9993748680267359	WITHOUT_CLASSIFICATION	6.251319732640917E-4	IMPLEMENTATION
we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999771354503803	WITHOUT_CLASSIFICATION	2.2864549619743072E-5	IMPLEMENTATION
[jsd] the fix for hhh-558	WITHOUT_CLASSIFICATION	0.9994827040157906	WITHOUT_CLASSIFICATION	5.172959842094204E-4	IMPLEMENTATION
if the token can tell us if it could be an identifier	WITHOUT_CLASSIFICATION	0.9999394515501667	WITHOUT_CLASSIFICATION	6.054844983329303E-5	IMPLEMENTATION
and the expected token type was an identifier then	WITHOUT_CLASSIFICATION	0.9999976466170453	WITHOUT_CLASSIFICATION	2.353382954699284E-6	IMPLEMENTATION
use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999073316597673	WITHOUT_CLASSIFICATION	9.266834023270322E-5	IMPLEMENTATION
add the token to the ast.	WITHOUT_CLASSIFICATION	0.9995893500070493	WITHOUT_CLASSIFICATION	4.1064999295070486E-4	IMPLEMENTATION
(not (eq a b) ) => (ne a b)	WITHOUT_CLASSIFICATION	0.9999137357680782	WITHOUT_CLASSIFICATION	8.62642319218382E-5	IMPLEMENTATION
(not (ne a b) ) => (eq a b)	WITHOUT_CLASSIFICATION	0.9999137357680782	WITHOUT_CLASSIFICATION	8.62642319218382E-5	IMPLEMENTATION
(not (lt a b) ) => (ge a b)	WITHOUT_CLASSIFICATION	0.9999137357680782	WITHOUT_CLASSIFICATION	8.62642319218382E-5	IMPLEMENTATION
(not (ge a b) ) => (lt a b)	WITHOUT_CLASSIFICATION	0.9999137357680782	WITHOUT_CLASSIFICATION	8.62642319218382E-5	IMPLEMENTATION
(not (le a b) ) => (gt a b)	WITHOUT_CLASSIFICATION	0.9999137357680782	WITHOUT_CLASSIFICATION	8.62642319218382E-5	IMPLEMENTATION
(not (like a b) ) => (not_like a b)	WITHOUT_CLASSIFICATION	0.999912915985291	WITHOUT_CLASSIFICATION	8.708401470909322E-5	IMPLEMENTATION
(not (not_like a b) ) => (like a b)	WITHOUT_CLASSIFICATION	0.999912915985291	WITHOUT_CLASSIFICATION	8.708401470909322E-5	IMPLEMENTATION
(not (is_not_null a b) ) => (is_null a b)	WITHOUT_CLASSIFICATION	0.9999127526526564	WITHOUT_CLASSIFICATION	8.724734734358613E-5	IMPLEMENTATION
(not (between a b) ) => (not_between a b)	WITHOUT_CLASSIFICATION	0.9999127526526564	WITHOUT_CLASSIFICATION	8.724734734358613E-5	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9982574000171619	WITHOUT_CLASSIFICATION	0.0017425999828380868	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9988826522807442	WITHOUT_CLASSIFICATION	0.0011173477192557633	IMPLEMENTATION
if if otherwise handle the error normally.	WITHOUT_CLASSIFICATION	0.9982005188220754	WITHOUT_CLASSIFICATION	0.0017994811779246393	IMPLEMENTATION
(not (not_between a b) ) => (between a b)	WITHOUT_CLASSIFICATION	0.9999127526526564	WITHOUT_CLASSIFICATION	8.724734734358613E-5	IMPLEMENTATION
this can never happen because this rule will always eliminate the child not.case notreturn x.getfirstchild() (not (not x) ) => (x)	WITHOUT_CLASSIFICATION	0.999882638406683	WITHOUT_CLASSIFICATION	1.1736159331692576E-4	IMPLEMENTATION
just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9998797521165587	WITHOUT_CLASSIFICATION	1.2024788344136964E-4	IMPLEMENTATION
(eq null b) => (is_null b)	WITHOUT_CLASSIFICATION	0.9999545558114317	WITHOUT_CLASSIFICATION	4.54441885683751E-5	IMPLEMENTATION
(eq a null) => (is_null a)	WITHOUT_CLASSIFICATION	0.9999467518256562	WITHOUT_CLASSIFICATION	5.324817434373406E-5	IMPLEMENTATION
note because we're using astutil.createparent() the tree must be created from the bottom up. is empty x => (exists (query (select_from (from x) ) ) )	WITHOUT_CLASSIFICATION	0.9999845542602215	WITHOUT_CLASSIFICATION	1.544573977855728E-5	IMPLEMENTATION
add not if it's negated.	WITHOUT_CLASSIFICATION	0.9979116275143544	WITHOUT_CLASSIFICATION	0.0020883724856457404	IMPLEMENTATION
create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9998170902238823	WITHOUT_CLASSIFICATION	1.8290977611779005E-4	IMPLEMENTATION
case 1 multi token keywords group by and order by the next token ( lt(2) ) should be 'by' otherwise this is just an ident.	WITHOUT_CLASSIFICATION	0.9996616562129829	WITHOUT_CLASSIFICATION	3.3834378701713794E-4	IMPLEMENTATION
case 2 the current token is after from and before '.'.	WITHOUT_CLASSIFICATION	0.999987999932969	WITHOUT_CLASSIFICATION	1.2000067031026563E-5	IMPLEMENTATION
this handles hhh-354 where there is a strange property name in a where clause. if the lookahead contains a dot then something that isn't an ident	WITHOUT_CLASSIFICATION	0.9999998813988906	WITHOUT_CLASSIFICATION	1.1860110932447548E-7	IMPLEMENTATION
see if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999902536750259	WITHOUT_CLASSIFICATION	9.746324974069301E-6	IMPLEMENTATION
set it!	WITHOUT_CLASSIFICATION	0.9994232123557899	WITHOUT_CLASSIFICATION	5.767876442101199E-4	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.999641566201331	WITHOUT_CLASSIFICATION	3.5843379866897727E-4	IMPLEMENTATION
strip the " where "	WITHOUT_CLASSIFICATION	0.9996200052687895	WITHOUT_CLASSIFICATION	3.799947312104604E-4	IMPLEMENTATION
don't really know all the codes required to adequately decipher returned jdbc exceptions here. simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.8450212598939749	WITHOUT_CLASSIFICATION	0.15497874010602514	IMPLEMENTATION
at the very least cleanup the data )	WITHOUT_CLASSIFICATION	0.999799019631275	WITHOUT_CLASSIFICATION	2.009803687250667E-4	IMPLEMENTATION
first save off the pertinent ids as the return value	WITHOUT_CLASSIFICATION	0.9999889365695649	WITHOUT_CLASSIFICATION	1.1063430435105887E-5	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999055945531026	WITHOUT_CLASSIFICATION	9.44054468973936E-5	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999055945531026	WITHOUT_CLASSIFICATION	9.44054468973936E-5	IMPLEMENTATION
start performing the updates	WITHOUT_CLASSIFICATION	0.9998525050654142	WITHOUT_CLASSIFICATION	1.474949345856544E-4	IMPLEMENTATION
first save off the pertinent ids saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999956297842345	WITHOUT_CLASSIFICATION	4.370215765474759E-6	IMPLEMENTATION
start performing the deletes	WITHOUT_CLASSIFICATION	0.9998579023475681	WITHOUT_CLASSIFICATION	1.4209765243186544E-4	IMPLEMENTATION
otherwise everything ok.	WITHOUT_CLASSIFICATION	0.9979679382870572	WITHOUT_CLASSIFICATION	0.0020320617129427464	IMPLEMENTATION
visit width-first then depth	WITHOUT_CLASSIFICATION	0.9998853726742496	WITHOUT_CLASSIFICATION	1.1462732575037165E-4	IMPLEMENTATION
if the types report logical equivalence return true	WITHOUT_CLASSIFICATION	0.9999256890046235	WITHOUT_CLASSIFICATION	7.431099537646978E-5	IMPLEMENTATION
otherwise perform a "deep equivalence" check	WITHOUT_CLASSIFICATION	0.9905282030722881	WITHOUT_CLASSIFICATION	0.009471796927711962	IMPLEMENTATION
if there is no where node make one.	WITHOUT_CLASSIFICATION	0.999968409461632	WITHOUT_CLASSIFICATION	3.159053836794188E-5	IMPLEMENTATION
inject the where after the parent	WITHOUT_CLASSIFICATION	0.9995620933506161	WITHOUT_CLASSIFICATION	4.3790664938386656E-4	IMPLEMENTATION
never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999208952400828	WITHOUT_CLASSIFICATION	7.910475991720504E-5	IMPLEMENTATION
moved here from selectclause [jsd]	WITHOUT_CLASSIFICATION	0.9998402060714698	WITHOUT_CLASSIFICATION	1.5979392853012023E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9998205050515236	WITHOUT_CLASSIFICATION	1.794949484763383E-4	IMPLEMENTATION
use the table fromelement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9998451888979877	WITHOUT_CLASSIFICATION	1.548111020122577E-4	IMPLEMENTATION
set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999448399054714	WITHOUT_CLASSIFICATION	5.516009452846159E-5	IMPLEMENTATION
if the uresolved property path isn't set yet just use the property name.	WITHOUT_CLASSIFICATION	0.999905477707393	WITHOUT_CLASSIFICATION	9.452229260697874E-5	IMPLEMENTATION
the 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9996545507401902	WITHOUT_CLASSIFICATION	3.45449259809877E-4	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999831222588277	WITHOUT_CLASSIFICATION	1.6877741172339988E-5	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999831222588277	WITHOUT_CLASSIFICATION	1.6877741172339988E-5	IMPLEMENTATION
if this dot has already been resolved stop now.	WITHOUT_CLASSIFICATION	0.9999201754290878	WITHOUT_CLASSIFICATION	7.9824570912187E-5	IMPLEMENTATION
if there is no data type for this node and we're at the end of the path (top most dot node) then this might be a java constant.	WITHOUT_CLASSIFICATION	0.9999999681308366	WITHOUT_CLASSIFICATION	3.18691632892519E-8	IMPLEMENTATION
the property is a collection	WITHOUT_CLASSIFICATION	0.9998771677851115	WITHOUT_CLASSIFICATION	1.2283221488850767E-4	IMPLEMENTATION
the property is a component	WITHOUT_CLASSIFICATION	0.9999487265269348	WITHOUT_CLASSIFICATION	5.1273473065128535E-5	IMPLEMENTATION
the property is another class..	WITHOUT_CLASSIFICATION	0.9998067394404276	WITHOUT_CLASSIFICATION	1.9326055957244237E-4	IMPLEMENTATION
otherwise this is a primitive type.	WITHOUT_CLASSIFICATION	0.9987078152023398	WITHOUT_CLASSIFICATION	0.0012921847976602283	IMPLEMENTATION
foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9996438529655967	WITHOUT_CLASSIFICATION	3.5614703440332146E-4	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9988959360457178	WITHOUT_CLASSIFICATION	0.0011040639542822255	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9997755344620861	WITHOUT_CLASSIFICATION	2.244655379137862E-4	IMPLEMENTATION
in non-select queries the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999882416079217	WITHOUT_CLASSIFICATION	1.1758392078227122E-5	IMPLEMENTATION
this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9998883028133252	WITHOUT_CLASSIFICATION	1.1169718667486309E-4	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9988959360457178	WITHOUT_CLASSIFICATION	0.0011040639542822255	IMPLEMENTATION
even though we might find a pre-existing element by join path we may not be able to reuse it	WITHOUT_CLASSIFICATION	0.9939156799154206	WITHOUT_CLASSIFICATION	0.00608432008457944	IMPLEMENTATION
note addduplicatealias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9996893555884369	WITHOUT_CLASSIFICATION	3.1064441156315313E-4	IMPLEMENTATION
if the from-clauses are the same we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9995183745924869	WITHOUT_CLASSIFICATION	4.816254075131471E-4	IMPLEMENTATION
again null != null here	WITHOUT_CLASSIFICATION	0.9998948119204581	WITHOUT_CLASSIFICATION	1.051880795419158E-4	IMPLEMENTATION
if this is an implied join in a from element then use the impled join type which is part of the tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999999921438419	WITHOUT_CLASSIFICATION	7.856158014388304E-9	IMPLEMENTATION
otherwise (subquery case) dont reuse the fromelement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999638138696741	WITHOUT_CLASSIFICATION	3.618613032593894E-5	IMPLEMENTATION
we know only the lhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9986961831219234	WITHOUT_CLASSIFICATION	0.0013038168780765149	IMPLEMENTATION
the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9997075231139086	WITHOUT_CLASSIFICATION	2.9247688609141786E-4	IMPLEMENTATION
only the identifier property field name can be a reference to the associated entity's pk	WITHOUT_CLASSIFICATION	0.9996273100709496	WITHOUT_CLASSIFICATION	3.726899290504222E-4	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9994841535874144	WITHOUT_CLASSIFICATION	5.15846412585543E-4	IMPLEMENTATION
append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9990791563360314	WITHOUT_CLASSIFICATION	9.208436639685664E-4	IMPLEMENTATION
if the lhs is a collection use collectionpropertymapping	WITHOUT_CLASSIFICATION	0.9999476997938094	WITHOUT_CLASSIFICATION	5.230020619061247E-5	IMPLEMENTATION
tell the destination fromelement to 'includesubclasses'.	WITHOUT_CLASSIFICATION	0.9994888528292117	WITHOUT_CLASSIFICATION	5.111471707883087E-4	IMPLEMENTATION
use theta style (for regression) move the node up after the origin node.	WITHOUT_CLASSIFICATION	0.9995560583127667	WITHOUT_CLASSIFICATION	4.4394168723329707E-4	IMPLEMENTATION
don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9998806058538864	WITHOUT_CLASSIFICATION	1.1939414611367299E-4	IMPLEMENTATION
for expected parameter type injection we expect that the lhs represents some form of property ref and that the children of the in-list represent one-or-more params.	WITHOUT_CLASSIFICATION	0.9999104161389507	WITHOUT_CLASSIFICATION	8.95838610492505E-5	IMPLEMENTATION
we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999237847402938	WITHOUT_CLASSIFICATION	7.621525970620935E-5	IMPLEMENTATION
we have something like "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9967681755748954	WITHOUT_CLASSIFICATION	0.0032318244251046306	IMPLEMENTATION
we have something like "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9967681755748954	WITHOUT_CLASSIFICATION	0.0032318244251046306	IMPLEMENTATION
we know only the rhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9986961831219234	WITHOUT_CLASSIFICATION	0.0013038168780765149	IMPLEMENTATION
handle the (assumed) valid cases #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9961987725953592	WITHOUT_CLASSIFICATION	0.0038012274046407765	IMPLEMENTATION
one or the other needs to be a datetime for us to get into this method in the first place	WITHOUT_CLASSIFICATION	0.9907756094480202	WITHOUT_CLASSIFICATION	0.009224390551979803	IMPLEMENTATION
#3 - note that this is also true of "datetime - param"	WITHOUT_CLASSIFICATION	0.9998375906252112	WITHOUT_CLASSIFICATION	1.6240937478895424E-4	IMPLEMENTATION
#2	WITHOUT_CLASSIFICATION	0.9996080887429677	WITHOUT_CLASSIFICATION	3.9191125703229475E-4	IMPLEMENTATION
generate the inner join -- the elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999133944994782	WITHOUT_CLASSIFICATION	8.660550052181519E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9995509144132142	WITHOUT_CLASSIFICATION	4.490855867857873E-4	IMPLEMENTATION
the 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999642009675821	WITHOUT_CLASSIFICATION	3.57990324178845E-5	IMPLEMENTATION
add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.997803710367408	WITHOUT_CLASSIFICATION	0.0021962896325920006	IMPLEMENTATION
sometimes use the element table alias sometimes use the umm collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9997700239359991	WITHOUT_CLASSIFICATION	2.2997606400088885E-4	IMPLEMENTATION
now set the text for this node. it should be the element columns.	WITHOUT_CLASSIFICATION	0.999785130782878	WITHOUT_CLASSIFICATION	2.1486921712204722E-4	IMPLEMENTATION
get the function return value type based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999867260520621	WITHOUT_CLASSIFICATION	1.3273947938002953E-5	IMPLEMENTATION
this will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9996490002723033	WITHOUT_CLASSIFICATION	3.509997276966337E-4	IMPLEMENTATION
mutation depends on the types of nodes invloved	WITHOUT_CLASSIFICATION	0.9988381268808119	WITHOUT_CLASSIFICATION	0.0011618731191881603	IMPLEMENTATION
"pass along" our initial embedded parameter node(s) to the first generated sql fragment so that it can be handled later for parameter binding	WITHOUT_CLASSIFICATION	0.9999771952617276	WITHOUT_CLASSIFICATION	2.280473827248109E-5	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9992452488275558	WITHOUT_CLASSIFICATION	7.547511724441086E-4	IMPLEMENTATION
generated select expressions are already resolved nothing to do.	WITHOUT_CLASSIFICATION	0.9999836166420031	WITHOUT_CLASSIFICATION	1.638335799694142E-5	IMPLEMENTATION
the path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999943247701208	WITHOUT_CLASSIFICATION	5.675229879112463E-6	IMPLEMENTATION
the hql class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999139629802813	WITHOUT_CLASSIFICATION	8.603701971874933E-5	IMPLEMENTATION
associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9997725381160294	WITHOUT_CLASSIFICATION	2.2746188397050276E-4	IMPLEMENTATION
try the parent fromclause	WITHOUT_CLASSIFICATION	0.999827982447457	WITHOUT_CLASSIFICATION	1.720175525430361E-4	IMPLEMENTATION
add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999252743036864	WITHOUT_CLASSIFICATION	7.472569631368167E-5	IMPLEMENTATION
make sure that all from elements registered with this from clause are actually in the ast.	WITHOUT_CLASSIFICATION	0.9999937022764244	WITHOUT_CLASSIFICATION	6.2977235756210364E-6	IMPLEMENTATION
invoke setscalarcolumntext on each constructor argument.	WITHOUT_CLASSIFICATION	0.9986024192167766	WITHOUT_CLASSIFICATION	0.0013975807832234172	IMPLEMENTATION
collect the select expressions skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999934264277062	WITHOUT_CLASSIFICATION	6.57357229385258E-6	IMPLEMENTATION
return an empty type array	WITHOUT_CLASSIFICATION	0.9997574400526256	WITHOUT_CLASSIFICATION	2.4255994737452412E-4	IMPLEMENTATION
constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9996678883523262	WITHOUT_CLASSIFICATION	3.321116476737874E-4	IMPLEMENTATION
this is the exception returned by reflecthelper.getconstructor() if it cannot locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999830850881795	WITHOUT_CLASSIFICATION	1.6914911820480453E-5	IMPLEMENTATION
if there is no order by make one	WITHOUT_CLASSIFICATION	0.999978330910888	WITHOUT_CLASSIFICATION	2.166908911211467E-5	IMPLEMENTATION
find the where if there is no where find the from	WITHOUT_CLASSIFICATION	0.999993573113116	WITHOUT_CLASSIFICATION	6.426886884060828E-6	IMPLEMENTATION
now inject the newly built order by into the tree	WITHOUT_CLASSIFICATION	0.9997095858872437	WITHOUT_CLASSIFICATION	2.9041411275635223E-4	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9992452488275558	WITHOUT_CLASSIFICATION	7.547511724441086E-4	IMPLEMENTATION
render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999026887440613	WITHOUT_CLASSIFICATION	9.731125593869865E-5	IMPLEMENTATION
class names in the from clause result in a joinsequence (the old fromparser does this).	WITHOUT_CLASSIFICATION	0.9999998092935768	WITHOUT_CLASSIFICATION	1.9070642324485574E-7	IMPLEMENTATION
for many-to-many joins use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999937197780834	WITHOUT_CLASSIFICATION	6.280221916623371E-6	IMPLEMENTATION
otherwise use the property mapping.	WITHOUT_CLASSIFICATION	0.9984506303178269	WITHOUT_CLASSIFICATION	0.0015493696821731108	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.993445808196242	WITHOUT_CLASSIFICATION	0.006554191803757987	IMPLEMENTATION
if the property is a special collection property name return a collectionpropertymapping.	WITHOUT_CLASSIFICATION	0.9999904358971199	WITHOUT_CLASSIFICATION	9.564102880134648E-6	IMPLEMENTATION
collection of components.	WITHOUT_CLASSIFICATION	0.9998757874027305	WITHOUT_CLASSIFICATION	1.242125972694268E-4	IMPLEMENTATION
make sure the lhs is "assignable"	WITHOUT_CLASSIFICATION	0.9996962925752725	WITHOUT_CLASSIFICATION	3.0370742472755733E-4	IMPLEMENTATION
false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9981184436960265	WITHOUT_CLASSIFICATION	0.0018815563039734616	IMPLEMENTATION
register the fromelement with the from clause now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9998787393773791	WITHOUT_CLASSIFICATION	1.2126062262087741E-4	IMPLEMENTATION
currently allowed	WITHOUT_CLASSIFICATION	0.9998480495351136	WITHOUT_CLASSIFICATION	1.519504648863545E-4	IMPLEMENTATION
hhh-276 implied joins in a subselect where clause - the destination needs to be added to the destination's from clause. not sure if this is will fix everything but it works.	WITHOUT_CLASSIFICATION	0.9999773752635273	WITHOUT_CLASSIFICATION	2.2624736472739278E-5	IMPLEMENTATION
return classalias == null ? classname classalias	WITHOUT_CLASSIFICATION	0.9999284349495039	WITHOUT_CLASSIFICATION	7.156505049607668E-5	IMPLEMENTATION
this is an explicit from element.	WITHOUT_CLASSIFICATION	0.9998890241851933	WITHOUT_CLASSIFICATION	1.1097581480662284E-4	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9997644966059606	WITHOUT_CLASSIFICATION	2.3550339403947192E-4	IMPLEMENTATION
if it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9857141078471605	WITHOUT_CLASSIFICATION	0.014285892152839492	IMPLEMENTATION
since this is an explicit from element it can't be implied in the from clause.	WITHOUT_CLASSIFICATION	0.9999991228114119	WITHOUT_CLASSIFICATION	8.77188588246711E-7	IMPLEMENTATION
do nothing eplicit from elements are always in the projection list.	WITHOUT_CLASSIFICATION	0.9999985832208664	WITHOUT_CLASSIFICATION	1.4167791335030287E-6	IMPLEMENTATION
propertyname refers to something like collection.size	WITHOUT_CLASSIFICATION	0.9914466029849724	WITHOUT_CLASSIFICATION	0.008553397015027536	IMPLEMENTATION
property name is a sub-path of a component	WITHOUT_CLASSIFICATION	0.9999437653933946	WITHOUT_CLASSIFICATION	5.623460660548704E-5	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9997755344620861	WITHOUT_CLASSIFICATION	2.244655379137862E-4	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.999997200472796	WITHOUT_CLASSIFICATION	2.799527203932536E-6	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9992452488275558	WITHOUT_CLASSIFICATION	7.547511724441086E-4	IMPLEMENTATION
dotnode uses null here	WITHOUT_CLASSIFICATION	0.9995876198072253	WITHOUT_CLASSIFICATION	4.123801927746927E-4	IMPLEMENTATION
we represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9997681118073269	WITHOUT_CLASSIFICATION	2.3188819267295889E-4	IMPLEMENTATION
we are the lhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999664565971673	WITHOUT_CLASSIFICATION	3.354340283265282E-5	IMPLEMENTATION
we are the rhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999664565971673	WITHOUT_CLASSIFICATION	3.354340283265282E-5	IMPLEMENTATION
we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9997681118073269	WITHOUT_CLASSIFICATION	2.3188819267295889E-4	IMPLEMENTATION
early exit!!! return so the resolve call explicitly coming from dotnode can resolve this	WITHOUT_CLASSIFICATION	0.99999211805021	WITHOUT_CLASSIFICATION	7.881949789925194E-6	IMPLEMENTATION
assume this ident's text does not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9579992200148894	WITHOUT_CLASSIFICATION	0.042000779985110634	IMPLEMENTATION
just ignore it for now it'll get resolved later	WITHOUT_CLASSIFICATION	0.9999817687945195	WITHOUT_CLASSIFICATION	1.8231205480471548E-5	IMPLEMENTATION
this is not actually a constant but a reference to from element.	WITHOUT_CLASSIFICATION	0.999626167164592	WITHOUT_CLASSIFICATION	3.7383283540800107E-4	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9998954336269792	WITHOUT_CLASSIFICATION	1.0456637302090828E-4	IMPLEMENTATION
these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9895767472629409	WITHOUT_CLASSIFICATION	0.010423252737059213	IMPLEMENTATION
used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9998855223844578	WITHOUT_CLASSIFICATION	1.1447761554208757E-4	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.7666712877741044	WITHOUT_CLASSIFICATION	0.2333287122258956	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.7666712877741044	WITHOUT_CLASSIFICATION	0.2333287122258956	IMPLEMENTATION
naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999953132953248	WITHOUT_CLASSIFICATION	4.686704675152744E-6	IMPLEMENTATION
this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9769071638792566	WITHOUT_CLASSIFICATION	0.023092836120743337	IMPLEMENTATION
do not over-write the column text as that has already been "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9890159195017111	WITHOUT_CLASSIFICATION	0.010984080498288914	IMPLEMENTATION
for some reason the antlr.commonast initialization routines force this method to get called twice. the first time with an empty string	WITHOUT_CLASSIFICATION	0.9945142299370336	WITHOUT_CLASSIFICATION	0.005485770062966397	IMPLEMENTATION
look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.999991975179588	WITHOUT_CLASSIFICATION	8.024820411856905E-6	IMPLEMENTATION
add to the query spaces.	WITHOUT_CLASSIFICATION	0.9996285720372755	WITHOUT_CLASSIFICATION	3.71427962724467E-4	IMPLEMENTATION
if the from element isn't in the same clause create a new from element.	WITHOUT_CLASSIFICATION	0.9999999524744168	WITHOUT_CLASSIFICATION	4.752558323772176E-8	IMPLEMENTATION
this is the root level node. generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999367202201046	WITHOUT_CLASSIFICATION	6.327977989538428E-5	IMPLEMENTATION
correlated subqueries create 'special' implied from nodes because correlated subselects can't use an ansi-style join	WITHOUT_CLASSIFICATION	0.9999872741445324	WITHOUT_CLASSIFICATION	1.2725855467659279E-5	IMPLEMENTATION
super-duper-classic-parser-regression-testing-mojo-magic	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
a collection of entities	WITHOUT_CLASSIFICATION	0.9998694783106566	WITHOUT_CLASSIFICATION	1.3052168934328849E-4	IMPLEMENTATION
a collection of components	WITHOUT_CLASSIFICATION	0.9998844068811684	WITHOUT_CLASSIFICATION	1.1559311883151908E-4	IMPLEMENTATION
a collection of scalar elements	WITHOUT_CLASSIFICATION	0.9999680526007612	WITHOUT_CLASSIFICATION	3.19473992387519E-5	IMPLEMENTATION
according to both the ansi-sql and ejb3 specs trim can either take exactly one parameter or a variable number of parameters between 1 and 4. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if only <trim specification> is omitted both is assumed if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.9999815224736807	WITHOUT_CLASSIFICATION	1.847752631933587E-5	IMPLEMENTATION
don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999584550475745	WITHOUT_CLASSIFICATION	4.1544952425569246E-5	IMPLEMENTATION
treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999825679134671	WITHOUT_CLASSIFICATION	1.743208653289586E-5	IMPLEMENTATION
( implied && dotnode.usethetastyleimplicitjoins ) ) {	WITHOUT_CLASSIFICATION	0.9997664548696443	WITHOUT_CLASSIFICATION	2.3354513035565058E-4	IMPLEMENTATION
the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9990662929866554	WITHOUT_CLASSIFICATION	9.337070133446914E-4	IMPLEMENTATION
create the from element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999997257084577	WITHOUT_CLASSIFICATION	2.742915422699396E-7	IMPLEMENTATION
if the join is implied then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999655175638156	WITHOUT_CLASSIFICATION	3.448243618442885E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
the associated entity is implied but it must be included in the from. the collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999965814826968	WITHOUT_CLASSIFICATION	3.41851730330514E-6	IMPLEMENTATION
tag this node as a join. don't include subclasses in the join. this is a clollection join.	WITHOUT_CLASSIFICATION	0.9999931158864992	WITHOUT_CLASSIFICATION	6.884113500886592E-6	IMPLEMENTATION
get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999881938694299	WITHOUT_CLASSIFICATION	1.1806130570058915E-5	IMPLEMENTATION
origin path implied columns classalias	WITHOUT_CLASSIFICATION	0.999761129713708	WITHOUT_CLASSIFICATION	2.3887028629196417E-4	IMPLEMENTATION
implied	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
for implied many-to-many just add the end join.	WITHOUT_CLASSIFICATION	0.9999623231251963	WITHOUT_CLASSIFICATION	3.767687480379671E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997558410422343	WITHOUT_CLASSIFICATION	2.441589577658066E-4	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9997846392741839	WITHOUT_CLASSIFICATION	2.1536072581610893E-4	IMPLEMENTATION
this causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9996045701508457	WITHOUT_CLASSIFICATION	3.9542984915437305E-4	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9998933767242871	WITHOUT_CLASSIFICATION	1.0662327571279598E-4	IMPLEMENTATION
frontbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999844086288037	WITHOUT_CLASSIFICATION	1.5591371196278796E-5	IMPLEMENTATION
the types represented in the sql result set. @return the types represented in the sql result set.	WITHOUT_CLASSIFICATION	0.9999096953145851	WITHOUT_CLASSIFICATION	9.03046854149533E-5	IMPLEMENTATION
public type[] getsqlresulttypes() {return sqlresulttypes}	WITHOUT_CLASSIFICATION	0.9999518754175317	WITHOUT_CLASSIFICATION	4.812458246829022E-5	IMPLEMENTATION
first collect all of the select expressions. note this must be done before invoking setscalarcolumntext() because setscalarcolumntext() changes the ast!!!	WITHOUT_CLASSIFICATION	0.9997512406049184	WITHOUT_CLASSIFICATION	2.4875939508166615E-4	IMPLEMENTATION
first allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9998915215316967	WITHOUT_CLASSIFICATION	1.0847846830337515E-4	IMPLEMENTATION
sqlresulttypelist.addall( constructorargumenttypelist )	WITHOUT_CLASSIFICATION	0.9995246458529513	WITHOUT_CLASSIFICATION	4.7535414704869754E-4	IMPLEMENTATION
if the data type is not an association type it could not have been in the from clause.	WITHOUT_CLASSIFICATION	0.9999948887353848	WITHOUT_CLASSIFICATION	5.111264615198152E-6	IMPLEMENTATION
sqlresulttypelist.add( type )	WITHOUT_CLASSIFICATION	0.9998508024056644	WITHOUT_CLASSIFICATION	1.4919759433555413E-4	IMPLEMENTATION
always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9998230887323305	WITHOUT_CLASSIFICATION	1.769112676695197E-4	IMPLEMENTATION
add the fetched entities	WITHOUT_CLASSIFICATION	0.9998329976961816	WITHOUT_CLASSIFICATION	1.6700230381835936E-4	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9998083734632452	WITHOUT_CLASSIFICATION	1.9162653675472565E-4	IMPLEMENTATION
function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9940674917127176	WITHOUT_CLASSIFICATION	0.005932508287282419	IMPLEMENTATION
if there are any scalars (non-entities) selected render the select column aliases.	WITHOUT_CLASSIFICATION	0.999999626605207	WITHOUT_CLASSIFICATION	3.7339479289573597E-7	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
arraylist sqlresulttypelist	WITHOUT_CLASSIFICATION	0.999716907959248	WITHOUT_CLASSIFICATION	2.830920407521547E-4	IMPLEMENTATION
sqlresulttypes = ( type[] ) sqlresulttypelist.toarray( new type[sqlresulttypelist.size()] )	WITHOUT_CLASSIFICATION	0.9995994239764032	WITHOUT_CLASSIFICATION	4.005760235968096E-4	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9964717605043574	WITHOUT_CLASSIFICATION	0.0035282394956425976	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.5359355428947685	WITHOUT_CLASSIFICATION	0.4640644571052314	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999699440798305	WITHOUT_CLASSIFICATION	3.005592016950645E-5	IMPLEMENTATION
generate an 2d array of column names the first dimension is parallel with the return types array. the second dimension is the list of column names for each type.	WITHOUT_CLASSIFICATION	0.9999995692225873	WITHOUT_CLASSIFICATION	4.307774127647838E-7	IMPLEMENTATION
generate the select expression.	WITHOUT_CLASSIFICATION	0.9999129673264179	WITHOUT_CLASSIFICATION	8.703267358204613E-5	IMPLEMENTATION
union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9965749699775576	WITHOUT_CLASSIFICATION	0.003425030022442451	IMPLEMENTATION
skip 'distinct' and 'all' so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9997456791899446	WITHOUT_CLASSIFICATION	2.5432081005544486E-4	IMPLEMENTATION
create sql_token nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999866093367429	WITHOUT_CLASSIFICATION	1.3390663257085607E-5	IMPLEMENTATION
generate the property select tokens.	WITHOUT_CLASSIFICATION	0.999913820914629	WITHOUT_CLASSIFICATION	8.617908537103913E-5	IMPLEMENTATION
get the function name node.	WITHOUT_CLASSIFICATION	0.9997033915483752	WITHOUT_CLASSIFICATION	2.9660845162482105E-4	IMPLEMENTATION
method expressions in a select should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9998381300649638	WITHOUT_CLASSIFICATION	1.6186993503621545E-4	IMPLEMENTATION
if this is 'elements' then create a new from element.	WITHOUT_CLASSIFICATION	0.9999978527918234	WITHOUT_CLASSIFICATION	2.147208176693153E-6	IMPLEMENTATION
not elements(x)	WITHOUT_CLASSIFICATION	0.9944650312085036	WITHOUT_CLASSIFICATION	0.005534968791496334	IMPLEMENTATION
dialect function	WITHOUT_CLASSIFICATION	0.9994900491334127	WITHOUT_CLASSIFICATION	5.099508665873129E-4	IMPLEMENTATION
collection 'property function'	WITHOUT_CLASSIFICATION	0.9997365414807982	WITHOUT_CLASSIFICATION	2.634585192018853E-4	IMPLEMENTATION
if the constant is an ident figure out what it means	WITHOUT_CLASSIFICATION	0.9996329494605778	WITHOUT_CLASSIFICATION	3.6705053942221686E-4	IMPLEMENTATION
ident is a class alias in the from.	WITHOUT_CLASSIFICATION	0.9999857392581903	WITHOUT_CLASSIFICATION	1.426074180957695E-5	IMPLEMENTATION
resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9997979388479716	WITHOUT_CLASSIFICATION	2.0206115202827752E-4	IMPLEMENTATION
otherwise it's a literal.	WITHOUT_CLASSIFICATION	0.997295222136734	WITHOUT_CLASSIFICATION	0.0027047778632660552	IMPLEMENTATION
the name of an entity class	WITHOUT_CLASSIFICATION	0.9999852536184426	WITHOUT_CLASSIFICATION	1.4746381557412826E-5	IMPLEMENTATION
the class discriminator value	WITHOUT_CLASSIFICATION	0.9999650512314913	WITHOUT_CLASSIFICATION	3.4948768508777223E-5	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999342951118215	WITHOUT_CLASSIFICATION	6.570488817838009E-5	IMPLEMENTATION
add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999562301156727	WITHOUT_CLASSIFICATION	4.3769884327210466E-5	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.999829067788671	WITHOUT_CLASSIFICATION	1.7093221132892576E-4	IMPLEMENTATION
child == parent.getfirstchild()	WITHOUT_CLASSIFICATION	0.9999202498081661	WITHOUT_CLASSIFICATION	7.97501918338096E-5	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.999829067788671	WITHOUT_CLASSIFICATION	1.7093221132892576E-4	IMPLEMENTATION
filter conditions need to be inserted before the hql where condition and the theta join node. this is because org.hibernate.loader.loader binds the filter parameters first then it binds all the hql query parameters see org.hibernate.loader.loader.processfilterparameters().	WITHOUT_CLASSIFICATION	0.9980466011097889	WITHOUT_CLASSIFICATION	0.0019533988902110454	IMPLEMENTATION
put the filters node before the hql condition and theta joins	WITHOUT_CLASSIFICATION	0.999755977231659	WITHOUT_CLASSIFICATION	2.4402276834091838E-4	IMPLEMENTATION
add the current fragment to the filters node	WITHOUT_CLASSIFICATION	0.9991713511450492	WITHOUT_CLASSIFICATION	8.286488549507793E-4	IMPLEMENTATION
create a new theta_joins node as a parent of all filters	WITHOUT_CLASSIFICATION	0.999967633842393	WITHOUT_CLASSIFICATION	3.2366157606981924E-5	IMPLEMENTATION
put the theta_joins node before the hql condition after the filters.	WITHOUT_CLASSIFICATION	0.9997049003730448	WITHOUT_CLASSIFICATION	2.9509962695520623E-4	IMPLEMENTATION
add the current fragment to the theta_joins node	WITHOUT_CLASSIFICATION	0.9991713511450492	WITHOUT_CLASSIFICATION	8.286488549507793E-4	IMPLEMENTATION
first try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9998067045123581	WITHOUT_CLASSIFICATION	1.932954876418909E-4	IMPLEMENTATION
unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9984402693450043	WITHOUT_CLASSIFICATION	0.0015597306549956543	IMPLEMENTATION
if that didn't work try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999419196101528	WITHOUT_CLASSIFICATION	5.8080389847172745E-5	IMPLEMENTATION
implicit joins use theta style (where pk = fk) explicit joins use join (after from)	WITHOUT_CLASSIFICATION	0.9988346577715254	WITHOUT_CLASSIFICATION	0.0011653422284746673	IMPLEMENTATION
locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9988493427479039	WITHOUT_CLASSIFICATION	0.0011506572520960877	IMPLEMENTATION
determine the type of the first argument	WITHOUT_CLASSIFICATION	0.9999958941704604	WITHOUT_CLASSIFICATION	4.105829539606783E-6	IMPLEMENTATION
use the dot node to emit the first column name. create the column names folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999369194455717	WITHOUT_CLASSIFICATION	6.308055442827613E-5	IMPLEMENTATION
note this simply constructs a "raw" sql_token representing the where fragment and injects this into the tree. this "works" however it is probably not the best long-term solution. at some point we probably want to apply an additional grammar to properly tokenize this where fragment into constituent parts focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.6924892131868431	WITHOUT_CLASSIFICATION	0.30751078681315697	IMPLEMENTATION
append the text of the current node.	WITHOUT_CLASSIFICATION	0.9991184937146663	WITHOUT_CLASSIFICATION	8.815062853337272E-4	IMPLEMENTATION
if the node has a first child recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999842515239021	WITHOUT_CLASSIFICATION	1.5748476097874848E-5	IMPLEMENTATION
if there is a second child (rhs) recurse into that child.	WITHOUT_CLASSIFICATION	0.999986595338304	WITHOUT_CLASSIFICATION	1.3404661695891098E-5	IMPLEMENTATION
iterate through the aliasjoinsequence pairs and generate sql token nodes.	WITHOUT_CLASSIFICATION	0.9997712367992796	WITHOUT_CLASSIFICATION	2.2876320072027416E-4	IMPLEMENTATION
if the from element represents a join_fragment and it is a theta-style join convert its type from join_fragment to from_fragment	WITHOUT_CLASSIFICATION	0.9999963766286367	WITHOUT_CLASSIFICATION	3.6233713634264352E-6	IMPLEMENTATION
this is used during sqlgenerator processing	WITHOUT_CLASSIFICATION	0.9997096089217268	WITHOUT_CLASSIFICATION	2.9039107827324583E-4	IMPLEMENTATION
if there is a from fragment and the from element is an explicit then add the from part.	WITHOUT_CLASSIFICATION	0.9999999216291119	WITHOUT_CLASSIFICATION	7.837088805871586E-8	IMPLEMENTATION
&& stringhelper.isnotempty( frag )	WITHOUT_CLASSIFICATION	0.999536030030808	WITHOUT_CLASSIFICATION	4.63969969192082E-4	IMPLEMENTATION
the from fragment will probably begin with ' '. remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999963011012862	WITHOUT_CLASSIFICATION	3.6988987136949966E-6	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9999320306838594	WITHOUT_CLASSIFICATION	6.796931614061012E-5	IMPLEMENTATION
select p from p in class eg.person order by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999961461807187	WITHOUT_CLASSIFICATION	3.853819281223786E-6	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999501558337024	WITHOUT_CLASSIFICATION	4.9844166297590376E-5	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9998649850866117	WITHOUT_CLASSIFICATION	1.350149133883186E-4	IMPLEMENTATION
default mode	WITHOUT_CLASSIFICATION	0.999957779203453	WITHOUT_CLASSIFICATION	4.222079654700509E-5	IMPLEMENTATION
queryjoinfragment join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.999401039951238	WITHOUT_CLASSIFICATION	5.989600487620069E-4	IMPLEMENTATION
reset the dotcount (but not the path) after reset!	WITHOUT_CLASSIFICATION	0.9870285265763796	WITHOUT_CLASSIFICATION	0.012971473423620436	IMPLEMENTATION
after reset!	WITHOUT_CLASSIFICATION	0.9995200465383342	WITHOUT_CLASSIFICATION	4.7995346166587055E-4	IMPLEMENTATION
we don't need to worry about any condition in the on clause here (tofromfragmentstring) since anything in the on condition is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9998033063193005	WITHOUT_CLASSIFICATION	1.9669368069953345E-4	IMPLEMENTATION
bit_length feels a bit broken to me. we have to cast to char in order to pass when a numeric value is supplied. but of course the answers given will be wildly different for these two datatypes. 1234.5678 will be 9 bytes as a char string but will be 8 or 16 bytes as a true numeric. jay nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999999125318892	WITHOUT_CLASSIFICATION	8.746811074825085E-8	IMPLEMENTATION
dotcount>=2	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
do the corresponding rhs	WITHOUT_CLASSIFICATION	0.9992159908094512	WITHOUT_CLASSIFICATION	7.840091905486612E-4	IMPLEMENTATION
if its "id"	WITHOUT_CLASSIFICATION	0.9999503440429405	WITHOUT_CLASSIFICATION	4.965595705957091E-5	IMPLEMENTATION
or its the id property name	WITHOUT_CLASSIFICATION	0.9992968296644542	WITHOUT_CLASSIFICATION	7.031703355458936E-4	IMPLEMENTATION
join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.999401039951238	WITHOUT_CLASSIFICATION	5.989600487620069E-4	IMPLEMENTATION
important!!	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
string[] keycols = collpersister.getkeycolumnnames()	WITHOUT_CLASSIFICATION	0.9994034283330673	WITHOUT_CLASSIFICATION	5.965716669327351E-4	IMPLEMENTATION
an association	WITHOUT_CLASSIFICATION	0.9999278058646777	WITHOUT_CLASSIFICATION	7.219413532232265E-5	IMPLEMENTATION
allow index() function	WITHOUT_CLASSIFICATION	0.9991599930133083	WITHOUT_CLASSIFICATION	8.400069866916959E-4	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9949285306387352	WITHOUT_CLASSIFICATION	0.005071469361264842	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999501558337024	WITHOUT_CLASSIFICATION	4.9844166297590376E-5	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
collections of values	WITHOUT_CLASSIFICATION	0.9999704595089159	WITHOUT_CLASSIFICATION	2.9540491084085938E-5	IMPLEMENTATION
opening paren in new foo ( )	WITHOUT_CLASSIFICATION	0.9999797148648925	WITHOUT_CLASSIFICATION	2.0285135107622247E-5	IMPLEMENTATION
if we are inside a new result() but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999613063564224	WITHOUT_CLASSIFICATION	3.869364357761789E-5	IMPLEMENTATION
special case	WITHOUT_CLASSIFICATION	0.999765256155864	WITHOUT_CLASSIFICATION	2.3474384413616213E-4	IMPLEMENTATION
the name of an sql function	WITHOUT_CLASSIFICATION	0.9999420564139933	WITHOUT_CLASSIFICATION	5.794358600667958E-5	IMPLEMENTATION
null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.999999529042421	WITHOUT_CLASSIFICATION	4.709575789584443E-7	IMPLEMENTATION
this is basically a copy/paste of orderbyparser might be worth refactoring	WITHOUT_CLASSIFICATION	0.999920991946951	WITHOUT_CLASSIFICATION	7.900805304898144E-5	IMPLEMENTATION
select p from p in class eg.person group by p.name p.address p	WITHOUT_CLASSIFICATION	0.999993882902527	WITHOUT_CLASSIFICATION	6.117097473016923E-6	IMPLEMENTATION
return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999439405417003	WITHOUT_CLASSIFICATION	5.605945829975791E-5	IMPLEMENTATION
register collection role	WITHOUT_CLASSIFICATION	0.9994095083721835	WITHOUT_CLASSIFICATION	5.904916278164872E-4	IMPLEMENTATION
the keyword used to specify an identity column if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999947211390824	WITHOUT_CLASSIFICATION	5.2788609176184975E-6	IMPLEMENTATION
.getelementpropertymapping()	WITHOUT_CLASSIFICATION	0.999716907959248	WITHOUT_CLASSIFICATION	2.830920407521547E-4	IMPLEMENTATION
crossjoins.add(name)	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
ie no select clause in hql	WITHOUT_CLASSIFICATION	0.9999851766109188	WITHOUT_CLASSIFICATION	1.4823389081177247E-5	IMPLEMENTATION
initialize the set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999012811376806	WITHOUT_CLASSIFICATION	9.871886231936043E-5	IMPLEMENTATION
ie. no select clause	WITHOUT_CLASSIFICATION	0.9998476438513186	WITHOUT_CLASSIFICATION	1.5235614868127612E-4	IMPLEMENTATION
there _was_ a select clause	WITHOUT_CLASSIFICATION	0.999961784434916	WITHOUT_CLASSIFICATION	3.821556508398734E-5	IMPLEMENTATION
return the concrete type or the underlying type if a concrete type was not specified	WITHOUT_CLASSIFICATION	0.9999927440297154	WITHOUT_CLASSIFICATION	7.25597028466257E-6	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
q.addcollection(collectionname collectionrole)	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9884218528139191	WITHOUT_CLASSIFICATION	0.011578147186080872	IMPLEMENTATION
can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9992483317483766	WITHOUT_CLASSIFICATION	7.516682516235337E-4	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9994875636303157	WITHOUT_CLASSIFICATION	5.124363696844239E-4	IMPLEMENTATION
this is the legacy behaviour for hql queries	WITHOUT_CLASSIFICATION	0.9999109479213221	WITHOUT_CLASSIFICATION	8.905207867785797E-5	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9922851295666064	WITHOUT_CLASSIFICATION	0.007714870433393513	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9922851295666064	WITHOUT_CLASSIFICATION	0.007714870433393513	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces early exit!!!!	WITHOUT_CLASSIFICATION	0.9999659586130586	WITHOUT_CLASSIFICATION	3.4041386941450596E-5	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9922851295666064	WITHOUT_CLASSIFICATION	0.007714870433393513	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9922851295666064	WITHOUT_CLASSIFICATION	0.007714870433393513	IMPLEMENTATION
need this since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9953311509826547	WITHOUT_CLASSIFICATION	0.004668849017345242	IMPLEMENTATION
tokens that close a sub expression tokens that open a sub expression tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9908504143189715	WITHOUT_CLASSIFICATION	0.009149585681028556	IMPLEMENTATION
expressionterminators.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
expressionopeners.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource) early exit!!!!	WITHOUT_CLASSIFICATION	0.9979996407122524	WITHOUT_CLASSIFICATION	0.002000359287747453	IMPLEMENTATION
otherwise a trim-specification and/or a trim-character have been specified we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character (what is to be trimmed off?) the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.7113060870966226	WITHOUT_CLASSIFICATION	0.2886939129033774	IMPLEMENTATION
inside a between and expression	WITHOUT_CLASSIFICATION	0.9987576796749278	WITHOUT_CLASSIFICATION	0.0012423203250722574	IMPLEMENTATION
were an odd or even number of nots encountered the join string built up by compound paths inside this expression a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999699793908131	WITHOUT_CLASSIFICATION	3.002060918684139E-5	IMPLEMENTATION
ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9996755990457108	WITHOUT_CLASSIFICATION	3.244009542891363E-4	IMPLEMENTATION
cope with []	WITHOUT_CLASSIFICATION	0.9996919066721823	WITHOUT_CLASSIFICATION	3.080933278176997E-4	IMPLEMENTATION
cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9992317079456748	WITHOUT_CLASSIFICATION	7.68292054325196E-4	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999672422352014	WITHOUT_CLASSIFICATION	3.275776479858866E-5	IMPLEMENTATION
cope with a subselect	WITHOUT_CLASSIFICATION	0.9997179758248012	WITHOUT_CLASSIFICATION	2.8202417519880167E-4	IMPLEMENTATION
cope with special cases of and not ()	WITHOUT_CLASSIFICATION	0.9995602612785695	WITHOUT_CLASSIFICATION	4.39738721430587E-4	IMPLEMENTATION
close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999462832484103	WITHOUT_CLASSIFICATION	5.3716751589663124E-5	IMPLEMENTATION
take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9991190457979541	WITHOUT_CLASSIFICATION	8.809542020458498E-4	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9998264464242107	WITHOUT_CLASSIFICATION	1.7355357578922463E-4	IMPLEMENTATION
process a token mapping oo path expressions to sql expressions	WITHOUT_CLASSIFICATION	0.9990961866990249	WITHOUT_CLASSIFICATION	9.03813300975124E-4	IMPLEMENTATION
open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9998980323504091	WITHOUT_CLASSIFICATION	1.0196764959087428E-4	IMPLEMENTATION
cope with special cases of and not )	WITHOUT_CLASSIFICATION	0.9963516934927117	WITHOUT_CLASSIFICATION	0.003648306507288327	IMPLEMENTATION
the next one up must also be	WITHOUT_CLASSIFICATION	0.9999144376961008	WITHOUT_CLASSIFICATION	8.556230389925891E-5	IMPLEMENTATION
add any joins	WITHOUT_CLASSIFICATION	0.9997969350550585	WITHOUT_CLASSIFICATION	2.030649449415776E-4	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9998264464242107	WITHOUT_CLASSIFICATION	1.7355357578922463E-4	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9998649850866117	WITHOUT_CLASSIFICATION	1.350149133883186E-4	IMPLEMENTATION
path expression	WITHOUT_CLASSIFICATION	0.9991451676808664	WITHOUT_CLASSIFICATION	8.548323191337509E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9996698448615494	WITHOUT_CLASSIFICATION	3.3015513845059636E-4	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9992021661948134	WITHOUT_CLASSIFICATION	7.978338051865916E-4	IMPLEMENTATION
anything else	WITHOUT_CLASSIFICATION	0.9988640723690263	WITHOUT_CLASSIFICATION	0.0011359276309736866	IMPLEMENTATION
the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9993265050971071	WITHOUT_CLASSIFICATION	6.734949028929038E-4	IMPLEMENTATION
careful with this!	WITHOUT_CLASSIFICATION	0.9996344904571145	WITHOUT_CLASSIFICATION	3.6550954288553023E-4	IMPLEMENTATION
the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.999870252261214	WITHOUT_CLASSIFICATION	1.2974773878602535E-4	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.999851272215778	WITHOUT_CLASSIFICATION	1.4872778422204402E-4	IMPLEMENTATION
notice no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999970989825288	WITHOUT_CLASSIFICATION	2.901017471275242E-6	IMPLEMENTATION
cannot instantiate	WITHOUT_CLASSIFICATION	0.9997959475633913	WITHOUT_CLASSIFICATION	2.040524366086385E-4	IMPLEMENTATION
start by looking for hql keywords	WITHOUT_CLASSIFICATION	0.9998881257841888	WITHOUT_CLASSIFICATION	1.118742158111087E-4	IMPLEMENTATION
inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9987064237897687	WITHOUT_CLASSIFICATION	0.0012935762102312593	IMPLEMENTATION
'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9984027786564365	WITHOUT_CLASSIFICATION	0.001597221343563439	IMPLEMENTATION
now anything that is not a hql keyword	WITHOUT_CLASSIFICATION	0.9840122395574535	WITHOUT_CLASSIFICATION	0.0159877604425465	IMPLEMENTATION
process the "old" hql style where aliases appear _first_ ie. using the in or in class constructions	WITHOUT_CLASSIFICATION	0.9999868138837155	WITHOUT_CLASSIFICATION	1.3186116284564564E-5	IMPLEMENTATION
treat it as a classname	WITHOUT_CLASSIFICATION	0.9981742131760944	WITHOUT_CLASSIFICATION	0.001825786823905617	IMPLEMENTATION
treat it as a path expression	WITHOUT_CLASSIFICATION	0.9950138876362933	WITHOUT_CLASSIFICATION	0.004986112363706704	IMPLEMENTATION
starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999605141265057	WITHOUT_CLASSIFICATION	3.948587349432687E-5	IMPLEMENTATION
starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9992479081129658	WITHOUT_CLASSIFICATION	7.520918870341566E-4	IMPLEMENTATION
allow odmg oql style from person p p.cars c	WITHOUT_CLASSIFICATION	0.9999401609009833	WITHOUT_CLASSIFICATION	5.983909901670566E-5	IMPLEMENTATION
handle quoted strings	WITHOUT_CLASSIFICATION	0.996506178231051	WITHOUT_CLASSIFICATION	0.003493821768948901	IMPLEMENTATION
object insertions updates and deletions have list semantics because they must happen in the right order so as to respect referential integrity	WITHOUT_CLASSIFICATION	0.9999973544694722	WITHOUT_CLASSIFICATION	2.645530527805393E-6	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.999851272215778	WITHOUT_CLASSIFICATION	1.4872778422204402E-4	IMPLEMENTATION
ignore whitespace	WITHOUT_CLASSIFICATION	0.9997550099321224	WITHOUT_CLASSIFICATION	2.449900678775919E-4	IMPLEMENTATION
do replacements	WITHOUT_CLASSIFICATION	0.9990356464927292	WITHOUT_CLASSIFICATION	9.643535072706796E-4	IMPLEMENTATION
handle hql2 collection syntax	WITHOUT_CLASSIFICATION	0.9989243196901435	WITHOUT_CLASSIFICATION	0.0010756803098564461	IMPLEMENTATION
uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9997484470041579	WITHOUT_CLASSIFICATION	2.515529958421463E-4	IMPLEMENTATION
abstractselectingdelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
hilo params	WITHOUT_CLASSIFICATION	0.9996931022906738	WITHOUT_CLASSIFICATION	3.0689770932630514E-4	IMPLEMENTATION
sql = query	WITHOUT_CLASSIFICATION	0.9993948299745715	WITHOUT_CLASSIFICATION	6.051700254285756E-4	IMPLEMENTATION
performance opt	WITHOUT_CLASSIFICATION	0.9989088390294988	WITHOUT_CLASSIFICATION	0.0010911609705012114	IMPLEMENTATION
sql = update	WITHOUT_CLASSIFICATION	0.9998413180892562	WITHOUT_CLASSIFICATION	1.5868191074369032E-4	IMPLEMENTATION
hilo config	WITHOUT_CLASSIFICATION	0.9993368941910599	WITHOUT_CLASSIFICATION	6.63105808940125E-4	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9998268003493566	WITHOUT_CLASSIFICATION	1.731996506434007E-4	IMPLEMENTATION
don't allow comments on these insert statements as comments totally blow up the oracle getgeneratedkeys "support" (	WITHOUT_CLASSIFICATION	0.9996805148771306	WITHOUT_CLASSIFICATION	3.1948512286933043E-4	IMPLEMENTATION
abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.999902068051288	WITHOUT_CLASSIFICATION	9.793194871203815E-5	IMPLEMENTATION
throw new identifiergenerationexception("save associated object first or disable cascade for inverse association")	WITHOUT_CLASSIFICATION	0.999951932039538	WITHOUT_CLASSIFICATION	4.8067960461895406E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9912875218643532	WITHOUT_CLASSIFICATION	0.008712478135646757	IMPLEMENTATION
do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.998716571125031	WITHOUT_CLASSIFICATION	0.0012834288749690248	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999761877178153	WITHOUT_CLASSIFICATION	2.381228218471008E-5	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9998268003493566	WITHOUT_CLASSIFICATION	1.731996506434007E-4	IMPLEMENTATION
do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9989232172192071	WITHOUT_CLASSIFICATION	0.0010767827807929265	IMPLEMENTATION
column and table should be renamed but it would break the public api	WITHOUT_CLASSIFICATION	0.9999863707004149	WITHOUT_CLASSIFICATION	1.3629299585129509E-5	IMPLEMENTATION
loaded entity instances by entitykey	WITHOUT_CLASSIFICATION	0.9995963449005757	WITHOUT_CLASSIFICATION	4.036550994242142E-4	IMPLEMENTATION
if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9996280212199598	WITHOUT_CLASSIFICATION	3.7197878004025696E-4	IMPLEMENTATION
the default	WITHOUT_CLASSIFICATION	0.9999746207991828	WITHOUT_CLASSIFICATION	2.537920081718492E-5	IMPLEMENTATION
unfortunately not really safe to normalize this to 1 as an initial value like we do the others because we would not be able to control this if we are using a sequence	WITHOUT_CLASSIFICATION	0.9994783008936365	WITHOUT_CLASSIFICATION	5.216991063634809E-4	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9912875218643532	WITHOUT_CLASSIFICATION	0.008712478135646757	IMPLEMENTATION
identity map of collectionentry instances by the collection wrapper	WITHOUT_CLASSIFICATION	0.9998293502248056	WITHOUT_CLASSIFICATION	1.7064977519432056E-4	IMPLEMENTATION
general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997497890636192	WITHOUT_CLASSIFICATION	2.502109363806967E-4	IMPLEMENTATION
table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997436605326339	WITHOUT_CLASSIFICATION	2.5633946736616146E-4	IMPLEMENTATION
configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991632672833675	WITHOUT_CLASSIFICATION	8.36732716632622E-4	IMPLEMENTATION
identifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993488271364945	WITHOUT_CLASSIFICATION	6.511728635054752E-4	IMPLEMENTATION
persistentidentifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993488271364945	WITHOUT_CLASSIFICATION	6.511728635054752E-4	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9997972853144803	WITHOUT_CLASSIFICATION	2.0271468551962522E-4	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9997972853144803	WITHOUT_CLASSIFICATION	2.0271468551962522E-4	IMPLEMENTATION
fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999642733823478	WITHOUT_CLASSIFICATION	3.572661765218453E-5	IMPLEMENTATION
we just hit the last position	WITHOUT_CLASSIFICATION	0.9999365639239135	WITHOUT_CLASSIFICATION	6.343607608647713E-5	IMPLEMENTATION
scroll ahead	WITHOUT_CLASSIFICATION	0.9996859745882317	WITHOUT_CLASSIFICATION	3.140254117682942E-4	IMPLEMENTATION
scroll backward	WITHOUT_CLASSIFICATION	0.9995910243292271	WITHOUT_CLASSIFICATION	4.089756707728162E-4	IMPLEMENTATION
we have not yet hit the last result	WITHOUT_CLASSIFICATION	0.9718419205039486	WITHOUT_CLASSIFICATION	0.028158079496051498	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993428797290637	WITHOUT_CLASSIFICATION	6.571202709362484E-4	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998937978307824	WITHOUT_CLASSIFICATION	1.062021692176246E-4	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997142869122417	WITHOUT_CLASSIFICATION	2.857130877583088E-4	IMPLEMENTATION
do this when all the properties are updateable since there is a certain likelihood that the information will already be snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999868938624066	WITHOUT_CLASSIFICATION	1.3106137593545601E-5	IMPLEMENTATION
inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999870430330488	WITHOUT_CLASSIFICATION	1.2956966951216658E-4	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993428797290637	WITHOUT_CLASSIFICATION	6.571202709362484E-4	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998937978307824	WITHOUT_CLASSIFICATION	1.062021692176246E-4	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997142869122417	WITHOUT_CLASSIFICATION	2.857130877583088E-4	IMPLEMENTATION
caches	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
generators	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
cache region is defined by the root-class in the hierarchy	WITHOUT_CLASSIFICATION	0.9999726677102401	WITHOUT_CLASSIFICATION	2.7332289759870366E-5	IMPLEMENTATION
check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.999926004052683	WITHOUT_CLASSIFICATION	7.399594731695017E-5	IMPLEMENTATION
after all persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9997971380354439	WITHOUT_CLASSIFICATION	2.0286196455607966E-4	IMPLEMENTATION
if we get here it is possible that we have a proxy 'in the way' of the merge map resolution note decided to put this here rather than in the above loop as i was nervous about the performance of the loop-in-loop especially considering this is far more likely the 'edge case'	WITHOUT_CLASSIFICATION	0.9995779752684861	WITHOUT_CLASSIFICATION	4.220247315138856E-4	IMPLEMENTATION
jndi + serialization	WITHOUT_CLASSIFICATION	0.9997139291349104	WITHOUT_CLASSIFICATION	2.8607086508953075E-4	IMPLEMENTATION
checking for named queries	WITHOUT_CLASSIFICATION	0.9999009671062332	WITHOUT_CLASSIFICATION	9.903289376683265E-5	IMPLEMENTATION
stats	WITHOUT_CLASSIFICATION	0.9995608403308605	WITHOUT_CLASSIFICATION	4.391596691396509E-4	IMPLEMENTATION
entitynotfounddelegate	WITHOUT_CLASSIFICATION	0.999716907959248	WITHOUT_CLASSIFICATION	2.830920407521547E-4	IMPLEMENTATION
check named hql queries	WITHOUT_CLASSIFICATION	0.9991570184640982	WITHOUT_CLASSIFICATION	8.429815359018117E-4	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999045999256373	WITHOUT_CLASSIFICATION	9.540007436264163E-5	IMPLEMENTATION
prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9995700276331396	WITHOUT_CLASSIFICATION	4.2997236686037615E-4	IMPLEMENTATION
from javax.naming.referenceable	WITHOUT_CLASSIFICATION	0.9998951125829151	WITHOUT_CLASSIFICATION	1.0488741708489909E-4	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999373604630563	WITHOUT_CLASSIFICATION	6.263953694378167E-5	IMPLEMENTATION
for a dynamic-class	WITHOUT_CLASSIFICATION	0.999878519987433	WITHOUT_CLASSIFICATION	1.2148001256694227E-4	IMPLEMENTATION
test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9999720386435331	WITHOUT_CLASSIFICATION	2.7961356466857577E-5	IMPLEMENTATION
note early exit	WITHOUT_CLASSIFICATION	0.9998913273745268	WITHOUT_CLASSIFICATION	1.0867262547315828E-4	IMPLEMENTATION
for backward-compatability	WITHOUT_CLASSIFICATION	0.9998939918785132	WITHOUT_CLASSIFICATION	1.0600812148678327E-4	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.999730888877685	WITHOUT_CLASSIFICATION	2.6911112231497775E-4	IMPLEMENTATION
to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999208470588942	WITHOUT_CLASSIFICATION	7.915294110588582E-5	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999983479796298	WITHOUT_CLASSIFICATION	1.6520203701593026E-6	IMPLEMENTATION
must add to jndi _after_ adding to hashmaps because some jndi servers use serialization	WITHOUT_CLASSIFICATION	0.9976130489966515	WITHOUT_CLASSIFICATION	0.0023869510033485753	IMPLEMENTATION
make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9996787791308527	WITHOUT_CLASSIFICATION	3.2122086914733385E-4	IMPLEMENTATION
for each of the defined parameters make sure its value has been set	WITHOUT_CLASSIFICATION	0.9999659880834784	WITHOUT_CLASSIFICATION	3.4011916521661025E-5	IMPLEMENTATION
we never need to apply locks to the sql	WITHOUT_CLASSIFICATION	0.9716109444851003	WITHOUT_CLASSIFICATION	0.02838905551489957	IMPLEMENTATION
inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
during deserialization we need to reconnect all proxies and collections to this session as well as the entityentry and collectionentry instances these associations are transient because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9997477591086598	WITHOUT_CLASSIFICATION	2.5224089134026075E-4	IMPLEMENTATION
updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997028087765392	WITHOUT_CLASSIFICATION	2.9719122346074793E-4	IMPLEMENTATION
loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996150965416865	WITHOUT_CLASSIFICATION	3.849034583135115E-4	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.999567014718679	WITHOUT_CLASSIFICATION	4.3298528132107867E-4	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.999567014718679	WITHOUT_CLASSIFICATION	4.3298528132107867E-4	IMPLEMENTATION
first try to load it from the temp pc associated to this ss	WITHOUT_CLASSIFICATION	0.9996843334022997	WITHOUT_CLASSIFICATION	3.156665977003965E-4	IMPLEMENTATION
if the metadata allowed proxy creation and caller did not request forceful eager loading generate a proxy	WITHOUT_CLASSIFICATION	0.9990326564204234	WITHOUT_CLASSIFICATION	9.673435795766032E-4	IMPLEMENTATION
otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9984814931981976	WITHOUT_CLASSIFICATION	0.001518506801802524	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9998205050515236	WITHOUT_CLASSIFICATION	1.794949484763383E-4	IMPLEMENTATION
no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9994108479374568	WITHOUT_CLASSIFICATION	5.891520625431806E-4	IMPLEMENTATION
after setting values to object entitymode	WITHOUT_CLASSIFICATION	0.999941744604079	WITHOUT_CLASSIFICATION	5.825539592094358E-5	IMPLEMENTATION
for ejb3	WITHOUT_CLASSIFICATION	0.9998339832578986	WITHOUT_CLASSIFICATION	1.66016742101342E-4	IMPLEMENTATION
just ignore	WITHOUT_CLASSIFICATION	0.9998974617406615	WITHOUT_CLASSIFICATION	1.0253825933855631E-4	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9934869598014862	WITHOUT_CLASSIFICATION	0.006513040198513841	IMPLEMENTATION
saveorupdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995870138284764	WITHOUT_CLASSIFICATION	4.1298617152364816E-4	IMPLEMENTATION
update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995870138284764	WITHOUT_CLASSIFICATION	4.1298617152364816E-4	IMPLEMENTATION
lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995870138284764	WITHOUT_CLASSIFICATION	4.1298617152364816E-4	IMPLEMENTATION
persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995870138284764	WITHOUT_CLASSIFICATION	4.1298617152364816E-4	IMPLEMENTATION
persistonflush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995870138284764	WITHOUT_CLASSIFICATION	4.1298617152364816E-4	IMPLEMENTATION
merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995870138284764	WITHOUT_CLASSIFICATION	4.1298617152364816E-4	IMPLEMENTATION
saveorupdatecopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995870138284764	WITHOUT_CLASSIFICATION	4.1298617152364816E-4	IMPLEMENTATION
delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995870138284764	WITHOUT_CLASSIFICATION	4.1298617152364816E-4	IMPLEMENTATION
load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995870138284764	WITHOUT_CLASSIFICATION	4.1298617152364816E-4	IMPLEMENTATION
refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995870138284764	WITHOUT_CLASSIFICATION	4.1298617152364816E-4	IMPLEMENTATION
replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995870138284764	WITHOUT_CLASSIFICATION	4.1298617152364816E-4	IMPLEMENTATION
do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9742471777959587	WITHOUT_CLASSIFICATION	0.025752822204041285	IMPLEMENTATION
this is an internal error of some sort	WITHOUT_CLASSIFICATION	0.9991614341889421	WITHOUT_CLASSIFICATION	8.385658110578449E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999038341319422	WITHOUT_CLASSIFICATION	9.616586805787882E-5	IMPLEMENTATION
only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999893105990764	WITHOUT_CLASSIFICATION	1.0689400923585969E-5	IMPLEMENTATION
if it was previously unreferenced we need to flush in order to get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999984447805064	WITHOUT_CLASSIFICATION	1.55521949373309E-6	IMPLEMENTATION
not for internal use	WITHOUT_CLASSIFICATION	0.9929588683910725	WITHOUT_CLASSIFICATION	0.007041131608927463	IMPLEMENTATION
otherwise we only need to flush if there are in-memory changes to the queried tables	WITHOUT_CLASSIFICATION	0.999631520431071	WITHOUT_CLASSIFICATION	3.6847956892905665E-4	IMPLEMENTATION
might need to run a different filter entirely after the flush because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9993581804599968	WITHOUT_CLASSIFICATION	6.418195400032075E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999038341319422	WITHOUT_CLASSIFICATION	9.616586805787882E-5	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999038341319422	WITHOUT_CLASSIFICATION	9.616586805787882E-5	IMPLEMENTATION
if it is initialized see if the underlying instance is contained since we need to account for the fact that it might have been evicted	WITHOUT_CLASSIFICATION	0.9997614311629707	WITHOUT_CLASSIFICATION	2.3856883702938166E-4	IMPLEMENTATION
basically just an adapted copy of find(criteriaimpl)	WITHOUT_CLASSIFICATION	0.9999780966163747	WITHOUT_CLASSIFICATION	2.1903383625270443E-5	IMPLEMENTATION
it is possible for this method to be called during flush processing so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9790001036708577	WITHOUT_CLASSIFICATION	0.020999896329142304	IMPLEMENTATION
nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999565474102016	WITHOUT_CLASSIFICATION	4.345258979844038E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.999641566201331	WITHOUT_CLASSIFICATION	3.5843379866897727E-4	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.999730888877685	WITHOUT_CLASSIFICATION	2.6911112231497775E-4	IMPLEMENTATION
we need to writeobject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9962760965564951	WITHOUT_CLASSIFICATION	0.0037239034435049877	IMPLEMENTATION
the old-time stand-by	WITHOUT_CLASSIFICATION	0.9998400019582967	WITHOUT_CLASSIFICATION	1.5999804170330743E-4	IMPLEMENTATION
parameter bind values	WITHOUT_CLASSIFICATION	0.9999488079578382	WITHOUT_CLASSIFICATION	5.119204216185492E-5	IMPLEMENTATION
parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.998794818977454	WITHOUT_CLASSIFICATION	0.00120518102254589	IMPLEMENTATION
prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999982915473925	WITHOUT_CLASSIFICATION	1.7084526075687307E-6	IMPLEMENTATION
execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997862363396945	WITHOUT_CLASSIFICATION	2.1376366030542664E-4	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9997582137590943	WITHOUT_CLASSIFICATION	2.4178624090554016E-4	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9997582137590943	WITHOUT_CLASSIFICATION	2.4178624090554016E-4	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9997582137590943	WITHOUT_CLASSIFICATION	2.4178624090554016E-4	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9997582137590943	WITHOUT_CLASSIFICATION	2.4178624090554016E-4	IMPLEMENTATION
fieldinterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997446830107044	WITHOUT_CLASSIFICATION	2.553169892956076E-4	IMPLEMENTATION
let's assume that there is only one lazy fetch group for now!	WITHOUT_CLASSIFICATION	0.9999902772113721	WITHOUT_CLASSIFICATION	9.722788627879001E-6	IMPLEMENTATION
fieldhandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
should not need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9952972786163947	WITHOUT_CLASSIFICATION	0.0047027213836052925	IMPLEMENTATION
should probably no-op commit/rollback here at least in jta scenarios	WITHOUT_CLASSIFICATION	0.9999841373319847	WITHOUT_CLASSIFICATION	1.5862668015326786E-5	IMPLEMENTATION
base expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998811847567103	WITHOUT_CLASSIFICATION	1.1881524328972964E-4	IMPLEMENTATION
various expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994142677772581	WITHOUT_CLASSIFICATION	5.857322227420612E-4	IMPLEMENTATION
explicitly perform no checking	WITHOUT_CLASSIFICATION	0.9995731240166371	WITHOUT_CLASSIFICATION	4.268759833628968E-4	IMPLEMENTATION
used from testsuite	WITHOUT_CLASSIFICATION	0.9999138458560011	WITHOUT_CLASSIFICATION	8.615414399890929E-5	IMPLEMENTATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999987306267373	WITHOUT_CLASSIFICATION	1.2693732627327083E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9993155974245415	WITHOUT_CLASSIFICATION	6.844025754585908E-4	IMPLEMENTATION
register synch stats.connect()	WITHOUT_CLASSIFICATION	0.9993617245040394	WITHOUT_CLASSIFICATION	6.38275495960506E-4	IMPLEMENTATION
noncritical swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9994244208015205	WITHOUT_CLASSIFICATION	5.75579198479461E-4	IMPLEMENTATION
calls executebatch()	WITHOUT_CLASSIFICATION	0.9993303394958645	WITHOUT_CLASSIFICATION	6.696605041354981E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9996721026598491	WITHOUT_CLASSIFICATION	3.278973401510119E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9996721026598491	WITHOUT_CLASSIFICATION	3.278973401510119E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9996721026598491	WITHOUT_CLASSIFICATION	3.278973401510119E-4	IMPLEMENTATION
sybase driver (jconnect) throwing npe here in certain cases but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999940760852002	WITHOUT_CLASSIFICATION	5.92391479986795E-6	IMPLEMENTATION
see explanation above	WITHOUT_CLASSIFICATION	0.9992398715404462	WITHOUT_CLASSIFICATION	7.601284595537485E-4	IMPLEMENTATION
if we are in the process of releasing no sense checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999998850617975	WITHOUT_CLASSIFICATION	1.1493820239622822E-7	IMPLEMENTATION
early exit!!!!	WITHOUT_CLASSIFICATION	0.9998695127856638	WITHOUT_CLASSIFICATION	1.304872143362617E-4	IMPLEMENTATION
resultset impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
resultset impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
refer to comment in statefulpersistencecontext.addcollection()	WITHOUT_CLASSIFICATION	0.9999429071518087	WITHOUT_CLASSIFICATION	5.709284819122532E-5	IMPLEMENTATION
connectionmanager.callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993488271364945	WITHOUT_CLASSIFICATION	6.511728635054752E-4	IMPLEMENTATION
note success = false because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9994225679469643	WITHOUT_CLASSIFICATION	5.774320530356153E-4	IMPLEMENTATION
we already have a callback registered either a local (org.hibernate.transaction) transaction has accepted callback responsibilities or we have previously registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999471459114652	WITHOUT_CLASSIFICATION	5.2854088534824877E-5	IMPLEMENTATION
the configured transaction-factory says it only supports local callback mode so no sense attempting to register a jta synchronization	WITHOUT_CLASSIFICATION	0.9999037954504038	WITHOUT_CLASSIFICATION	9.620454959623705E-5	IMPLEMENTATION
transactions marked for rollback-only cause some tm impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9993761461254002	WITHOUT_CLASSIFICATION	6.238538745998496E-4	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
postinitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.999839496817989	WITHOUT_CLASSIFICATION	1.6050318201099462E-4	IMPLEMENTATION
cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9970201508419939	WITHOUT_CLASSIFICATION	0.002979849158006027	IMPLEMENTATION
todo for 4.0 private static final logger log = loggerfactory.getlogger( sqlstatementlogger.class ) this is the legacy logging 'category'	WITHOUT_CLASSIFICATION	0.8119618334958231	WITHOUT_CLASSIFICATION	0.18803816650417693	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9996650245364099	WITHOUT_CLASSIFICATION	3.3497546359018875E-4	IMPLEMENTATION
don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9996376180426003	WITHOUT_CLASSIFICATION	3.6238195739969284E-4	IMPLEMENTATION
don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9997778650623388	WITHOUT_CLASSIFICATION	2.2213493766122611E-4	IMPLEMENTATION
position cursor to the last row	WITHOUT_CLASSIFICATION	0.9995871427107138	WITHOUT_CLASSIFICATION	4.1285728928616374E-4	IMPLEMENTATION
sequentially read the result set in reverse until we recognize a change in the key value. at that point we are pointed at the last physical sequential row for the logical row in which we are interested in processing	WITHOUT_CLASSIFICATION	0.9999997625845107	WITHOUT_CLASSIFICATION	2.3741548923595078E-7	IMPLEMENTATION
read backwards until we read past the first physical sequential row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999983334623892	WITHOUT_CLASSIFICATION	1.6665376108405374E-6	IMPLEMENTATION
finally read ahead one row to position result set cursor at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999909456464826	WITHOUT_CLASSIFICATION	9.054353517361718E-6	IMPLEMENTATION
now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.999999774475534	WITHOUT_CLASSIFICATION	2.2552446590239067E-7	IMPLEMENTATION
force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9996401473172721	WITHOUT_CLASSIFICATION	3.598526827278366E-4	IMPLEMENTATION
this is equivalent to the old behavior	WITHOUT_CLASSIFICATION	0.9985524823974758	WITHOUT_CLASSIFICATION	0.0014475176025241783	IMPLEMENTATION
if null owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999969970192286	WITHOUT_CLASSIFICATION	3.0029807714733153E-6	IMPLEMENTATION
final string querystring	WITHOUT_CLASSIFICATION	0.9997438054726945	WITHOUT_CLASSIFICATION	2.5619452730557557E-4	IMPLEMENTATION
if it was a reference to self don't need to nullify unless we are using native id generation in which case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999885199968672	WITHOUT_CLASSIFICATION	1.1480003132661311E-5	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999559906939354	WITHOUT_CLASSIFICATION	4.400930606450419E-5	IMPLEMENTATION
in an effort to avoid concurrent-modification-exceptions (from potential recursive calls back through here as a result of the eventual call to persistentcollection#endread) we scan the internal loadingcollections map for matches and store those matches in a temp collection. the temp collection is then used to "drive" the #endread processing.	WITHOUT_CLASSIFICATION	0.9999780903700847	WITHOUT_CLASSIFICATION	2.1909629915309377E-5	IMPLEMENTATION
we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9993566176907207	WITHOUT_CLASSIFICATION	6.433823092793502E-4	IMPLEMENTATION
can't reuse in this case	WITHOUT_CLASSIFICATION	0.9998771988200248	WITHOUT_CLASSIFICATION	1.228011799751218E-4	IMPLEMENTATION
first we need to suspend any current jta transaction and obtain a jdbc connection	WITHOUT_CLASSIFICATION	0.6015703174224063	WITHOUT_CLASSIFICATION	0.3984296825775937	IMPLEMENTATION
getresultlist(results)	WITHOUT_CLASSIFICATION	0.999716907959248	WITHOUT_CLASSIFICATION	2.830920407521547E-4	IMPLEMENTATION
if we only returned one entity query by key is more efficient	WITHOUT_CLASSIFICATION	0.9996035832081506	WITHOUT_CLASSIFICATION	3.9641679184951165E-4	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.997771059685526	WITHOUT_CLASSIFICATION	0.0022289403144739486	IMPLEMENTATION
handle empty collection	WITHOUT_CLASSIFICATION	0.9693123541929232	WITHOUT_CLASSIFICATION	0.030687645807076742	IMPLEMENTATION
else no collection element but also no owner	WITHOUT_CLASSIFICATION	0.9999991211196746	WITHOUT_CLASSIFICATION	8.788803254445385E-7	IMPLEMENTATION
handle empty collections	WITHOUT_CLASSIFICATION	0.9672174933030795	WITHOUT_CLASSIFICATION	0.03278250669692059	IMPLEMENTATION
else this is not a collection initializer (and empty collections will be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9963755133031216	WITHOUT_CLASSIFICATION	0.003624486696878516	IMPLEMENTATION
validate() instances of validatable	WITHOUT_CLASSIFICATION	0.9997728641184214	WITHOUT_CLASSIFICATION	2.2713588157859889E-4	IMPLEMENTATION
if we know there is exactly 1 row we can skip. it would be great if we could _always_ skip this it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9984006860653531	WITHOUT_CLASSIFICATION	0.001599313934646789	IMPLEMENTATION
remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999605918135652	WITHOUT_CLASSIFICATION	3.940818643474271E-5	IMPLEMENTATION
null version means the object is in the process of being loaded somewhere else in the resultset	WITHOUT_CLASSIFICATION	0.9999915765971208	WITHOUT_CLASSIFICATION	8.423402879282854E-6	IMPLEMENTATION
problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9998927837748133	WITHOUT_CLASSIFICATION	1.0721622518677482E-4	IMPLEMENTATION
use the id passed in	WITHOUT_CLASSIFICATION	0.9996796871404006	WITHOUT_CLASSIFICATION	3.2031285959945813E-4	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9997462099476413	WITHOUT_CLASSIFICATION	2.537900523586829E-4	IMPLEMENTATION
prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9998612206496761	WITHOUT_CLASSIFICATION	1.3877935032382895E-4	IMPLEMENTATION
no point doing this if none was requested	WITHOUT_CLASSIFICATION	0.9999933614339327	WITHOUT_CLASSIFICATION	6.638566067266188E-6	IMPLEMENTATION
if the object is already loaded return the loaded one	WITHOUT_CLASSIFICATION	0.9999977765886281	WITHOUT_CLASSIFICATION	2.2234113718444622E-6	IMPLEMENTATION
its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.999253086704482	WITHOUT_CLASSIFICATION	7.469132955179293E-4	IMPLEMENTATION
cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9990829069952173	WITHOUT_CLASSIFICATION	9.170930047827798E-4	IMPLEMENTATION
the load() which takes an entity does not pass an entityname	WITHOUT_CLASSIFICATION	0.9997448280361597	WITHOUT_CLASSIFICATION	2.5517196384024167E-4	IMPLEMENTATION
we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9988687792373535	WITHOUT_CLASSIFICATION	0.0011312207626464554	IMPLEMENTATION
look for a proxy	WITHOUT_CLASSIFICATION	0.9998285106541679	WITHOUT_CLASSIFICATION	1.7148934583223485E-4	IMPLEMENTATION
we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9976714875115552	WITHOUT_CLASSIFICATION	0.002328512488444803	IMPLEMENTATION
its the given optional object	WITHOUT_CLASSIFICATION	0.9996318483220386	WITHOUT_CLASSIFICATION	3.681516779614118E-4	IMPLEMENTATION
instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999309578080092	WITHOUT_CLASSIFICATION	6.904219199075338E-5	IMPLEMENTATION
need to hydrate it.	WITHOUT_CLASSIFICATION	0.9921683852471324	WITHOUT_CLASSIFICATION	0.007831614752867592	IMPLEMENTATION
return a newly loaded object	WITHOUT_CLASSIFICATION	0.999935787380944	WITHOUT_CLASSIFICATION	6.421261905603416E-5	IMPLEMENTATION
will be ignored using the existing entry instead	WITHOUT_CLASSIFICATION	0.9997690226523283	WITHOUT_CLASSIFICATION	2.3097734767173908E-4	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999989298266387	WITHOUT_CLASSIFICATION	1.07017336116176E-6	IMPLEMENTATION
materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.999551127945591	WITHOUT_CLASSIFICATION	4.4887205440911524E-4	IMPLEMENTATION
get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999706234292605	WITHOUT_CLASSIFICATION	2.937657073963583E-5	IMPLEMENTATION
ok in normal hibernate usage to delete a detached entity jpa however forbids it thus this is a hook for hem to affect this behavior	WITHOUT_CLASSIFICATION	0.9999133147831119	WITHOUT_CLASSIFICATION	8.66852168881604E-5	IMPLEMENTATION
the entry will be removed after the flush and will no longer override the stale snapshot this is now handled by removeentity() in entitydeleteaction persistencecontext.removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.9999575395892025	WITHOUT_CLASSIFICATION	4.2460410797389876E-5	IMPLEMENTATION
addinitializedcollection(collection persister id)	WITHOUT_CLASSIFICATION	0.9995928079511401	WITHOUT_CLASSIFICATION	4.071920488598085E-4	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9998695127856638	WITHOUT_CLASSIFICATION	1.304872143362617E-4	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9998695127856638	WITHOUT_CLASSIFICATION	1.304872143362617E-4	IMPLEMENTATION
|| oj.getjoinable().consumescollectionalias()	WITHOUT_CLASSIFICATION	0.9997304348451745	WITHOUT_CLASSIFICATION	2.6956515482535673E-4	IMPLEMENTATION
here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.988068373413593	WITHOUT_CLASSIFICATION	0.011931626586406965	IMPLEMENTATION
code to handle subclasses of topclass	WITHOUT_CLASSIFICATION	0.9989114634423513	WITHOUT_CLASSIFICATION	0.001088536557648766	IMPLEMENTATION
woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999926665927149	WITHOUT_CLASSIFICATION	7.333407285102831E-6	IMPLEMENTATION
we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9992993487259868	WITHOUT_CLASSIFICATION	7.006512740131747E-4	IMPLEMENTATION
we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9971462683723724	WITHOUT_CLASSIFICATION	0.0028537316276276937	IMPLEMENTATION
synchronized to avoid multi-thread access issues defined as method synch to avoid potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9941987518362444	WITHOUT_CLASSIFICATION	0.005801248163755579	IMPLEMENTATION
allows various loaders (ok mainly the queryloader ) to check whether scrolling of their result set should be allowed. by default it is allowed.	WITHOUT_CLASSIFICATION	0.9996939438096057	WITHOUT_CLASSIFICATION	3.060561903941503E-4	IMPLEMENTATION
before adding to collection!	WITHOUT_CLASSIFICATION	0.9996303139571511	WITHOUT_CLASSIFICATION	3.696860428488728E-4	IMPLEMENTATION
if the current depth is 0 the root thing being loaded is the many-to-many collection itself. here it is alright to use an inner join	WITHOUT_CLASSIFICATION	0.9999505179504797	WITHOUT_CLASSIFICATION	4.948204952026989E-5	IMPLEMENTATION
operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999500685792296	WITHOUT_CLASSIFICATION	4.993142077039217E-5	IMPLEMENTATION
simple because we can't have a one-to-one or a collection (or even a property-ref) in a composite-element	WITHOUT_CLASSIFICATION	0.9999941040996377	WITHOUT_CLASSIFICATION	5.8959003622978E-6	IMPLEMENTATION
a composite key	WITHOUT_CLASSIFICATION	0.9997180817168244	WITHOUT_CLASSIFICATION	2.8191828317553606E-4	IMPLEMENTATION
if no batch use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.999324925998048	WITHOUT_CLASSIFICATION	6.750740019520856E-4	IMPLEMENTATION
it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9994711527758345	WITHOUT_CLASSIFICATION	5.288472241655544E-4	IMPLEMENTATION
needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.935529054413008	IMPLEMENTATION	0.06447094558699205	WITHOUT_CLASSIFICATION
&& etype.isreferencetoprimarykey()	WITHOUT_CLASSIFICATION	0.9997205405667594	WITHOUT_CLASSIFICATION	2.794594332405228E-4	IMPLEMENTATION
it might still need to apply a collection ordering based on a many-to-many defined order-by	WITHOUT_CLASSIFICATION	0.8820717536879424	WITHOUT_CLASSIFICATION	0.11792824631205763	IMPLEMENTATION
if a composite key use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching todo unnecessary for databases with ansi-style joins	WITHOUT_CLASSIFICATION	0.649455859366878	WITHOUT_CLASSIFICATION	0.350544140633122	IMPLEMENTATION
belong to other persister belong to other persister	WITHOUT_CLASSIFICATION	0.9988137931090199	WITHOUT_CLASSIFICATION	0.001186206890980151	IMPLEMENTATION
we found it	WITHOUT_CLASSIFICATION	0.9992093501211721	WITHOUT_CLASSIFICATION	7.906498788278387E-4	IMPLEMENTATION
we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.999875694615335	WITHOUT_CLASSIFICATION	1.2430538466498846E-4	IMPLEMENTATION
disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9983659402856412	WITHOUT_CLASSIFICATION	0.0016340597143587674	IMPLEMENTATION
note unlike all other loaders this one is not multithreaded or cacheable!!	WITHOUT_CLASSIFICATION	0.9650281928056618	WITHOUT_CLASSIFICATION	0.03497180719433832	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9990429130247279	WITHOUT_CLASSIFICATION	9.570869752719582E-4	IMPLEMENTATION
root entity comes last	WITHOUT_CLASSIFICATION	0.9997521890727129	WITHOUT_CLASSIFICATION	2.478109272871297E-4	IMPLEMENTATION
deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999326294551162	WITHOUT_CLASSIFICATION	6.737054488375411E-5	IMPLEMENTATION
alias may be null early exit	WITHOUT_CLASSIFICATION	0.9999154551276825	WITHOUT_CLASSIFICATION	8.454487231745157E-5	IMPLEMENTATION
if it is a compound path	WITHOUT_CLASSIFICATION	0.9999506903826005	WITHOUT_CLASSIFICATION	4.9309617399460324E-5	IMPLEMENTATION
otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9994991078884583	WITHOUT_CLASSIFICATION	5.008921115416855E-4	IMPLEMENTATION
if its the root criteria we are done	WITHOUT_CLASSIFICATION	0.9999906382915121	WITHOUT_CLASSIFICATION	9.36170848796644E-6	IMPLEMENTATION
otherwise recurse	WITHOUT_CLASSIFICATION	0.9986895867057408	WITHOUT_CLASSIFICATION	0.0013104132942592507	IMPLEMENTATION
the criteria instance	WITHOUT_CLASSIFICATION	0.9999316180044936	WITHOUT_CLASSIFICATION	6.838199550639697E-5	IMPLEMENTATION
the entity name	WITHOUT_CLASSIFICATION	0.9997731858853911	WITHOUT_CLASSIFICATION	2.2681411460877455E-4	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.999595955140025	WITHOUT_CLASSIFICATION	4.0404485997493517E-4	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.999595955140025	WITHOUT_CLASSIFICATION	4.0404485997493517E-4	IMPLEMENTATION
it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9997533062503744	WITHOUT_CLASSIFICATION	2.466937496255798E-4	IMPLEMENTATION
should never happen i think	WITHOUT_CLASSIFICATION	0.9861667880034409	WITHOUT_CLASSIFICATION	0.013833211996559085	IMPLEMENTATION
detect discriminator values	WITHOUT_CLASSIFICATION	0.9999388406347327	WITHOUT_CLASSIFICATION	6.115936526736627E-5	IMPLEMENTATION
convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9998436472950867	WITHOUT_CLASSIFICATION	1.5635270491324706E-4	IMPLEMENTATION
and the qualifier is not the alias of this criteria -> check to see if we belong to some criteria other than the one that created us	WITHOUT_CLASSIFICATION	0.9983945845535016	WITHOUT_CLASSIFICATION	0.0016054154464983884	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9996386277208817	WITHOUT_CLASSIFICATION	3.6137227911820624E-4	IMPLEMENTATION
otherwise this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9993403676458307	WITHOUT_CLASSIFICATION	6.59632354169419E-4	IMPLEMENTATION
currently not cachable if autodiscover types is in effect (e.g. "select ")	WITHOUT_CLASSIFICATION	0.9999836417753437	WITHOUT_CLASSIFICATION	1.6358224656243432E-5	IMPLEMENTATION
private final string[] sqlaliases private final string[] sqlaliassuffixes	WITHOUT_CLASSIFICATION	0.9997793371750403	WITHOUT_CLASSIFICATION	2.20662824959741E-4	IMPLEMENTATION
this is only needed (afaict) for resulttransformer processing	WITHOUT_CLASSIFICATION	0.6693276554833228	WITHOUT_CLASSIFICATION	0.3306723445166771	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999989161635542	WITHOUT_CLASSIFICATION	1.083836445798577E-6	IMPLEMENTATION
build an array with indices equal to the total number of actual returns in the result hibernate will return for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999997931294349	WITHOUT_CLASSIFICATION	2.0687056502126197E-7	IMPLEMENTATION
replace {.} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9985287511584194	WITHOUT_CLASSIFICATION	0.0014712488415805634	IMPLEMENTATION
no additional open braces found in the string append the rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9998363627064881	WITHOUT_CLASSIFICATION	1.6363729351190302E-4	IMPLEMENTATION
apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9998674400192514	WITHOUT_CLASSIFICATION	1.3255998074860153E-4	IMPLEMENTATION
it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9997324247652106	WITHOUT_CLASSIFICATION	2.6757523478936827E-4	IMPLEMENTATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9872583900401705	IMPLEMENTATION	0.012741609959829448	WITHOUT_CLASSIFICATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9872583900401705	IMPLEMENTATION	0.012741609959829448	WITHOUT_CLASSIFICATION
the current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9997345004451283	WITHOUT_CLASSIFICATION	2.654995548716839E-4	IMPLEMENTATION
it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9998067439591104	WITHOUT_CLASSIFICATION	1.9325604088949163E-4	IMPLEMENTATION
possibly handle something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9996896076829486	WITHOUT_CLASSIFICATION	3.103923170515214E-4	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999606182814166	WITHOUT_CLASSIFICATION	3.938171858336355E-5	IMPLEMENTATION
private final list persisters = new arraylist()	WITHOUT_CLASSIFICATION	0.999879655387502	WITHOUT_CLASSIFICATION	1.2034461249799686E-4	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9993155974245415	WITHOUT_CLASSIFICATION	6.844025754585908E-4	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9998874286148957	WITHOUT_CLASSIFICATION	1.125713851043974E-4	IMPLEMENTATION
private final list scalartypes = new arraylist() private final list scalarcolumnaliases = new arraylist()	WITHOUT_CLASSIFICATION	0.999879655387502	WITHOUT_CLASSIFICATION	1.2034461249799686E-4	IMPLEMENTATION
now process the returns	WITHOUT_CLASSIFICATION	0.9997970452738197	WITHOUT_CLASSIFICATION	2.029547261803635E-4	IMPLEMENTATION
private list collectionowneraliases = new arraylist() private list collectionaliases = new arraylist() private list collectionpersisters = new arraylist() private list collectionresults = new arraylist()	WITHOUT_CLASSIFICATION	0.9999421749528878	WITHOUT_CLASSIFICATION	5.782504711209528E-5	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9996156329169272	WITHOUT_CLASSIFICATION	3.843670830726875E-4	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9996156329169272	WITHOUT_CLASSIFICATION	3.843670830726875E-4	IMPLEMENTATION
make sure the owner alias is known	WITHOUT_CLASSIFICATION	0.999851652994811	WITHOUT_CLASSIFICATION	1.4834700518897857E-4	IMPLEMENTATION
first break down the returns into maps keyed by alias so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9956819121703271	WITHOUT_CLASSIFICATION	0.0043180878296728885	IMPLEMENTATION
scalarcolumnaliases.add( typereturn.getcolumnalias() ) scalartypes.add( typereturn.gettype() )	WITHOUT_CLASSIFICATION	0.9995246458529513	WITHOUT_CLASSIFICATION	4.7535414704869754E-4	IMPLEMENTATION
if this return's alias has not been processed yet do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9980774186914677	WITHOUT_CLASSIFICATION	0.0019225813085323126	IMPLEMENTATION
collectionowneraliases.add( owneralias )	WITHOUT_CLASSIFICATION	0.9995246458529513	WITHOUT_CLASSIFICATION	4.7535414704869754E-4	IMPLEMENTATION
for merging of versioned entities we consider the version having been changed only when 1) the two version values are different and 2) the target actually represents database state! this second condition is a special case which allows an entity to be merged during the same transaction (though during a seperate operation) in which it was originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999997252002425	WITHOUT_CLASSIFICATION	2.7479975751414367E-7	IMPLEMENTATION
this is the second pass through on a merge op so here we limit the replacement to associations types (value types were already replaced during the first pass)	WITHOUT_CLASSIFICATION	0.9951089096418183	WITHOUT_CLASSIFICATION	0.0048910903581817315	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9998240435627767	WITHOUT_CLASSIFICATION	1.759564372233442E-4	IMPLEMENTATION
cascade-save to collections after the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999577862919031	WITHOUT_CLASSIFICATION	4.221370809691694E-5	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9982574000171619	WITHOUT_CLASSIFICATION	0.0017425999828380868	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995808946190322	WITHOUT_CLASSIFICATION	4.19105380967733E-4	IMPLEMENTATION
currently only the hibernate-supplied dbtimestamptype is supported here	WITHOUT_CLASSIFICATION	0.999988313563767	WITHOUT_CLASSIFICATION	1.1686436232891369E-5	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9987083933640682	WITHOUT_CLASSIFICATION	0.0012916066359318036	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9989486892504172	WITHOUT_CLASSIFICATION	0.0010513107495826984	IMPLEMENTATION
not so sure this is even valid subtree. but if it was it'd represent two unrelated table references	WITHOUT_CLASSIFICATION	0.9999973843471612	WITHOUT_CLASSIFICATION	2.61565283868032E-6	IMPLEMENTATION
(not (gt a b) ) => (le a b)	WITHOUT_CLASSIFICATION	0.9999137357680782	WITHOUT_CLASSIFICATION	8.62642319218382E-5	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9998933767242871	WITHOUT_CLASSIFICATION	1.0662327571279598E-4	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998688151085108	WITHOUT_CLASSIFICATION	1.311848914892318E-4	IMPLEMENTATION
sqlresulttypes = selectclause.getsqlresulttypes()	WITHOUT_CLASSIFICATION	0.9993932759159657	WITHOUT_CLASSIFICATION	6.06724084034229E-4	IMPLEMENTATION
by default	WITHOUT_CLASSIFICATION	0.9999176038715372	WITHOUT_CLASSIFICATION	8.239612846278143E-5	IMPLEMENTATION
this is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999882837905865	WITHOUT_CLASSIFICATION	1.1716209413562945E-5	IMPLEMENTATION
-- loader implementation --	WITHOUT_CLASSIFICATION	0.9993564245063182	WITHOUT_CLASSIFICATION	6.435754936816908E-4	IMPLEMENTATION
-- loader overrides --	WITHOUT_CLASSIFICATION	0.9997170240598484	WITHOUT_CLASSIFICATION	2.829759401515993E-4	IMPLEMENTATION
(not (is_null a b) ) => (is_not_null a b)	WITHOUT_CLASSIFICATION	0.9999127526526564	WITHOUT_CLASSIFICATION	8.724734734358613E-5	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9995241373364938	WITHOUT_CLASSIFICATION	4.7586266350613336E-4	IMPLEMENTATION
meant to handle dynamic instantiation queries	WITHOUT_CLASSIFICATION	0.997436096882889	WITHOUT_CLASSIFICATION	0.0025639031171110363	IMPLEMENTATION
--- query translator methods ---	WITHOUT_CLASSIFICATION	0.9998079668331512	WITHOUT_CLASSIFICATION	1.920331668488317E-4	IMPLEMENTATION
-- implementation private methods --	WITHOUT_CLASSIFICATION	0.9998169273853349	WITHOUT_CLASSIFICATION	1.830726146651269E-4	IMPLEMENTATION
deduplicate unique constraints sharing the same columns this is needed by hibernate annotations since it creates automagically unique constraints for the user	WITHOUT_CLASSIFICATION	0.9677740910312879	WITHOUT_CLASSIFICATION	0.032225908968712094	IMPLEMENTATION
try to find out the name of the primary key to create it as identity if the identitygenerator is used	WITHOUT_CLASSIFICATION	0.9999966802591231	WITHOUT_CLASSIFICATION	3.3197408768791433E-6	IMPLEMENTATION
to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9780081061507007	WITHOUT_CLASSIFICATION	0.02199189384929935	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999831222588277	WITHOUT_CLASSIFICATION	1.6877741172339988E-5	IMPLEMENTATION
used also for generation of fk names!	WITHOUT_CLASSIFICATION	0.9999850651254474	WITHOUT_CLASSIFICATION	1.4934874552767134E-5	IMPLEMENTATION
usually useless	WITHOUT_CLASSIFICATION	0.9997026630835065	WITHOUT_CLASSIFICATION	2.97336916493402E-4	IMPLEMENTATION
added this caching as i noticed that gettype() is being called multiple times	WITHOUT_CLASSIFICATION	0.9996747489884794	WITHOUT_CLASSIFICATION	3.2525101152056194E-4	IMPLEMENTATION
do not add unique constraint on db not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.8946830517272674	WITHOUT_CLASSIFICATION	0.1053169482727326	IMPLEMENTATION
for backward compatibility disable this	WITHOUT_CLASSIFICATION	0.9992738289270041	WITHOUT_CLASSIFICATION	7.261710729958983E-4	IMPLEMENTATION
may be final may be final may be final	WITHOUT_CLASSIFICATION	0.999474281051545	WITHOUT_CLASSIFICATION	5.257189484550169E-4	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9994172540402716	WITHOUT_CLASSIFICATION	5.827459597283409E-4	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9994172540402716	WITHOUT_CLASSIFICATION	5.827459597283409E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9996203667756252	WITHOUT_CLASSIFICATION	3.796332243749135E-4	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.999916145360997	WITHOUT_CLASSIFICATION	8.385463900295839E-5	IMPLEMENTATION
the root of the incoming property path matched one of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9998518707817566	WITHOUT_CLASSIFICATION	1.4812921824335426E-4	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9994945258837485	WITHOUT_CLASSIFICATION	5.054741162515347E-4	IMPLEMENTATION
flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9994087716120982	WITHOUT_CLASSIFICATION	5.912283879016993E-4	IMPLEMENTATION
an identifier mapper => getkey will be included in the getnonduplicatedpropertyiterator() and checked later so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999886177873971	WITHOUT_CLASSIFICATION	1.1382212602867273E-5	IMPLEMENTATION
if the hibernate-mapping did not specify a schema/catalog use the defaults specified by properties - but note that if the schema/catalog were specified in hibernate-mapping or as params they will already be initialized and will override the values set here (they are in identifiergeneratorproperties)	WITHOUT_CLASSIFICATION	0.9999997901063347	WITHOUT_CLASSIFICATION	2.09893665309501E-7	IMPLEMENTATION
pass the entity-name if not a collection-id	WITHOUT_CLASSIFICATION	0.9994653048169941	WITHOUT_CLASSIFICATION	5.346951830059068E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9996203667756252	WITHOUT_CLASSIFICATION	3.796332243749135E-4	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.999916145360997	WITHOUT_CLASSIFICATION	8.385463900295839E-5	IMPLEMENTATION
pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9977439357648471	WITHOUT_CLASSIFICATION	0.002256064235152914	IMPLEMENTATION
needed to satisfy keyvalue	WITHOUT_CLASSIFICATION	0.747481545138394	IMPLEMENTATION	0.2525184548616059	WITHOUT_CLASSIFICATION
empty means no scoping	WITHOUT_CLASSIFICATION	0.9966571182693009	WITHOUT_CLASSIFICATION	0.003342881730699141	IMPLEMENTATION
index should be last column listed	WITHOUT_CLASSIFICATION	0.9995100261462304	WITHOUT_CLASSIFICATION	4.899738537695356E-4	IMPLEMENTATION
if it is a formula index use the element columns in the pk	WITHOUT_CLASSIFICATION	0.9999946151692504	WITHOUT_CLASSIFICATION	5.384830749638797E-6	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns	WITHOUT_CLASSIFICATION	0.9942522334568908	WITHOUT_CLASSIFICATION	0.005747766543109105	IMPLEMENTATION
arraylist list = new arraylist()list.addall( getkey().getconstraintcolumns() )list.addall( getindex().getconstraintcolumns() )getcollectiontable().createuniquekey(list)	WITHOUT_CLASSIFICATION	0.9998464581693859	WITHOUT_CLASSIFICATION	1.535418306140149E-4	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9996869274134622	WITHOUT_CLASSIFICATION	3.130725865377485E-4	IMPLEMENTATION
no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.999993316885006	WITHOUT_CLASSIFICATION	6.683114994037684E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.9738926549464406	WITHOUT_CLASSIFICATION	0.02610734505355933	IMPLEMENTATION
the case of a foreign key to something other than the pk is handled in createpropertyrefconstraints	WITHOUT_CLASSIFICATION	0.9999902787996752	WITHOUT_CLASSIFICATION	9.721200324773458E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.9738926549464406	WITHOUT_CLASSIFICATION	0.02610734505355933	IMPLEMENTATION
if the property mapping consists of all formulas make it non-updateable	WITHOUT_CLASSIFICATION	0.9998183258714493	WITHOUT_CLASSIFICATION	1.81674128550661E-4	IMPLEMENTATION
columnupdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9997304348451745	WITHOUT_CLASSIFICATION	2.6956515482535673E-4	IMPLEMENTATION
if the property mapping consists of all formulas make it insertable	WITHOUT_CLASSIFICATION	0.9998183258714493	WITHOUT_CLASSIFICATION	1.81674128550661E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995639437846371	WITHOUT_CLASSIFICATION	4.360562153629203E-4	IMPLEMENTATION
expected type is intrinsic here	WITHOUT_CLASSIFICATION	0.999896331865343	WITHOUT_CLASSIFICATION	1.0366813465699299E-4	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9996869274134622	WITHOUT_CLASSIFICATION	3.130725865377485E-4	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9996869274134622	WITHOUT_CLASSIFICATION	3.130725865377485E-4	IMPLEMENTATION
return memberpersister.getpropertytype(propertyname)	WITHOUT_CLASSIFICATION	0.9999166725837143	WITHOUT_CLASSIFICATION	8.332741628574232E-5	IMPLEMENTATION
return memberpersister.tocolumns(alias propertyname)	WITHOUT_CLASSIFICATION	0.9999172574239373	WITHOUT_CLASSIFICATION	8.27425760626653E-5	IMPLEMENTATION
return memberpersister.gettype()	WITHOUT_CLASSIFICATION	0.9999166725837143	WITHOUT_CLASSIFICATION	8.332741628574232E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9996902181121673	WITHOUT_CLASSIFICATION	3.0978188783270646E-4	IMPLEMENTATION
return !isonetomany()	WITHOUT_CLASSIFICATION	0.9999176115324392	WITHOUT_CLASSIFICATION	8.23884675608701E-5	IMPLEMENTATION
instanceof associationtype	WITHOUT_CLASSIFICATION	0.999724650090854	WITHOUT_CLASSIFICATION	2.753499091460795E-4	IMPLEMENTATION
we need to determine the best way to know that two joinables represent a single many-to-many	WITHOUT_CLASSIFICATION	0.7421144757528836	IMPLEMENTATION	0.25788552424711636	WITHOUT_CLASSIFICATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9997123810936552	WITHOUT_CLASSIFICATION	2.8761890634472584E-4	IMPLEMENTATION
public boolean issubselectloadable()	WITHOUT_CLASSIFICATION	0.9999650277502276	WITHOUT_CLASSIFICATION	3.4972249772473046E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9997511081662124	WITHOUT_CLASSIFICATION	2.488918337876702E-4	IMPLEMENTATION
columns	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
sql statements	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
extra information about the element type	WITHOUT_CLASSIFICATION	0.9999943792601402	WITHOUT_CLASSIFICATION	5.6207398597584325E-6	IMPLEMENTATION
types	WITHOUT_CLASSIFICATION	0.9986905731754453	WITHOUT_CLASSIFICATION	0.0013094268245546995	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9996203667756252	WITHOUT_CLASSIFICATION	3.796332243749135E-4	IMPLEMENTATION
private final string unquotedidentifiercolumnname	WITHOUT_CLASSIFICATION	0.9999024093192425	WITHOUT_CLASSIFICATION	9.759068075749857E-5	IMPLEMENTATION
dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.999948652502079	WITHOUT_CLASSIFICATION	5.134749792096136E-5	IMPLEMENTATION
dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999436112868039	WITHOUT_CLASSIFICATION	5.638871319611263E-5	IMPLEMENTATION
nativesql collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9998524341495342	WITHOUT_CLASSIFICATION	1.4756585046582014E-4	IMPLEMENTATION
unquotedkeycolumnnames = stringhelper.unquote(keycolumnaliases)	WITHOUT_CLASSIFICATION	0.9993932759159657	WITHOUT_CLASSIFICATION	6.06724084034229E-4	IMPLEMENTATION
element	WITHOUT_CLASSIFICATION	0.9998376207961028	WITHOUT_CLASSIFICATION	1.6237920389702991E-4	IMPLEMENTATION
nativesql collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999037301431433	WITHOUT_CLASSIFICATION	9.62698568567652E-5	IMPLEMENTATION
index and row select	WITHOUT_CLASSIFICATION	0.9994814408090966	WITHOUT_CLASSIFICATION	5.185591909034027E-4	IMPLEMENTATION
nativesql collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9995528820360896	WITHOUT_CLASSIFICATION	4.4711796391034696E-4	IMPLEMENTATION
unquotedidentifiercolumnname = identifiercolumnalias	WITHOUT_CLASSIFICATION	0.9993932759159657	WITHOUT_CLASSIFICATION	6.06724084034229E-4	IMPLEMENTATION
unquotedidentifiercolumnname = null	WITHOUT_CLASSIFICATION	0.9994825843156998	WITHOUT_CLASSIFICATION	5.174156843002398E-4	IMPLEMENTATION
generate the sql	WITHOUT_CLASSIFICATION	0.9998792786919217	WITHOUT_CLASSIFICATION	1.2072130807831282E-4	IMPLEMENTATION
for non-arrays we don't need to know the element class elementtype.returnedclass()	WITHOUT_CLASSIFICATION	0.9943803675151246	WITHOUT_CLASSIFICATION	0.0056196324848754265	IMPLEMENTATION
not all classpersisters implement propertymapping!	WITHOUT_CLASSIFICATION	0.542890557018421	WITHOUT_CLASSIFICATION	0.4571094429815789	IMPLEMENTATION
handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.998404075064067	WITHOUT_CLASSIFICATION	0.001595924935933042	IMPLEMENTATION
handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9994018903077877	WITHOUT_CLASSIFICATION	5.981096922122591E-4	IMPLEMENTATION
if there is a user-specified loader return that todo filters!?	WITHOUT_CLASSIFICATION	0.9886468191940323	WITHOUT_CLASSIFICATION	0.011353180805967745	IMPLEMENTATION
take care of any entities that might have been evicted!	WITHOUT_CLASSIFICATION	0.9993592464542417	WITHOUT_CLASSIFICATION	6.407535457582845E-4	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9997123810936552	WITHOUT_CLASSIFICATION	2.8761890634472584E-4	IMPLEMENTATION
run a subquery loader	WITHOUT_CLASSIFICATION	0.9997638940425321	WITHOUT_CLASSIFICATION	2.361059574678363E-4	IMPLEMENTATION
needed by arrays	WITHOUT_CLASSIFICATION	0.6379739854891717	IMPLEMENTATION	0.36202601451082816	WITHOUT_CLASSIFICATION
todo something with formulas	WITHOUT_CLASSIFICATION	0.737649086729587	WITHOUT_CLASSIFICATION	0.2623509132704131	IMPLEMENTATION
an assertion	WITHOUT_CLASSIFICATION	0.9998833615959418	WITHOUT_CLASSIFICATION	1.1663840405811695E-4	IMPLEMENTATION
remove all the old entries	WITHOUT_CLASSIFICATION	0.9999007214365871	WITHOUT_CLASSIFICATION	9.927856341274804E-5	IMPLEMENTATION
create all the new entries	WITHOUT_CLASSIFICATION	0.9999705182042781	WITHOUT_CLASSIFICATION	2.9481795721907342E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9996902181121673	WITHOUT_CLASSIFICATION	3.0978188783270646E-4	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9996902181121673	WITHOUT_CLASSIFICATION	3.0978188783270646E-4	IMPLEMENTATION
delete all the deleted entries	WITHOUT_CLASSIFICATION	0.999358827279397	WITHOUT_CLASSIFICATION	6.411727206030817E-4	IMPLEMENTATION
insert all the new entries	WITHOUT_CLASSIFICATION	0.9998244203962848	WITHOUT_CLASSIFICATION	1.7557960371514738E-4	IMPLEMENTATION
==elementtype ??	WITHOUT_CLASSIFICATION	0.9996909354408108	WITHOUT_CLASSIFICATION	3.090645591891598E-4	IMPLEMENTATION
update all the modified entries	WITHOUT_CLASSIFICATION	0.9998078472154365	WITHOUT_CLASSIFICATION	1.921527845634835E-4	IMPLEMENTATION
identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9991161646960374	WITHOUT_CLASSIFICATION	8.838353039625456E-4	IMPLEMENTATION
update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9987516272285357	WITHOUT_CLASSIFICATION	0.001248372771464261	IMPLEMENTATION
will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9990694220826939	WITHOUT_CLASSIFICATION	9.305779173061112E-4	IMPLEMENTATION
now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.999997445554256	WITHOUT_CLASSIFICATION	2.5544457440629366E-6	IMPLEMENTATION
buf.append( selectfragment( lhsalias "" ) )ignore suffix for collection columns!	WITHOUT_CLASSIFICATION	0.9999116460439272	WITHOUT_CLASSIFICATION	8.835395607280934E-5	IMPLEMENTATION
use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9998603435211616	WITHOUT_CLASSIFICATION	1.396564788384101E-4	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999563708733686	WITHOUT_CLASSIFICATION	4.362912663140716E-5	IMPLEMENTATION
private final string roottablename	WITHOUT_CLASSIFICATION	0.9999024093192425	WITHOUT_CLASSIFICATION	9.759068075749857E-5	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9994168342115285	WITHOUT_CLASSIFICATION	5.83165788471474E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9996203667756252	WITHOUT_CLASSIFICATION	3.796332243749135E-4	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999563708733686	WITHOUT_CLASSIFICATION	4.362912663140716E-5	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9998206181217411	WITHOUT_CLASSIFICATION	1.7938187825900718E-4	IMPLEMENTATION
this could also just be true all the time	WITHOUT_CLASSIFICATION	0.9999700147939802	WITHOUT_CLASSIFICATION	2.9985206019776985E-5	IMPLEMENTATION
chop the last union (all)	WITHOUT_CLASSIFICATION	0.9998856767690975	WITHOUT_CLASSIFICATION	1.1432323090247013E-4	IMPLEMENTATION
todo check this.	WITHOUT_CLASSIFICATION	0.7041237147288106	IMPLEMENTATION	0.29587628527118937	WITHOUT_CLASSIFICATION
initialization	WITHOUT_CLASSIFICATION	0.9994168342115285	WITHOUT_CLASSIFICATION	5.83165788471474E-4	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9997884000016288	WITHOUT_CLASSIFICATION	2.1159999837114542E-4	IMPLEMENTATION
the closure of all properties in the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.999990413825238	WITHOUT_CLASSIFICATION	9.586174762028705E-6	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9998886677452177	WITHOUT_CLASSIFICATION	1.1133225478231007E-4	IMPLEMENTATION
subclass discrimination works by assigning particular values to certain combinations of null primary key values in the outer join using an sql case	WITHOUT_CLASSIFICATION	0.9999998182504498	WITHOUT_CLASSIFICATION	1.817495501584399E-7	IMPLEMENTATION
multitables	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9996203667756252	WITHOUT_CLASSIFICATION	3.796332243749135E-4	IMPLEMENTATION
subclass closure properties	WITHOUT_CLASSIFICATION	0.9997987124227552	WITHOUT_CLASSIFICATION	2.0128757724481626E-4	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9997027878707471	WITHOUT_CLASSIFICATION	2.9721212925292963E-4	IMPLEMENTATION
( (column) model.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9998009859616133	WITHOUT_CLASSIFICATION	1.9901403838664306E-4	IMPLEMENTATION
( (column) sc.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9998009859616133	WITHOUT_CLASSIFICATION	1.9901403838664306E-4	IMPLEMENTATION
don't need subclass tables because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9998501601056756	WITHOUT_CLASSIFICATION	1.498398943244133E-4	IMPLEMENTATION
special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9719155355665667	WITHOUT_CLASSIFICATION	0.028084464433433154	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999563708733686	WITHOUT_CLASSIFICATION	4.362912663140716E-5	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9997884000016288	WITHOUT_CLASSIFICATION	2.1159999837114542E-4	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9998886677452177	WITHOUT_CLASSIFICATION	1.1133225478231007E-4	IMPLEMENTATION
get em on the second pass!	WITHOUT_CLASSIFICATION	0.9997163543897398	WITHOUT_CLASSIFICATION	2.8364561026016566E-4	IMPLEMENTATION
now look up the object we are really interested in! (this lets us correctly handle proxies and multi-row or multi-column queries)	WITHOUT_CLASSIFICATION	0.9998247907769389	WITHOUT_CLASSIFICATION	1.752092230611779E-4	IMPLEMENTATION
discriminator column	WITHOUT_CLASSIFICATION	0.9997103402032707	WITHOUT_CLASSIFICATION	2.896597967293392E-4	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9994168342115285	WITHOUT_CLASSIFICATION	5.83165788471474E-4	IMPLEMENTATION
private final map propertytablenumbersbyname = new hashmap()	WITHOUT_CLASSIFICATION	0.9996532053028625	WITHOUT_CLASSIFICATION	3.467946971374827E-4	IMPLEMENTATION
class + table	WITHOUT_CLASSIFICATION	0.9999114427744596	WITHOUT_CLASSIFICATION	8.855722554033463E-5	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9996827139564163	WITHOUT_CLASSIFICATION	3.172860435837628E-4	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9996594064444858	WITHOUT_CLASSIFICATION	3.405935555141073E-4	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9997027878707471	WITHOUT_CLASSIFICATION	2.9721212925292963E-4	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9998206181217411	WITHOUT_CLASSIFICATION	1.7938187825900718E-4	IMPLEMENTATION
joins	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
propertytablenumbersbyname.put( prop.getname() join )	WITHOUT_CLASSIFICATION	0.9995307295825899	WITHOUT_CLASSIFICATION	4.692704174100799E-4	IMPLEMENTATION
access cached sql	WITHOUT_CLASSIFICATION	0.9994040130765024	WITHOUT_CLASSIFICATION	5.959869234976628E-4	IMPLEMENTATION
figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9914887665352001	WITHOUT_CLASSIFICATION	0.008511233464799935	IMPLEMENTATION
figure out which columns are needed	WITHOUT_CLASSIFICATION	0.5633004246526642	WITHOUT_CLASSIFICATION	0.43669957534733594	IMPLEMENTATION
figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.5633004246526642	WITHOUT_CLASSIFICATION	0.43669957534733594	IMPLEMENTATION
render the sql	WITHOUT_CLASSIFICATION	0.999821058154945	WITHOUT_CLASSIFICATION	1.7894184505489635E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995639437846371	WITHOUT_CLASSIFICATION	4.360562153629203E-4	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999570565157909	WITHOUT_CLASSIFICATION	4.294348420903734E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
the optional sql string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999908028936837	WITHOUT_CLASSIFICATION	9.197106316258479E-6	IMPLEMENTATION
information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999674639729449	WITHOUT_CLASSIFICATION	3.253602705505356E-5	IMPLEMENTATION
information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999967194105132	WITHOUT_CLASSIFICATION	3.2805894869187522E-6	IMPLEMENTATION
information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999957297183046	WITHOUT_CLASSIFICATION	4.270281695334461E-6	IMPLEMENTATION
dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9996184406065324	WITHOUT_CLASSIFICATION	3.815593934675543E-4	IMPLEMENTATION
sql strings	WITHOUT_CLASSIFICATION	0.9990950057205602	WITHOUT_CLASSIFICATION	9.049942794398313E-4	IMPLEMENTATION
for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9998488941203275	WITHOUT_CLASSIFICATION	1.511058796725023E-4	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9996594064444858	WITHOUT_CLASSIFICATION	3.405935555141073E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
identifier	WITHOUT_CLASSIFICATION	0.9994049740000717	WITHOUT_CLASSIFICATION	5.950259999283645E-4	IMPLEMENTATION
version	WITHOUT_CLASSIFICATION	0.9987373868044348	WITHOUT_CLASSIFICATION	0.0012626131955650911	IMPLEMENTATION
where string	WITHOUT_CLASSIFICATION	0.9997667038849084	WITHOUT_CLASSIFICATION	2.3329611509154493E-4	IMPLEMENTATION
subclass property closure	WITHOUT_CLASSIFICATION	0.999740572525617	WITHOUT_CLASSIFICATION	2.5942747438303444E-4	IMPLEMENTATION
before add -)	WITHOUT_CLASSIFICATION	0.9998059280310202	WITHOUT_CLASSIFICATION	1.9407196897983298E-4	IMPLEMENTATION
handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9994828277076764	WITHOUT_CLASSIFICATION	5.17172292323553E-4	IMPLEMENTATION
only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9998176946025771	WITHOUT_CLASSIFICATION	1.8230539742297215E-4	IMPLEMENTATION
note early exit here	WITHOUT_CLASSIFICATION	0.999828961279825	WITHOUT_CLASSIFICATION	1.7103872017503152E-4	IMPLEMENTATION
object have been loaded with setreadonly(true) hhh-2236	WITHOUT_CLASSIFICATION	0.9995286112064813	WITHOUT_CLASSIFICATION	4.7138879351872024E-4	IMPLEMENTATION
note this assumes something about how propertyselectfragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9935876647365908	WITHOUT_CLASSIFICATION	0.006412335263409207	IMPLEMENTATION
strip leading " "	WITHOUT_CLASSIFICATION	0.9996058304552394	WITHOUT_CLASSIFICATION	3.9416954476069086E-4	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999989932095416	WITHOUT_CLASSIFICATION	1.0067904584292182E-6	IMPLEMENTATION
otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9993872467547472	WITHOUT_CLASSIFICATION	6.127532452528702E-4	IMPLEMENTATION
null owner ok??	WITHOUT_CLASSIFICATION	0.9998677830003576	WITHOUT_CLASSIFICATION	1.3221699964238194E-4	IMPLEMENTATION
null sql means that the only lazy properties are shared pk one-to-one associations which are handled differently in the type#nullsafeget code	WITHOUT_CLASSIFICATION	0.9999945006374774	WITHOUT_CLASSIFICATION	5.4993625225091215E-6	IMPLEMENTATION
create a new from node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999961296065212	WITHOUT_CLASSIFICATION	3.870393478856585E-6	IMPLEMENTATION
the difficulty here is exactly what do we update in order to force the version to be incremented in the db	WITHOUT_CLASSIFICATION	0.9960974923995787	WITHOUT_CLASSIFICATION	0.0039025076004212925	IMPLEMENTATION
performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9971661733693352	WITHOUT_CLASSIFICATION	0.002833826630664822	IMPLEMENTATION
properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9982629974843364	WITHOUT_CLASSIFICATION	0.0017370025156635543	IMPLEMENTATION
enable for hhh-440 which we don't like	WITHOUT_CLASSIFICATION	0.9970770770386882	WITHOUT_CLASSIFICATION	0.0029229229613118336	IMPLEMENTATION
aliases	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9997218806723849	WITHOUT_CLASSIFICATION	2.7811932761511994E-4	IMPLEMENTATION
aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9998939918785132	WITHOUT_CLASSIFICATION	1.0600812148678327E-4	IMPLEMENTATION
fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999664222514885	WITHOUT_CLASSIFICATION	3.357774851153792E-5	IMPLEMENTATION
embedded composite ids ( alias.idname1 alias.idname2 )	WITHOUT_CLASSIFICATION	0.9993584976146326	WITHOUT_CLASSIFICATION	6.415023853675324E-4	IMPLEMENTATION
todo skip formulas?	WITHOUT_CLASSIFICATION	0.5384655054743331	IMPLEMENTATION	0.4615344945256668	WITHOUT_CLASSIFICATION
don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9989547841152534	WITHOUT_CLASSIFICATION	0.0010452158847466186	IMPLEMENTATION
do two passes for collection property-ref!	WITHOUT_CLASSIFICATION	0.9980200617664274	WITHOUT_CLASSIFICATION	0.001979938233572634	IMPLEMENTATION
select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999678198556501	WITHOUT_CLASSIFICATION	3.21801443498537E-5	IMPLEMENTATION
todo eventually rowidname[j]	WITHOUT_CLASSIFICATION	0.5118991181573674	IMPLEMENTATION	0.4881008818426325	WITHOUT_CLASSIFICATION
this is a property of the table which we are updating	WITHOUT_CLASSIFICATION	0.999910341682769	WITHOUT_CLASSIFICATION	8.965831723100396E-5	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9994841535874144	WITHOUT_CLASSIFICATION	5.15846412585543E-4	IMPLEMENTATION
we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999403784973485	WITHOUT_CLASSIFICATION	5.962150265143249E-5	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.999997200472796	WITHOUT_CLASSIFICATION	2.799527203932536E-6	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9983659377402829	WITHOUT_CLASSIFICATION	0.0016340622597171423	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9997197899688572	WITHOUT_CLASSIFICATION	2.8021003114283026E-4	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9998330492671049	WITHOUT_CLASSIFICATION	1.6695073289509752E-4	IMPLEMENTATION
more specifically "? [op] datetime" 1) if the operator is minus the param needs to be of some datetime type 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9994758480609173	WITHOUT_CLASSIFICATION	5.241519390827386E-4	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9997197899688572	WITHOUT_CLASSIFICATION	2.8021003114283026E-4	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9983659377402829	WITHOUT_CLASSIFICATION	0.0016340622597171423	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9998330492671049	WITHOUT_CLASSIFICATION	1.6695073289509752E-4	IMPLEMENTATION
add the primary key	WITHOUT_CLASSIFICATION	0.9999410739309718	WITHOUT_CLASSIFICATION	5.892606902831333E-5	IMPLEMENTATION
delegate already handles pk columns	WITHOUT_CLASSIFICATION	0.9999477981003245	WITHOUT_CLASSIFICATION	5.220189967541682E-5	IMPLEMENTATION
we can't batch joined inserts especially not if it is an identity insert nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9953964905210483	WITHOUT_CLASSIFICATION	0.004603509478951723	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.9998389892853089	WITHOUT_CLASSIFICATION	1.6101071469098758E-4	IMPLEMENTATION
write the values of fields onto the prepared statement - we must use the state at the time the insert was issued (cos of foreign key constraints). not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999746981634445	WITHOUT_CLASSIFICATION	2.5301836555377007E-5	IMPLEMENTATION
todo shouldnt inserts be expectations.none?	WITHOUT_CLASSIFICATION	0.7198185003722067	WITHOUT_CLASSIFICATION	0.28018149962779326	IMPLEMENTATION
don't bother trying to update we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9906362199432879	WITHOUT_CLASSIFICATION	0.009363780056712078	IMPLEMENTATION
if all fields are null we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9998325523117448	WITHOUT_CLASSIFICATION	1.6744768825515714E-4	IMPLEMENTATION
there is probably a row there so try to update if no rows were updated we will find out	WITHOUT_CLASSIFICATION	0.9999992739508927	WITHOUT_CLASSIFICATION	7.260491072555439E-7	IMPLEMENTATION
note updates to joined tables can't be batched	WITHOUT_CLASSIFICATION	0.999250500324508	WITHOUT_CLASSIFICATION	7.494996754919446E-4	IMPLEMENTATION
starting index	WITHOUT_CLASSIFICATION	0.9994786805052426	WITHOUT_CLASSIFICATION	5.213194947574644E-4	IMPLEMENTATION
now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999875620356037	WITHOUT_CLASSIFICATION	1.2437964396363225E-5	IMPLEMENTATION
write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9996646883815075	WITHOUT_CLASSIFICATION	3.353116184925168E-4	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.9998389892853089	WITHOUT_CLASSIFICATION	1.6101071469098758E-4	IMPLEMENTATION
do the key. the key is immutable so we can use the _current_ object state - not necessarily the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999601483451729	WITHOUT_CLASSIFICATION	3.985165482702017E-5	IMPLEMENTATION
we should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9992697377798208	WITHOUT_CLASSIFICATION	7.302622201792386E-4	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9932356835876036	WITHOUT_CLASSIFICATION	0.006764316412396446	IMPLEMENTATION
note dirtyfields==null means we had no snapshot and we couldn't get one using select-before-update oldfields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyfields)	WITHOUT_CLASSIFICATION	0.9999913104093845	WITHOUT_CLASSIFICATION	8.689590615542427E-6	IMPLEMENTATION
more specifically "datetime [op] ?" 1) if the operator is minus we really cannot determine the expected type as either another datetime or numeric would be valid 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.999946526714156	WITHOUT_CLASSIFICATION	5.34732858440226E-5	IMPLEMENTATION
for the case of dynamic-update="true" we need to generate the update sql	WITHOUT_CLASSIFICATION	0.999937286789912	WITHOUT_CLASSIFICATION	6.271321008803506E-5	IMPLEMENTATION
don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9622420689304796	WITHOUT_CLASSIFICATION	0.037757931069520474	IMPLEMENTATION
for the case of dynamic-update="false" or no snapshot we use the static sql	WITHOUT_CLASSIFICATION	0.9999650154695712	WITHOUT_CLASSIFICATION	3.4984530428815456E-5	IMPLEMENTATION
if not "get" then try "is"	WITHOUT_CLASSIFICATION	0.9996359311023896	WITHOUT_CLASSIFICATION	3.64068897610423E-4	IMPLEMENTATION
now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9998823875545089	WITHOUT_CLASSIFICATION	1.1761244549113592E-4	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9997341236700314	WITHOUT_CLASSIFICATION	2.658763299685022E-4	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9997341236700314	WITHOUT_CLASSIFICATION	2.658763299685022E-4	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999299313496267	WITHOUT_CLASSIFICATION	7.006865037319376E-5	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999299313496267	WITHOUT_CLASSIFICATION	7.006865037319376E-5	IMPLEMENTATION
not supported	WITHOUT_CLASSIFICATION	0.9980455600147576	WITHOUT_CLASSIFICATION	0.0019544399852423236	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9932356835876036	WITHOUT_CLASSIFICATION	0.006764316412396446	IMPLEMENTATION
we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9968047930334285	WITHOUT_CLASSIFICATION	0.0031952069665714955	IMPLEMENTATION
otherwise utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9994308592635155	WITHOUT_CLASSIFICATION	5.691407364845913E-4	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9996023048393918	WITHOUT_CLASSIFICATION	3.9769516060809756E-4	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9996023048393918	WITHOUT_CLASSIFICATION	3.9769516060809756E-4	IMPLEMENTATION
all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9997148217825338	WITHOUT_CLASSIFICATION	2.851782174661365E-4	IMPLEMENTATION
notice that we skip the first table it is the driving table!	WITHOUT_CLASSIFICATION	0.9991229237586359	WITHOUT_CLASSIFICATION	8.770762413641954E-4	IMPLEMENTATION
we can inner join to superclass tables (the row must be there) we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.973280064264136	WITHOUT_CLASSIFICATION	0.02671993573586389	IMPLEMENTATION
skip the driving table	WITHOUT_CLASSIFICATION	0.9997721148790637	WITHOUT_CLASSIFICATION	2.2788512093624668E-4	IMPLEMENTATION
get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999806947607682	WITHOUT_CLASSIFICATION	1.9305239231794214E-5	IMPLEMENTATION
here we work under the following assumptions ------------ valid cases -------------------------------------- 1) datetime + {something other than datetime} always results in a datetime ( db will catch invalid conversions ) 2) datetime - datetime always results in a double 3) datetime - {something other than datetime} always results in a datetime ( db will catch invalid conversions ) ------------ invalid cases ------------------------------------ 4) datetime + datetime 5) {something other than datetime} - datetime 6) datetime {any type} 7) datetime / {any type} 8) {any type} / datetime doing so allows us to properly handle parameters as either the left or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.999999425342528	WITHOUT_CLASSIFICATION	5.746574720262597E-7	IMPLEMENTATION
render the where and from parts	WITHOUT_CLASSIFICATION	0.9998868560456041	WITHOUT_CLASSIFICATION	1.1314395439577148E-4	IMPLEMENTATION
we could regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9998924076953225	WITHOUT_CLASSIFICATION	1.0759230467738333E-4	IMPLEMENTATION
now render the joins	WITHOUT_CLASSIFICATION	0.9999128127217379	WITHOUT_CLASSIFICATION	8.718727826204314E-5	IMPLEMENTATION
this will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999657722959366	WITHOUT_CLASSIFICATION	3.42277040633079E-5	IMPLEMENTATION
now render the select clause	WITHOUT_CLASSIFICATION	0.9999390218625889	WITHOUT_CLASSIFICATION	6.0978137411230795E-5	IMPLEMENTATION
now tie it all together	WITHOUT_CLASSIFICATION	0.9995902433820794	WITHOUT_CLASSIFICATION	4.0975661792064147E-4	IMPLEMENTATION
insert/update/delete sql	WITHOUT_CLASSIFICATION	0.999716907959248	WITHOUT_CLASSIFICATION	2.830920407521547E-4	IMPLEMENTATION
select sql	WITHOUT_CLASSIFICATION	0.9996457011694551	WITHOUT_CLASSIFICATION	3.542988305450241E-4	IMPLEMENTATION
no need to check laziness dirty checking handles that	WITHOUT_CLASSIFICATION	0.8981703271469407	WITHOUT_CLASSIFICATION	0.10182967285305938	IMPLEMENTATION
fully resolve the map reference create implicit joins.	WITHOUT_CLASSIFICATION	0.9999712128029401	WITHOUT_CLASSIFICATION	2.878719705986808E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997257782642563	WITHOUT_CLASSIFICATION	2.742217357436357E-4	IMPLEMENTATION
the basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.996938400268563	WITHOUT_CLASSIFICATION	0.003061599731437044	IMPLEMENTATION
for dialects which are known to not support ansi-sql row-value-constructor syntax we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9656942798350163	WITHOUT_CLASSIFICATION	0.03430572016498362	IMPLEMENTATION
due to the complexity in initializing the selectclause do not generate one here. if it is not found simply return null also do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999879816352617	WITHOUT_CLASSIFICATION	1.2018364738298067E-5	IMPLEMENTATION
check the version unsaved-value if appropriate	WITHOUT_CLASSIFICATION	0.9993343988941459	WITHOUT_CLASSIFICATION	6.6560110585411E-4	IMPLEMENTATION
let this take precedence if defined since it works for assigned identifiers	WITHOUT_CLASSIFICATION	0.9999864398776854	WITHOUT_CLASSIFICATION	1.3560122314570731E-5	IMPLEMENTATION
check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9965752846085296	WITHOUT_CLASSIFICATION	0.0034247153914703232	IMPLEMENTATION
check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999682980018734	WITHOUT_CLASSIFICATION	3.1701998126569216E-5	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9998205050515236	WITHOUT_CLASSIFICATION	1.794949484763383E-4	IMPLEMENTATION
for property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9998888571712586	WITHOUT_CLASSIFICATION	1.1114282874136252E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999989932095416	WITHOUT_CLASSIFICATION	1.0067904584292182E-6	IMPLEMENTATION
force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9998451984753218	WITHOUT_CLASSIFICATION	1.5480152467808316E-4	IMPLEMENTATION
if this from element is a collection and the path is a collection property (maxindex etc.) then generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999984094976572	WITHOUT_CLASSIFICATION	1.5905023427227593E-6	IMPLEMENTATION
entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997147386948855	WITHOUT_CLASSIFICATION	2.852613051145148E-4	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.999790908927405	WITHOUT_CLASSIFICATION	2.0909107259497268E-4	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.999790908927405	WITHOUT_CLASSIFICATION	2.0909107259497268E-4	IMPLEMENTATION
only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.999922709740327	WITHOUT_CLASSIFICATION	7.729025967293967E-5	IMPLEMENTATION
try "get"	WITHOUT_CLASSIFICATION	0.9995498374278495	WITHOUT_CLASSIFICATION	4.501625721504379E-4	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9997462099476413	WITHOUT_CLASSIFICATION	2.537900523586829E-4	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9997462099476413	WITHOUT_CLASSIFICATION	2.537900523586829E-4	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.993445808196242	WITHOUT_CLASSIFICATION	0.006554191803757987	IMPLEMENTATION
this page intentionally left blank )	WITHOUT_CLASSIFICATION	0.9994010480935295	WITHOUT_CLASSIFICATION	5.989519064705838E-4	IMPLEMENTATION
do not do anything	WITHOUT_CLASSIFICATION	0.9467333419030514	WITHOUT_CLASSIFICATION	0.053266658096948596	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.999641566201331	WITHOUT_CLASSIFICATION	3.5843379866897727E-4	IMPLEMENTATION
cant instantiate	WITHOUT_CLASSIFICATION	0.9996908838671543	WITHOUT_CLASSIFICATION	3.0911613284568965E-4	IMPLEMENTATION
if it is a property of an embedded component invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999905904821328	WITHOUT_CLASSIFICATION	9.409517867146516E-6	IMPLEMENTATION
otherwise	WITHOUT_CLASSIFICATION	0.9981658006930987	WITHOUT_CLASSIFICATION	0.0018341993069013894	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.999602271668576	WITHOUT_CLASSIFICATION	3.977283314239913E-4	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9992554278605946	WITHOUT_CLASSIFICATION	7.445721394053461E-4	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9992554278605946	WITHOUT_CLASSIFICATION	7.445721394053461E-4	IMPLEMENTATION
hhh-2481 make sure the callback gets cleared otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9997725775882832	WITHOUT_CLASSIFICATION	2.274224117168786E-4	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9998320968122147	WITHOUT_CLASSIFICATION	1.6790318778530337E-4	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9998320968122147	WITHOUT_CLASSIFICATION	1.6790318778530337E-4	IMPLEMENTATION
note interface is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9994250620640335	WITHOUT_CLASSIFICATION	5.749379359665044E-4	IMPLEMENTATION
interfaces arguments	WITHOUT_CLASSIFICATION	0.9997482292356017	WITHOUT_CLASSIFICATION	2.5177076439836276E-4	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
get the caller	WITHOUT_CLASSIFICATION	0.9999448547010504	WITHOUT_CLASSIFICATION	5.514529894970218E-5	IMPLEMENTATION
get the caller principals	WITHOUT_CLASSIFICATION	0.9999508143104677	WITHOUT_CLASSIFICATION	4.9185689532334866E-5	IMPLEMENTATION
private static final alias default_alias = new alias(10 null)	WITHOUT_CLASSIFICATION	0.9995693595118322	WITHOUT_CLASSIFICATION	4.306404881678259E-4	IMPLEMENTATION
needed to bump this up to dotnode because that is the only thing which currently knows about the property-ref path in the correct format it is either this or recurse over the dotnodes constructing the property path just like dotnode does internally	WITHOUT_CLASSIFICATION	0.9991720413776769	WITHOUT_CLASSIFICATION	8.279586223231063E-4	IMPLEMENTATION
if the identifier is quoted remove the quotes	WITHOUT_CLASSIFICATION	0.9999836511810761	WITHOUT_CLASSIFICATION	1.6348818923899748E-5	IMPLEMENTATION
truncate the identifier to the max alias length less the suffix length	WITHOUT_CLASSIFICATION	0.9995672771322447	WITHOUT_CLASSIFICATION	4.327228677553401E-4	IMPLEMENTATION
full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9982796765823884	WITHOUT_CLASSIFICATION	0.0017203234176116171	IMPLEMENTATION
null is not considered the same type as integer. $non-nls-1 $non-nls-1	WITHOUT_CLASSIFICATION	0.9994887003172055	WITHOUT_CLASSIFICATION	5.112996827945818E-4	IMPLEMENTATION
the outerjoinsafterwhere needs to come before where clause to properly handle dynamic filters	WITHOUT_CLASSIFICATION	0.9933485506633857	WITHOUT_CLASSIFICATION	0.006651449336614288	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999403979439982	WITHOUT_CLASSIFICATION	5.960205600176349E-5	IMPLEMENTATION
if the condition is not already there	WITHOUT_CLASSIFICATION	0.9999661294331335	WITHOUT_CLASSIFICATION	3.387056686645675E-5	IMPLEMENTATION
dontspace.add("'")	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
for mysql	WITHOUT_CLASSIFICATION	0.9998339832578986	WITHOUT_CLASSIFICATION	1.66016742101342E-4	IMPLEMENTATION
hashmap columnsunique = new hashmap()	WITHOUT_CLASSIFICATION	0.9996541582353416	WITHOUT_CLASSIFICATION	3.458417646584081E-4	IMPLEMENTATION
null caused some problems	WITHOUT_CLASSIFICATION	0.9995092145482122	WITHOUT_CLASSIFICATION	4.907854517879379E-4	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9993155974245415	WITHOUT_CLASSIFICATION	6.844025754585908E-4	IMPLEMENTATION
not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9998770156649838	WITHOUT_CLASSIFICATION	1.2298433501619973E-4	IMPLEMENTATION
even on inverse="true"	WITHOUT_CLASSIFICATION	0.9994686247993976	WITHOUT_CLASSIFICATION	5.31375200602432E-4	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9993155974245415	WITHOUT_CLASSIFICATION	6.844025754585908E-4	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9993155974245415	WITHOUT_CLASSIFICATION	6.844025754585908E-4	IMPLEMENTATION
if true then execute db updates otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999763900238358	WITHOUT_CLASSIFICATION	2.3609976164258547E-5	IMPLEMENTATION
we only release the connection	WITHOUT_CLASSIFICATION	0.990488812384812	WITHOUT_CLASSIFICATION	0.009511187615187912	IMPLEMENTATION
deprecated option	WITHOUT_CLASSIFICATION	0.9997735985698699	WITHOUT_CLASSIFICATION	2.2640143013012232E-4	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.999992625357887	WITHOUT_CLASSIFICATION	7.374642113007455E-6	IMPLEMENTATION
actually this last test is probably unnecessary since beforecompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999996705543166	WITHOUT_CLASSIFICATION	3.2944568334885125E-7	IMPLEMENTATION
this one only really needed for badly-behaved applications! (if the transactionmanager has a sychronization registered its a noop) (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.8908675978762172	IMPLEMENTATION	0.10913240212378282	WITHOUT_CLASSIFICATION
create an dotnode ast for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999962125897177	WITHOUT_CLASSIFICATION	3.7874102823000646E-6	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.999992625357887	WITHOUT_CLASSIFICATION	7.374642113007455E-6	IMPLEMENTATION
if we could not register a synchronization do the before/after completion callbacks ourself (but we need to let jdbccontext know that this is what we are going to do so it doesn't keep trying to register synchronizations)	WITHOUT_CLASSIFICATION	0.937147130887374	IMPLEMENTATION	0.06285286911262601	WITHOUT_CLASSIFICATION
swallow it and continue to roll back jta transaction	WITHOUT_CLASSIFICATION	0.9980646804768264	WITHOUT_CLASSIFICATION	0.0019353195231736093	IMPLEMENTATION
so the transaction is already rolled back by jta spec	WITHOUT_CLASSIFICATION	0.9999829772861386	WITHOUT_CLASSIFICATION	1.702271386135597E-5	IMPLEMENTATION
this method is a noop if there is a synchronization!	WITHOUT_CLASSIFICATION	0.9999575863035334	WITHOUT_CLASSIFICATION	4.241369646653005E-5	IMPLEMENTATION
two conditions where we need to transform this to a theta-join syntax 1) 'elem' is the "root from-element" in correlated subqueries 2) the dotnode.usethetastyleimplicitjoins has been set to true and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9989210160258298	WITHOUT_CLASSIFICATION	0.001078983974170189	IMPLEMENTATION
websphere however is not a sane jee/jta container	WITHOUT_CLASSIFICATION	0.9966373058272282	WITHOUT_CLASSIFICATION	0.0033626941727718015	IMPLEMENTATION
for sane jee/jta containers the transaction itself functions as its identifier	WITHOUT_CLASSIFICATION	0.9999686323113707	WITHOUT_CLASSIFICATION	3.13676886292703E-5	IMPLEMENTATION
swallow the transaction was finished	WITHOUT_CLASSIFICATION	0.9999688253263157	WITHOUT_CLASSIFICATION	3.117467368430521E-5	IMPLEMENTATION
all aliastoentitymapresulttransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998308686554396	WITHOUT_CLASSIFICATION	1.691313445605098E-4	IMPLEMENTATION
create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999910404251918	WITHOUT_CLASSIFICATION	8.959574808071326E-6	IMPLEMENTATION
all distinctrootentityresulttransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998308686554396	WITHOUT_CLASSIFICATION	1.691313445605098E-4	IMPLEMENTATION
map of entitymode -> tuplizer	WITHOUT_CLASSIFICATION	0.9999692946720775	WITHOUT_CLASSIFICATION	3.0705327922431225E-5	IMPLEMENTATION
this is a virtual id property	WITHOUT_CLASSIFICATION	0.9980606033450041	WITHOUT_CLASSIFICATION	0.0019393966549958947	IMPLEMENTATION
this one needed only for guessentitymode()	WITHOUT_CLASSIFICATION	0.5748225240735584	WITHOUT_CLASSIFICATION	0.42517747592644173	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.999995438873347	WITHOUT_CLASSIFICATION	4.561126653020286E-6	IMPLEMENTATION
todo move this to sf per hhh-3517 also see hhh-1907 and componentmetamodel	WITHOUT_CLASSIFICATION	0.591046996409449	WITHOUT_CLASSIFICATION	0.4089530035905509	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999965709160881	WITHOUT_CLASSIFICATION	3.4290839119341174E-6	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999324913467719	WITHOUT_CLASSIFICATION	6.750865322815564E-5	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999866473214724	WITHOUT_CLASSIFICATION	1.3352678527681206E-5	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999324913467719	WITHOUT_CLASSIFICATION	6.750865322815564E-5	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9995405791863614	WITHOUT_CLASSIFICATION	4.5942081363854124E-4	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9997875193988803	WITHOUT_CLASSIFICATION	2.124806011196347E-4	IMPLEMENTATION
private final sessionfactoryimplementor sessionfactory	WITHOUT_CLASSIFICATION	0.9997755805131938	WITHOUT_CLASSIFICATION	2.2441948680617632E-4	IMPLEMENTATION
cached for efficiency	WITHOUT_CLASSIFICATION	0.9998966134910261	WITHOUT_CLASSIFICATION	1.0338650897389806E-4	IMPLEMENTATION
public componentmetamodel(component component sessionfactoryimplementor sessionfactory) {	WITHOUT_CLASSIFICATION	0.9999864639910129	WITHOUT_CLASSIFICATION	1.3536008987008702E-5	IMPLEMENTATION
this.sessionfactory = sessionfactory	WITHOUT_CLASSIFICATION	0.9993932759159657	WITHOUT_CLASSIFICATION	6.06724084034229E-4	IMPLEMENTATION
it was not embedded so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999736302521748	WITHOUT_CLASSIFICATION	2.6369747825108812E-5	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999965709160881	WITHOUT_CLASSIFICATION	3.4290839119341174E-6	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999866473214724	WITHOUT_CLASSIFICATION	1.3352678527681206E-5	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9995405791863614	WITHOUT_CLASSIFICATION	4.5942081363854124E-4	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9996997318004213	WITHOUT_CLASSIFICATION	3.0026819957875757E-4	IMPLEMENTATION
return currentid	WITHOUT_CLASSIFICATION	0.9999076292629414	WITHOUT_CLASSIFICATION	9.237073705863586E-5	IMPLEMENTATION
reset the id	WITHOUT_CLASSIFICATION	0.9974889515701958	WITHOUT_CLASSIFICATION	0.0025110484298041806	IMPLEMENTATION
origin.adddestination( destination ) this was the cause of hhh-242 origin.settype( from_fragment ) set the parent node type so that the ast is properly formed. the destination node will have all the from text. the parent node is a collection join too (voodoo - see joinprocessor)	WITHOUT_CLASSIFICATION	0.9999962780379696	WITHOUT_CLASSIFICATION	3.7219620302757713E-6	IMPLEMENTATION
reset the version	WITHOUT_CLASSIFICATION	0.9984145031689333	WITHOUT_CLASSIFICATION	0.0015854968310665993	IMPLEMENTATION
the default is to simply not lazy fetch properties for now	WITHOUT_CLASSIFICATION	0.9997979317014999	WITHOUT_CLASSIFICATION	2.0206829850006306E-4	IMPLEMENTATION
add the second join the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.999954561266104	WITHOUT_CLASSIFICATION	4.543873389596383E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997257782642563	WITHOUT_CLASSIFICATION	2.742217357436357E-4	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9997875193988803	WITHOUT_CLASSIFICATION	2.124806011196347E-4	IMPLEMENTATION
determine the id getter and setter methods from the proxy interface (if any) determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.5152172098136585	WITHOUT_CLASSIFICATION	0.4847827901863414	IMPLEMENTATION
return getfactory().getsettings().getbytecodeprovider().getproxyfactoryfactory().buildproxyfactory()	WITHOUT_CLASSIFICATION	0.9999166725837143	WITHOUT_CLASSIFICATION	8.332741628574232E-5	IMPLEMENTATION
not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9933165101688178	WITHOUT_CLASSIFICATION	0.006683489831182145	IMPLEMENTATION
superclass entity-name	WITHOUT_CLASSIFICATION	0.9997612592398973	WITHOUT_CLASSIFICATION	2.3874076010270897E-4	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997257782642563	WITHOUT_CLASSIFICATION	2.742217357436357E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
init the aliases after initing the constructornode	WITHOUT_CLASSIFICATION	0.9997557570294532	WITHOUT_CLASSIFICATION	2.442429705467079E-4	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997257782642563	WITHOUT_CLASSIFICATION	2.742217357436357E-4	IMPLEMENTATION
legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9998738285122611	WITHOUT_CLASSIFICATION	1.261714877389314E-4	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9998083734632452	WITHOUT_CLASSIFICATION	1.9162653675472565E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
note this affects the return value!	WITHOUT_CLASSIFICATION	0.9998774827984407	WITHOUT_CLASSIFICATION	1.2251720155931296E-4	IMPLEMENTATION
need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9973310830784128	WITHOUT_CLASSIFICATION	0.0026689169215871273	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999699440798305	WITHOUT_CLASSIFICATION	3.005592016950645E-5	IMPLEMENTATION
collection types	WITHOUT_CLASSIFICATION	0.9991272684836411	WITHOUT_CLASSIFICATION	8.727315163588813E-4	IMPLEMENTATION
convenience methods relating to operations across arrays of types	WITHOUT_CLASSIFICATION	0.9988228637853497	WITHOUT_CLASSIFICATION	0.0011771362146504043	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.999869912306425	WITHOUT_CLASSIFICATION	1.3008769357509759E-4	IMPLEMENTATION
blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9993885774606657	WITHOUT_CLASSIFICATION	6.114225393342977E-4	IMPLEMENTATION
value is the entity name	WITHOUT_CLASSIFICATION	0.9999119046575574	WITHOUT_CLASSIFICATION	8.809534244264304E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9998695127856638	WITHOUT_CLASSIFICATION	1.304872143362617E-4	IMPLEMENTATION
generate id select fragment and then property select fragment for each expression just like generateselectfragments().	WITHOUT_CLASSIFICATION	0.99782964759075	WITHOUT_CLASSIFICATION	0.0021703524092500604	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
xml is the entity name	WITHOUT_CLASSIFICATION	0.999835287974389	WITHOUT_CLASSIFICATION	1.6471202561101002E-4	IMPLEMENTATION
special case this is the leaf of the containment graph even though not immutable	WITHOUT_CLASSIFICATION	0.9996441684504346	WITHOUT_CLASSIFICATION	3.558315495653837E-4	IMPLEMENTATION
tolerates nulls	WITHOUT_CLASSIFICATION	0.9996832199272552	WITHOUT_CLASSIFICATION	3.1678007274480607E-4	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
metatype is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9998741701029156	WITHOUT_CLASSIFICATION	1.2582989708441496E-4	IMPLEMENTATION
get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999691893818708	WITHOUT_CLASSIFICATION	3.0810618129135975E-5	IMPLEMENTATION
look through the fromelement's children to find any collections of values that should be fetched	WITHOUT_CLASSIFICATION	0.9987729769740609	WITHOUT_CLASSIFICATION	0.0012270230259392141	IMPLEMENTATION
return associationtype.foreign_key_to_parent this is better but causes a transient object exception	WITHOUT_CLASSIFICATION	0.999991489004581	WITHOUT_CLASSIFICATION	8.510995418910906E-6	IMPLEMENTATION
use the lower case function name. remember whether we're in a select clause or not.	WITHOUT_CLASSIFICATION	0.9999987970088561	WITHOUT_CLASSIFICATION	1.202991143945216E-6	IMPLEMENTATION
ident might be the name of a class.	WITHOUT_CLASSIFICATION	0.999940279142835	WITHOUT_CLASSIFICATION	5.97208571649346E-5	IMPLEMENTATION
todo!!!	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
st.settimestamp( index new timestamp( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9996612720909948	WITHOUT_CLASSIFICATION	3.387279090051908E-4	IMPLEMENTATION
st.setdate( index new date( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9996612720909948	WITHOUT_CLASSIFICATION	3.387279090051908E-4	IMPLEMENTATION
both are timestamps	WITHOUT_CLASSIFICATION	0.9998956275617324	WITHOUT_CLASSIFICATION	1.0437243826755072E-4	IMPLEMENTATION
at least one is a plain old date	WITHOUT_CLASSIFICATION	0.9999544572954314	WITHOUT_CLASSIFICATION	4.5542704568575695E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9995588299272636	WITHOUT_CLASSIFICATION	4.411700727363373E-4	IMPLEMENTATION
if the corresponding sql value is null the reader we got is null as well	WITHOUT_CLASSIFICATION	0.999998237128199	WITHOUT_CLASSIFICATION	1.7628718008897237E-6	IMPLEMENTATION
fetch reader content up to the end - and put characters in a stringbuffer	WITHOUT_CLASSIFICATION	0.999294859754371	WITHOUT_CLASSIFICATION	7.051402456288157E-4	IMPLEMENTATION
return stringbuffer content as a large string	WITHOUT_CLASSIFICATION	0.9996125911620167	WITHOUT_CLASSIFICATION	3.874088379832621E-4	IMPLEMENTATION
or types.longvarchar?	WITHOUT_CLASSIFICATION	0.9997490951167309	WITHOUT_CLASSIFICATION	2.509048832690516E-4	IMPLEMENTATION
not called at runtime so doesn't matter if its slow )	WITHOUT_CLASSIFICATION	0.9999408634905008	WITHOUT_CLASSIFICATION	5.913650949922158E-5	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.5359355428947685	WITHOUT_CLASSIFICATION	0.4640644571052314	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999342951118215	WITHOUT_CLASSIFICATION	6.570488817838009E-5	IMPLEMENTATION
different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9998239913239368	WITHOUT_CLASSIFICATION	1.7600867606313176E-4	IMPLEMENTATION
cache this	WITHOUT_CLASSIFICATION	0.9985625450478616	WITHOUT_CLASSIFICATION	0.0014374549521383238	IMPLEMENTATION
only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9993081052522722	WITHOUT_CLASSIFICATION	6.918947477277623E-4	IMPLEMENTATION
forcefully remove leading ands from where fragments the grammar will handle adding them	WITHOUT_CLASSIFICATION	0.9998858629520933	WITHOUT_CLASSIFICATION	1.1413704790670873E-4	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
create a new filters node as a parent of all filters	WITHOUT_CLASSIFICATION	0.999967633842393	WITHOUT_CLASSIFICATION	3.2366157606981924E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
public object instantiate(object parent sessionimplementor session) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999129407120156	WITHOUT_CLASSIFICATION	8.705928798442649E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9995509144132142	WITHOUT_CLASSIFICATION	4.490855867857873E-4	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9995509144132142	WITHOUT_CLASSIFICATION	4.490855867857873E-4	IMPLEMENTATION
versiontype impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ note simply returns null for seed() and next() as the only known application of binary types for versioning is for use with the timestamp datatype supported by sybase and sql server which are completely db-generated values	WITHOUT_CLASSIFICATION	0.9994208048868258	WITHOUT_CLASSIFICATION	5.791951131741153E-4	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.999869912306425	WITHOUT_CLASSIFICATION	1.3008769357509759E-4	IMPLEMENTATION
not really necessary i guess	WITHOUT_CLASSIFICATION	0.9833760042519103	WITHOUT_CLASSIFICATION	0.01662399574808969	IMPLEMENTATION
clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9998732867279986	WITHOUT_CLASSIFICATION	1.267132720014222E-4	IMPLEMENTATION
we do not have to worry about queued additions to uninitialized collections since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9984508872840754	WITHOUT_CLASSIFICATION	0.0015491127159246467	IMPLEMENTATION
collections cannot be compared	WITHOUT_CLASSIFICATION	0.9998703923394522	WITHOUT_CLASSIFICATION	1.296076605478697E-4	IMPLEMENTATION
remember the uk value	WITHOUT_CLASSIFICATION	0.9999308186817181	WITHOUT_CLASSIFICATION	6.918131828192679E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9995588299272636	WITHOUT_CLASSIFICATION	4.411700727363373E-4	IMPLEMENTATION
processcollectionproperty(token q.getcollectionpersister(collectionrole) collectionname)	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
we must use the "remembered" uk value since it is not available from the entityentry during assembly	WITHOUT_CLASSIFICATION	0.9992629900506433	WITHOUT_CLASSIFICATION	7.370099493567308E-4	IMPLEMENTATION
collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9988852971123684	WITHOUT_CLASSIFICATION	0.0011147028876316103	IMPLEMENTATION
return false	WITHOUT_CLASSIFICATION	0.9999590009153173	WITHOUT_CLASSIFICATION	4.099908468264822E-5	IMPLEMENTATION
this just handles a particular case of component projection perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999908967440497	WITHOUT_CLASSIFICATION	9.103255950219595E-6	IMPLEMENTATION
note we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.999993621892789	WITHOUT_CLASSIFICATION	6.378107211060072E-6	IMPLEMENTATION
the key is the owning entity itself so get the id from the key	WITHOUT_CLASSIFICATION	0.9999940688555948	WITHOUT_CLASSIFICATION	5.9311444051626175E-6	IMPLEMENTATION
if the original is a persistentcollection and that original was not flagged as dirty then reset the target's dirty flag here after the copy operation. </p> one thing to be careful of here is a "bare" original collection in which case we should never ever ever reset the dirty flag on the target because we simply do not know	WITHOUT_CLASSIFICATION	0.5100476793367995	WITHOUT_CLASSIFICATION	0.48995232066320055	IMPLEMENTATION
ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9997761316104014	WITHOUT_CLASSIFICATION	2.2386838959851242E-4	IMPLEMENTATION
copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9987304690631146	WITHOUT_CLASSIFICATION	0.0012695309368854068	IMPLEMENTATION
for a null target or a target which is the same as the original we need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999562340750365	WITHOUT_CLASSIFICATION	4.376592496337952E-5	IMPLEMENTATION
by default just use an unanticipated capacity since we don't know how to extract the capacity to use from original here	WITHOUT_CLASSIFICATION	0.9916963869672275	WITHOUT_CLASSIFICATION	0.008303613032772482	IMPLEMENTATION
get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9970117116489645	WITHOUT_CLASSIFICATION	0.0029882883510355036	IMPLEMENTATION
check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999781077221173	WITHOUT_CLASSIFICATION	2.189227788272707E-5	IMPLEMENTATION
check if it is already completely loaded but unowned	WITHOUT_CLASSIFICATION	0.9999924325589297	WITHOUT_CLASSIFICATION	7.5674410703391425E-6	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9955807915227155	WITHOUT_CLASSIFICATION	0.004419208477284578	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
create a new collection wrapper to be initialized later	WITHOUT_CLASSIFICATION	0.9998612314769493	WITHOUT_CLASSIFICATION	1.3876852305074722E-4	IMPLEMENTATION
some jdbc drivers erroneously return an empty array here for a null db value /	WITHOUT_CLASSIFICATION	0.9998119502064021	WITHOUT_CLASSIFICATION	1.880497935978136E-4	IMPLEMENTATION
our column span is the number of columns in the pk	WITHOUT_CLASSIFICATION	0.999998240518113	WITHOUT_CLASSIFICATION	1.759481887025103E-6	IMPLEMENTATION
cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9997373722113513	WITHOUT_CLASSIFICATION	2.6262778864869206E-4	IMPLEMENTATION
we already know current is not null	WITHOUT_CLASSIFICATION	0.9461765907433833	WITHOUT_CLASSIFICATION	0.05382340925661664	IMPLEMENTATION
the ids are fully resolved so compare them with isdirty() not ismodified()	WITHOUT_CLASSIFICATION	0.999447227388193	WITHOUT_CLASSIFICATION	5.527726118070084E-4	IMPLEMENTATION
the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9984724567489999	WITHOUT_CLASSIFICATION	0.0015275432510001173	IMPLEMENTATION
----------------------------------------------------------- constructors	WITHOUT_CLASSIFICATION	0.9993428797290637	WITHOUT_CLASSIFICATION	6.571202709362484E-4	IMPLEMENTATION
----------------------------------------------------- instance variables	WITHOUT_CLASSIFICATION	0.9998984006439182	WITHOUT_CLASSIFICATION	1.0159935608174863E-4	IMPLEMENTATION
public static jdbcexception newjdbcexception(string string sqlexception root string sql) { string = string + " [" + sql + ']' log.error(string root) logexceptions(root) return new jdbcexception(string root sql) } public static jdbcexception newjdbcexception(string string sqlexception root) { log.error(string root) logexceptions(root) return new jdbcexception(string root) }	WITHOUT_CLASSIFICATION	0.9999906906285114	WITHOUT_CLASSIFICATION	9.30937148847303E-6	IMPLEMENTATION
--------------------------------------------------------- public methods	WITHOUT_CLASSIFICATION	0.9999640725432787	WITHOUT_CLASSIFICATION	3.592745672130728E-5	IMPLEMENTATION
compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9997299035276861	WITHOUT_CLASSIFICATION	2.700964723139243E-4	IMPLEMENTATION
simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9989878110005592	WITHOUT_CLASSIFICATION	0.0010121889994407687	IMPLEMENTATION
sybase fail if we don't do that sigh	WITHOUT_CLASSIFICATION	0.9995864705749711	WITHOUT_CLASSIFICATION	4.13529425028888E-4	IMPLEMENTATION
handles things like a and b or c a and ( b or c ) not a and not b not ( a and b ) x between y and z (overloaded "and") x in ( a b c ) (overloaded brackets) not not a a is not null (overloaded "not") etc and expressions like foo = bar (maps to foo.id = bar.id) foo.bar = 'foo' (maps to foo.bar = 'foo') foo.bar.baz = 1.0 (maps to foo.bar = bar.id and bar.baz = 1.0) 1.0 = foo.bar.baz (maps to bar.baz = 1.0 and foo.bar = bar.id) foo.bar.baz = a.b.c (maps to bar.baz = b.c and foo.bar = bar.id and a.b = b.id) foo.bar.baz + a.b.c (maps to bar.baz + b.c and foo.bar = bar.id and a.b = b.id) ( foo.bar.baz + 1.0 ) < 2.0 (maps to ( bar.baz + 1.0 ) < 2.0 and foo.bar = bar.id)	WITHOUT_CLASSIFICATION	0.9965863371799653	WITHOUT_CLASSIFICATION	0.003413662820034842	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9979249768558766	WITHOUT_CLASSIFICATION	0.0020750231441234905	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9979249768558766	WITHOUT_CLASSIFICATION	0.0020750231441234905	IMPLEMENTATION
try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9989982702601189	WITHOUT_CLASSIFICATION	0.0010017297398811405	IMPLEMENTATION
otherwise just dump it	WITHOUT_CLASSIFICATION	0.9993393002148395	WITHOUT_CLASSIFICATION	6.606997851604839E-4	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.999931357105753	WITHOUT_CLASSIFICATION	6.864289424691843E-5	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.999931357105753	WITHOUT_CLASSIFICATION	6.864289424691843E-5	IMPLEMENTATION
use default behavior	WITHOUT_CLASSIFICATION	0.9998985309254275	WITHOUT_CLASSIFICATION	1.0146907457251057E-4	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999672422352014	WITHOUT_CLASSIFICATION	3.275776479858866E-5	IMPLEMENTATION
the mru cache used to keep hard references to the most recently used query plans note lru here is a bit of a misnomer it indicates that lru entries are removed the actual kept entries are the mru entries	WITHOUT_CLASSIFICATION	0.9859818432732602	WITHOUT_CLASSIFICATION	0.014018156726739705	IMPLEMENTATION
we want to be able to just use the defaults if jndi environment properties are not supplied so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999895308673236	WITHOUT_CLASSIFICATION	1.0469132676419282E-5	IMPLEMENTATION
clone -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999777265695021	WITHOUT_CLASSIFICATION	2.2273430497883403E-5	IMPLEMENTATION
serialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999844156126951	WITHOUT_CLASSIFICATION	1.5584387304849682E-5	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999844156126951	WITHOUT_CLASSIFICATION	1.5584387304849682E-5	IMPLEMENTATION
deserialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
static methods only - hide constructor	WITHOUT_CLASSIFICATION	0.999621679099173	WITHOUT_CLASSIFICATION	3.783209008270695E-4	IMPLEMENTATION
&& !('_'==character)	WITHOUT_CLASSIFICATION	0.9996902181121673	WITHOUT_CLASSIFICATION	3.0978188783270646E-4	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
includes last '.'	WITHOUT_CLASSIFICATION	0.9997750139346303	WITHOUT_CLASSIFICATION	2.2498606536964854E-4	IMPLEMENTATION
+1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9997458063067565	WITHOUT_CLASSIFICATION	2.541936932435838E-4	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9991901862554033	WITHOUT_CLASSIFICATION	8.09813744596796E-4	IMPLEMENTATION
first time we find match!	WITHOUT_CLASSIFICATION	0.9985075440962076	WITHOUT_CLASSIFICATION	0.0014924559037924937	IMPLEMENTATION
entitynames may now include slashes for the representations classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999984150364534	WITHOUT_CLASSIFICATION	1.5849635466462878E-6	IMPLEMENTATION
wrapped iterators	WITHOUT_CLASSIFICATION	0.9995869951609712	WITHOUT_CLASSIFICATION	4.1300483902874196E-4	IMPLEMENTATION
index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999545518578377	WITHOUT_CLASSIFICATION	4.544814216228101E-5	IMPLEMENTATION
the current iterator	WITHOUT_CLASSIFICATION	0.9995279613212434	WITHOUT_CLASSIFICATION	4.7203867875654753E-4	IMPLEMENTATION
the last used iterator	WITHOUT_CLASSIFICATION	0.9998230929731826	WITHOUT_CLASSIFICATION	1.7690702681746537E-4	IMPLEMENTATION
it was a boolean expression	WITHOUT_CLASSIFICATION	0.9998042336543419	WITHOUT_CLASSIFICATION	1.9576634565806388E-4	IMPLEMENTATION
public static object[] clone(class elementclass object[] array) {object[] result = (object[]) array.newinstance( elementclass array.length )system.arraycopy(array 0 result 0 array.length)return result}	WITHOUT_CLASSIFICATION	0.9998921613542641	WITHOUT_CLASSIFICATION	1.0783864573589248E-4	IMPLEMENTATION
call this before any iterator method to make sure that the current iterator is not exhausted	WITHOUT_CLASSIFICATION	0.8067481248876176	WITHOUT_CLASSIFICATION	0.19325187511238243	IMPLEMENTATION
doable if needed	WITHOUT_CLASSIFICATION	0.806820982582116	WITHOUT_CLASSIFICATION	0.1931790174178839	IMPLEMENTATION
set last used iterator here in case the user calls remove before calling hasnext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999537104363838	WITHOUT_CLASSIFICATION	4.6289563616100016E-5	IMPLEMENTATION
peek ahead	WITHOUT_CLASSIFICATION	0.9995574089924385	WITHOUT_CLASSIFICATION	4.4259100756146815E-4	IMPLEMENTATION
if we reach the end of the string w/o finding the matching end that is an exception	WITHOUT_CLASSIFICATION	0.9999912336647261	WITHOUT_CLASSIFICATION	8.76633527387072E-6	IMPLEMENTATION
we have a placeholder spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9979285024569624	WITHOUT_CLASSIFICATION	0.0020714975430375384	IMPLEMENTATION
make sure spinning forward did not put us past the end of the buffer	WITHOUT_CLASSIFICATION	0.9893171607481914	WITHOUT_CLASSIFICATION	0.01068283925180851	IMPLEMENTATION
first try to locate this resource through the current context classloader.	WITHOUT_CLASSIFICATION	0.9933815251100204	WITHOUT_CLASSIFICATION	0.006618474889979668	IMPLEMENTATION
next try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9959785902167629	WITHOUT_CLASSIFICATION	0.004021409783237128	IMPLEMENTATION
next try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9935409341614077	WITHOUT_CLASSIFICATION	0.0064590658385922815	IMPLEMENTATION
anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9994209942842891	WITHOUT_CLASSIFICATION	5.790057157109022E-4	IMPLEMENTATION
would need an identityset for this!	WITHOUT_CLASSIFICATION	0.9986578488822252	WITHOUT_CLASSIFICATION	0.0013421511177747994	IMPLEMENTATION
arrays.aslist doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9997374567264107	WITHOUT_CLASSIFICATION	2.625432735893148E-4	IMPLEMENTATION
faster?	WITHOUT_CLASSIFICATION	0.9995567008789845	WITHOUT_CLASSIFICATION	4.432991210154433E-4	IMPLEMENTATION
the name of a class	WITHOUT_CLASSIFICATION	0.9999540432210009	WITHOUT_CLASSIFICATION	4.5956778999149893E-5	IMPLEMENTATION
its the listener class name	WITHOUT_CLASSIFICATION	0.9998651141516698	WITHOUT_CLASSIFICATION	1.348858483302554E-4	IMPLEMENTATION
allow 987654321	WITHOUT_CLASSIFICATION	0.9994138097239917	WITHOUT_CLASSIFICATION	5.861902760082114E-4	IMPLEMENTATION
default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999948284334167	WITHOUT_CLASSIFICATION	5.171566583274047E-6	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999373604630563	WITHOUT_CLASSIFICATION	6.263953694378167E-5	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999983479796298	WITHOUT_CLASSIFICATION	1.6520203701593026E-6	IMPLEMENTATION
first lets determine whether to apply cglib or javassist based instrumentation	WITHOUT_CLASSIFICATION	0.9998921536142859	WITHOUT_CLASSIFICATION	1.0784638571419796E-4	IMPLEMENTATION
make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.999803542063053	WITHOUT_CLASSIFICATION	1.9645793694712482E-4	IMPLEMENTATION
entirely optional!!	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9996977393307239	WITHOUT_CLASSIFICATION	3.0226066927609976E-4	IMPLEMENTATION
context.unbind(boundname)	WITHOUT_CLASSIFICATION	0.999716907959248	WITHOUT_CLASSIFICATION	2.830920407521547E-4	IMPLEMENTATION
readresolveobject	WITHOUT_CLASSIFICATION	0.9996826159617992	WITHOUT_CLASSIFICATION	3.1738403820082497E-4	IMPLEMENTATION
cfg.setproperty("hibernate.show_sql" "true")	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
defensive convenience methods	WITHOUT_CLASSIFICATION	0.9997718991696829	WITHOUT_CLASSIFICATION	2.281008303169553E-4	IMPLEMENTATION
create the sessionfactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999900479036413	WITHOUT_CLASSIFICATION	9.952096358622838E-6	IMPLEMENTATION
make sure you log the exception as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999458300951711	WITHOUT_CLASSIFICATION	5.416990482896905E-5	IMPLEMENTATION
begin unit of work	WITHOUT_CLASSIFICATION	0.9995585812713293	WITHOUT_CLASSIFICATION	4.4141872867064006E-4	IMPLEMENTATION
write html header	WITHOUT_CLASSIFICATION	0.9996942870595801	WITHOUT_CLASSIFICATION	3.0571294041987796E-4	IMPLEMENTATION
handle actions	WITHOUT_CLASSIFICATION	0.9989687827388086	WITHOUT_CLASSIFICATION	0.001031217261191453	IMPLEMENTATION
print page	WITHOUT_CLASSIFICATION	0.9995648216917592	WITHOUT_CLASSIFICATION	4.3517830824073517E-4	IMPLEMENTATION
write html footer	WITHOUT_CLASSIFICATION	0.9996022796907932	WITHOUT_CLASSIFICATION	3.977203092067386E-4	IMPLEMENTATION
end unit of work	WITHOUT_CLASSIFICATION	0.9993383339051355	WITHOUT_CLASSIFICATION	6.616660948644586E-4	IMPLEMENTATION
start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9997943928213875	WITHOUT_CLASSIFICATION	2.0560717861248438E-4	IMPLEMENTATION
make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.998562580807144	WITHOUT_CLASSIFICATION	0.0014374191928559613	IMPLEMENTATION
pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9983719497732811	WITHOUT_CLASSIFICATION	0.001628050226718919	IMPLEMENTATION
remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999477851348784	WITHOUT_CLASSIFICATION	5.221486512168491E-5	IMPLEMENTATION
eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9997079295754904	WITHOUT_CLASSIFICATION	2.920704245095947E-4	IMPLEMENTATION
if we want to handle it bidirectional and detached we also need to load this collection with an eager outer-join fetch this time with criteria and not hql	WITHOUT_CLASSIFICATION	0.8458275066318187	WITHOUT_CLASSIFICATION	0.15417249336818134	IMPLEMENTATION
event anevent = (event) session .createcriteria(event.class).setfetchmode("participants" fetchmode.join) .add( expression.eq("id" eventid) ) .uniqueresult() eager fetch the colleciton so we can use it detached	WITHOUT_CLASSIFICATION	0.9993616859122648	WITHOUT_CLASSIFICATION	6.383140877351033E-4	IMPLEMENTATION
end of first unit of work	WITHOUT_CLASSIFICATION	0.9992470544742352	WITHOUT_CLASSIFICATION	7.529455257647338E-4	IMPLEMENTATION
or bidirectional safety method setting both sides aperson.addtoevent(anevent)	WITHOUT_CLASSIFICATION	0.9997408747681352	WITHOUT_CLASSIFICATION	2.591252318648089E-4	IMPLEMENTATION
begin second unit of work	WITHOUT_CLASSIFICATION	0.9994991197876908	WITHOUT_CLASSIFICATION	5.00880212309211E-4	IMPLEMENTATION
reattachment of aperson	WITHOUT_CLASSIFICATION	0.9998627843552955	WITHOUT_CLASSIFICATION	1.3721564470452256E-4	IMPLEMENTATION
the getemailaddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999566192520434	WITHOUT_CLASSIFICATION	4.338074795652238E-5	IMPLEMENTATION
we need our tm so get it now and avoid doing other work if there is a problem	WITHOUT_CLASSIFICATION	0.9999744553058082	WITHOUT_CLASSIFICATION	2.554469419183304E-5	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9978371097447932	WITHOUT_CLASSIFICATION	0.002162890255206753	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9978371097447932	WITHOUT_CLASSIFICATION	0.002162890255206753	IMPLEMENTATION
jbc put a version in the node when it created as part of some internal operation. we are always newer but if the jbc version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999999972354431	WITHOUT_CLASSIFICATION	2.7645569663603935E-9	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for properties with hibernate-specific overrides to detect and warn about conflicting declarations	WITHOUT_CLASSIFICATION	0.9999465762086884	WITHOUT_CLASSIFICATION	5.342379131167866E-5	IMPLEMENTATION
not null if the isolation level has been specified in the configuration file. otherwise it is left to the driver's default value.	WITHOUT_CLASSIFICATION	0.9997009691403327	WITHOUT_CLASSIFICATION	2.9903085966726277E-4	IMPLEMENTATION
configured outside of hibernate (i.e. servlet container or java bean container already has proxool pools running and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9998124894182804	WITHOUT_CLASSIFICATION	1.8751058171956753E-4	IMPLEMENTATION
if you're closing down the connectionprovider chances are an is not a real big deal just warn	WITHOUT_CLASSIFICATION	0.9999675302654185	WITHOUT_CLASSIFICATION	3.2469734581456824E-5	IMPLEMENTATION
(as is always optional for consistency with sql/oql)	WITHOUT_CLASSIFICATION	0.9998608601203418	WITHOUT_CLASSIFICATION	1.3913987965819764E-4	IMPLEMENTATION
process the "new" hql style where aliases are assigned _after_ the class name or path expression ie. using the as construction	WITHOUT_CLASSIFICATION	0.9997823637895938	WITHOUT_CLASSIFICATION	2.17636210406257E-4	IMPLEMENTATION
the loaded owner will be set to null after the collection is removed so capture its value as the affected owner so it is accessible to both pre- and post- events	WITHOUT_CLASSIFICATION	0.999928428136879	WITHOUT_CLASSIFICATION	7.157186312110621E-5	IMPLEMENTATION
is a primitive type invokespecial	WITHOUT_CLASSIFICATION	0.9999407141524131	WITHOUT_CLASSIFICATION	5.9285847586875135E-5	IMPLEMENTATION
array of primitive type do nothing	WITHOUT_CLASSIFICATION	0.9999820040667852	WITHOUT_CLASSIFICATION	1.7995933214789658E-5	IMPLEMENTATION
handle a path expression or class name that appears at the start in the "new" hql style or an alias that appears at the start in the "old" hql style	WITHOUT_CLASSIFICATION	0.9999421604205231	WITHOUT_CLASSIFICATION	5.7839579476888775E-5	IMPLEMENTATION
handle <= >= != is not not between not in	WITHOUT_CLASSIFICATION	0.9991548636608657	WITHOUT_CLASSIFICATION	8.451363391344288E-4	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999969976868928	WITHOUT_CLASSIFICATION	3.0023131073007376E-6	IMPLEMENTATION
transfer an explicitly defined entity name handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9997828149332165	WITHOUT_CLASSIFICATION	2.1718506678350353E-4	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999761877178153	WITHOUT_CLASSIFICATION	2.381228218471008E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999761877178153	WITHOUT_CLASSIFICATION	2.381228218471008E-5	IMPLEMENTATION
get meta's from <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999642461337351	WITHOUT_CLASSIFICATION	3.5753866264817496E-5	IMPLEMENTATION
parameters on the property mapping should override parameters in the typedef	WITHOUT_CLASSIFICATION	0.999858218608586	WITHOUT_CLASSIFICATION	1.4178139141404492E-4	IMPLEMENTATION
fetch="join" overrides default laziness fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999594876522632	WITHOUT_CLASSIFICATION	4.051234773684961E-5	IMPLEMENTATION
note special case default to join and non-lazy for the "second join" of the many-to-many	WITHOUT_CLASSIFICATION	0.9999917985724329	WITHOUT_CLASSIFICATION	8.201427567044023E-6	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9998268003493566	WITHOUT_CLASSIFICATION	1.731996506434007E-4	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998937978307824	WITHOUT_CLASSIFICATION	1.062021692176246E-4	IMPLEMENTATION
void setcomponenttuplizerfactory(componenttuplizerfactory componenttuplizerfactory) { this.componenttuplizerfactory = componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9997156750643709	WITHOUT_CLASSIFICATION	2.843249356291711E-4	IMPLEMENTATION
element index -> id	WITHOUT_CLASSIFICATION	0.9998431370278065	WITHOUT_CLASSIFICATION	1.5686297219356037E-4	IMPLEMENTATION
note that it might be better to iterate the snapshot but this is safe assuming the user implements equals() properly as required by the set contract!	WITHOUT_CLASSIFICATION	0.9994173434128562	WITHOUT_CLASSIFICATION	5.826565871437681E-4	IMPLEMENTATION
collections detect changes made via their public interface and mark themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9781580197394427	WITHOUT_CLASSIFICATION	0.021841980260557236	IMPLEMENTATION
essentially if the real session is closed allow any method call to pass through since the real session will complain by throwing an appropriate exception note that allowing close() above has the same basic effect but we capture that there simply to perform the unbind	WITHOUT_CLASSIFICATION	0.9999655381066345	WITHOUT_CLASSIFICATION	3.446189336559751E-5	IMPLEMENTATION
the default sqlexceptionconverter for all dialects is based on sqlstate since sqlerrorcode is extremely vendor-specific. specific dialects may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9996896225400064	WITHOUT_CLASSIFICATION	3.10377459993617E-4	IMPLEMENTATION
only necessary for postgre < 7.4 httpanoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9998422678027072	WITHOUT_CLASSIFICATION	1.5773219729271388E-4	IMPLEMENTATION
select topic syntax from information_schema.help where section like 'function%' order by section topic see also -> httpwww.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999365933490145	WITHOUT_CLASSIFICATION	6.340665098552617E-5	IMPLEMENTATION
registercolumntype(types.varbinary "character($l)") registercolumntype(types.blob "character($l)" ) for use prior to cp 11.0 registercolumntype(types.clob "character($l)" )	WITHOUT_CLASSIFICATION	0.9989722997645387	WITHOUT_CLASSIFICATION	0.0010277002354611908	IMPLEMENTATION
the blob type requires a size arguement - this defaults to bytes - no arg defaults to 1 whole byte! other argument mods include k - kilobyte m - megabyte g - gigabyte. refer to the pbdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9998238238188001	WITHOUT_CLASSIFICATION	1.7617618119992272E-4	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9987806501323685	WITHOUT_CLASSIFICATION	0.0012193498676315781	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.999958770357901	WITHOUT_CLASSIFICATION	4.122964209901392E-5	IMPLEMENTATION
add the comment nest the main query in an outer select add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999988719651887	WITHOUT_CLASSIFICATION	1.128034811302538E-6	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9998568607109689	WITHOUT_CLASSIFICATION	1.4313928903109403E-4	IMPLEMENTATION
note for object <-> sql datatype mappings see configuration manager | advanced | sql | system ddl datatype mappings tbdregistercolumntype(types.binary "binary($1)") changed 08-11-2005 jsl	WITHOUT_CLASSIFICATION	0.999996940320199	WITHOUT_CLASSIFICATION	3.059679800954517E-6	IMPLEMENTATION
trim(end_keyword string-expression-1 from string-expression-2) use hibernate implementation "from" is one of the parameters they pass in position ?3 registerfunction( "trim" new sqlfunctiontemplate(hibernate.string "trim(?1 ?2 from ?3)") )	WITHOUT_CLASSIFICATION	0.9999845535675694	WITHOUT_CLASSIFICATION	1.5446432430602005E-5	IMPLEMENTATION
whether this dialect has an identity clause added to the data type or a completely seperate identity data type	WITHOUT_CLASSIFICATION	0.9999923190168367	WITHOUT_CLASSIFICATION	7.680983163377751E-6	IMPLEMENTATION
according to both the ansi-sql and jpa specs trim takes a variable number of parameters between 1 and 4. at least one paramer (trimsource) is required. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if <trim specification> is omitted both is assumed. if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.9999980393592823	WITHOUT_CLASSIFICATION	1.9606407176380662E-6	IMPLEMENTATION
/ prepare persisters and link them up with their cache region/access-strategy	WITHOUT_CLASSIFICATION	0.9999478177974332	WITHOUT_CLASSIFICATION	5.21822025667022E-5	IMPLEMENTATION
named queries	WITHOUT_CLASSIFICATION	0.9998009958799726	WITHOUT_CLASSIFICATION	1.9900412002741736E-4	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999045999256373	WITHOUT_CLASSIFICATION	9.540007436264163E-5	IMPLEMENTATION
does not handle arrays (thats ok cos they can't be lazy) or newly instantiated collections so we can do the cast	WITHOUT_CLASSIFICATION	0.9839691084189318	WITHOUT_CLASSIFICATION	0.016030891581068196	IMPLEMENTATION
collection deletions are a special case since update() can add deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9996841246131126	WITHOUT_CLASSIFICATION	3.158753868874232E-4	IMPLEMENTATION
we can do the cast since orphan-delete does not apply to 1. newly instantiated collections 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.997245161691542	WITHOUT_CLASSIFICATION	0.002754838308457939	IMPLEMENTATION
if the natural-id is marked as non-mutable it is not retrieved during a normal database-snapshot operation	WITHOUT_CLASSIFICATION	0.9999003259842918	WITHOUT_CLASSIFICATION	9.967401570828387E-5	IMPLEMENTATION
watch out for a case where old is still referenced somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999966428999688	WITHOUT_CLASSIFICATION	3.357100031222022E-6	IMPLEMENTATION
slice to get the columns for this component property	WITHOUT_CLASSIFICATION	0.9999635476467821	WITHOUT_CLASSIFICATION	3.645235321786303E-5	IMPLEMENTATION
int result = 17 result = 37 result + type.hashcode() result = 37 result + ( value==null ? 0 value.hashcode() ) return result	WITHOUT_CLASSIFICATION	0.9998458475153135	WITHOUT_CLASSIFICATION	1.5415248468642528E-4	IMPLEMENTATION
the collectionentry.isreached() stuff is just to detect any silly users who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999392030622423	WITHOUT_CLASSIFICATION	6.07969377576187E-5	IMPLEMENTATION
detached collection wrappers that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.991081899915779	WITHOUT_CLASSIFICATION	0.008918100084221104	IMPLEMENTATION
the unique property value represented here may or may not be serializable so we do an explicit check here in order to generate a better error message	WITHOUT_CLASSIFICATION	0.9791119967269515	WITHOUT_CLASSIFICATION	0.02088800327304849	IMPLEMENTATION
if the version of a newly instantiated object is not the same as the version seed value use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9980553275758606	WITHOUT_CLASSIFICATION	0.0019446724241393948	IMPLEMENTATION
ie. we never have to null out a reference to an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9992696011424953	WITHOUT_CLASSIFICATION	7.30398857504662E-4	IMPLEMENTATION
ignore this row the collection is in process of being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.999994701448706	WITHOUT_CLASSIFICATION	5.298551294053657E-6	IMPLEMENTATION
entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currently not yet used	WITHOUT_CLASSIFICATION	0.9920152985075713	WITHOUT_CLASSIFICATION	0.007984701492428676	IMPLEMENTATION
should be ok performance-wise to generate new delegate instances for each request since these are locally stack-scoped. besides it makes the code much easier to read than the old transactionhelper stuff	WITHOUT_CLASSIFICATION	0.999891459840897	WITHOUT_CLASSIFICATION	1.0854015910293004E-4	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9997154527901255	WITHOUT_CLASSIFICATION	2.8454720987443593E-4	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9997154527901255	WITHOUT_CLASSIFICATION	2.8454720987443593E-4	IMPLEMENTATION
wrap up any new collections directly referenced by the object or its components	WITHOUT_CLASSIFICATION	0.9999855651765605	WITHOUT_CLASSIFICATION	1.4434823439522329E-5	IMPLEMENTATION
remove any snapshot not really for memory management purposes but rather because it might now be stale and there is no longer any entityentry to take precedence this is now handled by removeentity() session.getpersistencecontext().removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.9999978701516178	WITHOUT_CLASSIFICATION	2.1298483822633564E-6	IMPLEMENTATION
skip this check for composite-ids relating to dom4j entity-mode alternatively we could add a check to make sure the incoming id value is an instance of element	WITHOUT_CLASSIFICATION	0.9998476473830307	WITHOUT_CLASSIFICATION	1.5235261696939354E-4	IMPLEMENTATION
upgrade the lock if necessary lock(result lockmode)	WITHOUT_CLASSIFICATION	0.9999457824886404	WITHOUT_CLASSIFICATION	5.42175113595942E-5	IMPLEMENTATION
now any collections that are initialized inside this block do not get updated - they are ignored until the next flush	WITHOUT_CLASSIFICATION	0.963041776020455	WITHOUT_CLASSIFICATION	0.036958223979544944	IMPLEMENTATION
we must clone embedded composite identifiers or we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999987204129503	WITHOUT_CLASSIFICATION	1.2795870497139102E-6	IMPLEMENTATION
sub-insertions should occur before containing insertion so try to do the callback now	WITHOUT_CLASSIFICATION	0.9994819082763129	WITHOUT_CLASSIFICATION	5.180917236871205E-4	IMPLEMENTATION
the entity is not associated with the session so try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.999468966237	WITHOUT_CLASSIFICATION	5.310337630000636E-4	IMPLEMENTATION
scan the query string for class names appearing in the from clause and replace with all persistent implementors of the class/interface returning multiple query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999989100610607	WITHOUT_CLASSIFICATION	1.0899389393128157E-6	IMPLEMENTATION
save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995870138284764	WITHOUT_CLASSIFICATION	4.1298617152364816E-4	IMPLEMENTATION
evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995870138284764	WITHOUT_CLASSIFICATION	4.1298617152364816E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999038341319422	WITHOUT_CLASSIFICATION	9.616586805787882E-5	IMPLEMENTATION
if it is an uninitialized proxy pointing with this session then when it is accessed the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999990995674566	WITHOUT_CLASSIFICATION	9.0043254348732E-7	IMPLEMENTATION
generate an explicit join for the root dot node. the implied joins will be collected and passed up to the root dot node.	WITHOUT_CLASSIFICATION	0.9999660289265404	WITHOUT_CLASSIFICATION	3.397107345968056E-5	IMPLEMENTATION
a session is considered to contain an entity only if the entity has an entry in the session's persistence context and the entry reports that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9870517510745179	WITHOUT_CLASSIFICATION	0.0129482489254821	IMPLEMENTATION
does the collection referenced by this fromelement specify an order-by attribute? if so attach it to the query's order-by	WITHOUT_CLASSIFICATION	0.9999960037287687	WITHOUT_CLASSIFICATION	3.996271231311059E-6	IMPLEMENTATION
and the token could be an identifer and the error is a mismatched token error	WITHOUT_CLASSIFICATION	0.9999224885121485	WITHOUT_CLASSIFICATION	7.751148785154417E-5	IMPLEMENTATION
if a where clause was specified in the update/delete query use it to limit the returned ids here	WITHOUT_CLASSIFICATION	0.9999858987811907	WITHOUT_CLASSIFICATION	1.4101218809359406E-5	IMPLEMENTATION
int parameterstart = getwalker().getnumberofparametersinsetclause() list allparams = getidselectparameterspecifications() iterator whereparams = allparams.sublist( parameterstart allparams.size() ).iterator()	WITHOUT_CLASSIFICATION	0.9995635041095344	WITHOUT_CLASSIFICATION	4.364958904655543E-4	IMPLEMENTATION
default implementation if this node has a data type and that data type is not an association then this is scalar.	WITHOUT_CLASSIFICATION	0.9999350217828937	WITHOUT_CLASSIFICATION	6.497821710619871E-5	IMPLEMENTATION
resolve the lhs fully generate implicit joins. pass in the property name so that the resolver can discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999860806039756	WITHOUT_CLASSIFICATION	1.3919396024351265E-5	IMPLEMENTATION
if the propertytype is null and there isn't a parent just stop now there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999994336241043	WITHOUT_CLASSIFICATION	5.663758957167559E-7	IMPLEMENTATION
we do not look for an existing join on the same path because it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9963109049456323	WITHOUT_CLASSIFICATION	0.003689095054367618	IMPLEMENTATION
our parent is another dot node meaning we are being further dereferenced. thus we need to generate a join unless the parent refers to the associated entity's pk (because 'our' table would know the fk).	WITHOUT_CLASSIFICATION	0.9787736769927301	WITHOUT_CLASSIFICATION	0.02122632300726989	IMPLEMENTATION
public final currency getcurrency(int col) throws hibernateexception {return (currency) get(col)}	WITHOUT_CLASSIFICATION	0.9997728604746362	WITHOUT_CLASSIFICATION	2.2713952536372606E-4	IMPLEMENTATION
here we have two possibilities 1) the property-name matches the explicitly identifier property name 2) the property-name matches the implicit 'id' property name	WITHOUT_CLASSIFICATION	0.9986161207170944	WITHOUT_CLASSIFICATION	0.001383879282905681	IMPLEMENTATION
set the unresolved path in this node and the parent. set the text for the parent.	WITHOUT_CLASSIFICATION	0.9998741971997526	WITHOUT_CLASSIFICATION	1.2580280024732717E-4	IMPLEMENTATION
get the first child to be considered. sub-classes may do this differently in order to skip nodes that are not select expressions (e.g. distinct).	WITHOUT_CLASSIFICATION	0.9998050935240091	WITHOUT_CLASSIFICATION	1.949064759909183E-4	IMPLEMENTATION
if this is an entity and the property is the identifier property then use getidentifiertype(). note that the propertyname.equals( propertypath ) checks whether we have a component key reference where the component class property name is the same as the entity id property name if the two are not equal this is the case and we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9930909022679207	WITHOUT_CLASSIFICATION	0.006909097732079282	IMPLEMENTATION
for a subquery the alias to use depends on a few things (we already know this is not an overall select) 1) if this from_element represents a correlation to the outer-most query a) if the outer query represents a multi-table persister we need to use the given alias in anticipation of one of the multi-table executors being used (as this subquery will actually be used in the "id select" phase of that multi-table executor) b) otherwise we need to use the persister's table name as the column qualification 2) otherwise (not correlated) use the given alias	WITHOUT_CLASSIFICATION	0.982383486082878	WITHOUT_CLASSIFICATION	0.01761651391712201	IMPLEMENTATION
not a collection? return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9991651337452507	WITHOUT_CLASSIFICATION	8.348662547492918E-4	IMPLEMENTATION
collection of <many-to-any/> mappings used to circumvent the component-collection check below	WITHOUT_CLASSIFICATION	0.9998712067239274	WITHOUT_CLASSIFICATION	1.2879327607262303E-4	IMPLEMENTATION
otherwise the destination node was implied by the from clause and the from clause processor will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999801366099146	WITHOUT_CLASSIFICATION	1.9863390085460677E-5	IMPLEMENTATION
if the first identifier in the path referrs to the class alias (not the class name) then this is a correlated subselect. if it's a correlated sub-select use the existing table alias. otherwise generate a new one.	WITHOUT_CLASSIFICATION	0.9999943474735721	WITHOUT_CLASSIFICATION	5.652526427948275E-6	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9998954336269792	WITHOUT_CLASSIFICATION	1.0456637302090828E-4	IMPLEMENTATION
an ident node can represent an index expression if the ident represents a naked property ref note this makes the assumption (which is currently the case in the hql-sql grammar) that the ident is first resolved itself (addrexpr -> resolve()). the other option if that changes is to call resolve from here but it is currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999992581476946	WITHOUT_CLASSIFICATION	7.418523055071625E-7	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9999320306838594	WITHOUT_CLASSIFICATION	6.796931614061012E-5	IMPLEMENTATION
if this is an implied join in a from clause then use ansi-style joining and set the flag on the fromelement that indicates that it was implied in the from clause itself.	WITHOUT_CLASSIFICATION	0.9999534280347938	WITHOUT_CLASSIFICATION	4.6571965206127336E-5	IMPLEMENTATION
origin.adddestination(destination) add the query spaces.	WITHOUT_CLASSIFICATION	0.999848020166504	WITHOUT_CLASSIFICATION	1.5197983349612352E-4	IMPLEMENTATION
for an explicit many-to-many relationship add a second join from the intermediate (many-to-many) table to the destination table. also make sure that the from element's idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999827799097413	WITHOUT_CLASSIFICATION	1.722009025870044E-5	IMPLEMENTATION
reset the node type because the rest of the system is expecting from_fragment all we wanted was for the factory to create the right sub-class. this might get reset again later on anyway to make the sql generation simpler.	WITHOUT_CLASSIFICATION	0.999750709116577	WITHOUT_CLASSIFICATION	2.4929088342292996E-4	IMPLEMENTATION
explicit = true this is an explict select. arraylist sqlresulttypelist = new arraylist()	WITHOUT_CLASSIFICATION	0.9998781589105036	WITHOUT_CLASSIFICATION	1.2184108949637571E-4	IMPLEMENTATION
sqlresulttypelist.add( type ) generate the select expression.	WITHOUT_CLASSIFICATION	0.9999541355484529	WITHOUT_CLASSIFICATION	4.5864451547045516E-5	IMPLEMENTATION
if the expression list has exactly one expression and the type of the expression is a collection then this might be a collection function such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999975419347673	WITHOUT_CLASSIFICATION	2.4580652325538887E-6	IMPLEMENTATION
need to parse off the column qualifiers this is assuming (which is true as of now) that this is only used from update and delete hql statement parsing	WITHOUT_CLASSIFICATION	0.9987168733731132	WITHOUT_CLASSIFICATION	0.0012831266268867167	IMPLEMENTATION
for regression testing against output from the old parser found it easiest to simply reorder the fromelements here into ascending order in terms of injecting them into the resulting sql ast in orders relative to those expected by the old parser this is definitely another of those "only needed for regression purposes". the syntheticandfactory then simply injects them as it encounters them.	WITHOUT_CLASSIFICATION	0.9840682191166246	WITHOUT_CLASSIFICATION	0.01593178088337543	IMPLEMENTATION
the uber-rule here is that we need to include subclass joins if the fromelement is in any way dereferenced by a property from the subclass table otherwise we end up with column references qualified by a non-existent table reference in the resulting sql	WITHOUT_CLASSIFICATION	0.9997526327213442	WITHOUT_CLASSIFICATION	2.473672786558038E-4	IMPLEMENTATION
classic translator does not support collection of ordinal param metadata	WITHOUT_CLASSIFICATION	0.9948163987329811	WITHOUT_CLASSIFICATION	0.005183601267018941	IMPLEMENTATION
the following variables are stacks that keep information about each subexpression in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999993453241431	WITHOUT_CLASSIFICATION	6.546758567920625E-7	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999969976868928	WITHOUT_CLASSIFICATION	3.0023131073007376E-6	IMPLEMENTATION
should not be able to reach last without maxposition being set unless there are no results	WITHOUT_CLASSIFICATION	0.9995734909360331	WITHOUT_CLASSIFICATION	4.265090639668445E-4	IMPLEMENTATION
we found it in the temp pc. should indicate we are in the midst of processing a result set containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9993790853192496	WITHOUT_CLASSIFICATION	6.20914680750453E-4	IMPLEMENTATION
do not use proxiesbykey since not all proxies that point to this session's instances are in that collection!	WITHOUT_CLASSIFICATION	0.9798302456650283	WITHOUT_CLASSIFICATION	0.02016975433497165	IMPLEMENTATION
if there is no tm configured we will not be able to access the javax.transaction.transaction object in order to register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999940435317269	WITHOUT_CLASSIFICATION	5.956468273063674E-6	IMPLEMENTATION
since the result set cursor is always left at the first physical row after the "last processed" we need to jump back one position to get the key value we are interested in skipping	WITHOUT_CLASSIFICATION	0.9999925075029747	WITHOUT_CLASSIFICATION	7.492497025279882E-6	IMPLEMENTATION
true if this is a query and we are loading multiple instances of the same collection role otherwise this is a collectioninitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999202566355244	WITHOUT_CLASSIFICATION	7.974336447564602E-5	IMPLEMENTATION
we don't need to worry about existing version being uninitialized because this block isn't called by a re-entrant load (re-entrant loads _always_ have lock mode none)	WITHOUT_CLASSIFICATION	0.9975293814238834	WITHOUT_CLASSIFICATION	0.0024706185761166834	IMPLEMENTATION
add temp entry so that the next step is circular-reference safe - only needed because some types don't take proper advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.6132442916072649	IMPLEMENTATION	0.3867557083927352	WITHOUT_CLASSIFICATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999987306267373	WITHOUT_CLASSIFICATION	1.2693732627327083E-6	IMPLEMENTATION
log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9035095635037623	WITHOUT_CLASSIFICATION	0.09649043649623772	IMPLEMENTATION
ps.close() just close it do not try to return it to the pool! note early exit!	WITHOUT_CLASSIFICATION	0.999650962388204	WITHOUT_CLASSIFICATION	3.490376117960348E-4	IMPLEMENTATION
this has been shown to happen occasionally in rare cases when using a transaction manager + transaction-timeout where the timeout calls back through hibernate's registered transaction synchronization on a separate "reaping" thread. in cases where that reaping thread executes through this block at the same time the main application thread does we can get into situations where these cmes occur. and though it is not "allowed" per-se the end result without handling it specifically is infinite looping. so here we simply break the loop	WITHOUT_CLASSIFICATION	0.8476209890010986	WITHOUT_CLASSIFICATION	0.15237901099890136	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9994875636303157	WITHOUT_CLASSIFICATION	5.124363696844239E-4	IMPLEMENTATION
can't cache this stuff either (per-invocation) we are given a map of user-alias -> lock mode create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.99999299882555	WITHOUT_CLASSIFICATION	7.001174449946912E-6	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns getcollectiontable().createuniquekey( getidentifier().getconstraintcolumns() )	WITHOUT_CLASSIFICATION	0.9904916616423558	WITHOUT_CLASSIFICATION	0.00950833835764429	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995705506243521	WITHOUT_CLASSIFICATION	4.2944937564787727E-4	IMPLEMENTATION
isset = collection.isset() issorted = collection.issorted()	WITHOUT_CLASSIFICATION	0.9993932759159657	WITHOUT_CLASSIFICATION	6.06724084034229E-4	IMPLEMENTATION
lists arrays sets maps bags	WITHOUT_CLASSIFICATION	0.9999321566535727	WITHOUT_CLASSIFICATION	6.784334642718832E-5	IMPLEMENTATION
we finish all the "removes" first to take care of possible unique constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9987178714937716	WITHOUT_CLASSIFICATION	0.001282128506228433	IMPLEMENTATION
use a combination of foreign key columns and pk columns since the ordering of removal and addition is not guaranteed when a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9993008681364476	WITHOUT_CLASSIFICATION	6.991318635523393E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995705506243521	WITHOUT_CLASSIFICATION	4.2944937564787727E-4	IMPLEMENTATION
information about properties of this class including inherited properties (only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9202711858840156	WITHOUT_CLASSIFICATION	0.07972881411598437	IMPLEMENTATION
all this only really needs to consider properties of this class not its subclasses but since we are reusing code used for sequential selects we use the subclass closure	WITHOUT_CLASSIFICATION	0.9999034598228306	WITHOUT_CLASSIFICATION	9.654017716950298E-5	IMPLEMENTATION
here we render the select column list based on the properties defined as being generated. for partial component generation we currently just re-select the whole component rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999708130485297	WITHOUT_CLASSIFICATION	2.918695147021012E-5	IMPLEMENTATION
this is the root (versioned) table and we are using version-based optimistic locking if we are not updating the version also don't check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9950045485108457	WITHOUT_CLASSIFICATION	0.004995451489154177	IMPLEMENTATION
optimistic-lock="all" include all updatable properties optimistic-lock="dirty" include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9997799331121	WITHOUT_CLASSIFICATION	2.2006688789987227E-4	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9932356835876036	WITHOUT_CLASSIFICATION	0.006764316412396446	IMPLEMENTATION
check to see if the connection is in auto-commit mode (no connection means aggressive connection release outside a jta transaction context so must be autocommit mode)	WITHOUT_CLASSIFICATION	0.9988215538140036	WITHOUT_CLASSIFICATION	0.0011784461859963848	IMPLEMENTATION
need to treat this as if it where optimistic-lock="all" (dirty does not make sense) first we need to locate the "loaded" state note it potentially could be a proxy so perform the location the safe way	WITHOUT_CLASSIFICATION	0.9867808128167738	WITHOUT_CLASSIFICATION	0.013219187183226188	IMPLEMENTATION
we always assume an instance with a null identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999775206538655	WITHOUT_CLASSIFICATION	2.2479346134541344E-5	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9999793526397033	WITHOUT_CLASSIFICATION	2.0647360296775014E-5	IMPLEMENTATION
allow any identifier quoted with backtick only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9996825459127004	WITHOUT_CLASSIFICATION	3.174540872995482E-4	IMPLEMENTATION
following doesn't handle (null not null) but unnecessary since this would mean all rows	WITHOUT_CLASSIFICATION	0.9976397190650553	WITHOUT_CLASSIFICATION	0.0023602809349446857	IMPLEMENTATION
impl note due to the delayed population of setters (setters cached for performance) we really cannot pro0perly define equality for this transformer	WITHOUT_CLASSIFICATION	0.9999825156332369	WITHOUT_CLASSIFICATION	1.7484366763081284E-5	IMPLEMENTATION
we need to dirty check collections since they can cause an owner version number increment	WITHOUT_CLASSIFICATION	0.9550848501367634	WITHOUT_CLASSIFICATION	0.044915149863236664	IMPLEMENTATION
return the id so we can use it to reset the proxy id return result	WITHOUT_CLASSIFICATION	0.9980601238006209	WITHOUT_CLASSIFICATION	0.0019398761993790112	IMPLEMENTATION
optimizer = getfactory().getsettings().getbytecodeprovider().getreflectionoptimizer( mappedclass getternames setternames proptypes )	WITHOUT_CLASSIFICATION	0.9989929095525936	WITHOUT_CLASSIFICATION	0.0010070904474063897	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9955807915227155	WITHOUT_CLASSIFICATION	0.004419208477284578	IMPLEMENTATION
we now have the value of the property-ref we reference. however we need to dig a little deeper as that property might also be an entity type in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999967484218251	WITHOUT_CLASSIFICATION	3.2515781748817775E-6	IMPLEMENTATION
retrieve the value of the designated column in the current row of this resultset object as a java.io.reader object	WITHOUT_CLASSIFICATION	0.999994623447766	WITHOUT_CLASSIFICATION	5.3765522340000394E-6	IMPLEMENTATION
not absolutely necessary but helps for some equals()/hashcode() implementations	WITHOUT_CLASSIFICATION	0.9989373361546565	WITHOUT_CLASSIFICATION	0.0010626638453434542	IMPLEMENTATION
this should be a call to resolve() not resolveidentifier() 'cos it might be a property-ref and we did not cache the referenced value	WITHOUT_CLASSIFICATION	0.9818043970248277	WITHOUT_CLASSIFICATION	0.01819560297517228	IMPLEMENTATION
if we have <tt>not-found="ignore"</tt> association mapped to a formula we always need to dirty check it so we can update the second-level cache	WITHOUT_CLASSIFICATION	0.994743281607218	WITHOUT_CLASSIFICATION	0.005256718392781913	IMPLEMENTATION
can't just return null here since that would cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999098732079981	WITHOUT_CLASSIFICATION	9.01267920019171E-5	IMPLEMENTATION
for arrays replaceelements() may return a different reference since the array length might not match	WITHOUT_CLASSIFICATION	0.9999014543924404	WITHOUT_CLASSIFICATION	9.854560755968052E-5	IMPLEMENTATION
actual cache of the entries. soft references are used for both the keys and the values here since the values pertaining to the mru entries are kept in a seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999998020815408	WITHOUT_CLASSIFICATION	1.9791845909585473E-7	IMPLEMENTATION
as soon as we encounter our first letter return the substring from that position	WITHOUT_CLASSIFICATION	0.9999872482266631	WITHOUT_CLASSIFICATION	1.2751773336864696E-5	IMPLEMENTATION
note expected in the syntax type=listenerclass ({sep}type=listenerclass) where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999909132280945	WITHOUT_CLASSIFICATION	9.086771905462821E-6	IMPLEMENTATION
istransactioncallbackregistered denotes whether any hibernate transaction has registered as a callback against this jdbccontext only one such callback is allowed. directly serializing this value causes problems with jdbctransaction or really any transaction impl where the callback is local to the transaction instance itself since that transaction is not serialized along with the jdbccontext. thus we handle that fact here explicitly	WITHOUT_CLASSIFICATION	0.9990031844891496	WITHOUT_CLASSIFICATION	9.968155108504015E-4	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9996650245364099	WITHOUT_CLASSIFICATION	3.3497546359018875E-4	IMPLEMENTATION
we call getkeyfromresultset() here so that we can know the key value upon which to perform the breaking logic. however it is also then called from getrowfromresultset() which is certainly not the most efficient. but the call here is needed and there currently is no other way without refactoring of the doquery()/getrowfromresultset() methods	WITHOUT_CLASSIFICATION	0.5232392666566952	IMPLEMENTATION	0.47676073334330477	WITHOUT_CLASSIFICATION
this check is needed since processing leaves the cursor after the last physical row for the current logical row thus if we are after the last physical row this might be caused by either 1) scrolling to the last logical row 2) scrolling past the last logical row in the latter scenario the previous logical row really is the last logical row. in all other cases we should process back two logical records (the current logic row plus the previous logical row).	WITHOUT_CLASSIFICATION	0.5663191437303854	WITHOUT_CLASSIFICATION	0.43368085626961456	IMPLEMENTATION
and perform the load	WITHOUT_CLASSIFICATION	0.9997070850618001	WITHOUT_CLASSIFICATION	2.929149381998804E-4	IMPLEMENTATION
important reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9998230378169266	WITHOUT_CLASSIFICATION	1.769621830733992E-4	IMPLEMENTATION
this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.999892383335135	WITHOUT_CLASSIFICATION	1.0761666486507807E-4	IMPLEMENTATION
we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999855585111831	WITHOUT_CLASSIFICATION	1.4441488817032203E-5	IMPLEMENTATION
we did not find a collection element in the result set so we ensure that a collection is created with the owner's identifier since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9906028818130223	WITHOUT_CLASSIFICATION	0.009397118186977702	IMPLEMENTATION
this is a collection initializer so we must create a collection for each of the passed-in keys to account for the possibility that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999567492797912	WITHOUT_CLASSIFICATION	4.325072020881693E-5	IMPLEMENTATION
grab its state from the resultset and keep it in the session (but don't yet initialize the object itself) note that we acquire lockmode.read even if it was not requested	WITHOUT_CLASSIFICATION	0.9999909059257234	WITHOUT_CLASSIFICATION	9.094074276588245E-6	IMPLEMENTATION
a many-to-many decrement currentdepth here to allow join across the association table without exceeding max_fetch_depth (i.e. the "currentdepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9995000212472702	WITHOUT_CLASSIFICATION	4.999787527298024E-4	IMPLEMENTATION
if not a composite key use "foo in (? ? ?)" for batching if no batch and not a composite key use "foo = ?"	WITHOUT_CLASSIFICATION	0.9997653270668377	WITHOUT_CLASSIFICATION	2.346729331621149E-4	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9990429130247279	WITHOUT_CLASSIFICATION	9.570869752719582E-4	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9996265087106188	WITHOUT_CLASSIFICATION	3.734912893811709E-4	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9996265087106188	WITHOUT_CLASSIFICATION	3.734912893811709E-4	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9996386277208817	WITHOUT_CLASSIFICATION	3.6137227911820624E-4	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999989161635542	WITHOUT_CLASSIFICATION	1.083836445798577E-6	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999606182814166	WITHOUT_CLASSIFICATION	3.938171858336355E-5	IMPLEMENTATION
translates an ast join type (i.e. the token type) into a joinfragment.xxx join type. @param astjointype the ast join type (from hqlsqltokentypes or sqltokentypes) @return a joinfragment.xxx join type. @see joinfragment @see sqltokentypes	WITHOUT_CLASSIFICATION	0.9999876317390862	WITHOUT_CLASSIFICATION	1.2368260913751668E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.999641566201331	WITHOUT_CLASSIFICATION	3.5843379866897727E-4	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.999641566201331	WITHOUT_CLASSIFICATION	3.5843379866897727E-4	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9996869274134622	WITHOUT_CLASSIFICATION	3.130725865377485E-4	IMPLEMENTATION
public list getcollectionaliases() { return collectionaliases } public list getcollectionowners() { return collectionowners } public list getcollectionowneraliases() { return collectionowneraliases } public list getcollectionpersisters() { return collectionpersisters } public map getalias2persister() { return alias2persister } public boolean iscollectioninitializer() { return iscollectioninitializer } public list getpersisters() { return persisters } public map getalias2owneralias() { return alias2owneralias } public list getscalartypes() { return scalartypes } public list getscalarcolumnaliases() { return scalarcolumnaliases } public list getpropertyresults() { return propertyresults } public list getcollectionpropertyresults() { return collectionresults } public map getalias2return() { return alias2return }	WITHOUT_CLASSIFICATION	0.9999970665768746	WITHOUT_CLASSIFICATION	2.933423125341823E-6	IMPLEMENTATION
sqlqueryparser parser = new sqlqueryparser( sqlquery processor.getalias2persister() processor.getalias2return() aliases collaliases collpersisters suffixes collsuffixes ) sql = parser.process() namedparameterbindpoints = parser.getnamedparameters()	WITHOUT_CLASSIFICATION	0.9994240981439689	WITHOUT_CLASSIFICATION	5.759018560310219E-4	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998688151085108	WITHOUT_CLASSIFICATION	1.311848914892318E-4	IMPLEMENTATION
sqlaliassuffixes[i] = element.getcolumnaliassuffix()	WITHOUT_CLASSIFICATION	0.9993932759159657	WITHOUT_CLASSIFICATION	6.06724084034229E-4	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9995241373364938	WITHOUT_CLASSIFICATION	4.7586266350613336E-4	IMPLEMENTATION
at this point we have (drivingsqlalias) the sql alias of the driving table corresponding to the given user alias. however the driving table is not (necessarily) the table against which we want to apply locks. mainly the exception case here is joined-subclass hierarchies where we instead want to apply the lock against the root table (for all other strategies it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9020939237097436	WITHOUT_CLASSIFICATION	0.09790607629025637	IMPLEMENTATION
the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999297804913648	WITHOUT_CLASSIFICATION	7.021950863525117E-5	IMPLEMENTATION
we have a mapped identifier property and the root of the incoming property path matched that identifier property	WITHOUT_CLASSIFICATION	0.9995229933564137	WITHOUT_CLASSIFICATION	4.770066435862733E-4	IMPLEMENTATION
we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9997242207391464	WITHOUT_CLASSIFICATION	2.757792608536144E-4	IMPLEMENTATION
both many-to-one and one-to-one are represented as a property. entitypersister is relying on this value to determine "lazy fetch groups" in terms of field-level interception. so we need to make sure that we return true here for the case of many-to-one and one-to-one with lazy="no-proxy" impl note - lazy="no-proxy" currently forces both lazy and unwrap to be set to true. the other case we are extremely interested in here is that of lazy="proxy" where lazy is set to true but unwrap is set to false. thus we use both here under the assumption that this return is really only ever used during persister construction to determine the lazy property/field fetch groupings. if that assertion changes then this check needs to change as well. partially this is an issue with the overloading of the term "lazy" here	WITHOUT_CLASSIFICATION	0.9999963631385852	WITHOUT_CLASSIFICATION	3.6368614148272597E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999652777646264	WITHOUT_CLASSIFICATION	3.47222353736767E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999652777646264	WITHOUT_CLASSIFICATION	3.47222353736767E-5	IMPLEMENTATION
roottablename = persistentclass.getroottable().getqualifiedname( factory.getdialect() factory.getdefaultcatalog() factory.getdefaultschema() )	WITHOUT_CLASSIFICATION	0.9989929095525936	WITHOUT_CLASSIFICATION	0.0010070904474063897	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9997027878707471	WITHOUT_CLASSIFICATION	2.9721212925292963E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9996203667756252	WITHOUT_CLASSIFICATION	3.796332243749135E-4	IMPLEMENTATION
protected void initpropertypaths(final string pathfinal type typefinal string[] columnsfinal string[] formulatemplatesfinal mapping factory)throws mappingexception {addformulapropertypath(path type formulatemplates)initpropertypaths(path type columns formulatemplates factory)}	WITHOUT_CLASSIFICATION	0.9999645605560757	WITHOUT_CLASSIFICATION	3.543944392424697E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
custom sql (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9997766318576371	WITHOUT_CLASSIFICATION	2.2336814236276865E-4	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999570565157909	WITHOUT_CLASSIFICATION	4.294348420903734E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
aliases for identifier ( alias.id ) skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999800016536772	WITHOUT_CLASSIFICATION	1.999834632286949E-5	IMPLEMENTATION
decide which resultset to get the property value from	WITHOUT_CLASSIFICATION	0.9999586917694215	WITHOUT_CLASSIFICATION	4.130823057851527E-5	IMPLEMENTATION
note it is conceptually possible that a usertype could map null to a non-null value so the following is arguable	WITHOUT_CLASSIFICATION	0.9998811217071117	WITHOUT_CLASSIFICATION	1.1887829288831764E-4	IMPLEMENTATION
the contract of entitytuplizer.determineconcretesubclassentityname says that returning null is an indication that the specified entity-name (this.getentityname) should be used.	WITHOUT_CLASSIFICATION	0.9995860908462102	WITHOUT_CLASSIFICATION	4.1390915378979764E-4	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9999793526397033	WITHOUT_CLASSIFICATION	2.0647360296775014E-5	IMPLEMENTATION
cache these since they are stateless this one could even be static	WITHOUT_CLASSIFICATION	0.9999449655918108	WITHOUT_CLASSIFICATION	5.503440818923357E-5	IMPLEMENTATION
"as" is not in keywords	WITHOUT_CLASSIFICATION	0.9995685640286326	WITHOUT_CLASSIFICATION	4.31435971367368E-4	IMPLEMENTATION
--commented out by inspection (12/4/04 910 am) public abstract void addcondition(string alias string[] columns string condition)	WITHOUT_CLASSIFICATION	0.9999880028323349	WITHOUT_CLASSIFICATION	1.1997167665098651E-5	IMPLEMENTATION
use the id column alias	WITHOUT_CLASSIFICATION	0.998459680435135	WITHOUT_CLASSIFICATION	0.0015403195648650207	IMPLEMENTATION
private list aliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999421749528878	WITHOUT_CLASSIFICATION	5.782504711209528E-5	IMPLEMENTATION
columns.add(columnname) aliases.add(tablealias)	WITHOUT_CLASSIFICATION	0.9997136823263718	WITHOUT_CLASSIFICATION	2.8631767362818466E-4	IMPLEMENTATION
where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9993866286856596	WITHOUT_CLASSIFICATION	6.133713143403929E-4	IMPLEMENTATION
revert to traditional hibernate behavior of setting initialpoolsize to minpoolsize unless otherwise specified with a c3p0.-style parameter.	WITHOUT_CLASSIFICATION	0.9996687612107245	WITHOUT_CLASSIFICATION	3.312387892755955E-4	IMPLEMENTATION
arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9989008523141705	WITHOUT_CLASSIFICATION	0.001099147685829474	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9822376003214508	WITHOUT_CLASSIFICATION	0.017762399678549187	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9822376003214508	WITHOUT_CLASSIFICATION	0.017762399678549187	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.999992625357887	WITHOUT_CLASSIFICATION	7.374642113007455E-6	IMPLEMENTATION
essentially 1) if we have a local (hibernate) transaction in progress and it already has the usertransaction cached use that usertransaction to determine the status. 2) if a transaction manager has been located use that transaction manager to determine the status. 3) finally as the last resort try to lookup the usertransaction via jndi and use that to determine the status.	WITHOUT_CLASSIFICATION	0.9999983855114642	WITHOUT_CLASSIFICATION	1.6144885357088753E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9993155974245415	WITHOUT_CLASSIFICATION	6.844025754585908E-4	IMPLEMENTATION
swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9994003659986217	WITHOUT_CLASSIFICATION	5.996340013783631E-4	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9994945258837485	WITHOUT_CLASSIFICATION	5.054741162515347E-4	IMPLEMENTATION
we need to dirty check many-to-ones with not-found="ignore" in order to update the cache (not the database) since in this case a null entity reference can lose information	WITHOUT_CLASSIFICATION	0.9988645507936669	WITHOUT_CLASSIFICATION	0.0011354492063331127	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.999995438873347	WITHOUT_CLASSIFICATION	4.561126653020286E-6	IMPLEMENTATION
regions can get instantiated in the course of normal work (e.g. a named query region will be created the first time the query is executed) so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999998824075462	WITHOUT_CLASSIFICATION	1.1759245378550491E-7	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9996997318004213	WITHOUT_CLASSIFICATION	3.0026819957875757E-4	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9957497236124445	WITHOUT_CLASSIFICATION	0.004250276387555555	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997257782642563	WITHOUT_CLASSIFICATION	2.742217357436357E-4	IMPLEMENTATION
note this is being used from the process of shutting down a sessionfactory. specific things to consider (1) this clearing of the region should not propagate to other nodes on the cluster (if any) this is the cache-mode-local option bit (2) really just trying a best effort to cleanup after ourselves lock failures etc are not critical here this is the fail-silently option bit	WITHOUT_CLASSIFICATION	0.9310342677369968	WITHOUT_CLASSIFICATION	0.06896573226300316	IMPLEMENTATION
need to extract the component values and check for subtype replacements	WITHOUT_CLASSIFICATION	0.9982313674003717	WITHOUT_CLASSIFICATION	0.0017686325996284008	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999715815658575	WITHOUT_CLASSIFICATION	2.8418434142529765E-5	IMPLEMENTATION
for now just "re-flatten" the metamodel since this is temporary stuff anyway (hhh-1907)	WITHOUT_CLASSIFICATION	0.9999956910457781	WITHOUT_CLASSIFICATION	4.308954221849221E-6	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9994934401470084	WITHOUT_CLASSIFICATION	5.06559852991697E-4	IMPLEMENTATION
this solution would allow us to eliminate the owner arg to disassemble() but what if the collection was null and then later had elements added? seems unsafe session.getpersistencecontext().getcollectionentry( (persistentcollection) value ).getkey()	WITHOUT_CLASSIFICATION	0.9999966735956699	WITHOUT_CLASSIFICATION	3.32640433012337E-6	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.999759846087661	WITHOUT_CLASSIFICATION	2.4015391233893373E-4	IMPLEMENTATION
some collections are not lazy	WITHOUT_CLASSIFICATION	0.9960313890478697	WITHOUT_CLASSIFICATION	0.00396861095213029	IMPLEMENTATION
here we don't want to suspend the tx. if we do 1) we might be caching query results that reflect uncommitted changes. no tx == no wl on cache node so other threads can prematurely see those query results 2) no tx == immediate replication. more overhead plus we spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.7325348601039139	WITHOUT_CLASSIFICATION	0.26746513989608606	IMPLEMENTATION
return the (fully resolved) identifier value but do not resolve to the actual referenced entity instance note the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999940940760487	WITHOUT_CLASSIFICATION	5.905923951412522E-6	IMPLEMENTATION
add a zero (or quite low) timeout option so we don't block. ignore any timeoutexception. basically we forego caching the query result in order to avoid blocking. reads are done with suspended tx so they should not hold the lock for long. not caching the query result is ok since any subsequent read will just see the old result with its out-of-date timestamp that result will be discarded and the db query performed again.	WITHOUT_CLASSIFICATION	0.9999996646352192	WITHOUT_CLASSIFICATION	3.3536478086235014E-7	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9991901862554033	WITHOUT_CLASSIFICATION	8.09813744596796E-4	IMPLEMENTATION
we have the jbcwritemutex so no other local thread will be trying to write this key. it's possible here some remote thread has come in and changed the values again but since we are reading the values to write to jbc right now we know we are writing the latest values i.e. we don't assume that what we cached in entry.update() above is what we should write to jbc now. our write could be redundant i.e. we are writing what some remote thread just came in an wrote. there is a chance that yet another remote thread will update us and we'll then overwrite that later data in jbc. but all remote nodes will ignore that change in their localcache the only place it will live will be in jbc where it can only effect the initial state transfer values on newly joined nodes (i.e. populatelocalcache()).	WITHOUT_CLASSIFICATION	0.9996324038848269	WITHOUT_CLASSIFICATION	3.6759611517310373E-4	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9997600253850786	WITHOUT_CLASSIFICATION	2.3997461492147531E-4	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9997600253850786	WITHOUT_CLASSIFICATION	2.3997461492147531E-4	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9979265961679119	WITHOUT_CLASSIFICATION	0.002073403832088049	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9871437889730514	WITHOUT_CLASSIFICATION	0.01285621102694844	IMPLEMENTATION
we need to obtain the lock before any actions are executed since this may be an inverse="true" bidirectional association and it is one of the earlier entity actions which actually updates the database (this action is resposible for second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999389015490366	WITHOUT_CLASSIFICATION	6.109845096327939E-5	IMPLEMENTATION
postdelete after actually deleting a row record the fact that the instance no longer exists on the database (needed for identity-column key generation) and remove it from the session cache	WITHOUT_CLASSIFICATION	0.999964799887747	WITHOUT_CLASSIFICATION	3.520011225298318E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9912875218643532	WITHOUT_CLASSIFICATION	0.008712478135646757	IMPLEMENTATION
