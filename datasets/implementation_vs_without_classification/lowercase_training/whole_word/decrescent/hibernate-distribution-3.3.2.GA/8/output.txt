todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.8035430156723902	IMPLEMENTATION	0.19645698432760975	WITHOUT_CLASSIFICATION
todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.8035430156723902	IMPLEMENTATION	0.19645698432760975	WITHOUT_CLASSIFICATION
todo return new lock(ts)	IMPLEMENTATION	0.7449467756962668	WITHOUT_CLASSIFICATION	0.2550532243037333	IMPLEMENTATION
todo if lock.gettimestamp().equals(ts)	IMPLEMENTATION	0.8883356665313212	WITHOUT_CLASSIFICATION	0.11166433346867874	IMPLEMENTATION
todo mappings.getlogicaltablename(ownertable)	IMPLEMENTATION	0.6348492543563136	WITHOUT_CLASSIFICATION	0.36515074564368644	IMPLEMENTATION
todo handle typedefs	IMPLEMENTATION	0.8625423788500466	IMPLEMENTATION	0.13745762114995333	WITHOUT_CLASSIFICATION
todo check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.9466917799127446	WITHOUT_CLASSIFICATION	0.05330822008725538	IMPLEMENTATION
todo bindpropertyresults(alias returnelem)	IMPLEMENTATION	0.6348492543563136	WITHOUT_CLASSIFICATION	0.36515074564368644	IMPLEMENTATION
todo validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.7844464076283973	WITHOUT_CLASSIFICATION	0.21555359237160254	IMPLEMENTATION
todo native ids	IMPLEMENTATION	0.7722469712779996	WITHOUT_CLASSIFICATION	0.22775302872200034	IMPLEMENTATION
todo if we are using identity columns fetch the identifier	IMPLEMENTATION	0.9980075346215529	WITHOUT_CLASSIFICATION	0.0019924653784471474	IMPLEMENTATION
todo handle property-ref	IMPLEMENTATION	0.7901107636346165	IMPLEMENTATION	0.20988923636538342	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.6384330585561917	IMPLEMENTATION	0.3615669414438083	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.6384330585561917	IMPLEMENTATION	0.3615669414438083	WITHOUT_CLASSIFICATION
todo check if mimer sql cannot handle the way db2 does	IMPLEMENTATION	0.9940135121426129	WITHOUT_CLASSIFICATION	0.005986487857387154	IMPLEMENTATION
todo restrict violation	IMPLEMENTATION	0.793875302488743	WITHOUT_CLASSIFICATION	0.20612469751125687	IMPLEMENTATION
todo lowercasing done here. was done "at random" before maybe not needed at all ?	IMPLEMENTATION	0.9999993645417798	IMPLEMENTATION	6.354582201274874E-7	WITHOUT_CLASSIFICATION
todo tolowercase was not done before. only used in template.	IMPLEMENTATION	0.8030120798453854	WITHOUT_CLASSIFICATION	0.1969879201546147	IMPLEMENTATION
add an entry for this type of entity. we can be assured that all referenced entities have already been processed so specify that this entity is with the latest batch. doing the batch number before adding the name to the list is a faster way to get an accurate number.	IMPLEMENTATION	0.9999969014011776	WITHOUT_CLASSIFICATION	3.0985988224510192E-6	IMPLEMENTATION
todo avoid this for non-new instances where mightbedirty==false	IMPLEMENTATION	0.608506773352078	WITHOUT_CLASSIFICATION	0.39149322664792197	IMPLEMENTATION
todo optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.664896266665334	IMPLEMENTATION	0.33510373333466603	WITHOUT_CLASSIFICATION
we could move this inside if we wanted to tolerate collection initializations during collection dirty checking	IMPLEMENTATION	0.9993129659571549	WITHOUT_CLASSIFICATION	6.87034042845125E-4	IMPLEMENTATION
todo assertion only could be optimized away	IMPLEMENTATION	0.5181371333520678	IMPLEMENTATION	0.4818628666479324	WITHOUT_CLASSIFICATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.8291789445668687	IMPLEMENTATION	0.17082105543313128	WITHOUT_CLASSIFICATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.8291789445668687	IMPLEMENTATION	0.17082105543313128	WITHOUT_CLASSIFICATION
todo why aren't these the same?	IMPLEMENTATION	0.9038134137164313	IMPLEMENTATION	0.09618658628356871	WITHOUT_CLASSIFICATION
todo always true for now but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.9174095950153245	WITHOUT_CLASSIFICATION	0.08259040498467544	IMPLEMENTATION
todo or should we return 'containstablealias'??	IMPLEMENTATION	0.5828320672447713	WITHOUT_CLASSIFICATION	0.4171679327552286	IMPLEMENTATION
todo arithmetic expressions multiple new foo()	IMPLEMENTATION	0.6651840578972757	WITHOUT_CLASSIFICATION	0.3348159421027243	IMPLEMENTATION
todo for some dialects it would be appropriate to add the renderorderbypropertiesselect() to other select strings	IMPLEMENTATION	0.9935463624340932	IMPLEMENTATION	0.0064536375659067545	WITHOUT_CLASSIFICATION
todo cache the persister this shows up in yourkit	IMPLEMENTATION	0.7880385090540202	IMPLEMENTATION	0.21196149094597988	WITHOUT_CLASSIFICATION
todo theoretically non-threadsafe	IMPLEMENTATION	0.6348627368626792	WITHOUT_CLASSIFICATION	0.3651372631373207	IMPLEMENTATION
todo look at optimizing these	IMPLEMENTATION	0.6320008382623823	WITHOUT_CLASSIFICATION	0.3679991617376178	IMPLEMENTATION
todo maybe call it getrowselection() ?	IMPLEMENTATION	0.9609318152376389	IMPLEMENTATION	0.03906818476236098	WITHOUT_CLASSIFICATION
todo make this handle multiple collection roles!	IMPLEMENTATION	0.9958459739503631	IMPLEMENTATION	0.0041540260496368345	WITHOUT_CLASSIFICATION
todo can we limit stored procedures ?!	IMPLEMENTATION	0.8549184033242665	WITHOUT_CLASSIFICATION	0.14508159667573342	IMPLEMENTATION
todo not visible to the user!	IMPLEMENTATION	0.8998651716884459	IMPLEMENTATION	0.1001348283115541	WITHOUT_CLASSIFICATION
todo unnecessary for databases with ansi-style joins	IMPLEMENTATION	0.7489043538760733	WITHOUT_CLASSIFICATION	0.2510956461239266	IMPLEMENTATION
todo use these in methods above	IMPLEMENTATION	0.8231401881824046	WITHOUT_CLASSIFICATION	0.17685981181759536	IMPLEMENTATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.7251712256068933	IMPLEMENTATION	0.2748287743931067	WITHOUT_CLASSIFICATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.7251712256068933	IMPLEMENTATION	0.2748287743931067	WITHOUT_CLASSIFICATION
todo temporary initial step towards hhh-1907	IMPLEMENTATION	0.9606521696303627	WITHOUT_CLASSIFICATION	0.039347830369637286	IMPLEMENTATION
todo remove this once componentmetamodel is complete and merged	IMPLEMENTATION	0.7125670708310932	WITHOUT_CLASSIFICATION	0.28743292916890684	IMPLEMENTATION
todo handle supportsnotnullunique=false but such a case does not exist in the wild so far	IMPLEMENTATION	0.9958156446301978	WITHOUT_CLASSIFICATION	0.004184355369802121	IMPLEMENTATION
todo still need to make collectionpersisters entitymode-aware	IMPLEMENTATION	0.9963784384817923	IMPLEMENTATION	0.003621561518207835	WITHOUT_CLASSIFICATION
todo add owner argument!!	IMPLEMENTATION	0.6667677127663161	WITHOUT_CLASSIFICATION	0.333232287233684	IMPLEMENTATION
todo formulas ?	IMPLEMENTATION	0.5494350584463626	WITHOUT_CLASSIFICATION	0.45056494155363724	IMPLEMENTATION
todo include the rowids!!!!	IMPLEMENTATION	0.7967472251065961	WITHOUT_CLASSIFICATION	0.20325277489340382	IMPLEMENTATION
todo cache this sql	IMPLEMENTATION	0.5217150847850198	WITHOUT_CLASSIFICATION	0.4782849152149802	IMPLEMENTATION
todo create uk loaders for component properties	IMPLEMENTATION	0.9931332533523137	WITHOUT_CLASSIFICATION	0.006866746647686165	IMPLEMENTATION
todo cache this in an instvar	IMPLEMENTATION	0.9256255898943371	WITHOUT_CLASSIFICATION	0.07437441010566295	IMPLEMENTATION
/ todo look at perhaps caching this	IMPLEMENTATION	0.8722129937501025	IMPLEMENTATION	0.1277870062498974	WITHOUT_CLASSIFICATION
todo eventually put this back in once we think all is fixed object otheralias = columnsunique.put(qualifiedcolumn columnalias)	IMPLEMENTATION	0.5703525453081764	WITHOUT_CLASSIFICATION	0.42964745469182364	IMPLEMENTATION
todo if we support multiple fetch groups we would need to clone the set of lazy properties!	IMPLEMENTATION	0.942015108662262	IMPLEMENTATION	0.057984891337737925	WITHOUT_CLASSIFICATION
todo proxies!	IMPLEMENTATION	0.563398198347049	WITHOUT_CLASSIFICATION	0.4366018016529509	IMPLEMENTATION
todo terrible implementation!	IMPLEMENTATION	0.6826420916099575	WITHOUT_CLASSIFICATION	0.31735790839004235	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.563398198347049	WITHOUT_CLASSIFICATION	0.4366018016529509	IMPLEMENTATION
todo i don't really like this implementation it would be better if this was handled by searchfordirtycollections()	IMPLEMENTATION	0.9977270222126822	IMPLEMENTATION	0.0022729777873178553	WITHOUT_CLASSIFICATION
todo check if key contains the owner id	IMPLEMENTATION	0.5713593996156292	WITHOUT_CLASSIFICATION	0.4286406003843707	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.563398198347049	WITHOUT_CLASSIFICATION	0.4366018016529509	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9999046575840796	WITHOUT_CLASSIFICATION	9.53424159203501E-5	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9999046575840796	WITHOUT_CLASSIFICATION	9.53424159203501E-5	IMPLEMENTATION
if we are still not resolved we might represent a constant. needed to add this here because the allowance of naked-prop-refs in the grammar collides with the definition of literals/constants ("nondeterminism"). todo cleanup the grammar so that "processconstants" is always just handled from here	IMPLEMENTATION	0.999851149423868	IMPLEMENTATION	1.488505761321074E-4	WITHOUT_CLASSIFICATION
todo add referencedclass to disambiguate to fks on the same columns pointing to different tables	IMPLEMENTATION	0.5238575179274476	IMPLEMENTATION	0.47614248207255233	WITHOUT_CLASSIFICATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999992931932716	WITHOUT_CLASSIFICATION	7.068067283922235E-7	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999883972752094	WITHOUT_CLASSIFICATION	1.1602724790689136E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999883972752094	WITHOUT_CLASSIFICATION	1.1602724790689136E-5	IMPLEMENTATION
| this | bean | args | raw bean |	WITHOUT_CLASSIFICATION	0.999969492784616	WITHOUT_CLASSIFICATION	3.050721538410415E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
astore 4 store the raw bean	WITHOUT_CLASSIFICATION	0.9999817134471074	WITHOUT_CLASSIFICATION	1.8286552892559566E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999714097685605	WITHOUT_CLASSIFICATION	2.8590231439606052E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999714097685605	WITHOUT_CLASSIFICATION	2.8590231439606052E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999969846168766	WITHOUT_CLASSIFICATION	3.015383123301008E-6	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999743957548451	WITHOUT_CLASSIFICATION	2.560424515492123E-5	IMPLEMENTATION
putfield new value of the field	WITHOUT_CLASSIFICATION	0.9999403400616697	WITHOUT_CLASSIFICATION	5.965993833035443E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.999992839259845	WITHOUT_CLASSIFICATION	7.16074015499131E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999994473755012	WITHOUT_CLASSIFICATION	5.526244987578582E-7	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999994473755012	WITHOUT_CLASSIFICATION	5.526244987578582E-7	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999797546244027	WITHOUT_CLASSIFICATION	2.0245375597238072E-5	IMPLEMENTATION
just decrement the lock don't recache (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9996355341035373	WITHOUT_CLASSIFICATION	3.644658964626452E-4	IMPLEMENTATION
decode row selection	WITHOUT_CLASSIFICATION	0.9999901411000554	WITHOUT_CLASSIFICATION	9.858899944563523E-6	IMPLEMENTATION
disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999980692592181	WITHOUT_CLASSIFICATION	1.9307407820013492E-6	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999990382033221	WITHOUT_CLASSIFICATION	9.617966778673966E-7	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9999427877332695	WITHOUT_CLASSIFICATION	5.72122667305423E-5	IMPLEMENTATION
row id	WITHOUT_CLASSIFICATION	0.9999405034997141	WITHOUT_CLASSIFICATION	5.949650028592882E-5	IMPLEMENTATION
composite-id	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999639906505274	WITHOUT_CLASSIFICATION	3.6009349472629214E-5	IMPLEMENTATION
property prop = new property() prop.setname("id") prop.setpropertyaccessorname("embedded") prop.setvalue(id) entity.setidentifierproperty(prop)	WITHOUT_CLASSIFICATION	0.999954518004134	WITHOUT_CLASSIFICATION	4.5481995865976326E-5	IMPLEMENTATION
dynamic insert	WITHOUT_CLASSIFICATION	0.999993046029701	WITHOUT_CLASSIFICATION	6.953970299088268E-6	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999792496724446	WITHOUT_CLASSIFICATION	2.075032755537712E-5	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999985056246922	WITHOUT_CLASSIFICATION	1.494375307759022E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999961495200312	WITHOUT_CLASSIFICATION	3.850479968843381E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999961495200312	WITHOUT_CLASSIFICATION	3.850479968843381E-6	IMPLEMENTATION
generated properties can never be insertable	WITHOUT_CLASSIFICATION	0.9999377598450262	WITHOUT_CLASSIFICATION	6.224015497381532E-5	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999894394513313	WITHOUT_CLASSIFICATION	1.0560548668598059E-5	IMPLEMENTATION
by default natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999997238952447	WITHOUT_CLASSIFICATION	2.761047553286051E-7	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999881340614957	WITHOUT_CLASSIFICATION	1.1865938504360676E-5	IMPLEMENTATION
we found some extends attributes referencing entities which were not already processed. here we need to locate all entity-names and class-names contained in this document itself making sure that these get removed from the extendz list such that only extends names which require us to delay processing (i.e. external to this document and not yet processed) are contained in the returned result	WITHOUT_CLASSIFICATION	0.985316492175936	WITHOUT_CLASSIFICATION	0.014683507824064091	IMPLEMENTATION
build a resultsetmappingdefinition given a containing element for the "return-xxx" elements @param resultsetelem the element containing the return definitions. @param path no clue @param mappings the current processing state. @return the description of the mappings	WITHOUT_CLASSIFICATION	0.9999093265483799	WITHOUT_CLASSIFICATION	9.067345162002365E-5	IMPLEMENTATION
private boolean showsql private boolean formatsql	WITHOUT_CLASSIFICATION	0.9999974828748612	WITHOUT_CLASSIFICATION	2.5171251386943806E-6	IMPLEMENTATION
public boolean isshowsqlenabled() { return showsql } public boolean isformatsqlenabled() { return formatsql }	WITHOUT_CLASSIFICATION	0.9999951829043915	WITHOUT_CLASSIFICATION	4.817095608551096E-6	IMPLEMENTATION
set a custom entity resolver. this entity resolver must be set before addxxx(misc) call. default value is {@link org.hibernate.util.dtdentityresolver} @param entityresolver entity resolver to use	WITHOUT_CLASSIFICATION	0.999995861156578	WITHOUT_CLASSIFICATION	4.138843421930229E-6	IMPLEMENTATION
final list extendsqueue	WITHOUT_CLASSIFICATION	0.9999954793164416	WITHOUT_CLASSIFICATION	4.520683558293829E-6	IMPLEMENTATION
if close() is called guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999997240054749	WITHOUT_CLASSIFICATION	2.7599452517752993E-7	IMPLEMENTATION
if a threadlocalsessioncontext-bound session happens to get serialized to be completely correct we need to make sure that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999892020819967	WITHOUT_CLASSIFICATION	1.0797918003346476E-5	IMPLEMENTATION
on the inverse it makes sense that if a threadlocalsessioncontext- bound session then gets deserialized to go ahead and re-bind it to the threadlocalsessioncontext session map.	WITHOUT_CLASSIFICATION	0.9999958545246518	WITHOUT_CLASSIFICATION	4.145475348221276E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999986463248248	WITHOUT_CLASSIFICATION	1.3536751751837643E-6	IMPLEMENTATION
60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999933300260213	WITHOUT_CLASSIFICATION	6.669973978726445E-6	IMPLEMENTATION
optimisticcache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999779998459584	WITHOUT_CLASSIFICATION	2.200015404171506E-5	IMPLEMENTATION
cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999684727179617	WITHOUT_CLASSIFICATION	3.152728203827034E-5	IMPLEMENTATION
option.setdataversion( nonlockingdataversion.instance )	WITHOUT_CLASSIFICATION	0.9999650047747016	WITHOUT_CLASSIFICATION	3.49952252982754E-5	IMPLEMENTATION
do the put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9989046069579544	WITHOUT_CLASSIFICATION	0.0010953930420456645	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
tree cache in optimistic mode seems to have as very difficult time with remove calls on non-existent nodes (npes)	WITHOUT_CLASSIFICATION	0.9999312693382685	WITHOUT_CLASSIFICATION	6.873066173154574E-5	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999872417940366	WITHOUT_CLASSIFICATION	1.275820596340861E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999872417940366	WITHOUT_CLASSIFICATION	1.275820596340861E-5	IMPLEMENTATION
do the failfast put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9989046069579544	WITHOUT_CLASSIFICATION	0.0010953930420456645	IMPLEMENTATION
note evict() operates locally only (i.e. does not propogate to any other nodes in the potential cluster). this is exactly what is needed when we destroy() here destroy() is used as part of the process of shutting down a sessionfactory thus these removals should not be propogated	WITHOUT_CLASSIFICATION	0.755052591492712	WITHOUT_CLASSIFICATION	0.24494740850728816	IMPLEMENTATION
protected regionrootlistener listener	WITHOUT_CLASSIFICATION	0.9999418410297084	WITHOUT_CLASSIFICATION	5.815897029154763E-5	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999926302733674	WITHOUT_CLASSIFICATION	7.3697266325350055E-6	IMPLEMENTATION
if we've been blocking for the mutex perhaps another thread has already reestablished the root. in case the node was reestablised via replication confirm it's marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999999362360308	WITHOUT_CLASSIFICATION	6.376396915793319E-8	IMPLEMENTATION
for pessimistic locking we just want to toss out our ref to any old invalid root node and get the latest (may be null)	WITHOUT_CLASSIFICATION	0.9999998235772848	WITHOUT_CLASSIFICATION	1.7642271517733203E-7	IMPLEMENTATION
the rest only matters for optimistic locking where we need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9994505100949127	WITHOUT_CLASSIFICATION	5.494899050872007E-4	IMPLEMENTATION
don't hold a transactional lock for this	WITHOUT_CLASSIFICATION	0.9999660545415738	WITHOUT_CLASSIFICATION	3.394545842621651E-5	IMPLEMENTATION
make sure the root node for the region exists and has a dataversion that never complains	WITHOUT_CLASSIFICATION	0.9997078590760977	WITHOUT_CLASSIFICATION	2.9214092390226283E-4	IMPLEMENTATION
never evict this node	WITHOUT_CLASSIFICATION	0.9990115844796968	WITHOUT_CLASSIFICATION	9.884155203031934E-4	IMPLEMENTATION
fix up the resident flag	WITHOUT_CLASSIFICATION	0.9890268031160604	WITHOUT_CLASSIFICATION	0.010973196883939712	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999872417940366	WITHOUT_CLASSIFICATION	1.275820596340861E-5	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999914094713214	WITHOUT_CLASSIFICATION	8.590528678676191E-6	IMPLEMENTATION
no-op. we don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9993505369827129	WITHOUT_CLASSIFICATION	6.494630172870356E-4	IMPLEMENTATION
this should only be possible if the caches are constructor injected	WITHOUT_CLASSIFICATION	0.9999928996653736	WITHOUT_CLASSIFICATION	7.1003346264456414E-6	IMPLEMENTATION
we only build caches if none were passed in. passing in caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999987955557044	WITHOUT_CLASSIFICATION	1.2044442956179356E-6	IMPLEMENTATION
set up the cache factory	WITHOUT_CLASSIFICATION	0.9999870075905	WITHOUT_CLASSIFICATION	1.2992409499978482E-5	IMPLEMENTATION
see if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999996779252461	WITHOUT_CLASSIFICATION	3.2207475383612603E-7	IMPLEMENTATION
default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999996362250565	WITHOUT_CLASSIFICATION	3.6377494344001923E-7	IMPLEMENTATION
default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999998080378253	WITHOUT_CLASSIFICATION	1.9196217478597474E-7	IMPLEMENTATION
for timestamps we default to a separate config	WITHOUT_CLASSIFICATION	0.9999937324365128	WITHOUT_CLASSIFICATION	6.267563487155029E-6	IMPLEMENTATION
we can't change the tm on a running cache just check if the cache has no tm and we're ok with that	WITHOUT_CLASSIFICATION	0.999999726628291	WITHOUT_CLASSIFICATION	2.733717090657392E-7	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9999623295466863	WITHOUT_CLASSIFICATION	3.767045331362421E-5	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9999581718170591	WITHOUT_CLASSIFICATION	4.182818294082056E-5	IMPLEMENTATION
this method should be implemented assuming it's valid to do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.6784596792853619	IMPLEMENTATION	0.32154032071463795	WITHOUT_CLASSIFICATION
make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9998028300798948	WITHOUT_CLASSIFICATION	1.971699201051308E-4	IMPLEMENTATION
we use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999472759400345	WITHOUT_CLASSIFICATION	5.272405996561259E-5	IMPLEMENTATION
following methods we don't delegate since they have so little logic it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9792528721276815	WITHOUT_CLASSIFICATION	0.020747127872318444	IMPLEMENTATION
if jbc is using invalidation we don't want to propagate changes. we use the timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999856677444046	WITHOUT_CLASSIFICATION	1.4332255595412302E-5	IMPLEMENTATION
we don't want to waste effort setting an option if jbc is already in local mode. if jbc is repl_(a)sync then check if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999973380478236	WITHOUT_CLASSIFICATION	2.6619521763116868E-6	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents updates add a zero (or low) timeout option so we don't block waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999835122692443	WITHOUT_CLASSIFICATION	1.6487730755695403E-5	IMPLEMENTATION
double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999951379069216	WITHOUT_CLASSIFICATION	4.862093078483678E-6	IMPLEMENTATION
get an exclusive right to update jbc for this key from this node.	WITHOUT_CLASSIFICATION	0.9999990111117686	WITHOUT_CLASSIFICATION	9.888882314263563E-7	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9999948323881147	WITHOUT_CLASSIFICATION	5.167611885232245E-6	IMPLEMENTATION
initial load from jbc	WITHOUT_CLASSIFICATION	0.9999993973423058	WITHOUT_CLASSIFICATION	6.026576942280236E-7	IMPLEMENTATION
see if we had a 2nd invalidation from the same initial preinvalidation timestamp. if so only increment if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999999987761963	WITHOUT_CLASSIFICATION	1.2238037309323985E-9	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9999948323881147	WITHOUT_CLASSIFICATION	5.167611885232245E-6	IMPLEMENTATION
if the workspace node has null as well ok if not we've been modified in a non-comparable manner which we have to treat as us being newer	WITHOUT_CLASSIFICATION	0.9999654783057972	WITHOUT_CLASSIFICATION	3.452169420280862E-5	IMPLEMENTATION
the standard comparator types are not serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999223984802706	WITHOUT_CLASSIFICATION	7.760151972933047E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999591840574187	WITHOUT_CLASSIFICATION	4.08159425811819E-5	IMPLEMENTATION
construct the cache	WITHOUT_CLASSIFICATION	0.9999676285025354	WITHOUT_CLASSIFICATION	3.2371497464551275E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999948491291846	WITHOUT_CLASSIFICATION	5.150870815533617E-6	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999948491291846	WITHOUT_CLASSIFICATION	5.150870815533617E-6	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999646386934057	WITHOUT_CLASSIFICATION	3.536130659437498E-5	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for initialpoolsize which hibernate sensibly lets default to minpoolsize but we'll let users override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999999639346835	WITHOUT_CLASSIFICATION	3.6065316584598245E-8	IMPLEMENTATION
datasource unpooled = datasources.unpooleddatasource(jdbcurl props.getproperty(environment.user) props.getproperty(environment.pass))	WITHOUT_CLASSIFICATION	0.9999299180584763	WITHOUT_CLASSIFICATION	7.00819415236904E-5	IMPLEMENTATION
true if the pool is borrowed from the outside false if we used to create it	WITHOUT_CLASSIFICATION	0.9999996544073348	WITHOUT_CLASSIFICATION	3.4559266516564194E-7	IMPLEMENTATION
get a connection from the pool (thru drivermanager cfr. proxool doc)	WITHOUT_CLASSIFICATION	0.999863656032951	WITHOUT_CLASSIFICATION	1.36343967049015E-4	IMPLEMENTATION
set the transaction isolation if defined	WITHOUT_CLASSIFICATION	0.9999987029692838	WITHOUT_CLASSIFICATION	1.2970307161544286E-6	IMPLEMENTATION
toggle autocommit to false if set	WITHOUT_CLASSIFICATION	0.9999931728187621	WITHOUT_CLASSIFICATION	6.827181237816622E-6	IMPLEMENTATION
return the connection	WITHOUT_CLASSIFICATION	0.9993586001375435	WITHOUT_CLASSIFICATION	6.413998624565152E-4	IMPLEMENTATION
get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999758624223151	WITHOUT_CLASSIFICATION	2.4137577684965188E-5	IMPLEMENTATION
default the proxool alias setting	WITHOUT_CLASSIFICATION	0.9999994108671406	WITHOUT_CLASSIFICATION	5.89132859329462E-7	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999992361174381	WITHOUT_CLASSIFICATION	7.638825618911088E-7	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999992361174381	WITHOUT_CLASSIFICATION	7.638825618911088E-7	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9997939407915079	WITHOUT_CLASSIFICATION	2.0605920849221186E-4	IMPLEMENTATION
set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999806283734111	WITHOUT_CLASSIFICATION	1.9371626588940145E-5	IMPLEMENTATION
configured using the jaxp configurator	WITHOUT_CLASSIFICATION	0.9999893389427859	WITHOUT_CLASSIFICATION	1.0661057214155541E-5	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999992361174381	WITHOUT_CLASSIFICATION	7.638825618911088E-7	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9997939407915079	WITHOUT_CLASSIFICATION	2.0605920849221186E-4	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9997939407915079	WITHOUT_CLASSIFICATION	2.0605920849221186E-4	IMPLEMENTATION
configured using the properties file configurator	WITHOUT_CLASSIFICATION	0.999993705620708	WITHOUT_CLASSIFICATION	6.294379291951644E-6	IMPLEMENTATION
remember isolation level	WITHOUT_CLASSIFICATION	0.9996086354467005	WITHOUT_CLASSIFICATION	3.9136455329935073E-4	IMPLEMENTATION
if the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999999943348035	WITHOUT_CLASSIFICATION	5.66519652070047E-9	IMPLEMENTATION
we have created the pool ourselves so shut it down	WITHOUT_CLASSIFICATION	0.9999972961396669	WITHOUT_CLASSIFICATION	2.7038603331361864E-6	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9994319405236398	WITHOUT_CLASSIFICATION	5.680594763601902E-4	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9994319405236398	WITHOUT_CLASSIFICATION	5.680594763601902E-4	IMPLEMENTATION
always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999972294495391	WITHOUT_CLASSIFICATION	2.7705504609012457E-6	IMPLEMENTATION
public currency getcurrency(int col) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999852511178373	WITHOUT_CLASSIFICATION	1.4748882162808428E-5	IMPLEMENTATION
default is pojo	WITHOUT_CLASSIFICATION	0.9999980475650927	WITHOUT_CLASSIFICATION	1.9524349072705544E-6	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.999999625167009	WITHOUT_CLASSIFICATION	3.7483299102784957E-7	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.999999625167009	WITHOUT_CLASSIFICATION	3.7483299102784957E-7	IMPLEMENTATION
private cacheentry cacheentry	WITHOUT_CLASSIFICATION	0.9999945961001622	WITHOUT_CLASSIFICATION	5.403899837828574E-6	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9998679619785155	WITHOUT_CLASSIFICATION	1.3203802148462998E-4	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9999826327172823	WITHOUT_CLASSIFICATION	1.7367282717794747E-5	IMPLEMENTATION
get the updated snapshot of the entity state by cloning current state it is safe to copy in place since by this time no-one else (should have) has a reference to the array	WITHOUT_CLASSIFICATION	0.9999999949533822	WITHOUT_CLASSIFICATION	5.046617756308065E-9	IMPLEMENTATION
this entity defines proeprty generation so process those generated values	WITHOUT_CLASSIFICATION	0.9999998033648746	WITHOUT_CLASSIFICATION	1.966351255168906E-7	IMPLEMENTATION
have the entity entry perform post-update processing passing it the update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999705370928627	WITHOUT_CLASSIFICATION	2.9462907137316554E-5	IMPLEMENTATION
!persister.iscacheinvalidationrequired()	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9997042114243355	WITHOUT_CLASSIFICATION	2.9578857566447356E-4	IMPLEMENTATION
sort first by role name	WITHOUT_CLASSIFICATION	0.9999779956074153	WITHOUT_CLASSIFICATION	2.2004392584717174E-5	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9999826327172823	WITHOUT_CLASSIFICATION	1.7367282717794747E-5	IMPLEMENTATION
then by fk	WITHOUT_CLASSIFICATION	0.999995322750871	WITHOUT_CLASSIFICATION	4.677249129045049E-6	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999802780782344	WITHOUT_CLASSIFICATION	1.972192176566845E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999802780782344	WITHOUT_CLASSIFICATION	1.972192176566845E-5	IMPLEMENTATION
an existing collection that was either non-empty or uninitialized is replaced by null or a different collection (if the collection is uninitialized hibernate has no way of knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999999419500408	WITHOUT_CLASSIFICATION	5.804995926866293E-8	IMPLEMENTATION
this method is called when a new non-null collection is persisted or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999989865346365	WITHOUT_CLASSIFICATION	1.0134653634356392E-6	IMPLEMENTATION
boolean put = persister.getcache().insert(ck cacheentry)	WITHOUT_CLASSIFICATION	0.9998684873675149	WITHOUT_CLASSIFICATION	1.3151263248500046E-4	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9981537040519346	WITHOUT_CLASSIFICATION	0.001846295948065415	IMPLEMENTATION
do nothing - we only need to notify the cache	WITHOUT_CLASSIFICATION	0.9999550544418399	WITHOUT_CLASSIFICATION	4.494555816007695E-5	IMPLEMENTATION
sort first by entity name	WITHOUT_CLASSIFICATION	0.9999817144748547	WITHOUT_CLASSIFICATION	1.8285525145216614E-5	IMPLEMENTATION
then by id	WITHOUT_CLASSIFICATION	0.9999814001249735	WITHOUT_CLASSIFICATION	1.8599875026492612E-5	IMPLEMENTATION
to be safe	WITHOUT_CLASSIFICATION	0.9999874473996637	WITHOUT_CLASSIFICATION	1.2552600336274397E-5	IMPLEMENTATION
no transformations took place so handle it as we would a non-instrumented class	WITHOUT_CLASSIFICATION	0.9999328800211728	WITHOUT_CLASSIFICATION	6.711997882720567E-5	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999998791787668	WITHOUT_CLASSIFICATION	1.2082123336465003E-7	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999998791787668	WITHOUT_CLASSIFICATION	1.2082123336465003E-7	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9994162704336691	WITHOUT_CLASSIFICATION	5.83729566330941E-4	IMPLEMENTATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999992931932716	WITHOUT_CLASSIFICATION	7.068067283922235E-7	IMPLEMENTATION
set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999967799419437	WITHOUT_CLASSIFICATION	3.2200580562213867E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
invokespecial	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999883972752094	WITHOUT_CLASSIFICATION	1.1602724790689136E-5	IMPLEMENTATION
aload_1 load bean	WITHOUT_CLASSIFICATION	0.9999706363481424	WITHOUT_CLASSIFICATION	2.9363651857614822E-5	IMPLEMENTATION
checkcast cast bean	WITHOUT_CLASSIFICATION	0.9999806185639257	WITHOUT_CLASSIFICATION	1.938143607427206E-5	IMPLEMENTATION
astore_3 store bean	WITHOUT_CLASSIFICATION	0.9999400650805071	WITHOUT_CLASSIFICATION	5.993491949280203E-5	IMPLEMENTATION
aload_2 args	WITHOUT_CLASSIFICATION	0.9999630619581025	WITHOUT_CLASSIFICATION	3.693804189753019E-5	IMPLEMENTATION
iconst_i continue to aastore growing stack is 1	WITHOUT_CLASSIFICATION	0.9999887220040846	WITHOUT_CLASSIFICATION	1.1277995915480152E-5	IMPLEMENTATION
new	WITHOUT_CLASSIFICATION	0.9999892850646277	WITHOUT_CLASSIFICATION	1.0714935372305159E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999871289357571	WITHOUT_CLASSIFICATION	1.2871064242887513E-5	IMPLEMENTATION
aload_3 load the raw bean	WITHOUT_CLASSIFICATION	0.999988242817944	WITHOUT_CLASSIFICATION	1.175718205607737E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
aastore args	WITHOUT_CLASSIFICATION	0.9999630619581025	WITHOUT_CLASSIFICATION	3.693804189753019E-5	IMPLEMENTATION
| this | bean | args | i | raw bean | exception |	WITHOUT_CLASSIFICATION	0.9999730699719547	WITHOUT_CLASSIFICATION	2.6930028045348546E-5	IMPLEMENTATION
required to exception table iconst_0 i	WITHOUT_CLASSIFICATION	0.9999013830347978	WITHOUT_CLASSIFICATION	9.861696520224245E-5	IMPLEMENTATION
istore_3 store i	WITHOUT_CLASSIFICATION	0.9997128010447786	WITHOUT_CLASSIFICATION	2.8719895522139933E-4	IMPLEMENTATION
aload_1 load the bean	WITHOUT_CLASSIFICATION	0.9999880558815585	WITHOUT_CLASSIFICATION	1.194411844153246E-5	IMPLEMENTATION
checkcast cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999962792572129	WITHOUT_CLASSIFICATION	3.7207427872376903E-6	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999714097685605	WITHOUT_CLASSIFICATION	2.8590231439606052E-5	IMPLEMENTATION
start region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.999946546750626	WITHOUT_CLASSIFICATION	5.3453249373910185E-5	IMPLEMENTATION
iinc 3 1	WITHOUT_CLASSIFICATION	0.9999412305720966	WITHOUT_CLASSIFICATION	5.8769427903268156E-5	IMPLEMENTATION
aload 4 load the raw bean	WITHOUT_CLASSIFICATION	0.999991041139792	WITHOUT_CLASSIFICATION	8.958860208104003E-6	IMPLEMENTATION
aload_2 load the args	WITHOUT_CLASSIFICATION	0.9999854741848562	WITHOUT_CLASSIFICATION	1.4525815143916602E-5	IMPLEMENTATION
iconst_i	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
aaload	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999871528211397	WITHOUT_CLASSIFICATION	1.2847178860395764E-5	IMPLEMENTATION
checkcast (case of primitive type) invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999928746089114	WITHOUT_CLASSIFICATION	7.125391088574954E-6	IMPLEMENTATION
checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999970715252895	WITHOUT_CLASSIFICATION	2.9284747106304538E-6	IMPLEMENTATION
current stack len = 2	WITHOUT_CLASSIFICATION	0.9999514264333141	WITHOUT_CLASSIFICATION	4.857356668589215E-5	IMPLEMENTATION
end region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.998952559054648	WITHOUT_CLASSIFICATION	0.0010474409453520123	IMPLEMENTATION
register in exception table	WITHOUT_CLASSIFICATION	0.9999987874000137	WITHOUT_CLASSIFICATION	1.2125999862620076E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999883972752094	WITHOUT_CLASSIFICATION	1.1602724790689136E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999883972752094	WITHOUT_CLASSIFICATION	1.1602724790689136E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999871289357571	WITHOUT_CLASSIFICATION	1.2871064242887513E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999871528211397	WITHOUT_CLASSIFICATION	1.2847178860395764E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999969846168766	WITHOUT_CLASSIFICATION	3.015383123301008E-6	IMPLEMENTATION
astore 5 store exception	WITHOUT_CLASSIFICATION	0.9999945871688516	WITHOUT_CLASSIFICATION	5.4128311484936E-6	IMPLEMENTATION
new bulkaccessorexception	WITHOUT_CLASSIFICATION	0.9999821835499183	WITHOUT_CLASSIFICATION	1.781645008162283E-5	IMPLEMENTATION
aload 5 load exception	WITHOUT_CLASSIFICATION	0.9999973481891621	WITHOUT_CLASSIFICATION	2.6518108379116666E-6	IMPLEMENTATION
iload_3 i	WITHOUT_CLASSIFICATION	0.9999474790342348	WITHOUT_CLASSIFICATION	5.252096576520373E-5	IMPLEMENTATION
invokespecial bulkaccessorexception.<init>	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
athrow	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
warning classfile only	WITHOUT_CLASSIFICATION	0.9999974377251206	WITHOUT_CLASSIFICATION	2.5622748793093767E-6	IMPLEMENTATION
swallow	WITHOUT_CLASSIFICATION	0.999987069675877	WITHOUT_CLASSIFICATION	1.2930324122912939E-5	IMPLEMENTATION
local variable | this |	WITHOUT_CLASSIFICATION	0.9999713703095695	WITHOUT_CLASSIFICATION	2.862969043052212E-5	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9999137317467697	WITHOUT_CLASSIFICATION	8.62682532303213E-5	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9999137317467697	WITHOUT_CLASSIFICATION	8.62682532303213E-5	IMPLEMENTATION
getfield get field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.999989986564393	WITHOUT_CLASSIFICATION	1.001343560691608E-5	IMPLEMENTATION
areturn return the value of the field	WITHOUT_CLASSIFICATION	0.9999353971802706	WITHOUT_CLASSIFICATION	6.460281972942831E-5	IMPLEMENTATION
local variables | this | callback |	WITHOUT_CLASSIFICATION	0.9999746973057622	WITHOUT_CLASSIFICATION	2.5302694237851793E-5	IMPLEMENTATION
aload_1 load callback	WITHOUT_CLASSIFICATION	0.9999580257872259	WITHOUT_CLASSIFICATION	4.19742127741775E-5	IMPLEMENTATION
putfield put field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9998063086215342	WITHOUT_CLASSIFICATION	1.9369137846585069E-4	IMPLEMENTATION
case of non-static field	WITHOUT_CLASSIFICATION	0.9999747405791425	WITHOUT_CLASSIFICATION	2.5259420857403757E-5	IMPLEMENTATION
getfield get each field	WITHOUT_CLASSIFICATION	0.9999754816060025	WITHOUT_CLASSIFICATION	2.4518393997575283E-5	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999743957548451	WITHOUT_CLASSIFICATION	2.560424515492123E-5	IMPLEMENTATION
ifnonnull	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.9999574438774868	WITHOUT_CLASSIFICATION	4.255612251327714E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.9999574438774868	WITHOUT_CLASSIFICATION	4.255612251327714E-5	IMPLEMENTATION
store_1 each type	WITHOUT_CLASSIFICATION	0.9999523459550383	WITHOUT_CLASSIFICATION	4.7654044961669446E-5	IMPLEMENTATION
ldc name of the field	WITHOUT_CLASSIFICATION	0.9999763947225861	WITHOUT_CLASSIFICATION	2.3605277413888155E-5	IMPLEMENTATION
load_1 each type	WITHOUT_CLASSIFICATION	0.9999523459550383	WITHOUT_CLASSIFICATION	4.7654044961669446E-5	IMPLEMENTATION
invokeinterface invoke callback.read() each type	WITHOUT_CLASSIFICATION	0.9999661175058006	WITHOUT_CLASSIFICATION	3.3882494199386436E-5	IMPLEMENTATION
int	WITHOUT_CLASSIFICATION	0.9999948172126876	WITHOUT_CLASSIFICATION	5.182787312411083E-6	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999883972752094	WITHOUT_CLASSIFICATION	1.1602724790689136E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999871289357571	WITHOUT_CLASSIFICATION	1.2871064242887513E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999871528211397	WITHOUT_CLASSIFICATION	1.2847178860395764E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999871528211397	WITHOUT_CLASSIFICATION	1.2847178860395764E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
putfield	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999883972752094	WITHOUT_CLASSIFICATION	1.1602724790689136E-5	IMPLEMENTATION
ldc field name	WITHOUT_CLASSIFICATION	0.9999099286791743	WITHOUT_CLASSIFICATION	9.007132082574814E-5	IMPLEMENTATION
getfield old value of the field	WITHOUT_CLASSIFICATION	0.9999746822604639	WITHOUT_CLASSIFICATION	2.531773953610632E-5	IMPLEMENTATION
invokeinterface callback.write(..)	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.999992839259845	WITHOUT_CLASSIFICATION	7.16074015499131E-6	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.999992839259845	WITHOUT_CLASSIFICATION	7.16074015499131E-6	IMPLEMENTATION
not array	WITHOUT_CLASSIFICATION	0.9992342754495667	WITHOUT_CLASSIFICATION	7.657245504332504E-4	IMPLEMENTATION
array of reference type	WITHOUT_CLASSIFICATION	0.999997861454649	WITHOUT_CLASSIFICATION	2.138545350950463E-6	IMPLEMENTATION
boolean	WITHOUT_CLASSIFICATION	0.9999951552715781	WITHOUT_CLASSIFICATION	4.844728421872064E-6	IMPLEMENTATION
byte	WITHOUT_CLASSIFICATION	0.9999877823832867	WITHOUT_CLASSIFICATION	1.221761671330759E-5	IMPLEMENTATION
char	WITHOUT_CLASSIFICATION	0.999997413739213	WITHOUT_CLASSIFICATION	2.5862607869573844E-6	IMPLEMENTATION
short	WITHOUT_CLASSIFICATION	0.9999871188296696	WITHOUT_CLASSIFICATION	1.288117033042504E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999994473755012	WITHOUT_CLASSIFICATION	5.526244987578582E-7	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999883688144733	WITHOUT_CLASSIFICATION	1.1631185526781833E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999883688144733	WITHOUT_CLASSIFICATION	1.1631185526781833E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999797546244027	WITHOUT_CLASSIFICATION	2.0245375597238072E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999797546244027	WITHOUT_CLASSIFICATION	2.0245375597238072E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999478924185816	WITHOUT_CLASSIFICATION	5.21075814182965E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999478924185816	WITHOUT_CLASSIFICATION	5.21075814182965E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999994036819908	WITHOUT_CLASSIFICATION	5.963180091607159E-7	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999994036819908	WITHOUT_CLASSIFICATION	5.963180091607159E-7	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.999992839259845	WITHOUT_CLASSIFICATION	7.16074015499131E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999994473755012	WITHOUT_CLASSIFICATION	5.526244987578582E-7	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999883688144733	WITHOUT_CLASSIFICATION	1.1631185526781833E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999883688144733	WITHOUT_CLASSIFICATION	1.1631185526781833E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999797546244027	WITHOUT_CLASSIFICATION	2.0245375597238072E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999478924185816	WITHOUT_CLASSIFICATION	5.21075814182965E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999478924185816	WITHOUT_CLASSIFICATION	5.21075814182965E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999994036819908	WITHOUT_CLASSIFICATION	5.963180091607159E-7	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.9999504088148853	WITHOUT_CLASSIFICATION	4.9591185114808085E-5	IMPLEMENTATION
mainly for oscache	WITHOUT_CLASSIFICATION	0.9999856786271641	WITHOUT_CLASSIFICATION	1.4321372835895953E-5	IMPLEMENTATION
decrement the lock	WITHOUT_CLASSIFICATION	0.9999845834187372	WITHOUT_CLASSIFICATION	1.541658126274498E-5	IMPLEMENTATION
create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999754807802004	WITHOUT_CLASSIFICATION	2.4519219799600487E-5	IMPLEMENTATION
recache the updated state	WITHOUT_CLASSIFICATION	0.999991525008656	WITHOUT_CLASSIFICATION	8.474991343942256E-6	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999884914786715	WITHOUT_CLASSIFICATION	1.1508521328422708E-5	IMPLEMENTATION
null clientlock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999999734152193	WITHOUT_CLASSIFICATION	2.6584780694275375E-8	IMPLEMENTATION
we really could refresh the item if it is not a lock but it might be slower return freshtimestamp < txtimestamp	WITHOUT_CLASSIFICATION	0.9999626703695427	WITHOUT_CLASSIFICATION	3.732963045727058E-5	IMPLEMENTATION
by requiring < we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999998579777315	WITHOUT_CLASSIFICATION	1.4202226859081431E-7	IMPLEMENTATION
the user provided resulttransformer not the one used with "select new". here to avoid mangling transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.998305197232773	WITHOUT_CLASSIFICATION	0.0016948027672270673	IMPLEMENTATION
disassemble positional parameters	WITHOUT_CLASSIFICATION	0.999957910738565	WITHOUT_CLASSIFICATION	4.20892614350124E-5	IMPLEMENTATION
disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999833592872777	WITHOUT_CLASSIFICATION	1.6640712722285964E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999646386934057	WITHOUT_CLASSIFICATION	3.536130659437498E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999884914786715	WITHOUT_CLASSIFICATION	1.1508521328422708E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999884914786715	WITHOUT_CLASSIFICATION	1.1508521328422708E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999884914786715	WITHOUT_CLASSIFICATION	1.1508521328422708E-5	IMPLEMENTATION
this is called from settingsfactory irregardless trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999979179331523	WITHOUT_CLASSIFICATION	2.0820668476917736E-6	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.999994168980691	WITHOUT_CLASSIFICATION	5.831019308973269E-6	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.999994168980691	WITHOUT_CLASSIFICATION	5.831019308973269E-6	IMPLEMENTATION
throw new unsupportedoperationexception("can't write to a readonly object")	WITHOUT_CLASSIFICATION	0.9996588262511108	WITHOUT_CLASSIFICATION	3.411737488891683E-4	IMPLEMENTATION
assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999999727195774	WITHOUT_CLASSIFICATION	2.7280422609077522E-8	IMPLEMENTATION
persister.setidentifier(result id) before calling interceptor for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999928746373752	WITHOUT_CLASSIFICATION	7.125362624748827E-6	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9997168129995808	WITHOUT_CLASSIFICATION	2.831870004192327E-4	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9997168129995808	WITHOUT_CLASSIFICATION	2.831870004192327E-4	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999990382033221	WITHOUT_CLASSIFICATION	9.617966778673966E-7	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999809796607313	WITHOUT_CLASSIFICATION	1.9020339268668095E-5	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999809796607313	WITHOUT_CLASSIFICATION	1.9020339268668095E-5	IMPLEMENTATION
classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9995326091369429	WITHOUT_CLASSIFICATION	4.673908630572323E-4	IMPLEMENTATION
get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999981511365158	WITHOUT_CLASSIFICATION	1.8488634842451105E-6	IMPLEMENTATION
get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999985056246922	WITHOUT_CLASSIFICATION	1.494375307759022E-6	IMPLEMENTATION
db-objectname	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
mutable	WITHOUT_CLASSIFICATION	0.9999870426087465	WITHOUT_CLASSIFICATION	1.2957391253512515E-5	IMPLEMENTATION
where	WITHOUT_CLASSIFICATION	0.9999629334752984	WITHOUT_CLASSIFICATION	3.706652470157883E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9999427877332695	WITHOUT_CLASSIFICATION	5.72122667305423E-5	IMPLEMENTATION
polymorphism	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.7815003541523745	WITHOUT_CLASSIFICATION	0.2184996458476255	IMPLEMENTATION
id	WITHOUT_CLASSIFICATION	0.9999173794307363	WITHOUT_CLASSIFICATION	8.262056926368298E-5	IMPLEMENTATION
version / timestamp	WITHOUT_CLASSIFICATION	0.999997956688902	WITHOUT_CLASSIFICATION	2.0433110979540885E-6	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999639906505274	WITHOUT_CLASSIFICATION	3.6009349472629214E-5	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999913638159499	WITHOUT_CLASSIFICATION	8.636184050201576E-6	IMPLEMENTATION
this is either a <version/> tag with no type attribute or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.999994486303576	WITHOUT_CLASSIFICATION	5.513696424006275E-6	IMPLEMENTATION
for version properties marked as being generated make sure they are "always" generated aka "insert" is invalid this is dis-allowed by the dtd but just to make sure	WITHOUT_CLASSIFICATION	0.9999999984066796	WITHOUT_CLASSIFICATION	1.593320330446553E-9	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999639906505274	WITHOUT_CLASSIFICATION	3.6009349472629214E-5	IMPLEMENTATION
( (column) discrim.getcolumniterator().next() ).settype(type)	WITHOUT_CLASSIFICATION	0.9999881340614957	WITHOUT_CLASSIFICATION	1.1865938504360676E-5	IMPLEMENTATION
go ahead and set the lazy here since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.99991932618293	WITHOUT_CLASSIFICATION	8.067381706997329E-5	IMPLEMENTATION
dynamic update	WITHOUT_CLASSIFICATION	0.9999940090658163	WITHOUT_CLASSIFICATION	5.990934183801759E-6	IMPLEMENTATION
import	WITHOUT_CLASSIFICATION	0.999973195925439	WITHOUT_CLASSIFICATION	2.6804074561001256E-5	IMPLEMENTATION
batch size	WITHOUT_CLASSIFICATION	0.9999893833283475	WITHOUT_CLASSIFICATION	1.0616671652430406E-5	IMPLEMENTATION
select before update	WITHOUT_CLASSIFICATION	0.9999962535510348	WITHOUT_CLASSIFICATION	3.7464489651345002E-6	IMPLEMENTATION
optimistic lock mode	WITHOUT_CLASSIFICATION	0.9999408088492356	WITHOUT_CLASSIFICATION	5.919115076451481E-5	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999792496724446	WITHOUT_CLASSIFICATION	2.075032755537712E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999961060620502	WITHOUT_CLASSIFICATION	3.893937949808476E-6	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999985056246922	WITHOUT_CLASSIFICATION	1.494375307759022E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999961495200312	WITHOUT_CLASSIFICATION	3.850479968843381E-6	IMPLEMENTATION
joined subclasses	WITHOUT_CLASSIFICATION	0.9999876840188163	WITHOUT_CLASSIFICATION	1.2315981183568284E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999908190688989	WITHOUT_CLASSIFICATION	9.18093110107114E-6	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9999427877332695	WITHOUT_CLASSIFICATION	5.72122667305423E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999961060620502	WITHOUT_CLASSIFICATION	3.893937949808476E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999961495200312	WITHOUT_CLASSIFICATION	3.850479968843381E-6	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999908190688989	WITHOUT_CLASSIFICATION	9.18093110107114E-6	IMPLEMENTATION
model.getkey().settype( new type( model.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.999971139709145	WITHOUT_CLASSIFICATION	2.8860290855084326E-5	IMPLEMENTATION
tablename	WITHOUT_CLASSIFICATION	0.9999870674106568	WITHOUT_CLASSIFICATION	1.29325893431855E-5	IMPLEMENTATION
join.getkey().settype( new type( lazz.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.999971139709145	WITHOUT_CLASSIFICATION	2.8860290855084326E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999961495200312	WITHOUT_CLASSIFICATION	3.850479968843381E-6	IMPLEMENTATION
column(s)	WITHOUT_CLASSIFICATION	0.9999870227052446	WITHOUT_CLASSIFICATION	1.2977294755315551E-5	IMPLEMENTATION
column index	WITHOUT_CLASSIFICATION	0.9995578360874648	WITHOUT_CLASSIFICATION	4.421639125351255E-4	IMPLEMENTATION
column unique-key	WITHOUT_CLASSIFICATION	0.9998911673067383	WITHOUT_CLASSIFICATION	1.0883269326160503E-4	IMPLEMENTATION
automatically makes a column with the default name if none is specifed by xml	WITHOUT_CLASSIFICATION	0.9999999366784499	WITHOUT_CLASSIFICATION	6.332155010844205E-8	IMPLEMENTATION
for an any	WITHOUT_CLASSIFICATION	0.9999991549399639	WITHOUT_CLASSIFICATION	8.450600360302309E-7	IMPLEMENTATION
insertable simply because that is the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9951982586985423	WITHOUT_CLASSIFICATION	0.004801741301457728	IMPLEMENTATION
the user specifically supplied insert="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999960035330501	WITHOUT_CLASSIFICATION	3.996466949925051E-6	IMPLEMENTATION
properties generated on update can never be updateable	WITHOUT_CLASSIFICATION	0.9999533307633249	WITHOUT_CLASSIFICATION	4.6669236675053555E-5	IMPLEMENTATION
updateable only because the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.996073416343992	WITHOUT_CLASSIFICATION	0.0039265836560079615	IMPLEMENTATION
the user specifically supplied update="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999960035330501	WITHOUT_CLASSIFICATION	3.996466949925051E-6	IMPLEMENTATION
rolename	WITHOUT_CLASSIFICATION	0.999987989748065	WITHOUT_CLASSIFICATION	1.2010251934988545E-5	IMPLEMENTATION
fetch strategy	WITHOUT_CLASSIFICATION	0.9999627609846591	WITHOUT_CLASSIFICATION	3.723901534090435E-5	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999894394513313	WITHOUT_CLASSIFICATION	1.0560548668598059E-5	IMPLEMENTATION
tablename = mappings.getnamingstrategy().propertytotablename( classname path )	WITHOUT_CLASSIFICATION	0.9997660573654042	WITHOUT_CLASSIFICATION	2.3394263459582473E-4	IMPLEMENTATION
sort	WITHOUT_CLASSIFICATION	0.9999655855234054	WITHOUT_CLASSIFICATION	3.441447659453897E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999961060620502	WITHOUT_CLASSIFICATION	3.893937949808476E-6	IMPLEMENTATION
unsorted natural comparator.class.name	WITHOUT_CLASSIFICATION	0.9999732793913628	WITHOUT_CLASSIFICATION	2.6720608637281696E-5	IMPLEMENTATION
orphan delete (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9997088615972605	WITHOUT_CLASSIFICATION	2.911384027394981E-4	IMPLEMENTATION
set up second pass	WITHOUT_CLASSIFICATION	0.999969283429367	WITHOUT_CLASSIFICATION	3.071657063309158E-5	IMPLEMENTATION
an "embedded" component (composite ids and unique) note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9997798090380008	WITHOUT_CLASSIFICATION	2.2019096199921097E-4	IMPLEMENTATION
a nested composite element	WITHOUT_CLASSIFICATION	0.999973058987441	WITHOUT_CLASSIFICATION	2.6941012558919208E-5	IMPLEMENTATION
for an any we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999947581627032	WITHOUT_CLASSIFICATION	5.241837296754174E-6	IMPLEMENTATION
note special case one-to-one constrained=false cannot be proxied so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999999626050229	WITHOUT_CLASSIFICATION	3.7394976982741506E-8	IMPLEMENTATION
use old (hb 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999996800665755	WITHOUT_CLASSIFICATION	3.199334246014798E-7	IMPLEMENTATION
lazy = !join	WITHOUT_CLASSIFICATION	0.9995600935042493	WITHOUT_CLASSIFICATION	4.399064957506315E-4	IMPLEMENTATION
generator	WITHOUT_CLASSIFICATION	0.9999891882860652	WITHOUT_CLASSIFICATION	1.0811713934765526E-5	IMPLEMENTATION
id unsaved-value	WITHOUT_CLASSIFICATION	0.9997710328771039	WITHOUT_CLASSIFICATION	2.2896712289613262E-4	IMPLEMENTATION
version unsaved-value	WITHOUT_CLASSIFICATION	0.9999864999282435	WITHOUT_CLASSIFICATION	1.3500071756462166E-5	IMPLEMENTATION
not necessarily a unique property reference	WITHOUT_CLASSIFICATION	0.9995860551861679	WITHOUT_CLASSIFICATION	4.139448138320605E-4	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999881340614957	WITHOUT_CLASSIFICATION	1.1865938504360676E-5	IMPLEMENTATION
contained elements	WITHOUT_CLASSIFICATION	0.9999814376271244	WITHOUT_CLASSIFICATION	1.8562372875556047E-5	IMPLEMENTATION
for non-inverse one-to-many with a not-null fk add a backref!	WITHOUT_CLASSIFICATION	0.999953774682439	WITHOUT_CLASSIFICATION	4.6225317561119394E-5	IMPLEMENTATION
bind the where	WITHOUT_CLASSIFICATION	0.9999323671064638	WITHOUT_CLASSIFICATION	6.763289353616545E-5	IMPLEMENTATION
bind the order-by	WITHOUT_CLASSIFICATION	0.9999762925937145	WITHOUT_CLASSIFICATION	2.3707406285547125E-5	IMPLEMENTATION
bind the filters	WITHOUT_CLASSIFICATION	0.9999767057918342	WITHOUT_CLASSIFICATION	2.3294208165778225E-5	IMPLEMENTATION
overriding inherited meta attribute. hbx-621 & hbx-793	WITHOUT_CLASSIFICATION	0.9999883138555045	WITHOUT_CLASSIFICATION	1.1686144495527817E-5	IMPLEMENTATION
first iterate over all elements capable of defining an extends attribute collecting all found extends references if they cannot be resolved against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999657956079	WITHOUT_CLASSIFICATION	3.420439213234905E-8	IMPLEMENTATION
mappings might contain either the "raw" extends name (in the case of an entity-name mapping) or a fqn (in the case of a pojo mapping).	WITHOUT_CLASSIFICATION	0.9999978053899679	WITHOUT_CLASSIFICATION	2.194610032197873E-6	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9976889284773944	WITHOUT_CLASSIFICATION	0.0023110715226055466	IMPLEMENTATION
sessionfactory name	WITHOUT_CLASSIFICATION	0.9999761667873093	WITHOUT_CLASSIFICATION	2.383321269074059E-5	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9998590872142433	WITHOUT_CLASSIFICATION	1.40912785756658E-4	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9998590872142433	WITHOUT_CLASSIFICATION	1.40912785756658E-4	IMPLEMENTATION
interrogate jdbc metadata	WITHOUT_CLASSIFICATION	0.9999856998769098	WITHOUT_CLASSIFICATION	1.4300123090154989E-5	IMPLEMENTATION
user supplied jdbc connections	WITHOUT_CLASSIFICATION	0.9999935780557664	WITHOUT_CLASSIFICATION	6.421944233611156E-6	IMPLEMENTATION
use dialect default properties	WITHOUT_CLASSIFICATION	0.9999989644932524	WITHOUT_CLASSIFICATION	1.0355067475533263E-6	IMPLEMENTATION
transaction settings	WITHOUT_CLASSIFICATION	0.9999935888751181	WITHOUT_CLASSIFICATION	6.411124881957703E-6	IMPLEMENTATION
sql generation settings	WITHOUT_CLASSIFICATION	0.9999988585944042	WITHOUT_CLASSIFICATION	1.1414055957580164E-6	IMPLEMENTATION
query parser settings	WITHOUT_CLASSIFICATION	0.9999912902236607	WITHOUT_CLASSIFICATION	8.709776339226308E-6	IMPLEMENTATION
second-level / query cache	WITHOUT_CLASSIFICATION	0.9999963952830181	WITHOUT_CLASSIFICATION	3.6047169820497005E-6	IMPLEMENTATION
the cache provider is needed when we either have second-level cache enabled or query cache enabled. note that usesecondlevelcache is enabled by default	WITHOUT_CLASSIFICATION	0.9991617070491357	WITHOUT_CLASSIFICATION	8.382929508643948E-4	IMPLEMENTATION
sql exception converter	WITHOUT_CLASSIFICATION	0.9999985902824969	WITHOUT_CLASSIFICATION	1.409717503090579E-6	IMPLEMENTATION
statistics and logging	WITHOUT_CLASSIFICATION	0.9999970928099962	WITHOUT_CLASSIFICATION	2.907190003783008E-6	IMPLEMENTATION
settings.setshowsqlenabled(showsql)	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
settings.setformatsqlenabled(formatsql)	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
schema export	WITHOUT_CLASSIFICATION	0.9999715820743151	WITHOUT_CLASSIFICATION	2.8417925684894544E-5	IMPLEMENTATION
string provider = properties.getproperty( environment.bytecode_provider ) log.info( "bytecode provider name " + provider ) bytecodeprovider bytecodeprovider = buildbytecodeprovider( provider ) settings.setbytecodeprovider( bytecodeprovider )	WITHOUT_CLASSIFICATION	0.9999623208730606	WITHOUT_CLASSIFICATION	3.7679126939400604E-5	IMPLEMENTATION
legacy behavior apply the bridge	WITHOUT_CLASSIFICATION	0.9999843640720074	WITHOUT_CLASSIFICATION	1.5635927992566317E-5	IMPLEMENTATION
maybe a concrete sqlpropertyresult type but map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9997929415348535	WITHOUT_CLASSIFICATION	2.070584651465622E-4	IMPLEMENTATION
if dotted and not load-collection nor return-join regular property	WITHOUT_CLASSIFICATION	0.9995313751506913	WITHOUT_CLASSIFICATION	4.6862484930859356E-4	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907 private bytecodeprovider bytecodeprovider	WITHOUT_CLASSIFICATION	0.8616040355017294	WITHOUT_CLASSIFICATION	0.13839596449827063	IMPLEMENTATION
public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999909095080249	WITHOUT_CLASSIFICATION	9.090491975025637E-6	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999870814083497	WITHOUT_CLASSIFICATION	1.2918591650270606E-5	IMPLEMENTATION
package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998604737504511	WITHOUT_CLASSIFICATION	1.3952624954889048E-4	IMPLEMENTATION
void setshowsqlenabled(boolean b) { showsql = b } void setformatsqlenabled(boolean b) { formatsql = b }	WITHOUT_CLASSIFICATION	0.9998807410143258	WITHOUT_CLASSIFICATION	1.1925898567423539E-4	IMPLEMENTATION
public bytecodeprovider getbytecodeprovider() { return bytecodeprovider } void setbytecodeprovider(bytecodeprovider bytecodeprovider) { this.bytecodeprovider = bytecodeprovider }	WITHOUT_CLASSIFICATION	0.9999781755024364	WITHOUT_CLASSIFICATION	2.182449756354172E-5	IMPLEMENTATION
using local since the inheritedmetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9997730551565137	WITHOUT_CLASSIFICATION	2.2694484348630592E-4	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907	WITHOUT_CLASSIFICATION	0.8616040355017294	WITHOUT_CLASSIFICATION	0.13839596449827063	IMPLEMENTATION
protected list extendsqueue	WITHOUT_CLASSIFICATION	0.9999887670056032	WITHOUT_CLASSIFICATION	1.123299439678137E-5	IMPLEMENTATION
extendsqueue = new arraylist()	WITHOUT_CLASSIFICATION	0.9999533214819265	WITHOUT_CLASSIFICATION	4.6678518073474273E-5	IMPLEMENTATION
componenttuplizerfactory = new componenttuplizerfactory()	WITHOUT_CLASSIFICATION	0.9999422027493284	WITHOUT_CLASSIFICATION	5.779725067158578E-5	IMPLEMENTATION
if doc is null then for whatever reason the cached file cannot be used	WITHOUT_CLASSIFICATION	0.9999999972393016	WITHOUT_CLASSIFICATION	2.760698360634342E-9	IMPLEMENTATION
drop them in reverse order in case db needs it done that way	WITHOUT_CLASSIFICATION	0.9999945248740348	WITHOUT_CLASSIFICATION	5.475125965189476E-6	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999870814083497	WITHOUT_CLASSIFICATION	1.2918591650270606E-5	IMPLEMENTATION
this method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999616045595082	WITHOUT_CLASSIFICATION	3.839544049176416E-5	IMPLEMENTATION
iterator iterator = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.99988933951733	WITHOUT_CLASSIFICATION	1.1066048267008535E-4	IMPLEMENTATION
iterator iter = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9998893820031249	WITHOUT_CLASSIFICATION	1.1061799687497225E-4	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999793423703691	WITHOUT_CLASSIFICATION	2.0657629630950105E-5	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999793423703691	WITHOUT_CLASSIFICATION	2.0657629630950105E-5	IMPLEMENTATION
settings.setcomponenttuplizerfactory( this.getcomponenttuplizerfactory() )	WITHOUT_CLASSIFICATION	0.9999650047747016	WITHOUT_CLASSIFICATION	3.49952252982754E-5	IMPLEMENTATION
private final list extendsqueue	WITHOUT_CLASSIFICATION	0.9999985874458241	WITHOUT_CLASSIFICATION	1.412554175773794E-6	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9999640047193117	WITHOUT_CLASSIFICATION	3.599528068824173E-5	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9999640047193117	WITHOUT_CLASSIFICATION	3.599528068824173E-5	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9976889284773944	WITHOUT_CLASSIFICATION	0.0023110715226055466	IMPLEMENTATION
set use_reflection_optimizer to false to fix hhh-227	WITHOUT_CLASSIFICATION	0.9945066377782781	WITHOUT_CLASSIFICATION	0.005493362221721904	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.998299701721727	WITHOUT_CLASSIFICATION	0.0017002982782729373	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9999520627868443	WITHOUT_CLASSIFICATION	4.793721315576996E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9994162704336691	WITHOUT_CLASSIFICATION	5.83729566330941E-4	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.998299701721727	WITHOUT_CLASSIFICATION	0.0017002982782729373	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9999520627868443	WITHOUT_CLASSIFICATION	4.793721315576996E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8989360833561321	WITHOUT_CLASSIFICATION	0.101063916643868	IMPLEMENTATION
maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999998635856042	WITHOUT_CLASSIFICATION	1.3641439575269777E-7	IMPLEMENTATION
the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999854037143753	WITHOUT_CLASSIFICATION	1.459628562458061E-5	IMPLEMENTATION
the element has changed	WITHOUT_CLASSIFICATION	0.9999996986995306	WITHOUT_CLASSIFICATION	3.0130046930827826E-7	IMPLEMENTATION
careful these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9966892911081161	WITHOUT_CLASSIFICATION	0.003310708891883936	IMPLEMENTATION
needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9383990792858605	WITHOUT_CLASSIFICATION	0.06160092071413957	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9996381890824756	WITHOUT_CLASSIFICATION	3.618109175243297E-4	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9996381890824756	WITHOUT_CLASSIFICATION	3.618109175243297E-4	IMPLEMENTATION
do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999949670715585	WITHOUT_CLASSIFICATION	5.032928441461603E-6	IMPLEMENTATION
short-circuit(s) no new elements the old list contains only orphans no old elements so no orphans neither	WITHOUT_CLASSIFICATION	0.9999999525559491	WITHOUT_CLASSIFICATION	4.744405090488846E-8	IMPLEMENTATION
create the collection holding the orphans	WITHOUT_CLASSIFICATION	0.9999850887375489	WITHOUT_CLASSIFICATION	1.4911262451154332E-5	IMPLEMENTATION
collect entityidentifier(s) of the current elements - add them into a hashset for fast access	WITHOUT_CLASSIFICATION	0.9999997431803531	WITHOUT_CLASSIFICATION	2.5681964682640995E-7	IMPLEMENTATION
iterate over the old list	WITHOUT_CLASSIFICATION	0.999999494037949	WITHOUT_CLASSIFICATION	5.05962051075379E-7	IMPLEMENTATION
(array==null) ? templist.size()	WITHOUT_CLASSIFICATION	0.9999717158156599	WITHOUT_CLASSIFICATION	2.8284184340062297E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9994162704336691	WITHOUT_CLASSIFICATION	5.83729566330941E-4	IMPLEMENTATION
(array==null) ? templist.get(i)	WITHOUT_CLASSIFICATION	0.9999717158156599	WITHOUT_CLASSIFICATION	2.8284184340062297E-5	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9999968421268458	WITHOUT_CLASSIFICATION	3.15787315419253E-6	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9999968421268458	WITHOUT_CLASSIFICATION	3.15787315419253E-6	IMPLEMENTATION
amazingly these two will work because abstractcollection uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999933029907461	WITHOUT_CLASSIFICATION	6.697009253941674E-6	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8989360833561321	WITHOUT_CLASSIFICATION	0.101063916643868	IMPLEMENTATION
finally what it's all about	WITHOUT_CLASSIFICATION	0.998602727993739	WITHOUT_CLASSIFICATION	0.0013972720062610429	IMPLEMENTATION
note that if we load this collection from a cartesian product the multiplicity would be broken so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999996996348824	WITHOUT_CLASSIFICATION	3.003651174811252E-7	IMPLEMENTATION
anyway here we implement <set> semantics for a <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9971383061525649	WITHOUT_CLASSIFICATION	0.002861693847435142	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999982601565084	WITHOUT_CLASSIFICATION	1.7398434916038343E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999542540106415	WITHOUT_CLASSIFICATION	4.574598935837943E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8989360833561321	WITHOUT_CLASSIFICATION	0.101063916643868	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999982601565084	WITHOUT_CLASSIFICATION	1.7398434916038343E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999542540106415	WITHOUT_CLASSIFICATION	4.574598935837943E-5	IMPLEMENTATION
public boolean equals(object other) {read()return bag.equals(other)}public int hashcode(object other) {read()return bag.hashcode()}	WITHOUT_CLASSIFICATION	0.9999993289178439	WITHOUT_CLASSIFICATION	6.71082156053413E-7	IMPLEMENTATION
list operations	WITHOUT_CLASSIFICATION	0.9999667850541152	WITHOUT_CLASSIFICATION	3.321494588479912E-5	IMPLEMENTATION
pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999712632647916	WITHOUT_CLASSIFICATION	2.8736735208380576E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8989360833561321	WITHOUT_CLASSIFICATION	0.101063916643868	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8989360833561321	WITHOUT_CLASSIFICATION	0.101063916643868	IMPLEMENTATION
from map	WITHOUT_CLASSIFICATION	0.9999972137037999	WITHOUT_CLASSIFICATION	2.78629620009139E-6	IMPLEMENTATION
from sortedmap	WITHOUT_CLASSIFICATION	0.9999904244889075	WITHOUT_CLASSIFICATION	9.575511092424053E-6	IMPLEMENTATION
inject the data	WITHOUT_CLASSIFICATION	0.9999967015394943	WITHOUT_CLASSIFICATION	3.2984605057545704E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999986463248248	WITHOUT_CLASSIFICATION	1.3536751751837643E-6	IMPLEMENTATION
default pool size 20	WITHOUT_CLASSIFICATION	0.9999909739875844	WITHOUT_CLASSIFICATION	9.02601241569232E-6	IMPLEMENTATION
trying via forname() first to be as close to drivermanager's semantics	WITHOUT_CLASSIFICATION	0.9999961908802543	WITHOUT_CLASSIFICATION	3.809119745714777E-6	IMPLEMENTATION
if debug level is enabled then log the password otherwise mask it	WITHOUT_CLASSIFICATION	0.999808446523465	WITHOUT_CLASSIFICATION	1.9155347653503212E-4	IMPLEMENTATION
register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999937541645602	WITHOUT_CLASSIFICATION	6.2458354398614485E-6	IMPLEMENTATION
wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999949433448164	WITHOUT_CLASSIFICATION	5.056655183635439E-6	IMPLEMENTATION
then bind it	WITHOUT_CLASSIFICATION	0.9999753123414706	WITHOUT_CLASSIFICATION	2.4687658529404627E-5	IMPLEMENTATION
try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9994999711563586	WITHOUT_CLASSIFICATION	5.000288436415057E-4	IMPLEMENTATION
allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9987265429700616	WITHOUT_CLASSIFICATION	0.0012734570299383482	IMPLEMENTATION
limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999998012228472	WITHOUT_CLASSIFICATION	1.9877715281525728E-7	IMPLEMENTATION
allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9993304331752728	WITHOUT_CLASSIFICATION	6.695668247272631E-4	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999935724076228	WITHOUT_CLASSIFICATION	6.427592377205259E-5	IMPLEMENTATION
we could register the session against the transaction even though it is not started but we'd have no guarentee of ever getting the map entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999964742516658	WITHOUT_CLASSIFICATION	3.5257483342356134E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999986463248248	WITHOUT_CLASSIFICATION	1.3536751751837643E-6	IMPLEMENTATION
private string propertyname	WITHOUT_CLASSIFICATION	0.9999976864530669	WITHOUT_CLASSIFICATION	2.3135469331025446E-6	IMPLEMENTATION
public propertyprojection project() {return projections.property(getpropertyname())}	WITHOUT_CLASSIFICATION	0.9999955024163456	WITHOUT_CLASSIFICATION	4.497583654452169E-6	IMPLEMENTATION
string[] fk = stringhelper.qualify( "collection_" cp.getkeycolumnnames() )	WITHOUT_CLASSIFICATION	0.9998547774969413	WITHOUT_CLASSIFICATION	1.4522250305866897E-4	IMPLEMENTATION
" collection_ where " +	WITHOUT_CLASSIFICATION	0.9998718418007403	WITHOUT_CLASSIFICATION	1.2815819925970413E-4	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9999639976420474	WITHOUT_CLASSIFICATION	3.600235795266605E-5	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9999639976420474	WITHOUT_CLASSIFICATION	3.600235795266605E-5	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999986463248248	WITHOUT_CLASSIFICATION	1.3536751751837643E-6	IMPLEMENTATION
the following two lines were added to ensure that this.params is not null which can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999756162644043	WITHOUT_CLASSIFICATION	2.4383735595617167E-5	IMPLEMENTATION
with two-deep subqueries the same alias would get generated for both using the old method (criteriaquery.generatesqlalias()) so that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999999323837645	WITHOUT_CLASSIFICATION	6.761623550467279E-8	IMPLEMENTATION
implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9939093819744891	WITHOUT_CLASSIFICATION	0.006090618025510935	IMPLEMENTATION
pull off the last " "	WITHOUT_CLASSIFICATION	0.9999938564089922	WITHOUT_CLASSIFICATION	6.143591007842072E-6	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.999987019012734	WITHOUT_CLASSIFICATION	1.2980987266103804E-5	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999919807147184	WITHOUT_CLASSIFICATION	8.019285281532778E-6	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource)	WITHOUT_CLASSIFICATION	0.9998227354581743	WITHOUT_CLASSIFICATION	1.7726454182569084E-4	IMPLEMENTATION
not_supported_should_use_jdbc3_preparedstatement.getgeneratedkeys_method	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999863927583815	WITHOUT_CLASSIFICATION	1.3607241618474357E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
oracle did add support for ansi case statements in 9i	WITHOUT_CLASSIFICATION	0.9999981420421467	WITHOUT_CLASSIFICATION	1.8579578533748948E-6	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999993522083258	WITHOUT_CLASSIFICATION	6.477916741396208E-7	IMPLEMENTATION
informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999948959650435	WITHOUT_CLASSIFICATION	5.104034956526272E-6	IMPLEMENTATION
or byte or text? or money	WITHOUT_CLASSIFICATION	0.999988340540979	WITHOUT_CLASSIFICATION	1.1659459021107772E-5	IMPLEMENTATION
strip table-owner because informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999342189714103	WITHOUT_CLASSIFICATION	6.5781028589667E-5	IMPLEMENTATION
build the map of standard ansi sql aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988028303824	WITHOUT_CLASSIFICATION	1.1971696174805709E-6	IMPLEMENTATION
pre h3.2 behavior super.getreturntype(ct m)	WITHOUT_CLASSIFICATION	0.9999852054171705	WITHOUT_CLASSIFICATION	1.4794582829518284E-5	IMPLEMENTATION
finally use the sqltype if == on hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9965254425289561	WITHOUT_CLASSIFICATION	0.003474557471043899	IMPLEMENTATION
because numeric can be anything	WITHOUT_CLASSIFICATION	0.9998662632721514	WITHOUT_CLASSIFICATION	1.3373672784857906E-4	IMPLEMENTATION
constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999726096335604	WITHOUT_CLASSIFICATION	2.7390366439674103E-5	IMPLEMENTATION
standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999988299150924	WITHOUT_CLASSIFICATION	1.1700849075938538E-6	IMPLEMENTATION
map second/minute/hour/day/month/year to ansi extract() override on subclasses	WITHOUT_CLASSIFICATION	0.9997767730324512	WITHOUT_CLASSIFICATION	2.232269675488252E-4	IMPLEMENTATION
register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999916088572655	WITHOUT_CLASSIFICATION	8.391142734540975E-6	IMPLEMENTATION
database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995483844747333	WITHOUT_CLASSIFICATION	4.5161552526681615E-4	IMPLEMENTATION
hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997897131572373	WITHOUT_CLASSIFICATION	2.102868427626889E-4	IMPLEMENTATION
keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997153064994639	WITHOUT_CLASSIFICATION	2.846935005360221E-4	IMPLEMENTATION
native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999898484647348	WITHOUT_CLASSIFICATION	1.0151535265096628E-5	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996300735430498	WITHOUT_CLASSIFICATION	3.69926456950185E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996724798740805	WITHOUT_CLASSIFICATION	3.275201259194456E-4	IMPLEMENTATION
guid support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999597787684255	WITHOUT_CLASSIFICATION	4.022123157450241E-4	IMPLEMENTATION
limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999597787684255	WITHOUT_CLASSIFICATION	4.022123157450241E-4	IMPLEMENTATION
by default we report no support	WITHOUT_CLASSIFICATION	0.9999781119269243	WITHOUT_CLASSIFICATION	2.188807307567114E-5	IMPLEMENTATION
by default we report no support for nowait lock semantics	WITHOUT_CLASSIFICATION	0.9999939491851656	WITHOUT_CLASSIFICATION	6.050814834478494E-6	IMPLEMENTATION
table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996730553993557	WITHOUT_CLASSIFICATION	3.26944600644372E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996900306397353	WITHOUT_CLASSIFICATION	3.0996936026462716E-4	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994081678026464	WITHOUT_CLASSIFICATION	5.918321973536691E-4	IMPLEMENTATION
current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996071910066604	WITHOUT_CLASSIFICATION	3.928089933397051E-4	IMPLEMENTATION
sqlexception support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996312100685065	WITHOUT_CLASSIFICATION	3.6878993149339285E-4	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995979836970027	WITHOUT_CLASSIFICATION	4.0201630299735436E-4	IMPLEMENTATION
identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999510350111591	WITHOUT_CLASSIFICATION	4.896498884090575E-4	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999597787684255	WITHOUT_CLASSIFICATION	4.022123157450241E-4	IMPLEMENTATION
grrr for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999966056795474	WITHOUT_CLASSIFICATION	3.394320452620264E-6	IMPLEMENTATION
informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999735992476103	WITHOUT_CLASSIFICATION	2.6400752389629154E-5	IMPLEMENTATION
return false here as most databases do not properly support this construct	WITHOUT_CLASSIFICATION	0.8295335229210086	IMPLEMENTATION	0.17046647707899149	WITHOUT_CLASSIFICATION
mckoi has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.999999376748203	WITHOUT_CLASSIFICATION	6.232517969434124E-7	IMPLEMENTATION
oracle8 and previous define only a "date" type which is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999984710289904	WITHOUT_CLASSIFICATION	1.5289710095308496E-6	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999882156754306	WITHOUT_CLASSIFICATION	1.1784324569347452E-5	IMPLEMENTATION
" cascade"	WITHOUT_CLASSIFICATION	0.9999747171564677	WITHOUT_CLASSIFICATION	2.528284353232232E-5	IMPLEMENTATION
trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999932515100388	WITHOUT_CLASSIFICATION	6.7484899611806376E-6	IMPLEMENTATION
public boolean droptemporarytableafteruse() {we have to because postgres sets current txto rollback only after a failed create tablereturn true}	WITHOUT_CLASSIFICATION	0.9999963154928153	WITHOUT_CLASSIFICATION	3.6845071845596476E-6	IMPLEMENTATION
check violation	WITHOUT_CLASSIFICATION	0.9998414810444013	WITHOUT_CLASSIFICATION	1.5851895559868684E-4	IMPLEMENTATION
unique violation	WITHOUT_CLASSIFICATION	0.9999313379362254	WITHOUT_CLASSIFICATION	6.866206377465743E-5	IMPLEMENTATION
foreign key violation	WITHOUT_CLASSIFICATION	0.9999723334495615	WITHOUT_CLASSIFICATION	2.766655043861086E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
not null violation	WITHOUT_CLASSIFICATION	0.9993303618173828	WITHOUT_CLASSIFICATION	6.696381826172123E-4	IMPLEMENTATION
all other	WITHOUT_CLASSIFICATION	0.9999642806658082	WITHOUT_CLASSIFICATION	3.5719334191797006E-5	IMPLEMENTATION
register the type of the out param - postgresql uses types.other	WITHOUT_CLASSIFICATION	0.9999966810470872	WITHOUT_CLASSIFICATION	3.318952912828606E-6	IMPLEMENTATION
seems to not really public boolean supportsrowvalueconstructorsyntax() { return true }	WITHOUT_CLASSIFICATION	0.999892427001374	WITHOUT_CLASSIFICATION	1.0757299862590675E-4	IMPLEMENTATION
seems to have spotty lob suppport	WITHOUT_CLASSIFICATION	0.999943106690077	WITHOUT_CLASSIFICATION	5.6893309923064547E-5	IMPLEMENTATION
hhh-2300	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
ignore (probably h2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9996158688507981	WITHOUT_CLASSIFICATION	3.8413114920198384E-4	IMPLEMENTATION
numeric functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999326599540562	WITHOUT_CLASSIFICATION	6.73400459437581E-5	IMPLEMENTATION
string functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999915144519419	WITHOUT_CLASSIFICATION	8.48554805803658E-6	IMPLEMENTATION
time and date functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999615915782375	WITHOUT_CLASSIFICATION	3.840842176249431E-5	IMPLEMENTATION
system functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999898544398629	WITHOUT_CLASSIFICATION	1.0145560137104737E-4	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9996343731050756	WITHOUT_CLASSIFICATION	3.6562689492442967E-4	IMPLEMENTATION
23000 check constraint violation {0} 23001 unique index or primary key violation {0}	WITHOUT_CLASSIFICATION	0.9998102985534106	WITHOUT_CLASSIFICATION	1.8970144658939526E-4	IMPLEMENTATION
display the dialect version.	WITHOUT_CLASSIFICATION	0.9999969594526283	WITHOUT_CLASSIFICATION	3.040547371659964E-6	IMPLEMENTATION
the rdms concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999642704948035	WITHOUT_CLASSIFICATION	3.572950519644401E-5	IMPLEMENTATION
dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999626384977294	WITHOUT_CLASSIFICATION	3.736150227068344E-5	IMPLEMENTATION
original dialect.java returns " for update"	WITHOUT_CLASSIFICATION	0.9999436130875136	WITHOUT_CLASSIFICATION	5.6386912486454166E-5	IMPLEMENTATION
verify the state of this new method in hibernate 3.0 dialect.java	WITHOUT_CLASSIFICATION	0.9999994199522948	WITHOUT_CLASSIFICATION	5.80047705158887E-7	IMPLEMENTATION
origial dialect.java returns true	WITHOUT_CLASSIFICATION	0.9999778132420124	WITHOUT_CLASSIFICATION	2.218675798761382E-5	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999790439536712	WITHOUT_CLASSIFICATION	2.095604632879598E-5	IMPLEMENTATION
sequence methods - start. the rdms dialect needs these	WITHOUT_CLASSIFICATION	0.9999698011828082	WITHOUT_CLASSIFICATION	3.0198817191727266E-5	IMPLEMENTATION
methods to make it possible to use the native id generator	WITHOUT_CLASSIFICATION	0.9989120954828719	WITHOUT_CLASSIFICATION	0.0010879045171281753	IMPLEMENTATION
the where clause was added to eliminate this statement from brute force searches.	WITHOUT_CLASSIFICATION	0.9999887307433297	WITHOUT_CLASSIFICATION	1.1269256670174396E-5	IMPLEMENTATION
sequence methods - end	WITHOUT_CLASSIFICATION	0.999952630760284	WITHOUT_CLASSIFICATION	4.736923971594066E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999882156754306	WITHOUT_CLASSIFICATION	1.1784324569347452E-5	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9959864702497895	WITHOUT_CLASSIFICATION	0.004013529750210514	IMPLEMENTATION
used with drop table to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999763468589836	WITHOUT_CLASSIFICATION	2.365314101636414E-5	IMPLEMENTATION
rdms supports the union all clause.	WITHOUT_CLASSIFICATION	0.9998658620805714	WITHOUT_CLASSIFICATION	1.341379194286757E-4	IMPLEMENTATION
rdms has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.999999376697159	WITHOUT_CLASSIFICATION	6.233028409159852E-7	IMPLEMENTATION
multi-param dialect functions	WITHOUT_CLASSIFICATION	0.99998424842833	WITHOUT_CLASSIFICATION	1.5751571670055216E-5	IMPLEMENTATION
function templates	WITHOUT_CLASSIFICATION	0.9999786293178659	WITHOUT_CLASSIFICATION	2.1370682134070282E-5	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9996343731050756	WITHOUT_CLASSIFICATION	3.6562689492442967E-4	IMPLEMENTATION
this assumes schema support which is present in 1.8.0 and later	WITHOUT_CLASSIFICATION	0.9999774451123459	WITHOUT_CLASSIFICATION	2.255488765414825E-5	IMPLEMENTATION
hsqldb only supports read_uncommitted transaction isolation	WITHOUT_CLASSIFICATION	0.9999262317790157	WITHOUT_CLASSIFICATION	7.376822098423703E-5	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999917366190678	WITHOUT_CLASSIFICATION	8.263380932279695E-6	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9999344229382372	WITHOUT_CLASSIFICATION	6.557706176278057E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9999041445191461	WITHOUT_CLASSIFICATION	9.585548085386993E-5	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999819694138089	WITHOUT_CLASSIFICATION	1.80305861910727E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9954933732512955	WITHOUT_CLASSIFICATION	0.004506626748704442	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999988882500839	WITHOUT_CLASSIFICATION	1.111749916065011E-6	IMPLEMENTATION
timesten has no blob/clob support but these types may be suitable for some applications. the length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999970612814318	WITHOUT_CLASSIFICATION	2.938718568136477E-6	IMPLEMENTATION
new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999980016874884	WITHOUT_CLASSIFICATION	1.9983125116022677E-6	IMPLEMENTATION
public boolean supportsforupdatenowait() {return false}	WITHOUT_CLASSIFICATION	0.9999983231511501	WITHOUT_CLASSIFICATION	1.6768488498194614E-6	IMPLEMENTATION
timesten has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999993743556675	WITHOUT_CLASSIFICATION	6.256443324730798E-7	IMPLEMENTATION
iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999714290651683	WITHOUT_CLASSIFICATION	2.8570934831657752E-5	IMPLEMENTATION
add new ordered map	WITHOUT_CLASSIFICATION	0.9999576537629371	WITHOUT_CLASSIFICATION	4.234623706291209E-5	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" )	WITHOUT_CLASSIFICATION	0.999965023508038	WITHOUT_CLASSIFICATION	3.49764919620723E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999892371725243	WITHOUT_CLASSIFICATION	1.07628274757122E-5	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999665159060476	WITHOUT_CLASSIFICATION	3.3484093952514923E-5	IMPLEMENTATION
return "select current_timestamp from rdb$database"	WITHOUT_CLASSIFICATION	0.999993730589774	WITHOUT_CLASSIFICATION	6.269410226002895E-6	IMPLEMENTATION
registercolumntype data types	WITHOUT_CLASSIFICATION	0.9999916541782317	WITHOUT_CLASSIFICATION	8.345821768351198E-6	IMPLEMENTATION
hibernate seems to ignore this type	WITHOUT_CLASSIFICATION	0.9998100974700153	WITHOUT_CLASSIFICATION	1.8990252998483812E-4	IMPLEMENTATION
ibid for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999870428490458	WITHOUT_CLASSIFICATION	1.2957150954199657E-5	IMPLEMENTATION
tell hibernate to use getbytes instead of getbinarystream	WITHOUT_CLASSIFICATION	0.9999728871067796	WITHOUT_CLASSIFICATION	2.7112893220475266E-5	IMPLEMENTATION
no batch statements	WITHOUT_CLASSIFICATION	0.9999844907788261	WITHOUT_CLASSIFICATION	1.5509221173855997E-5	IMPLEMENTATION
we might want a special case for 192. this is very common for money types and here it is converted to 181	WITHOUT_CLASSIFICATION	0.9975905922348065	WITHOUT_CLASSIFICATION	0.0024094077651934296	IMPLEMENTATION
no pointbase bit	WITHOUT_CLASSIFICATION	0.9999919545374664	WITHOUT_CLASSIFICATION	8.045462533638858E-6	IMPLEMENTATION
no pointbase tinyint	WITHOUT_CLASSIFICATION	0.999984817438695	WITHOUT_CLASSIFICATION	1.5182561304939473E-5	IMPLEMENTATION
pointbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999993767548228	WITHOUT_CLASSIFICATION	6.232451773089345E-7	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999882156754306	WITHOUT_CLASSIFICATION	1.1784324569347452E-5	IMPLEMENTATION
the current_timestamp is more accurate but only known to be supported in sql server 7.0 and later (i.e. sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999793902513437	WITHOUT_CLASSIFICATION	2.06097486562982E-5	IMPLEMENTATION
sql server (at least up through 2005) does not support defining cascade delete constraints which can circel back to the mutating table	WITHOUT_CLASSIFICATION	0.9912119316925861	WITHOUT_CLASSIFICATION	0.008788068307413752	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9904585026464853	WITHOUT_CLASSIFICATION	0.0095414973535147	IMPLEMENTATION
registercolumntype( types.blob 16777215 "mediumblob" ) registercolumntype( types.blob 65535 "blob" )	WITHOUT_CLASSIFICATION	0.999965023508038	WITHOUT_CLASSIFICATION	3.49764919620723E-5	IMPLEMENTATION
registercolumntype( types.clob 16777215 "mediumtext" ) registercolumntype( types.clob 65535 "text" )	WITHOUT_CLASSIFICATION	0.999965115192433	WITHOUT_CLASSIFICATION	3.488480756694517E-5	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" ) registercolumntype( types.varchar 65535 "text" )	WITHOUT_CLASSIFICATION	0.999965115192433	WITHOUT_CLASSIFICATION	3.488480756694517E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999882156754306	WITHOUT_CLASSIFICATION	1.1784324569347452E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999640750593637	WITHOUT_CLASSIFICATION	3.592494063632085E-5	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999665159060476	WITHOUT_CLASSIFICATION	3.3484093952514923E-5	IMPLEMENTATION
sybase bit type does not support null values	WITHOUT_CLASSIFICATION	0.9999680748028825	WITHOUT_CLASSIFICATION	3.1925197117546586E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999892371725243	WITHOUT_CLASSIFICATION	1.07628274757122E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.999993655335346	WITHOUT_CLASSIFICATION	6.344664654000951E-6	IMPLEMENTATION
not null (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9993536371239405	WITHOUT_CLASSIFICATION	6.463628760595138E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999997143964547	WITHOUT_CLASSIFICATION	2.8560354526067816E-7	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999917366190678	WITHOUT_CLASSIFICATION	8.263380932279695E-6	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9999344229382372	WITHOUT_CLASSIFICATION	6.557706176278057E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9999041445191461	WITHOUT_CLASSIFICATION	9.585548085386993E-5	IMPLEMENTATION
add another (inner) nested select add the main query close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999976849674661	WITHOUT_CLASSIFICATION	2.315032533859575E-6	IMPLEMENTATION
add the main query	WITHOUT_CLASSIFICATION	0.9999157742014319	WITHOUT_CLASSIFICATION	8.422579856811077E-5	IMPLEMENTATION
add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999779996508196	WITHOUT_CLASSIFICATION	2.2000349180473093E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999892371725243	WITHOUT_CLASSIFICATION	1.07628274757122E-5	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.999993655335346	WITHOUT_CLASSIFICATION	6.344664654000951E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999882156754306	WITHOUT_CLASSIFICATION	1.1784324569347452E-5	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999819694138089	WITHOUT_CLASSIFICATION	1.80305861910727E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9954933732512955	WITHOUT_CLASSIFICATION	0.004506626748704442	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999988882500839	WITHOUT_CLASSIFICATION	1.111749916065011E-6	IMPLEMENTATION
features which change between 8i 9i and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935548351914	WITHOUT_CLASSIFICATION	6.445164808648332E-6	IMPLEMENTATION
features which remain constant across 8i 9i and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999831647522761	WITHOUT_CLASSIFICATION	1.6835247723869423E-5	IMPLEMENTATION
binary %stream character %stream	WITHOUT_CLASSIFICATION	0.9999683265987676	WITHOUT_CLASSIFICATION	3.167340123240052E-5	IMPLEMENTATION
getdefaultproperties().setproperty(environment.statement_batch_size no_batch)	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
hibernate impelemnts cast in dialect.java	WITHOUT_CLASSIFICATION	0.9999980629648416	WITHOUT_CLASSIFICATION	1.9370351583167616E-6	IMPLEMENTATION
aggregate functions shouldn't be registered right? registerfunction( "list" new standardsqlfunction("list"hibernate.string) ) stopped on $list	WITHOUT_CLASSIFICATION	0.9994046610276036	WITHOUT_CLASSIFICATION	5.953389723964554E-4	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999597787684255	WITHOUT_CLASSIFICATION	4.022123157450241E-4	IMPLEMENTATION
below is for cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.999998335974839	WITHOUT_CLASSIFICATION	1.6640251610241067E-6	IMPLEMENTATION
note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999843766849397	WITHOUT_CLASSIFICATION	1.5623315060224335E-5	IMPLEMENTATION
%upper is deprecated	WITHOUT_CLASSIFICATION	0.9999820250454241	WITHOUT_CLASSIFICATION	1.7974954575873883E-5	IMPLEMENTATION
the syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.999962057255888	WITHOUT_CLASSIFICATION	3.794274411198152E-5	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996300735430498	WITHOUT_CLASSIFICATION	3.69926456950185E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996724798740805	WITHOUT_CLASSIFICATION	3.275201259194456E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996900306397353	WITHOUT_CLASSIFICATION	3.0996936026462716E-4	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
the syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999188968735623	WITHOUT_CLASSIFICATION	8.11031264378002E-5	IMPLEMENTATION
completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999875266956335	WITHOUT_CLASSIFICATION	1.2473304366560273E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997444743479255	WITHOUT_CLASSIFICATION	2.555256520746207E-4	IMPLEMENTATION
limit support (ala top) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998099619882138	WITHOUT_CLASSIFICATION	1.900380117862563E-4	IMPLEMENTATION
intersystems cache' does not current support "select for update" syntax set your transaction mode to read_committed before using	WITHOUT_CLASSIFICATION	0.9991153023887311	WITHOUT_CLASSIFICATION	8.846976112687804E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
<string>	WITHOUT_CLASSIFICATION	0.9999870123177922	WITHOUT_CLASSIFICATION	1.2987682207765988E-5	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994081678026464	WITHOUT_CLASSIFICATION	5.918321973536691E-4	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995979836970027	WITHOUT_CLASSIFICATION	4.0201630299735436E-4	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999790439536712	WITHOUT_CLASSIFICATION	2.095604632879598E-5	IMPLEMENTATION
does the limit clause come at the start of the select statement rather than at the end?	WITHOUT_CLASSIFICATION	0.9999980731414904	WITHOUT_CLASSIFICATION	1.926858509646874E-6	IMPLEMENTATION
does the limit clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.999999514160438	WITHOUT_CLASSIFICATION	4.858395619732151E-7	IMPLEMENTATION
the name of the sql function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999972273558942	WITHOUT_CLASSIFICATION	2.77264410567357E-6	IMPLEMENTATION
create an outerjoingenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999946398676912	WITHOUT_CLASSIFICATION	5.360132308788135E-6	IMPLEMENTATION
the keyword used to insert a row without specifying any column values	WITHOUT_CLASSIFICATION	0.9999993393334756	WITHOUT_CLASSIFICATION	6.606665244296053E-7	IMPLEMENTATION
registerfunction( "trim" new standardsqlfunction( "trim" hibernate.string ) )	WITHOUT_CLASSIFICATION	0.999971139709145	WITHOUT_CLASSIFICATION	2.8860290855084326E-5	IMPLEMENTATION
skip the from keyword in params	WITHOUT_CLASSIFICATION	0.9999987675190768	WITHOUT_CLASSIFICATION	1.2324809232095341E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999440484270439	WITHOUT_CLASSIFICATION	5.5951572956190454E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999863927583815	WITHOUT_CLASSIFICATION	1.3607241618474357E-5	IMPLEMENTATION
sqlfunction implementation	WITHOUT_CLASSIFICATION	0.9998950667403745	WITHOUT_CLASSIFICATION	1.0493325962541378E-4	IMPLEMENTATION
conceivable that the dialect ctor could throw hibernateexceptions so don't re-wrap	WITHOUT_CLASSIFICATION	0.9997483625869077	WITHOUT_CLASSIFICATION	2.51637413092358E-4	IMPLEMENTATION
register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999780336934727	WITHOUT_CLASSIFICATION	2.1966306527307242E-5	IMPLEMENTATION
register resolvers set via environment property	WITHOUT_CLASSIFICATION	0.9999706724096743	WITHOUT_CLASSIFICATION	2.9327590325697466E-5	IMPLEMENTATION
kept for backward compatibility until after the 3.1beta5 release of ha	WITHOUT_CLASSIFICATION	0.9999494240094104	WITHOUT_CLASSIFICATION	5.0575990589616955E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9999653027116556	WITHOUT_CLASSIFICATION	3.469728834445946E-5	IMPLEMENTATION
the cascadingaction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999716175058302	WITHOUT_CLASSIFICATION	2.838249416971121E-5	IMPLEMENTATION
the cascadingaction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999511802801495	WITHOUT_CLASSIFICATION	4.881971985039353E-5	IMPLEMENTATION
delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999970831215477	WITHOUT_CLASSIFICATION	2.9168784522897884E-5	IMPLEMENTATION
orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9984296446207619	WITHOUT_CLASSIFICATION	0.001570355379238091	IMPLEMENTATION
(lockmode) anything	WITHOUT_CLASSIFICATION	0.9999418801153752	WITHOUT_CLASSIFICATION	5.811988462467138E-5	IMPLEMENTATION
lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999992748640964	WITHOUT_CLASSIFICATION	7.251359036118067E-6	IMPLEMENTATION
refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999059044461384	WITHOUT_CLASSIFICATION	9.409555386162334E-5	IMPLEMENTATION
evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998744701179185	WITHOUT_CLASSIFICATION	1.2552988208156446E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999765735851149	WITHOUT_CLASSIFICATION	2.3426414885092104E-5	IMPLEMENTATION
orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9998160979615724	WITHOUT_CLASSIFICATION	1.839020384275542E-4	IMPLEMENTATION
for deprecated saveorupdatecopy()	WITHOUT_CLASSIFICATION	0.9999834126182146	WITHOUT_CLASSIFICATION	1.6587381785386937E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998744843979136	WITHOUT_CLASSIFICATION	1.2551560208638529E-4	IMPLEMENTATION
a proxy cannot be transient and it breaks foreignkeys.istransient	WITHOUT_CLASSIFICATION	0.9999986366401582	WITHOUT_CLASSIFICATION	1.3633598418007143E-6	IMPLEMENTATION
replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999965887350057	WITHOUT_CLASSIFICATION	3.4112649941683564E-6	IMPLEMENTATION
static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999894939070523	WITHOUT_CLASSIFICATION	1.0506092947765116E-5	IMPLEMENTATION
handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999787486805275	WITHOUT_CLASSIFICATION	2.1251319472549825E-5	IMPLEMENTATION
actually the semantics of the next three are really "bag" note that unlike objects collection insertions updates deletions are not really remembered between flushes. we just re-use the same lists for convenience.	WITHOUT_CLASSIFICATION	0.9999947898938819	WITHOUT_CLASSIFICATION	5.2101061181759896E-6	IMPLEMENTATION
add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.999963185411968	WITHOUT_CLASSIFICATION	3.681458803200212E-5	IMPLEMENTATION
continue loop	WITHOUT_CLASSIFICATION	0.9999934402911904	WITHOUT_CLASSIFICATION	6.559708809604674E-6	IMPLEMENTATION
sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999722874496609	WITHOUT_CLASSIFICATION	2.7712550339061806E-5	IMPLEMENTATION
sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999826832091065	WITHOUT_CLASSIFICATION	1.7316790893555286E-5	IMPLEMENTATION
the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999949734922322	WITHOUT_CLASSIFICATION	5.026507767731468E-6	IMPLEMENTATION
the map of batch numbers to entityinsertaction lists	WITHOUT_CLASSIFICATION	0.9999934031671718	WITHOUT_CLASSIFICATION	6.5968328281588595E-6	IMPLEMENTATION
optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9998447899504191	WITHOUT_CLASSIFICATION	1.5521004958091915E-4	IMPLEMENTATION
the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999424489652239	WITHOUT_CLASSIFICATION	5.755103477620108E-5	IMPLEMENTATION
remove the current element from insertions. it will be added back later.	WITHOUT_CLASSIFICATION	0.9999997990518178	WITHOUT_CLASSIFICATION	2.0094818220082006E-7	IMPLEMENTATION
the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999662847672881	WITHOUT_CLASSIFICATION	3.371523271185145E-5	IMPLEMENTATION
there is already an existing batch for this type of entity. check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999998543108988	WITHOUT_CLASSIFICATION	1.4568910114786005E-7	IMPLEMENTATION
now rebuild the insertions list. there is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999988160450424	WITHOUT_CLASSIFICATION	1.183954957638481E-6	IMPLEMENTATION
the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999962207639075	WITHOUT_CLASSIFICATION	3.77923609257818E-6	IMPLEMENTATION
loop through all the associations of the current entity and make sure that they are processed before the current batch number	WITHOUT_CLASSIFICATION	0.9999959348164126	WITHOUT_CLASSIFICATION	4.065183587500083E-6	IMPLEMENTATION
find the batch number associated with the current association if any.	WITHOUT_CLASSIFICATION	0.9999851527728467	WITHOUT_CLASSIFICATION	1.4847227153285936E-5	IMPLEMENTATION
create a new batch for this type. the batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.999998819697185	WITHOUT_CLASSIFICATION	1.1803028150907885E-6	IMPLEMENTATION
loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999634826306757	WITHOUT_CLASSIFICATION	3.651736932424024E-5	IMPLEMENTATION
since this entity will now be processed in the latest possible batch we can be assured that it will come after all other associations there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9788654802185074	WITHOUT_CLASSIFICATION	0.021134519781492594	IMPLEMENTATION
cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999495656074419	WITHOUT_CLASSIFICATION	5.043439255823689E-5	IMPLEMENTATION
not really necessary but good for consistency	WITHOUT_CLASSIFICATION	0.9998767564115655	WITHOUT_CLASSIFICATION	1.232435884344488E-4	IMPLEMENTATION
we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.999973309176019	WITHOUT_CLASSIFICATION	2.6690823980998026E-5	IMPLEMENTATION
a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9998011060462526	WITHOUT_CLASSIFICATION	1.9889395374734952E-4	IMPLEMENTATION
handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9998250937820053	WITHOUT_CLASSIFICATION	1.749062179947126E-4	IMPLEMENTATION
loaded entity instances by entityuniquekey	WITHOUT_CLASSIFICATION	0.9999920443204152	WITHOUT_CLASSIFICATION	7.955679584714987E-6	IMPLEMENTATION
identity map of entityentry instances by the entity instance	WITHOUT_CLASSIFICATION	0.999997313679943	WITHOUT_CLASSIFICATION	2.6863200568525E-6	IMPLEMENTATION
entity proxies by entitykey	WITHOUT_CLASSIFICATION	0.9999927744762713	WITHOUT_CLASSIFICATION	7.225523728656407E-6	IMPLEMENTATION
snapshots of current database state for entities that have not been loaded	WITHOUT_CLASSIFICATION	0.998126030845806	WITHOUT_CLASSIFICATION	0.0018739691541940543	IMPLEMENTATION
identity map of array holder arrayholder instances by the array instance	WITHOUT_CLASSIFICATION	0.9999995205925515	WITHOUT_CLASSIFICATION	4.794074485680479E-7	IMPLEMENTATION
collection wrappers by the collectionkey key=collectionkey value=persistentcollection	WITHOUT_CLASSIFICATION	0.9999873763160578	WITHOUT_CLASSIFICATION	1.2623683942160733E-5	IMPLEMENTATION
set of entitykeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999722029475286	WITHOUT_CLASSIFICATION	2.7797052471322038E-5	IMPLEMENTATION
properties that we have tried to load and not found in the database	WITHOUT_CLASSIFICATION	0.9991556032217978	WITHOUT_CLASSIFICATION	8.443967782022105E-4	IMPLEMENTATION
a list of collection wrappers that were instantiating during result set processing that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999911551292422	WITHOUT_CLASSIFICATION	8.844870757841312E-6	IMPLEMENTATION
a container for collections we load up when the owning entity is not yet loaded for now this is purely transient!	WITHOUT_CLASSIFICATION	0.9967378967370896	WITHOUT_CLASSIFICATION	0.003262103262910372	IMPLEMENTATION
downgrade locks	WITHOUT_CLASSIFICATION	0.9999047255261884	WITHOUT_CLASSIFICATION	9.527447381156057E-5	IMPLEMENTATION
any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999942302975408	WITHOUT_CLASSIFICATION	5.7697024592362E-6	IMPLEMENTATION
unwrap the object	WITHOUT_CLASSIFICATION	0.9999946079627777	WITHOUT_CLASSIFICATION	5.39203722225788E-6	IMPLEMENTATION
initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999974457406965	WITHOUT_CLASSIFICATION	2.554259303626618E-6	IMPLEMENTATION
return the proxied object	WITHOUT_CLASSIFICATION	0.9999971249762691	WITHOUT_CLASSIFICATION	2.875023730820436E-6	IMPLEMENTATION
overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999955995298779	WITHOUT_CLASSIFICATION	4.400470121971489E-6	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999668198801623	WITHOUT_CLASSIFICATION	3.318011983759286E-5	IMPLEMENTATION
or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9992735857193431	WITHOUT_CLASSIFICATION	7.264142806568224E-4	IMPLEMENTATION
treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9990060567416433	WITHOUT_CLASSIFICATION	9.939432583566546E-4	IMPLEMENTATION
do this work only at the very highest level of the load don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.999961483837617	WITHOUT_CLASSIFICATION	3.8516162383054806E-5	IMPLEMENTATION
note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999973170431812	WITHOUT_CLASSIFICATION	2.6829568187039443E-6	IMPLEMENTATION
it might be an unwrapped collection reference! try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999305080312009	WITHOUT_CLASSIFICATION	6.949196879918808E-5	IMPLEMENTATION
public boolean isnonexistant(entitykey key) {return nonexistantentitykeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999983229459802	WITHOUT_CLASSIFICATION	1.6770540197206416E-6	IMPLEMENTATION
public boolean isnonexistant(entityuniquekey key) {return nonexistententityuniquekeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999983229459802	WITHOUT_CLASSIFICATION	1.6770540197206416E-6	IMPLEMENTATION
iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999945730097968	WITHOUT_CLASSIFICATION	5.426990203343662E-6	IMPLEMENTATION
does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999998731953798	WITHOUT_CLASSIFICATION	1.2680462030959668E-7	IMPLEMENTATION
check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999974032604858	WITHOUT_CLASSIFICATION	2.5967395142376817E-6	IMPLEMENTATION
otherwise the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999930506995444	WITHOUT_CLASSIFICATION	6.949300455601693E-6	IMPLEMENTATION
adds remove as a sort-of alias for delete	WITHOUT_CLASSIFICATION	0.9999848253068961	WITHOUT_CLASSIFICATION	1.5174693103719274E-5	IMPLEMENTATION
bad cast	WITHOUT_CLASSIFICATION	0.9999706674585224	WITHOUT_CLASSIFICATION	2.9332541477666243E-5	IMPLEMENTATION
return lhspersister.getsubclasspropertycolumnnames(property)	WITHOUT_CLASSIFICATION	0.9999761309747633	WITHOUT_CLASSIFICATION	2.3869025236640344E-5	IMPLEMENTATION
property-refs for associations defined on a component are not supported so no need to slice	WITHOUT_CLASSIFICATION	0.9999820394180436	WITHOUT_CLASSIFICATION	1.7960581956353672E-5	IMPLEMENTATION
if there is no property-ref assume the join is to the subclass table (ie. the table of the subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999997538700472	WITHOUT_CLASSIFICATION	2.4612995278419637E-7	IMPLEMENTATION
handle a property-ref	WITHOUT_CLASSIFICATION	0.999834833894608	WITHOUT_CLASSIFICATION	1.6516610539191255E-4	IMPLEMENTATION
nativesqlqueryreturn	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999949860640642	WITHOUT_CLASSIFICATION	5.013935935729232E-6	IMPLEMENTATION
why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999667996896078	WITHOUT_CLASSIFICATION	3.320031039226457E-5	IMPLEMENTATION
this.forcecacherefresh = forcecacherefresh	WITHOUT_CLASSIFICATION	0.999929917013758	WITHOUT_CLASSIFICATION	7.008298624200439E-5	IMPLEMENTATION
hella important optimization!!!	WITHOUT_CLASSIFICATION	0.9999602094817038	WITHOUT_CLASSIFICATION	3.9790518296237055E-5	IMPLEMENTATION
return that.type.equals(type) && equalshelper.equals(that.value value)	WITHOUT_CLASSIFICATION	0.9999764390604684	WITHOUT_CLASSIFICATION	2.3560939531525053E-5	IMPLEMENTATION
must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999724232440163	WITHOUT_CLASSIFICATION	2.7576755983759664E-5	IMPLEMENTATION
take a snapshot	WITHOUT_CLASSIFICATION	0.9999833175081271	WITHOUT_CLASSIFICATION	1.6682491872982015E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9998807438766276	WITHOUT_CLASSIFICATION	1.192561233724424E-4	IMPLEMENTATION
the owning entity may have been deleted and its identifier unset due to identifier-rollback in which case try to look up its identifier from the persistence context	WITHOUT_CLASSIFICATION	0.9993441192397748	WITHOUT_CLASSIFICATION	6.558807602250746E-4	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9999193821827869	WITHOUT_CLASSIFICATION	8.061781721324638E-5	IMPLEMENTATION
we've been here before	WITHOUT_CLASSIFICATION	0.999918837208158	WITHOUT_CLASSIFICATION	8.116279184202896E-5	IMPLEMENTATION
it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999998500901476	WITHOUT_CLASSIFICATION	1.499098522885471E-7	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9999193821827869	WITHOUT_CLASSIFICATION	8.061781721324638E-5	IMPLEMENTATION
if either its role changed	WITHOUT_CLASSIFICATION	0.999999787862437	WITHOUT_CLASSIFICATION	2.1213756293282747E-7	IMPLEMENTATION
or its key changed	WITHOUT_CLASSIFICATION	0.9999980945812184	WITHOUT_CLASSIFICATION	1.9054187816467578E-6	IMPLEMENTATION
we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999586763504209	WITHOUT_CLASSIFICATION	4.13236495791702E-5	IMPLEMENTATION
we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9999485697486722	WITHOUT_CLASSIFICATION	5.1430251327884205E-5	IMPLEMENTATION
force initialize!	WITHOUT_CLASSIFICATION	0.9997897983040831	WITHOUT_CLASSIFICATION	2.1020169591692535E-4	IMPLEMENTATION
else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999995677154249	WITHOUT_CLASSIFICATION	4.3228457518352936E-7	IMPLEMENTATION
attributes maintained between flush cycles	WITHOUT_CLASSIFICATION	0.9999848106659726	WITHOUT_CLASSIFICATION	1.5189334027421262E-5	IMPLEMENTATION
session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999929156817251	WITHOUT_CLASSIFICATION	7.084318274852949E-6	IMPLEMENTATION
allow the collectionsnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9998959373842697	WITHOUT_CLASSIFICATION	1.0406261573016794E-4	IMPLEMENTATION
attributes used only during flush cycle	WITHOUT_CLASSIFICATION	0.9999961049666094	WITHOUT_CLASSIFICATION	3.895033390531413E-6	IMPLEMENTATION
"current" means the reference that was found during flush()	WITHOUT_CLASSIFICATION	0.9999999151453135	WITHOUT_CLASSIFICATION	8.485468651429067E-8	IMPLEMENTATION
"loaded" means the reference that is consistent with the current database state	WITHOUT_CLASSIFICATION	0.9999990890423672	WITHOUT_CLASSIFICATION	9.10957632828244E-7	IMPLEMENTATION
during flush we navigate the object graph to collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9998496056778409	WITHOUT_CLASSIFICATION	1.503943221590381E-4	IMPLEMENTATION
if we instantiate a collection during the flush() process we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999970190717942	WITHOUT_CLASSIFICATION	2.9809282059128697E-6	IMPLEMENTATION
new collections that get found + wrapped during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9984639774018573	WITHOUT_CLASSIFICATION	0.0015360225981426521	IMPLEMENTATION
a newly wrapped collection is not dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9990845078073417	WITHOUT_CLASSIFICATION	9.154921926583034E-4	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.9999783961931803	WITHOUT_CLASSIFICATION	2.160380681964478E-5	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.9999783961931803	WITHOUT_CLASSIFICATION	2.160380681964478E-5	IMPLEMENTATION
detached collections that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9980330669379737	WITHOUT_CLASSIFICATION	0.0019669330620263217	IMPLEMENTATION
optimization	WITHOUT_CLASSIFICATION	0.9999726395444152	WITHOUT_CLASSIFICATION	2.736045558470999E-5	IMPLEMENTATION
optimization optimization	WITHOUT_CLASSIFICATION	0.999983586005977	WITHOUT_CLASSIFICATION	1.641399402296618E-5	IMPLEMENTATION
re-snapshot	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.999969084135839	WITHOUT_CLASSIFICATION	3.0915864161069835E-5	IMPLEMENTATION
note this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9999102612200717	WITHOUT_CLASSIFICATION	8.973877992831826E-5	IMPLEMENTATION
memory optimization	WITHOUT_CLASSIFICATION	0.9999444746282042	WITHOUT_CLASSIFICATION	5.5525371795874945E-5	IMPLEMENTATION
use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999349965132796	WITHOUT_CLASSIFICATION	6.500348672045032E-5	IMPLEMENTATION
copied from session	WITHOUT_CLASSIFICATION	0.9999432230176288	WITHOUT_CLASSIFICATION	5.677698237108719E-5	IMPLEMENTATION
this should not happen since the dtd prevents it	WITHOUT_CLASSIFICATION	0.9987379759149747	WITHOUT_CLASSIFICATION	0.0012620240850253553	IMPLEMENTATION
joinprocessor needs to know if the where clause fragment came from a dynamic filter or not so it can put the where clause fragment in the right place in the sql ast. 'hasfiltercondition' keeps track of that fact.	WITHOUT_CLASSIFICATION	0.6547044406585534	IMPLEMENTATION	0.34529555934144657	WITHOUT_CLASSIFICATION
the current join represents the join between a many-to-many association table and its "target" table. here we need to apply any additional filters defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9988386028468469	WITHOUT_CLASSIFICATION	0.0011613971531530742	IMPLEMENTATION
check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9997292186455299	WITHOUT_CLASSIFICATION	2.7078135447014594E-4	IMPLEMENTATION
values is not null and is checkable we'll look deeper	WITHOUT_CLASSIFICATION	0.9999776117491224	WITHOUT_CLASSIFICATION	2.2388250877668913E-5	IMPLEMENTATION
for non null args check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999913591489994	WITHOUT_CLASSIFICATION	8.640851000729504E-6	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9999653027116556	WITHOUT_CLASSIFICATION	3.469728834445946E-5	IMPLEMENTATION
persistent collections may have components	WITHOUT_CLASSIFICATION	0.999933386511649	WITHOUT_CLASSIFICATION	6.661348835103938E-5	IMPLEMENTATION
check for all components values in the collection	WITHOUT_CLASSIFICATION	0.999999018642595	WITHOUT_CLASSIFICATION	9.813574050533504E-7	IMPLEMENTATION
will check current level if some of them are not null or sublevels if they exist	WITHOUT_CLASSIFICATION	0.9999517064409384	WITHOUT_CLASSIFICATION	4.8293559061602215E-5	IMPLEMENTATION
do the test	WITHOUT_CLASSIFICATION	0.9999942961381919	WITHOUT_CLASSIFICATION	5.703861808138384E-6	IMPLEMENTATION
if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999982332866533	WITHOUT_CLASSIFICATION	1.7667133466711858E-6	IMPLEMENTATION
unwrap it	WITHOUT_CLASSIFICATION	0.9999831138143706	WITHOUT_CLASSIFICATION	1.6886185629391863E-5	IMPLEMENTATION
see if the entity is already bound to this session if not look at the entity identifier and assume that the entity is persistent if the id is not "unsaved" (that is we rely on foreign keys to keep database integrity)	WITHOUT_CLASSIFICATION	0.9821126811332754	WITHOUT_CLASSIFICATION	0.01788731886672451	IMPLEMENTATION
an unfetched association can only point to an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999996786389141	WITHOUT_CLASSIFICATION	3.2136108587072793E-7	IMPLEMENTATION
let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999839618598049	WITHOUT_CLASSIFICATION	1.6038140195153133E-5	IMPLEMENTATION
let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999743859147228	WITHOUT_CLASSIFICATION	2.5614085277239557E-5	IMPLEMENTATION
we use the assumed value if there is one to avoid hitting the database	WITHOUT_CLASSIFICATION	0.9999991881151775	WITHOUT_CLASSIFICATION	8.118848225426808E-7	IMPLEMENTATION
hit the database after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999458079281976	WITHOUT_CLASSIFICATION	5.419207180230519E-5	IMPLEMENTATION
context-entity-identifier returns null explicitly if the entity is not associated with the persistence context so make some deeper checks	WITHOUT_CLASSIFICATION	0.9965176192638915	WITHOUT_CLASSIFICATION	0.0034823807361084053	IMPLEMENTATION
int count = 0	WITHOUT_CLASSIFICATION	0.9999920720278159	WITHOUT_CLASSIFICATION	7.927972184002539E-6	IMPLEMENTATION
the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999481188394994	WITHOUT_CLASSIFICATION	5.188116050056725E-5	IMPLEMENTATION
checkforend = false	WITHOUT_CLASSIFICATION	0.9998767649973238	WITHOUT_CLASSIFICATION	1.2323500267623816E-4	IMPLEMENTATION
count++	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999936678209665	WITHOUT_CLASSIFICATION	6.3321790333683354E-6	IMPLEMENTATION
we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999794168570778	WITHOUT_CLASSIFICATION	2.058314292220333E-5	IMPLEMENTATION
first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999997452176096	WITHOUT_CLASSIFICATION	2.5478239038330295E-7	IMPLEMENTATION
the first id found after the given id	WITHOUT_CLASSIFICATION	0.9995332731124862	WITHOUT_CLASSIFICATION	4.6672688751388545E-4	IMPLEMENTATION
we ran out of ids to try	WITHOUT_CLASSIFICATION	0.999984918097589	WITHOUT_CLASSIFICATION	1.5081902410984165E-5	IMPLEMENTATION
look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999938191731684	WITHOUT_CLASSIFICATION	6.18082683157742E-6	IMPLEMENTATION
ignore this row of results! note the early exit	WITHOUT_CLASSIFICATION	0.9999220130130573	WITHOUT_CLASSIFICATION	7.798698694282508E-5	IMPLEMENTATION
initialize this collection	WITHOUT_CLASSIFICATION	0.9999339568739773	WITHOUT_CLASSIFICATION	6.604312602261128E-5	IMPLEMENTATION
create one	WITHOUT_CLASSIFICATION	0.9999913292426487	WITHOUT_CLASSIFICATION	8.670757351365867E-6	IMPLEMENTATION
warning can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999912855461468	WITHOUT_CLASSIFICATION	8.714453853115173E-6	IMPLEMENTATION
there were no queued additions and the role has a cache	WITHOUT_CLASSIFICATION	0.9999994635819777	WITHOUT_CLASSIFICATION	5.364180224103441E-7	IMPLEMENTATION
and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9941052103895118	WITHOUT_CLASSIFICATION	0.005894789610488095	IMPLEMENTATION
some filters affecting the collection are enabled on the session so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9814293560146359	WITHOUT_CLASSIFICATION	0.018570643985364045	IMPLEMENTATION
cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999931632598873	WITHOUT_CLASSIFICATION	6.8367401126764235E-6	IMPLEMENTATION
loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999784941436003	WITHOUT_CLASSIFICATION	2.1505856399734102E-5	IMPLEMENTATION
collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999590117548033	WITHOUT_CLASSIFICATION	4.098824519662444E-5	IMPLEMENTATION
simple cache of param metadata based on query string. ideally the original "user-supplied query" string should be used to retreive this metadata (i.e. not the para-list-expanded query string) to avoid unnecessary cache entries. used solely for caching param metadata for native-sql queries see getsqlparametermetadata() for a discussion as to why	WITHOUT_CLASSIFICATION	0.9997869435130102	WITHOUT_CLASSIFICATION	2.130564869898145E-4	IMPLEMENTATION
the cache of the actual plans	WITHOUT_CLASSIFICATION	0.9999901212600704	WITHOUT_CLASSIFICATION	9.878739929654663E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999440484270439	WITHOUT_CLASSIFICATION	5.5951572956190454E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999440484270439	WITHOUT_CLASSIFICATION	5.5951572956190454E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999967993070215	WITHOUT_CLASSIFICATION	3.200692978543573E-6	IMPLEMENTATION
for native-sql queries the param metadata is determined outside any relation to a query plan because query plan creation and/or retreival for a native-sql query depends on all of the return types having been set which might not be the case up-front when param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9936432026237095	WITHOUT_CLASSIFICATION	0.006356797376290551	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999792593079571	WITHOUT_CLASSIFICATION	2.074069204295726E-5	IMPLEMENTATION
recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999804493142946	WITHOUT_CLASSIFICATION	1.9550685705434464E-5	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999792593079571	WITHOUT_CLASSIFICATION	2.074069204295726E-5	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999953451391159	WITHOUT_CLASSIFICATION	4.654860884095513E-6	IMPLEMENTATION
break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999958339150459	WITHOUT_CLASSIFICATION	4.166084954220084E-6	IMPLEMENTATION
named parameter	WITHOUT_CLASSIFICATION	0.9999946092731242	WITHOUT_CLASSIFICATION	5.390726875680626E-6	IMPLEMENTATION
could be either an ordinal or jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999990276597865	WITHOUT_CLASSIFICATION	9.723402134715742E-7	IMPLEMENTATION
a peek ahead showed this as an jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999972509282044	WITHOUT_CLASSIFICATION	2.749071795602288E-6	IMPLEMENTATION
make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.999991449511812	WITHOUT_CLASSIFICATION	8.550488187955208E-6	IMPLEMENTATION
pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999715233085126	WITHOUT_CLASSIFICATION	2.8476691487429917E-5	IMPLEMENTATION
perform the actual work	WITHOUT_CLASSIFICATION	0.9999583366836194	WITHOUT_CLASSIFICATION	4.1663316380536275E-5	IMPLEMENTATION
if everything went ok commit the transaction and close the obtained connection handle	WITHOUT_CLASSIFICATION	0.9998583335859863	WITHOUT_CLASSIFICATION	1.4166641401368717E-4	IMPLEMENTATION
at some point the processing went bad so we need to 1) make sure the connection handle gets released 2) try to cleanup the jta context as much as possible	WITHOUT_CLASSIFICATION	0.8452689307605915	WITHOUT_CLASSIFICATION	0.15473106923940835	IMPLEMENTATION
finally handle the exception	WITHOUT_CLASSIFICATION	0.9999774401761533	WITHOUT_CLASSIFICATION	2.255982384664989E-5	IMPLEMENTATION
a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9997718851904797	WITHOUT_CLASSIFICATION	2.2811480952030758E-4	IMPLEMENTATION
saveorupdatecopy() is deprecated!	WITHOUT_CLASSIFICATION	0.999990608160391	WITHOUT_CLASSIFICATION	9.391839609040237E-6	IMPLEMENTATION
collectionpersister should not be null but we don't want to throw an exception if it is null	WITHOUT_CLASSIFICATION	0.9999904203315514	WITHOUT_CLASSIFICATION	9.579668448668909E-6	IMPLEMENTATION
otherwise a null or brand new collection this will also (inefficiently) handle arrays which have no snapshot so we can't do any better processarrayornewcollection(collection type)	WITHOUT_CLASSIFICATION	0.9987513885314508	WITHOUT_CLASSIFICATION	0.0012486114685491539	IMPLEMENTATION
a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999153963778471	WITHOUT_CLASSIFICATION	8.460362215299164E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999958970695582	WITHOUT_CLASSIFICATION	4.102930441843716E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999958970695582	WITHOUT_CLASSIFICATION	4.102930441843716E-6	IMPLEMENTATION
force a substitution!	WITHOUT_CLASSIFICATION	0.9998809105108711	WITHOUT_CLASSIFICATION	1.1908948912885909E-4	IMPLEMENTATION
the user requested a "greater" (i.e. more restrictive) form of pessimistic lock	WITHOUT_CLASSIFICATION	0.9999833304657519	WITHOUT_CLASSIFICATION	1.6669534247993334E-5	IMPLEMENTATION
the database now holds a lock + the object is flushed from the cache so release the soft lock	WITHOUT_CLASSIFICATION	0.9999997763987414	WITHOUT_CLASSIFICATION	2.2360125853689348E-7	IMPLEMENTATION
now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.999999106831985	WITHOUT_CLASSIFICATION	8.93168014974772E-7	IMPLEMENTATION
search for collections by reachability updating their role. we don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999648269437407	WITHOUT_CLASSIFICATION	3.517305625935947E-5	IMPLEMENTATION
this is a situation where the entity id is assigned by a post-insert generator and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999932469829461	WITHOUT_CLASSIFICATION	6.753017053775864E-6	IMPLEMENTATION
note we need to do the wrap here even if its not "dirty" because collections need wrapping but changes to _them_ don't dirty the container. also for versioned data we need to wrap before calling searchfordirtycollections	WITHOUT_CLASSIFICATION	0.9987991961514663	WITHOUT_CLASSIFICATION	0.001200803848533746	IMPLEMENTATION
grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999995322189118	WITHOUT_CLASSIFICATION	4.6778108819021406E-7	IMPLEMENTATION
grab its current state	WITHOUT_CLASSIFICATION	0.9999903449980081	WITHOUT_CLASSIFICATION	9.65500199193213E-6	IMPLEMENTATION
schedule the update note that we intentionally do _not_ pass in currentpersistentstate!	WITHOUT_CLASSIFICATION	0.9999973722643973	WITHOUT_CLASSIFICATION	2.6277356026052068E-6	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999994438195432	WITHOUT_CLASSIFICATION	5.561804568215037E-7	IMPLEMENTATION
give the interceptor a chance to process property values if the properties were modified by the interceptor we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999955605226095	WITHOUT_CLASSIFICATION	4.4394773904011065E-6	IMPLEMENTATION
compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999871000031935	WITHOUT_CLASSIFICATION	1.2899996806672147E-5	IMPLEMENTATION
if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999998163752905	WITHOUT_CLASSIFICATION	1.8362470948459404E-7	IMPLEMENTATION
increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999141515619613	WITHOUT_CLASSIFICATION	8.584843803873729E-5	IMPLEMENTATION
check nullability but do not perform command execute we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999725250855682	WITHOUT_CLASSIFICATION	2.7474914431781803E-5	IMPLEMENTATION
give the interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999613811273067	WITHOUT_CLASSIFICATION	3.8618872693187146E-5	IMPLEMENTATION
now we might need to recalculate the dirtyproperties array	WITHOUT_CLASSIFICATION	0.9995291072196442	WITHOUT_CLASSIFICATION	4.708927803558928E-4	IMPLEMENTATION
use the current version	WITHOUT_CLASSIFICATION	0.999981372012554	WITHOUT_CLASSIFICATION	1.8627987446089647E-5	IMPLEMENTATION
interceptor returned null so do the dirtycheck ourself if possible	WITHOUT_CLASSIFICATION	0.999999323653784	WITHOUT_CLASSIFICATION	6.763462159501089E-7	IMPLEMENTATION
object loaded by update()	WITHOUT_CLASSIFICATION	0.9999987096333447	WITHOUT_CLASSIFICATION	1.290366655273218E-6	IMPLEMENTATION
dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9994036642390718	WITHOUT_CLASSIFICATION	5.963357609282242E-4	IMPLEMENTATION
dirty check against the database snapshot if possible/necessary	WITHOUT_CLASSIFICATION	0.9995559680855806	WITHOUT_CLASSIFICATION	4.440319144194604E-4	IMPLEMENTATION
the interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9948849918028235	WITHOUT_CLASSIFICATION	0.005115008197176525	IMPLEMENTATION
even process null collections	WITHOUT_CLASSIFICATION	0.9999977874269037	WITHOUT_CLASSIFICATION	2.2125730963985837E-6	IMPLEMENTATION
get the id from the object	WITHOUT_CLASSIFICATION	0.9999985661706352	WITHOUT_CLASSIFICATION	1.4338293647609674E-6	IMPLEMENTATION
always do an insert and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999969643305361	WITHOUT_CLASSIFICATION	3.035669463920252E-6	IMPLEMENTATION
what is the version on the database?	WITHOUT_CLASSIFICATION	0.9997621362347522	WITHOUT_CLASSIFICATION	2.378637652479394E-4	IMPLEMENTATION
/ hhh-2378	WITHOUT_CLASSIFICATION	0.9999977241136305	WITHOUT_CLASSIFICATION	2.2758863695107906E-6	IMPLEMENTATION
will result in a sql update	WITHOUT_CLASSIFICATION	0.9999999802277622	WITHOUT_CLASSIFICATION	1.977223783756457E-8	IMPLEMENTATION
else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999936472834489	WITHOUT_CLASSIFICATION	6.352716551229735E-6	IMPLEMENTATION
no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999995640855551	WITHOUT_CLASSIFICATION	4.3591444491879603E-7	IMPLEMENTATION
refresh() does not pass an entityname	WITHOUT_CLASSIFICATION	0.9999216040892599	WITHOUT_CLASSIFICATION	7.839591074005202E-5	IMPLEMENTATION
do not return a proxy! (this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9960831311419394	WITHOUT_CLASSIFICATION	0.003916868858060671	IMPLEMENTATION
return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.999975225081233	WITHOUT_CLASSIFICATION	2.4774918766954905E-5	IMPLEMENTATION
return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999983823590533	WITHOUT_CLASSIFICATION	1.6176409467496575E-6	IMPLEMENTATION
return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.999989233989758	WITHOUT_CLASSIFICATION	1.0766010241954569E-5	IMPLEMENTATION
this object was already loaded	WITHOUT_CLASSIFICATION	0.999999760806827	WITHOUT_CLASSIFICATION	2.391931729493617E-7	IMPLEMENTATION
entity was found in second-level cache	WITHOUT_CLASSIFICATION	0.999999648505572	WITHOUT_CLASSIFICATION	3.514944280259286E-7	IMPLEMENTATION
make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9995696648566637	WITHOUT_CLASSIFICATION	4.3033514333625845E-4	IMPLEMENTATION
intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999969611527284	WITHOUT_CLASSIFICATION	3.038847271623162E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pre-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999779620933366	WITHOUT_CLASSIFICATION	2.203790666345398E-5	IMPLEMENTATION
some statistics	WITHOUT_CLASSIFICATION	0.9998990477801287	WITHOUT_CLASSIFICATION	1.0095221987131227E-4	IMPLEMENTATION
safe from concurrent modification because of how entrylist() is implemented on identitymap	WITHOUT_CLASSIFICATION	0.9608426937960866	WITHOUT_CLASSIFICATION	0.03915730620391341	IMPLEMENTATION
initialize dirty flags for arrays + collections with composite elements and reset reached doupdate etc.	WITHOUT_CLASSIFICATION	0.998791277034868	WITHOUT_CLASSIFICATION	0.0012087229651319006	IMPLEMENTATION
among other things updatereachables() will recursively load all collections that are moving roles. this might cause entities to be loaded.	WITHOUT_CLASSIFICATION	0.9999782298695903	WITHOUT_CLASSIFICATION	2.1770130409712824E-5	IMPLEMENTATION
so this needs to be safe from concurrent modification problems. it is safe because of how identitymap implements entryset()	WITHOUT_CLASSIFICATION	0.9999583347679009	WITHOUT_CLASSIFICATION	4.166523209904989E-5	IMPLEMENTATION
update the status of the object and if necessary schedule an update	WITHOUT_CLASSIFICATION	0.9999996988574857	WITHOUT_CLASSIFICATION	3.011425143174254E-7	IMPLEMENTATION
schedule updates to collections	WITHOUT_CLASSIFICATION	0.9999363602587538	WITHOUT_CLASSIFICATION	6.363974124616711E-5	IMPLEMENTATION
we need to lock the collection caches before executing entity inserts/updates in order to account for bidi associations	WITHOUT_CLASSIFICATION	0.9999936290100618	WITHOUT_CLASSIFICATION	6.370989938206207E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ post-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999779620933366	WITHOUT_CLASSIFICATION	2.203790666345398E-5	IMPLEMENTATION
the database has changed now so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.999997103664663	WITHOUT_CLASSIFICATION	2.8963353370684177E-6	IMPLEMENTATION
if the collection is dereferenced remove from the session cache iter.remove() does not work since the entryset is not backed by the set	WITHOUT_CLASSIFICATION	0.999999603531729	WITHOUT_CLASSIFICATION	3.9646827089013785E-7	IMPLEMENTATION
otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999123970578646	WITHOUT_CLASSIFICATION	8.760294213537913E-5	IMPLEMENTATION
get a snapshot	WITHOUT_CLASSIFICATION	0.9999912793603238	WITHOUT_CLASSIFICATION	8.72063967612111E-6	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999640750593637	WITHOUT_CLASSIFICATION	3.592494063632085E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999640750593637	WITHOUT_CLASSIFICATION	3.592494063632085E-5	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999996581650377	WITHOUT_CLASSIFICATION	3.418349622960748E-7	IMPLEMENTATION
early exit!!!	WITHOUT_CLASSIFICATION	0.9999780262419115	WITHOUT_CLASSIFICATION	2.197375808852748E-5	IMPLEMENTATION
ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.999999474929203	WITHOUT_CLASSIFICATION	5.250707969750222E-7	IMPLEMENTATION
before any callbacks etc so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.999999763539165	WITHOUT_CLASSIFICATION	2.3646083499152035E-7	IMPLEMENTATION
ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999406159865962	WITHOUT_CLASSIFICATION	5.938401340366859E-5	IMPLEMENTATION
typefactory.deepcopy( currentstate proptypes persister.getpropertyupdateability() deletedstate session )	WITHOUT_CLASSIFICATION	0.9998888516623246	WITHOUT_CLASSIFICATION	1.1114833767546861E-4	IMPLEMENTATION
cascade-delete to collections before the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999255004114718	WITHOUT_CLASSIFICATION	7.449958852817626E-5	IMPLEMENTATION
cascade-delete to many-to-one after the parent was deleted	WITHOUT_CLASSIFICATION	0.9999733139016753	WITHOUT_CLASSIFICATION	2.6686098324730267E-5	IMPLEMENTATION
if it is an initialized proxy let cascade handle it later on	WITHOUT_CLASSIFICATION	0.9999815474463163	WITHOUT_CLASSIFICATION	1.8452553683730523E-5	IMPLEMENTATION
assign the requested id to the proxy before reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999546880758454	WITHOUT_CLASSIFICATION	4.531192415463613E-5	IMPLEMENTATION
an uninitialized proxy noop don't even need to return an id since it is never a save()	WITHOUT_CLASSIFICATION	0.9994878699592179	WITHOUT_CLASSIFICATION	5.121300407822054E-4	IMPLEMENTATION
initialize properties of the event	WITHOUT_CLASSIFICATION	0.9999974585894271	WITHOUT_CLASSIFICATION	2.5414105729712268E-6	IMPLEMENTATION
return the id in the event object	WITHOUT_CLASSIFICATION	0.9999969708418767	WITHOUT_CLASSIFICATION	3.0291581234391035E-6	IMPLEMENTATION
transient or deleted	WITHOUT_CLASSIFICATION	0.9998250976018976	WITHOUT_CLASSIFICATION	1.7490239810239412E-4	IMPLEMENTATION
use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9998943896567248	WITHOUT_CLASSIFICATION	1.0561034327506835E-4	IMPLEMENTATION
assume this is a newly instantiated transient object which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999501800454301	WITHOUT_CLASSIFICATION	4.981995456990896E-5	IMPLEMENTATION
this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999586138375287	WITHOUT_CLASSIFICATION	4.138616247125104E-5	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9991905084771003	WITHOUT_CLASSIFICATION	8.094915228997191E-4	IMPLEMENTATION
cachedstate	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
assume true since we don't really know and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999673698694509	WITHOUT_CLASSIFICATION	3.263013054906613E-5	IMPLEMENTATION
a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999795994321538	WITHOUT_CLASSIFICATION	2.0400567846267255E-5	IMPLEMENTATION
if the collection belonged to a different entity clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999754481448431	WITHOUT_CLASSIFICATION	2.4551855156939743E-5	IMPLEMENTATION
log.debug( "calling onload()" )	WITHOUT_CLASSIFICATION	0.9999650047747016	WITHOUT_CLASSIFICATION	3.49952252982754E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999864616980313	WITHOUT_CLASSIFICATION	1.353830196881354E-5	IMPLEMENTATION
note performexecutions() clears all collectionxxxxtion collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.999967123063412	WITHOUT_CLASSIFICATION	3.2876936588010315E-5	IMPLEMENTATION
if no array holder we found an unwrappered array (this can't occur because we now always call wrap() before getting to here) return (ah==null) ? true searchfordirtycollections(ah type)	WITHOUT_CLASSIFICATION	0.9999997493715044	WITHOUT_CLASSIFICATION	2.506284956905179E-7	IMPLEMENTATION
if not wrappered yet its dirty (this can't occur because we now always call wrap() before getting to here) return ( ! (obj instanceof persistentcollection) ) ? true searchfordirtycollections( (persistentcollection) obj type )	WITHOUT_CLASSIFICATION	0.9416115780858656	WITHOUT_CLASSIFICATION	0.05838842191413449	IMPLEMENTATION
we need to check even if it was not initialized because of delayed adds!	WITHOUT_CLASSIFICATION	0.998755734088112	WITHOUT_CLASSIFICATION	0.00124426591188802	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999917273796317	WITHOUT_CLASSIFICATION	8.272620368247886E-6	IMPLEMENTATION
find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999716470625502	WITHOUT_CLASSIFICATION	2.8352937449864418E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999864616980313	WITHOUT_CLASSIFICATION	1.353830196881354E-5	IMPLEMENTATION
check the persistence context for an entry relating to this entity to be merged	WITHOUT_CLASSIFICATION	0.9998162170873648	WITHOUT_CLASSIFICATION	1.8378291263522936E-4	IMPLEMENTATION
we have specialized case of a detached entity from the perspective of the merge operation. specifically we have an incoming entity instance which has a corresponding entry in the current persistence context but registered under a different entity instance	WITHOUT_CLASSIFICATION	0.9999999373832019	WITHOUT_CLASSIFICATION	6.26167981404683E-8	IMPLEMENTATION
deleted	WITHOUT_CLASSIFICATION	0.9998895897171223	WITHOUT_CLASSIFICATION	1.1041028287774982E-4	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999774208041045	WITHOUT_CLASSIFICATION	2.2579195895462888E-5	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy cascadeonmerge(event persister entity copycache cascades.cascade_before_merge)	WITHOUT_CLASSIFICATION	0.9999998686033404	WITHOUT_CLASSIFICATION	1.3139665963987418E-7	IMPLEMENTATION
this bit is only really absolutely necessary for handling requestedid but is also good if we merge multiple object graphs since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999999814509647	WITHOUT_CLASSIFICATION	1.8549035304944124E-8	IMPLEMENTATION
continue we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9998019554976064	WITHOUT_CLASSIFICATION	1.980445023935913E-4	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.99999990077713	WITHOUT_CLASSIFICATION	9.922287004016234E-8	IMPLEMENTATION
check that entity id = requestedid	WITHOUT_CLASSIFICATION	0.9968907293176147	WITHOUT_CLASSIFICATION	0.0031092706823853357	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999774208041045	WITHOUT_CLASSIFICATION	2.2579195895462888E-5	IMPLEMENTATION
we got here because we assumed that an instance with an assigned id was detached when it was really persistent	WITHOUT_CLASSIFICATION	0.9999877748731687	WITHOUT_CLASSIFICATION	1.2225126831322731E-5	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.99999990077713	WITHOUT_CLASSIFICATION	9.922287004016234E-8	IMPLEMENTATION
copyvalues works by reflection so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999558270406005	WITHOUT_CLASSIFICATION	4.4172959399500196E-5	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999668198801623	WITHOUT_CLASSIFICATION	3.318011983759286E-5	IMPLEMENTATION
source.getbatcher().executebatch() found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9996899586991681	WITHOUT_CLASSIFICATION	3.100413008318396E-4	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999994438195432	WITHOUT_CLASSIFICATION	5.561804568215037E-7	IMPLEMENTATION
now done in entityidentityinsertaction persister.setidentifier( entity id source.getentitymode() )	WITHOUT_CLASSIFICATION	0.999961372743001	WITHOUT_CLASSIFICATION	3.862725699904814E-5	IMPLEMENTATION
source.getpersistencecontext().removenonexist( new entitykey( id persister source.getentitymode() ) )	WITHOUT_CLASSIFICATION	0.9997069551740496	WITHOUT_CLASSIFICATION	2.930448259503615E-4	IMPLEMENTATION
keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999999161510744	WITHOUT_CLASSIFICATION	8.384892563262288E-8	IMPLEMENTATION
cascade-save to many-to-one before the parent is saved	WITHOUT_CLASSIFICATION	0.9999914388618897	WITHOUT_CLASSIFICATION	8.561138110338551E-6	IMPLEMENTATION
pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999999403628019	WITHOUT_CLASSIFICATION	5.963719813477006E-8	IMPLEMENTATION
the object is persistent	WITHOUT_CLASSIFICATION	0.9999988510927641	WITHOUT_CLASSIFICATION	1.1489072360138605E-6	IMPLEMENTATION
the entity is associated with the session so check its status	WITHOUT_CLASSIFICATION	0.999949397854014	WITHOUT_CLASSIFICATION	5.0602145986015744E-5	IMPLEMENTATION
do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999950536565606	WITHOUT_CLASSIFICATION	4.9463434393772355E-6	IMPLEMENTATION
ie. e.status==deleted	WITHOUT_CLASSIFICATION	0.9999783961931803	WITHOUT_CLASSIFICATION	2.160380681964478E-5	IMPLEMENTATION
the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999991874057218	WITHOUT_CLASSIFICATION	8.125942782460618E-7	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999917273796317	WITHOUT_CLASSIFICATION	8.272620368247886E-6	IMPLEMENTATION
private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999971845354237	WITHOUT_CLASSIFICATION	2.815464576212481E-6	IMPLEMENTATION
first try to find a matching constructor accepting a violatedconstraintnameextracter param	WITHOUT_CLASSIFICATION	0.9983720389310917	WITHOUT_CLASSIFICATION	0.0016279610689082828	IMPLEMENTATION
eat it and try next	WITHOUT_CLASSIFICATION	0.9999279993086372	WITHOUT_CLASSIFICATION	7.200069136273951E-5	IMPLEMENTATION
otherwise try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.998451001119663	WITHOUT_CLASSIFICATION	0.0015489988803370192	IMPLEMENTATION
oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999945875131903	WITHOUT_CLASSIFICATION	5.412486809646967E-6	IMPLEMENTATION
collectionpropertymapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999572143841207	WITHOUT_CLASSIFICATION	4.278561587928344E-5	IMPLEMENTATION
remove initial " "	WITHOUT_CLASSIFICATION	0.9999959749664065	WITHOUT_CLASSIFICATION	4.025033593550407E-6	IMPLEMENTATION
remove initial " and "	WITHOUT_CLASSIFICATION	0.9999973299704057	WITHOUT_CLASSIFICATION	2.670029594404486E-6	IMPLEMENTATION
beforeclasstokens.add("new") definitely don't have this!!	WITHOUT_CLASSIFICATION	0.9999020417922921	WITHOUT_CLASSIFICATION	9.79582077079513E-5	IMPLEMENTATION
notafterclasstokens.add("")	WITHOUT_CLASSIFICATION	0.9999783961931803	WITHOUT_CLASSIFICATION	2.160380681964478E-5	IMPLEMENTATION
just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999148485931881	WITHOUT_CLASSIFICATION	8.515140681189211E-5	IMPLEMENTATION
update last non-whitespace token if necessary	WITHOUT_CLASSIFICATION	0.9999979571203944	WITHOUT_CLASSIFICATION	2.0428796055506946E-6	IMPLEMENTATION
select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999986540826494	WITHOUT_CLASSIFICATION	1.3459173505074487E-6	IMPLEMENTATION
scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.999989955202825	WITHOUT_CLASSIFICATION	1.0044797175097471E-5	IMPLEMENTATION
note this!!	WITHOUT_CLASSIFICATION	0.9999780281308612	WITHOUT_CLASSIFICATION	2.1971869138778624E-5	IMPLEMENTATION
error message constants.	WITHOUT_CLASSIFICATION	0.9998804818912658	WITHOUT_CLASSIFICATION	1.195181087341987E-4	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999245083408405	WITHOUT_CLASSIFICATION	7.54916591596496E-5	IMPLEMENTATION
semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988378246114563	WITHOUT_CLASSIFICATION	0.0011621753885436845	IMPLEMENTATION
handle collection-fiter compilation. important note this is modifying the input (hql) tree not the output tree!	WITHOUT_CLASSIFICATION	0.9978105070034251	WITHOUT_CLASSIFICATION	0.0021894929965748816	IMPLEMENTATION
show the modified ast.	WITHOUT_CLASSIFICATION	0.9997593381692101	WITHOUT_CLASSIFICATION	2.4066183078987679E-4	IMPLEMENTATION
create a parameter specification for the collection filter	WITHOUT_CLASSIFICATION	0.9999077119209614	WITHOUT_CLASSIFICATION	9.228807903861006E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999736509122581	WITHOUT_CLASSIFICATION	2.6349087741859146E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999736509122581	WITHOUT_CLASSIFICATION	2.6349087741859146E-5	IMPLEMENTATION
get the names of the columns used to link between the collection owner and the collection elements.	WITHOUT_CLASSIFICATION	0.999999125947104	WITHOUT_CLASSIFICATION	8.740528961077121E-7	IMPLEMENTATION
the path ast should be a dotnode and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9997594869407876	WITHOUT_CLASSIFICATION	2.4051305921236093E-4	IMPLEMENTATION
tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999877963745245	WITHOUT_CLASSIFICATION	1.220362547548392E-5	IMPLEMENTATION
re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999911925400743	WITHOUT_CLASSIFICATION	8.807459925633886E-6	IMPLEMENTATION
don't forget to resolve the argument! resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9991100716358997	WITHOUT_CLASSIFICATION	8.899283641003198E-4	IMPLEMENTATION
resolve everything up to this dot but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999339293598293	WITHOUT_CLASSIFICATION	6.60706401707742E-5	IMPLEMENTATION
should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999986485963804	WITHOUT_CLASSIFICATION	1.3514036196056402E-6	IMPLEMENTATION
was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999999229329161	WITHOUT_CLASSIFICATION	7.706708389868976E-8	IMPLEMENTATION
attach any mapping-defined "order by" fragments	WITHOUT_CLASSIFICATION	0.9999892309183676	WITHOUT_CLASSIFICATION	1.0769081632338135E-5	IMPLEMENTATION
use the explicitly declared select expression determine the return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999963971102347	WITHOUT_CLASSIFICATION	3.602889765296491E-6	IMPLEMENTATION
after that process the joins. invoke a delegate to do the work as this is farily complex.	WITHOUT_CLASSIFICATION	0.9995791684732158	WITHOUT_CLASSIFICATION	4.2083152678415973E-4	IMPLEMENTATION
make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999980745782804	WITHOUT_CLASSIFICATION	1.925421719569691E-6	IMPLEMENTATION
we need to generate ids as part of this bulk insert. note that this is only supported for sequence-style generators and post-insert-style generators basically only in-db generators	WITHOUT_CLASSIFICATION	0.9999862258979192	WITHOUT_CLASSIFICATION	1.3774102080870233E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999736509122581	WITHOUT_CLASSIFICATION	2.6349087741859146E-5	IMPLEMENTATION
we need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999804242985841	WITHOUT_CLASSIFICATION	1.957570141584366E-5	IMPLEMENTATION
we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.999966626560781	WITHOUT_CLASSIFICATION	3.33734392191108E-5	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999883174080758	WITHOUT_CLASSIFICATION	1.1682591924249537E-5	IMPLEMENTATION
generate implicit joins only if necessary.	WITHOUT_CLASSIFICATION	0.9999589717506315	WITHOUT_CLASSIFICATION	4.1028249368383135E-5	IMPLEMENTATION
notify the from element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999998069673326	WITHOUT_CLASSIFICATION	1.9303266739312193E-7	IMPLEMENTATION
turn off includesubclasses on all fromelements.	WITHOUT_CLASSIFICATION	0.9999135128514325	WITHOUT_CLASSIFICATION	8.648714856749893E-5	IMPLEMENTATION
create the node initially with the param name so that it shows appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999923237863396	WITHOUT_CLASSIFICATION	7.676213660430483E-6	IMPLEMENTATION
use the delegate resolve identifiers as from element aliases.	WITHOUT_CLASSIFICATION	0.9999844676882091	WITHOUT_CLASSIFICATION	1.5532311790955514E-5	IMPLEMENTATION
select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999985030409644	WITHOUT_CLASSIFICATION	1.4969590356067189E-6	IMPLEMENTATION
no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999944446519865	WITHOUT_CLASSIFICATION	5.555348013518563E-6	IMPLEMENTATION
make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999569402367326	WITHOUT_CLASSIFICATION	4.3059763267271105E-5	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999245083408405	WITHOUT_CLASSIFICATION	7.54916591596496E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999736509122581	WITHOUT_CLASSIFICATION	2.6349087741859146E-5	IMPLEMENTATION
--commented out by inspection (12/11/04 1056 am) int getwarningcount()	WITHOUT_CLASSIFICATION	0.9999979726926724	WITHOUT_CLASSIFICATION	2.0273073276107574E-6	IMPLEMENTATION
alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9998856393652263	WITHOUT_CLASSIFICATION	1.1436063477365555E-4	IMPLEMENTATION
switch	WITHOUT_CLASSIFICATION	0.9999898694860262	WITHOUT_CLASSIFICATION	1.0130513973730145E-5	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9995927138856969	WITHOUT_CLASSIFICATION	4.072861143031143E-4	IMPLEMENTATION
just do the regular thing if you can't find the ctor your ast must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999938126294301	WITHOUT_CLASSIFICATION	6.187370569798578E-6	IMPLEMENTATION
initialize sql nodes here.	WITHOUT_CLASSIFICATION	0.9999714075019834	WITHOUT_CLASSIFICATION	2.859249801656646E-5	IMPLEMENTATION
semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998283468804311	WITHOUT_CLASSIFICATION	1.7165311956901928E-4	IMPLEMENTATION
if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999999556765742	WITHOUT_CLASSIFICATION	4.432342584485587E-8	IMPLEMENTATION
this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999997200901559	WITHOUT_CLASSIFICATION	2.7990984404290983E-7	IMPLEMENTATION
--- inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999712620566175	WITHOUT_CLASSIFICATION	2.8737943382640028E-5	IMPLEMENTATION
check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9998617879926208	WITHOUT_CLASSIFICATION	1.3821200737912257E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999977241136305	WITHOUT_CLASSIFICATION	2.2758863695107906E-6	IMPLEMENTATION
these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999909944889294	WITHOUT_CLASSIFICATION	9.005511070591445E-6	IMPLEMENTATION
again both should be fromelements	WITHOUT_CLASSIFICATION	0.9999662491295499	WITHOUT_CLASSIFICATION	3.3750870450105373E-5	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999953451391159	WITHOUT_CLASSIFICATION	4.654860884095513E-6	IMPLEMENTATION
right represents a joins originating from left or both right and left reprersent joins originating from the same fromelement	WITHOUT_CLASSIFICATION	0.99999814028101	WITHOUT_CLASSIFICATION	1.8597189900386402E-6	IMPLEMENTATION
check a set of parent/child nodes in the from-clause tree to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999994760078281	WITHOUT_CLASSIFICATION	5.239921718922322E-7	IMPLEMENTATION
right represents a joins originating from left	WITHOUT_CLASSIFICATION	0.999997424042477	WITHOUT_CLASSIFICATION	2.5759575228920844E-6	IMPLEMENTATION
all clear	WITHOUT_CLASSIFICATION	0.9999918796901238	WITHOUT_CLASSIFICATION	8.120309876198313E-6	IMPLEMENTATION
ignore the token class name parameter and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999986837951047	WITHOUT_CLASSIFICATION	1.3162048952739943E-6	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999898883378122	WITHOUT_CLASSIFICATION	1.0111662187726094E-5	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999898883378122	WITHOUT_CLASSIFICATION	1.0111662187726094E-5	IMPLEMENTATION
remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999039036385245	WITHOUT_CLASSIFICATION	9.609636147553918E-5	IMPLEMENTATION
don't care about other param types here just those explicitly user-defined	WITHOUT_CLASSIFICATION	0.9999263094134481	WITHOUT_CLASSIFICATION	7.369058655190399E-5	IMPLEMENTATION
if the query is already compiled skip the compilation.	WITHOUT_CLASSIFICATION	0.9999986011698526	WITHOUT_CLASSIFICATION	1.3988301473854987E-6	IMPLEMENTATION
remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9998901255162419	WITHOUT_CLASSIFICATION	1.0987448375812741E-4	IMPLEMENTATION
phase 1 parse the hql into an ast.	WITHOUT_CLASSIFICATION	0.9999996087222038	WITHOUT_CLASSIFICATION	3.912777961292028E-7	IMPLEMENTATION
phase 2 analyze the hql ast and produce an sql ast.	WITHOUT_CLASSIFICATION	0.999999751391872	WITHOUT_CLASSIFICATION	2.4860812793055197E-7	IMPLEMENTATION
phase 3 generate the sql.	WITHOUT_CLASSIFICATION	0.999903720497366	WITHOUT_CLASSIFICATION	9.627950263402349E-5	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9944768937548552	WITHOUT_CLASSIFICATION	0.0055231062451448765	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9944768937548552	WITHOUT_CLASSIFICATION	0.0055231062451448765	IMPLEMENTATION
only needed during compilation phase	WITHOUT_CLASSIFICATION	0.9777298431701104	WITHOUT_CLASSIFICATION	0.02227015682988962	IMPLEMENTATION
transform the tree.	WITHOUT_CLASSIFICATION	0.9999759681053246	WITHOUT_CLASSIFICATION	2.4031894675416347E-5	IMPLEMENTATION
parse the query string into an hql ast.	WITHOUT_CLASSIFICATION	0.9999994849103735	WITHOUT_CLASSIFICATION	5.150896264367675E-7	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9998030919054267	WITHOUT_CLASSIFICATION	1.969080945732917E-4	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9998030919054267	WITHOUT_CLASSIFICATION	1.969080945732917E-4	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9998030919054267	WITHOUT_CLASSIFICATION	1.969080945732917E-4	IMPLEMENTATION
note ( max - 1 ) because first is zero-based while max is not	WITHOUT_CLASSIFICATION	0.9998925989079979	WITHOUT_CLASSIFICATION	1.0740109200222821E-4	IMPLEMENTATION
-- package local methods for the queryloader delegate --	WITHOUT_CLASSIFICATION	0.9999499871500616	WITHOUT_CLASSIFICATION	5.001284993849541E-5	IMPLEMENTATION
if there are no collection fetches then no further checks are needed	WITHOUT_CLASSIFICATION	0.998834810360219	WITHOUT_CLASSIFICATION	0.0011651896397809796	IMPLEMENTATION
a shallow query is ok (although technically there should be no fetching here)	WITHOUT_CLASSIFICATION	0.999999362065476	WITHOUT_CLASSIFICATION	6.379345240313694E-7	IMPLEMENTATION
should be the first but just to be safe	WITHOUT_CLASSIFICATION	0.9999987069840609	WITHOUT_CLASSIFICATION	1.2930159391185995E-6	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999736509122581	WITHOUT_CLASSIFICATION	2.6349087741859146E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999736509122581	WITHOUT_CLASSIFICATION	2.6349087741859146E-5	IMPLEMENTATION
impl note allows multiple collection fetches as long as the entire fecthed graph still "points back" to a single root entity for return	WITHOUT_CLASSIFICATION	0.9999690968222265	WITHOUT_CLASSIFICATION	3.090317777357401E-5	IMPLEMENTATION
otherwise we have a non-scalar select with defined collection fetch(es). make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999878553388556	WITHOUT_CLASSIFICATION	1.2144661144322682E-5	IMPLEMENTATION
this is not strictly true. we actually just need to make sure that it is ordered by root-entity pk and that that order-by comes before any non-root-entity ordering	WITHOUT_CLASSIFICATION	0.9847688188428797	WITHOUT_CLASSIFICATION	0.015231181157120206	IMPLEMENTATION
paramtranslations = new parametertranslationsimpl( collectedparameterspecifications )	WITHOUT_CLASSIFICATION	0.9999243274402344	WITHOUT_CLASSIFICATION	7.567255976564397E-5	IMPLEMENTATION
we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999979487113834	WITHOUT_CLASSIFICATION	2.0512886165788644E-6	IMPLEMENTATION
igndore it	WITHOUT_CLASSIFICATION	0.9999829843550749	WITHOUT_CLASSIFICATION	1.701564492506853E-5	IMPLEMENTATION
we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999975483513569	WITHOUT_CLASSIFICATION	2.4516486431523917E-6	IMPLEMENTATION
[jsd] the fix for hhh-558	WITHOUT_CLASSIFICATION	0.9988679552422148	WITHOUT_CLASSIFICATION	0.0011320447577850854	IMPLEMENTATION
if the token can tell us if it could be an identifier	WITHOUT_CLASSIFICATION	0.9999802408437283	WITHOUT_CLASSIFICATION	1.975915627164868E-5	IMPLEMENTATION
and the expected token type was an identifier then	WITHOUT_CLASSIFICATION	0.99999977962316	WITHOUT_CLASSIFICATION	2.2037684008438898E-7	IMPLEMENTATION
use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999970631354713	WITHOUT_CLASSIFICATION	2.9368645287847894E-6	IMPLEMENTATION
add the token to the ast.	WITHOUT_CLASSIFICATION	0.9999573499647033	WITHOUT_CLASSIFICATION	4.265003529670104E-5	IMPLEMENTATION
(not (eq a b) ) => (ne a b)	WITHOUT_CLASSIFICATION	0.9999902774128151	WITHOUT_CLASSIFICATION	9.722587184853343E-6	IMPLEMENTATION
(not (ne a b) ) => (eq a b)	WITHOUT_CLASSIFICATION	0.9999902774128151	WITHOUT_CLASSIFICATION	9.722587184853343E-6	IMPLEMENTATION
(not (lt a b) ) => (ge a b)	WITHOUT_CLASSIFICATION	0.9999902774128151	WITHOUT_CLASSIFICATION	9.722587184853343E-6	IMPLEMENTATION
(not (ge a b) ) => (lt a b)	WITHOUT_CLASSIFICATION	0.9999902774128151	WITHOUT_CLASSIFICATION	9.722587184853343E-6	IMPLEMENTATION
(not (le a b) ) => (gt a b)	WITHOUT_CLASSIFICATION	0.9999902774128151	WITHOUT_CLASSIFICATION	9.722587184853343E-6	IMPLEMENTATION
(not (like a b) ) => (not_like a b)	WITHOUT_CLASSIFICATION	0.9999906018130612	WITHOUT_CLASSIFICATION	9.398186938811499E-6	IMPLEMENTATION
(not (not_like a b) ) => (like a b)	WITHOUT_CLASSIFICATION	0.9999906018130612	WITHOUT_CLASSIFICATION	9.398186938811499E-6	IMPLEMENTATION
(not (is_not_null a b) ) => (is_null a b)	WITHOUT_CLASSIFICATION	0.9999879710931792	WITHOUT_CLASSIFICATION	1.2028906820875854E-5	IMPLEMENTATION
(not (between a b) ) => (not_between a b)	WITHOUT_CLASSIFICATION	0.9999879710931792	WITHOUT_CLASSIFICATION	1.2028906820875854E-5	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9997472675043035	WITHOUT_CLASSIFICATION	2.527324956965201E-4	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999898883378122	WITHOUT_CLASSIFICATION	1.0111662187726094E-5	IMPLEMENTATION
if if otherwise handle the error normally.	WITHOUT_CLASSIFICATION	0.9988839085141826	WITHOUT_CLASSIFICATION	0.0011160914858173224	IMPLEMENTATION
(not (not_between a b) ) => (between a b)	WITHOUT_CLASSIFICATION	0.9999879710931792	WITHOUT_CLASSIFICATION	1.2028906820875854E-5	IMPLEMENTATION
this can never happen because this rule will always eliminate the child not.case notreturn x.getfirstchild() (not (not x) ) => (x)	WITHOUT_CLASSIFICATION	0.9999476588860169	WITHOUT_CLASSIFICATION	5.234111398307604E-5	IMPLEMENTATION
just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999861941558152	WITHOUT_CLASSIFICATION	1.380584418484684E-5	IMPLEMENTATION
(eq null b) => (is_null b)	WITHOUT_CLASSIFICATION	0.9999980735308608	WITHOUT_CLASSIFICATION	1.926469139121259E-6	IMPLEMENTATION
(eq a null) => (is_null a)	WITHOUT_CLASSIFICATION	0.9999930390268156	WITHOUT_CLASSIFICATION	6.960973184502576E-6	IMPLEMENTATION
note because we're using astutil.createparent() the tree must be created from the bottom up. is empty x => (exists (query (select_from (from x) ) ) )	WITHOUT_CLASSIFICATION	0.9999997522535999	WITHOUT_CLASSIFICATION	2.4774640007488586E-7	IMPLEMENTATION
add not if it's negated.	WITHOUT_CLASSIFICATION	0.9991281000473122	WITHOUT_CLASSIFICATION	8.718999526877243E-4	IMPLEMENTATION
create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9995603501190415	WITHOUT_CLASSIFICATION	4.3964988095840856E-4	IMPLEMENTATION
case 1 multi token keywords group by and order by the next token ( lt(2) ) should be 'by' otherwise this is just an ident.	WITHOUT_CLASSIFICATION	0.9999951572531288	WITHOUT_CLASSIFICATION	4.842746871122932E-6	IMPLEMENTATION
case 2 the current token is after from and before '.'.	WITHOUT_CLASSIFICATION	0.9999994084764134	WITHOUT_CLASSIFICATION	5.915235866481929E-7	IMPLEMENTATION
this handles hhh-354 where there is a strange property name in a where clause. if the lookahead contains a dot then something that isn't an ident	WITHOUT_CLASSIFICATION	0.9999999874303146	WITHOUT_CLASSIFICATION	1.2569685494098788E-8	IMPLEMENTATION
see if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999999387740728	WITHOUT_CLASSIFICATION	6.122592719704821E-8	IMPLEMENTATION
set it!	WITHOUT_CLASSIFICATION	0.9999958122604972	WITHOUT_CLASSIFICATION	4.1877395027804215E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999688338482335	WITHOUT_CLASSIFICATION	3.116615176653375E-5	IMPLEMENTATION
strip the " where "	WITHOUT_CLASSIFICATION	0.9998974066776535	WITHOUT_CLASSIFICATION	1.0259332234645627E-4	IMPLEMENTATION
don't really know all the codes required to adequately decipher returned jdbc exceptions here. simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.6661725331881502	IMPLEMENTATION	0.3338274668118497	WITHOUT_CLASSIFICATION
at the very least cleanup the data )	WITHOUT_CLASSIFICATION	0.9999990212152965	WITHOUT_CLASSIFICATION	9.787847035410926E-7	IMPLEMENTATION
first save off the pertinent ids as the return value	WITHOUT_CLASSIFICATION	0.9999962217036741	WITHOUT_CLASSIFICATION	3.7782963258367606E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999976933649687	WITHOUT_CLASSIFICATION	2.3066350312404796E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999976933649687	WITHOUT_CLASSIFICATION	2.3066350312404796E-6	IMPLEMENTATION
start performing the updates	WITHOUT_CLASSIFICATION	0.999995315920659	WITHOUT_CLASSIFICATION	4.684079340916881E-6	IMPLEMENTATION
first save off the pertinent ids saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.999998879569309	WITHOUT_CLASSIFICATION	1.1204306909978796E-6	IMPLEMENTATION
start performing the deletes	WITHOUT_CLASSIFICATION	0.9999956610892017	WITHOUT_CLASSIFICATION	4.3389107983220255E-6	IMPLEMENTATION
otherwise everything ok.	WITHOUT_CLASSIFICATION	0.9995456376198928	WITHOUT_CLASSIFICATION	4.5436238010723495E-4	IMPLEMENTATION
visit width-first then depth	WITHOUT_CLASSIFICATION	0.9999884305609246	WITHOUT_CLASSIFICATION	1.1569439075433674E-5	IMPLEMENTATION
if the types report logical equivalence return true	WITHOUT_CLASSIFICATION	0.9999913131419746	WITHOUT_CLASSIFICATION	8.68685802545023E-6	IMPLEMENTATION
otherwise perform a "deep equivalence" check	WITHOUT_CLASSIFICATION	0.9976990359366232	WITHOUT_CLASSIFICATION	0.002300964063376818	IMPLEMENTATION
if there is no where node make one.	WITHOUT_CLASSIFICATION	0.9999927096107107	WITHOUT_CLASSIFICATION	7.290389289301925E-6	IMPLEMENTATION
inject the where after the parent	WITHOUT_CLASSIFICATION	0.9999013224123137	WITHOUT_CLASSIFICATION	9.867758768639181E-5	IMPLEMENTATION
never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999936662905228	WITHOUT_CLASSIFICATION	6.333709477289126E-6	IMPLEMENTATION
moved here from selectclause [jsd]	WITHOUT_CLASSIFICATION	0.9999819388845033	WITHOUT_CLASSIFICATION	1.80611154967798E-5	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999977241136305	WITHOUT_CLASSIFICATION	2.2758863695107906E-6	IMPLEMENTATION
use the table fromelement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999924506184027	WITHOUT_CLASSIFICATION	7.5493815973039715E-6	IMPLEMENTATION
set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999996114667743	WITHOUT_CLASSIFICATION	3.885332256537425E-7	IMPLEMENTATION
if the uresolved property path isn't set yet just use the property name.	WITHOUT_CLASSIFICATION	0.9999834477771806	WITHOUT_CLASSIFICATION	1.6552222819378613E-5	IMPLEMENTATION
the 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999907740550262	WITHOUT_CLASSIFICATION	9.22594497381674E-6	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999772613724	WITHOUT_CLASSIFICATION	2.2738627673389323E-8	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999772613724	WITHOUT_CLASSIFICATION	2.2738627673389323E-8	IMPLEMENTATION
if this dot has already been resolved stop now.	WITHOUT_CLASSIFICATION	0.9999868268666569	WITHOUT_CLASSIFICATION	1.3173133343061716E-5	IMPLEMENTATION
if there is no data type for this node and we're at the end of the path (top most dot node) then this might be a java constant.	WITHOUT_CLASSIFICATION	0.9999998722498421	WITHOUT_CLASSIFICATION	1.2775015791511902E-7	IMPLEMENTATION
the property is a collection	WITHOUT_CLASSIFICATION	0.9999935532078622	WITHOUT_CLASSIFICATION	6.446792137750208E-6	IMPLEMENTATION
the property is a component	WITHOUT_CLASSIFICATION	0.9999993071850453	WITHOUT_CLASSIFICATION	6.928149547631134E-7	IMPLEMENTATION
the property is another class..	WITHOUT_CLASSIFICATION	0.999991211496986	WITHOUT_CLASSIFICATION	8.788503014097282E-6	IMPLEMENTATION
otherwise this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999638077698755	WITHOUT_CLASSIFICATION	3.619223012447671E-5	IMPLEMENTATION
foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999881708351104	WITHOUT_CLASSIFICATION	1.1829164889726935E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9997817988627805	WITHOUT_CLASSIFICATION	2.1820113721951093E-4	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999672009969898	WITHOUT_CLASSIFICATION	3.279900301016384E-5	IMPLEMENTATION
in non-select queries the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999998567634206	WITHOUT_CLASSIFICATION	1.432365793557738E-7	IMPLEMENTATION
this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999781349387631	WITHOUT_CLASSIFICATION	2.186506123697057E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9997817988627805	WITHOUT_CLASSIFICATION	2.1820113721951093E-4	IMPLEMENTATION
even though we might find a pre-existing element by join path we may not be able to reuse it	WITHOUT_CLASSIFICATION	0.995250514411599	WITHOUT_CLASSIFICATION	0.004749485588400958	IMPLEMENTATION
note addduplicatealias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999787907640744	WITHOUT_CLASSIFICATION	2.1209235925583272E-5	IMPLEMENTATION
if the from-clauses are the same we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999960371657777	WITHOUT_CLASSIFICATION	3.962834222366271E-6	IMPLEMENTATION
again null != null here	WITHOUT_CLASSIFICATION	0.9999959954707367	WITHOUT_CLASSIFICATION	4.004529263240146E-6	IMPLEMENTATION
if this is an implied join in a from element then use the impled join type which is part of the tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999999996929326	WITHOUT_CLASSIFICATION	3.0706738899602655E-10	IMPLEMENTATION
otherwise (subquery case) dont reuse the fromelement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999955811270641	WITHOUT_CLASSIFICATION	4.418872935981812E-6	IMPLEMENTATION
we know only the lhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9996700450909216	WITHOUT_CLASSIFICATION	3.29954909078431E-4	IMPLEMENTATION
the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.999990715133719	WITHOUT_CLASSIFICATION	9.28486628093503E-6	IMPLEMENTATION
only the identifier property field name can be a reference to the associated entity's pk	WITHOUT_CLASSIFICATION	0.9999937919990354	WITHOUT_CLASSIFICATION	6.2080009646896655E-6	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999052522658333	WITHOUT_CLASSIFICATION	9.474773416666948E-5	IMPLEMENTATION
append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9990986394938539	WITHOUT_CLASSIFICATION	9.013605061461543E-4	IMPLEMENTATION
if the lhs is a collection use collectionpropertymapping	WITHOUT_CLASSIFICATION	0.9999976268718805	WITHOUT_CLASSIFICATION	2.3731281194807554E-6	IMPLEMENTATION
tell the destination fromelement to 'includesubclasses'.	WITHOUT_CLASSIFICATION	0.9998968163559898	WITHOUT_CLASSIFICATION	1.0318364401025443E-4	IMPLEMENTATION
use theta style (for regression) move the node up after the origin node.	WITHOUT_CLASSIFICATION	0.9995416171000444	WITHOUT_CLASSIFICATION	4.583828999556436E-4	IMPLEMENTATION
don't resolve the node again.	WITHOUT_CLASSIFICATION	0.999962372370213	WITHOUT_CLASSIFICATION	3.762762978689016E-5	IMPLEMENTATION
for expected parameter type injection we expect that the lhs represents some form of property ref and that the children of the in-list represent one-or-more params.	WITHOUT_CLASSIFICATION	0.9999970786970409	WITHOUT_CLASSIFICATION	2.9213029589917924E-6	IMPLEMENTATION
we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999879284880968	WITHOUT_CLASSIFICATION	1.2071511903195336E-5	IMPLEMENTATION
we have something like "? [op] rhs"	WITHOUT_CLASSIFICATION	0.999677866346247	WITHOUT_CLASSIFICATION	3.221336537529049E-4	IMPLEMENTATION
we have something like "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.999677866346247	WITHOUT_CLASSIFICATION	3.221336537529049E-4	IMPLEMENTATION
we know only the rhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9996700450909216	WITHOUT_CLASSIFICATION	3.29954909078431E-4	IMPLEMENTATION
handle the (assumed) valid cases #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9922898826517327	WITHOUT_CLASSIFICATION	0.007710117348267371	IMPLEMENTATION
one or the other needs to be a datetime for us to get into this method in the first place	WITHOUT_CLASSIFICATION	0.9999751146043033	WITHOUT_CLASSIFICATION	2.4885395696654747E-5	IMPLEMENTATION
#3 - note that this is also true of "datetime - param"	WITHOUT_CLASSIFICATION	0.9999934278605672	WITHOUT_CLASSIFICATION	6.572139432874157E-6	IMPLEMENTATION
#2	WITHOUT_CLASSIFICATION	0.9999872602799289	WITHOUT_CLASSIFICATION	1.2739720071144673E-5	IMPLEMENTATION
generate the inner join -- the elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.999980412460747	WITHOUT_CLASSIFICATION	1.9587539252943993E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999802780782344	WITHOUT_CLASSIFICATION	1.972192176566845E-5	IMPLEMENTATION
the 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999966301091281	WITHOUT_CLASSIFICATION	3.3698908718493527E-6	IMPLEMENTATION
add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9994462958219075	WITHOUT_CLASSIFICATION	5.537041780925637E-4	IMPLEMENTATION
sometimes use the element table alias sometimes use the umm collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.999987424442243	WITHOUT_CLASSIFICATION	1.2575557757100096E-5	IMPLEMENTATION
now set the text for this node. it should be the element columns.	WITHOUT_CLASSIFICATION	0.9999385535687026	WITHOUT_CLASSIFICATION	6.144643129729037E-5	IMPLEMENTATION
get the function return value type based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999587250822058	WITHOUT_CLASSIFICATION	4.127491779421484E-5	IMPLEMENTATION
this will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999622246662676	WITHOUT_CLASSIFICATION	3.777533373233465E-5	IMPLEMENTATION
mutation depends on the types of nodes invloved	WITHOUT_CLASSIFICATION	0.99974735779208	WITHOUT_CLASSIFICATION	2.526422079199241E-4	IMPLEMENTATION
"pass along" our initial embedded parameter node(s) to the first generated sql fragment so that it can be handled later for parameter binding	WITHOUT_CLASSIFICATION	0.9999981238396762	WITHOUT_CLASSIFICATION	1.8761603237586403E-6	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999496537434344	WITHOUT_CLASSIFICATION	5.034625656556546E-5	IMPLEMENTATION
generated select expressions are already resolved nothing to do.	WITHOUT_CLASSIFICATION	0.9999997567231993	WITHOUT_CLASSIFICATION	2.4327680073771284E-7	IMPLEMENTATION
the path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999993585682588	WITHOUT_CLASSIFICATION	6.414317411377919E-7	IMPLEMENTATION
the hql class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999962503872328	WITHOUT_CLASSIFICATION	3.7496127672334494E-6	IMPLEMENTATION
associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999485012799167	WITHOUT_CLASSIFICATION	5.149872008332652E-5	IMPLEMENTATION
try the parent fromclause	WITHOUT_CLASSIFICATION	0.9999628398148614	WITHOUT_CLASSIFICATION	3.716018513860331E-5	IMPLEMENTATION
add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999538509428254	WITHOUT_CLASSIFICATION	4.614905717456529E-5	IMPLEMENTATION
make sure that all from elements registered with this from clause are actually in the ast.	WITHOUT_CLASSIFICATION	0.9999977679515439	WITHOUT_CLASSIFICATION	2.2320484561337596E-6	IMPLEMENTATION
invoke setscalarcolumntext on each constructor argument.	WITHOUT_CLASSIFICATION	0.9996132050897443	WITHOUT_CLASSIFICATION	3.8679491025569415E-4	IMPLEMENTATION
collect the select expressions skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999972466463752	WITHOUT_CLASSIFICATION	2.7533536248351674E-6	IMPLEMENTATION
return an empty type array	WITHOUT_CLASSIFICATION	0.9998983694500784	WITHOUT_CLASSIFICATION	1.0163054992153739E-4	IMPLEMENTATION
constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999956273148444	WITHOUT_CLASSIFICATION	4.3726851556939065E-6	IMPLEMENTATION
this is the exception returned by reflecthelper.getconstructor() if it cannot locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999996250494777	WITHOUT_CLASSIFICATION	3.749505223149425E-7	IMPLEMENTATION
if there is no order by make one	WITHOUT_CLASSIFICATION	0.9999985587709362	WITHOUT_CLASSIFICATION	1.4412290638201184E-6	IMPLEMENTATION
find the where if there is no where find the from	WITHOUT_CLASSIFICATION	0.9999995483378737	WITHOUT_CLASSIFICATION	4.5166212623256665E-7	IMPLEMENTATION
now inject the newly built order by into the tree	WITHOUT_CLASSIFICATION	0.9999922235234744	WITHOUT_CLASSIFICATION	7.776476525677973E-6	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999779998459584	WITHOUT_CLASSIFICATION	2.200015404171506E-5	IMPLEMENTATION
logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999496699151988	WITHOUT_CLASSIFICATION	5.0330084801213666E-5	IMPLEMENTATION
render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999896405965936	WITHOUT_CLASSIFICATION	1.0359403406481277E-5	IMPLEMENTATION
class names in the from clause result in a joinsequence (the old fromparser does this).	WITHOUT_CLASSIFICATION	0.9999999959139017	WITHOUT_CLASSIFICATION	4.086098335159927E-9	IMPLEMENTATION
for many-to-many joins use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.99999942380852	WITHOUT_CLASSIFICATION	5.761914799521811E-7	IMPLEMENTATION
otherwise use the property mapping.	WITHOUT_CLASSIFICATION	0.9998172527081717	WITHOUT_CLASSIFICATION	1.8274729182838183E-4	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9998847379779554	WITHOUT_CLASSIFICATION	1.1526202204457893E-4	IMPLEMENTATION
if the property is a special collection property name return a collectionpropertymapping.	WITHOUT_CLASSIFICATION	0.9999990924484576	WITHOUT_CLASSIFICATION	9.075515424455372E-7	IMPLEMENTATION
collection of components.	WITHOUT_CLASSIFICATION	0.9999771184602896	WITHOUT_CLASSIFICATION	2.2881539710399212E-5	IMPLEMENTATION
make sure the lhs is "assignable"	WITHOUT_CLASSIFICATION	0.9999859622172114	WITHOUT_CLASSIFICATION	1.4037782788723952E-5	IMPLEMENTATION
false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9891958083560533	WITHOUT_CLASSIFICATION	0.010804191643946697	IMPLEMENTATION
register the fromelement with the from clause now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9998379936231719	WITHOUT_CLASSIFICATION	1.6200637682802708E-4	IMPLEMENTATION
currently allowed	WITHOUT_CLASSIFICATION	0.9999741589624348	WITHOUT_CLASSIFICATION	2.5841037565264537E-5	IMPLEMENTATION
hhh-276 implied joins in a subselect where clause - the destination needs to be added to the destination's from clause. not sure if this is will fix everything but it works.	WITHOUT_CLASSIFICATION	0.9999067464358242	WITHOUT_CLASSIFICATION	9.325356417572716E-5	IMPLEMENTATION
return classalias == null ? classname classalias	WITHOUT_CLASSIFICATION	0.9999810125698749	WITHOUT_CLASSIFICATION	1.8987430125094585E-5	IMPLEMENTATION
this is an explicit from element.	WITHOUT_CLASSIFICATION	0.9999942908358851	WITHOUT_CLASSIFICATION	5.709164114958924E-6	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999779998459584	WITHOUT_CLASSIFICATION	2.200015404171506E-5	IMPLEMENTATION
fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999854312593144	WITHOUT_CLASSIFICATION	1.456874068566004E-5	IMPLEMENTATION
if it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9990492777334928	WITHOUT_CLASSIFICATION	9.507222665072063E-4	IMPLEMENTATION
since this is an explicit from element it can't be implied in the from clause.	WITHOUT_CLASSIFICATION	0.9999999826961392	WITHOUT_CLASSIFICATION	1.7303860775484345E-8	IMPLEMENTATION
do nothing eplicit from elements are always in the projection list.	WITHOUT_CLASSIFICATION	0.9999998479869856	WITHOUT_CLASSIFICATION	1.520130143395561E-7	IMPLEMENTATION
propertyname refers to something like collection.size	WITHOUT_CLASSIFICATION	0.9995168651780588	WITHOUT_CLASSIFICATION	4.83134821941175E-4	IMPLEMENTATION
property name is a sub-path of a component	WITHOUT_CLASSIFICATION	0.9999994609748076	WITHOUT_CLASSIFICATION	5.390251923701911E-7	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999672009969898	WITHOUT_CLASSIFICATION	3.279900301016384E-5	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999968541529168	WITHOUT_CLASSIFICATION	3.145847083120324E-6	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999496537434344	WITHOUT_CLASSIFICATION	5.034625656556546E-5	IMPLEMENTATION
dotnode uses null here	WITHOUT_CLASSIFICATION	0.9999826485966348	WITHOUT_CLASSIFICATION	1.7351403365278543E-5	IMPLEMENTATION
we represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999866314248709	WITHOUT_CLASSIFICATION	1.3368575129153642E-5	IMPLEMENTATION
we are the lhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.999995478479188	WITHOUT_CLASSIFICATION	4.521520811929261E-6	IMPLEMENTATION
we are the rhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999954684685213	WITHOUT_CLASSIFICATION	4.531531478689258E-6	IMPLEMENTATION
we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999808822538884	WITHOUT_CLASSIFICATION	1.9117746111649138E-5	IMPLEMENTATION
early exit!!! return so the resolve call explicitly coming from dotnode can resolve this	WITHOUT_CLASSIFICATION	0.9999919500813188	WITHOUT_CLASSIFICATION	8.04991868118527E-6	IMPLEMENTATION
assume this ident's text does not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9909712228928297	WITHOUT_CLASSIFICATION	0.009028777107170394	IMPLEMENTATION
just ignore it for now it'll get resolved later	WITHOUT_CLASSIFICATION	0.9999979144839878	WITHOUT_CLASSIFICATION	2.0855160122793915E-6	IMPLEMENTATION
this is not actually a constant but a reference to from element.	WITHOUT_CLASSIFICATION	0.9999283592736107	WITHOUT_CLASSIFICATION	7.164072638930638E-5	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999952164327126	WITHOUT_CLASSIFICATION	4.783567287397877E-6	IMPLEMENTATION
these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9986032568956772	WITHOUT_CLASSIFICATION	0.0013967431043229	IMPLEMENTATION
used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999766974629666	WITHOUT_CLASSIFICATION	2.3302537033405584E-5	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9495811886137842	WITHOUT_CLASSIFICATION	0.05041881138621588	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9495811886137842	WITHOUT_CLASSIFICATION	0.05041881138621588	IMPLEMENTATION
naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999999219730975	WITHOUT_CLASSIFICATION	7.80269025152645E-8	IMPLEMENTATION
this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9930175178760912	WITHOUT_CLASSIFICATION	0.006982482123908768	IMPLEMENTATION
do not over-write the column text as that has already been "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9941392176759407	WITHOUT_CLASSIFICATION	0.005860782324059269	IMPLEMENTATION
for some reason the antlr.commonast initialization routines force this method to get called twice. the first time with an empty string	WITHOUT_CLASSIFICATION	0.999836103516684	WITHOUT_CLASSIFICATION	1.6389648331598082E-4	IMPLEMENTATION
look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999976761297759	WITHOUT_CLASSIFICATION	2.3238702240972113E-6	IMPLEMENTATION
add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999691338732253	WITHOUT_CLASSIFICATION	3.086612677471235E-5	IMPLEMENTATION
if the from element isn't in the same clause create a new from element.	WITHOUT_CLASSIFICATION	0.9999995370311286	WITHOUT_CLASSIFICATION	4.6296887132250023E-7	IMPLEMENTATION
this is the root level node. generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999708474333903	WITHOUT_CLASSIFICATION	2.9152566609746624E-5	IMPLEMENTATION
correlated subqueries create 'special' implied from nodes because correlated subselects can't use an ansi-style join	WITHOUT_CLASSIFICATION	0.9999954108818613	WITHOUT_CLASSIFICATION	4.5891181387513176E-6	IMPLEMENTATION
super-duper-classic-parser-regression-testing-mojo-magic	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
a collection of entities	WITHOUT_CLASSIFICATION	0.9999786117056315	WITHOUT_CLASSIFICATION	2.1388294368460006E-5	IMPLEMENTATION
a collection of components	WITHOUT_CLASSIFICATION	0.9999877791725424	WITHOUT_CLASSIFICATION	1.222082745750051E-5	IMPLEMENTATION
a collection of scalar elements	WITHOUT_CLASSIFICATION	0.999990520146618	WITHOUT_CLASSIFICATION	9.479853382020467E-6	IMPLEMENTATION
according to both the ansi-sql and ejb3 specs trim can either take exactly one parameter or a variable number of parameters between 1 and 4. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if only <trim specification> is omitted both is assumed if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.9999999991625022	WITHOUT_CLASSIFICATION	8.374978674129478E-10	IMPLEMENTATION
don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.999990745590754	WITHOUT_CLASSIFICATION	9.254409246012292E-6	IMPLEMENTATION
treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999973008726707	WITHOUT_CLASSIFICATION	2.6991273293911162E-6	IMPLEMENTATION
( implied && dotnode.usethetastyleimplicitjoins ) ) {	WITHOUT_CLASSIFICATION	0.9999724091123464	WITHOUT_CLASSIFICATION	2.7590887653590763E-5	IMPLEMENTATION
the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9998743150871184	WITHOUT_CLASSIFICATION	1.2568491288152272E-4	IMPLEMENTATION
create the from element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999998840114617	WITHOUT_CLASSIFICATION	1.159885383413532E-7	IMPLEMENTATION
if the join is implied then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999940653773247	WITHOUT_CLASSIFICATION	5.934622675269602E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
the associated entity is implied but it must be included in the from. the collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999998187727863	WITHOUT_CLASSIFICATION	1.8122721367879965E-7	IMPLEMENTATION
tag this node as a join. don't include subclasses in the join. this is a clollection join.	WITHOUT_CLASSIFICATION	0.9999974598643907	WITHOUT_CLASSIFICATION	2.5401356094059485E-6	IMPLEMENTATION
get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.999999615902948	WITHOUT_CLASSIFICATION	3.8409705203989123E-7	IMPLEMENTATION
origin path implied columns classalias	WITHOUT_CLASSIFICATION	0.999985163437525	WITHOUT_CLASSIFICATION	1.4836562474919948E-5	IMPLEMENTATION
implied	WITHOUT_CLASSIFICATION	0.9999870381776779	WITHOUT_CLASSIFICATION	1.2961822322122895E-5	IMPLEMENTATION
for implied many-to-many just add the end join.	WITHOUT_CLASSIFICATION	0.999963814541582	WITHOUT_CLASSIFICATION	3.618545841804051E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852156220005	WITHOUT_CLASSIFICATION	1.4784377999428373E-5	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999993522083258	WITHOUT_CLASSIFICATION	6.477916741396208E-7	IMPLEMENTATION
this causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999653651994967	WITHOUT_CLASSIFICATION	3.4634800503270164E-5	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9999945437829622	WITHOUT_CLASSIFICATION	5.456217037824279E-6	IMPLEMENTATION
frontbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999993776771804	WITHOUT_CLASSIFICATION	6.223228196087393E-7	IMPLEMENTATION
the types represented in the sql result set. @return the types represented in the sql result set.	WITHOUT_CLASSIFICATION	0.9999986292843165	WITHOUT_CLASSIFICATION	1.370715683458025E-6	IMPLEMENTATION
public type[] getsqlresulttypes() {return sqlresulttypes}	WITHOUT_CLASSIFICATION	0.9999955024163456	WITHOUT_CLASSIFICATION	4.497583654452169E-6	IMPLEMENTATION
first collect all of the select expressions. note this must be done before invoking setscalarcolumntext() because setscalarcolumntext() changes the ast!!!	WITHOUT_CLASSIFICATION	0.9999301754835215	WITHOUT_CLASSIFICATION	6.982451647842546E-5	IMPLEMENTATION
first allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9957344748860348	WITHOUT_CLASSIFICATION	0.0042655251139652045	IMPLEMENTATION
sqlresulttypelist.addall( constructorargumenttypelist )	WITHOUT_CLASSIFICATION	0.9999650047747016	WITHOUT_CLASSIFICATION	3.49952252982754E-5	IMPLEMENTATION
if the data type is not an association type it could not have been in the from clause.	WITHOUT_CLASSIFICATION	0.9999978953188977	WITHOUT_CLASSIFICATION	2.104681102202915E-6	IMPLEMENTATION
sqlresulttypelist.add( type )	WITHOUT_CLASSIFICATION	0.9999675728102831	WITHOUT_CLASSIFICATION	3.2427189716882727E-5	IMPLEMENTATION
always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9992146330521785	WITHOUT_CLASSIFICATION	7.853669478214535E-4	IMPLEMENTATION
add the fetched entities	WITHOUT_CLASSIFICATION	0.9999743006808345	WITHOUT_CLASSIFICATION	2.5699319165483748E-5	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999879444742239	WITHOUT_CLASSIFICATION	1.2055525776075266E-5	IMPLEMENTATION
function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99967426959755	WITHOUT_CLASSIFICATION	3.2573040244997264E-4	IMPLEMENTATION
if there are any scalars (non-entities) selected render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999997646839988	WITHOUT_CLASSIFICATION	2.3531600118594037E-7	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
arraylist sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999785563416034	WITHOUT_CLASSIFICATION	2.144365839660978E-5	IMPLEMENTATION
sqlresulttypes = ( type[] ) sqlresulttypelist.toarray( new type[sqlresulttypelist.size()] )	WITHOUT_CLASSIFICATION	0.9999664046660308	WITHOUT_CLASSIFICATION	3.359533396913269E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997444743479255	WITHOUT_CLASSIFICATION	2.555256520746207E-4	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.7815003541523745	WITHOUT_CLASSIFICATION	0.2184996458476255	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999874332495182	WITHOUT_CLASSIFICATION	1.2566750481675488E-5	IMPLEMENTATION
generate an 2d array of column names the first dimension is parallel with the return types array. the second dimension is the list of column names for each type.	WITHOUT_CLASSIFICATION	0.9999948572047607	WITHOUT_CLASSIFICATION	5.142795239294865E-6	IMPLEMENTATION
generate the select expression.	WITHOUT_CLASSIFICATION	0.9999551491627101	WITHOUT_CLASSIFICATION	4.485083728988098E-5	IMPLEMENTATION
union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996112173825407	WITHOUT_CLASSIFICATION	3.8878261745933757E-4	IMPLEMENTATION
skip 'distinct' and 'all' so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9998455539437338	WITHOUT_CLASSIFICATION	1.544460562661859E-4	IMPLEMENTATION
create sql_token nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999932925248555	WITHOUT_CLASSIFICATION	6.707475144567391E-6	IMPLEMENTATION
generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999645415039681	WITHOUT_CLASSIFICATION	3.545849603183703E-5	IMPLEMENTATION
get the function name node.	WITHOUT_CLASSIFICATION	0.9999933718098521	WITHOUT_CLASSIFICATION	6.6281901479358175E-6	IMPLEMENTATION
method expressions in a select should always be considered scalar.	WITHOUT_CLASSIFICATION	0.999996758478152	WITHOUT_CLASSIFICATION	3.2415218480253367E-6	IMPLEMENTATION
if this is 'elements' then create a new from element.	WITHOUT_CLASSIFICATION	0.999998955925393	WITHOUT_CLASSIFICATION	1.0440746070561964E-6	IMPLEMENTATION
not elements(x)	WITHOUT_CLASSIFICATION	0.9972587623706769	WITHOUT_CLASSIFICATION	0.0027412376293231805	IMPLEMENTATION
dialect function	WITHOUT_CLASSIFICATION	0.9999716019430697	WITHOUT_CLASSIFICATION	2.8398056930338344E-5	IMPLEMENTATION
collection 'property function'	WITHOUT_CLASSIFICATION	0.9999639306048314	WITHOUT_CLASSIFICATION	3.6069395168598754E-5	IMPLEMENTATION
if the constant is an ident figure out what it means	WITHOUT_CLASSIFICATION	0.9999814618329085	WITHOUT_CLASSIFICATION	1.8538167091538442E-5	IMPLEMENTATION
ident is a class alias in the from.	WITHOUT_CLASSIFICATION	0.999999400919872	WITHOUT_CLASSIFICATION	5.99080127925697E-7	IMPLEMENTATION
resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999823746615885	WITHOUT_CLASSIFICATION	1.762533841162328E-5	IMPLEMENTATION
otherwise it's a literal.	WITHOUT_CLASSIFICATION	0.9996838041868841	WITHOUT_CLASSIFICATION	3.16195813115856E-4	IMPLEMENTATION
the name of an entity class	WITHOUT_CLASSIFICATION	0.9999995790802745	WITHOUT_CLASSIFICATION	4.209197255089923E-7	IMPLEMENTATION
the class discriminator value	WITHOUT_CLASSIFICATION	0.9999946638014443	WITHOUT_CLASSIFICATION	5.336198555700643E-6	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999955322591336	WITHOUT_CLASSIFICATION	4.467740866361997E-6	IMPLEMENTATION
add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999983886203082	WITHOUT_CLASSIFICATION	1.6113796918100158E-6	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9998967682071951	WITHOUT_CLASSIFICATION	1.0323179280487451E-4	IMPLEMENTATION
child == parent.getfirstchild()	WITHOUT_CLASSIFICATION	0.9998652348435377	WITHOUT_CLASSIFICATION	1.3476515646224893E-4	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9998967682071951	WITHOUT_CLASSIFICATION	1.0323179280487451E-4	IMPLEMENTATION
filter conditions need to be inserted before the hql where condition and the theta join node. this is because org.hibernate.loader.loader binds the filter parameters first then it binds all the hql query parameters see org.hibernate.loader.loader.processfilterparameters().	WITHOUT_CLASSIFICATION	0.9973509128455382	WITHOUT_CLASSIFICATION	0.0026490871544618375	IMPLEMENTATION
put the filters node before the hql condition and theta joins	WITHOUT_CLASSIFICATION	0.9998991713365935	WITHOUT_CLASSIFICATION	1.0082866340661365E-4	IMPLEMENTATION
add the current fragment to the filters node	WITHOUT_CLASSIFICATION	0.999715937401246	WITHOUT_CLASSIFICATION	2.8406259875409244E-4	IMPLEMENTATION
create a new theta_joins node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999777611708949	WITHOUT_CLASSIFICATION	2.2238829105059662E-5	IMPLEMENTATION
put the theta_joins node before the hql condition after the filters.	WITHOUT_CLASSIFICATION	0.999906772063255	WITHOUT_CLASSIFICATION	9.322793674511349E-5	IMPLEMENTATION
add the current fragment to the theta_joins node	WITHOUT_CLASSIFICATION	0.9997108999696277	WITHOUT_CLASSIFICATION	2.8910003037226317E-4	IMPLEMENTATION
first try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999956651309309	WITHOUT_CLASSIFICATION	4.3348690691448224E-6	IMPLEMENTATION
unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999439286604611	WITHOUT_CLASSIFICATION	5.6071339538933034E-5	IMPLEMENTATION
if that didn't work try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999956465876391	WITHOUT_CLASSIFICATION	4.353412360978516E-6	IMPLEMENTATION
implicit joins use theta style (where pk = fk) explicit joins use join (after from)	WITHOUT_CLASSIFICATION	0.9998318328139787	WITHOUT_CLASSIFICATION	1.681671860212348E-4	IMPLEMENTATION
locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.999994176119508	WITHOUT_CLASSIFICATION	5.823880491934261E-6	IMPLEMENTATION
determine the type of the first argument	WITHOUT_CLASSIFICATION	0.999998978991165	WITHOUT_CLASSIFICATION	1.0210088350164985E-6	IMPLEMENTATION
use the dot node to emit the first column name. create the column names folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999520469052452	WITHOUT_CLASSIFICATION	4.795309475490399E-5	IMPLEMENTATION
note this simply constructs a "raw" sql_token representing the where fragment and injects this into the tree. this "works" however it is probably not the best long-term solution. at some point we probably want to apply an additional grammar to properly tokenize this where fragment into constituent parts focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9791473588158933	WITHOUT_CLASSIFICATION	0.02085264118410676	IMPLEMENTATION
append the text of the current node.	WITHOUT_CLASSIFICATION	0.9993286720927357	WITHOUT_CLASSIFICATION	6.713279072643461E-4	IMPLEMENTATION
if the node has a first child recurse into the first child.	WITHOUT_CLASSIFICATION	0.999998587852465	WITHOUT_CLASSIFICATION	1.4121475349626217E-6	IMPLEMENTATION
if there is a second child (rhs) recurse into that child.	WITHOUT_CLASSIFICATION	0.9999995951530743	WITHOUT_CLASSIFICATION	4.0484692559134964E-7	IMPLEMENTATION
iterate through the aliasjoinsequence pairs and generate sql token nodes.	WITHOUT_CLASSIFICATION	0.9999855010683599	WITHOUT_CLASSIFICATION	1.4498931639981648E-5	IMPLEMENTATION
if the from element represents a join_fragment and it is a theta-style join convert its type from join_fragment to from_fragment	WITHOUT_CLASSIFICATION	0.999998031220817	WITHOUT_CLASSIFICATION	1.9687791829631E-6	IMPLEMENTATION
this is used during sqlgenerator processing	WITHOUT_CLASSIFICATION	0.9999920547913584	WITHOUT_CLASSIFICATION	7.945208641518497E-6	IMPLEMENTATION
if there is a from fragment and the from element is an explicit then add the from part.	WITHOUT_CLASSIFICATION	0.9999999749224686	WITHOUT_CLASSIFICATION	2.507753140018076E-8	IMPLEMENTATION
&& stringhelper.isnotempty( frag )	WITHOUT_CLASSIFICATION	0.9999654112716533	WITHOUT_CLASSIFICATION	3.458872834672001E-5	IMPLEMENTATION
the from fragment will probably begin with ' '. remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999996270824575	WITHOUT_CLASSIFICATION	3.729175424739014E-7	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9997850767997876	WITHOUT_CLASSIFICATION	2.1492320021228873E-4	IMPLEMENTATION
select p from p in class eg.person order by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999999255443108	WITHOUT_CLASSIFICATION	7.445568910212618E-8	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.999999749389467	WITHOUT_CLASSIFICATION	2.506105330570995E-7	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9999978504059479	WITHOUT_CLASSIFICATION	2.1495940519817055E-6	IMPLEMENTATION
default mode	WITHOUT_CLASSIFICATION	0.9999856707567725	WITHOUT_CLASSIFICATION	1.4329243227559212E-5	IMPLEMENTATION
queryjoinfragment join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9999343095594686	WITHOUT_CLASSIFICATION	6.569044053145146E-5	IMPLEMENTATION
reset the dotcount (but not the path) after reset!	WITHOUT_CLASSIFICATION	0.9981682101049197	WITHOUT_CLASSIFICATION	0.0018317898950802305	IMPLEMENTATION
after reset!	WITHOUT_CLASSIFICATION	0.9999638754397896	WITHOUT_CLASSIFICATION	3.612456021043726E-5	IMPLEMENTATION
we don't need to worry about any condition in the on clause here (tofromfragmentstring) since anything in the on condition is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999783324601638	WITHOUT_CLASSIFICATION	2.1667539836304186E-5	IMPLEMENTATION
bit_length feels a bit broken to me. we have to cast to char in order to pass when a numeric value is supplied. but of course the answers given will be wildly different for these two datatypes. 1234.5678 will be 9 bytes as a char string but will be 8 or 16 bytes as a true numeric. jay nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999999999664831	WITHOUT_CLASSIFICATION	3.35168836998257E-11	IMPLEMENTATION
dotcount>=2	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
do the corresponding rhs	WITHOUT_CLASSIFICATION	0.9999419337801285	WITHOUT_CLASSIFICATION	5.8066219871485455E-5	IMPLEMENTATION
if its "id"	WITHOUT_CLASSIFICATION	0.9999922136913199	WITHOUT_CLASSIFICATION	7.786308680158824E-6	IMPLEMENTATION
or its the id property name	WITHOUT_CLASSIFICATION	0.9999722640054782	WITHOUT_CLASSIFICATION	2.773599452183158E-5	IMPLEMENTATION
join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9999343095594686	WITHOUT_CLASSIFICATION	6.569044053145146E-5	IMPLEMENTATION
important!!	WITHOUT_CLASSIFICATION	0.999963995580913	WITHOUT_CLASSIFICATION	3.600441908698291E-5	IMPLEMENTATION
string[] keycols = collpersister.getkeycolumnnames()	WITHOUT_CLASSIFICATION	0.9999306359686535	WITHOUT_CLASSIFICATION	6.936403134657922E-5	IMPLEMENTATION
an association	WITHOUT_CLASSIFICATION	0.9999931479645601	WITHOUT_CLASSIFICATION	6.852035439876095E-6	IMPLEMENTATION
allow index() function	WITHOUT_CLASSIFICATION	0.9998850777503815	WITHOUT_CLASSIFICATION	1.1492224961849151E-4	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9904585026464853	WITHOUT_CLASSIFICATION	0.0095414973535147	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.999999749389467	WITHOUT_CLASSIFICATION	2.506105330570995E-7	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9999639883435582	WITHOUT_CLASSIFICATION	3.6011656441890955E-5	IMPLEMENTATION
collections of values	WITHOUT_CLASSIFICATION	0.9999978280570608	WITHOUT_CLASSIFICATION	2.171942939278863E-6	IMPLEMENTATION
opening paren in new foo ( )	WITHOUT_CLASSIFICATION	0.9999987583599261	WITHOUT_CLASSIFICATION	1.2416400737758918E-6	IMPLEMENTATION
if we are inside a new result() but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999973639223784	WITHOUT_CLASSIFICATION	2.6360776216751815E-6	IMPLEMENTATION
special case	WITHOUT_CLASSIFICATION	0.9999837227204286	WITHOUT_CLASSIFICATION	1.6277279571359935E-5	IMPLEMENTATION
the name of an sql function	WITHOUT_CLASSIFICATION	0.9999993837507518	WITHOUT_CLASSIFICATION	6.162492481373122E-7	IMPLEMENTATION
null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999952617260756	WITHOUT_CLASSIFICATION	4.738273924466935E-6	IMPLEMENTATION
this is basically a copy/paste of orderbyparser might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999872288754812	WITHOUT_CLASSIFICATION	1.277112451869762E-5	IMPLEMENTATION
select p from p in class eg.person group by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999998600083845	WITHOUT_CLASSIFICATION	1.399916154181423E-7	IMPLEMENTATION
return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999473296675695	WITHOUT_CLASSIFICATION	5.2670332430615494E-5	IMPLEMENTATION
register collection role	WITHOUT_CLASSIFICATION	0.9999144699246518	WITHOUT_CLASSIFICATION	8.553007534817304E-5	IMPLEMENTATION
the keyword used to specify an identity column if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999978958269643	WITHOUT_CLASSIFICATION	2.104173035658588E-6	IMPLEMENTATION
.getelementpropertymapping()	WITHOUT_CLASSIFICATION	0.9999783961931803	WITHOUT_CLASSIFICATION	2.160380681964478E-5	IMPLEMENTATION
crossjoins.add(name)	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
ie no select clause in hql	WITHOUT_CLASSIFICATION	0.9999983382299676	WITHOUT_CLASSIFICATION	1.6617700323884017E-6	IMPLEMENTATION
initialize the set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999958335813474	WITHOUT_CLASSIFICATION	4.166418652588605E-6	IMPLEMENTATION
ie. no select clause	WITHOUT_CLASSIFICATION	0.9999784345652631	WITHOUT_CLASSIFICATION	2.1565434736838394E-5	IMPLEMENTATION
there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999902803852575	WITHOUT_CLASSIFICATION	9.71961474248217E-6	IMPLEMENTATION
return the concrete type or the underlying type if a concrete type was not specified	WITHOUT_CLASSIFICATION	0.9999968389318764	WITHOUT_CLASSIFICATION	3.1610681236857754E-6	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9999639883435582	WITHOUT_CLASSIFICATION	3.6011656441890955E-5	IMPLEMENTATION
q.addcollection(collectionname collectionrole)	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9955603422941562	WITHOUT_CLASSIFICATION	0.0044396577058438335	IMPLEMENTATION
can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999770231986022	WITHOUT_CLASSIFICATION	2.297680139790615E-5	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9992844047929402	WITHOUT_CLASSIFICATION	7.155952070597706E-4	IMPLEMENTATION
this is the legacy behaviour for hql queries	WITHOUT_CLASSIFICATION	0.9999950016844171	WITHOUT_CLASSIFICATION	4.998315582859077E-6	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.99900925970654	WITHOUT_CLASSIFICATION	9.9074029346006E-4	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.99900925970654	WITHOUT_CLASSIFICATION	9.9074029346006E-4	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces early exit!!!!	WITHOUT_CLASSIFICATION	0.9999951067497398	WITHOUT_CLASSIFICATION	4.893250260249938E-6	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.99900925970654	WITHOUT_CLASSIFICATION	9.9074029346006E-4	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.99900925970654	WITHOUT_CLASSIFICATION	9.9074029346006E-4	IMPLEMENTATION
need this since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.999894752718119	WITHOUT_CLASSIFICATION	1.0524728188102506E-4	IMPLEMENTATION
tokens that close a sub expression tokens that open a sub expression tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999735242423954	WITHOUT_CLASSIFICATION	2.647575760468641E-5	IMPLEMENTATION
expressionterminators.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999735646867179	WITHOUT_CLASSIFICATION	2.6435313281965802E-5	IMPLEMENTATION
expressionopeners.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999735646867179	WITHOUT_CLASSIFICATION	2.6435313281965802E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource) early exit!!!!	WITHOUT_CLASSIFICATION	0.9998918286399249	WITHOUT_CLASSIFICATION	1.0817136007517006E-4	IMPLEMENTATION
otherwise a trim-specification and/or a trim-character have been specified we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character (what is to be trimmed off?) the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9940404099501852	WITHOUT_CLASSIFICATION	0.005959590049814789	IMPLEMENTATION
inside a between and expression	WITHOUT_CLASSIFICATION	0.9999178686262246	WITHOUT_CLASSIFICATION	8.21313737755109E-5	IMPLEMENTATION
were an odd or even number of nots encountered the join string built up by compound paths inside this expression a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999999272702645	WITHOUT_CLASSIFICATION	7.272973555495921E-8	IMPLEMENTATION
ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999659940103993	WITHOUT_CLASSIFICATION	3.400598960062568E-5	IMPLEMENTATION
cope with []	WITHOUT_CLASSIFICATION	0.9999559992532859	WITHOUT_CLASSIFICATION	4.4000746713965704E-5	IMPLEMENTATION
cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9997523086555407	WITHOUT_CLASSIFICATION	2.476913444593098E-4	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999880092775026	WITHOUT_CLASSIFICATION	1.1990722497393781E-5	IMPLEMENTATION
cope with a subselect	WITHOUT_CLASSIFICATION	0.9999708422056407	WITHOUT_CLASSIFICATION	2.9157794359220623E-5	IMPLEMENTATION
cope with special cases of and not ()	WITHOUT_CLASSIFICATION	0.9997384954112339	WITHOUT_CLASSIFICATION	2.615045887661001E-4	IMPLEMENTATION
close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999985979049973	WITHOUT_CLASSIFICATION	1.4020950027408215E-6	IMPLEMENTATION
take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999944648490057	WITHOUT_CLASSIFICATION	5.5351509944009065E-6	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999967993070215	WITHOUT_CLASSIFICATION	3.200692978543573E-6	IMPLEMENTATION
process a token mapping oo path expressions to sql expressions	WITHOUT_CLASSIFICATION	0.9999878762972997	WITHOUT_CLASSIFICATION	1.2123702700281317E-5	IMPLEMENTATION
open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999727804379889	WITHOUT_CLASSIFICATION	2.721956201115376E-5	IMPLEMENTATION
cope with special cases of and not )	WITHOUT_CLASSIFICATION	0.9962559912305486	WITHOUT_CLASSIFICATION	0.0037440087694514284	IMPLEMENTATION
the next one up must also be	WITHOUT_CLASSIFICATION	0.9999575680584254	WITHOUT_CLASSIFICATION	4.243194157458187E-5	IMPLEMENTATION
add any joins	WITHOUT_CLASSIFICATION	0.9999733010744453	WITHOUT_CLASSIFICATION	2.6698925554777373E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999967993070215	WITHOUT_CLASSIFICATION	3.200692978543573E-6	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9999978504059479	WITHOUT_CLASSIFICATION	2.1495940519817055E-6	IMPLEMENTATION
path expression	WITHOUT_CLASSIFICATION	0.9997397080180571	WITHOUT_CLASSIFICATION	2.602919819429325E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999765735851149	WITHOUT_CLASSIFICATION	2.3426414885092104E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998744843979136	WITHOUT_CLASSIFICATION	1.2551560208638529E-4	IMPLEMENTATION
anything else	WITHOUT_CLASSIFICATION	0.9999126882200845	WITHOUT_CLASSIFICATION	8.731177991546349E-5	IMPLEMENTATION
the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9998842344566647	WITHOUT_CLASSIFICATION	1.1576554333521664E-4	IMPLEMENTATION
careful with this!	WITHOUT_CLASSIFICATION	0.9998840756361502	WITHOUT_CLASSIFICATION	1.1592436384967884E-4	IMPLEMENTATION
the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999301260818373	WITHOUT_CLASSIFICATION	6.987391816270014E-5	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.99998648336735	WITHOUT_CLASSIFICATION	1.3516632650009592E-5	IMPLEMENTATION
notice no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999999217855778	WITHOUT_CLASSIFICATION	7.82144221770182E-8	IMPLEMENTATION
cannot instantiate	WITHOUT_CLASSIFICATION	0.9999958313732407	WITHOUT_CLASSIFICATION	4.168626759352674E-6	IMPLEMENTATION
start by looking for hql keywords	WITHOUT_CLASSIFICATION	0.9999991344714643	WITHOUT_CLASSIFICATION	8.655285357725436E-7	IMPLEMENTATION
inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999747210199461	WITHOUT_CLASSIFICATION	2.5278980053890125E-5	IMPLEMENTATION
'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9998265937327312	WITHOUT_CLASSIFICATION	1.7340626726880453E-4	IMPLEMENTATION
now anything that is not a hql keyword	WITHOUT_CLASSIFICATION	0.9987581637831713	WITHOUT_CLASSIFICATION	0.0012418362168286363	IMPLEMENTATION
process the "old" hql style where aliases appear _first_ ie. using the in or in class constructions	WITHOUT_CLASSIFICATION	0.9999994817395894	WITHOUT_CLASSIFICATION	5.182604105277212E-7	IMPLEMENTATION
treat it as a classname	WITHOUT_CLASSIFICATION	0.9998848729707567	WITHOUT_CLASSIFICATION	1.1512702924328661E-4	IMPLEMENTATION
treat it as a path expression	WITHOUT_CLASSIFICATION	0.9991472798316228	WITHOUT_CLASSIFICATION	8.52720168377252E-4	IMPLEMENTATION
starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.99999884041893	WITHOUT_CLASSIFICATION	1.1595810701232946E-6	IMPLEMENTATION
starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9998686640765206	WITHOUT_CLASSIFICATION	1.313359234793639E-4	IMPLEMENTATION
allow odmg oql style from person p p.cars c	WITHOUT_CLASSIFICATION	0.9999659428435881	WITHOUT_CLASSIFICATION	3.405715641185509E-5	IMPLEMENTATION
handle quoted strings	WITHOUT_CLASSIFICATION	0.9993774551213815	WITHOUT_CLASSIFICATION	6.22544878618452E-4	IMPLEMENTATION
object insertions updates and deletions have list semantics because they must happen in the right order so as to respect referential integrity	WITHOUT_CLASSIFICATION	0.9999998750178205	WITHOUT_CLASSIFICATION	1.249821794464114E-7	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.99998648336735	WITHOUT_CLASSIFICATION	1.3516632650009592E-5	IMPLEMENTATION
ignore whitespace	WITHOUT_CLASSIFICATION	0.9999306673006713	WITHOUT_CLASSIFICATION	6.933269932875874E-5	IMPLEMENTATION
do replacements	WITHOUT_CLASSIFICATION	0.9999292731437758	WITHOUT_CLASSIFICATION	7.072685622423412E-5	IMPLEMENTATION
handle hql2 collection syntax	WITHOUT_CLASSIFICATION	0.9997099462178748	WITHOUT_CLASSIFICATION	2.9005378212519265E-4	IMPLEMENTATION
uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999892165651936	WITHOUT_CLASSIFICATION	1.0783434806445358E-5	IMPLEMENTATION
abstractselectingdelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999779998459584	WITHOUT_CLASSIFICATION	2.200015404171506E-5	IMPLEMENTATION
hilo params	WITHOUT_CLASSIFICATION	0.9999643295011786	WITHOUT_CLASSIFICATION	3.5670498821249953E-5	IMPLEMENTATION
sql = query	WITHOUT_CLASSIFICATION	0.9999790912684501	WITHOUT_CLASSIFICATION	2.090873154997104E-5	IMPLEMENTATION
performance opt	WITHOUT_CLASSIFICATION	0.9992325544707955	WITHOUT_CLASSIFICATION	7.67445529204449E-4	IMPLEMENTATION
sql = update	WITHOUT_CLASSIFICATION	0.9999917815232932	WITHOUT_CLASSIFICATION	8.218476706861438E-6	IMPLEMENTATION
hilo config	WITHOUT_CLASSIFICATION	0.9997651184508449	WITHOUT_CLASSIFICATION	2.3488154915513403E-4	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999822527050433	WITHOUT_CLASSIFICATION	1.7747294956739003E-5	IMPLEMENTATION
don't allow comments on these insert statements as comments totally blow up the oracle getgeneratedkeys "support" (	WITHOUT_CLASSIFICATION	0.9999672618706917	WITHOUT_CLASSIFICATION	3.2738129308309364E-5	IMPLEMENTATION
abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999999115040341	WITHOUT_CLASSIFICATION	8.849596588942836E-8	IMPLEMENTATION
throw new identifiergenerationexception("save associated object first or disable cascade for inverse association")	WITHOUT_CLASSIFICATION	0.9999962288294801	WITHOUT_CLASSIFICATION	3.771170519871581E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9994162704336691	WITHOUT_CLASSIFICATION	5.83729566330941E-4	IMPLEMENTATION
do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999243861920492	WITHOUT_CLASSIFICATION	7.561380795082003E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999988108963116	WITHOUT_CLASSIFICATION	1.1891036884240897E-6	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999822527050433	WITHOUT_CLASSIFICATION	1.7747294956739003E-5	IMPLEMENTATION
do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999317387172956	WITHOUT_CLASSIFICATION	6.826128270445734E-5	IMPLEMENTATION
column and table should be renamed but it would break the public api	WITHOUT_CLASSIFICATION	0.9999917840042318	WITHOUT_CLASSIFICATION	8.215995768073781E-6	IMPLEMENTATION
loaded entity instances by entitykey	WITHOUT_CLASSIFICATION	0.9999920443204152	WITHOUT_CLASSIFICATION	7.955679584714987E-6	IMPLEMENTATION
if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999937576189285	WITHOUT_CLASSIFICATION	6.24238107151126E-6	IMPLEMENTATION
the default	WITHOUT_CLASSIFICATION	0.9999962456599188	WITHOUT_CLASSIFICATION	3.7543400810167427E-6	IMPLEMENTATION
unfortunately not really safe to normalize this to 1 as an initial value like we do the others because we would not be able to control this if we are using a sequence	WITHOUT_CLASSIFICATION	0.9996176331811876	WITHOUT_CLASSIFICATION	3.8236681881241135E-4	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9994162704336691	WITHOUT_CLASSIFICATION	5.83729566330941E-4	IMPLEMENTATION
identity map of collectionentry instances by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999947990972505	WITHOUT_CLASSIFICATION	5.200902749428115E-6	IMPLEMENTATION
general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999919398096826	WITHOUT_CLASSIFICATION	8.060190317377223E-6	IMPLEMENTATION
table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999957910738565	WITHOUT_CLASSIFICATION	4.20892614350124E-5	IMPLEMENTATION
configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9570024387850136	WITHOUT_CLASSIFICATION	0.04299756121498647	IMPLEMENTATION
identifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998701781870314	WITHOUT_CLASSIFICATION	1.2982181296865668E-4	IMPLEMENTATION
persistentidentifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998701781870314	WITHOUT_CLASSIFICATION	1.2982181296865668E-4	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.99999781631657	WITHOUT_CLASSIFICATION	2.183683429926631E-6	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.99999781631657	WITHOUT_CLASSIFICATION	2.183683429926631E-6	IMPLEMENTATION
fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999964439396644	WITHOUT_CLASSIFICATION	3.5560603356551825E-6	IMPLEMENTATION
we just hit the last position	WITHOUT_CLASSIFICATION	0.9999974586211712	WITHOUT_CLASSIFICATION	2.54137882875061E-6	IMPLEMENTATION
scroll ahead	WITHOUT_CLASSIFICATION	0.9999750232783938	WITHOUT_CLASSIFICATION	2.497672160617048E-5	IMPLEMENTATION
scroll backward	WITHOUT_CLASSIFICATION	0.9999378705614285	WITHOUT_CLASSIFICATION	6.21294385715395E-5	IMPLEMENTATION
we have not yet hit the last result	WITHOUT_CLASSIFICATION	0.9968144319208515	WITHOUT_CLASSIFICATION	0.00318556807914854	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999639123011336	WITHOUT_CLASSIFICATION	3.608769886641728E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999929129846229	WITHOUT_CLASSIFICATION	7.08701537704991E-6	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999804053148089	WITHOUT_CLASSIFICATION	1.959468519111561E-5	IMPLEMENTATION
do this when all the properties are updateable since there is a certain likelihood that the information will already be snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999999772112097	WITHOUT_CLASSIFICATION	2.2788790242256822E-8	IMPLEMENTATION
inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999673640304413	WITHOUT_CLASSIFICATION	3.263596955872567E-5	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999639123011336	WITHOUT_CLASSIFICATION	3.608769886641728E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999929129846229	WITHOUT_CLASSIFICATION	7.08701537704991E-6	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999804053148089	WITHOUT_CLASSIFICATION	1.959468519111561E-5	IMPLEMENTATION
caches	WITHOUT_CLASSIFICATION	0.9999870137997943	WITHOUT_CLASSIFICATION	1.298620020579734E-5	IMPLEMENTATION
generators	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
cache region is defined by the root-class in the hierarchy	WITHOUT_CLASSIFICATION	0.9999995771307987	WITHOUT_CLASSIFICATION	4.2286920129932285E-7	IMPLEMENTATION
check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.999998654075435	WITHOUT_CLASSIFICATION	1.3459245650308163E-6	IMPLEMENTATION
after all persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.999996811122853	WITHOUT_CLASSIFICATION	3.188877147023151E-6	IMPLEMENTATION
if we get here it is possible that we have a proxy 'in the way' of the merge map resolution note decided to put this here rather than in the above loop as i was nervous about the performance of the loop-in-loop especially considering this is far more likely the 'edge case'	WITHOUT_CLASSIFICATION	0.9999967523081765	WITHOUT_CLASSIFICATION	3.247691823551669E-6	IMPLEMENTATION
jndi + serialization	WITHOUT_CLASSIFICATION	0.9999074573362655	WITHOUT_CLASSIFICATION	9.254266373449854E-5	IMPLEMENTATION
checking for named queries	WITHOUT_CLASSIFICATION	0.9999947148456422	WITHOUT_CLASSIFICATION	5.285154357871895E-6	IMPLEMENTATION
stats	WITHOUT_CLASSIFICATION	0.999991810327614	WITHOUT_CLASSIFICATION	8.189672386073207E-6	IMPLEMENTATION
entitynotfounddelegate	WITHOUT_CLASSIFICATION	0.9999783961931803	WITHOUT_CLASSIFICATION	2.160380681964478E-5	IMPLEMENTATION
check named hql queries	WITHOUT_CLASSIFICATION	0.9999571495959351	WITHOUT_CLASSIFICATION	4.285040406504756E-5	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999851595906882	WITHOUT_CLASSIFICATION	1.4840409311780118E-5	IMPLEMENTATION
prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9999333213971558	WITHOUT_CLASSIFICATION	6.667860284418161E-5	IMPLEMENTATION
from javax.naming.referenceable	WITHOUT_CLASSIFICATION	0.9999928928653421	WITHOUT_CLASSIFICATION	7.107134657866794E-6	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999966132635096	WITHOUT_CLASSIFICATION	3.3867364905026693E-6	IMPLEMENTATION
for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999850916758811	WITHOUT_CLASSIFICATION	1.4908324118863381E-5	IMPLEMENTATION
test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.999999742027743	WITHOUT_CLASSIFICATION	2.5797225701942554E-7	IMPLEMENTATION
note early exit	WITHOUT_CLASSIFICATION	0.9999438055949414	WITHOUT_CLASSIFICATION	5.619440505849234E-5	IMPLEMENTATION
for backward-compatability	WITHOUT_CLASSIFICATION	0.999990528779855	WITHOUT_CLASSIFICATION	9.471220145058154E-6	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.9998613670230919	WITHOUT_CLASSIFICATION	1.3863297690806044E-4	IMPLEMENTATION
to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999993878662529	WITHOUT_CLASSIFICATION	6.121337472432213E-7	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999962244675074	WITHOUT_CLASSIFICATION	3.775532492523401E-6	IMPLEMENTATION
must add to jndi _after_ adding to hashmaps because some jndi servers use serialization	WITHOUT_CLASSIFICATION	0.9984214343868576	WITHOUT_CLASSIFICATION	0.0015785656131424312	IMPLEMENTATION
make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.999862796801355	WITHOUT_CLASSIFICATION	1.3720319864486273E-4	IMPLEMENTATION
for each of the defined parameters make sure its value has been set	WITHOUT_CLASSIFICATION	0.9999942929982109	WITHOUT_CLASSIFICATION	5.707001789196942E-6	IMPLEMENTATION
we never need to apply locks to the sql	WITHOUT_CLASSIFICATION	0.9953711406682559	WITHOUT_CLASSIFICATION	0.004628859331744042	IMPLEMENTATION
inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999740753091166	WITHOUT_CLASSIFICATION	2.5924690883383887E-5	IMPLEMENTATION
deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999735158891148	WITHOUT_CLASSIFICATION	2.6484110885148847E-5	IMPLEMENTATION
during deserialization we need to reconnect all proxies and collections to this session as well as the entityentry and collectionentry instances these associations are transient because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.999988397922897	WITHOUT_CLASSIFICATION	1.1602077102997359E-5	IMPLEMENTATION
updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999714090784806	WITHOUT_CLASSIFICATION	2.8590921519442696E-5	IMPLEMENTATION
loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999871191171557	WITHOUT_CLASSIFICATION	1.2880882844408285E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999949860640642	WITHOUT_CLASSIFICATION	5.013935935729232E-6	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999949860640642	WITHOUT_CLASSIFICATION	5.013935935729232E-6	IMPLEMENTATION
first try to load it from the temp pc associated to this ss	WITHOUT_CLASSIFICATION	0.9999643159204713	WITHOUT_CLASSIFICATION	3.5684079528756416E-5	IMPLEMENTATION
if the metadata allowed proxy creation and caller did not request forceful eager loading generate a proxy	WITHOUT_CLASSIFICATION	0.9997104192631114	WITHOUT_CLASSIFICATION	2.8958073688850584E-4	IMPLEMENTATION
otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9996084361230402	WITHOUT_CLASSIFICATION	3.9156387695984913E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999977241136305	WITHOUT_CLASSIFICATION	2.2758863695107906E-6	IMPLEMENTATION
no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.999875707997976	WITHOUT_CLASSIFICATION	1.2429200202408895E-4	IMPLEMENTATION
after setting values to object entitymode	WITHOUT_CLASSIFICATION	0.9999996200581567	WITHOUT_CLASSIFICATION	3.7994184336296263E-7	IMPLEMENTATION
for ejb3	WITHOUT_CLASSIFICATION	0.9999943039621411	WITHOUT_CLASSIFICATION	5.696037858918932E-6	IMPLEMENTATION
just ignore	WITHOUT_CLASSIFICATION	0.9999638411263704	WITHOUT_CLASSIFICATION	3.615887362961867E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9998807438766276	WITHOUT_CLASSIFICATION	1.192561233724424E-4	IMPLEMENTATION
saveorupdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407324825756	WITHOUT_CLASSIFICATION	5.9267517424325927E-5	IMPLEMENTATION
update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407381001426	WITHOUT_CLASSIFICATION	5.926189985743762E-5	IMPLEMENTATION
lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407324825756	WITHOUT_CLASSIFICATION	5.9267517424325927E-5	IMPLEMENTATION
persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407324825756	WITHOUT_CLASSIFICATION	5.9267517424325927E-5	IMPLEMENTATION
persistonflush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407324825756	WITHOUT_CLASSIFICATION	5.9267517424325927E-5	IMPLEMENTATION
merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407324825756	WITHOUT_CLASSIFICATION	5.9267517424325927E-5	IMPLEMENTATION
saveorupdatecopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407324825756	WITHOUT_CLASSIFICATION	5.9267517424325927E-5	IMPLEMENTATION
delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407324825756	WITHOUT_CLASSIFICATION	5.9267517424325927E-5	IMPLEMENTATION
load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407324825756	WITHOUT_CLASSIFICATION	5.9267517424325927E-5	IMPLEMENTATION
refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407324825756	WITHOUT_CLASSIFICATION	5.9267517424325927E-5	IMPLEMENTATION
replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407324825756	WITHOUT_CLASSIFICATION	5.9267517424325927E-5	IMPLEMENTATION
do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9948079423945306	WITHOUT_CLASSIFICATION	0.005192057605469312	IMPLEMENTATION
this is an internal error of some sort	WITHOUT_CLASSIFICATION	0.9998352303465957	WITHOUT_CLASSIFICATION	1.647696534043554E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999973688517185	WITHOUT_CLASSIFICATION	2.6311482815860555E-6	IMPLEMENTATION
only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999825260341906	WITHOUT_CLASSIFICATION	1.747396580940143E-5	IMPLEMENTATION
if it was previously unreferenced we need to flush in order to get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999999890602376	WITHOUT_CLASSIFICATION	1.0939762379524988E-8	IMPLEMENTATION
not for internal use	WITHOUT_CLASSIFICATION	0.998220668174048	WITHOUT_CLASSIFICATION	0.0017793318259520779	IMPLEMENTATION
otherwise we only need to flush if there are in-memory changes to the queried tables	WITHOUT_CLASSIFICATION	0.9999363888766755	WITHOUT_CLASSIFICATION	6.361112332459215E-5	IMPLEMENTATION
might need to run a different filter entirely after the flush because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9704655085012618	WITHOUT_CLASSIFICATION	0.029534491498738262	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999973688517185	WITHOUT_CLASSIFICATION	2.6311482815860555E-6	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999973688517185	WITHOUT_CLASSIFICATION	2.6311482815860555E-6	IMPLEMENTATION
if it is initialized see if the underlying instance is contained since we need to account for the fact that it might have been evicted	WITHOUT_CLASSIFICATION	0.9999946552123237	WITHOUT_CLASSIFICATION	5.344787676299163E-6	IMPLEMENTATION
basically just an adapted copy of find(criteriaimpl)	WITHOUT_CLASSIFICATION	0.9999865918582204	WITHOUT_CLASSIFICATION	1.3408141779617404E-5	IMPLEMENTATION
it is possible for this method to be called during flush processing so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9996237048632569	WITHOUT_CLASSIFICATION	3.762951367431038E-4	IMPLEMENTATION
nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999941577345802	WITHOUT_CLASSIFICATION	5.84226541980023E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999688338482335	WITHOUT_CLASSIFICATION	3.116615176653375E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.9998613670230919	WITHOUT_CLASSIFICATION	1.3863297690806044E-4	IMPLEMENTATION
we need to writeobject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9998860582636253	WITHOUT_CLASSIFICATION	1.1394173637480976E-4	IMPLEMENTATION
the old-time stand-by	WITHOUT_CLASSIFICATION	0.9999853518228525	WITHOUT_CLASSIFICATION	1.4648177147404043E-5	IMPLEMENTATION
parameter bind values	WITHOUT_CLASSIFICATION	0.9999992203921532	WITHOUT_CLASSIFICATION	7.796078467300998E-7	IMPLEMENTATION
parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999615892375872	WITHOUT_CLASSIFICATION	3.8410762412891324E-5	IMPLEMENTATION
prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.999998440733997	WITHOUT_CLASSIFICATION	1.5592660030373206E-6	IMPLEMENTATION
execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999979161317853	WITHOUT_CLASSIFICATION	2.0838682146969844E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999770705861388	WITHOUT_CLASSIFICATION	2.2929413861090946E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999770705861388	WITHOUT_CLASSIFICATION	2.2929413861090946E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999770705861388	WITHOUT_CLASSIFICATION	2.2929413861090946E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999770705861388	WITHOUT_CLASSIFICATION	2.2929413861090946E-5	IMPLEMENTATION
fieldinterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999779998459584	WITHOUT_CLASSIFICATION	2.200015404171506E-5	IMPLEMENTATION
subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999745318470459	WITHOUT_CLASSIFICATION	2.5468152954138722E-5	IMPLEMENTATION
let's assume that there is only one lazy fetch group for now!	WITHOUT_CLASSIFICATION	0.9999841709768561	WITHOUT_CLASSIFICATION	1.582902314390131E-5	IMPLEMENTATION
fieldhandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999779998459584	WITHOUT_CLASSIFICATION	2.200015404171506E-5	IMPLEMENTATION
should not need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.998531044298553	WITHOUT_CLASSIFICATION	0.001468955701447101	IMPLEMENTATION
should probably no-op commit/rollback here at least in jta scenarios	WITHOUT_CLASSIFICATION	0.9999934316514827	WITHOUT_CLASSIFICATION	6.568348517371245E-6	IMPLEMENTATION
base expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999932939463907	WITHOUT_CLASSIFICATION	6.706053609381085E-6	IMPLEMENTATION
various expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999678530699875	WITHOUT_CLASSIFICATION	3.214693001244843E-5	IMPLEMENTATION
explicitly perform no checking	WITHOUT_CLASSIFICATION	0.9999804993941236	WITHOUT_CLASSIFICATION	1.9500605876400967E-5	IMPLEMENTATION
used from testsuite	WITHOUT_CLASSIFICATION	0.9999950216795899	WITHOUT_CLASSIFICATION	4.978320410119844E-6	IMPLEMENTATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999057655894	WITHOUT_CLASSIFICATION	9.42344106199857E-8	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999440484270439	WITHOUT_CLASSIFICATION	5.5951572956190454E-5	IMPLEMENTATION
register synch stats.connect()	WITHOUT_CLASSIFICATION	0.9999810856234032	WITHOUT_CLASSIFICATION	1.8914376596802458E-5	IMPLEMENTATION
noncritical swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999771252027507	WITHOUT_CLASSIFICATION	2.2874797249304316E-5	IMPLEMENTATION
calls executebatch()	WITHOUT_CLASSIFICATION	0.9999302015268868	WITHOUT_CLASSIFICATION	6.979847311314253E-5	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9999517699835542	WITHOUT_CLASSIFICATION	4.8230016445791544E-5	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9999517699835542	WITHOUT_CLASSIFICATION	4.8230016445791544E-5	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9999517699835542	WITHOUT_CLASSIFICATION	4.8230016445791544E-5	IMPLEMENTATION
sybase driver (jconnect) throwing npe here in certain cases but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999991608198343	WITHOUT_CLASSIFICATION	8.39180165669706E-7	IMPLEMENTATION
see explanation above	WITHOUT_CLASSIFICATION	0.9999770316608237	WITHOUT_CLASSIFICATION	2.2968339176285427E-5	IMPLEMENTATION
if we are in the process of releasing no sense checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999999939893632	WITHOUT_CLASSIFICATION	6.0106366633288674E-9	IMPLEMENTATION
early exit!!!!	WITHOUT_CLASSIFICATION	0.9999780262419115	WITHOUT_CLASSIFICATION	2.197375808852748E-5	IMPLEMENTATION
resultset impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999978543101425	WITHOUT_CLASSIFICATION	2.1456898575060675E-5	IMPLEMENTATION
resultset impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999978543101425	WITHOUT_CLASSIFICATION	2.1456898575060675E-5	IMPLEMENTATION
refer to comment in statefulpersistencecontext.addcollection()	WITHOUT_CLASSIFICATION	0.9999907977060706	WITHOUT_CLASSIFICATION	9.202293929528243E-6	IMPLEMENTATION
connectionmanager.callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998701781870314	WITHOUT_CLASSIFICATION	1.2982181296865668E-4	IMPLEMENTATION
note success = false because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9978165418196668	WITHOUT_CLASSIFICATION	0.0021834581803331214	IMPLEMENTATION
we already have a callback registered either a local (org.hibernate.transaction) transaction has accepted callback responsibilities or we have previously registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999985835204643	WITHOUT_CLASSIFICATION	1.416479535642914E-6	IMPLEMENTATION
the configured transaction-factory says it only supports local callback mode so no sense attempting to register a jta synchronization	WITHOUT_CLASSIFICATION	0.9998804865479148	WITHOUT_CLASSIFICATION	1.1951345208525165E-4	IMPLEMENTATION
transactions marked for rollback-only cause some tm impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9973605841707279	WITHOUT_CLASSIFICATION	0.0026394158292720998	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999935724076228	WITHOUT_CLASSIFICATION	6.427592377205259E-5	IMPLEMENTATION
postinitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999964695600683	WITHOUT_CLASSIFICATION	3.5304399316121577E-6	IMPLEMENTATION
cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999701246772608	WITHOUT_CLASSIFICATION	2.987532273925681E-5	IMPLEMENTATION
todo for 4.0 private static final logger log = loggerfactory.getlogger( sqlstatementlogger.class ) this is the legacy logging 'category'	WITHOUT_CLASSIFICATION	0.984701213320268	WITHOUT_CLASSIFICATION	0.015298786679731852	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999691958208059	WITHOUT_CLASSIFICATION	3.0804179194052234E-5	IMPLEMENTATION
don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999794123314634	WITHOUT_CLASSIFICATION	2.058766853662062E-5	IMPLEMENTATION
don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999916491925422	WITHOUT_CLASSIFICATION	8.350807457772604E-6	IMPLEMENTATION
position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999855779205599	WITHOUT_CLASSIFICATION	1.44220794402546E-5	IMPLEMENTATION
sequentially read the result set in reverse until we recognize a change in the key value. at that point we are pointed at the last physical sequential row for the logical row in which we are interested in processing	WITHOUT_CLASSIFICATION	0.999999999817741	WITHOUT_CLASSIFICATION	1.8225892848233995E-10	IMPLEMENTATION
read backwards until we read past the first physical sequential row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999999785869756	WITHOUT_CLASSIFICATION	2.1413024453413162E-8	IMPLEMENTATION
finally read ahead one row to position result set cursor at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999999970950963	WITHOUT_CLASSIFICATION	2.9049037139359027E-9	IMPLEMENTATION
now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.999999874131755	WITHOUT_CLASSIFICATION	1.2586824511420155E-7	IMPLEMENTATION
force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9998669550685095	WITHOUT_CLASSIFICATION	1.3304493149054919E-4	IMPLEMENTATION
this is equivalent to the old behavior	WITHOUT_CLASSIFICATION	0.9999688392386719	WITHOUT_CLASSIFICATION	3.116076132822115E-5	IMPLEMENTATION
if null owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.999999889910948	WITHOUT_CLASSIFICATION	1.1008905185931123E-7	IMPLEMENTATION
final string querystring	WITHOUT_CLASSIFICATION	0.9999953917432894	WITHOUT_CLASSIFICATION	4.608256710575145E-6	IMPLEMENTATION
if it was a reference to self don't need to nullify unless we are using native id generation in which case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999999836123017	WITHOUT_CLASSIFICATION	1.6387698280091608E-8	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999936678209665	WITHOUT_CLASSIFICATION	6.3321790333683354E-6	IMPLEMENTATION
in an effort to avoid concurrent-modification-exceptions (from potential recursive calls back through here as a result of the eventual call to persistentcollection#endread) we scan the internal loadingcollections map for matches and store those matches in a temp collection. the temp collection is then used to "drive" the #endread processing.	WITHOUT_CLASSIFICATION	0.9999999490098705	WITHOUT_CLASSIFICATION	5.099012952869306E-8	IMPLEMENTATION
we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999836877889502	WITHOUT_CLASSIFICATION	1.6312211049759902E-5	IMPLEMENTATION
can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999926166561807	WITHOUT_CLASSIFICATION	7.383343819367952E-6	IMPLEMENTATION
first we need to suspend any current jta transaction and obtain a jdbc connection	WITHOUT_CLASSIFICATION	0.9889397409580782	WITHOUT_CLASSIFICATION	0.01106025904192181	IMPLEMENTATION
getresultlist(results)	WITHOUT_CLASSIFICATION	0.9999783961931803	WITHOUT_CLASSIFICATION	2.160380681964478E-5	IMPLEMENTATION
if we only returned one entity query by key is more efficient	WITHOUT_CLASSIFICATION	0.9999990304589637	WITHOUT_CLASSIFICATION	9.695410363285793E-7	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9991905084771003	WITHOUT_CLASSIFICATION	8.094915228997191E-4	IMPLEMENTATION
handle empty collection	WITHOUT_CLASSIFICATION	0.995273377853217	WITHOUT_CLASSIFICATION	0.004726622146782939	IMPLEMENTATION
else no collection element but also no owner	WITHOUT_CLASSIFICATION	0.9999991745984312	WITHOUT_CLASSIFICATION	8.254015687544288E-7	IMPLEMENTATION
handle empty collections	WITHOUT_CLASSIFICATION	0.9963585298322609	WITHOUT_CLASSIFICATION	0.0036414701677390236	IMPLEMENTATION
else this is not a collection initializer (and empty collections will be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999600783120818	WITHOUT_CLASSIFICATION	3.992168791832023E-5	IMPLEMENTATION
validate() instances of validatable	WITHOUT_CLASSIFICATION	0.9999769729863698	WITHOUT_CLASSIFICATION	2.3027013630228007E-5	IMPLEMENTATION
if we know there is exactly 1 row we can skip. it would be great if we could _always_ skip this it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9908788662856928	WITHOUT_CLASSIFICATION	0.009121133714307164	IMPLEMENTATION
remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999968131978013	WITHOUT_CLASSIFICATION	3.18680219877781E-6	IMPLEMENTATION
null version means the object is in the process of being loaded somewhere else in the resultset	WITHOUT_CLASSIFICATION	0.9999999978137917	WITHOUT_CLASSIFICATION	2.1862083191474444E-9	IMPLEMENTATION
problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.999988282086935	WITHOUT_CLASSIFICATION	1.1717913064921434E-5	IMPLEMENTATION
use the id passed in	WITHOUT_CLASSIFICATION	0.9999854313808432	WITHOUT_CLASSIFICATION	1.4568619156794252E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999958970695582	WITHOUT_CLASSIFICATION	4.102930441843716E-6	IMPLEMENTATION
prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.999987557229923	WITHOUT_CLASSIFICATION	1.2442770076937551E-5	IMPLEMENTATION
no point doing this if none was requested	WITHOUT_CLASSIFICATION	0.9999999460512288	WITHOUT_CLASSIFICATION	5.39487711245193E-8	IMPLEMENTATION
if the object is already loaded return the loaded one	WITHOUT_CLASSIFICATION	0.9999998621473313	WITHOUT_CLASSIFICATION	1.378526686629073E-7	IMPLEMENTATION
its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9998672432116322	WITHOUT_CLASSIFICATION	1.3275678836779727E-4	IMPLEMENTATION
cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9995510936710383	WITHOUT_CLASSIFICATION	4.489063289617841E-4	IMPLEMENTATION
the load() which takes an entity does not pass an entityname	WITHOUT_CLASSIFICATION	0.999954707206112	WITHOUT_CLASSIFICATION	4.5292793888008405E-5	IMPLEMENTATION
we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999717955682975	WITHOUT_CLASSIFICATION	2.8204431702485828E-5	IMPLEMENTATION
look for a proxy	WITHOUT_CLASSIFICATION	0.9999805076420006	WITHOUT_CLASSIFICATION	1.9492357999309324E-5	IMPLEMENTATION
we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9997382025340819	WITHOUT_CLASSIFICATION	2.617974659181814E-4	IMPLEMENTATION
its the given optional object	WITHOUT_CLASSIFICATION	0.9999933032138908	WITHOUT_CLASSIFICATION	6.696786109311274E-6	IMPLEMENTATION
instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999898852411437	WITHOUT_CLASSIFICATION	1.0114758856215249E-5	IMPLEMENTATION
need to hydrate it.	WITHOUT_CLASSIFICATION	0.9991511521042539	WITHOUT_CLASSIFICATION	8.488478957460301E-4	IMPLEMENTATION
return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999959896057676	WITHOUT_CLASSIFICATION	4.01039423243154E-6	IMPLEMENTATION
will be ignored using the existing entry instead	WITHOUT_CLASSIFICATION	0.9999782559417141	WITHOUT_CLASSIFICATION	2.1744058285942533E-5	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999857348945	WITHOUT_CLASSIFICATION	1.4265105615180847E-8	IMPLEMENTATION
materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999891414313761	WITHOUT_CLASSIFICATION	1.0858568623917243E-5	IMPLEMENTATION
get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999966990326677	WITHOUT_CLASSIFICATION	3.300967332240906E-6	IMPLEMENTATION
ok in normal hibernate usage to delete a detached entity jpa however forbids it thus this is a hook for hem to affect this behavior	WITHOUT_CLASSIFICATION	0.9999986891117415	WITHOUT_CLASSIFICATION	1.310888258589134E-6	IMPLEMENTATION
the entry will be removed after the flush and will no longer override the stale snapshot this is now handled by removeentity() in entitydeleteaction persistencecontext.removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.9998764781760966	WITHOUT_CLASSIFICATION	1.235218239034812E-4	IMPLEMENTATION
addinitializedcollection(collection persister id)	WITHOUT_CLASSIFICATION	0.9999575109640298	WITHOUT_CLASSIFICATION	4.248903597016337E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999864616980313	WITHOUT_CLASSIFICATION	1.353830196881354E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999864616980313	WITHOUT_CLASSIFICATION	1.353830196881354E-5	IMPLEMENTATION
|| oj.getjoinable().consumescollectionalias()	WITHOUT_CLASSIFICATION	0.9999740176064086	WITHOUT_CLASSIFICATION	2.59823935914988E-5	IMPLEMENTATION
here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9873280746053097	WITHOUT_CLASSIFICATION	0.012671925394690248	IMPLEMENTATION
code to handle subclasses of topclass	WITHOUT_CLASSIFICATION	0.9999395060354277	WITHOUT_CLASSIFICATION	6.0493964572171835E-5	IMPLEMENTATION
woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999968543880938	WITHOUT_CLASSIFICATION	3.1456119062002947E-6	IMPLEMENTATION
we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999648245640868	WITHOUT_CLASSIFICATION	3.517543591335268E-5	IMPLEMENTATION
we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999700691841165	WITHOUT_CLASSIFICATION	2.993081588353749E-5	IMPLEMENTATION
synchronized to avoid multi-thread access issues defined as method synch to avoid potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999970196503657	WITHOUT_CLASSIFICATION	2.980349634348767E-6	IMPLEMENTATION
allows various loaders (ok mainly the queryloader ) to check whether scrolling of their result set should be allowed. by default it is allowed.	WITHOUT_CLASSIFICATION	0.9999999326181136	WITHOUT_CLASSIFICATION	6.73818863138886E-8	IMPLEMENTATION
before adding to collection!	WITHOUT_CLASSIFICATION	0.9999616066518366	WITHOUT_CLASSIFICATION	3.839334816324435E-5	IMPLEMENTATION
if the current depth is 0 the root thing being loaded is the many-to-many collection itself. here it is alright to use an inner join	WITHOUT_CLASSIFICATION	0.9999993060634285	WITHOUT_CLASSIFICATION	6.939365715609501E-7	IMPLEMENTATION
operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999445423464611	WITHOUT_CLASSIFICATION	5.545765353887551E-5	IMPLEMENTATION
simple because we can't have a one-to-one or a collection (or even a property-ref) in a composite-element	WITHOUT_CLASSIFICATION	0.9999978491990634	WITHOUT_CLASSIFICATION	2.1508009365123633E-6	IMPLEMENTATION
a composite key	WITHOUT_CLASSIFICATION	0.999962043687691	WITHOUT_CLASSIFICATION	3.795631230897344E-5	IMPLEMENTATION
if no batch use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999860731522433	WITHOUT_CLASSIFICATION	1.3926847756661563E-5	IMPLEMENTATION
it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999633177845962	WITHOUT_CLASSIFICATION	3.668221540377645E-5	IMPLEMENTATION
needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.6028712052857269	IMPLEMENTATION	0.3971287947142729	WITHOUT_CLASSIFICATION
&& etype.isreferencetoprimarykey()	WITHOUT_CLASSIFICATION	0.999973582048679	WITHOUT_CLASSIFICATION	2.6417951320944314E-5	IMPLEMENTATION
it might still need to apply a collection ordering based on a many-to-many defined order-by	WITHOUT_CLASSIFICATION	0.9360263356767037	WITHOUT_CLASSIFICATION	0.06397366432329628	IMPLEMENTATION
if a composite key use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching todo unnecessary for databases with ansi-style joins	WITHOUT_CLASSIFICATION	0.8192217993749789	WITHOUT_CLASSIFICATION	0.18077820062502115	IMPLEMENTATION
belong to other persister belong to other persister	WITHOUT_CLASSIFICATION	0.9999647833866404	WITHOUT_CLASSIFICATION	3.5216613359724694E-5	IMPLEMENTATION
we found it	WITHOUT_CLASSIFICATION	0.9999330344580243	WITHOUT_CLASSIFICATION	6.696554197562401E-5	IMPLEMENTATION
we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999971817337538	WITHOUT_CLASSIFICATION	2.8182662462245E-6	IMPLEMENTATION
disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9997966700044231	WITHOUT_CLASSIFICATION	2.033299955770518E-4	IMPLEMENTATION
note unlike all other loaders this one is not multithreaded or cacheable!!	WITHOUT_CLASSIFICATION	0.9977932116541952	WITHOUT_CLASSIFICATION	0.0022067883458049206	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9999664990496882	WITHOUT_CLASSIFICATION	3.3500950311866804E-5	IMPLEMENTATION
root entity comes last	WITHOUT_CLASSIFICATION	0.9999922371157908	WITHOUT_CLASSIFICATION	7.762884209105182E-6	IMPLEMENTATION
deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999438083174572	WITHOUT_CLASSIFICATION	5.619168254266665E-5	IMPLEMENTATION
alias may be null early exit	WITHOUT_CLASSIFICATION	0.9999903264200947	WITHOUT_CLASSIFICATION	9.673579905304844E-6	IMPLEMENTATION
if it is a compound path	WITHOUT_CLASSIFICATION	0.9999946174134573	WITHOUT_CLASSIFICATION	5.38258654278308E-6	IMPLEMENTATION
otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9998472644994757	WITHOUT_CLASSIFICATION	1.527355005242929E-4	IMPLEMENTATION
if its the root criteria we are done	WITHOUT_CLASSIFICATION	0.9999992760561671	WITHOUT_CLASSIFICATION	7.239438327970527E-7	IMPLEMENTATION
otherwise recurse	WITHOUT_CLASSIFICATION	0.9996200737857651	WITHOUT_CLASSIFICATION	3.7992621423493415E-4	IMPLEMENTATION
the criteria instance	WITHOUT_CLASSIFICATION	0.9999912590235523	WITHOUT_CLASSIFICATION	8.740976447571055E-6	IMPLEMENTATION
the entity name	WITHOUT_CLASSIFICATION	0.999986600735907	WITHOUT_CLASSIFICATION	1.339926409306992E-5	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.999897176616432	WITHOUT_CLASSIFICATION	1.028233835680375E-4	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.999897176616432	WITHOUT_CLASSIFICATION	1.028233835680375E-4	IMPLEMENTATION
it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999874267804917	WITHOUT_CLASSIFICATION	1.2573219508275182E-5	IMPLEMENTATION
should never happen i think	WITHOUT_CLASSIFICATION	0.9954093279286547	WITHOUT_CLASSIFICATION	0.004590672071345344	IMPLEMENTATION
detect discriminator values	WITHOUT_CLASSIFICATION	0.9999904842869527	WITHOUT_CLASSIFICATION	9.515713047289536E-6	IMPLEMENTATION
convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.999957594466055	WITHOUT_CLASSIFICATION	4.240553394502253E-5	IMPLEMENTATION
and the qualifier is not the alias of this criteria -> check to see if we belong to some criteria other than the one that created us	WITHOUT_CLASSIFICATION	0.9999667650210988	WITHOUT_CLASSIFICATION	3.323497890108192E-5	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999735875786775	WITHOUT_CLASSIFICATION	2.6412421322552446E-5	IMPLEMENTATION
otherwise this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999465964148834	WITHOUT_CLASSIFICATION	5.340358511668132E-5	IMPLEMENTATION
currently not cachable if autodiscover types is in effect (e.g. "select ")	WITHOUT_CLASSIFICATION	0.9999939259402104	WITHOUT_CLASSIFICATION	6.074059789586744E-6	IMPLEMENTATION
private final string[] sqlaliases private final string[] sqlaliassuffixes	WITHOUT_CLASSIFICATION	0.9999966388439564	WITHOUT_CLASSIFICATION	3.361156043473409E-6	IMPLEMENTATION
this is only needed (afaict) for resulttransformer processing	WITHOUT_CLASSIFICATION	0.942858959054663	WITHOUT_CLASSIFICATION	0.057141040945336986	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999999369722744	WITHOUT_CLASSIFICATION	6.302772558964803E-8	IMPLEMENTATION
build an array with indices equal to the total number of actual returns in the result hibernate will return for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.999999880099875	WITHOUT_CLASSIFICATION	1.1990012507677058E-7	IMPLEMENTATION
replace {.} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9973760909637983	WITHOUT_CLASSIFICATION	0.0026239090362017554	IMPLEMENTATION
no additional open braces found in the string append the rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999967415552837	WITHOUT_CLASSIFICATION	3.258444716143923E-6	IMPLEMENTATION
apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999265154193262	WITHOUT_CLASSIFICATION	7.348458067382332E-5	IMPLEMENTATION
it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.999994152445369	WITHOUT_CLASSIFICATION	5.8475546310100145E-6	IMPLEMENTATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.8625773775516116	IMPLEMENTATION	0.13742262244838854	WITHOUT_CLASSIFICATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.8625773775516116	IMPLEMENTATION	0.13742262244838854	WITHOUT_CLASSIFICATION
the current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999878000576934	WITHOUT_CLASSIFICATION	1.2199942306568964E-5	IMPLEMENTATION
it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.999998399559166	WITHOUT_CLASSIFICATION	1.600440834002807E-6	IMPLEMENTATION
possibly handle something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999172898689639	WITHOUT_CLASSIFICATION	8.271013103607802E-5	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999868425985917	WITHOUT_CLASSIFICATION	1.3157401408302315E-5	IMPLEMENTATION
private final list persisters = new arraylist()	WITHOUT_CLASSIFICATION	0.9999969478767577	WITHOUT_CLASSIFICATION	3.0521232422797663E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999440484270439	WITHOUT_CLASSIFICATION	5.5951572956190454E-5	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999917273796317	WITHOUT_CLASSIFICATION	8.272620368247886E-6	IMPLEMENTATION
private final list scalartypes = new arraylist() private final list scalarcolumnaliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999969478767577	WITHOUT_CLASSIFICATION	3.0521232422797663E-6	IMPLEMENTATION
now process the returns	WITHOUT_CLASSIFICATION	0.9999807738924543	WITHOUT_CLASSIFICATION	1.922610754565802E-5	IMPLEMENTATION
private list collectionowneraliases = new arraylist() private list collectionaliases = new arraylist() private list collectionpersisters = new arraylist() private list collectionresults = new arraylist()	WITHOUT_CLASSIFICATION	0.9999939330368159	WITHOUT_CLASSIFICATION	6.066963184033609E-6	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999804015579071	WITHOUT_CLASSIFICATION	1.9598442092953487E-5	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999804015579071	WITHOUT_CLASSIFICATION	1.9598442092953487E-5	IMPLEMENTATION
make sure the owner alias is known	WITHOUT_CLASSIFICATION	0.9999959074491837	WITHOUT_CLASSIFICATION	4.0925508163934755E-6	IMPLEMENTATION
first break down the returns into maps keyed by alias so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999923070156632	WITHOUT_CLASSIFICATION	7.692984336836275E-6	IMPLEMENTATION
scalarcolumnaliases.add( typereturn.getcolumnalias() ) scalartypes.add( typereturn.gettype() )	WITHOUT_CLASSIFICATION	0.9999650047747016	WITHOUT_CLASSIFICATION	3.49952252982754E-5	IMPLEMENTATION
if this return's alias has not been processed yet do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9985745569669063	WITHOUT_CLASSIFICATION	0.0014254430330936318	IMPLEMENTATION
collectionowneraliases.add( owneralias )	WITHOUT_CLASSIFICATION	0.9999650047747016	WITHOUT_CLASSIFICATION	3.49952252982754E-5	IMPLEMENTATION
for merging of versioned entities we consider the version having been changed only when 1) the two version values are different and 2) the target actually represents database state! this second condition is a special case which allows an entity to be merged during the same transaction (though during a seperate operation) in which it was originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999999999929953	WITHOUT_CLASSIFICATION	7.004734707984683E-12	IMPLEMENTATION
this is the second pass through on a merge op so here we limit the replacement to associations types (value types were already replaced during the first pass)	WITHOUT_CLASSIFICATION	0.9999732813603679	WITHOUT_CLASSIFICATION	2.6718639632149835E-5	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999668198801623	WITHOUT_CLASSIFICATION	3.318011983759286E-5	IMPLEMENTATION
cascade-save to collections after the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999986534921981	WITHOUT_CLASSIFICATION	1.3465078018839883E-6	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9997472675043035	WITHOUT_CLASSIFICATION	2.527324956965201E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999736509122581	WITHOUT_CLASSIFICATION	2.6349087741859146E-5	IMPLEMENTATION
currently only the hibernate-supplied dbtimestamptype is supported here	WITHOUT_CLASSIFICATION	0.9999990283645969	WITHOUT_CLASSIFICATION	9.716354031336395E-7	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999883174080758	WITHOUT_CLASSIFICATION	1.1682591924249537E-5	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9995927138856969	WITHOUT_CLASSIFICATION	4.072861143031143E-4	IMPLEMENTATION
not so sure this is even valid subtree. but if it was it'd represent two unrelated table references	WITHOUT_CLASSIFICATION	0.9999989316807872	WITHOUT_CLASSIFICATION	1.0683192127656708E-6	IMPLEMENTATION
(not (gt a b) ) => (le a b)	WITHOUT_CLASSIFICATION	0.9999902774128151	WITHOUT_CLASSIFICATION	9.722587184853343E-6	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9999945437829622	WITHOUT_CLASSIFICATION	5.456217037824279E-6	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998384266314189	WITHOUT_CLASSIFICATION	1.6157336858125602E-4	IMPLEMENTATION
sqlresulttypes = selectclause.getsqlresulttypes()	WITHOUT_CLASSIFICATION	0.999929917013758	WITHOUT_CLASSIFICATION	7.008298624200439E-5	IMPLEMENTATION
by default	WITHOUT_CLASSIFICATION	0.999999165868725	WITHOUT_CLASSIFICATION	8.341312750209854E-7	IMPLEMENTATION
this is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999144636177183	WITHOUT_CLASSIFICATION	8.553638228175595E-5	IMPLEMENTATION
-- loader implementation --	WITHOUT_CLASSIFICATION	0.9999547409731785	WITHOUT_CLASSIFICATION	4.525902682153347E-5	IMPLEMENTATION
-- loader overrides --	WITHOUT_CLASSIFICATION	0.9999910561075105	WITHOUT_CLASSIFICATION	8.943892489569127E-6	IMPLEMENTATION
(not (is_null a b) ) => (is_not_null a b)	WITHOUT_CLASSIFICATION	0.9999879710931792	WITHOUT_CLASSIFICATION	1.2028906820875854E-5	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9988177847520993	WITHOUT_CLASSIFICATION	0.0011822152479008254	IMPLEMENTATION
meant to handle dynamic instantiation queries	WITHOUT_CLASSIFICATION	0.9997957895132163	WITHOUT_CLASSIFICATION	2.0421048678367145E-4	IMPLEMENTATION
--- query translator methods ---	WITHOUT_CLASSIFICATION	0.9999851758774576	WITHOUT_CLASSIFICATION	1.4824122542480655E-5	IMPLEMENTATION
-- implementation private methods --	WITHOUT_CLASSIFICATION	0.9999875022780582	WITHOUT_CLASSIFICATION	1.249772194169089E-5	IMPLEMENTATION
deduplicate unique constraints sharing the same columns this is needed by hibernate annotations since it creates automagically unique constraints for the user	WITHOUT_CLASSIFICATION	0.9992238102277363	WITHOUT_CLASSIFICATION	7.761897722636307E-4	IMPLEMENTATION
try to find out the name of the primary key to create it as identity if the identitygenerator is used	WITHOUT_CLASSIFICATION	0.9999998383374139	WITHOUT_CLASSIFICATION	1.6166258612429795E-7	IMPLEMENTATION
to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9996494763143345	WITHOUT_CLASSIFICATION	3.5052368566543973E-4	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999772613724	WITHOUT_CLASSIFICATION	2.2738627673389323E-8	IMPLEMENTATION
used also for generation of fk names!	WITHOUT_CLASSIFICATION	0.9999870422580963	WITHOUT_CLASSIFICATION	1.295774190360029E-5	IMPLEMENTATION
usually useless	WITHOUT_CLASSIFICATION	0.9999697291977732	WITHOUT_CLASSIFICATION	3.0270802226868126E-5	IMPLEMENTATION
added this caching as i noticed that gettype() is being called multiple times	WITHOUT_CLASSIFICATION	0.9999855019778835	WITHOUT_CLASSIFICATION	1.4498022116403178E-5	IMPLEMENTATION
do not add unique constraint on db not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9954526589593651	WITHOUT_CLASSIFICATION	0.004547341040634925	IMPLEMENTATION
for backward compatibility disable this	WITHOUT_CLASSIFICATION	0.9998847778800704	WITHOUT_CLASSIFICATION	1.1522211992962214E-4	IMPLEMENTATION
may be final may be final may be final	WITHOUT_CLASSIFICATION	0.9999861731886565	WITHOUT_CLASSIFICATION	1.3826811343401093E-5	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9999813710471561	WITHOUT_CLASSIFICATION	1.8628952843907436E-5	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9999813710471561	WITHOUT_CLASSIFICATION	1.8628952843907436E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999961060620502	WITHOUT_CLASSIFICATION	3.893937949808476E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999913638159499	WITHOUT_CLASSIFICATION	8.636184050201576E-6	IMPLEMENTATION
the root of the incoming property path matched one of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999687889468325	WITHOUT_CLASSIFICATION	3.1211053167536735E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999591840574187	WITHOUT_CLASSIFICATION	4.08159425811819E-5	IMPLEMENTATION
flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999543967979587	WITHOUT_CLASSIFICATION	4.560320204131006E-5	IMPLEMENTATION
an identifier mapper => getkey will be included in the getnonduplicatedpropertyiterator() and checked later so it needs to be excluded	WITHOUT_CLASSIFICATION	0.999999663885622	WITHOUT_CLASSIFICATION	3.361143779318005E-7	IMPLEMENTATION
if the hibernate-mapping did not specify a schema/catalog use the defaults specified by properties - but note that if the schema/catalog were specified in hibernate-mapping or as params they will already be initialized and will override the values set here (they are in identifiergeneratorproperties)	WITHOUT_CLASSIFICATION	0.9999999993862214	WITHOUT_CLASSIFICATION	6.137786543241249E-10	IMPLEMENTATION
pass the entity-name if not a collection-id	WITHOUT_CLASSIFICATION	0.9994826914796688	WITHOUT_CLASSIFICATION	5.173085203310933E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999961060620502	WITHOUT_CLASSIFICATION	3.893937949808476E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999913638159499	WITHOUT_CLASSIFICATION	8.636184050201576E-6	IMPLEMENTATION
pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9997642379128346	WITHOUT_CLASSIFICATION	2.3576208716540584E-4	IMPLEMENTATION
needed to satisfy keyvalue	WITHOUT_CLASSIFICATION	0.7656953182904347	WITHOUT_CLASSIFICATION	0.23430468170956534	IMPLEMENTATION
empty means no scoping	WITHOUT_CLASSIFICATION	0.999967205211657	WITHOUT_CLASSIFICATION	3.279478834296507E-5	IMPLEMENTATION
index should be last column listed	WITHOUT_CLASSIFICATION	0.9997612948106607	WITHOUT_CLASSIFICATION	2.3870518933925334E-4	IMPLEMENTATION
if it is a formula index use the element columns in the pk	WITHOUT_CLASSIFICATION	0.9999998879814964	WITHOUT_CLASSIFICATION	1.1201850358007886E-7	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns	WITHOUT_CLASSIFICATION	0.9998045477263542	WITHOUT_CLASSIFICATION	1.954522736457097E-4	IMPLEMENTATION
arraylist list = new arraylist()list.addall( getkey().getconstraintcolumns() )list.addall( getindex().getconstraintcolumns() )getcollectiontable().createuniquekey(list)	WITHOUT_CLASSIFICATION	0.9999761368676423	WITHOUT_CLASSIFICATION	2.3863132357709674E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999768017029188	WITHOUT_CLASSIFICATION	2.319829708108924E-5	IMPLEMENTATION
no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999979885330684	WITHOUT_CLASSIFICATION	2.011466931607643E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.6940888782859784	IMPLEMENTATION	0.30591112171402157	WITHOUT_CLASSIFICATION
the case of a foreign key to something other than the pk is handled in createpropertyrefconstraints	WITHOUT_CLASSIFICATION	0.9999157123848931	WITHOUT_CLASSIFICATION	8.428761510688719E-5	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.6940888782859784	IMPLEMENTATION	0.30591112171402157	WITHOUT_CLASSIFICATION
if the property mapping consists of all formulas make it non-updateable	WITHOUT_CLASSIFICATION	0.9999700961520164	WITHOUT_CLASSIFICATION	2.9903847983642982E-5	IMPLEMENTATION
columnupdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999740176064086	WITHOUT_CLASSIFICATION	2.59823935914988E-5	IMPLEMENTATION
if the property mapping consists of all formulas make it insertable	WITHOUT_CLASSIFICATION	0.9999700961520164	WITHOUT_CLASSIFICATION	2.9903847983642982E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999932094968871	WITHOUT_CLASSIFICATION	6.790503112919443E-6	IMPLEMENTATION
expected type is intrinsic here	WITHOUT_CLASSIFICATION	0.9999706991610686	WITHOUT_CLASSIFICATION	2.9300838931422365E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999768017029188	WITHOUT_CLASSIFICATION	2.319829708108924E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999768017029188	WITHOUT_CLASSIFICATION	2.319829708108924E-5	IMPLEMENTATION
return memberpersister.getpropertytype(propertyname)	WITHOUT_CLASSIFICATION	0.9999761309747633	WITHOUT_CLASSIFICATION	2.3869025236640344E-5	IMPLEMENTATION
return memberpersister.tocolumns(alias propertyname)	WITHOUT_CLASSIFICATION	0.9999761708653502	WITHOUT_CLASSIFICATION	2.3829134649835862E-5	IMPLEMENTATION
return memberpersister.gettype()	WITHOUT_CLASSIFICATION	0.9999761309747633	WITHOUT_CLASSIFICATION	2.3869025236640344E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999644070780289	WITHOUT_CLASSIFICATION	3.559292197110103E-5	IMPLEMENTATION
return !isonetomany()	WITHOUT_CLASSIFICATION	0.9999807073735653	WITHOUT_CLASSIFICATION	1.9292626434674893E-5	IMPLEMENTATION
instanceof associationtype	WITHOUT_CLASSIFICATION	0.9999840887241973	WITHOUT_CLASSIFICATION	1.591127580266903E-5	IMPLEMENTATION
we need to determine the best way to know that two joinables represent a single many-to-many	WITHOUT_CLASSIFICATION	0.9958686888064457	WITHOUT_CLASSIFICATION	0.004131311193554171	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9999851230911407	WITHOUT_CLASSIFICATION	1.4876908859332553E-5	IMPLEMENTATION
public boolean issubselectloadable()	WITHOUT_CLASSIFICATION	0.9999983226399285	WITHOUT_CLASSIFICATION	1.6773600715770053E-6	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999908190688989	WITHOUT_CLASSIFICATION	9.18093110107114E-6	IMPLEMENTATION
columns	WITHOUT_CLASSIFICATION	0.9999972361882066	WITHOUT_CLASSIFICATION	2.7638117934385856E-6	IMPLEMENTATION
sql statements	WITHOUT_CLASSIFICATION	0.9999890119164232	WITHOUT_CLASSIFICATION	1.0988083576790002E-5	IMPLEMENTATION
extra information about the element type	WITHOUT_CLASSIFICATION	0.999987516109592	WITHOUT_CLASSIFICATION	1.2483890407890845E-5	IMPLEMENTATION
types	WITHOUT_CLASSIFICATION	0.9999628691143367	WITHOUT_CLASSIFICATION	3.713088566322772E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999961060620502	WITHOUT_CLASSIFICATION	3.893937949808476E-6	IMPLEMENTATION
private final string unquotedidentifiercolumnname	WITHOUT_CLASSIFICATION	0.9999985600301238	WITHOUT_CLASSIFICATION	1.439969876128504E-6	IMPLEMENTATION
dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999932624664136	WITHOUT_CLASSIFICATION	6.737533586467835E-6	IMPLEMENTATION
dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999917006392565	WITHOUT_CLASSIFICATION	8.299360743399536E-6	IMPLEMENTATION
nativesql collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999611154255116	WITHOUT_CLASSIFICATION	3.888457448831233E-5	IMPLEMENTATION
unquotedkeycolumnnames = stringhelper.unquote(keycolumnaliases)	WITHOUT_CLASSIFICATION	0.999929917013758	WITHOUT_CLASSIFICATION	7.008298624200439E-5	IMPLEMENTATION
element	WITHOUT_CLASSIFICATION	0.9999932124416969	WITHOUT_CLASSIFICATION	6.78755830306054E-6	IMPLEMENTATION
nativesql collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999712520051298	WITHOUT_CLASSIFICATION	2.8747994870197852E-5	IMPLEMENTATION
index and row select	WITHOUT_CLASSIFICATION	0.9999259940648102	WITHOUT_CLASSIFICATION	7.400593518979647E-5	IMPLEMENTATION
nativesql collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9997763957325323	WITHOUT_CLASSIFICATION	2.2360426746783433E-4	IMPLEMENTATION
unquotedidentifiercolumnname = identifiercolumnalias	WITHOUT_CLASSIFICATION	0.999929917013758	WITHOUT_CLASSIFICATION	7.008298624200439E-5	IMPLEMENTATION
unquotedidentifiercolumnname = null	WITHOUT_CLASSIFICATION	0.9999829100662421	WITHOUT_CLASSIFICATION	1.708993375789986E-5	IMPLEMENTATION
generate the sql	WITHOUT_CLASSIFICATION	0.999968302503794	WITHOUT_CLASSIFICATION	3.1697496205938485E-5	IMPLEMENTATION
for non-arrays we don't need to know the element class elementtype.returnedclass()	WITHOUT_CLASSIFICATION	0.9987345371405691	WITHOUT_CLASSIFICATION	0.0012654628594308643	IMPLEMENTATION
not all classpersisters implement propertymapping!	WITHOUT_CLASSIFICATION	0.687474985499406	WITHOUT_CLASSIFICATION	0.3125250145005941	IMPLEMENTATION
handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9996921396814418	WITHOUT_CLASSIFICATION	3.078603185583013E-4	IMPLEMENTATION
handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9998650091142803	WITHOUT_CLASSIFICATION	1.3499088571963629E-4	IMPLEMENTATION
if there is a user-specified loader return that todo filters!?	WITHOUT_CLASSIFICATION	0.9776053374614718	WITHOUT_CLASSIFICATION	0.022394662538528072	IMPLEMENTATION
take care of any entities that might have been evicted!	WITHOUT_CLASSIFICATION	0.9999602841281129	WITHOUT_CLASSIFICATION	3.971587188710346E-5	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9999851230911407	WITHOUT_CLASSIFICATION	1.4876908859332553E-5	IMPLEMENTATION
run a subquery loader	WITHOUT_CLASSIFICATION	0.999970719782256	WITHOUT_CLASSIFICATION	2.928021774404119E-5	IMPLEMENTATION
needed by arrays	WITHOUT_CLASSIFICATION	0.8550726150780754	WITHOUT_CLASSIFICATION	0.14492738492192464	IMPLEMENTATION
todo something with formulas	WITHOUT_CLASSIFICATION	0.5468604184981583	WITHOUT_CLASSIFICATION	0.45313958150184175	IMPLEMENTATION
an assertion	WITHOUT_CLASSIFICATION	0.9999868833891984	WITHOUT_CLASSIFICATION	1.3116610801564882E-5	IMPLEMENTATION
remove all the old entries	WITHOUT_CLASSIFICATION	0.9999959469731315	WITHOUT_CLASSIFICATION	4.053026868540941E-6	IMPLEMENTATION
create all the new entries	WITHOUT_CLASSIFICATION	0.9999906945714643	WITHOUT_CLASSIFICATION	9.305428535703915E-6	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999644070780289	WITHOUT_CLASSIFICATION	3.559292197110103E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999644070780289	WITHOUT_CLASSIFICATION	3.559292197110103E-5	IMPLEMENTATION
delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9984123540181556	WITHOUT_CLASSIFICATION	0.0015876459818443527	IMPLEMENTATION
insert all the new entries	WITHOUT_CLASSIFICATION	0.9999945275428057	WITHOUT_CLASSIFICATION	5.472457194202708E-6	IMPLEMENTATION
==elementtype ??	WITHOUT_CLASSIFICATION	0.9999834429233453	WITHOUT_CLASSIFICATION	1.6557076654740956E-5	IMPLEMENTATION
update all the modified entries	WITHOUT_CLASSIFICATION	0.9999576130908012	WITHOUT_CLASSIFICATION	4.2386909198724795E-5	IMPLEMENTATION
identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9996870291159188	WITHOUT_CLASSIFICATION	3.129708840812506E-4	IMPLEMENTATION
update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999709350389069	WITHOUT_CLASSIFICATION	2.9064961093007044E-5	IMPLEMENTATION
will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999970666146204	WITHOUT_CLASSIFICATION	2.933385379658224E-6	IMPLEMENTATION
now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999999263202273	WITHOUT_CLASSIFICATION	7.367977269105744E-8	IMPLEMENTATION
buf.append( selectfragment( lhsalias "" ) )ignore suffix for collection columns!	WITHOUT_CLASSIFICATION	0.9999859066648014	WITHOUT_CLASSIFICATION	1.4093335198654004E-5	IMPLEMENTATION
use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999986309021764	WITHOUT_CLASSIFICATION	1.3690978235132408E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999979422796952	WITHOUT_CLASSIFICATION	2.057720304685296E-6	IMPLEMENTATION
private final string roottablename	WITHOUT_CLASSIFICATION	0.9999985600301238	WITHOUT_CLASSIFICATION	1.439969876128504E-6	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9998021895992097	WITHOUT_CLASSIFICATION	1.9781040079022168E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999961060620502	WITHOUT_CLASSIFICATION	3.893937949808476E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999979422796952	WITHOUT_CLASSIFICATION	2.057720304685296E-6	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999961531378688	WITHOUT_CLASSIFICATION	3.846862131208246E-6	IMPLEMENTATION
this could also just be true all the time	WITHOUT_CLASSIFICATION	0.9999786404291875	WITHOUT_CLASSIFICATION	2.1359570812435472E-5	IMPLEMENTATION
chop the last union (all)	WITHOUT_CLASSIFICATION	0.999991793618677	WITHOUT_CLASSIFICATION	8.206381323018167E-6	IMPLEMENTATION
todo check this.	WITHOUT_CLASSIFICATION	0.777929111133351	IMPLEMENTATION	0.22207088886664905	WITHOUT_CLASSIFICATION
initialization	WITHOUT_CLASSIFICATION	0.9998021895992097	WITHOUT_CLASSIFICATION	1.9781040079022168E-4	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9999948432949306	WITHOUT_CLASSIFICATION	5.156705069342915E-6	IMPLEMENTATION
the closure of all properties in the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998774379545	WITHOUT_CLASSIFICATION	1.2256204543873582E-7	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998308835221	WITHOUT_CLASSIFICATION	1.6911647794012984E-7	IMPLEMENTATION
subclass discrimination works by assigning particular values to certain combinations of null primary key values in the outer join using an sql case	WITHOUT_CLASSIFICATION	0.9999999997722031	WITHOUT_CLASSIFICATION	2.277968742880406E-10	IMPLEMENTATION
multitables	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999961060620502	WITHOUT_CLASSIFICATION	3.893937949808476E-6	IMPLEMENTATION
subclass closure properties	WITHOUT_CLASSIFICATION	0.9999946165666106	WITHOUT_CLASSIFICATION	5.383433389500566E-6	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999955561567497	WITHOUT_CLASSIFICATION	4.443843250253808E-6	IMPLEMENTATION
( (column) model.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999881340614957	WITHOUT_CLASSIFICATION	1.1865938504360676E-5	IMPLEMENTATION
( (column) sc.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999881340614957	WITHOUT_CLASSIFICATION	1.1865938504360676E-5	IMPLEMENTATION
don't need subclass tables because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999090459218111	WITHOUT_CLASSIFICATION	9.095407818898518E-5	IMPLEMENTATION
special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9946559049679096	WITHOUT_CLASSIFICATION	0.005344095032090517	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999979422796952	WITHOUT_CLASSIFICATION	2.057720304685296E-6	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9999948432949306	WITHOUT_CLASSIFICATION	5.156705069342915E-6	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999998308835221	WITHOUT_CLASSIFICATION	1.6911647794012984E-7	IMPLEMENTATION
get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999932218626766	WITHOUT_CLASSIFICATION	6.778137323421632E-6	IMPLEMENTATION
now look up the object we are really interested in! (this lets us correctly handle proxies and multi-row or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999923194019616	WITHOUT_CLASSIFICATION	7.680598038384975E-6	IMPLEMENTATION
discriminator column	WITHOUT_CLASSIFICATION	0.9998911729596479	WITHOUT_CLASSIFICATION	1.0882704035218284E-4	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9998021895992097	WITHOUT_CLASSIFICATION	1.9781040079022168E-4	IMPLEMENTATION
private final map propertytablenumbersbyname = new hashmap()	WITHOUT_CLASSIFICATION	0.9999948933015429	WITHOUT_CLASSIFICATION	5.106698457189373E-6	IMPLEMENTATION
class + table	WITHOUT_CLASSIFICATION	0.999993049009787	WITHOUT_CLASSIFICATION	6.950990213006139E-6	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999639906505274	WITHOUT_CLASSIFICATION	3.6009349472629214E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999961495200312	WITHOUT_CLASSIFICATION	3.850479968843381E-6	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999955561567497	WITHOUT_CLASSIFICATION	4.443843250253808E-6	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999961531378688	WITHOUT_CLASSIFICATION	3.846862131208246E-6	IMPLEMENTATION
joins	WITHOUT_CLASSIFICATION	0.9999870083439429	WITHOUT_CLASSIFICATION	1.2991656056997143E-5	IMPLEMENTATION
propertytablenumbersbyname.put( prop.getname() join )	WITHOUT_CLASSIFICATION	0.9999671982198006	WITHOUT_CLASSIFICATION	3.280178019937031E-5	IMPLEMENTATION
access cached sql	WITHOUT_CLASSIFICATION	0.9999901190052216	WITHOUT_CLASSIFICATION	9.880994778401362E-6	IMPLEMENTATION
figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9996924339053442	WITHOUT_CLASSIFICATION	3.075660946557471E-4	IMPLEMENTATION
figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9833931923602771	WITHOUT_CLASSIFICATION	0.01660680763972287	IMPLEMENTATION
figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.926451009748065	WITHOUT_CLASSIFICATION	0.07354899025193493	IMPLEMENTATION
render the sql	WITHOUT_CLASSIFICATION	0.9999919892253176	WITHOUT_CLASSIFICATION	8.01077468245488E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999932094968871	WITHOUT_CLASSIFICATION	6.790503112919443E-6	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999920268581347	WITHOUT_CLASSIFICATION	7.973141865208423E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
the optional sql string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999994509963086	WITHOUT_CLASSIFICATION	5.490036913477492E-7	IMPLEMENTATION
information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999827285928763	WITHOUT_CLASSIFICATION	1.7271407123694787E-5	IMPLEMENTATION
information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999997223522671	WITHOUT_CLASSIFICATION	2.7764773297611837E-7	IMPLEMENTATION
information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999990631236654	WITHOUT_CLASSIFICATION	9.368763345723344E-7	IMPLEMENTATION
dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999826131269024	WITHOUT_CLASSIFICATION	1.73868730976361E-5	IMPLEMENTATION
sql strings	WITHOUT_CLASSIFICATION	0.999956820762623	WITHOUT_CLASSIFICATION	4.317923737699175E-5	IMPLEMENTATION
for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999987669332366	WITHOUT_CLASSIFICATION	1.2330667633990446E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999961495200312	WITHOUT_CLASSIFICATION	3.850479968843381E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
identifier	WITHOUT_CLASSIFICATION	0.999984106667143	WITHOUT_CLASSIFICATION	1.5893332857059727E-5	IMPLEMENTATION
version	WITHOUT_CLASSIFICATION	0.9999918809781493	WITHOUT_CLASSIFICATION	8.119021850811672E-6	IMPLEMENTATION
where string	WITHOUT_CLASSIFICATION	0.9999564374924006	WITHOUT_CLASSIFICATION	4.356250759943673E-5	IMPLEMENTATION
subclass property closure	WITHOUT_CLASSIFICATION	0.9999856192469769	WITHOUT_CLASSIFICATION	1.438075302303275E-5	IMPLEMENTATION
before add -)	WITHOUT_CLASSIFICATION	0.9999618605819961	WITHOUT_CLASSIFICATION	3.8139418003918434E-5	IMPLEMENTATION
handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999768676988132	WITHOUT_CLASSIFICATION	2.3132301186755323E-5	IMPLEMENTATION
only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999698515973598	WITHOUT_CLASSIFICATION	3.0148402640236233E-5	IMPLEMENTATION
note early exit here	WITHOUT_CLASSIFICATION	0.9998130008283167	WITHOUT_CLASSIFICATION	1.8699917168329215E-4	IMPLEMENTATION
object have been loaded with setreadonly(true) hhh-2236	WITHOUT_CLASSIFICATION	0.9999835993776021	WITHOUT_CLASSIFICATION	1.640062239790962E-5	IMPLEMENTATION
note this assumes something about how propertyselectfragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9913802520922252	WITHOUT_CLASSIFICATION	0.008619747907774825	IMPLEMENTATION
strip leading " "	WITHOUT_CLASSIFICATION	0.999952987890125	WITHOUT_CLASSIFICATION	4.7012109874973266E-5	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999999558052375	WITHOUT_CLASSIFICATION	4.4194762581871834E-8	IMPLEMENTATION
otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9994590696619742	WITHOUT_CLASSIFICATION	5.40930338025787E-4	IMPLEMENTATION
null owner ok??	WITHOUT_CLASSIFICATION	0.9999948358181734	WITHOUT_CLASSIFICATION	5.164181826604653E-6	IMPLEMENTATION
null sql means that the only lazy properties are shared pk one-to-one associations which are handled differently in the type#nullsafeget code	WITHOUT_CLASSIFICATION	0.9999998368209729	WITHOUT_CLASSIFICATION	1.631790271548092E-7	IMPLEMENTATION
create a new from node for the referenced class.	WITHOUT_CLASSIFICATION	0.999999389262955	WITHOUT_CLASSIFICATION	6.107370451219878E-7	IMPLEMENTATION
the difficulty here is exactly what do we update in order to force the version to be incremented in the db	WITHOUT_CLASSIFICATION	0.9998632627509131	WITHOUT_CLASSIFICATION	1.3673724908693242E-4	IMPLEMENTATION
performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999901500241392	WITHOUT_CLASSIFICATION	9.849975860831675E-6	IMPLEMENTATION
properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9996041589189634	WITHOUT_CLASSIFICATION	3.958410810366098E-4	IMPLEMENTATION
enable for hhh-440 which we don't like	WITHOUT_CLASSIFICATION	0.9998023525679617	WITHOUT_CLASSIFICATION	1.9764743203827198E-4	IMPLEMENTATION
aliases	WITHOUT_CLASSIFICATION	0.9999873184650179	WITHOUT_CLASSIFICATION	1.26815349821652E-5	IMPLEMENTATION
aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999909266747052	WITHOUT_CLASSIFICATION	9.073325294784564E-6	IMPLEMENTATION
aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999907556070572	WITHOUT_CLASSIFICATION	9.244392942779033E-6	IMPLEMENTATION
fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.999998911740839	WITHOUT_CLASSIFICATION	1.0882591609672275E-6	IMPLEMENTATION
embedded composite ids ( alias.idname1 alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999706666636407	WITHOUT_CLASSIFICATION	2.933333635935883E-5	IMPLEMENTATION
todo skip formulas?	WITHOUT_CLASSIFICATION	0.6799728543431192	IMPLEMENTATION	0.32002714565688073	WITHOUT_CLASSIFICATION
don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999033645649934	WITHOUT_CLASSIFICATION	9.663543500655011E-5	IMPLEMENTATION
do two passes for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999184095476741	WITHOUT_CLASSIFICATION	8.15904523259117E-5	IMPLEMENTATION
select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999915312563478	WITHOUT_CLASSIFICATION	8.468743652223313E-6	IMPLEMENTATION
todo eventually rowidname[j]	WITHOUT_CLASSIFICATION	0.9396184888159302	WITHOUT_CLASSIFICATION	0.06038151118406974	IMPLEMENTATION
this is a property of the table which we are updating	WITHOUT_CLASSIFICATION	0.9999969147653133	WITHOUT_CLASSIFICATION	3.085234686620512E-6	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999052522658333	WITHOUT_CLASSIFICATION	9.474773416666948E-5	IMPLEMENTATION
we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999979839692679	WITHOUT_CLASSIFICATION	2.0160307321081876E-6	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999968541529168	WITHOUT_CLASSIFICATION	3.145847083120324E-6	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999760051019834	WITHOUT_CLASSIFICATION	2.3994898016614942E-5	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9999772141282574	WITHOUT_CLASSIFICATION	2.2785871742590968E-5	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9999732251849796	WITHOUT_CLASSIFICATION	2.6774815020440603E-5	IMPLEMENTATION
more specifically "? [op] datetime" 1) if the operator is minus the param needs to be of some datetime type 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9997539300156107	WITHOUT_CLASSIFICATION	2.460699843892658E-4	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9999772141282574	WITHOUT_CLASSIFICATION	2.2785871742590968E-5	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999760051019834	WITHOUT_CLASSIFICATION	2.3994898016614942E-5	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9999732251849796	WITHOUT_CLASSIFICATION	2.6774815020440603E-5	IMPLEMENTATION
add the primary key	WITHOUT_CLASSIFICATION	0.9999811415983643	WITHOUT_CLASSIFICATION	1.8858401635766713E-5	IMPLEMENTATION
delegate already handles pk columns	WITHOUT_CLASSIFICATION	0.9999920375801667	WITHOUT_CLASSIFICATION	7.962419833139927E-6	IMPLEMENTATION
we can't batch joined inserts especially not if it is an identity insert nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9998030469685759	WITHOUT_CLASSIFICATION	1.969530314242225E-4	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.999994675274715	WITHOUT_CLASSIFICATION	5.324725284981752E-6	IMPLEMENTATION
write the values of fields onto the prepared statement - we must use the state at the time the insert was issued (cos of foreign key constraints). not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999987700775426	WITHOUT_CLASSIFICATION	1.229922457492361E-6	IMPLEMENTATION
todo shouldnt inserts be expectations.none?	WITHOUT_CLASSIFICATION	0.7790039307409107	WITHOUT_CLASSIFICATION	0.22099606925908935	IMPLEMENTATION
don't bother trying to update we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9988859831687587	WITHOUT_CLASSIFICATION	0.0011140168312413082	IMPLEMENTATION
if all fields are null we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999627552000172	WITHOUT_CLASSIFICATION	3.72447999827997E-5	IMPLEMENTATION
there is probably a row there so try to update if no rows were updated we will find out	WITHOUT_CLASSIFICATION	0.9999999937480555	WITHOUT_CLASSIFICATION	6.251944571291207E-9	IMPLEMENTATION
note updates to joined tables can't be batched	WITHOUT_CLASSIFICATION	0.9999806348609301	WITHOUT_CLASSIFICATION	1.936513906975872E-5	IMPLEMENTATION
starting index	WITHOUT_CLASSIFICATION	0.9998697103875644	WITHOUT_CLASSIFICATION	1.3028961243550407E-4	IMPLEMENTATION
now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999891919102425	WITHOUT_CLASSIFICATION	1.0808089757413244E-5	IMPLEMENTATION
write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9996491976390968	WITHOUT_CLASSIFICATION	3.508023609033167E-4	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.999994675274715	WITHOUT_CLASSIFICATION	5.324725284981752E-6	IMPLEMENTATION
do the key. the key is immutable so we can use the _current_ object state - not necessarily the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999990708085865	WITHOUT_CLASSIFICATION	9.291914133769681E-7	IMPLEMENTATION
we should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999979281847813	WITHOUT_CLASSIFICATION	2.071815218659546E-6	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997429908636296	WITHOUT_CLASSIFICATION	2.5700913637038443E-4	IMPLEMENTATION
note dirtyfields==null means we had no snapshot and we couldn't get one using select-before-update oldfields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyfields)	WITHOUT_CLASSIFICATION	0.9999996413932262	WITHOUT_CLASSIFICATION	3.5860677382703937E-7	IMPLEMENTATION
more specifically "datetime [op] ?" 1) if the operator is minus we really cannot determine the expected type as either another datetime or numeric would be valid 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9999816442778935	WITHOUT_CLASSIFICATION	1.8355722106486503E-5	IMPLEMENTATION
for the case of dynamic-update="true" we need to generate the update sql	WITHOUT_CLASSIFICATION	0.99998683179287	WITHOUT_CLASSIFICATION	1.3168207130019645E-5	IMPLEMENTATION
don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9964899780119006	WITHOUT_CLASSIFICATION	0.0035100219880994303	IMPLEMENTATION
for the case of dynamic-update="false" or no snapshot we use the static sql	WITHOUT_CLASSIFICATION	0.9999998774553122	WITHOUT_CLASSIFICATION	1.2254468783605738E-7	IMPLEMENTATION
if not "get" then try "is"	WITHOUT_CLASSIFICATION	0.9997414738765832	WITHOUT_CLASSIFICATION	2.585261234168063E-4	IMPLEMENTATION
now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.999996818515228	WITHOUT_CLASSIFICATION	3.181484771893339E-6	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999847150356163	WITHOUT_CLASSIFICATION	1.5284964383700557E-5	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999847150356163	WITHOUT_CLASSIFICATION	1.5284964383700557E-5	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999994252733783	WITHOUT_CLASSIFICATION	5.747266217409108E-7	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999994252733783	WITHOUT_CLASSIFICATION	5.747266217409108E-7	IMPLEMENTATION
not supported	WITHOUT_CLASSIFICATION	0.9993882380504567	WITHOUT_CLASSIFICATION	6.117619495431459E-4	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997429908636296	WITHOUT_CLASSIFICATION	2.5700913637038443E-4	IMPLEMENTATION
we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9980332839926408	WITHOUT_CLASSIFICATION	0.001966716007359299	IMPLEMENTATION
otherwise utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9989792283887153	WITHOUT_CLASSIFICATION	0.0010207716112846565	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999813180172636	WITHOUT_CLASSIFICATION	1.8681982736310416E-5	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999813180172636	WITHOUT_CLASSIFICATION	1.8681982736310416E-5	IMPLEMENTATION
all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999712268866833	WITHOUT_CLASSIFICATION	2.8773113316775075E-5	IMPLEMENTATION
notice that we skip the first table it is the driving table!	WITHOUT_CLASSIFICATION	0.9999561919958923	WITHOUT_CLASSIFICATION	4.380800410775184E-5	IMPLEMENTATION
we can inner join to superclass tables (the row must be there) we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9998770275643579	WITHOUT_CLASSIFICATION	1.2297243564217771E-4	IMPLEMENTATION
skip the driving table	WITHOUT_CLASSIFICATION	0.9999673565117879	WITHOUT_CLASSIFICATION	3.264348821210251E-5	IMPLEMENTATION
get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999988537961143	WITHOUT_CLASSIFICATION	1.1462038856250768E-6	IMPLEMENTATION
here we work under the following assumptions ------------ valid cases -------------------------------------- 1) datetime + {something other than datetime} always results in a datetime ( db will catch invalid conversions ) 2) datetime - datetime always results in a double 3) datetime - {something other than datetime} always results in a datetime ( db will catch invalid conversions ) ------------ invalid cases ------------------------------------ 4) datetime + datetime 5) {something other than datetime} - datetime 6) datetime {any type} 7) datetime / {any type} 8) {any type} / datetime doing so allows us to properly handle parameters as either the left or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999998575490535	WITHOUT_CLASSIFICATION	1.4245094635839316E-7	IMPLEMENTATION
render the where and from parts	WITHOUT_CLASSIFICATION	0.9999869479974375	WITHOUT_CLASSIFICATION	1.305200256248738E-5	IMPLEMENTATION
we could regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999555439089749	WITHOUT_CLASSIFICATION	4.4456091025132137E-5	IMPLEMENTATION
now render the joins	WITHOUT_CLASSIFICATION	0.999979880787333	WITHOUT_CLASSIFICATION	2.0119212666990614E-5	IMPLEMENTATION
this will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999949877018544	WITHOUT_CLASSIFICATION	5.012298145691114E-6	IMPLEMENTATION
now render the select clause	WITHOUT_CLASSIFICATION	0.9999828561231068	WITHOUT_CLASSIFICATION	1.7143876893194882E-5	IMPLEMENTATION
now tie it all together	WITHOUT_CLASSIFICATION	0.9999534356215292	WITHOUT_CLASSIFICATION	4.6564378470806924E-5	IMPLEMENTATION
insert/update/delete sql	WITHOUT_CLASSIFICATION	0.9999928031863426	WITHOUT_CLASSIFICATION	7.196813657319184E-6	IMPLEMENTATION
select sql	WITHOUT_CLASSIFICATION	0.9999972512768341	WITHOUT_CLASSIFICATION	2.7487231657433135E-6	IMPLEMENTATION
no need to check laziness dirty checking handles that	WITHOUT_CLASSIFICATION	0.9953936310263717	WITHOUT_CLASSIFICATION	0.004606368973628264	IMPLEMENTATION
fully resolve the map reference create implicit joins.	WITHOUT_CLASSIFICATION	0.9999959180830121	WITHOUT_CLASSIFICATION	4.0819169878231065E-6	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999746597321373	WITHOUT_CLASSIFICATION	2.5340267862668334E-5	IMPLEMENTATION
the basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9998518648938325	WITHOUT_CLASSIFICATION	1.481351061674118E-4	IMPLEMENTATION
for dialects which are known to not support ansi-sql row-value-constructor syntax we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9947589722696486	WITHOUT_CLASSIFICATION	0.005241027730351366	IMPLEMENTATION
due to the complexity in initializing the selectclause do not generate one here. if it is not found simply return null also do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999990531086688	WITHOUT_CLASSIFICATION	9.468913311646155E-7	IMPLEMENTATION
check the version unsaved-value if appropriate	WITHOUT_CLASSIFICATION	0.999900015605472	WITHOUT_CLASSIFICATION	9.99843945279334E-5	IMPLEMENTATION
let this take precedence if defined since it works for assigned identifiers	WITHOUT_CLASSIFICATION	0.9999998766255317	WITHOUT_CLASSIFICATION	1.2337446831964274E-7	IMPLEMENTATION
check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9995899470267465	WITHOUT_CLASSIFICATION	4.100529732535329E-4	IMPLEMENTATION
check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.999999716410377	WITHOUT_CLASSIFICATION	2.8358962298043065E-7	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999977241136305	WITHOUT_CLASSIFICATION	2.2758863695107906E-6	IMPLEMENTATION
for property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999525472448795	WITHOUT_CLASSIFICATION	4.745275512053938E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999999558052375	WITHOUT_CLASSIFICATION	4.4194762581871834E-8	IMPLEMENTATION
force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.999985237291965	WITHOUT_CLASSIFICATION	1.4762708034999268E-5	IMPLEMENTATION
if this from element is a collection and the path is a collection property (maxindex etc.) then generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999963391099951	WITHOUT_CLASSIFICATION	3.660890004989348E-6	IMPLEMENTATION
entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999739483102399	WITHOUT_CLASSIFICATION	2.605168976017052E-5	IMPLEMENTATION
collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999656570544747	WITHOUT_CLASSIFICATION	3.4342945525409613E-5	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.9999979984019559	WITHOUT_CLASSIFICATION	2.001598043995913E-6	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.9999979984019559	WITHOUT_CLASSIFICATION	2.001598043995913E-6	IMPLEMENTATION
only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999976535194854	WITHOUT_CLASSIFICATION	2.3464805144947678E-6	IMPLEMENTATION
try "get"	WITHOUT_CLASSIFICATION	0.999982707757062	WITHOUT_CLASSIFICATION	1.72922429379536E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999958970695582	WITHOUT_CLASSIFICATION	4.102930441843716E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999958970695582	WITHOUT_CLASSIFICATION	4.102930441843716E-6	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9998847379779554	WITHOUT_CLASSIFICATION	1.1526202204457893E-4	IMPLEMENTATION
this page intentionally left blank )	WITHOUT_CLASSIFICATION	0.9999680060765843	WITHOUT_CLASSIFICATION	3.199392341564785E-5	IMPLEMENTATION
do not do anything	WITHOUT_CLASSIFICATION	0.9903013842737214	WITHOUT_CLASSIFICATION	0.009698615726278604	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999688338482335	WITHOUT_CLASSIFICATION	3.116615176653375E-5	IMPLEMENTATION
cant instantiate	WITHOUT_CLASSIFICATION	0.9999676855529404	WITHOUT_CLASSIFICATION	3.231444705956746E-5	IMPLEMENTATION
if it is a property of an embedded component invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999998448148936	WITHOUT_CLASSIFICATION	1.5518510637728903E-7	IMPLEMENTATION
otherwise	WITHOUT_CLASSIFICATION	0.9998462269661238	WITHOUT_CLASSIFICATION	1.537730338762143E-4	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.9999504088148853	WITHOUT_CLASSIFICATION	4.9591185114808085E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999849123476182	WITHOUT_CLASSIFICATION	1.5087652381807545E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999849123476182	WITHOUT_CLASSIFICATION	1.5087652381807545E-5	IMPLEMENTATION
hhh-2481 make sure the callback gets cleared otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999538671656927	WITHOUT_CLASSIFICATION	4.6132834307343465E-5	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999932125549771	WITHOUT_CLASSIFICATION	6.787445022968507E-6	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999932125549771	WITHOUT_CLASSIFICATION	6.787445022968507E-6	IMPLEMENTATION
note interface is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999935776254413	WITHOUT_CLASSIFICATION	6.422374558739082E-6	IMPLEMENTATION
interfaces arguments	WITHOUT_CLASSIFICATION	0.9999846816537468	WITHOUT_CLASSIFICATION	1.5318346253282324E-5	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
get the caller	WITHOUT_CLASSIFICATION	0.9999970814335768	WITHOUT_CLASSIFICATION	2.9185664231461006E-6	IMPLEMENTATION
get the caller principals	WITHOUT_CLASSIFICATION	0.9999982491204061	WITHOUT_CLASSIFICATION	1.7508795938111433E-6	IMPLEMENTATION
private static final alias default_alias = new alias(10 null)	WITHOUT_CLASSIFICATION	0.9999970864501286	WITHOUT_CLASSIFICATION	2.9135498713243517E-6	IMPLEMENTATION
needed to bump this up to dotnode because that is the only thing which currently knows about the property-ref path in the correct format it is either this or recurse over the dotnodes constructing the property path just like dotnode does internally	WITHOUT_CLASSIFICATION	0.999874630604606	WITHOUT_CLASSIFICATION	1.2536939539404234E-4	IMPLEMENTATION
if the identifier is quoted remove the quotes	WITHOUT_CLASSIFICATION	0.9999992332667461	WITHOUT_CLASSIFICATION	7.667332539437936E-7	IMPLEMENTATION
truncate the identifier to the max alias length less the suffix length	WITHOUT_CLASSIFICATION	0.9999846200305246	WITHOUT_CLASSIFICATION	1.5379969475370215E-5	IMPLEMENTATION
full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9997173091090394	WITHOUT_CLASSIFICATION	2.8269089096055196E-4	IMPLEMENTATION
null is not considered the same type as integer. $non-nls-1 $non-nls-1	WITHOUT_CLASSIFICATION	0.999933201717501	WITHOUT_CLASSIFICATION	6.67982824989493E-5	IMPLEMENTATION
the outerjoinsafterwhere needs to come before where clause to properly handle dynamic filters	WITHOUT_CLASSIFICATION	0.9495297281088722	WITHOUT_CLASSIFICATION	0.05047027189112795	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.999987019012734	WITHOUT_CLASSIFICATION	1.2980987266103804E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.999987019012734	WITHOUT_CLASSIFICATION	1.2980987266103804E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.999987019012734	WITHOUT_CLASSIFICATION	1.2980987266103804E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.999987019012734	WITHOUT_CLASSIFICATION	1.2980987266103804E-5	IMPLEMENTATION
strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999974176189306	WITHOUT_CLASSIFICATION	2.5823810694815987E-6	IMPLEMENTATION
if the condition is not already there	WITHOUT_CLASSIFICATION	0.9999799539661242	WITHOUT_CLASSIFICATION	2.0046033875881593E-5	IMPLEMENTATION
dontspace.add("'")	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
for mysql	WITHOUT_CLASSIFICATION	0.9999953673932699	WITHOUT_CLASSIFICATION	4.632606730166912E-6	IMPLEMENTATION
hashmap columnsunique = new hashmap()	WITHOUT_CLASSIFICATION	0.9999512530384582	WITHOUT_CLASSIFICATION	4.874696154168462E-5	IMPLEMENTATION
null caused some problems	WITHOUT_CLASSIFICATION	0.9999859429034631	WITHOUT_CLASSIFICATION	1.4057096536882464E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999440484270439	WITHOUT_CLASSIFICATION	5.5951572956190454E-5	IMPLEMENTATION
not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.999997393975708	WITHOUT_CLASSIFICATION	2.606024291932026E-6	IMPLEMENTATION
even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999686690222868	WITHOUT_CLASSIFICATION	3.133097771317736E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999440484270439	WITHOUT_CLASSIFICATION	5.5951572956190454E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999440484270439	WITHOUT_CLASSIFICATION	5.5951572956190454E-5	IMPLEMENTATION
if true then execute db updates otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999960953961252	WITHOUT_CLASSIFICATION	3.904603874796604E-6	IMPLEMENTATION
we only release the connection	WITHOUT_CLASSIFICATION	0.9991241345275785	WITHOUT_CLASSIFICATION	8.758654724215338E-4	IMPLEMENTATION
deprecated option	WITHOUT_CLASSIFICATION	0.999882250849876	WITHOUT_CLASSIFICATION	1.1774915012400127E-4	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.999999498346872	WITHOUT_CLASSIFICATION	5.016531279572659E-7	IMPLEMENTATION
actually this last test is probably unnecessary since beforecompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999999992091079	WITHOUT_CLASSIFICATION	7.908921268536E-10	IMPLEMENTATION
this one only really needed for badly-behaved applications! (if the transactionmanager has a sychronization registered its a noop) (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.834626859766751	IMPLEMENTATION	0.1653731402332491	WITHOUT_CLASSIFICATION
create an dotnode ast for the path and resolve it.	WITHOUT_CLASSIFICATION	0.999990939326297	WITHOUT_CLASSIFICATION	9.060673702966672E-6	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.999999498346872	WITHOUT_CLASSIFICATION	5.016531279572659E-7	IMPLEMENTATION
if we could not register a synchronization do the before/after completion callbacks ourself (but we need to let jdbccontext know that this is what we are going to do so it doesn't keep trying to register synchronizations)	WITHOUT_CLASSIFICATION	0.5326895164909761	IMPLEMENTATION	0.46731048350902393	WITHOUT_CLASSIFICATION
swallow it and continue to roll back jta transaction	WITHOUT_CLASSIFICATION	0.9998490406631668	WITHOUT_CLASSIFICATION	1.5095933683309537E-4	IMPLEMENTATION
so the transaction is already rolled back by jta spec	WITHOUT_CLASSIFICATION	0.9999992452236786	WITHOUT_CLASSIFICATION	7.547763214566307E-7	IMPLEMENTATION
this method is a noop if there is a synchronization!	WITHOUT_CLASSIFICATION	0.9999978584047533	WITHOUT_CLASSIFICATION	2.1415952466043918E-6	IMPLEMENTATION
two conditions where we need to transform this to a theta-join syntax 1) 'elem' is the "root from-element" in correlated subqueries 2) the dotnode.usethetastyleimplicitjoins has been set to true and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999956169646973	WITHOUT_CLASSIFICATION	4.383035302677986E-6	IMPLEMENTATION
websphere however is not a sane jee/jta container	WITHOUT_CLASSIFICATION	0.9996553012051271	WITHOUT_CLASSIFICATION	3.4469879487278543E-4	IMPLEMENTATION
for sane jee/jta containers the transaction itself functions as its identifier	WITHOUT_CLASSIFICATION	0.9999973187262444	WITHOUT_CLASSIFICATION	2.6812737556037353E-6	IMPLEMENTATION
swallow the transaction was finished	WITHOUT_CLASSIFICATION	0.9999976022147947	WITHOUT_CLASSIFICATION	2.3977852052032563E-6	IMPLEMENTATION
all aliastoentitymapresulttransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986098486546	WITHOUT_CLASSIFICATION	1.3901513453979196E-6	IMPLEMENTATION
create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999938102114384	WITHOUT_CLASSIFICATION	6.189788561514784E-6	IMPLEMENTATION
all distinctrootentityresulttransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986098486546	WITHOUT_CLASSIFICATION	1.3901513453979196E-6	IMPLEMENTATION
map of entitymode -> tuplizer	WITHOUT_CLASSIFICATION	0.9999984748486659	WITHOUT_CLASSIFICATION	1.5251513340709455E-6	IMPLEMENTATION
this is a virtual id property	WITHOUT_CLASSIFICATION	0.9997067420677984	WITHOUT_CLASSIFICATION	2.9325793220162395E-4	IMPLEMENTATION
this one needed only for guessentitymode()	WITHOUT_CLASSIFICATION	0.8098458653582109	WITHOUT_CLASSIFICATION	0.1901541346417892	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999899970475785	WITHOUT_CLASSIFICATION	1.0002952421495156E-5	IMPLEMENTATION
todo move this to sf per hhh-3517 also see hhh-1907 and componentmetamodel	WITHOUT_CLASSIFICATION	0.5196118881662253	IMPLEMENTATION	0.4803881118337748	WITHOUT_CLASSIFICATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999997826414748	WITHOUT_CLASSIFICATION	2.173585252035982E-7	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999861719440604	WITHOUT_CLASSIFICATION	1.3828055939541118E-5	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999987242522719	WITHOUT_CLASSIFICATION	1.2757477281313319E-6	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999861719440604	WITHOUT_CLASSIFICATION	1.3828055939541118E-5	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999579001386297	WITHOUT_CLASSIFICATION	4.209986137033924E-5	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999973411677512	WITHOUT_CLASSIFICATION	2.6588322489192183E-6	IMPLEMENTATION
private final sessionfactoryimplementor sessionfactory	WITHOUT_CLASSIFICATION	0.9999966040034102	WITHOUT_CLASSIFICATION	3.39599658988542E-6	IMPLEMENTATION
cached for efficiency	WITHOUT_CLASSIFICATION	0.9999886516681648	WITHOUT_CLASSIFICATION	1.1348331835283124E-5	IMPLEMENTATION
public componentmetamodel(component component sessionfactoryimplementor sessionfactory) {	WITHOUT_CLASSIFICATION	0.9999985462664576	WITHOUT_CLASSIFICATION	1.4537335424835528E-6	IMPLEMENTATION
this.sessionfactory = sessionfactory	WITHOUT_CLASSIFICATION	0.999929917013758	WITHOUT_CLASSIFICATION	7.008298624200439E-5	IMPLEMENTATION
it was not embedded so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999971792426638	WITHOUT_CLASSIFICATION	2.8207573361112527E-6	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999997826414748	WITHOUT_CLASSIFICATION	2.173585252035982E-7	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999987242522719	WITHOUT_CLASSIFICATION	1.2757477281313319E-6	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999579001386297	WITHOUT_CLASSIFICATION	4.209986137033924E-5	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9999303259031103	WITHOUT_CLASSIFICATION	6.967409688979078E-5	IMPLEMENTATION
return currentid	WITHOUT_CLASSIFICATION	0.999967841219232	WITHOUT_CLASSIFICATION	3.2158780767981415E-5	IMPLEMENTATION
reset the id	WITHOUT_CLASSIFICATION	0.9996364183345439	WITHOUT_CLASSIFICATION	3.6358166545612903E-4	IMPLEMENTATION
origin.adddestination( destination ) this was the cause of hhh-242 origin.settype( from_fragment ) set the parent node type so that the ast is properly formed. the destination node will have all the from text. the parent node is a collection join too (voodoo - see joinprocessor)	WITHOUT_CLASSIFICATION	0.9999997656553358	WITHOUT_CLASSIFICATION	2.3434466414376772E-7	IMPLEMENTATION
reset the version	WITHOUT_CLASSIFICATION	0.9999642622213936	WITHOUT_CLASSIFICATION	3.573777860648331E-5	IMPLEMENTATION
the default is to simply not lazy fetch properties for now	WITHOUT_CLASSIFICATION	0.9999050459796562	WITHOUT_CLASSIFICATION	9.495402034374237E-5	IMPLEMENTATION
add the second join the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999793210489489	WITHOUT_CLASSIFICATION	2.0678951051154748E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999746597321373	WITHOUT_CLASSIFICATION	2.5340267862668334E-5	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999973411677512	WITHOUT_CLASSIFICATION	2.6588322489192183E-6	IMPLEMENTATION
determine the id getter and setter methods from the proxy interface (if any) determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.5691596018544194	WITHOUT_CLASSIFICATION	0.4308403981455807	IMPLEMENTATION
return getfactory().getsettings().getbytecodeprovider().getproxyfactoryfactory().buildproxyfactory()	WITHOUT_CLASSIFICATION	0.9999761309747633	WITHOUT_CLASSIFICATION	2.3869025236640344E-5	IMPLEMENTATION
not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.99932926415907	WITHOUT_CLASSIFICATION	6.707358409300374E-4	IMPLEMENTATION
superclass entity-name	WITHOUT_CLASSIFICATION	0.9999889504915627	WITHOUT_CLASSIFICATION	1.1049508437288288E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999746597321373	WITHOUT_CLASSIFICATION	2.5340267862668334E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
init the aliases after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999839703755669	WITHOUT_CLASSIFICATION	1.6029624433112976E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999746597321373	WITHOUT_CLASSIFICATION	2.5340267862668334E-5	IMPLEMENTATION
legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999937725066745	WITHOUT_CLASSIFICATION	6.227493325384604E-6	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999879444742239	WITHOUT_CLASSIFICATION	1.2055525776075266E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
note this affects the return value!	WITHOUT_CLASSIFICATION	0.9999373623580525	WITHOUT_CLASSIFICATION	6.263764194747519E-5	IMPLEMENTATION
need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9998767123881493	WITHOUT_CLASSIFICATION	1.2328761185074073E-4	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999874332495182	WITHOUT_CLASSIFICATION	1.2566750481675488E-5	IMPLEMENTATION
collection types	WITHOUT_CLASSIFICATION	0.9998281932660725	WITHOUT_CLASSIFICATION	1.7180673392733879E-4	IMPLEMENTATION
convenience methods relating to operations across arrays of types	WITHOUT_CLASSIFICATION	0.9997531975196997	WITHOUT_CLASSIFICATION	2.468024803001919E-4	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999985927950154	WITHOUT_CLASSIFICATION	1.4072049846469328E-6	IMPLEMENTATION
blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.999978834541594	WITHOUT_CLASSIFICATION	2.116545840602345E-5	IMPLEMENTATION
value is the entity name	WITHOUT_CLASSIFICATION	0.9999953531608262	WITHOUT_CLASSIFICATION	4.6468391738285115E-6	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999864616980313	WITHOUT_CLASSIFICATION	1.353830196881354E-5	IMPLEMENTATION
generate id select fragment and then property select fragment for each expression just like generateselectfragments().	WITHOUT_CLASSIFICATION	0.9988792052161897	WITHOUT_CLASSIFICATION	0.0011207947838102925	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
xml is the entity name	WITHOUT_CLASSIFICATION	0.9999975424303196	WITHOUT_CLASSIFICATION	2.457569680359641E-6	IMPLEMENTATION
special case this is the leaf of the containment graph even though not immutable	WITHOUT_CLASSIFICATION	0.9998643453103414	WITHOUT_CLASSIFICATION	1.3565468965849066E-4	IMPLEMENTATION
tolerates nulls	WITHOUT_CLASSIFICATION	0.9999673474211657	WITHOUT_CLASSIFICATION	3.2652578834373396E-5	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
metatype is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999905054255702	WITHOUT_CLASSIFICATION	9.494574429824715E-6	IMPLEMENTATION
get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999979899096321	WITHOUT_CLASSIFICATION	2.0100903679915375E-6	IMPLEMENTATION
look through the fromelement's children to find any collections of values that should be fetched	WITHOUT_CLASSIFICATION	0.9999820616239359	WITHOUT_CLASSIFICATION	1.7938376064137676E-5	IMPLEMENTATION
return associationtype.foreign_key_to_parent this is better but causes a transient object exception	WITHOUT_CLASSIFICATION	0.999999852517084	WITHOUT_CLASSIFICATION	1.474829158977469E-7	IMPLEMENTATION
use the lower case function name. remember whether we're in a select clause or not.	WITHOUT_CLASSIFICATION	0.9999990337593104	WITHOUT_CLASSIFICATION	9.662406895874907E-7	IMPLEMENTATION
ident might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999896061314809	WITHOUT_CLASSIFICATION	1.0393868519026236E-5	IMPLEMENTATION
todo!!!	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
st.settimestamp( index new timestamp( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.999988922609038	WITHOUT_CLASSIFICATION	1.1077390961923693E-5	IMPLEMENTATION
st.setdate( index new date( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.999988922609038	WITHOUT_CLASSIFICATION	1.1077390961923693E-5	IMPLEMENTATION
both are timestamps	WITHOUT_CLASSIFICATION	0.9999946389035216	WITHOUT_CLASSIFICATION	5.361096478423713E-6	IMPLEMENTATION
at least one is a plain old date	WITHOUT_CLASSIFICATION	0.999992235360004	WITHOUT_CLASSIFICATION	7.76463999605024E-6	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999884914786715	WITHOUT_CLASSIFICATION	1.1508521328422708E-5	IMPLEMENTATION
if the corresponding sql value is null the reader we got is null as well	WITHOUT_CLASSIFICATION	0.9999999868310941	WITHOUT_CLASSIFICATION	1.3168905899103265E-8	IMPLEMENTATION
fetch reader content up to the end - and put characters in a stringbuffer	WITHOUT_CLASSIFICATION	0.9993207426628646	WITHOUT_CLASSIFICATION	6.792573371353993E-4	IMPLEMENTATION
return stringbuffer content as a large string	WITHOUT_CLASSIFICATION	0.9999240087873936	WITHOUT_CLASSIFICATION	7.599121260641365E-5	IMPLEMENTATION
or types.longvarchar?	WITHOUT_CLASSIFICATION	0.9999875903919347	WITHOUT_CLASSIFICATION	1.2409608065199913E-5	IMPLEMENTATION
not called at runtime so doesn't matter if its slow )	WITHOUT_CLASSIFICATION	0.9999931688594312	WITHOUT_CLASSIFICATION	6.831140568768004E-6	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.7815003541523745	WITHOUT_CLASSIFICATION	0.2184996458476255	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999955322591336	WITHOUT_CLASSIFICATION	4.467740866361997E-6	IMPLEMENTATION
different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999791180559088	WITHOUT_CLASSIFICATION	2.0881944091305894E-5	IMPLEMENTATION
cache this	WITHOUT_CLASSIFICATION	0.9999538613981193	WITHOUT_CLASSIFICATION	4.6138601880781533E-5	IMPLEMENTATION
only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999541049805429	WITHOUT_CLASSIFICATION	4.589501945713371E-5	IMPLEMENTATION
forcefully remove leading ands from where fragments the grammar will handle adding them	WITHOUT_CLASSIFICATION	0.9999973595597579	WITHOUT_CLASSIFICATION	2.6404402421581633E-6	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
create a new filters node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999777611708949	WITHOUT_CLASSIFICATION	2.2238829105059662E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
public object instantiate(object parent sessionimplementor session) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999937548531515	WITHOUT_CLASSIFICATION	6.24514684858424E-6	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999802780782344	WITHOUT_CLASSIFICATION	1.972192176566845E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999802780782344	WITHOUT_CLASSIFICATION	1.972192176566845E-5	IMPLEMENTATION
versiontype impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ note simply returns null for seed() and next() as the only known application of binary types for versioning is for use with the timestamp datatype supported by sybase and sql server which are completely db-generated values	WITHOUT_CLASSIFICATION	0.9999999588424592	WITHOUT_CLASSIFICATION	4.115754077265544E-8	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999985927950154	WITHOUT_CLASSIFICATION	1.4072049846469328E-6	IMPLEMENTATION
not really necessary i guess	WITHOUT_CLASSIFICATION	0.9885539834047304	WITHOUT_CLASSIFICATION	0.011446016595269594	IMPLEMENTATION
clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999959946203322	WITHOUT_CLASSIFICATION	4.005379667866498E-6	IMPLEMENTATION
we do not have to worry about queued additions to uninitialized collections since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9994773162815263	WITHOUT_CLASSIFICATION	5.226837184737326E-4	IMPLEMENTATION
collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999981918907703	WITHOUT_CLASSIFICATION	1.8081092297188976E-6	IMPLEMENTATION
remember the uk value	WITHOUT_CLASSIFICATION	0.9997890267593227	WITHOUT_CLASSIFICATION	2.1097324067721548E-4	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999884914786715	WITHOUT_CLASSIFICATION	1.1508521328422708E-5	IMPLEMENTATION
processcollectionproperty(token q.getcollectionpersister(collectionrole) collectionname)	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
we must use the "remembered" uk value since it is not available from the entityentry during assembly	WITHOUT_CLASSIFICATION	0.9999602833044405	WITHOUT_CLASSIFICATION	3.9716695559433344E-5	IMPLEMENTATION
collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9992271188717318	WITHOUT_CLASSIFICATION	7.728811282682764E-4	IMPLEMENTATION
return false	WITHOUT_CLASSIFICATION	0.9999580268670726	WITHOUT_CLASSIFICATION	4.197313292742298E-5	IMPLEMENTATION
this just handles a particular case of component projection perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999993033346699	WITHOUT_CLASSIFICATION	6.966653300018136E-7	IMPLEMENTATION
note we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999998976373147	WITHOUT_CLASSIFICATION	1.0236268545232018E-7	IMPLEMENTATION
the key is the owning entity itself so get the id from the key	WITHOUT_CLASSIFICATION	0.9999996608304315	WITHOUT_CLASSIFICATION	3.391695685791743E-7	IMPLEMENTATION
if the original is a persistentcollection and that original was not flagged as dirty then reset the target's dirty flag here after the copy operation. </p> one thing to be careful of here is a "bare" original collection in which case we should never ever ever reset the dirty flag on the target because we simply do not know	WITHOUT_CLASSIFICATION	0.9846095500220547	WITHOUT_CLASSIFICATION	0.015390449977945232	IMPLEMENTATION
ignore subselect keywords	WITHOUT_CLASSIFICATION	0.999948503554842	WITHOUT_CLASSIFICATION	5.149644515804031E-5	IMPLEMENTATION
copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999196219194725	WITHOUT_CLASSIFICATION	8.037808052746471E-5	IMPLEMENTATION
for a null target or a target which is the same as the original we need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999989705877093	WITHOUT_CLASSIFICATION	1.0294122907263417E-6	IMPLEMENTATION
by default just use an unanticipated capacity since we don't know how to extract the capacity to use from original here	WITHOUT_CLASSIFICATION	0.9999933780187417	WITHOUT_CLASSIFICATION	6.621981258307619E-6	IMPLEMENTATION
get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999544797360786	WITHOUT_CLASSIFICATION	4.5520263921383735E-5	IMPLEMENTATION
check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999985179158214	WITHOUT_CLASSIFICATION	1.482084178612624E-6	IMPLEMENTATION
check if it is already completely loaded but unowned	WITHOUT_CLASSIFICATION	0.9999997885663926	WITHOUT_CLASSIFICATION	2.1143360733580673E-7	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9911198015504638	WITHOUT_CLASSIFICATION	0.008880198449536216	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
create a new collection wrapper to be initialized later	WITHOUT_CLASSIFICATION	0.9999843609327663	WITHOUT_CLASSIFICATION	1.5639067233662702E-5	IMPLEMENTATION
some jdbc drivers erroneously return an empty array here for a null db value /	WITHOUT_CLASSIFICATION	0.9999832633564317	WITHOUT_CLASSIFICATION	1.673664356828057E-5	IMPLEMENTATION
our column span is the number of columns in the pk	WITHOUT_CLASSIFICATION	0.9999997371531205	WITHOUT_CLASSIFICATION	2.6284687941608986E-7	IMPLEMENTATION
cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999975270172992	WITHOUT_CLASSIFICATION	2.4729827007846445E-6	IMPLEMENTATION
we already know current is not null	WITHOUT_CLASSIFICATION	0.9923805071478781	WITHOUT_CLASSIFICATION	0.007619492852121908	IMPLEMENTATION
the ids are fully resolved so compare them with isdirty() not ismodified()	WITHOUT_CLASSIFICATION	0.9999503595620062	WITHOUT_CLASSIFICATION	4.964043799387942E-5	IMPLEMENTATION
the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9993889989002589	WITHOUT_CLASSIFICATION	6.110010997411263E-4	IMPLEMENTATION
----------------------------------------------------------- constructors	WITHOUT_CLASSIFICATION	0.9999639157139174	WITHOUT_CLASSIFICATION	3.608428608258595E-5	IMPLEMENTATION
----------------------------------------------------- instance variables	WITHOUT_CLASSIFICATION	0.9999872909199845	WITHOUT_CLASSIFICATION	1.2709080015559101E-5	IMPLEMENTATION
public static jdbcexception newjdbcexception(string string sqlexception root string sql) { string = string + " [" + sql + ']' log.error(string root) logexceptions(root) return new jdbcexception(string root sql) } public static jdbcexception newjdbcexception(string string sqlexception root) { log.error(string root) logexceptions(root) return new jdbcexception(string root) }	WITHOUT_CLASSIFICATION	0.9999969027474269	WITHOUT_CLASSIFICATION	3.097252573061137E-6	IMPLEMENTATION
--------------------------------------------------------- public methods	WITHOUT_CLASSIFICATION	0.9999962099279196	WITHOUT_CLASSIFICATION	3.790072080421465E-6	IMPLEMENTATION
compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999915492590494	WITHOUT_CLASSIFICATION	8.450740950564588E-6	IMPLEMENTATION
simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999680816841441	WITHOUT_CLASSIFICATION	3.1918315855945126E-5	IMPLEMENTATION
sybase fail if we don't do that sigh	WITHOUT_CLASSIFICATION	0.9999671951983037	WITHOUT_CLASSIFICATION	3.2804801696317994E-5	IMPLEMENTATION
handles things like a and b or c a and ( b or c ) not a and not b not ( a and b ) x between y and z (overloaded "and") x in ( a b c ) (overloaded brackets) not not a a is not null (overloaded "not") etc and expressions like foo = bar (maps to foo.id = bar.id) foo.bar = 'foo' (maps to foo.bar = 'foo') foo.bar.baz = 1.0 (maps to foo.bar = bar.id and bar.baz = 1.0) 1.0 = foo.bar.baz (maps to bar.baz = 1.0 and foo.bar = bar.id) foo.bar.baz = a.b.c (maps to bar.baz = b.c and foo.bar = bar.id and a.b = b.id) foo.bar.baz + a.b.c (maps to bar.baz + b.c and foo.bar = bar.id and a.b = b.id) ( foo.bar.baz + 1.0 ) < 2.0 (maps to ( bar.baz + 1.0 ) < 2.0 and foo.bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999817935749823	WITHOUT_CLASSIFICATION	1.8206425017639326E-5	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999896994979468	WITHOUT_CLASSIFICATION	1.0300502053189259E-5	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999896994979468	WITHOUT_CLASSIFICATION	1.0300502053189259E-5	IMPLEMENTATION
try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999346217086166	WITHOUT_CLASSIFICATION	6.537829138336344E-5	IMPLEMENTATION
otherwise just dump it	WITHOUT_CLASSIFICATION	0.9998678914260657	WITHOUT_CLASSIFICATION	1.3210857393431872E-4	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999985690924756	WITHOUT_CLASSIFICATION	1.4309075243961242E-6	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999985690924756	WITHOUT_CLASSIFICATION	1.4309075243961242E-6	IMPLEMENTATION
use default behavior	WITHOUT_CLASSIFICATION	0.9999951171751882	WITHOUT_CLASSIFICATION	4.88282481173695E-6	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999880092775026	WITHOUT_CLASSIFICATION	1.1990722497393781E-5	IMPLEMENTATION
the mru cache used to keep hard references to the most recently used query plans note lru here is a bit of a misnomer it indicates that lru entries are removed the actual kept entries are the mru entries	WITHOUT_CLASSIFICATION	0.9998537851780475	WITHOUT_CLASSIFICATION	1.4621482195253181E-4	IMPLEMENTATION
we want to be able to just use the defaults if jndi environment properties are not supplied so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999991793392699	WITHOUT_CLASSIFICATION	8.20660730266245E-7	IMPLEMENTATION
clone -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999970656540759	WITHOUT_CLASSIFICATION	2.9343459241397017E-6	IMPLEMENTATION
serialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999761024212293	WITHOUT_CLASSIFICATION	2.3897578770717745E-5	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999969146215502	WITHOUT_CLASSIFICATION	3.085378449961073E-6	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999969146215502	WITHOUT_CLASSIFICATION	3.085378449961073E-6	IMPLEMENTATION
deserialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999760134138882	WITHOUT_CLASSIFICATION	2.3986586111687484E-5	IMPLEMENTATION
static methods only - hide constructor	WITHOUT_CLASSIFICATION	0.9999739217453729	WITHOUT_CLASSIFICATION	2.6078254627135017E-5	IMPLEMENTATION
&& !('_'==character)	WITHOUT_CLASSIFICATION	0.9999644070780289	WITHOUT_CLASSIFICATION	3.559292197110103E-5	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9999573079928255	WITHOUT_CLASSIFICATION	4.26920071744328E-5	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9999573079928255	WITHOUT_CLASSIFICATION	4.26920071744328E-5	IMPLEMENTATION
includes last '.'	WITHOUT_CLASSIFICATION	0.9998597169583398	WITHOUT_CLASSIFICATION	1.4028304166019504E-4	IMPLEMENTATION
+1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999639680548554	WITHOUT_CLASSIFICATION	3.6031945144519514E-5	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999483990636318	WITHOUT_CLASSIFICATION	5.160093636821375E-5	IMPLEMENTATION
first time we find match!	WITHOUT_CLASSIFICATION	0.9999713973103866	WITHOUT_CLASSIFICATION	2.860268961335004E-5	IMPLEMENTATION
entitynames may now include slashes for the representations classname may be an inner class	WITHOUT_CLASSIFICATION	0.99999974519834	WITHOUT_CLASSIFICATION	2.548016599839239E-7	IMPLEMENTATION
wrapped iterators	WITHOUT_CLASSIFICATION	0.9999629429713119	WITHOUT_CLASSIFICATION	3.705702868815196E-5	IMPLEMENTATION
index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999850636245338	WITHOUT_CLASSIFICATION	1.4936375466301034E-5	IMPLEMENTATION
the current iterator	WITHOUT_CLASSIFICATION	0.9999273628611167	WITHOUT_CLASSIFICATION	7.26371388832281E-5	IMPLEMENTATION
the last used iterator	WITHOUT_CLASSIFICATION	0.999991967904245	WITHOUT_CLASSIFICATION	8.03209575493251E-6	IMPLEMENTATION
it was a boolean expression	WITHOUT_CLASSIFICATION	0.999998565498732	WITHOUT_CLASSIFICATION	1.4345012679340895E-6	IMPLEMENTATION
public static object[] clone(class elementclass object[] array) {object[] result = (object[]) array.newinstance( elementclass array.length )system.arraycopy(array 0 result 0 array.length)return result}	WITHOUT_CLASSIFICATION	0.9999993678872335	WITHOUT_CLASSIFICATION	6.32112766536353E-7	IMPLEMENTATION
call this before any iterator method to make sure that the current iterator is not exhausted	WITHOUT_CLASSIFICATION	0.9824205038150111	WITHOUT_CLASSIFICATION	0.01757949618498887	IMPLEMENTATION
doable if needed	WITHOUT_CLASSIFICATION	0.93410017530932	WITHOUT_CLASSIFICATION	0.0658998246906801	IMPLEMENTATION
set last used iterator here in case the user calls remove before calling hasnext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999955996795589	WITHOUT_CLASSIFICATION	4.400320441085943E-6	IMPLEMENTATION
peek ahead	WITHOUT_CLASSIFICATION	0.9999904043288883	WITHOUT_CLASSIFICATION	9.595671111682915E-6	IMPLEMENTATION
if we reach the end of the string w/o finding the matching end that is an exception	WITHOUT_CLASSIFICATION	0.999998318428557	WITHOUT_CLASSIFICATION	1.6815714430376769E-6	IMPLEMENTATION
we have a placeholder spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999113644225825	WITHOUT_CLASSIFICATION	8.86355774175009E-5	IMPLEMENTATION
make sure spinning forward did not put us past the end of the buffer	WITHOUT_CLASSIFICATION	0.9679190907221852	WITHOUT_CLASSIFICATION	0.032080909277814776	IMPLEMENTATION
first try to locate this resource through the current context classloader.	WITHOUT_CLASSIFICATION	0.9992637374315738	WITHOUT_CLASSIFICATION	7.362625684262249E-4	IMPLEMENTATION
next try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999177560610794	WITHOUT_CLASSIFICATION	8.224393892067583E-5	IMPLEMENTATION
next try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9997171542226023	WITHOUT_CLASSIFICATION	2.82845777397639E-4	IMPLEMENTATION
anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999245734571715	WITHOUT_CLASSIFICATION	7.542654282854415E-5	IMPLEMENTATION
would need an identityset for this!	WITHOUT_CLASSIFICATION	0.9997380796502181	WITHOUT_CLASSIFICATION	2.619203497818856E-4	IMPLEMENTATION
arrays.aslist doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999939276103611	WITHOUT_CLASSIFICATION	6.0723896388295565E-6	IMPLEMENTATION
faster?	WITHOUT_CLASSIFICATION	0.9999870073026745	WITHOUT_CLASSIFICATION	1.2992697325515284E-5	IMPLEMENTATION
the name of a class	WITHOUT_CLASSIFICATION	0.9999978153412029	WITHOUT_CLASSIFICATION	2.1846587971219418E-6	IMPLEMENTATION
its the listener class name	WITHOUT_CLASSIFICATION	0.9999962899529385	WITHOUT_CLASSIFICATION	3.7100470614261948E-6	IMPLEMENTATION
allow 987654321	WITHOUT_CLASSIFICATION	0.9997634650077496	WITHOUT_CLASSIFICATION	2.3653499225031514E-4	IMPLEMENTATION
default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999999052131084	WITHOUT_CLASSIFICATION	9.478689159269028E-8	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999966132635096	WITHOUT_CLASSIFICATION	3.3867364905026693E-6	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999962244675074	WITHOUT_CLASSIFICATION	3.775532492523401E-6	IMPLEMENTATION
first lets determine whether to apply cglib or javassist based instrumentation	WITHOUT_CLASSIFICATION	0.999996564373999	WITHOUT_CLASSIFICATION	3.4356260008985767E-6	IMPLEMENTATION
make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999847787488267	WITHOUT_CLASSIFICATION	1.522125117334413E-5	IMPLEMENTATION
entirely optional!!	WITHOUT_CLASSIFICATION	0.9999639919245199	WITHOUT_CLASSIFICATION	3.600807548001912E-5	IMPLEMENTATION
its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999652258907067	WITHOUT_CLASSIFICATION	3.4774109293280944E-5	IMPLEMENTATION
context.unbind(boundname)	WITHOUT_CLASSIFICATION	0.9999783961931803	WITHOUT_CLASSIFICATION	2.160380681964478E-5	IMPLEMENTATION
readresolveobject	WITHOUT_CLASSIFICATION	0.9999639887799223	WITHOUT_CLASSIFICATION	3.6011220077721846E-5	IMPLEMENTATION
cfg.setproperty("hibernate.show_sql" "true")	WITHOUT_CLASSIFICATION	0.9999733797829043	WITHOUT_CLASSIFICATION	2.6620217095617283E-5	IMPLEMENTATION
defensive convenience methods	WITHOUT_CLASSIFICATION	0.999976079005828	WITHOUT_CLASSIFICATION	2.392099417201728E-5	IMPLEMENTATION
create the sessionfactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999975150316966	WITHOUT_CLASSIFICATION	2.4849683032349054E-6	IMPLEMENTATION
make sure you log the exception as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999784459693835	WITHOUT_CLASSIFICATION	2.15540306165298E-5	IMPLEMENTATION
begin unit of work	WITHOUT_CLASSIFICATION	0.9999543212160434	WITHOUT_CLASSIFICATION	4.5678783956473244E-5	IMPLEMENTATION
write html header	WITHOUT_CLASSIFICATION	0.9999653115350248	WITHOUT_CLASSIFICATION	3.468846497529187E-5	IMPLEMENTATION
handle actions	WITHOUT_CLASSIFICATION	0.9998341565292538	WITHOUT_CLASSIFICATION	1.6584347074627133E-4	IMPLEMENTATION
print page	WITHOUT_CLASSIFICATION	0.9999960918570331	WITHOUT_CLASSIFICATION	3.908142966831388E-6	IMPLEMENTATION
write html footer	WITHOUT_CLASSIFICATION	0.999921718490955	WITHOUT_CLASSIFICATION	7.828150904495501E-5	IMPLEMENTATION
end unit of work	WITHOUT_CLASSIFICATION	0.9998395654832167	WITHOUT_CLASSIFICATION	1.6043451678325463E-4	IMPLEMENTATION
start the session to be used for this request	WITHOUT_CLASSIFICATION	0.999983938934899	WITHOUT_CLASSIFICATION	1.6061065100936727E-5	IMPLEMENTATION
make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9989253656796988	WITHOUT_CLASSIFICATION	0.0010746343203011494	IMPLEMENTATION
pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9998043142538854	WITHOUT_CLASSIFICATION	1.9568574611460404E-4	IMPLEMENTATION
remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999880516666468	WITHOUT_CLASSIFICATION	1.1948333353123642E-5	IMPLEMENTATION
eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999599260863323	WITHOUT_CLASSIFICATION	4.007391366774943E-5	IMPLEMENTATION
if we want to handle it bidirectional and detached we also need to load this collection with an eager outer-join fetch this time with criteria and not hql	WITHOUT_CLASSIFICATION	0.5897811640847382	WITHOUT_CLASSIFICATION	0.41021883591526187	IMPLEMENTATION
event anevent = (event) session .createcriteria(event.class).setfetchmode("participants" fetchmode.join) .add( expression.eq("id" eventid) ) .uniqueresult() eager fetch the colleciton so we can use it detached	WITHOUT_CLASSIFICATION	0.9997398880681286	WITHOUT_CLASSIFICATION	2.6011193187137617E-4	IMPLEMENTATION
end of first unit of work	WITHOUT_CLASSIFICATION	0.9998657733913482	WITHOUT_CLASSIFICATION	1.3422660865179234E-4	IMPLEMENTATION
or bidirectional safety method setting both sides aperson.addtoevent(anevent)	WITHOUT_CLASSIFICATION	0.9999876988760023	WITHOUT_CLASSIFICATION	1.2301123997748661E-5	IMPLEMENTATION
begin second unit of work	WITHOUT_CLASSIFICATION	0.9999830373232563	WITHOUT_CLASSIFICATION	1.696267674363944E-5	IMPLEMENTATION
reattachment of aperson	WITHOUT_CLASSIFICATION	0.9999860815503357	WITHOUT_CLASSIFICATION	1.391844966424811E-5	IMPLEMENTATION
the getemailaddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9996309052062878	WITHOUT_CLASSIFICATION	3.69094793712212E-4	IMPLEMENTATION
we need our tm so get it now and avoid doing other work if there is a problem	WITHOUT_CLASSIFICATION	0.9999993932756552	WITHOUT_CLASSIFICATION	6.067243446532916E-7	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999363820702339	WITHOUT_CLASSIFICATION	6.361792976606372E-5	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999363820702339	WITHOUT_CLASSIFICATION	6.361792976606372E-5	IMPLEMENTATION
jbc put a version in the node when it created as part of some internal operation. we are always newer but if the jbc version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999999999814676	WITHOUT_CLASSIFICATION	1.853245896614063E-11	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for properties with hibernate-specific overrides to detect and warn about conflicting declarations	WITHOUT_CLASSIFICATION	0.9998749533528387	WITHOUT_CLASSIFICATION	1.2504664716130756E-4	IMPLEMENTATION
not null if the isolation level has been specified in the configuration file. otherwise it is left to the driver's default value.	WITHOUT_CLASSIFICATION	0.9997092211417674	WITHOUT_CLASSIFICATION	2.9077885823261676E-4	IMPLEMENTATION
configured outside of hibernate (i.e. servlet container or java bean container already has proxool pools running and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999998434994996	WITHOUT_CLASSIFICATION	1.5650050032353156E-7	IMPLEMENTATION
if you're closing down the connectionprovider chances are an is not a real big deal just warn	WITHOUT_CLASSIFICATION	0.9999841489834116	WITHOUT_CLASSIFICATION	1.585101658846266E-5	IMPLEMENTATION
(as is always optional for consistency with sql/oql)	WITHOUT_CLASSIFICATION	0.9999943771264647	WITHOUT_CLASSIFICATION	5.622873535364794E-6	IMPLEMENTATION
process the "new" hql style where aliases are assigned _after_ the class name or path expression ie. using the as construction	WITHOUT_CLASSIFICATION	0.999998028922963	WITHOUT_CLASSIFICATION	1.971077037013272E-6	IMPLEMENTATION
the loaded owner will be set to null after the collection is removed so capture its value as the affected owner so it is accessible to both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999998123563895	WITHOUT_CLASSIFICATION	1.8764361052231053E-7	IMPLEMENTATION
is a primitive type invokespecial	WITHOUT_CLASSIFICATION	0.9999956941032598	WITHOUT_CLASSIFICATION	4.305896740176053E-6	IMPLEMENTATION
array of primitive type do nothing	WITHOUT_CLASSIFICATION	0.9999979670633301	WITHOUT_CLASSIFICATION	2.032936669884807E-6	IMPLEMENTATION
handle a path expression or class name that appears at the start in the "new" hql style or an alias that appears at the start in the "old" hql style	WITHOUT_CLASSIFICATION	0.9999837842776792	WITHOUT_CLASSIFICATION	1.6215722320869292E-5	IMPLEMENTATION
handle <= >= != is not not between not in	WITHOUT_CLASSIFICATION	0.9997928113069142	WITHOUT_CLASSIFICATION	2.0718869308591098E-4	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.999999991998548	WITHOUT_CLASSIFICATION	8.00145200087681E-9	IMPLEMENTATION
transfer an explicitly defined entity name handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999618025665199	WITHOUT_CLASSIFICATION	3.8197433480080085E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999988108963116	WITHOUT_CLASSIFICATION	1.1891036884240897E-6	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999988108963116	WITHOUT_CLASSIFICATION	1.1891036884240897E-6	IMPLEMENTATION
get meta's from <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999981511365158	WITHOUT_CLASSIFICATION	1.8488634842451105E-6	IMPLEMENTATION
parameters on the property mapping should override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999229530955281	WITHOUT_CLASSIFICATION	7.704690447191207E-5	IMPLEMENTATION
fetch="join" overrides default laziness fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999960550689633	WITHOUT_CLASSIFICATION	3.944931036745391E-6	IMPLEMENTATION
note special case default to join and non-lazy for the "second join" of the many-to-many	WITHOUT_CLASSIFICATION	0.9999996093352913	WITHOUT_CLASSIFICATION	3.906647086668449E-7	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999822527050433	WITHOUT_CLASSIFICATION	1.7747294956739003E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999929129846229	WITHOUT_CLASSIFICATION	7.08701537704991E-6	IMPLEMENTATION
void setcomponenttuplizerfactory(componenttuplizerfactory componenttuplizerfactory) { this.componenttuplizerfactory = componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9998548038383301	WITHOUT_CLASSIFICATION	1.4519616166982493E-4	IMPLEMENTATION
element index -> id	WITHOUT_CLASSIFICATION	0.9999339413068605	WITHOUT_CLASSIFICATION	6.605869313944726E-5	IMPLEMENTATION
note that it might be better to iterate the snapshot but this is safe assuming the user implements equals() properly as required by the set contract!	WITHOUT_CLASSIFICATION	0.999995029531302	WITHOUT_CLASSIFICATION	4.970468698040787E-6	IMPLEMENTATION
collections detect changes made via their public interface and mark themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9989700402670187	WITHOUT_CLASSIFICATION	0.0010299597329812694	IMPLEMENTATION
essentially if the real session is closed allow any method call to pass through since the real session will complain by throwing an appropriate exception note that allowing close() above has the same basic effect but we capture that there simply to perform the unbind	WITHOUT_CLASSIFICATION	0.9999985128783981	WITHOUT_CLASSIFICATION	1.4871216018532885E-6	IMPLEMENTATION
the default sqlexceptionconverter for all dialects is based on sqlstate since sqlerrorcode is extremely vendor-specific. specific dialects may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9990490486772708	WITHOUT_CLASSIFICATION	9.509513227291094E-4	IMPLEMENTATION
only necessary for postgre < 7.4 httpanoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999796132735507	WITHOUT_CLASSIFICATION	2.0386726449359635E-5	IMPLEMENTATION
select topic syntax from information_schema.help where section like 'function%' order by section topic see also -> httpwww.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999993362731957	WITHOUT_CLASSIFICATION	6.63726804269526E-7	IMPLEMENTATION
registercolumntype(types.varbinary "character($l)") registercolumntype(types.blob "character($l)" ) for use prior to cp 11.0 registercolumntype(types.clob "character($l)" )	WITHOUT_CLASSIFICATION	0.999975548836571	WITHOUT_CLASSIFICATION	2.445116342908499E-5	IMPLEMENTATION
the blob type requires a size arguement - this defaults to bytes - no arg defaults to 1 whole byte! other argument mods include k - kilobyte m - megabyte g - gigabyte. refer to the pbdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999710555299715	WITHOUT_CLASSIFICATION	2.894447002851127E-5	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9959864702497895	WITHOUT_CLASSIFICATION	0.004013529750210514	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999997143964547	WITHOUT_CLASSIFICATION	2.8560354526067816E-7	IMPLEMENTATION
add the comment nest the main query in an outer select add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999998331942533	WITHOUT_CLASSIFICATION	1.6680574661537952E-7	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.999993655335346	WITHOUT_CLASSIFICATION	6.344664654000951E-6	IMPLEMENTATION
note for object <-> sql datatype mappings see configuration manager | advanced | sql | system ddl datatype mappings tbdregistercolumntype(types.binary "binary($1)") changed 08-11-2005 jsl	WITHOUT_CLASSIFICATION	0.999999999091598	WITHOUT_CLASSIFICATION	9.084019640176327E-10	IMPLEMENTATION
trim(end_keyword string-expression-1 from string-expression-2) use hibernate implementation "from" is one of the parameters they pass in position ?3 registerfunction( "trim" new sqlfunctiontemplate(hibernate.string "trim(?1 ?2 from ?3)") )	WITHOUT_CLASSIFICATION	0.9999960927939071	WITHOUT_CLASSIFICATION	3.907206092868191E-6	IMPLEMENTATION
whether this dialect has an identity clause added to the data type or a completely seperate identity data type	WITHOUT_CLASSIFICATION	0.9999999394070107	WITHOUT_CLASSIFICATION	6.059298924438166E-8	IMPLEMENTATION
according to both the ansi-sql and jpa specs trim takes a variable number of parameters between 1 and 4. at least one paramer (trimsource) is required. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if <trim specification> is omitted both is assumed. if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.9999999969576712	WITHOUT_CLASSIFICATION	3.0423287838903257E-9	IMPLEMENTATION
/ prepare persisters and link them up with their cache region/access-strategy	WITHOUT_CLASSIFICATION	0.9999981140687141	WITHOUT_CLASSIFICATION	1.8859312858804756E-6	IMPLEMENTATION
named queries	WITHOUT_CLASSIFICATION	0.999983767491513	WITHOUT_CLASSIFICATION	1.6232508487059292E-5	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999851595906882	WITHOUT_CLASSIFICATION	1.4840409311780118E-5	IMPLEMENTATION
does not handle arrays (thats ok cos they can't be lazy) or newly instantiated collections so we can do the cast	WITHOUT_CLASSIFICATION	0.9996333670078847	WITHOUT_CLASSIFICATION	3.666329921152617E-4	IMPLEMENTATION
collection deletions are a special case since update() can add deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999821745360578	WITHOUT_CLASSIFICATION	1.7825463942238986E-5	IMPLEMENTATION
we can do the cast since orphan-delete does not apply to 1. newly instantiated collections 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9998258305683645	WITHOUT_CLASSIFICATION	1.7416943163538225E-4	IMPLEMENTATION
if the natural-id is marked as non-mutable it is not retrieved during a normal database-snapshot operation	WITHOUT_CLASSIFICATION	0.999989024735814	WITHOUT_CLASSIFICATION	1.0975264186138849E-5	IMPLEMENTATION
watch out for a case where old is still referenced somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999999752720415	WITHOUT_CLASSIFICATION	2.47279584658924E-8	IMPLEMENTATION
slice to get the columns for this component property	WITHOUT_CLASSIFICATION	0.9999997316078194	WITHOUT_CLASSIFICATION	2.6839218060926323E-7	IMPLEMENTATION
int result = 17 result = 37 result + type.hashcode() result = 37 result + ( value==null ? 0 value.hashcode() ) return result	WITHOUT_CLASSIFICATION	0.9999985478319604	WITHOUT_CLASSIFICATION	1.4521680395056347E-6	IMPLEMENTATION
the collectionentry.isreached() stuff is just to detect any silly users who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999988290916318	WITHOUT_CLASSIFICATION	1.1709083681874905E-6	IMPLEMENTATION
detached collection wrappers that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.997447737467072	WITHOUT_CLASSIFICATION	0.002552262532928047	IMPLEMENTATION
the unique property value represented here may or may not be serializable so we do an explicit check here in order to generate a better error message	WITHOUT_CLASSIFICATION	0.9503264148565117	WITHOUT_CLASSIFICATION	0.0496735851434883	IMPLEMENTATION
if the version of a newly instantiated object is not the same as the version seed value use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999566984423574	WITHOUT_CLASSIFICATION	4.330155764259993E-5	IMPLEMENTATION
ie. we never have to null out a reference to an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999965696824764	WITHOUT_CLASSIFICATION	3.430317523521765E-6	IMPLEMENTATION
ignore this row the collection is in process of being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999992076807446	WITHOUT_CLASSIFICATION	7.923192554772612E-7	IMPLEMENTATION
entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currently not yet used	WITHOUT_CLASSIFICATION	0.9962037754154982	WITHOUT_CLASSIFICATION	0.0037962245845017356	IMPLEMENTATION
should be ok performance-wise to generate new delegate instances for each request since these are locally stack-scoped. besides it makes the code much easier to read than the old transactionhelper stuff	WITHOUT_CLASSIFICATION	0.9999999042247363	WITHOUT_CLASSIFICATION	9.577526373881983E-8	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998965298266235	WITHOUT_CLASSIFICATION	1.0347017337651267E-4	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998965298266235	WITHOUT_CLASSIFICATION	1.0347017337651267E-4	IMPLEMENTATION
wrap up any new collections directly referenced by the object or its components	WITHOUT_CLASSIFICATION	0.9999999190083424	WITHOUT_CLASSIFICATION	8.09916576732196E-8	IMPLEMENTATION
remove any snapshot not really for memory management purposes but rather because it might now be stale and there is no longer any entityentry to take precedence this is now handled by removeentity() session.getpersistencecontext().removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.9999932364066123	WITHOUT_CLASSIFICATION	6.7635933876687306E-6	IMPLEMENTATION
skip this check for composite-ids relating to dom4j entity-mode alternatively we could add a check to make sure the incoming id value is an instance of element	WITHOUT_CLASSIFICATION	0.9946689493498084	WITHOUT_CLASSIFICATION	0.005331050650191648	IMPLEMENTATION
upgrade the lock if necessary lock(result lockmode)	WITHOUT_CLASSIFICATION	0.9999936512475287	WITHOUT_CLASSIFICATION	6.348752471304112E-6	IMPLEMENTATION
now any collections that are initialized inside this block do not get updated - they are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9711876712036804	WITHOUT_CLASSIFICATION	0.028812328796319557	IMPLEMENTATION
we must clone embedded composite identifiers or we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999997763054354	WITHOUT_CLASSIFICATION	2.2369456460164292E-7	IMPLEMENTATION
sub-insertions should occur before containing insertion so try to do the callback now	WITHOUT_CLASSIFICATION	0.9998391741759629	WITHOUT_CLASSIFICATION	1.608258240371464E-4	IMPLEMENTATION
the entity is not associated with the session so try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9993420533732101	WITHOUT_CLASSIFICATION	6.579466267899055E-4	IMPLEMENTATION
scan the query string for class names appearing in the from clause and replace with all persistent implementors of the class/interface returning multiple query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999460369327317	WITHOUT_CLASSIFICATION	5.396306726827285E-5	IMPLEMENTATION
save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407324825756	WITHOUT_CLASSIFICATION	5.9267517424325927E-5	IMPLEMENTATION
evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407324825756	WITHOUT_CLASSIFICATION	5.9267517424325927E-5	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999973688517185	WITHOUT_CLASSIFICATION	2.6311482815860555E-6	IMPLEMENTATION
if it is an uninitialized proxy pointing with this session then when it is accessed the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999998885842798	WITHOUT_CLASSIFICATION	1.1141572015877695E-7	IMPLEMENTATION
generate an explicit join for the root dot node. the implied joins will be collected and passed up to the root dot node.	WITHOUT_CLASSIFICATION	0.9999956104703623	WITHOUT_CLASSIFICATION	4.3895296377101235E-6	IMPLEMENTATION
a session is considered to contain an entity only if the entity has an entry in the session's persistence context and the entry reports that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9950277347119344	WITHOUT_CLASSIFICATION	0.0049722652880656104	IMPLEMENTATION
does the collection referenced by this fromelement specify an order-by attribute? if so attach it to the query's order-by	WITHOUT_CLASSIFICATION	0.9999998815401906	WITHOUT_CLASSIFICATION	1.1845980932099188E-7	IMPLEMENTATION
and the token could be an identifer and the error is a mismatched token error	WITHOUT_CLASSIFICATION	0.9999834748731669	WITHOUT_CLASSIFICATION	1.6525126833104615E-5	IMPLEMENTATION
if a where clause was specified in the update/delete query use it to limit the returned ids here	WITHOUT_CLASSIFICATION	0.9999998015044789	WITHOUT_CLASSIFICATION	1.984955210972944E-7	IMPLEMENTATION
int parameterstart = getwalker().getnumberofparametersinsetclause() list allparams = getidselectparameterspecifications() iterator whereparams = allparams.sublist( parameterstart allparams.size() ).iterator()	WITHOUT_CLASSIFICATION	0.999981637562632	WITHOUT_CLASSIFICATION	1.836243736801948E-5	IMPLEMENTATION
default implementation if this node has a data type and that data type is not an association then this is scalar.	WITHOUT_CLASSIFICATION	0.9999952090938622	WITHOUT_CLASSIFICATION	4.790906137793911E-6	IMPLEMENTATION
resolve the lhs fully generate implicit joins. pass in the property name so that the resolver can discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999907410362826	WITHOUT_CLASSIFICATION	9.258963717351862E-6	IMPLEMENTATION
if the propertytype is null and there isn't a parent just stop now there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999999341058756	WITHOUT_CLASSIFICATION	6.589412434007623E-8	IMPLEMENTATION
we do not look for an existing join on the same path because it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9907798254247902	WITHOUT_CLASSIFICATION	0.009220174575209907	IMPLEMENTATION
our parent is another dot node meaning we are being further dereferenced. thus we need to generate a join unless the parent refers to the associated entity's pk (because 'our' table would know the fk).	WITHOUT_CLASSIFICATION	0.9871095965862701	WITHOUT_CLASSIFICATION	0.012890403413730031	IMPLEMENTATION
public final currency getcurrency(int col) throws hibernateexception {return (currency) get(col)}	WITHOUT_CLASSIFICATION	0.9999925815625752	WITHOUT_CLASSIFICATION	7.4184374247320595E-6	IMPLEMENTATION
here we have two possibilities 1) the property-name matches the explicitly identifier property name 2) the property-name matches the implicit 'id' property name	WITHOUT_CLASSIFICATION	0.9998968878531462	WITHOUT_CLASSIFICATION	1.0311214685386967E-4	IMPLEMENTATION
set the unresolved path in this node and the parent. set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999547256212812	WITHOUT_CLASSIFICATION	4.527437871871461E-5	IMPLEMENTATION
get the first child to be considered. sub-classes may do this differently in order to skip nodes that are not select expressions (e.g. distinct).	WITHOUT_CLASSIFICATION	0.9999209817076514	WITHOUT_CLASSIFICATION	7.901829234853036E-5	IMPLEMENTATION
if this is an entity and the property is the identifier property then use getidentifiertype(). note that the propertyname.equals( propertypath ) checks whether we have a component key reference where the component class property name is the same as the entity id property name if the two are not equal this is the case and we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999990505453619	WITHOUT_CLASSIFICATION	9.494546380257362E-7	IMPLEMENTATION
for a subquery the alias to use depends on a few things (we already know this is not an overall select) 1) if this from_element represents a correlation to the outer-most query a) if the outer query represents a multi-table persister we need to use the given alias in anticipation of one of the multi-table executors being used (as this subquery will actually be used in the "id select" phase of that multi-table executor) b) otherwise we need to use the persister's table name as the column qualification 2) otherwise (not correlated) use the given alias	WITHOUT_CLASSIFICATION	0.997947181089287	WITHOUT_CLASSIFICATION	0.002052818910712944	IMPLEMENTATION
not a collection? return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9992376320348312	WITHOUT_CLASSIFICATION	7.623679651688237E-4	IMPLEMENTATION
collection of <many-to-any/> mappings used to circumvent the component-collection check below	WITHOUT_CLASSIFICATION	0.999921690228667	WITHOUT_CLASSIFICATION	7.830977133306976E-5	IMPLEMENTATION
otherwise the destination node was implied by the from clause and the from clause processor will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999981159652578	WITHOUT_CLASSIFICATION	1.8840347421574278E-6	IMPLEMENTATION
if the first identifier in the path referrs to the class alias (not the class name) then this is a correlated subselect. if it's a correlated sub-select use the existing table alias. otherwise generate a new one.	WITHOUT_CLASSIFICATION	0.9999971657042683	WITHOUT_CLASSIFICATION	2.8342957315911184E-6	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999952164327126	WITHOUT_CLASSIFICATION	4.783567287397877E-6	IMPLEMENTATION
an ident node can represent an index expression if the ident represents a naked property ref note this makes the assumption (which is currently the case in the hql-sql grammar) that the ident is first resolved itself (addrexpr -> resolve()). the other option if that changes is to call resolve from here but it is currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999728609068	WITHOUT_CLASSIFICATION	2.7139093132747568E-8	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9997850767997876	WITHOUT_CLASSIFICATION	2.1492320021228873E-4	IMPLEMENTATION
if this is an implied join in a from clause then use ansi-style joining and set the flag on the fromelement that indicates that it was implied in the from clause itself.	WITHOUT_CLASSIFICATION	0.9999999389786216	WITHOUT_CLASSIFICATION	6.102137845398088E-8	IMPLEMENTATION
origin.adddestination(destination) add the query spaces.	WITHOUT_CLASSIFICATION	0.9999779799680706	WITHOUT_CLASSIFICATION	2.2020031929434404E-5	IMPLEMENTATION
for an explicit many-to-many relationship add a second join from the intermediate (many-to-many) table to the destination table. also make sure that the from element's idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.999998947832097	WITHOUT_CLASSIFICATION	1.052167903070393E-6	IMPLEMENTATION
reset the node type because the rest of the system is expecting from_fragment all we wanted was for the factory to create the right sub-class. this might get reset again later on anyway to make the sql generation simpler.	WITHOUT_CLASSIFICATION	0.9999477978153384	WITHOUT_CLASSIFICATION	5.220218466156796E-5	IMPLEMENTATION
explicit = true this is an explict select. arraylist sqlresulttypelist = new arraylist()	WITHOUT_CLASSIFICATION	0.999995561222233	WITHOUT_CLASSIFICATION	4.438777766993434E-6	IMPLEMENTATION
sqlresulttypelist.add( type ) generate the select expression.	WITHOUT_CLASSIFICATION	0.9999326799353914	WITHOUT_CLASSIFICATION	6.732006460862878E-5	IMPLEMENTATION
if the expression list has exactly one expression and the type of the expression is a collection then this might be a collection function such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999996921047503	WITHOUT_CLASSIFICATION	3.0789524980864173E-7	IMPLEMENTATION
need to parse off the column qualifiers this is assuming (which is true as of now) that this is only used from update and delete hql statement parsing	WITHOUT_CLASSIFICATION	0.9999325205115447	WITHOUT_CLASSIFICATION	6.747948845532702E-5	IMPLEMENTATION
for regression testing against output from the old parser found it easiest to simply reorder the fromelements here into ascending order in terms of injecting them into the resulting sql ast in orders relative to those expected by the old parser this is definitely another of those "only needed for regression purposes". the syntheticandfactory then simply injects them as it encounters them.	WITHOUT_CLASSIFICATION	0.9999959960966636	WITHOUT_CLASSIFICATION	4.003903336428798E-6	IMPLEMENTATION
the uber-rule here is that we need to include subclass joins if the fromelement is in any way dereferenced by a property from the subclass table otherwise we end up with column references qualified by a non-existent table reference in the resulting sql	WITHOUT_CLASSIFICATION	0.9999651091869586	WITHOUT_CLASSIFICATION	3.489081304148113E-5	IMPLEMENTATION
classic translator does not support collection of ordinal param metadata	WITHOUT_CLASSIFICATION	0.9987632343517698	WITHOUT_CLASSIFICATION	0.0012367656482301572	IMPLEMENTATION
the following variables are stacks that keep information about each subexpression in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999999523685543	WITHOUT_CLASSIFICATION	4.763144568704671E-8	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.999999991998548	WITHOUT_CLASSIFICATION	8.00145200087681E-9	IMPLEMENTATION
should not be able to reach last without maxposition being set unless there are no results	WITHOUT_CLASSIFICATION	0.999983614403902	WITHOUT_CLASSIFICATION	1.6385596097978053E-5	IMPLEMENTATION
we found it in the temp pc. should indicate we are in the midst of processing a result set containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999928360212434	WITHOUT_CLASSIFICATION	7.163978756519361E-6	IMPLEMENTATION
do not use proxiesbykey since not all proxies that point to this session's instances are in that collection!	WITHOUT_CLASSIFICATION	0.9997665526258148	WITHOUT_CLASSIFICATION	2.3344737418511038E-4	IMPLEMENTATION
if there is no tm configured we will not be able to access the javax.transaction.transaction object in order to register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999999243430422	WITHOUT_CLASSIFICATION	7.565695780916239E-8	IMPLEMENTATION
since the result set cursor is always left at the first physical row after the "last processed" we need to jump back one position to get the key value we are interested in skipping	WITHOUT_CLASSIFICATION	0.9999999058602085	WITHOUT_CLASSIFICATION	9.413979158580787E-8	IMPLEMENTATION
true if this is a query and we are loading multiple instances of the same collection role otherwise this is a collectioninitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999971749009794	WITHOUT_CLASSIFICATION	2.825099020642518E-6	IMPLEMENTATION
we don't need to worry about existing version being uninitialized because this block isn't called by a re-entrant load (re-entrant loads _always_ have lock mode none)	WITHOUT_CLASSIFICATION	0.9997786369290981	WITHOUT_CLASSIFICATION	2.2136307090198394E-4	IMPLEMENTATION
add temp entry so that the next step is circular-reference safe - only needed because some types don't take proper advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.6575904246276887	WITHOUT_CLASSIFICATION	0.3424095753723113	IMPLEMENTATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999057655894	WITHOUT_CLASSIFICATION	9.42344106199857E-8	IMPLEMENTATION
log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9550705680782509	WITHOUT_CLASSIFICATION	0.044929431921749086	IMPLEMENTATION
ps.close() just close it do not try to return it to the pool! note early exit!	WITHOUT_CLASSIFICATION	0.9999333460205052	WITHOUT_CLASSIFICATION	6.665397949483764E-5	IMPLEMENTATION
this has been shown to happen occasionally in rare cases when using a transaction manager + transaction-timeout where the timeout calls back through hibernate's registered transaction synchronization on a separate "reaping" thread. in cases where that reaping thread executes through this block at the same time the main application thread does we can get into situations where these cmes occur. and though it is not "allowed" per-se the end result without handling it specifically is infinite looping. so here we simply break the loop	WITHOUT_CLASSIFICATION	0.9994298360202755	WITHOUT_CLASSIFICATION	5.701639797245455E-4	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9992844047929402	WITHOUT_CLASSIFICATION	7.155952070597706E-4	IMPLEMENTATION
can't cache this stuff either (per-invocation) we are given a map of user-alias -> lock mode create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999997197293736	WITHOUT_CLASSIFICATION	2.8027062641455037E-7	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns getcollectiontable().createuniquekey( getidentifier().getconstraintcolumns() )	WITHOUT_CLASSIFICATION	0.9997441099014107	WITHOUT_CLASSIFICATION	2.558900985892661E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999934624486813	WITHOUT_CLASSIFICATION	6.53755131878994E-6	IMPLEMENTATION
isset = collection.isset() issorted = collection.issorted()	WITHOUT_CLASSIFICATION	0.9999299884926911	WITHOUT_CLASSIFICATION	7.001150730898954E-5	IMPLEMENTATION
lists arrays sets maps bags	WITHOUT_CLASSIFICATION	0.9999952671142318	WITHOUT_CLASSIFICATION	4.73288576823244E-6	IMPLEMENTATION
we finish all the "removes" first to take care of possible unique constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9997270751002056	WITHOUT_CLASSIFICATION	2.7292489979430755E-4	IMPLEMENTATION
use a combination of foreign key columns and pk columns since the ordering of removal and addition is not guaranteed when a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999636440720228	WITHOUT_CLASSIFICATION	3.6355927977167074E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999934624486813	WITHOUT_CLASSIFICATION	6.53755131878994E-6	IMPLEMENTATION
information about properties of this class including inherited properties (only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.8800091920422273	WITHOUT_CLASSIFICATION	0.1199908079577727	IMPLEMENTATION
all this only really needs to consider properties of this class not its subclasses but since we are reusing code used for sequential selects we use the subclass closure	WITHOUT_CLASSIFICATION	0.9999997786370187	WITHOUT_CLASSIFICATION	2.2136298138811138E-7	IMPLEMENTATION
here we render the select column list based on the properties defined as being generated. for partial component generation we currently just re-select the whole component rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999952049081111	WITHOUT_CLASSIFICATION	4.795091888879739E-6	IMPLEMENTATION
this is the root (versioned) table and we are using version-based optimistic locking if we are not updating the version also don't check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9989688202791644	WITHOUT_CLASSIFICATION	0.0010311797208356374	IMPLEMENTATION
optimistic-lock="all" include all updatable properties optimistic-lock="dirty" include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999954759594618	WITHOUT_CLASSIFICATION	4.524040538140666E-6	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997429908636296	WITHOUT_CLASSIFICATION	2.5700913637038443E-4	IMPLEMENTATION
check to see if the connection is in auto-commit mode (no connection means aggressive connection release outside a jta transaction context so must be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999854950710728	WITHOUT_CLASSIFICATION	1.450492892723351E-5	IMPLEMENTATION
need to treat this as if it where optimistic-lock="all" (dirty does not make sense) first we need to locate the "loaded" state note it potentially could be a proxy so perform the location the safe way	WITHOUT_CLASSIFICATION	0.9906527837598537	WITHOUT_CLASSIFICATION	0.009347216240146217	IMPLEMENTATION
we always assume an instance with a null identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999995767808735	WITHOUT_CLASSIFICATION	4.232191265194394E-7	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9999258218015712	WITHOUT_CLASSIFICATION	7.417819842884217E-5	IMPLEMENTATION
allow any identifier quoted with backtick only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999363375369452	WITHOUT_CLASSIFICATION	6.366246305479481E-5	IMPLEMENTATION
following doesn't handle (null not null) but unnecessary since this would mean all rows	WITHOUT_CLASSIFICATION	0.9994804969388108	WITHOUT_CLASSIFICATION	5.195030611892317E-4	IMPLEMENTATION
impl note due to the delayed population of setters (setters cached for performance) we really cannot pro0perly define equality for this transformer	WITHOUT_CLASSIFICATION	0.9999995866555597	WITHOUT_CLASSIFICATION	4.1334444044057824E-7	IMPLEMENTATION
we need to dirty check collections since they can cause an owner version number increment	WITHOUT_CLASSIFICATION	0.9989139096530578	WITHOUT_CLASSIFICATION	0.001086090346942194	IMPLEMENTATION
return the id so we can use it to reset the proxy id return result	WITHOUT_CLASSIFICATION	0.9999548818874097	WITHOUT_CLASSIFICATION	4.511811259031805E-5	IMPLEMENTATION
optimizer = getfactory().getsettings().getbytecodeprovider().getreflectionoptimizer( mappedclass getternames setternames proptypes )	WITHOUT_CLASSIFICATION	0.9999082423687778	WITHOUT_CLASSIFICATION	9.175763122208129E-5	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9911198015504638	WITHOUT_CLASSIFICATION	0.008880198449536216	IMPLEMENTATION
we now have the value of the property-ref we reference. however we need to dig a little deeper as that property might also be an entity type in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999811274372092	WITHOUT_CLASSIFICATION	1.8872562790751473E-5	IMPLEMENTATION
retrieve the value of the designated column in the current row of this resultset object as a java.io.reader object	WITHOUT_CLASSIFICATION	0.9999973091798631	WITHOUT_CLASSIFICATION	2.6908201368646753E-6	IMPLEMENTATION
not absolutely necessary but helps for some equals()/hashcode() implementations	WITHOUT_CLASSIFICATION	0.9992376632514112	WITHOUT_CLASSIFICATION	7.623367485888563E-4	IMPLEMENTATION
this should be a call to resolve() not resolveidentifier() 'cos it might be a property-ref and we did not cache the referenced value	WITHOUT_CLASSIFICATION	0.9893035417195986	WITHOUT_CLASSIFICATION	0.010696458280401529	IMPLEMENTATION
if we have <tt>not-found="ignore"</tt> association mapped to a formula we always need to dirty check it so we can update the second-level cache	WITHOUT_CLASSIFICATION	0.9994260545427047	WITHOUT_CLASSIFICATION	5.739454572953567E-4	IMPLEMENTATION
can't just return null here since that would cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999979152229841	WITHOUT_CLASSIFICATION	2.084777015906318E-6	IMPLEMENTATION
for arrays replaceelements() may return a different reference since the array length might not match	WITHOUT_CLASSIFICATION	0.9998638142481425	WITHOUT_CLASSIFICATION	1.3618575185750655E-4	IMPLEMENTATION
actual cache of the entries. soft references are used for both the keys and the values here since the values pertaining to the mru entries are kept in a seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999999161342	WITHOUT_CLASSIFICATION	8.386584931751615E-11	IMPLEMENTATION
as soon as we encounter our first letter return the substring from that position	WITHOUT_CLASSIFICATION	0.9999929660085954	WITHOUT_CLASSIFICATION	7.033991404598119E-6	IMPLEMENTATION
note expected in the syntax type=listenerclass ({sep}type=listenerclass) where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999994661976581	WITHOUT_CLASSIFICATION	5.338023418145487E-7	IMPLEMENTATION
istransactioncallbackregistered denotes whether any hibernate transaction has registered as a callback against this jdbccontext only one such callback is allowed. directly serializing this value causes problems with jdbctransaction or really any transaction impl where the callback is local to the transaction instance itself since that transaction is not serialized along with the jdbccontext. thus we handle that fact here explicitly	WITHOUT_CLASSIFICATION	0.9998486781846936	WITHOUT_CLASSIFICATION	1.513218153064571E-4	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999691958208059	WITHOUT_CLASSIFICATION	3.0804179194052234E-5	IMPLEMENTATION
we call getkeyfromresultset() here so that we can know the key value upon which to perform the breaking logic. however it is also then called from getrowfromresultset() which is certainly not the most efficient. but the call here is needed and there currently is no other way without refactoring of the doquery()/getrowfromresultset() methods	WITHOUT_CLASSIFICATION	0.7140521892605592	IMPLEMENTATION	0.28594781073944076	WITHOUT_CLASSIFICATION
this check is needed since processing leaves the cursor after the last physical row for the current logical row thus if we are after the last physical row this might be caused by either 1) scrolling to the last logical row 2) scrolling past the last logical row in the latter scenario the previous logical row really is the last logical row. in all other cases we should process back two logical records (the current logic row plus the previous logical row).	WITHOUT_CLASSIFICATION	0.9986064700780339	WITHOUT_CLASSIFICATION	0.0013935299219660423	IMPLEMENTATION
and perform the load	WITHOUT_CLASSIFICATION	0.999954246227024	WITHOUT_CLASSIFICATION	4.5753772976054285E-5	IMPLEMENTATION
important reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999691488826161	WITHOUT_CLASSIFICATION	3.085111738378963E-5	IMPLEMENTATION
this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999978079826388	WITHOUT_CLASSIFICATION	2.1920173612729696E-6	IMPLEMENTATION
we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999996026806923	WITHOUT_CLASSIFICATION	3.9731930773509377E-7	IMPLEMENTATION
we did not find a collection element in the result set so we ensure that a collection is created with the owner's identifier since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999951362591472	WITHOUT_CLASSIFICATION	4.863740852879671E-6	IMPLEMENTATION
this is a collection initializer so we must create a collection for each of the passed-in keys to account for the possibility that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999997673066118	WITHOUT_CLASSIFICATION	2.3269338821979159E-7	IMPLEMENTATION
grab its state from the resultset and keep it in the session (but don't yet initialize the object itself) note that we acquire lockmode.read even if it was not requested	WITHOUT_CLASSIFICATION	0.9999998237407351	WITHOUT_CLASSIFICATION	1.762592647716971E-7	IMPLEMENTATION
a many-to-many decrement currentdepth here to allow join across the association table without exceeding max_fetch_depth (i.e. the "currentdepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9998959077394411	WITHOUT_CLASSIFICATION	1.0409226055888207E-4	IMPLEMENTATION
if not a composite key use "foo in (? ? ?)" for batching if no batch and not a composite key use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999572814823438	WITHOUT_CLASSIFICATION	4.271851765624297E-5	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9999664990496882	WITHOUT_CLASSIFICATION	3.3500950311866804E-5	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999937427394803	WITHOUT_CLASSIFICATION	6.257260519689442E-6	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999937427394803	WITHOUT_CLASSIFICATION	6.257260519689442E-6	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999735875786775	WITHOUT_CLASSIFICATION	2.6412421322552446E-5	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999999369722744	WITHOUT_CLASSIFICATION	6.302772558964803E-8	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999868425985917	WITHOUT_CLASSIFICATION	1.3157401408302315E-5	IMPLEMENTATION
translates an ast join type (i.e. the token type) into a joinfragment.xxx join type. @param astjointype the ast join type (from hqlsqltokentypes or sqltokentypes) @return a joinfragment.xxx join type. @see joinfragment @see sqltokentypes	WITHOUT_CLASSIFICATION	0.9999982492470436	WITHOUT_CLASSIFICATION	1.7507529564027094E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999688338482335	WITHOUT_CLASSIFICATION	3.116615176653375E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999688338482335	WITHOUT_CLASSIFICATION	3.116615176653375E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999768017029188	WITHOUT_CLASSIFICATION	2.319829708108924E-5	IMPLEMENTATION
public list getcollectionaliases() { return collectionaliases } public list getcollectionowners() { return collectionowners } public list getcollectionowneraliases() { return collectionowneraliases } public list getcollectionpersisters() { return collectionpersisters } public map getalias2persister() { return alias2persister } public boolean iscollectioninitializer() { return iscollectioninitializer } public list getpersisters() { return persisters } public map getalias2owneralias() { return alias2owneralias } public list getscalartypes() { return scalartypes } public list getscalarcolumnaliases() { return scalarcolumnaliases } public list getpropertyresults() { return propertyresults } public list getcollectionpropertyresults() { return collectionresults } public map getalias2return() { return alias2return }	WITHOUT_CLASSIFICATION	0.999998384025346	WITHOUT_CLASSIFICATION	1.6159746539634565E-6	IMPLEMENTATION
sqlqueryparser parser = new sqlqueryparser( sqlquery processor.getalias2persister() processor.getalias2return() aliases collaliases collpersisters suffixes collsuffixes ) sql = parser.process() namedparameterbindpoints = parser.getnamedparameters()	WITHOUT_CLASSIFICATION	0.9999170154358401	WITHOUT_CLASSIFICATION	8.298456415986955E-5	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998384266314189	WITHOUT_CLASSIFICATION	1.6157336858125602E-4	IMPLEMENTATION
sqlaliassuffixes[i] = element.getcolumnaliassuffix()	WITHOUT_CLASSIFICATION	0.999929917013758	WITHOUT_CLASSIFICATION	7.008298624200439E-5	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9988177847520993	WITHOUT_CLASSIFICATION	0.0011822152479008254	IMPLEMENTATION
at this point we have (drivingsqlalias) the sql alias of the driving table corresponding to the given user alias. however the driving table is not (necessarily) the table against which we want to apply locks. mainly the exception case here is joined-subclass hierarchies where we instead want to apply the lock against the root table (for all other strategies it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9993215822192973	WITHOUT_CLASSIFICATION	6.784177807027316E-4	IMPLEMENTATION
the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999785476534947	WITHOUT_CLASSIFICATION	2.1452346505235797E-5	IMPLEMENTATION
we have a mapped identifier property and the root of the incoming property path matched that identifier property	WITHOUT_CLASSIFICATION	0.9998383908030865	WITHOUT_CLASSIFICATION	1.6160919691365962E-4	IMPLEMENTATION
we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999716526012102	WITHOUT_CLASSIFICATION	2.83473987897713E-5	IMPLEMENTATION
both many-to-one and one-to-one are represented as a property. entitypersister is relying on this value to determine "lazy fetch groups" in terms of field-level interception. so we need to make sure that we return true here for the case of many-to-one and one-to-one with lazy="no-proxy" impl note - lazy="no-proxy" currently forces both lazy and unwrap to be set to true. the other case we are extremely interested in here is that of lazy="proxy" where lazy is set to true but unwrap is set to false. thus we use both here under the assumption that this return is really only ever used during persister construction to determine the lazy property/field fetch groupings. if that assertion changes then this check needs to change as well. partially this is an issue with the overloading of the term "lazy" here	WITHOUT_CLASSIFICATION	0.9999999993224292	WITHOUT_CLASSIFICATION	6.775708175841388E-10	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993808262793	WITHOUT_CLASSIFICATION	6.191737207852259E-7	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993808262793	WITHOUT_CLASSIFICATION	6.191737207852259E-7	IMPLEMENTATION
roottablename = persistentclass.getroottable().getqualifiedname( factory.getdialect() factory.getdefaultcatalog() factory.getdefaultschema() )	WITHOUT_CLASSIFICATION	0.9999082423687778	WITHOUT_CLASSIFICATION	9.175763122208129E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999955561567497	WITHOUT_CLASSIFICATION	4.443843250253808E-6	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999961060620502	WITHOUT_CLASSIFICATION	3.893937949808476E-6	IMPLEMENTATION
protected void initpropertypaths(final string pathfinal type typefinal string[] columnsfinal string[] formulatemplatesfinal mapping factory)throws mappingexception {addformulapropertypath(path type formulatemplates)initpropertypaths(path type columns formulatemplates factory)}	WITHOUT_CLASSIFICATION	0.9999984626393779	WITHOUT_CLASSIFICATION	1.5373606220623255E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
custom sql (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999964795693874	WITHOUT_CLASSIFICATION	3.520430612621425E-6	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999920268581347	WITHOUT_CLASSIFICATION	7.973141865208423E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
aliases for identifier ( alias.id ) skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999990106777569	WITHOUT_CLASSIFICATION	9.893222431254372E-7	IMPLEMENTATION
decide which resultset to get the property value from	WITHOUT_CLASSIFICATION	0.9999968994720695	WITHOUT_CLASSIFICATION	3.100527930478011E-6	IMPLEMENTATION
note it is conceptually possible that a usertype could map null to a non-null value so the following is arguable	WITHOUT_CLASSIFICATION	0.9999631607526692	WITHOUT_CLASSIFICATION	3.683924733071343E-5	IMPLEMENTATION
the contract of entitytuplizer.determineconcretesubclassentityname says that returning null is an indication that the specified entity-name (this.getentityname) should be used.	WITHOUT_CLASSIFICATION	0.999984511119368	WITHOUT_CLASSIFICATION	1.5488880631974032E-5	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9999258218015712	WITHOUT_CLASSIFICATION	7.417819842884217E-5	IMPLEMENTATION
cache these since they are stateless this one could even be static	WITHOUT_CLASSIFICATION	0.9999960225194484	WITHOUT_CLASSIFICATION	3.977480551645599E-6	IMPLEMENTATION
"as" is not in keywords	WITHOUT_CLASSIFICATION	0.9999231209364703	WITHOUT_CLASSIFICATION	7.687906352961593E-5	IMPLEMENTATION
--commented out by inspection (12/4/04 910 am) public abstract void addcondition(string alias string[] columns string condition)	WITHOUT_CLASSIFICATION	0.9999999679790569	WITHOUT_CLASSIFICATION	3.202094320262102E-8	IMPLEMENTATION
use the id column alias	WITHOUT_CLASSIFICATION	0.9997873777685874	WITHOUT_CLASSIFICATION	2.1262223141256406E-4	IMPLEMENTATION
private list aliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999940783356092	WITHOUT_CLASSIFICATION	5.921664390751353E-6	IMPLEMENTATION
columns.add(columnname) aliases.add(tablealias)	WITHOUT_CLASSIFICATION	0.9999732715745457	WITHOUT_CLASSIFICATION	2.6728425454292323E-5	IMPLEMENTATION
where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999316059149438	WITHOUT_CLASSIFICATION	6.839408505616291E-5	IMPLEMENTATION
revert to traditional hibernate behavior of setting initialpoolsize to minpoolsize unless otherwise specified with a c3p0.-style parameter.	WITHOUT_CLASSIFICATION	0.9999622714480471	WITHOUT_CLASSIFICATION	3.772855195290679E-5	IMPLEMENTATION
arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9998629336078879	WITHOUT_CLASSIFICATION	1.370663921120415E-4	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9982546374619063	WITHOUT_CLASSIFICATION	0.0017453625380936658	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9982546374619063	WITHOUT_CLASSIFICATION	0.0017453625380936658	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.999999498346872	WITHOUT_CLASSIFICATION	5.016531279572659E-7	IMPLEMENTATION
essentially 1) if we have a local (hibernate) transaction in progress and it already has the usertransaction cached use that usertransaction to determine the status. 2) if a transaction manager has been located use that transaction manager to determine the status. 3) finally as the last resort try to lookup the usertransaction via jndi and use that to determine the status.	WITHOUT_CLASSIFICATION	0.9999999039293135	WITHOUT_CLASSIFICATION	9.607068648157979E-8	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999440484270439	WITHOUT_CLASSIFICATION	5.5951572956190454E-5	IMPLEMENTATION
swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.99996880077797	WITHOUT_CLASSIFICATION	3.119922203008224E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999591840574187	WITHOUT_CLASSIFICATION	4.08159425811819E-5	IMPLEMENTATION
we need to dirty check many-to-ones with not-found="ignore" in order to update the cache (not the database) since in this case a null entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999937816308302	WITHOUT_CLASSIFICATION	6.218369169844043E-6	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999899970475785	WITHOUT_CLASSIFICATION	1.0002952421495156E-5	IMPLEMENTATION
regions can get instantiated in the course of normal work (e.g. a named query region will be created the first time the query is executed) so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999999998451324	WITHOUT_CLASSIFICATION	1.5486764590537098E-10	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9999303259031103	WITHOUT_CLASSIFICATION	6.967409688979078E-5	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999926302733674	WITHOUT_CLASSIFICATION	7.3697266325350055E-6	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999746597321373	WITHOUT_CLASSIFICATION	2.5340267862668334E-5	IMPLEMENTATION
note this is being used from the process of shutting down a sessionfactory. specific things to consider (1) this clearing of the region should not propagate to other nodes on the cluster (if any) this is the cache-mode-local option bit (2) really just trying a best effort to cleanup after ourselves lock failures etc are not critical here this is the fail-silently option bit	WITHOUT_CLASSIFICATION	0.99680689443162	WITHOUT_CLASSIFICATION	0.0031931055683800664	IMPLEMENTATION
need to extract the component values and check for subtype replacements	WITHOUT_CLASSIFICATION	0.9999967215864701	WITHOUT_CLASSIFICATION	3.2784135299231965E-6	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999914094713214	WITHOUT_CLASSIFICATION	8.590528678676191E-6	IMPLEMENTATION
for now just "re-flatten" the metamodel since this is temporary stuff anyway (hhh-1907)	WITHOUT_CLASSIFICATION	0.9999998817852451	WITHOUT_CLASSIFICATION	1.182147548656532E-7	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9999623295466863	WITHOUT_CLASSIFICATION	3.767045331362421E-5	IMPLEMENTATION
this solution would allow us to eliminate the owner arg to disassemble() but what if the collection was null and then later had elements added? seems unsafe session.getpersistencecontext().getcollectionentry( (persistentcollection) value ).getkey()	WITHOUT_CLASSIFICATION	0.9999835544277732	WITHOUT_CLASSIFICATION	1.6445572226700644E-5	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9999581718170591	WITHOUT_CLASSIFICATION	4.182818294082056E-5	IMPLEMENTATION
some collections are not lazy	WITHOUT_CLASSIFICATION	0.9955633631193944	WITHOUT_CLASSIFICATION	0.004436636880605595	IMPLEMENTATION
here we don't want to suspend the tx. if we do 1) we might be caching query results that reflect uncommitted changes. no tx == no wl on cache node so other threads can prematurely see those query results 2) no tx == immediate replication. more overhead plus we spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9916417686292668	WITHOUT_CLASSIFICATION	0.008358231370733138	IMPLEMENTATION
return the (fully resolved) identifier value but do not resolve to the actual referenced entity instance note the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999953858250974	WITHOUT_CLASSIFICATION	4.614174902557535E-6	IMPLEMENTATION
add a zero (or quite low) timeout option so we don't block. ignore any timeoutexception. basically we forego caching the query result in order to avoid blocking. reads are done with suspended tx so they should not hold the lock for long. not caching the query result is ok since any subsequent read will just see the old result with its out-of-date timestamp that result will be discarded and the db query performed again.	WITHOUT_CLASSIFICATION	0.9999999999837781	WITHOUT_CLASSIFICATION	1.622196849911571E-11	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999483990636318	WITHOUT_CLASSIFICATION	5.160093636821375E-5	IMPLEMENTATION
we have the jbcwritemutex so no other local thread will be trying to write this key. it's possible here some remote thread has come in and changed the values again but since we are reading the values to write to jbc right now we know we are writing the latest values i.e. we don't assume that what we cached in entry.update() above is what we should write to jbc now. our write could be redundant i.e. we are writing what some remote thread just came in an wrote. there is a chance that yet another remote thread will update us and we'll then overwrite that later data in jbc. but all remote nodes will ignore that change in their localcache the only place it will live will be in jbc where it can only effect the initial state transfer values on newly joined nodes (i.e. populatelocalcache()).	WITHOUT_CLASSIFICATION	0.9998817893508654	WITHOUT_CLASSIFICATION	1.1821064913463082E-4	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999948491291846	WITHOUT_CLASSIFICATION	5.150870815533617E-6	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999948491291846	WITHOUT_CLASSIFICATION	5.150870815533617E-6	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9998679619785155	WITHOUT_CLASSIFICATION	1.3203802148462998E-4	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9981537040519346	WITHOUT_CLASSIFICATION	0.001846295948065415	IMPLEMENTATION
we need to obtain the lock before any actions are executed since this may be an inverse="true" bidirectional association and it is one of the earlier entity actions which actually updates the database (this action is resposible for second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999978096623575	WITHOUT_CLASSIFICATION	2.1903376424241E-6	IMPLEMENTATION
postdelete after actually deleting a row record the fact that the instance no longer exists on the database (needed for identity-column key generation) and remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999940069160346	WITHOUT_CLASSIFICATION	5.993083965458343E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9994162704336691	WITHOUT_CLASSIFICATION	5.83729566330941E-4	IMPLEMENTATION
