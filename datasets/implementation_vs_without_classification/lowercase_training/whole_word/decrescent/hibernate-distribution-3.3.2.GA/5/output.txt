todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.7855588041531738	IMPLEMENTATION	0.21444119584682614	WITHOUT_CLASSIFICATION
todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.7855588041531738	IMPLEMENTATION	0.21444119584682614	WITHOUT_CLASSIFICATION
todo return new lock(ts)	IMPLEMENTATION	0.8081724111063656	WITHOUT_CLASSIFICATION	0.1918275888936344	IMPLEMENTATION
todo if lock.gettimestamp().equals(ts)	IMPLEMENTATION	0.8652693845555265	WITHOUT_CLASSIFICATION	0.13473061544447357	IMPLEMENTATION
todo mappings.getlogicaltablename(ownertable)	IMPLEMENTATION	0.5346480533012996	WITHOUT_CLASSIFICATION	0.4653519466987004	IMPLEMENTATION
todo handle typedefs	IMPLEMENTATION	0.772135078793325	IMPLEMENTATION	0.227864921206675	WITHOUT_CLASSIFICATION
todo check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.8322407720277337	WITHOUT_CLASSIFICATION	0.16775922797226625	IMPLEMENTATION
todo bindpropertyresults(alias returnelem)	IMPLEMENTATION	0.5346480533012996	WITHOUT_CLASSIFICATION	0.4653519466987004	IMPLEMENTATION
todo validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.5541341532611656	WITHOUT_CLASSIFICATION	0.4458658467388344	IMPLEMENTATION
todo native ids	IMPLEMENTATION	0.6501372230553414	WITHOUT_CLASSIFICATION	0.34986277694465867	IMPLEMENTATION
todo if we are using identity columns fetch the identifier	IMPLEMENTATION	0.9992986213532286	WITHOUT_CLASSIFICATION	7.013786467714904E-4	IMPLEMENTATION
todo handle property-ref	IMPLEMENTATION	0.7119597039989568	IMPLEMENTATION	0.2880402960010432	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.892511030191624	IMPLEMENTATION	0.1074889698083759	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.892511030191624	IMPLEMENTATION	0.1074889698083759	WITHOUT_CLASSIFICATION
todo check if mimer sql cannot handle the way db2 does	IMPLEMENTATION	0.9872715108594581	WITHOUT_CLASSIFICATION	0.012728489140541888	IMPLEMENTATION
todo restrict violation	IMPLEMENTATION	0.7762246515068465	WITHOUT_CLASSIFICATION	0.2237753484931535	IMPLEMENTATION
todo lowercasing done here. was done "at random" before maybe not needed at all ?	IMPLEMENTATION	0.9999995943952987	IMPLEMENTATION	4.0560470132814616E-7	WITHOUT_CLASSIFICATION
todo tolowercase was not done before. only used in template.	IMPLEMENTATION	0.7187219169630635	WITHOUT_CLASSIFICATION	0.2812780830369365	IMPLEMENTATION
add an entry for this type of entity. we can be assured that all referenced entities have already been processed so specify that this entity is with the latest batch. doing the batch number before adding the name to the list is a faster way to get an accurate number.	IMPLEMENTATION	0.9999975272812757	WITHOUT_CLASSIFICATION	2.472718724247515E-6	IMPLEMENTATION
todo avoid this for non-new instances where mightbedirty==false	IMPLEMENTATION	0.6815908985638637	IMPLEMENTATION	0.31840910143613643	WITHOUT_CLASSIFICATION
todo optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.7102464098163256	IMPLEMENTATION	0.2897535901836746	WITHOUT_CLASSIFICATION
we could move this inside if we wanted to tolerate collection initializations during collection dirty checking	IMPLEMENTATION	0.9990800254437769	WITHOUT_CLASSIFICATION	9.199745562230088E-4	IMPLEMENTATION
todo assertion only could be optimized away	IMPLEMENTATION	0.6113754270696146	IMPLEMENTATION	0.3886245729303854	WITHOUT_CLASSIFICATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.9367445174721836	IMPLEMENTATION	0.06325548252781643	WITHOUT_CLASSIFICATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.9367445174721836	IMPLEMENTATION	0.06325548252781643	WITHOUT_CLASSIFICATION
todo why aren't these the same?	IMPLEMENTATION	0.9409542693235957	IMPLEMENTATION	0.059045730676404215	WITHOUT_CLASSIFICATION
todo always true for now but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.9081020869178617	WITHOUT_CLASSIFICATION	0.09189791308213839	IMPLEMENTATION
todo or should we return 'containstablealias'??	IMPLEMENTATION	0.6391593877217032	WITHOUT_CLASSIFICATION	0.36084061227829684	IMPLEMENTATION
todo arithmetic expressions multiple new foo()	IMPLEMENTATION	0.6530220023961822	WITHOUT_CLASSIFICATION	0.3469779976038177	IMPLEMENTATION
todo for some dialects it would be appropriate to add the renderorderbypropertiesselect() to other select strings	IMPLEMENTATION	0.9969043880172256	IMPLEMENTATION	0.003095611982774444	WITHOUT_CLASSIFICATION
todo cache the persister this shows up in yourkit	IMPLEMENTATION	0.6223553300726308	WITHOUT_CLASSIFICATION	0.3776446699273691	IMPLEMENTATION
todo theoretically non-threadsafe	IMPLEMENTATION	0.5346480533012996	WITHOUT_CLASSIFICATION	0.4653519466987004	IMPLEMENTATION
todo look at optimizing these	IMPLEMENTATION	0.7094642664165408	WITHOUT_CLASSIFICATION	0.29053573358345924	IMPLEMENTATION
todo maybe call it getrowselection() ?	IMPLEMENTATION	0.9786635362158742	IMPLEMENTATION	0.021336463784125754	WITHOUT_CLASSIFICATION
todo make this handle multiple collection roles!	IMPLEMENTATION	0.9964355910622983	IMPLEMENTATION	0.0035644089377016657	WITHOUT_CLASSIFICATION
todo can we limit stored procedures ?!	IMPLEMENTATION	0.6399695149655102	WITHOUT_CLASSIFICATION	0.36003048503448987	IMPLEMENTATION
todo not visible to the user!	IMPLEMENTATION	0.897516405238756	IMPLEMENTATION	0.10248359476124404	WITHOUT_CLASSIFICATION
todo unnecessary for databases with ansi-style joins	IMPLEMENTATION	0.6104861788467382	WITHOUT_CLASSIFICATION	0.38951382115326183	IMPLEMENTATION
todo use these in methods above	IMPLEMENTATION	0.7241061968098484	WITHOUT_CLASSIFICATION	0.27589380319015167	IMPLEMENTATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.8070411420490244	IMPLEMENTATION	0.19295885795097545	WITHOUT_CLASSIFICATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.8070411420490244	IMPLEMENTATION	0.19295885795097545	WITHOUT_CLASSIFICATION
todo temporary initial step towards hhh-1907	IMPLEMENTATION	0.9271661702648304	WITHOUT_CLASSIFICATION	0.07283382973516961	IMPLEMENTATION
todo remove this once componentmetamodel is complete and merged	IMPLEMENTATION	0.6611134782250266	WITHOUT_CLASSIFICATION	0.3388865217749733	IMPLEMENTATION
todo handle supportsnotnullunique=false but such a case does not exist in the wild so far	IMPLEMENTATION	0.9984870347931807	WITHOUT_CLASSIFICATION	0.0015129652068193757	IMPLEMENTATION
todo still need to make collectionpersisters entitymode-aware	IMPLEMENTATION	0.9988083946191552	IMPLEMENTATION	0.0011916053808448735	WITHOUT_CLASSIFICATION
todo add owner argument!!	IMPLEMENTATION	0.7413054091953454	WITHOUT_CLASSIFICATION	0.2586945908046545	IMPLEMENTATION
todo formulas ?	IMPLEMENTATION	0.5765624559128462	IMPLEMENTATION	0.42343754408715395	WITHOUT_CLASSIFICATION
todo include the rowids!!!!	IMPLEMENTATION	0.9098662720909263	WITHOUT_CLASSIFICATION	0.09013372790907381	IMPLEMENTATION
todo cache this sql	IMPLEMENTATION	0.5558864863307342	WITHOUT_CLASSIFICATION	0.44411351366926577	IMPLEMENTATION
todo create uk loaders for component properties	IMPLEMENTATION	0.9052936263477402	WITHOUT_CLASSIFICATION	0.09470637365225976	IMPLEMENTATION
todo cache this in an instvar	IMPLEMENTATION	0.9631328052892559	WITHOUT_CLASSIFICATION	0.03686719471074405	IMPLEMENTATION
/ todo look at perhaps caching this	IMPLEMENTATION	0.6978708590216802	IMPLEMENTATION	0.3021291409783197	WITHOUT_CLASSIFICATION
todo eventually put this back in once we think all is fixed object otheralias = columnsunique.put(qualifiedcolumn columnalias)	IMPLEMENTATION	0.657112784810602	WITHOUT_CLASSIFICATION	0.3428872151893981	IMPLEMENTATION
todo if we support multiple fetch groups we would need to clone the set of lazy properties!	IMPLEMENTATION	0.8331057128484064	IMPLEMENTATION	0.1668942871515936	WITHOUT_CLASSIFICATION
todo proxies!	IMPLEMENTATION	0.5780446612440906	WITHOUT_CLASSIFICATION	0.42195533875590946	IMPLEMENTATION
todo terrible implementation!	IMPLEMENTATION	0.6525432526983123	WITHOUT_CLASSIFICATION	0.34745674730168774	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.5780446612440906	WITHOUT_CLASSIFICATION	0.42195533875590946	IMPLEMENTATION
todo i don't really like this implementation it would be better if this was handled by searchfordirtycollections()	IMPLEMENTATION	0.6997472305326385	IMPLEMENTATION	0.30025276946736146	WITHOUT_CLASSIFICATION
todo check if key contains the owner id	IMPLEMENTATION	0.5559019984814664	IMPLEMENTATION	0.4440980015185336	WITHOUT_CLASSIFICATION
todo proxies!	IMPLEMENTATION	0.5780446612440906	WITHOUT_CLASSIFICATION	0.42195533875590946	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9997609215080855	WITHOUT_CLASSIFICATION	2.3907849191454275E-4	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9997609215080855	WITHOUT_CLASSIFICATION	2.3907849191454275E-4	IMPLEMENTATION
if we are still not resolved we might represent a constant. needed to add this here because the allowance of naked-prop-refs in the grammar collides with the definition of literals/constants ("nondeterminism"). todo cleanup the grammar so that "processconstants" is always just handled from here	IMPLEMENTATION	0.9585212060827064	IMPLEMENTATION	0.04147879391729353	WITHOUT_CLASSIFICATION
todo add referencedclass to disambiguate to fks on the same columns pointing to different tables	IMPLEMENTATION	0.6064944098332707	IMPLEMENTATION	0.39350559016672937	WITHOUT_CLASSIFICATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999981072079657	WITHOUT_CLASSIFICATION	1.8927920344087667E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891681865286	WITHOUT_CLASSIFICATION	1.0831813471507117E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891681865286	WITHOUT_CLASSIFICATION	1.0831813471507117E-5	IMPLEMENTATION
| this | bean | args | raw bean |	WITHOUT_CLASSIFICATION	0.9999105574307638	WITHOUT_CLASSIFICATION	8.94425692361957E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
astore 4 store the raw bean	WITHOUT_CLASSIFICATION	0.9998848710116566	WITHOUT_CLASSIFICATION	1.1512898834343711E-4	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999483064188541	WITHOUT_CLASSIFICATION	5.169358114577595E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999483064188541	WITHOUT_CLASSIFICATION	5.169358114577595E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999900249101195	WITHOUT_CLASSIFICATION	9.975089880462633E-6	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999401559582529	WITHOUT_CLASSIFICATION	5.984404174705945E-5	IMPLEMENTATION
putfield new value of the field	WITHOUT_CLASSIFICATION	0.9999838822499882	WITHOUT_CLASSIFICATION	1.611775001180004E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999958402747087	WITHOUT_CLASSIFICATION	4.159725291299935E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999994031259793	WITHOUT_CLASSIFICATION	5.96874020682567E-7	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999994031259793	WITHOUT_CLASSIFICATION	5.96874020682567E-7	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999727465273955	WITHOUT_CLASSIFICATION	2.7253472604511893E-5	IMPLEMENTATION
just decrement the lock don't recache (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9989321567822241	WITHOUT_CLASSIFICATION	0.001067843217775834	IMPLEMENTATION
decode row selection	WITHOUT_CLASSIFICATION	0.9999866224735154	WITHOUT_CLASSIFICATION	1.3377526484580562E-5	IMPLEMENTATION
disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999974775554166	WITHOUT_CLASSIFICATION	2.5224445834085615E-6	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999948884955048	WITHOUT_CLASSIFICATION	5.111504495234691E-6	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9998977706056982	WITHOUT_CLASSIFICATION	1.0222939430184748E-4	IMPLEMENTATION
row id	WITHOUT_CLASSIFICATION	0.999924516078709	WITHOUT_CLASSIFICATION	7.548392129098989E-5	IMPLEMENTATION
composite-id	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999462762013848	WITHOUT_CLASSIFICATION	5.372379861518276E-5	IMPLEMENTATION
property prop = new property() prop.setname("id") prop.setpropertyaccessorname("embedded") prop.setvalue(id) entity.setidentifierproperty(prop)	WITHOUT_CLASSIFICATION	0.9999240207196288	WITHOUT_CLASSIFICATION	7.597928037119539E-5	IMPLEMENTATION
dynamic insert	WITHOUT_CLASSIFICATION	0.9999858832004158	WITHOUT_CLASSIFICATION	1.4116799584256187E-5	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999720716423314	WITHOUT_CLASSIFICATION	2.7928357668729463E-5	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999977575254602	WITHOUT_CLASSIFICATION	2.2424745398001537E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999650913077701	WITHOUT_CLASSIFICATION	3.4908692229934966E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999650913077701	WITHOUT_CLASSIFICATION	3.4908692229934966E-5	IMPLEMENTATION
generated properties can never be insertable	WITHOUT_CLASSIFICATION	0.9980985941180583	WITHOUT_CLASSIFICATION	0.0019014058819416578	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999856529163459	WITHOUT_CLASSIFICATION	1.434708365423503E-5	IMPLEMENTATION
by default natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.999999392487432	WITHOUT_CLASSIFICATION	6.075125679715965E-7	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999685683452593	WITHOUT_CLASSIFICATION	3.143165474081628E-5	IMPLEMENTATION
we found some extends attributes referencing entities which were not already processed. here we need to locate all entity-names and class-names contained in this document itself making sure that these get removed from the extendz list such that only extends names which require us to delay processing (i.e. external to this document and not yet processed) are contained in the returned result	WITHOUT_CLASSIFICATION	0.968059564957741	WITHOUT_CLASSIFICATION	0.03194043504225888	IMPLEMENTATION
build a resultsetmappingdefinition given a containing element for the "return-xxx" elements @param resultsetelem the element containing the return definitions. @param path no clue @param mappings the current processing state. @return the description of the mappings	WITHOUT_CLASSIFICATION	0.9999665503512939	WITHOUT_CLASSIFICATION	3.344964870607471E-5	IMPLEMENTATION
private boolean showsql private boolean formatsql	WITHOUT_CLASSIFICATION	0.9999929489335293	WITHOUT_CLASSIFICATION	7.051066470608811E-6	IMPLEMENTATION
public boolean isshowsqlenabled() { return showsql } public boolean isformatsqlenabled() { return formatsql }	WITHOUT_CLASSIFICATION	0.9999852315659896	WITHOUT_CLASSIFICATION	1.476843401035336E-5	IMPLEMENTATION
set a custom entity resolver. this entity resolver must be set before addxxx(misc) call. default value is {@link org.hibernate.util.dtdentityresolver} @param entityresolver entity resolver to use	WITHOUT_CLASSIFICATION	0.9999710846580244	WITHOUT_CLASSIFICATION	2.891534197559441E-5	IMPLEMENTATION
final list extendsqueue	WITHOUT_CLASSIFICATION	0.9999873879597933	WITHOUT_CLASSIFICATION	1.2612040206654101E-5	IMPLEMENTATION
if close() is called guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999985710546823	WITHOUT_CLASSIFICATION	1.428945317681396E-6	IMPLEMENTATION
if a threadlocalsessioncontext-bound session happens to get serialized to be completely correct we need to make sure that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999625159867037	WITHOUT_CLASSIFICATION	3.7484013296265295E-5	IMPLEMENTATION
on the inverse it makes sense that if a threadlocalsessioncontext- bound session then gets deserialized to go ahead and re-bind it to the threadlocalsessioncontext session map.	WITHOUT_CLASSIFICATION	0.9999952172087254	WITHOUT_CLASSIFICATION	4.782791274544956E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999975773106444	WITHOUT_CLASSIFICATION	2.422689355504309E-6	IMPLEMENTATION
60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999735332883727	WITHOUT_CLASSIFICATION	2.6466711627362354E-5	IMPLEMENTATION
optimisticcache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999364974910333	WITHOUT_CLASSIFICATION	6.350250896665108E-5	IMPLEMENTATION
cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999049196611636	WITHOUT_CLASSIFICATION	9.508033883643064E-5	IMPLEMENTATION
option.setdataversion( nonlockingdataversion.instance )	WITHOUT_CLASSIFICATION	0.999901522788762	WITHOUT_CLASSIFICATION	9.847721123802691E-5	IMPLEMENTATION
do the put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9989519917340347	WITHOUT_CLASSIFICATION	0.0010480082659653754	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
tree cache in optimistic mode seems to have as very difficult time with remove calls on non-existent nodes (npes)	WITHOUT_CLASSIFICATION	0.9995263280310809	WITHOUT_CLASSIFICATION	4.7367196891915546E-4	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999827674013924	WITHOUT_CLASSIFICATION	1.7232598607678803E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999827674013924	WITHOUT_CLASSIFICATION	1.7232598607678803E-5	IMPLEMENTATION
do the failfast put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9989519917340347	WITHOUT_CLASSIFICATION	0.0010480082659653754	IMPLEMENTATION
note evict() operates locally only (i.e. does not propogate to any other nodes in the potential cluster). this is exactly what is needed when we destroy() here destroy() is used as part of the process of shutting down a sessionfactory thus these removals should not be propogated	WITHOUT_CLASSIFICATION	0.7635932997042766	IMPLEMENTATION	0.23640670029572333	WITHOUT_CLASSIFICATION
protected regionrootlistener listener	WITHOUT_CLASSIFICATION	0.9998245381463262	WITHOUT_CLASSIFICATION	1.7546185367383184E-4	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9998641377487332	WITHOUT_CLASSIFICATION	1.358622512669431E-4	IMPLEMENTATION
if we've been blocking for the mutex perhaps another thread has already reestablished the root. in case the node was reestablised via replication confirm it's marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.999999849106162	WITHOUT_CLASSIFICATION	1.5089383793315046E-7	IMPLEMENTATION
for pessimistic locking we just want to toss out our ref to any old invalid root node and get the latest (may be null)	WITHOUT_CLASSIFICATION	0.9999998819768355	WITHOUT_CLASSIFICATION	1.1802316446083166E-7	IMPLEMENTATION
the rest only matters for optimistic locking where we need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9872795252058605	WITHOUT_CLASSIFICATION	0.01272047479413955	IMPLEMENTATION
don't hold a transactional lock for this	WITHOUT_CLASSIFICATION	0.9999584681635689	WITHOUT_CLASSIFICATION	4.153183643112337E-5	IMPLEMENTATION
make sure the root node for the region exists and has a dataversion that never complains	WITHOUT_CLASSIFICATION	0.9968563323874002	WITHOUT_CLASSIFICATION	0.0031436676125998764	IMPLEMENTATION
never evict this node	WITHOUT_CLASSIFICATION	0.9980902503166992	WITHOUT_CLASSIFICATION	0.0019097496833007958	IMPLEMENTATION
fix up the resident flag	WITHOUT_CLASSIFICATION	0.9938797034752741	WITHOUT_CLASSIFICATION	0.006120296524725791	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999827674013924	WITHOUT_CLASSIFICATION	1.7232598607678803E-5	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999863045515169	WITHOUT_CLASSIFICATION	1.3695448482987264E-5	IMPLEMENTATION
no-op. we don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9957636951207859	WITHOUT_CLASSIFICATION	0.004236304879214187	IMPLEMENTATION
this should only be possible if the caches are constructor injected	WITHOUT_CLASSIFICATION	0.9999957200789492	WITHOUT_CLASSIFICATION	4.279921050841076E-6	IMPLEMENTATION
we only build caches if none were passed in. passing in caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999984028799056	WITHOUT_CLASSIFICATION	1.5971200944493476E-6	IMPLEMENTATION
set up the cache factory	WITHOUT_CLASSIFICATION	0.9999626599980755	WITHOUT_CLASSIFICATION	3.7340001924461084E-5	IMPLEMENTATION
see if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999996319278	WITHOUT_CLASSIFICATION	3.6807220004512835E-7	IMPLEMENTATION
default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999989350374923	WITHOUT_CLASSIFICATION	1.0649625077081727E-6	IMPLEMENTATION
default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999994259366533	WITHOUT_CLASSIFICATION	5.74063346745002E-7	IMPLEMENTATION
for timestamps we default to a separate config	WITHOUT_CLASSIFICATION	0.9999954321077196	WITHOUT_CLASSIFICATION	4.567892280383003E-6	IMPLEMENTATION
we can't change the tm on a running cache just check if the cache has no tm and we're ok with that	WITHOUT_CLASSIFICATION	0.9999900729259394	WITHOUT_CLASSIFICATION	9.927074060516107E-6	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9998953118328308	WITHOUT_CLASSIFICATION	1.0468816716925217E-4	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9998043396187621	WITHOUT_CLASSIFICATION	1.9566038123780378E-4	IMPLEMENTATION
this method should be implemented assuming it's valid to do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.6759594877793431	WITHOUT_CLASSIFICATION	0.32404051222065694	IMPLEMENTATION
make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9992981139596194	WITHOUT_CLASSIFICATION	7.018860403806517E-4	IMPLEMENTATION
we use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999923504426477	WITHOUT_CLASSIFICATION	7.649557352294443E-6	IMPLEMENTATION
following methods we don't delegate since they have so little logic it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9974497240727612	WITHOUT_CLASSIFICATION	0.0025502759272388324	IMPLEMENTATION
if jbc is using invalidation we don't want to propagate changes. we use the timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999857486604609	WITHOUT_CLASSIFICATION	1.4251339539184493E-5	IMPLEMENTATION
we don't want to waste effort setting an option if jbc is already in local mode. if jbc is repl_(a)sync then check if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999910079543843	WITHOUT_CLASSIFICATION	8.99204561573856E-6	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents updates add a zero (or low) timeout option so we don't block waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.999885993136065	WITHOUT_CLASSIFICATION	1.1400686393505982E-4	IMPLEMENTATION
double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999877809177029	WITHOUT_CLASSIFICATION	1.2219082297083954E-5	IMPLEMENTATION
get an exclusive right to update jbc for this key from this node.	WITHOUT_CLASSIFICATION	0.9999992752680288	WITHOUT_CLASSIFICATION	7.247319713394573E-7	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9999394212222347	WITHOUT_CLASSIFICATION	6.057877776522963E-5	IMPLEMENTATION
initial load from jbc	WITHOUT_CLASSIFICATION	0.9999991884094609	WITHOUT_CLASSIFICATION	8.115905391641655E-7	IMPLEMENTATION
see if we had a 2nd invalidation from the same initial preinvalidation timestamp. if so only increment if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999999991889769	WITHOUT_CLASSIFICATION	8.110231134567878E-10	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9999394212222347	WITHOUT_CLASSIFICATION	6.057877776522963E-5	IMPLEMENTATION
if the workspace node has null as well ok if not we've been modified in a non-comparable manner which we have to treat as us being newer	WITHOUT_CLASSIFICATION	0.9993269894499948	WITHOUT_CLASSIFICATION	6.730105500051455E-4	IMPLEMENTATION
the standard comparator types are not serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999613162467698	WITHOUT_CLASSIFICATION	3.868375323020695E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999827337086784	WITHOUT_CLASSIFICATION	1.726629132159614E-5	IMPLEMENTATION
construct the cache	WITHOUT_CLASSIFICATION	0.9999511819537025	WITHOUT_CLASSIFICATION	4.881804629747129E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999798121397061	WITHOUT_CLASSIFICATION	2.018786029390943E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999798121397061	WITHOUT_CLASSIFICATION	2.018786029390943E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999472916587769	WITHOUT_CLASSIFICATION	5.2708341222960414E-5	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for initialpoolsize which hibernate sensibly lets default to minpoolsize but we'll let users override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999999233911795	WITHOUT_CLASSIFICATION	7.660882050778686E-8	IMPLEMENTATION
datasource unpooled = datasources.unpooleddatasource(jdbcurl props.getproperty(environment.user) props.getproperty(environment.pass))	WITHOUT_CLASSIFICATION	0.9999027721065928	WITHOUT_CLASSIFICATION	9.722789340719718E-5	IMPLEMENTATION
true if the pool is borrowed from the outside false if we used to create it	WITHOUT_CLASSIFICATION	0.9999997687298622	WITHOUT_CLASSIFICATION	2.3127013787261607E-7	IMPLEMENTATION
get a connection from the pool (thru drivermanager cfr. proxool doc)	WITHOUT_CLASSIFICATION	0.9997681340286073	WITHOUT_CLASSIFICATION	2.3186597139266015E-4	IMPLEMENTATION
set the transaction isolation if defined	WITHOUT_CLASSIFICATION	0.9999965208758018	WITHOUT_CLASSIFICATION	3.4791241983227485E-6	IMPLEMENTATION
toggle autocommit to false if set	WITHOUT_CLASSIFICATION	0.9999752279405602	WITHOUT_CLASSIFICATION	2.4772059439829865E-5	IMPLEMENTATION
return the connection	WITHOUT_CLASSIFICATION	0.9988296486952305	WITHOUT_CLASSIFICATION	0.001170351304769512	IMPLEMENTATION
get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999683080665345	WITHOUT_CLASSIFICATION	3.169193346551672E-5	IMPLEMENTATION
default the proxool alias setting	WITHOUT_CLASSIFICATION	0.999998807382361	WITHOUT_CLASSIFICATION	1.1926176390255763E-6	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999908739890276	WITHOUT_CLASSIFICATION	9.126010972358671E-6	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999908739890276	WITHOUT_CLASSIFICATION	9.126010972358671E-6	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998327279959063	WITHOUT_CLASSIFICATION	1.6727200409376907E-4	IMPLEMENTATION
set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9998905341723557	WITHOUT_CLASSIFICATION	1.0946582764420996E-4	IMPLEMENTATION
configured using the jaxp configurator	WITHOUT_CLASSIFICATION	0.9999832207930777	WITHOUT_CLASSIFICATION	1.677920692229308E-5	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999908739890276	WITHOUT_CLASSIFICATION	9.126010972358671E-6	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998327279959063	WITHOUT_CLASSIFICATION	1.6727200409376907E-4	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998327279959063	WITHOUT_CLASSIFICATION	1.6727200409376907E-4	IMPLEMENTATION
configured using the properties file configurator	WITHOUT_CLASSIFICATION	0.999934633913435	WITHOUT_CLASSIFICATION	6.536608656503227E-5	IMPLEMENTATION
remember isolation level	WITHOUT_CLASSIFICATION	0.9993384419678629	WITHOUT_CLASSIFICATION	6.615580321369614E-4	IMPLEMENTATION
if the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.999999996561474	WITHOUT_CLASSIFICATION	3.438525946026417E-9	IMPLEMENTATION
we have created the pool ourselves so shut it down	WITHOUT_CLASSIFICATION	0.9999960936349467	WITHOUT_CLASSIFICATION	3.906365053319194E-6	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9991359633197704	WITHOUT_CLASSIFICATION	8.640366802295875E-4	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9991359633197704	WITHOUT_CLASSIFICATION	8.640366802295875E-4	IMPLEMENTATION
always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999868009919644	WITHOUT_CLASSIFICATION	1.319900803557321E-5	IMPLEMENTATION
public currency getcurrency(int col) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999590537924739	WITHOUT_CLASSIFICATION	4.094620752610575E-5	IMPLEMENTATION
default is pojo	WITHOUT_CLASSIFICATION	0.9999969893739105	WITHOUT_CLASSIFICATION	3.0106260895641097E-6	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999979652407096	WITHOUT_CLASSIFICATION	2.0347592903902953E-6	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999979652407096	WITHOUT_CLASSIFICATION	2.0347592903902953E-6	IMPLEMENTATION
private cacheentry cacheentry	WITHOUT_CLASSIFICATION	0.9999887545029598	WITHOUT_CLASSIFICATION	1.1245497040293746E-5	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9982459926037403	WITHOUT_CLASSIFICATION	0.0017540073962597422	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9998109023545044	WITHOUT_CLASSIFICATION	1.8909764549555175E-4	IMPLEMENTATION
get the updated snapshot of the entity state by cloning current state it is safe to copy in place since by this time no-one else (should have) has a reference to the array	WITHOUT_CLASSIFICATION	0.9999999938301772	WITHOUT_CLASSIFICATION	6.169822771060218E-9	IMPLEMENTATION
this entity defines proeprty generation so process those generated values	WITHOUT_CLASSIFICATION	0.9999991472457078	WITHOUT_CLASSIFICATION	8.527542921690747E-7	IMPLEMENTATION
have the entity entry perform post-update processing passing it the update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.999951214912491	WITHOUT_CLASSIFICATION	4.878508750900716E-5	IMPLEMENTATION
!persister.iscacheinvalidationrequired()	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9998021101969227	WITHOUT_CLASSIFICATION	1.9788980307735782E-4	IMPLEMENTATION
sort first by role name	WITHOUT_CLASSIFICATION	0.999973191192403	WITHOUT_CLASSIFICATION	2.6808807597058412E-5	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9998109023545044	WITHOUT_CLASSIFICATION	1.8909764549555175E-4	IMPLEMENTATION
then by fk	WITHOUT_CLASSIFICATION	0.9999933769691886	WITHOUT_CLASSIFICATION	6.623030811510136E-6	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999844367242754	WITHOUT_CLASSIFICATION	1.5563275724635814E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999844367242754	WITHOUT_CLASSIFICATION	1.5563275724635814E-5	IMPLEMENTATION
an existing collection that was either non-empty or uninitialized is replaced by null or a different collection (if the collection is uninitialized hibernate has no way of knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999998226164822	WITHOUT_CLASSIFICATION	1.7738351768866967E-7	IMPLEMENTATION
this method is called when a new non-null collection is persisted or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.999997647147323	WITHOUT_CLASSIFICATION	2.3528526771164074E-6	IMPLEMENTATION
boolean put = persister.getcache().insert(ck cacheentry)	WITHOUT_CLASSIFICATION	0.9998808905769593	WITHOUT_CLASSIFICATION	1.191094230406311E-4	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9855489420408554	WITHOUT_CLASSIFICATION	0.0144510579591445	IMPLEMENTATION
do nothing - we only need to notify the cache	WITHOUT_CLASSIFICATION	0.9999149964180273	WITHOUT_CLASSIFICATION	8.500358197280157E-5	IMPLEMENTATION
sort first by entity name	WITHOUT_CLASSIFICATION	0.9999738681400261	WITHOUT_CLASSIFICATION	2.6131859973929525E-5	IMPLEMENTATION
then by id	WITHOUT_CLASSIFICATION	0.9999790252602928	WITHOUT_CLASSIFICATION	2.0974739707177112E-5	IMPLEMENTATION
to be safe	WITHOUT_CLASSIFICATION	0.9999807155103954	WITHOUT_CLASSIFICATION	1.9284489604639417E-5	IMPLEMENTATION
no transformations took place so handle it as we would a non-instrumented class	WITHOUT_CLASSIFICATION	0.9999225102968574	WITHOUT_CLASSIFICATION	7.748970314252584E-5	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999998931916019	WITHOUT_CLASSIFICATION	1.0680839810453533E-7	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999998931916019	WITHOUT_CLASSIFICATION	1.0680839810453533E-7	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9990749281316799	WITHOUT_CLASSIFICATION	9.250718683201634E-4	IMPLEMENTATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999981072079657	WITHOUT_CLASSIFICATION	1.8927920344087667E-6	IMPLEMENTATION
set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.999990244132654	WITHOUT_CLASSIFICATION	9.755867345911998E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
invokespecial	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891681865286	WITHOUT_CLASSIFICATION	1.0831813471507117E-5	IMPLEMENTATION
aload_1 load bean	WITHOUT_CLASSIFICATION	0.999956258029221	WITHOUT_CLASSIFICATION	4.3741970779108806E-5	IMPLEMENTATION
checkcast cast bean	WITHOUT_CLASSIFICATION	0.999947234853966	WITHOUT_CLASSIFICATION	5.276514603398082E-5	IMPLEMENTATION
astore_3 store bean	WITHOUT_CLASSIFICATION	0.9998079509738834	WITHOUT_CLASSIFICATION	1.920490261165882E-4	IMPLEMENTATION
aload_2 args	WITHOUT_CLASSIFICATION	0.9999315790382298	WITHOUT_CLASSIFICATION	6.84209617702064E-5	IMPLEMENTATION
iconst_i continue to aastore growing stack is 1	WITHOUT_CLASSIFICATION	0.9999697382313821	WITHOUT_CLASSIFICATION	3.02617686179329E-5	IMPLEMENTATION
new	WITHOUT_CLASSIFICATION	0.9999872997426626	WITHOUT_CLASSIFICATION	1.270025733738581E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999826961754114	WITHOUT_CLASSIFICATION	1.7303824588644257E-5	IMPLEMENTATION
aload_3 load the raw bean	WITHOUT_CLASSIFICATION	0.999979436534859	WITHOUT_CLASSIFICATION	2.0563465140933074E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
aastore args	WITHOUT_CLASSIFICATION	0.9999315790382298	WITHOUT_CLASSIFICATION	6.84209617702064E-5	IMPLEMENTATION
| this | bean | args | i | raw bean | exception |	WITHOUT_CLASSIFICATION	0.9999042011839873	WITHOUT_CLASSIFICATION	9.579881601271021E-5	IMPLEMENTATION
required to exception table iconst_0 i	WITHOUT_CLASSIFICATION	0.9998124941353109	WITHOUT_CLASSIFICATION	1.8750586468911296E-4	IMPLEMENTATION
istore_3 store i	WITHOUT_CLASSIFICATION	0.9994308343539178	WITHOUT_CLASSIFICATION	5.691656460822895E-4	IMPLEMENTATION
aload_1 load the bean	WITHOUT_CLASSIFICATION	0.9999791926406383	WITHOUT_CLASSIFICATION	2.080735936175078E-5	IMPLEMENTATION
checkcast cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999824028408	WITHOUT_CLASSIFICATION	1.7597159200052078E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999483064188541	WITHOUT_CLASSIFICATION	5.169358114577595E-5	IMPLEMENTATION
start region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9997224053456649	WITHOUT_CLASSIFICATION	2.7759465433501866E-4	IMPLEMENTATION
iinc 3 1	WITHOUT_CLASSIFICATION	0.9999338853033833	WITHOUT_CLASSIFICATION	6.611469661668667E-5	IMPLEMENTATION
aload 4 load the raw bean	WITHOUT_CLASSIFICATION	0.9999737792491447	WITHOUT_CLASSIFICATION	2.622075085537368E-5	IMPLEMENTATION
aload_2 load the args	WITHOUT_CLASSIFICATION	0.9999734250094368	WITHOUT_CLASSIFICATION	2.6574990563253405E-5	IMPLEMENTATION
iconst_i	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
aaload	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999824819939297	WITHOUT_CLASSIFICATION	1.7518006070378508E-5	IMPLEMENTATION
checkcast (case of primitive type) invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999862245153263	WITHOUT_CLASSIFICATION	1.3775484673775707E-5	IMPLEMENTATION
checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999955175690893	WITHOUT_CLASSIFICATION	4.482430910659333E-6	IMPLEMENTATION
current stack len = 2	WITHOUT_CLASSIFICATION	0.9999510860885897	WITHOUT_CLASSIFICATION	4.891391141025633E-5	IMPLEMENTATION
end region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9981530179470995	WITHOUT_CLASSIFICATION	0.001846982052900466	IMPLEMENTATION
register in exception table	WITHOUT_CLASSIFICATION	0.9999967044853405	WITHOUT_CLASSIFICATION	3.295514659518986E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891681865286	WITHOUT_CLASSIFICATION	1.0831813471507117E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891681865286	WITHOUT_CLASSIFICATION	1.0831813471507117E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999826961754114	WITHOUT_CLASSIFICATION	1.7303824588644257E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999824819939297	WITHOUT_CLASSIFICATION	1.7518006070378508E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999900249101195	WITHOUT_CLASSIFICATION	9.975089880462633E-6	IMPLEMENTATION
astore 5 store exception	WITHOUT_CLASSIFICATION	0.9999685681223499	WITHOUT_CLASSIFICATION	3.1431877650149216E-5	IMPLEMENTATION
new bulkaccessorexception	WITHOUT_CLASSIFICATION	0.9999716641614806	WITHOUT_CLASSIFICATION	2.8335838519393872E-5	IMPLEMENTATION
aload 5 load exception	WITHOUT_CLASSIFICATION	0.9999928418187993	WITHOUT_CLASSIFICATION	7.158181200791012E-6	IMPLEMENTATION
iload_3 i	WITHOUT_CLASSIFICATION	0.9999480740906895	WITHOUT_CLASSIFICATION	5.192590931032578E-5	IMPLEMENTATION
invokespecial bulkaccessorexception.<init>	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
athrow	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
warning classfile only	WITHOUT_CLASSIFICATION	0.9999947775496939	WITHOUT_CLASSIFICATION	5.2224503060839625E-6	IMPLEMENTATION
swallow	WITHOUT_CLASSIFICATION	0.9999824570713303	WITHOUT_CLASSIFICATION	1.7542928669744595E-5	IMPLEMENTATION
local variable | this |	WITHOUT_CLASSIFICATION	0.999909165450499	WITHOUT_CLASSIFICATION	9.083454950109785E-5	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9999162156664455	WITHOUT_CLASSIFICATION	8.378433355452133E-5	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9999162156664455	WITHOUT_CLASSIFICATION	8.378433355452133E-5	IMPLEMENTATION
getfield get field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9999928708108368	WITHOUT_CLASSIFICATION	7.129189163262049E-6	IMPLEMENTATION
areturn return the value of the field	WITHOUT_CLASSIFICATION	0.9999862534636229	WITHOUT_CLASSIFICATION	1.3746536377056652E-5	IMPLEMENTATION
local variables | this | callback |	WITHOUT_CLASSIFICATION	0.9999486159501912	WITHOUT_CLASSIFICATION	5.1384049808709574E-5	IMPLEMENTATION
aload_1 load callback	WITHOUT_CLASSIFICATION	0.9999401286155789	WITHOUT_CLASSIFICATION	5.987138442106978E-5	IMPLEMENTATION
putfield put field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9999115046049414	WITHOUT_CLASSIFICATION	8.849539505855463E-5	IMPLEMENTATION
case of non-static field	WITHOUT_CLASSIFICATION	0.9999940994390789	WITHOUT_CLASSIFICATION	5.900560921028922E-6	IMPLEMENTATION
getfield get each field	WITHOUT_CLASSIFICATION	0.9999931150869503	WITHOUT_CLASSIFICATION	6.884913049706563E-6	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999401559582529	WITHOUT_CLASSIFICATION	5.984404174705945E-5	IMPLEMENTATION
ifnonnull	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.9999846612177871	WITHOUT_CLASSIFICATION	1.5338782212940516E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.9999846612177871	WITHOUT_CLASSIFICATION	1.5338782212940516E-5	IMPLEMENTATION
store_1 each type	WITHOUT_CLASSIFICATION	0.9999751237439528	WITHOUT_CLASSIFICATION	2.4876256047171265E-5	IMPLEMENTATION
ldc name of the field	WITHOUT_CLASSIFICATION	0.9999940208611726	WITHOUT_CLASSIFICATION	5.979138827295136E-6	IMPLEMENTATION
load_1 each type	WITHOUT_CLASSIFICATION	0.9999751237439528	WITHOUT_CLASSIFICATION	2.4876256047171265E-5	IMPLEMENTATION
invokeinterface invoke callback.read() each type	WITHOUT_CLASSIFICATION	0.9999722934432528	WITHOUT_CLASSIFICATION	2.7706556747322356E-5	IMPLEMENTATION
int	WITHOUT_CLASSIFICATION	0.9999917343601277	WITHOUT_CLASSIFICATION	8.265639872217508E-6	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891681865286	WITHOUT_CLASSIFICATION	1.0831813471507117E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999826961754114	WITHOUT_CLASSIFICATION	1.7303824588644257E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999824819939297	WITHOUT_CLASSIFICATION	1.7518006070378508E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999824819939297	WITHOUT_CLASSIFICATION	1.7518006070378508E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
putfield	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891681865286	WITHOUT_CLASSIFICATION	1.0831813471507117E-5	IMPLEMENTATION
ldc field name	WITHOUT_CLASSIFICATION	0.9999734304455408	WITHOUT_CLASSIFICATION	2.6569554459242587E-5	IMPLEMENTATION
getfield old value of the field	WITHOUT_CLASSIFICATION	0.9999965669397843	WITHOUT_CLASSIFICATION	3.4330602156954056E-6	IMPLEMENTATION
invokeinterface callback.write(..)	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999958402747087	WITHOUT_CLASSIFICATION	4.159725291299935E-6	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999958402747087	WITHOUT_CLASSIFICATION	4.159725291299935E-6	IMPLEMENTATION
not array	WITHOUT_CLASSIFICATION	0.9989420405214148	WITHOUT_CLASSIFICATION	0.001057959478585233	IMPLEMENTATION
array of reference type	WITHOUT_CLASSIFICATION	0.9999985216886766	WITHOUT_CLASSIFICATION	1.4783113232997347E-6	IMPLEMENTATION
boolean	WITHOUT_CLASSIFICATION	0.9999934730029871	WITHOUT_CLASSIFICATION	6.52699701287975E-6	IMPLEMENTATION
byte	WITHOUT_CLASSIFICATION	0.9999832826265219	WITHOUT_CLASSIFICATION	1.6717373478101492E-5	IMPLEMENTATION
char	WITHOUT_CLASSIFICATION	0.9999931070696773	WITHOUT_CLASSIFICATION	6.89293032269093E-6	IMPLEMENTATION
short	WITHOUT_CLASSIFICATION	0.9999829386249793	WITHOUT_CLASSIFICATION	1.7061375020770038E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999994031259793	WITHOUT_CLASSIFICATION	5.96874020682567E-7	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999867138657561	WITHOUT_CLASSIFICATION	1.3286134243921812E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999867138657561	WITHOUT_CLASSIFICATION	1.3286134243921812E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999727465273955	WITHOUT_CLASSIFICATION	2.7253472604511893E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999727465273955	WITHOUT_CLASSIFICATION	2.7253472604511893E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999887469377611	WITHOUT_CLASSIFICATION	1.1253062238890539E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999887469377611	WITHOUT_CLASSIFICATION	1.1253062238890539E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999975150790428	WITHOUT_CLASSIFICATION	2.48492095726751E-6	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999975150790428	WITHOUT_CLASSIFICATION	2.48492095726751E-6	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999958402747087	WITHOUT_CLASSIFICATION	4.159725291299935E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999994031259793	WITHOUT_CLASSIFICATION	5.96874020682567E-7	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999867138657561	WITHOUT_CLASSIFICATION	1.3286134243921812E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999867138657561	WITHOUT_CLASSIFICATION	1.3286134243921812E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999727465273955	WITHOUT_CLASSIFICATION	2.7253472604511893E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999887469377611	WITHOUT_CLASSIFICATION	1.1253062238890539E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999887469377611	WITHOUT_CLASSIFICATION	1.1253062238890539E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999975150790428	WITHOUT_CLASSIFICATION	2.48492095726751E-6	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.9999372096606842	WITHOUT_CLASSIFICATION	6.279033931583636E-5	IMPLEMENTATION
mainly for oscache	WITHOUT_CLASSIFICATION	0.9999768934282829	WITHOUT_CLASSIFICATION	2.31065717170365E-5	IMPLEMENTATION
decrement the lock	WITHOUT_CLASSIFICATION	0.9999722891883915	WITHOUT_CLASSIFICATION	2.7710811608426452E-5	IMPLEMENTATION
create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9998470492495029	WITHOUT_CLASSIFICATION	1.5295075049723492E-4	IMPLEMENTATION
recache the updated state	WITHOUT_CLASSIFICATION	0.9999863036510661	WITHOUT_CLASSIFICATION	1.36963489339936E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999830314318879	WITHOUT_CLASSIFICATION	1.6968568112148454E-5	IMPLEMENTATION
null clientlock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999989182088576	WITHOUT_CLASSIFICATION	1.08179114250417E-6	IMPLEMENTATION
we really could refresh the item if it is not a lock but it might be slower return freshtimestamp < txtimestamp	WITHOUT_CLASSIFICATION	0.9999940524720853	WITHOUT_CLASSIFICATION	5.947527914744662E-6	IMPLEMENTATION
by requiring < we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999998353786665	WITHOUT_CLASSIFICATION	1.6462133339640403E-7	IMPLEMENTATION
the user provided resulttransformer not the one used with "select new". here to avoid mangling transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9756767208718964	WITHOUT_CLASSIFICATION	0.024323279128103528	IMPLEMENTATION
disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999224605932742	WITHOUT_CLASSIFICATION	7.753940672573869E-5	IMPLEMENTATION
disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999758245993051	WITHOUT_CLASSIFICATION	2.417540069492303E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999472916587769	WITHOUT_CLASSIFICATION	5.2708341222960414E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999830314318879	WITHOUT_CLASSIFICATION	1.6968568112148454E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999830314318879	WITHOUT_CLASSIFICATION	1.6968568112148454E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999830314318879	WITHOUT_CLASSIFICATION	1.6968568112148454E-5	IMPLEMENTATION
this is called from settingsfactory irregardless trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999893679844801	WITHOUT_CLASSIFICATION	1.0632015519956704E-5	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9999799916735043	WITHOUT_CLASSIFICATION	2.000832649572561E-5	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9999799916735043	WITHOUT_CLASSIFICATION	2.000832649572561E-5	IMPLEMENTATION
throw new unsupportedoperationexception("can't write to a readonly object")	WITHOUT_CLASSIFICATION	0.9997796182159884	WITHOUT_CLASSIFICATION	2.203817840115586E-4	IMPLEMENTATION
assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999999756473953	WITHOUT_CLASSIFICATION	2.4352604710647142E-8	IMPLEMENTATION
persister.setidentifier(result id) before calling interceptor for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999777636108451	WITHOUT_CLASSIFICATION	2.22363891548369E-5	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9994962757789346	WITHOUT_CLASSIFICATION	5.037242210654148E-4	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9994962757789346	WITHOUT_CLASSIFICATION	5.037242210654148E-4	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999948884955048	WITHOUT_CLASSIFICATION	5.111504495234691E-6	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999790375574419	WITHOUT_CLASSIFICATION	2.0962442558119827E-5	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999790375574419	WITHOUT_CLASSIFICATION	2.0962442558119827E-5	IMPLEMENTATION
classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9996489857474464	WITHOUT_CLASSIFICATION	3.510142525535412E-4	IMPLEMENTATION
get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999963343668302	WITHOUT_CLASSIFICATION	3.665633169849251E-6	IMPLEMENTATION
get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999977575254602	WITHOUT_CLASSIFICATION	2.2424745398001537E-6	IMPLEMENTATION
db-objectname	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
mutable	WITHOUT_CLASSIFICATION	0.9999824721373448	WITHOUT_CLASSIFICATION	1.7527862655264127E-5	IMPLEMENTATION
where	WITHOUT_CLASSIFICATION	0.9999498689979424	WITHOUT_CLASSIFICATION	5.013100205773692E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9998977706056982	WITHOUT_CLASSIFICATION	1.0222939430184748E-4	IMPLEMENTATION
polymorphism	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.8073306800523441	WITHOUT_CLASSIFICATION	0.19266931994765593	IMPLEMENTATION
id	WITHOUT_CLASSIFICATION	0.9999057322755078	WITHOUT_CLASSIFICATION	9.426772449219071E-5	IMPLEMENTATION
version / timestamp	WITHOUT_CLASSIFICATION	0.9999849095022794	WITHOUT_CLASSIFICATION	1.5090497720565908E-5	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999462762013848	WITHOUT_CLASSIFICATION	5.372379861518276E-5	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999847030695467	WITHOUT_CLASSIFICATION	1.5296930453346234E-5	IMPLEMENTATION
this is either a <version/> tag with no type attribute or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.999983764234143	WITHOUT_CLASSIFICATION	1.623576585697691E-5	IMPLEMENTATION
for version properties marked as being generated make sure they are "always" generated aka "insert" is invalid this is dis-allowed by the dtd but just to make sure	WITHOUT_CLASSIFICATION	0.9999997741861255	WITHOUT_CLASSIFICATION	2.25813874522435E-7	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999462762013848	WITHOUT_CLASSIFICATION	5.372379861518276E-5	IMPLEMENTATION
( (column) discrim.getcolumniterator().next() ).settype(type)	WITHOUT_CLASSIFICATION	0.9999685683452593	WITHOUT_CLASSIFICATION	3.143165474081628E-5	IMPLEMENTATION
go ahead and set the lazy here since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9995196500178934	WITHOUT_CLASSIFICATION	4.803499821066384E-4	IMPLEMENTATION
dynamic update	WITHOUT_CLASSIFICATION	0.9999955412344075	WITHOUT_CLASSIFICATION	4.458765592611684E-6	IMPLEMENTATION
import	WITHOUT_CLASSIFICATION	0.9999737186330012	WITHOUT_CLASSIFICATION	2.6281366998789646E-5	IMPLEMENTATION
batch size	WITHOUT_CLASSIFICATION	0.9999823365687983	WITHOUT_CLASSIFICATION	1.7663431201641894E-5	IMPLEMENTATION
select before update	WITHOUT_CLASSIFICATION	0.9999975173459711	WITHOUT_CLASSIFICATION	2.482654028883218E-6	IMPLEMENTATION
optimistic lock mode	WITHOUT_CLASSIFICATION	0.9998578376002593	WITHOUT_CLASSIFICATION	1.4216239974075497E-4	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999720716423314	WITHOUT_CLASSIFICATION	2.7928357668729463E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999936765615626	WITHOUT_CLASSIFICATION	6.323438437469184E-6	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999977575254602	WITHOUT_CLASSIFICATION	2.2424745398001537E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999650913077701	WITHOUT_CLASSIFICATION	3.4908692229934966E-5	IMPLEMENTATION
joined subclasses	WITHOUT_CLASSIFICATION	0.999974506402614	WITHOUT_CLASSIFICATION	2.5493597386063066E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999862220061467	WITHOUT_CLASSIFICATION	1.3777993853244782E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9998977706056982	WITHOUT_CLASSIFICATION	1.0222939430184748E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999936765615626	WITHOUT_CLASSIFICATION	6.323438437469184E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999650913077701	WITHOUT_CLASSIFICATION	3.4908692229934966E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999862220061467	WITHOUT_CLASSIFICATION	1.3777993853244782E-5	IMPLEMENTATION
model.getkey().settype( new type( model.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9999288030367004	WITHOUT_CLASSIFICATION	7.11969632995973E-5	IMPLEMENTATION
tablename	WITHOUT_CLASSIFICATION	0.9999825835023298	WITHOUT_CLASSIFICATION	1.7416497670169524E-5	IMPLEMENTATION
join.getkey().settype( new type( lazz.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9999288030367004	WITHOUT_CLASSIFICATION	7.11969632995973E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999650913077701	WITHOUT_CLASSIFICATION	3.4908692229934966E-5	IMPLEMENTATION
column(s)	WITHOUT_CLASSIFICATION	0.9999824764534828	WITHOUT_CLASSIFICATION	1.7523546517109232E-5	IMPLEMENTATION
column index	WITHOUT_CLASSIFICATION	0.999785646241016	WITHOUT_CLASSIFICATION	2.1435375898401686E-4	IMPLEMENTATION
column unique-key	WITHOUT_CLASSIFICATION	0.9999286593582813	WITHOUT_CLASSIFICATION	7.13406417186706E-5	IMPLEMENTATION
automatically makes a column with the default name if none is specifed by xml	WITHOUT_CLASSIFICATION	0.9999999579155213	WITHOUT_CLASSIFICATION	4.2084478772007436E-8	IMPLEMENTATION
for an any	WITHOUT_CLASSIFICATION	0.999999434346278	WITHOUT_CLASSIFICATION	5.656537219778258E-7	IMPLEMENTATION
insertable simply because that is the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9923007302207679	WITHOUT_CLASSIFICATION	0.007699269779232107	IMPLEMENTATION
the user specifically supplied insert="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999867844296481	WITHOUT_CLASSIFICATION	1.3215570351929642E-5	IMPLEMENTATION
properties generated on update can never be updateable	WITHOUT_CLASSIFICATION	0.9990234336030852	WITHOUT_CLASSIFICATION	9.765663969148834E-4	IMPLEMENTATION
updateable only because the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9975876853792859	WITHOUT_CLASSIFICATION	0.002412314620714083	IMPLEMENTATION
the user specifically supplied update="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999867844296481	WITHOUT_CLASSIFICATION	1.3215570351929642E-5	IMPLEMENTATION
rolename	WITHOUT_CLASSIFICATION	0.999983688601614	WITHOUT_CLASSIFICATION	1.631139838600473E-5	IMPLEMENTATION
fetch strategy	WITHOUT_CLASSIFICATION	0.9999689219742449	WITHOUT_CLASSIFICATION	3.107802575500003E-5	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999856529163459	WITHOUT_CLASSIFICATION	1.434708365423503E-5	IMPLEMENTATION
tablename = mappings.getnamingstrategy().propertytotablename( classname path )	WITHOUT_CLASSIFICATION	0.9998119596382196	WITHOUT_CLASSIFICATION	1.8804036178046008E-4	IMPLEMENTATION
sort	WITHOUT_CLASSIFICATION	0.9999535220625894	WITHOUT_CLASSIFICATION	4.64779374106396E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999936765615626	WITHOUT_CLASSIFICATION	6.323438437469184E-6	IMPLEMENTATION
unsorted natural comparator.class.name	WITHOUT_CLASSIFICATION	0.9999359455239021	WITHOUT_CLASSIFICATION	6.405447609790408E-5	IMPLEMENTATION
orphan delete (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999620440134362	WITHOUT_CLASSIFICATION	3.79559865637364E-5	IMPLEMENTATION
set up second pass	WITHOUT_CLASSIFICATION	0.9998866922886169	WITHOUT_CLASSIFICATION	1.1330771138308261E-4	IMPLEMENTATION
an "embedded" component (composite ids and unique) note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9994959051414236	WITHOUT_CLASSIFICATION	5.040948585764429E-4	IMPLEMENTATION
a nested composite element	WITHOUT_CLASSIFICATION	0.9999596829391382	WITHOUT_CLASSIFICATION	4.031706086180729E-5	IMPLEMENTATION
for an any we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999880031664145	WITHOUT_CLASSIFICATION	1.1996833585507905E-5	IMPLEMENTATION
note special case one-to-one constrained=false cannot be proxied so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999999116909525	WITHOUT_CLASSIFICATION	8.83090475004901E-8	IMPLEMENTATION
use old (hb 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999990151917126	WITHOUT_CLASSIFICATION	9.848082874227156E-7	IMPLEMENTATION
lazy = !join	WITHOUT_CLASSIFICATION	0.9999099314489437	WITHOUT_CLASSIFICATION	9.006855105624182E-5	IMPLEMENTATION
generator	WITHOUT_CLASSIFICATION	0.9999865767901379	WITHOUT_CLASSIFICATION	1.3423209862013687E-5	IMPLEMENTATION
id unsaved-value	WITHOUT_CLASSIFICATION	0.999711714545246	WITHOUT_CLASSIFICATION	2.8828545475392283E-4	IMPLEMENTATION
version unsaved-value	WITHOUT_CLASSIFICATION	0.9999212936939347	WITHOUT_CLASSIFICATION	7.87063060653311E-5	IMPLEMENTATION
not necessarily a unique property reference	WITHOUT_CLASSIFICATION	0.999370733429131	WITHOUT_CLASSIFICATION	6.292665708690049E-4	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999685683452593	WITHOUT_CLASSIFICATION	3.143165474081628E-5	IMPLEMENTATION
contained elements	WITHOUT_CLASSIFICATION	0.9999820626180634	WITHOUT_CLASSIFICATION	1.7937381936580186E-5	IMPLEMENTATION
for non-inverse one-to-many with a not-null fk add a backref!	WITHOUT_CLASSIFICATION	0.9999219756952176	WITHOUT_CLASSIFICATION	7.80243047824537E-5	IMPLEMENTATION
bind the where	WITHOUT_CLASSIFICATION	0.9999026074175097	WITHOUT_CLASSIFICATION	9.739258249031022E-5	IMPLEMENTATION
bind the order-by	WITHOUT_CLASSIFICATION	0.9999658705447235	WITHOUT_CLASSIFICATION	3.412945527642537E-5	IMPLEMENTATION
bind the filters	WITHOUT_CLASSIFICATION	0.9999659253230878	WITHOUT_CLASSIFICATION	3.4074676912179886E-5	IMPLEMENTATION
overriding inherited meta attribute. hbx-621 & hbx-793	WITHOUT_CLASSIFICATION	0.9999594091639703	WITHOUT_CLASSIFICATION	4.059083602964531E-5	IMPLEMENTATION
first iterate over all elements capable of defining an extends attribute collecting all found extends references if they cannot be resolved against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999937669298	WITHOUT_CLASSIFICATION	6.233070289958723E-9	IMPLEMENTATION
mappings might contain either the "raw" extends name (in the case of an entity-name mapping) or a fqn (in the case of a pojo mapping).	WITHOUT_CLASSIFICATION	0.999999322517803	WITHOUT_CLASSIFICATION	6.774821970028865E-7	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9970927167718279	WITHOUT_CLASSIFICATION	0.0029072832281719922	IMPLEMENTATION
sessionfactory name	WITHOUT_CLASSIFICATION	0.999964268014913	WITHOUT_CLASSIFICATION	3.573198508703424E-5	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.999667251278524	WITHOUT_CLASSIFICATION	3.3274872147603956E-4	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.999667251278524	WITHOUT_CLASSIFICATION	3.3274872147603956E-4	IMPLEMENTATION
interrogate jdbc metadata	WITHOUT_CLASSIFICATION	0.9999773425142802	WITHOUT_CLASSIFICATION	2.2657485719914647E-5	IMPLEMENTATION
user supplied jdbc connections	WITHOUT_CLASSIFICATION	0.9999799628918052	WITHOUT_CLASSIFICATION	2.0037108194813228E-5	IMPLEMENTATION
use dialect default properties	WITHOUT_CLASSIFICATION	0.9999828415911874	WITHOUT_CLASSIFICATION	1.7158408812636535E-5	IMPLEMENTATION
transaction settings	WITHOUT_CLASSIFICATION	0.9999950383599473	WITHOUT_CLASSIFICATION	4.961640052676788E-6	IMPLEMENTATION
sql generation settings	WITHOUT_CLASSIFICATION	0.9999980278613029	WITHOUT_CLASSIFICATION	1.9721386970676206E-6	IMPLEMENTATION
query parser settings	WITHOUT_CLASSIFICATION	0.99998873232734	WITHOUT_CLASSIFICATION	1.1267672659966123E-5	IMPLEMENTATION
second-level / query cache	WITHOUT_CLASSIFICATION	0.9999941084523427	WITHOUT_CLASSIFICATION	5.891547657325269E-6	IMPLEMENTATION
the cache provider is needed when we either have second-level cache enabled or query cache enabled. note that usesecondlevelcache is enabled by default	WITHOUT_CLASSIFICATION	0.9860430335503542	WITHOUT_CLASSIFICATION	0.013956966449645931	IMPLEMENTATION
sql exception converter	WITHOUT_CLASSIFICATION	0.9999950229508018	WITHOUT_CLASSIFICATION	4.977049198197693E-6	IMPLEMENTATION
statistics and logging	WITHOUT_CLASSIFICATION	0.999978051978561	WITHOUT_CLASSIFICATION	2.194802143892082E-5	IMPLEMENTATION
settings.setshowsqlenabled(showsql)	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
settings.setformatsqlenabled(formatsql)	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
schema export	WITHOUT_CLASSIFICATION	0.9999737368960963	WITHOUT_CLASSIFICATION	2.6263103903705937E-5	IMPLEMENTATION
string provider = properties.getproperty( environment.bytecode_provider ) log.info( "bytecode provider name " + provider ) bytecodeprovider bytecodeprovider = buildbytecodeprovider( provider ) settings.setbytecodeprovider( bytecodeprovider )	WITHOUT_CLASSIFICATION	0.9998984212558205	WITHOUT_CLASSIFICATION	1.0157874417946489E-4	IMPLEMENTATION
legacy behavior apply the bridge	WITHOUT_CLASSIFICATION	0.9999460972875351	WITHOUT_CLASSIFICATION	5.3902712465011047E-5	IMPLEMENTATION
maybe a concrete sqlpropertyresult type but map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9998346072604456	WITHOUT_CLASSIFICATION	1.6539273955442052E-4	IMPLEMENTATION
if dotted and not load-collection nor return-join regular property	WITHOUT_CLASSIFICATION	0.9989393605514022	WITHOUT_CLASSIFICATION	0.0010606394485977463	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907 private bytecodeprovider bytecodeprovider	WITHOUT_CLASSIFICATION	0.7575174687035978	WITHOUT_CLASSIFICATION	0.24248253129640215	IMPLEMENTATION
public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999772577760792	WITHOUT_CLASSIFICATION	2.2742223920760555E-5	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999602523455375	WITHOUT_CLASSIFICATION	3.974765446239358E-5	IMPLEMENTATION
package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998819989826075	WITHOUT_CLASSIFICATION	1.180010173924267E-4	IMPLEMENTATION
void setshowsqlenabled(boolean b) { showsql = b } void setformatsqlenabled(boolean b) { formatsql = b }	WITHOUT_CLASSIFICATION	0.9996471205330265	WITHOUT_CLASSIFICATION	3.5287946697353E-4	IMPLEMENTATION
public bytecodeprovider getbytecodeprovider() { return bytecodeprovider } void setbytecodeprovider(bytecodeprovider bytecodeprovider) { this.bytecodeprovider = bytecodeprovider }	WITHOUT_CLASSIFICATION	0.9999524462441981	WITHOUT_CLASSIFICATION	4.7553755801918796E-5	IMPLEMENTATION
using local since the inheritedmetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9996204026396792	WITHOUT_CLASSIFICATION	3.7959736032086263E-4	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907	WITHOUT_CLASSIFICATION	0.7575174687035978	WITHOUT_CLASSIFICATION	0.24248253129640215	IMPLEMENTATION
protected list extendsqueue	WITHOUT_CLASSIFICATION	0.9999886783314316	WITHOUT_CLASSIFICATION	1.1321668568491424E-5	IMPLEMENTATION
extendsqueue = new arraylist()	WITHOUT_CLASSIFICATION	0.9999570452526517	WITHOUT_CLASSIFICATION	4.2954747348209755E-5	IMPLEMENTATION
componenttuplizerfactory = new componenttuplizerfactory()	WITHOUT_CLASSIFICATION	0.9999297062916829	WITHOUT_CLASSIFICATION	7.029370831706986E-5	IMPLEMENTATION
if doc is null then for whatever reason the cached file cannot be used	WITHOUT_CLASSIFICATION	0.9999999889509329	WITHOUT_CLASSIFICATION	1.1049067155795935E-8	IMPLEMENTATION
drop them in reverse order in case db needs it done that way	WITHOUT_CLASSIFICATION	0.9999418489574495	WITHOUT_CLASSIFICATION	5.815104255031521E-5	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999602523455375	WITHOUT_CLASSIFICATION	3.974765446239358E-5	IMPLEMENTATION
this method may be called many times!!	WITHOUT_CLASSIFICATION	0.9998573627053258	WITHOUT_CLASSIFICATION	1.4263729467434253E-4	IMPLEMENTATION
iterator iterator = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9998685345851385	WITHOUT_CLASSIFICATION	1.3146541486148137E-4	IMPLEMENTATION
iterator iter = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9998686588978274	WITHOUT_CLASSIFICATION	1.3134110217267095E-4	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999798055873156	WITHOUT_CLASSIFICATION	2.01944126843647E-5	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999798055873156	WITHOUT_CLASSIFICATION	2.01944126843647E-5	IMPLEMENTATION
settings.setcomponenttuplizerfactory( this.getcomponenttuplizerfactory() )	WITHOUT_CLASSIFICATION	0.999901522788762	WITHOUT_CLASSIFICATION	9.847721123802691E-5	IMPLEMENTATION
private final list extendsqueue	WITHOUT_CLASSIFICATION	0.9999938934002477	WITHOUT_CLASSIFICATION	6.106599752342925E-6	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.999946314352777	WITHOUT_CLASSIFICATION	5.368564722311384E-5	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.999946314352777	WITHOUT_CLASSIFICATION	5.368564722311384E-5	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9970927167718279	WITHOUT_CLASSIFICATION	0.0029072832281719922	IMPLEMENTATION
set use_reflection_optimizer to false to fix hhh-227	WITHOUT_CLASSIFICATION	0.9925522147095133	WITHOUT_CLASSIFICATION	0.007447785290486751	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9999230493891639	WITHOUT_CLASSIFICATION	7.695061083606898E-5	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9999410738889591	WITHOUT_CLASSIFICATION	5.8926111040878964E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9990749281316799	WITHOUT_CLASSIFICATION	9.250718683201634E-4	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9999230493891639	WITHOUT_CLASSIFICATION	7.695061083606898E-5	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9999410738889591	WITHOUT_CLASSIFICATION	5.8926111040878964E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.6242345216621665	WITHOUT_CLASSIFICATION	0.37576547833783336	IMPLEMENTATION
maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999998199733335	WITHOUT_CLASSIFICATION	1.800266665605061E-7	IMPLEMENTATION
the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999680564081527	WITHOUT_CLASSIFICATION	3.194359184738156E-5	IMPLEMENTATION
the element has changed	WITHOUT_CLASSIFICATION	0.999999527616746	WITHOUT_CLASSIFICATION	4.723832539557848E-7	IMPLEMENTATION
careful these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.994119306534583	WITHOUT_CLASSIFICATION	0.005880693465416954	IMPLEMENTATION
needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.815326602686477	WITHOUT_CLASSIFICATION	0.18467339731352306	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9988201680978178	WITHOUT_CLASSIFICATION	0.0011798319021822286	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9988201680978178	WITHOUT_CLASSIFICATION	0.0011798319021822286	IMPLEMENTATION
do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.999974000188533	WITHOUT_CLASSIFICATION	2.5999811466979477E-5	IMPLEMENTATION
short-circuit(s) no new elements the old list contains only orphans no old elements so no orphans neither	WITHOUT_CLASSIFICATION	0.9999999738898191	WITHOUT_CLASSIFICATION	2.6110180896270302E-8	IMPLEMENTATION
create the collection holding the orphans	WITHOUT_CLASSIFICATION	0.999947967206735	WITHOUT_CLASSIFICATION	5.203279326504454E-5	IMPLEMENTATION
collect entityidentifier(s) of the current elements - add them into a hashset for fast access	WITHOUT_CLASSIFICATION	0.9999956382473725	WITHOUT_CLASSIFICATION	4.3617526275293385E-6	IMPLEMENTATION
iterate over the old list	WITHOUT_CLASSIFICATION	0.9999998590647955	WITHOUT_CLASSIFICATION	1.4093520450951254E-7	IMPLEMENTATION
(array==null) ? templist.size()	WITHOUT_CLASSIFICATION	0.9998805031110233	WITHOUT_CLASSIFICATION	1.1949688897668673E-4	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9990749281316799	WITHOUT_CLASSIFICATION	9.250718683201634E-4	IMPLEMENTATION
(array==null) ? templist.get(i)	WITHOUT_CLASSIFICATION	0.9998805031110233	WITHOUT_CLASSIFICATION	1.1949688897668673E-4	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9999928135917392	WITHOUT_CLASSIFICATION	7.1864082607326964E-6	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9999928135917392	WITHOUT_CLASSIFICATION	7.1864082607326964E-6	IMPLEMENTATION
amazingly these two will work because abstractcollection uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999776308707565	WITHOUT_CLASSIFICATION	2.2369129243566145E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.6242345216621665	WITHOUT_CLASSIFICATION	0.37576547833783336	IMPLEMENTATION
finally what it's all about	WITHOUT_CLASSIFICATION	0.9990107026027994	WITHOUT_CLASSIFICATION	9.892973972005505E-4	IMPLEMENTATION
note that if we load this collection from a cartesian product the multiplicity would be broken so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999984487016605	WITHOUT_CLASSIFICATION	1.5512983394462433E-6	IMPLEMENTATION
anyway here we implement <set> semantics for a <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9957406331181432	WITHOUT_CLASSIFICATION	0.00425936688185678	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999987202273332	WITHOUT_CLASSIFICATION	1.279772666729076E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9995319062197068	WITHOUT_CLASSIFICATION	4.6809378029313235E-4	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.6242345216621665	WITHOUT_CLASSIFICATION	0.37576547833783336	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999987202273332	WITHOUT_CLASSIFICATION	1.279772666729076E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9995319062197068	WITHOUT_CLASSIFICATION	4.6809378029313235E-4	IMPLEMENTATION
public boolean equals(object other) {read()return bag.equals(other)}public int hashcode(object other) {read()return bag.hashcode()}	WITHOUT_CLASSIFICATION	0.9999979162268791	WITHOUT_CLASSIFICATION	2.0837731208561133E-6	IMPLEMENTATION
list operations	WITHOUT_CLASSIFICATION	0.9999707711121079	WITHOUT_CLASSIFICATION	2.92288878921015E-5	IMPLEMENTATION
pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999758938848511	WITHOUT_CLASSIFICATION	2.4106115148934058E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.6242345216621665	WITHOUT_CLASSIFICATION	0.37576547833783336	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.6242345216621665	WITHOUT_CLASSIFICATION	0.37576547833783336	IMPLEMENTATION
from map	WITHOUT_CLASSIFICATION	0.9999951965386664	WITHOUT_CLASSIFICATION	4.80346133364641E-6	IMPLEMENTATION
from sortedmap	WITHOUT_CLASSIFICATION	0.9999884255508905	WITHOUT_CLASSIFICATION	1.1574449109507929E-5	IMPLEMENTATION
inject the data	WITHOUT_CLASSIFICATION	0.9999917432076255	WITHOUT_CLASSIFICATION	8.25679237443027E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999975773106444	WITHOUT_CLASSIFICATION	2.422689355504309E-6	IMPLEMENTATION
default pool size 20	WITHOUT_CLASSIFICATION	0.9999883803527504	WITHOUT_CLASSIFICATION	1.1619647249551502E-5	IMPLEMENTATION
trying via forname() first to be as close to drivermanager's semantics	WITHOUT_CLASSIFICATION	0.999992739638492	WITHOUT_CLASSIFICATION	7.260361507939249E-6	IMPLEMENTATION
if debug level is enabled then log the password otherwise mask it	WITHOUT_CLASSIFICATION	0.9998577563645927	WITHOUT_CLASSIFICATION	1.4224363540722362E-4	IMPLEMENTATION
register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999832523341196	WITHOUT_CLASSIFICATION	1.6747665880457863E-5	IMPLEMENTATION
wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999885205593846	WITHOUT_CLASSIFICATION	1.1479440615455147E-5	IMPLEMENTATION
then bind it	WITHOUT_CLASSIFICATION	0.9999771079031258	WITHOUT_CLASSIFICATION	2.289209687430274E-5	IMPLEMENTATION
try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.998279507448383	WITHOUT_CLASSIFICATION	0.001720492551616955	IMPLEMENTATION
allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9990123860938447	WITHOUT_CLASSIFICATION	9.876139061552676E-4	IMPLEMENTATION
limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999994699577803	WITHOUT_CLASSIFICATION	5.300422196232996E-7	IMPLEMENTATION
allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.999092172425268	WITHOUT_CLASSIFICATION	9.078275747320572E-4	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998442285476732	WITHOUT_CLASSIFICATION	1.5577145232688048E-4	IMPLEMENTATION
we could register the session against the transaction even though it is not started but we'd have no guarentee of ever getting the map entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999969099656496	WITHOUT_CLASSIFICATION	3.09003435048702E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999975773106444	WITHOUT_CLASSIFICATION	2.422689355504309E-6	IMPLEMENTATION
private string propertyname	WITHOUT_CLASSIFICATION	0.9999912505445006	WITHOUT_CLASSIFICATION	8.749455499444055E-6	IMPLEMENTATION
public propertyprojection project() {return projections.property(getpropertyname())}	WITHOUT_CLASSIFICATION	0.9999880854395347	WITHOUT_CLASSIFICATION	1.191456046526901E-5	IMPLEMENTATION
string[] fk = stringhelper.qualify( "collection_" cp.getkeycolumnnames() )	WITHOUT_CLASSIFICATION	0.9997519728811378	WITHOUT_CLASSIFICATION	2.4802711886219537E-4	IMPLEMENTATION
" collection_ where " +	WITHOUT_CLASSIFICATION	0.9998402088308973	WITHOUT_CLASSIFICATION	1.597911691027426E-4	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9999462977711583	WITHOUT_CLASSIFICATION	5.370222884161182E-5	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9999462977711583	WITHOUT_CLASSIFICATION	5.370222884161182E-5	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999975773106444	WITHOUT_CLASSIFICATION	2.422689355504309E-6	IMPLEMENTATION
the following two lines were added to ensure that this.params is not null which can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9919975136395156	WITHOUT_CLASSIFICATION	0.00800248636048437	IMPLEMENTATION
with two-deep subqueries the same alias would get generated for both using the old method (criteriaquery.generatesqlalias()) so that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999993738165899	WITHOUT_CLASSIFICATION	6.261834101752162E-7	IMPLEMENTATION
implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.992776307367794	WITHOUT_CLASSIFICATION	0.007223692632206108	IMPLEMENTATION
pull off the last " "	WITHOUT_CLASSIFICATION	0.9999901295006861	WITHOUT_CLASSIFICATION	9.870499313886518E-6	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999859431439425	WITHOUT_CLASSIFICATION	1.4056856057437122E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource)	WITHOUT_CLASSIFICATION	0.9997839461774151	WITHOUT_CLASSIFICATION	2.160538225849299E-4	IMPLEMENTATION
not_supported_should_use_jdbc3_preparedstatement.getgeneratedkeys_method	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999888070166512	WITHOUT_CLASSIFICATION	1.119298334889963E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
oracle did add support for ansi case statements in 9i	WITHOUT_CLASSIFICATION	0.9999966938176376	WITHOUT_CLASSIFICATION	3.3061823624454216E-6	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999981255522518	WITHOUT_CLASSIFICATION	1.874447748363201E-6	IMPLEMENTATION
informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999890823233438	WITHOUT_CLASSIFICATION	1.0917676656187146E-5	IMPLEMENTATION
or byte or text? or money	WITHOUT_CLASSIFICATION	0.9999735717428985	WITHOUT_CLASSIFICATION	2.6428257101566736E-5	IMPLEMENTATION
strip table-owner because informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999169102032204	WITHOUT_CLASSIFICATION	8.308979677964296E-5	IMPLEMENTATION
build the map of standard ansi sql aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999973011275678	WITHOUT_CLASSIFICATION	2.6988724322032155E-6	IMPLEMENTATION
pre h3.2 behavior super.getreturntype(ct m)	WITHOUT_CLASSIFICATION	0.9999557555624586	WITHOUT_CLASSIFICATION	4.424443754141666E-5	IMPLEMENTATION
finally use the sqltype if == on hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9907134397006402	WITHOUT_CLASSIFICATION	0.009286560299359686	IMPLEMENTATION
because numeric can be anything	WITHOUT_CLASSIFICATION	0.9998920714091909	WITHOUT_CLASSIFICATION	1.079285908091268E-4	IMPLEMENTATION
constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998843929678292	WITHOUT_CLASSIFICATION	1.1560703217075194E-4	IMPLEMENTATION
standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999984651778359	WITHOUT_CLASSIFICATION	1.5348221642025351E-6	IMPLEMENTATION
map second/minute/hour/day/month/year to ansi extract() override on subclasses	WITHOUT_CLASSIFICATION	0.9990468829180972	WITHOUT_CLASSIFICATION	9.531170819028675E-4	IMPLEMENTATION
register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.999993147053393	WITHOUT_CLASSIFICATION	6.852946606999207E-6	IMPLEMENTATION
database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993119444383143	WITHOUT_CLASSIFICATION	6.880555616856772E-4	IMPLEMENTATION
hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999623214611997	WITHOUT_CLASSIFICATION	3.7678538800299186E-4	IMPLEMENTATION
keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993780099173982	WITHOUT_CLASSIFICATION	6.219900826018962E-4	IMPLEMENTATION
native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999545922883941	WITHOUT_CLASSIFICATION	4.5407711605849795E-5	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992820222346844	WITHOUT_CLASSIFICATION	7.179777653155845E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992910481973679	WITHOUT_CLASSIFICATION	7.089518026320927E-4	IMPLEMENTATION
guid support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992203259192171	WITHOUT_CLASSIFICATION	7.796740807828996E-4	IMPLEMENTATION
limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992203259192171	WITHOUT_CLASSIFICATION	7.796740807828996E-4	IMPLEMENTATION
by default we report no support	WITHOUT_CLASSIFICATION	0.9999525868692097	WITHOUT_CLASSIFICATION	4.741313079025016E-5	IMPLEMENTATION
by default we report no support for nowait lock semantics	WITHOUT_CLASSIFICATION	0.9999831445771806	WITHOUT_CLASSIFICATION	1.6855422819309936E-5	IMPLEMENTATION
table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993631445472971	WITHOUT_CLASSIFICATION	6.368554527027787E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994023460647923	WITHOUT_CLASSIFICATION	5.976539352076757E-4	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9987577825266531	WITHOUT_CLASSIFICATION	0.001242217473346824	IMPLEMENTATION
current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9981220692097482	WITHOUT_CLASSIFICATION	0.0018779307902517973	IMPLEMENTATION
sqlexception support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992417260672442	WITHOUT_CLASSIFICATION	7.582739327557696E-4	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992203259192171	WITHOUT_CLASSIFICATION	7.796740807828996E-4	IMPLEMENTATION
identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990905892895213	WITHOUT_CLASSIFICATION	9.09410710478569E-4	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992203259192171	WITHOUT_CLASSIFICATION	7.796740807828996E-4	IMPLEMENTATION
grrr for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999932307413651	WITHOUT_CLASSIFICATION	6.769258634922328E-6	IMPLEMENTATION
informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999372516534435	WITHOUT_CLASSIFICATION	6.27483465565292E-5	IMPLEMENTATION
return false here as most databases do not properly support this construct	WITHOUT_CLASSIFICATION	0.8493840665306079	IMPLEMENTATION	0.15061593346939212	WITHOUT_CLASSIFICATION
mckoi has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999989400331742	WITHOUT_CLASSIFICATION	1.0599668257517914E-6	IMPLEMENTATION
oracle8 and previous define only a "date" type which is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.999997120802925	WITHOUT_CLASSIFICATION	2.8791970750249277E-6	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999478815419361	WITHOUT_CLASSIFICATION	5.211845806380284E-5	IMPLEMENTATION
" cascade"	WITHOUT_CLASSIFICATION	0.999971762928739	WITHOUT_CLASSIFICATION	2.823707126106013E-5	IMPLEMENTATION
trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999830486879747	WITHOUT_CLASSIFICATION	1.6951312025357728E-5	IMPLEMENTATION
public boolean droptemporarytableafteruse() {we have to because postgres sets current txto rollback only after a failed create tablereturn true}	WITHOUT_CLASSIFICATION	0.9999974157892362	WITHOUT_CLASSIFICATION	2.584210763763884E-6	IMPLEMENTATION
check violation	WITHOUT_CLASSIFICATION	0.9996873716362612	WITHOUT_CLASSIFICATION	3.1262836373874774E-4	IMPLEMENTATION
unique violation	WITHOUT_CLASSIFICATION	0.9999045185751865	WITHOUT_CLASSIFICATION	9.5481424813515E-5	IMPLEMENTATION
foreign key violation	WITHOUT_CLASSIFICATION	0.9999240817503748	WITHOUT_CLASSIFICATION	7.591824962507906E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
not null violation	WITHOUT_CLASSIFICATION	0.9990231451994156	WITHOUT_CLASSIFICATION	9.768548005844447E-4	IMPLEMENTATION
all other	WITHOUT_CLASSIFICATION	0.9998944391552557	WITHOUT_CLASSIFICATION	1.0556084474441526E-4	IMPLEMENTATION
register the type of the out param - postgresql uses types.other	WITHOUT_CLASSIFICATION	0.9999958710181686	WITHOUT_CLASSIFICATION	4.128981831546579E-6	IMPLEMENTATION
seems to not really public boolean supportsrowvalueconstructorsyntax() { return true }	WITHOUT_CLASSIFICATION	0.9998339866175435	WITHOUT_CLASSIFICATION	1.6601338245656318E-4	IMPLEMENTATION
seems to have spotty lob suppport	WITHOUT_CLASSIFICATION	0.9998983025789981	WITHOUT_CLASSIFICATION	1.0169742100181239E-4	IMPLEMENTATION
hhh-2300	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
ignore (probably h2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9995903306235157	WITHOUT_CLASSIFICATION	4.0966937648431674E-4	IMPLEMENTATION
numeric functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999006112643244	WITHOUT_CLASSIFICATION	9.938873567552361E-5	IMPLEMENTATION
string functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999720963254549	WITHOUT_CLASSIFICATION	2.7903674545082314E-5	IMPLEMENTATION
time and date functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998563908996903	WITHOUT_CLASSIFICATION	1.4360910030971455E-4	IMPLEMENTATION
system functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998560626935706	WITHOUT_CLASSIFICATION	1.439373064294122E-4	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9993024141664457	WITHOUT_CLASSIFICATION	6.975858335543406E-4	IMPLEMENTATION
23000 check constraint violation {0} 23001 unique index or primary key violation {0}	WITHOUT_CLASSIFICATION	0.9995241411406123	WITHOUT_CLASSIFICATION	4.758588593876515E-4	IMPLEMENTATION
display the dialect version.	WITHOUT_CLASSIFICATION	0.999988442511746	WITHOUT_CLASSIFICATION	1.155748825391714E-5	IMPLEMENTATION
the rdms concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999462119980603	WITHOUT_CLASSIFICATION	5.378800193964167E-5	IMPLEMENTATION
dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999361344548013	WITHOUT_CLASSIFICATION	6.386554519862759E-5	IMPLEMENTATION
original dialect.java returns " for update"	WITHOUT_CLASSIFICATION	0.99984605703799	WITHOUT_CLASSIFICATION	1.539429620099627E-4	IMPLEMENTATION
verify the state of this new method in hibernate 3.0 dialect.java	WITHOUT_CLASSIFICATION	0.9999993240914389	WITHOUT_CLASSIFICATION	6.759085611459163E-7	IMPLEMENTATION
origial dialect.java returns true	WITHOUT_CLASSIFICATION	0.9999485155939752	WITHOUT_CLASSIFICATION	5.1484406024857565E-5	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999375641699788	WITHOUT_CLASSIFICATION	6.243583002119576E-5	IMPLEMENTATION
sequence methods - start. the rdms dialect needs these	WITHOUT_CLASSIFICATION	0.999821682425076	WITHOUT_CLASSIFICATION	1.78317574924031E-4	IMPLEMENTATION
methods to make it possible to use the native id generator	WITHOUT_CLASSIFICATION	0.9946304306440159	WITHOUT_CLASSIFICATION	0.005369569355984108	IMPLEMENTATION
the where clause was added to eliminate this statement from brute force searches.	WITHOUT_CLASSIFICATION	0.9999904642897892	WITHOUT_CLASSIFICATION	9.53571021071241E-6	IMPLEMENTATION
sequence methods - end	WITHOUT_CLASSIFICATION	0.9999212849920507	WITHOUT_CLASSIFICATION	7.871500794937676E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999478815419361	WITHOUT_CLASSIFICATION	5.211845806380284E-5	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9998479253401413	WITHOUT_CLASSIFICATION	1.5207465985868048E-4	IMPLEMENTATION
used with drop table to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999977272966882	WITHOUT_CLASSIFICATION	2.2727033118560125E-6	IMPLEMENTATION
rdms supports the union all clause.	WITHOUT_CLASSIFICATION	0.9997959062947601	WITHOUT_CLASSIFICATION	2.0409370523992535E-4	IMPLEMENTATION
rdms has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999989397634551	WITHOUT_CLASSIFICATION	1.0602365449110913E-6	IMPLEMENTATION
multi-param dialect functions	WITHOUT_CLASSIFICATION	0.999978420182371	WITHOUT_CLASSIFICATION	2.157981762890997E-5	IMPLEMENTATION
function templates	WITHOUT_CLASSIFICATION	0.9999697703539309	WITHOUT_CLASSIFICATION	3.0229646069196238E-5	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9993024141664457	WITHOUT_CLASSIFICATION	6.975858335543406E-4	IMPLEMENTATION
this assumes schema support which is present in 1.8.0 and later	WITHOUT_CLASSIFICATION	0.9999025391579685	WITHOUT_CLASSIFICATION	9.746084203158123E-5	IMPLEMENTATION
hsqldb only supports read_uncommitted transaction isolation	WITHOUT_CLASSIFICATION	0.9998951818064872	WITHOUT_CLASSIFICATION	1.0481819351284599E-4	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.999973415478841	WITHOUT_CLASSIFICATION	2.658452115893808E-5	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9999053095723364	WITHOUT_CLASSIFICATION	9.469042766360431E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9997929456197105	WITHOUT_CLASSIFICATION	2.0705438028944758E-4	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999662296353008	WITHOUT_CLASSIFICATION	3.377036469925238E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9996735816007314	WITHOUT_CLASSIFICATION	3.2641839926856713E-4	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999991960340682	WITHOUT_CLASSIFICATION	8.03965931806381E-7	IMPLEMENTATION
timesten has no blob/clob support but these types may be suitable for some applications. the length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999454155789195	WITHOUT_CLASSIFICATION	5.458442108043953E-5	IMPLEMENTATION
new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999968378785511	WITHOUT_CLASSIFICATION	3.162121448963981E-6	IMPLEMENTATION
public boolean supportsforupdatenowait() {return false}	WITHOUT_CLASSIFICATION	0.9999955739213156	WITHOUT_CLASSIFICATION	4.4260786845020255E-6	IMPLEMENTATION
timesten has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999989321690039	WITHOUT_CLASSIFICATION	1.0678309960202705E-6	IMPLEMENTATION
iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999712947729945	WITHOUT_CLASSIFICATION	2.870522700559064E-5	IMPLEMENTATION
add new ordered map	WITHOUT_CLASSIFICATION	0.9999438919412236	WITHOUT_CLASSIFICATION	5.6108058776425525E-5	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" )	WITHOUT_CLASSIFICATION	0.9999016396177216	WITHOUT_CLASSIFICATION	9.836038227838583E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.999998027034616	WITHOUT_CLASSIFICATION	1.972965383882234E-6	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999845354303085	WITHOUT_CLASSIFICATION	1.5464569691514584E-5	IMPLEMENTATION
return "select current_timestamp from rdb$database"	WITHOUT_CLASSIFICATION	0.9999915988560013	WITHOUT_CLASSIFICATION	8.401143998723205E-6	IMPLEMENTATION
registercolumntype data types	WITHOUT_CLASSIFICATION	0.9999745958327456	WITHOUT_CLASSIFICATION	2.540416725442628E-5	IMPLEMENTATION
hibernate seems to ignore this type	WITHOUT_CLASSIFICATION	0.999933053434276	WITHOUT_CLASSIFICATION	6.694656572402765E-5	IMPLEMENTATION
ibid for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999657627049592	WITHOUT_CLASSIFICATION	3.423729504087987E-5	IMPLEMENTATION
tell hibernate to use getbytes instead of getbinarystream	WITHOUT_CLASSIFICATION	0.9999345773096248	WITHOUT_CLASSIFICATION	6.542269037527608E-5	IMPLEMENTATION
no batch statements	WITHOUT_CLASSIFICATION	0.9999726524857869	WITHOUT_CLASSIFICATION	2.7347514213114286E-5	IMPLEMENTATION
we might want a special case for 192. this is very common for money types and here it is converted to 181	WITHOUT_CLASSIFICATION	0.999650859958698	WITHOUT_CLASSIFICATION	3.491400413020802E-4	IMPLEMENTATION
no pointbase bit	WITHOUT_CLASSIFICATION	0.9999745619269953	WITHOUT_CLASSIFICATION	2.5438073004606557E-5	IMPLEMENTATION
no pointbase tinyint	WITHOUT_CLASSIFICATION	0.9999745026588212	WITHOUT_CLASSIFICATION	2.5497341178770328E-5	IMPLEMENTATION
pointbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999989399019715	WITHOUT_CLASSIFICATION	1.0600980284824074E-6	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999478815419361	WITHOUT_CLASSIFICATION	5.211845806380284E-5	IMPLEMENTATION
the current_timestamp is more accurate but only known to be supported in sql server 7.0 and later (i.e. sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.999993522999564	WITHOUT_CLASSIFICATION	6.477000435952797E-6	IMPLEMENTATION
sql server (at least up through 2005) does not support defining cascade delete constraints which can circel back to the mutating table	WITHOUT_CLASSIFICATION	0.9995835083249703	WITHOUT_CLASSIFICATION	4.164916750296463E-4	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9902511919875157	WITHOUT_CLASSIFICATION	0.009748808012484438	IMPLEMENTATION
registercolumntype( types.blob 16777215 "mediumblob" ) registercolumntype( types.blob 65535 "blob" )	WITHOUT_CLASSIFICATION	0.9999016396177216	WITHOUT_CLASSIFICATION	9.836038227838583E-5	IMPLEMENTATION
registercolumntype( types.clob 16777215 "mediumtext" ) registercolumntype( types.clob 65535 "text" )	WITHOUT_CLASSIFICATION	0.9999018155361681	WITHOUT_CLASSIFICATION	9.818446383185645E-5	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" ) registercolumntype( types.varchar 65535 "text" )	WITHOUT_CLASSIFICATION	0.9999018155361681	WITHOUT_CLASSIFICATION	9.818446383185645E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999478815419361	WITHOUT_CLASSIFICATION	5.211845806380284E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999463233031545	WITHOUT_CLASSIFICATION	5.367669684554269E-5	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999845354303085	WITHOUT_CLASSIFICATION	1.5464569691514584E-5	IMPLEMENTATION
sybase bit type does not support null values	WITHOUT_CLASSIFICATION	0.9999319358363158	WITHOUT_CLASSIFICATION	6.806416368423091E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.999998027034616	WITHOUT_CLASSIFICATION	1.972965383882234E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999850572138798	WITHOUT_CLASSIFICATION	1.4942786120204721E-5	IMPLEMENTATION
not null (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9979575654250007	WITHOUT_CLASSIFICATION	0.0020424345749992597	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999985055741176	WITHOUT_CLASSIFICATION	1.4944258824232305E-6	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.999973415478841	WITHOUT_CLASSIFICATION	2.658452115893808E-5	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9999053095723364	WITHOUT_CLASSIFICATION	9.469042766360431E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9997929456197105	WITHOUT_CLASSIFICATION	2.0705438028944758E-4	IMPLEMENTATION
add another (inner) nested select add the main query close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999958091688158	WITHOUT_CLASSIFICATION	4.190831184161981E-6	IMPLEMENTATION
add the main query	WITHOUT_CLASSIFICATION	0.9999030982758662	WITHOUT_CLASSIFICATION	9.690172413376433E-5	IMPLEMENTATION
add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999734649218013	WITHOUT_CLASSIFICATION	2.653507819880014E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.999998027034616	WITHOUT_CLASSIFICATION	1.972965383882234E-6	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999850572138798	WITHOUT_CLASSIFICATION	1.4942786120204721E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999478815419361	WITHOUT_CLASSIFICATION	5.211845806380284E-5	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999662296353008	WITHOUT_CLASSIFICATION	3.377036469925238E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9996735816007314	WITHOUT_CLASSIFICATION	3.2641839926856713E-4	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999991960340682	WITHOUT_CLASSIFICATION	8.03965931806381E-7	IMPLEMENTATION
features which change between 8i 9i and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999804741745957	WITHOUT_CLASSIFICATION	1.9525825404371273E-5	IMPLEMENTATION
features which remain constant across 8i 9i and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997546385618628	WITHOUT_CLASSIFICATION	2.4536143813724164E-4	IMPLEMENTATION
binary %stream character %stream	WITHOUT_CLASSIFICATION	0.9999573972885015	WITHOUT_CLASSIFICATION	4.2602711498517434E-5	IMPLEMENTATION
getdefaultproperties().setproperty(environment.statement_batch_size no_batch)	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
hibernate impelemnts cast in dialect.java	WITHOUT_CLASSIFICATION	0.9999923859150145	WITHOUT_CLASSIFICATION	7.614084985519106E-6	IMPLEMENTATION
aggregate functions shouldn't be registered right? registerfunction( "list" new standardsqlfunction("list"hibernate.string) ) stopped on $list	WITHOUT_CLASSIFICATION	0.9988102631927334	WITHOUT_CLASSIFICATION	0.0011897368072665874	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992203259192171	WITHOUT_CLASSIFICATION	7.796740807828996E-4	IMPLEMENTATION
below is for cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999954710517541	WITHOUT_CLASSIFICATION	4.528948245840855E-6	IMPLEMENTATION
note that %string is deprecated	WITHOUT_CLASSIFICATION	0.999918233645218	WITHOUT_CLASSIFICATION	8.176635478192056E-5	IMPLEMENTATION
%upper is deprecated	WITHOUT_CLASSIFICATION	0.9999712289871239	WITHOUT_CLASSIFICATION	2.877101287611926E-5	IMPLEMENTATION
the syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999447834235823	WITHOUT_CLASSIFICATION	5.52165764176979E-5	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992820222346844	WITHOUT_CLASSIFICATION	7.179777653155845E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992910481973679	WITHOUT_CLASSIFICATION	7.089518026320927E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994023460647923	WITHOUT_CLASSIFICATION	5.976539352076757E-4	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
the syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.999968561301526	WITHOUT_CLASSIFICATION	3.143869847391516E-5	IMPLEMENTATION
completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999698381256836	WITHOUT_CLASSIFICATION	3.016187431641619E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993554966455197	WITHOUT_CLASSIFICATION	6.44503354480312E-4	IMPLEMENTATION
limit support (ala top) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995016983719025	WITHOUT_CLASSIFICATION	4.983016280974834E-4	IMPLEMENTATION
intersystems cache' does not current support "select for update" syntax set your transaction mode to read_committed before using	WITHOUT_CLASSIFICATION	0.9981986150100906	WITHOUT_CLASSIFICATION	0.0018013849899094323	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
<string>	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9987577825266531	WITHOUT_CLASSIFICATION	0.001242217473346824	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992203259192171	WITHOUT_CLASSIFICATION	7.796740807828996E-4	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999375641699788	WITHOUT_CLASSIFICATION	6.243583002119576E-5	IMPLEMENTATION
does the limit clause come at the start of the select statement rather than at the end?	WITHOUT_CLASSIFICATION	0.9999998132173649	WITHOUT_CLASSIFICATION	1.8678263519813462E-7	IMPLEMENTATION
does the limit clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.999997705032185	WITHOUT_CLASSIFICATION	2.2949678150527726E-6	IMPLEMENTATION
the name of the sql function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.999990438389084	WITHOUT_CLASSIFICATION	9.561610915990053E-6	IMPLEMENTATION
create an outerjoingenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999943299058986	WITHOUT_CLASSIFICATION	5.670094101239731E-6	IMPLEMENTATION
the keyword used to insert a row without specifying any column values	WITHOUT_CLASSIFICATION	0.9999992645179633	WITHOUT_CLASSIFICATION	7.354820366758447E-7	IMPLEMENTATION
registerfunction( "trim" new standardsqlfunction( "trim" hibernate.string ) )	WITHOUT_CLASSIFICATION	0.9999288030367004	WITHOUT_CLASSIFICATION	7.11969632995973E-5	IMPLEMENTATION
skip the from keyword in params	WITHOUT_CLASSIFICATION	0.9999982863999278	WITHOUT_CLASSIFICATION	1.713600072203493E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999733485530602	WITHOUT_CLASSIFICATION	2.6651446939803244E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999888070166512	WITHOUT_CLASSIFICATION	1.119298334889963E-5	IMPLEMENTATION
sqlfunction implementation	WITHOUT_CLASSIFICATION	0.9998736074262867	WITHOUT_CLASSIFICATION	1.2639257371326254E-4	IMPLEMENTATION
conceivable that the dialect ctor could throw hibernateexceptions so don't re-wrap	WITHOUT_CLASSIFICATION	0.9997980525115089	WITHOUT_CLASSIFICATION	2.019474884911181E-4	IMPLEMENTATION
register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999569735902715	WITHOUT_CLASSIFICATION	4.3026409728555837E-5	IMPLEMENTATION
register resolvers set via environment property	WITHOUT_CLASSIFICATION	0.9997828763731966	WITHOUT_CLASSIFICATION	2.1712362680350838E-4	IMPLEMENTATION
kept for backward compatibility until after the 3.1beta5 release of ha	WITHOUT_CLASSIFICATION	0.9999509649884755	WITHOUT_CLASSIFICATION	4.9035011524461514E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9999482585924556	WITHOUT_CLASSIFICATION	5.174140754435038E-5	IMPLEMENTATION
the cascadingaction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999326798333741	WITHOUT_CLASSIFICATION	6.73201666259753E-5	IMPLEMENTATION
the cascadingaction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999020123745211	WITHOUT_CLASSIFICATION	9.798762547880256E-5	IMPLEMENTATION
delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999974666281696	WITHOUT_CLASSIFICATION	2.533371830403571E-6	IMPLEMENTATION
orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.999941989378453	WITHOUT_CLASSIFICATION	5.801062154708102E-5	IMPLEMENTATION
(lockmode) anything	WITHOUT_CLASSIFICATION	0.9998977354911761	WITHOUT_CLASSIFICATION	1.022645088240017E-4	IMPLEMENTATION
lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999764401128725	WITHOUT_CLASSIFICATION	2.3559887127547047E-5	IMPLEMENTATION
refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9997607784430008	WITHOUT_CLASSIFICATION	2.3922155699927146E-4	IMPLEMENTATION
evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998344621114754	WITHOUT_CLASSIFICATION	1.6553788852456113E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999793622950454	WITHOUT_CLASSIFICATION	2.0637704954610565E-5	IMPLEMENTATION
orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9998291703371046	WITHOUT_CLASSIFICATION	1.7082966289542662E-4	IMPLEMENTATION
for deprecated saveorupdatecopy()	WITHOUT_CLASSIFICATION	0.9999649843621686	WITHOUT_CLASSIFICATION	3.501563783140424E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998344907850203	WITHOUT_CLASSIFICATION	1.6550921497960496E-4	IMPLEMENTATION
a proxy cannot be transient and it breaks foreignkeys.istransient	WITHOUT_CLASSIFICATION	0.9999979750739879	WITHOUT_CLASSIFICATION	2.0249260121165253E-6	IMPLEMENTATION
replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999925389222696	WITHOUT_CLASSIFICATION	7.46107773039877E-6	IMPLEMENTATION
static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999274239212599	WITHOUT_CLASSIFICATION	7.257607874019358E-5	IMPLEMENTATION
handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999389341398233	WITHOUT_CLASSIFICATION	6.106586017677308E-5	IMPLEMENTATION
actually the semantics of the next three are really "bag" note that unlike objects collection insertions updates deletions are not really remembered between flushes. we just re-use the same lists for convenience.	WITHOUT_CLASSIFICATION	0.9999870408245596	WITHOUT_CLASSIFICATION	1.2959175440396701E-5	IMPLEMENTATION
add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999416237777791	WITHOUT_CLASSIFICATION	5.837622222095884E-5	IMPLEMENTATION
continue loop	WITHOUT_CLASSIFICATION	0.9999794031260203	WITHOUT_CLASSIFICATION	2.0596873979666342E-5	IMPLEMENTATION
sort the updates by fk	WITHOUT_CLASSIFICATION	0.999962823949858	WITHOUT_CLASSIFICATION	3.71760501419394E-5	IMPLEMENTATION
sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999780965559851	WITHOUT_CLASSIFICATION	2.1903444014865592E-5	IMPLEMENTATION
the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999733476436554	WITHOUT_CLASSIFICATION	2.6652356344521028E-5	IMPLEMENTATION
the map of batch numbers to entityinsertaction lists	WITHOUT_CLASSIFICATION	0.9999797297888378	WITHOUT_CLASSIFICATION	2.027021116217961E-5	IMPLEMENTATION
optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9997418004084484	WITHOUT_CLASSIFICATION	2.581995915515612E-4	IMPLEMENTATION
the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9998478235287268	WITHOUT_CLASSIFICATION	1.521764712731107E-4	IMPLEMENTATION
remove the current element from insertions. it will be added back later.	WITHOUT_CLASSIFICATION	0.9999996775451835	WITHOUT_CLASSIFICATION	3.2245481655139455E-7	IMPLEMENTATION
the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9998280260751788	WITHOUT_CLASSIFICATION	1.7197392482122046E-4	IMPLEMENTATION
there is already an existing batch for this type of entity. check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999999411163533	WITHOUT_CLASSIFICATION	5.8883646604068375E-8	IMPLEMENTATION
now rebuild the insertions list. there is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.999997923060205	WITHOUT_CLASSIFICATION	2.0769397950105502E-6	IMPLEMENTATION
the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999666943031439	WITHOUT_CLASSIFICATION	3.330569685602948E-5	IMPLEMENTATION
loop through all the associations of the current entity and make sure that they are processed before the current batch number	WITHOUT_CLASSIFICATION	0.9999258375854482	WITHOUT_CLASSIFICATION	7.416241455180803E-5	IMPLEMENTATION
find the batch number associated with the current association if any.	WITHOUT_CLASSIFICATION	0.9999387084004406	WITHOUT_CLASSIFICATION	6.12915995593201E-5	IMPLEMENTATION
create a new batch for this type. the batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999953945305703	WITHOUT_CLASSIFICATION	4.605469429720101E-6	IMPLEMENTATION
loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9995115772195625	WITHOUT_CLASSIFICATION	4.884227804373875E-4	IMPLEMENTATION
since this entity will now be processed in the latest possible batch we can be assured that it will come after all other associations there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9286067513578573	WITHOUT_CLASSIFICATION	0.07139324864214265	IMPLEMENTATION
cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9998609937484015	WITHOUT_CLASSIFICATION	1.3900625159847768E-4	IMPLEMENTATION
not really necessary but good for consistency	WITHOUT_CLASSIFICATION	0.9995781548258861	WITHOUT_CLASSIFICATION	4.21845174114014E-4	IMPLEMENTATION
we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999496514125307	WITHOUT_CLASSIFICATION	5.034858746931922E-5	IMPLEMENTATION
a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9990497609935622	WITHOUT_CLASSIFICATION	9.502390064377331E-4	IMPLEMENTATION
handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9998180859669606	WITHOUT_CLASSIFICATION	1.8191403303934416E-4	IMPLEMENTATION
loaded entity instances by entityuniquekey	WITHOUT_CLASSIFICATION	0.999983172306938	WITHOUT_CLASSIFICATION	1.6827693061960032E-5	IMPLEMENTATION
identity map of entityentry instances by the entity instance	WITHOUT_CLASSIFICATION	0.999994863057362	WITHOUT_CLASSIFICATION	5.1369426380329485E-6	IMPLEMENTATION
entity proxies by entitykey	WITHOUT_CLASSIFICATION	0.9999857495079062	WITHOUT_CLASSIFICATION	1.4250492093798584E-5	IMPLEMENTATION
snapshots of current database state for entities that have not been loaded	WITHOUT_CLASSIFICATION	0.9966588931647261	WITHOUT_CLASSIFICATION	0.0033411068352737867	IMPLEMENTATION
identity map of array holder arrayholder instances by the array instance	WITHOUT_CLASSIFICATION	0.9999989812284062	WITHOUT_CLASSIFICATION	1.0187715937323126E-6	IMPLEMENTATION
collection wrappers by the collectionkey key=collectionkey value=persistentcollection	WITHOUT_CLASSIFICATION	0.9999617091651266	WITHOUT_CLASSIFICATION	3.8290834873452185E-5	IMPLEMENTATION
set of entitykeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999132900834478	WITHOUT_CLASSIFICATION	8.670991655217243E-5	IMPLEMENTATION
properties that we have tried to load and not found in the database	WITHOUT_CLASSIFICATION	0.993158142882992	WITHOUT_CLASSIFICATION	0.006841857117007994	IMPLEMENTATION
a list of collection wrappers that were instantiating during result set processing that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999781557971337	WITHOUT_CLASSIFICATION	2.1844202866269132E-5	IMPLEMENTATION
a container for collections we load up when the owning entity is not yet loaded for now this is purely transient!	WITHOUT_CLASSIFICATION	0.9995589310606725	WITHOUT_CLASSIFICATION	4.4106893932747737E-4	IMPLEMENTATION
downgrade locks	WITHOUT_CLASSIFICATION	0.9998955954903821	WITHOUT_CLASSIFICATION	1.0440450961792487E-4	IMPLEMENTATION
any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999810384240879	WITHOUT_CLASSIFICATION	1.8961575912142272E-5	IMPLEMENTATION
unwrap the object	WITHOUT_CLASSIFICATION	0.9999926212081549	WITHOUT_CLASSIFICATION	7.37879184507655E-6	IMPLEMENTATION
initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999965211344544	WITHOUT_CLASSIFICATION	3.478865545709471E-6	IMPLEMENTATION
return the proxied object	WITHOUT_CLASSIFICATION	0.9999966460873454	WITHOUT_CLASSIFICATION	3.3539126545440113E-6	IMPLEMENTATION
overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999969665866127	WITHOUT_CLASSIFICATION	3.033413387178576E-6	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999930123126908	WITHOUT_CLASSIFICATION	6.987687309224519E-6	IMPLEMENTATION
or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999847927329468	WITHOUT_CLASSIFICATION	1.5207267053147029E-5	IMPLEMENTATION
treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9985899519273957	WITHOUT_CLASSIFICATION	0.0014100480726041609	IMPLEMENTATION
do this work only at the very highest level of the load don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999296859158048	WITHOUT_CLASSIFICATION	7.031408419529E-5	IMPLEMENTATION
note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999923755917366	WITHOUT_CLASSIFICATION	7.6244082633450425E-6	IMPLEMENTATION
it might be an unwrapped collection reference! try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999729861762267	WITHOUT_CLASSIFICATION	2.7013823773371057E-5	IMPLEMENTATION
public boolean isnonexistant(entitykey key) {return nonexistantentitykeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999955731646433	WITHOUT_CLASSIFICATION	4.426835356662751E-6	IMPLEMENTATION
public boolean isnonexistant(entityuniquekey key) {return nonexistententityuniquekeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999955731646433	WITHOUT_CLASSIFICATION	4.426835356662751E-6	IMPLEMENTATION
iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999941229759071	WITHOUT_CLASSIFICATION	5.877024092992031E-6	IMPLEMENTATION
does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999995877879747	WITHOUT_CLASSIFICATION	4.1221202527804317E-7	IMPLEMENTATION
check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999945956892875	WITHOUT_CLASSIFICATION	5.404310712446856E-6	IMPLEMENTATION
otherwise the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999894111991712	WITHOUT_CLASSIFICATION	1.0588800828837374E-5	IMPLEMENTATION
adds remove as a sort-of alias for delete	WITHOUT_CLASSIFICATION	0.9999983517037146	WITHOUT_CLASSIFICATION	1.6482962854607386E-6	IMPLEMENTATION
bad cast	WITHOUT_CLASSIFICATION	0.9999786475665167	WITHOUT_CLASSIFICATION	2.135243348339921E-5	IMPLEMENTATION
return lhspersister.getsubclasspropertycolumnnames(property)	WITHOUT_CLASSIFICATION	0.9999604959922624	WITHOUT_CLASSIFICATION	3.9504007737540473E-5	IMPLEMENTATION
property-refs for associations defined on a component are not supported so no need to slice	WITHOUT_CLASSIFICATION	0.9999612059406007	WITHOUT_CLASSIFICATION	3.879405939943861E-5	IMPLEMENTATION
if there is no property-ref assume the join is to the subclass table (ie. the table of the subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999995342220752	WITHOUT_CLASSIFICATION	4.657779246807427E-7	IMPLEMENTATION
handle a property-ref	WITHOUT_CLASSIFICATION	0.9998734438244745	WITHOUT_CLASSIFICATION	1.2655617552545777E-4	IMPLEMENTATION
nativesqlqueryreturn	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999675631479759	WITHOUT_CLASSIFICATION	3.2436852024114794E-5	IMPLEMENTATION
why is all others non final ?	WITHOUT_CLASSIFICATION	0.999721212822359	WITHOUT_CLASSIFICATION	2.787871776409808E-4	IMPLEMENTATION
this.forcecacherefresh = forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999027721065928	WITHOUT_CLASSIFICATION	9.722789340719718E-5	IMPLEMENTATION
hella important optimization!!!	WITHOUT_CLASSIFICATION	0.9999232764327457	WITHOUT_CLASSIFICATION	7.672356725426264E-5	IMPLEMENTATION
return that.type.equals(type) && equalshelper.equals(that.value value)	WITHOUT_CLASSIFICATION	0.999961175686431	WITHOUT_CLASSIFICATION	3.882431356906801E-5	IMPLEMENTATION
must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999566800766511	WITHOUT_CLASSIFICATION	4.331992334899145E-5	IMPLEMENTATION
take a snapshot	WITHOUT_CLASSIFICATION	0.9999688458629086	WITHOUT_CLASSIFICATION	3.115413709138154E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9998362129534928	WITHOUT_CLASSIFICATION	1.6378704650733396E-4	IMPLEMENTATION
the owning entity may have been deleted and its identifier unset due to identifier-rollback in which case try to look up its identifier from the persistence context	WITHOUT_CLASSIFICATION	0.9990895412894715	WITHOUT_CLASSIFICATION	9.104587105284753E-4	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9998133484686018	WITHOUT_CLASSIFICATION	1.8665153139817806E-4	IMPLEMENTATION
we've been here before	WITHOUT_CLASSIFICATION	0.9998914109148798	WITHOUT_CLASSIFICATION	1.0858908512027995E-4	IMPLEMENTATION
it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999992265616084	WITHOUT_CLASSIFICATION	7.734383917023757E-7	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9998133484686018	WITHOUT_CLASSIFICATION	1.8665153139817806E-4	IMPLEMENTATION
if either its role changed	WITHOUT_CLASSIFICATION	0.9999995624981932	WITHOUT_CLASSIFICATION	4.3750180669582823E-7	IMPLEMENTATION
or its key changed	WITHOUT_CLASSIFICATION	0.9999962447213204	WITHOUT_CLASSIFICATION	3.7552786796311345E-6	IMPLEMENTATION
we will need to create new entries	WITHOUT_CLASSIFICATION	0.9998142682535776	WITHOUT_CLASSIFICATION	1.8573174642249872E-4	IMPLEMENTATION
we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9997700397928014	WITHOUT_CLASSIFICATION	2.299602071985271E-4	IMPLEMENTATION
force initialize!	WITHOUT_CLASSIFICATION	0.9996670809559673	WITHOUT_CLASSIFICATION	3.3291904403270754E-4	IMPLEMENTATION
else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999988999401398	WITHOUT_CLASSIFICATION	1.10005986011308E-6	IMPLEMENTATION
attributes maintained between flush cycles	WITHOUT_CLASSIFICATION	0.9998965792955765	WITHOUT_CLASSIFICATION	1.034207044235381E-4	IMPLEMENTATION
session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999825434127848	WITHOUT_CLASSIFICATION	1.745658721512759E-5	IMPLEMENTATION
allow the collectionsnapshot to be serialized	WITHOUT_CLASSIFICATION	0.999936552326187	WITHOUT_CLASSIFICATION	6.344767381303318E-5	IMPLEMENTATION
attributes used only during flush cycle	WITHOUT_CLASSIFICATION	0.9999870330701385	WITHOUT_CLASSIFICATION	1.2966929861644806E-5	IMPLEMENTATION
"current" means the reference that was found during flush()	WITHOUT_CLASSIFICATION	0.9999996503101392	WITHOUT_CLASSIFICATION	3.496898609032848E-7	IMPLEMENTATION
"loaded" means the reference that is consistent with the current database state	WITHOUT_CLASSIFICATION	0.9999827453655162	WITHOUT_CLASSIFICATION	1.725463448372506E-5	IMPLEMENTATION
during flush we navigate the object graph to collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9996929685307718	WITHOUT_CLASSIFICATION	3.0703146922812015E-4	IMPLEMENTATION
if we instantiate a collection during the flush() process we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999992726692387	WITHOUT_CLASSIFICATION	7.273307613182265E-7	IMPLEMENTATION
new collections that get found + wrapped during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.998465027281437	WITHOUT_CLASSIFICATION	0.00153497271856295	IMPLEMENTATION
a newly wrapped collection is not dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9953386098740271	WITHOUT_CLASSIFICATION	0.004661390125972909	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.999960806190921	WITHOUT_CLASSIFICATION	3.91938090791539E-5	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.999960806190921	WITHOUT_CLASSIFICATION	3.91938090791539E-5	IMPLEMENTATION
detached collections that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9975579260322555	WITHOUT_CLASSIFICATION	0.002442073967744551	IMPLEMENTATION
optimization	WITHOUT_CLASSIFICATION	0.9999629694367603	WITHOUT_CLASSIFICATION	3.703056323967905E-5	IMPLEMENTATION
optimization optimization	WITHOUT_CLASSIFICATION	0.9999729883556033	WITHOUT_CLASSIFICATION	2.7011644396702827E-5	IMPLEMENTATION
re-snapshot	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999512765145034	WITHOUT_CLASSIFICATION	4.8723485496596167E-5	IMPLEMENTATION
note this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.998277656825851	WITHOUT_CLASSIFICATION	0.0017223431741489406	IMPLEMENTATION
memory optimization	WITHOUT_CLASSIFICATION	0.9999310426087388	WITHOUT_CLASSIFICATION	6.895739126115871E-5	IMPLEMENTATION
use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999010917578653	WITHOUT_CLASSIFICATION	9.890824213463237E-5	IMPLEMENTATION
copied from session	WITHOUT_CLASSIFICATION	0.9999366761872972	WITHOUT_CLASSIFICATION	6.332381270289072E-5	IMPLEMENTATION
this should not happen since the dtd prevents it	WITHOUT_CLASSIFICATION	0.9970462627509743	WITHOUT_CLASSIFICATION	0.002953737249025725	IMPLEMENTATION
joinprocessor needs to know if the where clause fragment came from a dynamic filter or not so it can put the where clause fragment in the right place in the sql ast. 'hasfiltercondition' keeps track of that fact.	WITHOUT_CLASSIFICATION	0.7193842848669911	WITHOUT_CLASSIFICATION	0.2806157151330089	IMPLEMENTATION
the current join represents the join between a many-to-many association table and its "target" table. here we need to apply any additional filters defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9973993315015858	WITHOUT_CLASSIFICATION	0.0026006684984141767	IMPLEMENTATION
check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.99875724720405	WITHOUT_CLASSIFICATION	0.0012427527959499815	IMPLEMENTATION
values is not null and is checkable we'll look deeper	WITHOUT_CLASSIFICATION	0.9999195945889148	WITHOUT_CLASSIFICATION	8.040541108523669E-5	IMPLEMENTATION
for non null args check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999686369133084	WITHOUT_CLASSIFICATION	3.1363086691590556E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9999482585924556	WITHOUT_CLASSIFICATION	5.174140754435038E-5	IMPLEMENTATION
persistent collections may have components	WITHOUT_CLASSIFICATION	0.9997297820928457	WITHOUT_CLASSIFICATION	2.702179071542607E-4	IMPLEMENTATION
check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999967839125011	WITHOUT_CLASSIFICATION	3.216087499010836E-6	IMPLEMENTATION
will check current level if some of them are not null or sublevels if they exist	WITHOUT_CLASSIFICATION	0.9990836090700497	WITHOUT_CLASSIFICATION	9.163909299504015E-4	IMPLEMENTATION
do the test	WITHOUT_CLASSIFICATION	0.9999896890729496	WITHOUT_CLASSIFICATION	1.0310927050457555E-5	IMPLEMENTATION
if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999985490933018	WITHOUT_CLASSIFICATION	1.4509066981939518E-6	IMPLEMENTATION
unwrap it	WITHOUT_CLASSIFICATION	0.999986833973972	WITHOUT_CLASSIFICATION	1.316602602787633E-5	IMPLEMENTATION
see if the entity is already bound to this session if not look at the entity identifier and assume that the entity is persistent if the id is not "unsaved" (that is we rely on foreign keys to keep database integrity)	WITHOUT_CLASSIFICATION	0.9879997252653054	WITHOUT_CLASSIFICATION	0.012000274734694632	IMPLEMENTATION
an unfetched association can only point to an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.999997627281125	WITHOUT_CLASSIFICATION	2.3727188750563143E-6	IMPLEMENTATION
let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999754545684428	WITHOUT_CLASSIFICATION	2.4545431557261457E-5	IMPLEMENTATION
let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999609772604339	WITHOUT_CLASSIFICATION	3.9022739566225786E-5	IMPLEMENTATION
we use the assumed value if there is one to avoid hitting the database	WITHOUT_CLASSIFICATION	0.999992596431964	WITHOUT_CLASSIFICATION	7.40356803586766E-6	IMPLEMENTATION
hit the database after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999251923910273	WITHOUT_CLASSIFICATION	7.480760897274539E-5	IMPLEMENTATION
context-entity-identifier returns null explicitly if the entity is not associated with the persistence context so make some deeper checks	WITHOUT_CLASSIFICATION	0.9842747222485749	WITHOUT_CLASSIFICATION	0.01572527775142508	IMPLEMENTATION
int count = 0	WITHOUT_CLASSIFICATION	0.9999843297340036	WITHOUT_CLASSIFICATION	1.567026599629257E-5	IMPLEMENTATION
the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999549015875407	WITHOUT_CLASSIFICATION	4.5098412459272595E-5	IMPLEMENTATION
checkforend = false	WITHOUT_CLASSIFICATION	0.9999002166178425	WITHOUT_CLASSIFICATION	9.97833821575377E-5	IMPLEMENTATION
count++	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999897430497161	WITHOUT_CLASSIFICATION	1.0256950283840814E-5	IMPLEMENTATION
we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999822380130543	WITHOUT_CLASSIFICATION	1.776198694569785E-5	IMPLEMENTATION
first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999998175690158	WITHOUT_CLASSIFICATION	1.824309842233138E-7	IMPLEMENTATION
the first id found after the given id	WITHOUT_CLASSIFICATION	0.9996914973958575	WITHOUT_CLASSIFICATION	3.085026041425199E-4	IMPLEMENTATION
we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999846734222378	WITHOUT_CLASSIFICATION	1.5326577762166636E-5	IMPLEMENTATION
look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999840223340262	WITHOUT_CLASSIFICATION	1.5977665973804735E-5	IMPLEMENTATION
ignore this row of results! note the early exit	WITHOUT_CLASSIFICATION	0.9999872787491473	WITHOUT_CLASSIFICATION	1.2721250852787448E-5	IMPLEMENTATION
initialize this collection	WITHOUT_CLASSIFICATION	0.9998705290946859	WITHOUT_CLASSIFICATION	1.294709053141068E-4	IMPLEMENTATION
create one	WITHOUT_CLASSIFICATION	0.999985568137527	WITHOUT_CLASSIFICATION	1.4431862473047534E-5	IMPLEMENTATION
warning can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999760053617528	WITHOUT_CLASSIFICATION	2.3994638247216916E-5	IMPLEMENTATION
there were no queued additions and the role has a cache	WITHOUT_CLASSIFICATION	0.9999982868035048	WITHOUT_CLASSIFICATION	1.7131964952617254E-6	IMPLEMENTATION
and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9982168757470752	WITHOUT_CLASSIFICATION	0.0017831242529248407	IMPLEMENTATION
some filters affecting the collection are enabled on the session so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9304415156230296	WITHOUT_CLASSIFICATION	0.06955848437697043	IMPLEMENTATION
cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999793772435406	WITHOUT_CLASSIFICATION	2.062275645935206E-5	IMPLEMENTATION
loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998550409994473	WITHOUT_CLASSIFICATION	1.4495900055264084E-4	IMPLEMENTATION
collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999878846399815	WITHOUT_CLASSIFICATION	1.2115360018508571E-4	IMPLEMENTATION
simple cache of param metadata based on query string. ideally the original "user-supplied query" string should be used to retreive this metadata (i.e. not the para-list-expanded query string) to avoid unnecessary cache entries. used solely for caching param metadata for native-sql queries see getsqlparametermetadata() for a discussion as to why	WITHOUT_CLASSIFICATION	0.9993643749090894	WITHOUT_CLASSIFICATION	6.356250909105383E-4	IMPLEMENTATION
the cache of the actual plans	WITHOUT_CLASSIFICATION	0.9999797954859255	WITHOUT_CLASSIFICATION	2.020451407450138E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999733485530602	WITHOUT_CLASSIFICATION	2.6651446939803244E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999733485530602	WITHOUT_CLASSIFICATION	2.6651446939803244E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999933027752266	WITHOUT_CLASSIFICATION	6.6972247733747375E-6	IMPLEMENTATION
for native-sql queries the param metadata is determined outside any relation to a query plan because query plan creation and/or retreival for a native-sql query depends on all of the return types having been set which might not be the case up-front when param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9979890883023838	WITHOUT_CLASSIFICATION	0.0020109116976162558	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999712219858474	WITHOUT_CLASSIFICATION	2.8778014152511013E-5	IMPLEMENTATION
recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999261275516594	WITHOUT_CLASSIFICATION	7.387244834060001E-5	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999712219858474	WITHOUT_CLASSIFICATION	2.8778014152511013E-5	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999865246275191	WITHOUT_CLASSIFICATION	1.347537248092397E-5	IMPLEMENTATION
break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999952371817525	WITHOUT_CLASSIFICATION	4.762818247502851E-6	IMPLEMENTATION
named parameter	WITHOUT_CLASSIFICATION	0.9999786083951698	WITHOUT_CLASSIFICATION	2.1391604830119273E-5	IMPLEMENTATION
could be either an ordinal or jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999960969527489	WITHOUT_CLASSIFICATION	3.903047251028237E-6	IMPLEMENTATION
a peek ahead showed this as an jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999907554731001	WITHOUT_CLASSIFICATION	9.244526899869799E-6	IMPLEMENTATION
make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999790095682128	WITHOUT_CLASSIFICATION	2.099043178716407E-5	IMPLEMENTATION
pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999234013755265	WITHOUT_CLASSIFICATION	7.659862447353834E-5	IMPLEMENTATION
perform the actual work	WITHOUT_CLASSIFICATION	0.9998957508682715	WITHOUT_CLASSIFICATION	1.042491317284891E-4	IMPLEMENTATION
if everything went ok commit the transaction and close the obtained connection handle	WITHOUT_CLASSIFICATION	0.9979357910257098	WITHOUT_CLASSIFICATION	0.0020642089742901773	IMPLEMENTATION
at some point the processing went bad so we need to 1) make sure the connection handle gets released 2) try to cleanup the jta context as much as possible	WITHOUT_CLASSIFICATION	0.8577556282336037	WITHOUT_CLASSIFICATION	0.14224437176639615	IMPLEMENTATION
finally handle the exception	WITHOUT_CLASSIFICATION	0.9999635507275936	WITHOUT_CLASSIFICATION	3.6449272406542394E-5	IMPLEMENTATION
a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9993213673791649	WITHOUT_CLASSIFICATION	6.786326208350276E-4	IMPLEMENTATION
saveorupdatecopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999729842917038	WITHOUT_CLASSIFICATION	2.701570829614523E-5	IMPLEMENTATION
collectionpersister should not be null but we don't want to throw an exception if it is null	WITHOUT_CLASSIFICATION	0.9999984256743163	WITHOUT_CLASSIFICATION	1.574325683656403E-6	IMPLEMENTATION
otherwise a null or brand new collection this will also (inefficiently) handle arrays which have no snapshot so we can't do any better processarrayornewcollection(collection type)	WITHOUT_CLASSIFICATION	0.9884921537909512	WITHOUT_CLASSIFICATION	0.0115078462090487	IMPLEMENTATION
a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9994767998310694	WITHOUT_CLASSIFICATION	5.23200168930523E-4	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999965125197563	WITHOUT_CLASSIFICATION	3.487480243645962E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999965125197563	WITHOUT_CLASSIFICATION	3.487480243645962E-6	IMPLEMENTATION
force a substitution!	WITHOUT_CLASSIFICATION	0.999831037894997	WITHOUT_CLASSIFICATION	1.6896210500294762E-4	IMPLEMENTATION
the user requested a "greater" (i.e. more restrictive) form of pessimistic lock	WITHOUT_CLASSIFICATION	0.9999398391462359	WITHOUT_CLASSIFICATION	6.0160853764155225E-5	IMPLEMENTATION
the database now holds a lock + the object is flushed from the cache so release the soft lock	WITHOUT_CLASSIFICATION	0.9999994995741656	WITHOUT_CLASSIFICATION	5.004258345532122E-7	IMPLEMENTATION
now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999995156530267	WITHOUT_CLASSIFICATION	4.843469732755467E-7	IMPLEMENTATION
search for collections by reachability updating their role. we don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999750040659816	WITHOUT_CLASSIFICATION	2.4995934018350686E-5	IMPLEMENTATION
this is a situation where the entity id is assigned by a post-insert generator and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.999997729352705	WITHOUT_CLASSIFICATION	2.2706472949371985E-6	IMPLEMENTATION
note we need to do the wrap here even if its not "dirty" because collections need wrapping but changes to _them_ don't dirty the container. also for versioned data we need to wrap before calling searchfordirtycollections	WITHOUT_CLASSIFICATION	0.9997819610976971	WITHOUT_CLASSIFICATION	2.180389023029718E-4	IMPLEMENTATION
grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999997973583596	WITHOUT_CLASSIFICATION	2.0264164032460713E-7	IMPLEMENTATION
grab its current state	WITHOUT_CLASSIFICATION	0.9999777489532005	WITHOUT_CLASSIFICATION	2.225104679953464E-5	IMPLEMENTATION
schedule the update note that we intentionally do _not_ pass in currentpersistentstate!	WITHOUT_CLASSIFICATION	0.9999932761651069	WITHOUT_CLASSIFICATION	6.723834893072547E-6	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999979000845037	WITHOUT_CLASSIFICATION	2.09991549626832E-6	IMPLEMENTATION
give the interceptor a chance to process property values if the properties were modified by the interceptor we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999931643483739	WITHOUT_CLASSIFICATION	6.835651626152403E-6	IMPLEMENTATION
compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.99996375108752	WITHOUT_CLASSIFICATION	3.6248912480035415E-5	IMPLEMENTATION
if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999997884649773	WITHOUT_CLASSIFICATION	2.1153502279987047E-7	IMPLEMENTATION
increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9992694824557553	WITHOUT_CLASSIFICATION	7.305175442447144E-4	IMPLEMENTATION
check nullability but do not perform command execute we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.999825406533758	WITHOUT_CLASSIFICATION	1.745934662421582E-4	IMPLEMENTATION
give the interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999971650908458	WITHOUT_CLASSIFICATION	2.8349091541562633E-6	IMPLEMENTATION
now we might need to recalculate the dirtyproperties array	WITHOUT_CLASSIFICATION	0.9995936869135282	WITHOUT_CLASSIFICATION	4.0631308647179343E-4	IMPLEMENTATION
use the current version	WITHOUT_CLASSIFICATION	0.9997709986197072	WITHOUT_CLASSIFICATION	2.2900138029295595E-4	IMPLEMENTATION
interceptor returned null so do the dirtycheck ourself if possible	WITHOUT_CLASSIFICATION	0.99999763230256	WITHOUT_CLASSIFICATION	2.3676974398899148E-6	IMPLEMENTATION
object loaded by update()	WITHOUT_CLASSIFICATION	0.9999983284161034	WITHOUT_CLASSIFICATION	1.6715838966087918E-6	IMPLEMENTATION
dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9991560737028202	WITHOUT_CLASSIFICATION	8.4392629717976E-4	IMPLEMENTATION
dirty check against the database snapshot if possible/necessary	WITHOUT_CLASSIFICATION	0.9994359677644319	WITHOUT_CLASSIFICATION	5.640322355680114E-4	IMPLEMENTATION
the interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.99987070506053	WITHOUT_CLASSIFICATION	1.2929493946997134E-4	IMPLEMENTATION
even process null collections	WITHOUT_CLASSIFICATION	0.9999936418688832	WITHOUT_CLASSIFICATION	6.358131116904548E-6	IMPLEMENTATION
get the id from the object	WITHOUT_CLASSIFICATION	0.9999983298919538	WITHOUT_CLASSIFICATION	1.670108046186277E-6	IMPLEMENTATION
always do an insert and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999915683620549	WITHOUT_CLASSIFICATION	8.431637945025108E-6	IMPLEMENTATION
what is the version on the database?	WITHOUT_CLASSIFICATION	0.9979057900537185	WITHOUT_CLASSIFICATION	0.002094209946281605	IMPLEMENTATION
/ hhh-2378	WITHOUT_CLASSIFICATION	0.9999973873380681	WITHOUT_CLASSIFICATION	2.6126619318090982E-6	IMPLEMENTATION
will result in a sql update	WITHOUT_CLASSIFICATION	0.9999999329094196	WITHOUT_CLASSIFICATION	6.709058044737526E-8	IMPLEMENTATION
else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999863127503161	WITHOUT_CLASSIFICATION	1.36872496837944E-5	IMPLEMENTATION
no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999984586764277	WITHOUT_CLASSIFICATION	1.5413235723592243E-6	IMPLEMENTATION
refresh() does not pass an entityname	WITHOUT_CLASSIFICATION	0.9998931290081081	WITHOUT_CLASSIFICATION	1.0687099189186775E-4	IMPLEMENTATION
do not return a proxy! (this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9914535373731973	WITHOUT_CLASSIFICATION	0.008546462626802672	IMPLEMENTATION
return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.999973994800896	WITHOUT_CLASSIFICATION	2.6005199103990862E-5	IMPLEMENTATION
return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999968629093969	WITHOUT_CLASSIFICATION	3.1370906031196844E-6	IMPLEMENTATION
return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999860031878526	WITHOUT_CLASSIFICATION	1.3996812147428682E-5	IMPLEMENTATION
this object was already loaded	WITHOUT_CLASSIFICATION	0.9999996145571038	WITHOUT_CLASSIFICATION	3.854428960814393E-7	IMPLEMENTATION
entity was found in second-level cache	WITHOUT_CLASSIFICATION	0.9999992671443556	WITHOUT_CLASSIFICATION	7.32855644514585E-7	IMPLEMENTATION
make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9985248077567165	WITHOUT_CLASSIFICATION	0.0014751922432834986	IMPLEMENTATION
intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999871413543582	WITHOUT_CLASSIFICATION	1.2858645641786089E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pre-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999372081657972	WITHOUT_CLASSIFICATION	6.279183420280907E-5	IMPLEMENTATION
some statistics	WITHOUT_CLASSIFICATION	0.9997989113537842	WITHOUT_CLASSIFICATION	2.0108864621590534E-4	IMPLEMENTATION
safe from concurrent modification because of how entrylist() is implemented on identitymap	WITHOUT_CLASSIFICATION	0.9454134677819938	WITHOUT_CLASSIFICATION	0.05458653221800626	IMPLEMENTATION
initialize dirty flags for arrays + collections with composite elements and reset reached doupdate etc.	WITHOUT_CLASSIFICATION	0.9983901732227177	WITHOUT_CLASSIFICATION	0.001609826777282319	IMPLEMENTATION
among other things updatereachables() will recursively load all collections that are moving roles. this might cause entities to be loaded.	WITHOUT_CLASSIFICATION	0.999937968006284	WITHOUT_CLASSIFICATION	6.203199371595436E-5	IMPLEMENTATION
so this needs to be safe from concurrent modification problems. it is safe because of how identitymap implements entryset()	WITHOUT_CLASSIFICATION	0.9999830836632445	WITHOUT_CLASSIFICATION	1.691633675543936E-5	IMPLEMENTATION
update the status of the object and if necessary schedule an update	WITHOUT_CLASSIFICATION	0.999999908128058	WITHOUT_CLASSIFICATION	9.187194199723146E-8	IMPLEMENTATION
schedule updates to collections	WITHOUT_CLASSIFICATION	0.9999049111405338	WITHOUT_CLASSIFICATION	9.508885946614603E-5	IMPLEMENTATION
we need to lock the collection caches before executing entity inserts/updates in order to account for bidi associations	WITHOUT_CLASSIFICATION	0.9999683807141226	WITHOUT_CLASSIFICATION	3.1619285877378224E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ post-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999372081657972	WITHOUT_CLASSIFICATION	6.279183420280907E-5	IMPLEMENTATION
the database has changed now so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999882848175976	WITHOUT_CLASSIFICATION	1.1715182402262194E-5	IMPLEMENTATION
if the collection is dereferenced remove from the session cache iter.remove() does not work since the entryset is not backed by the set	WITHOUT_CLASSIFICATION	0.9999964454054692	WITHOUT_CLASSIFICATION	3.554594530873456E-6	IMPLEMENTATION
otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9986841360487625	WITHOUT_CLASSIFICATION	0.0013158639512375087	IMPLEMENTATION
get a snapshot	WITHOUT_CLASSIFICATION	0.9999905265024647	WITHOUT_CLASSIFICATION	9.473497535360725E-6	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999463233031545	WITHOUT_CLASSIFICATION	5.367669684554269E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999463233031545	WITHOUT_CLASSIFICATION	5.367669684554269E-5	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999990031054945	WITHOUT_CLASSIFICATION	9.968945054793258E-7	IMPLEMENTATION
early exit!!!	WITHOUT_CLASSIFICATION	0.999973649489005	WITHOUT_CLASSIFICATION	2.6350510994957435E-5	IMPLEMENTATION
ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999988932013187	WITHOUT_CLASSIFICATION	1.1067986812116008E-6	IMPLEMENTATION
before any callbacks etc so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999997879716667	WITHOUT_CLASSIFICATION	2.120283333230699E-7	IMPLEMENTATION
ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9995035991451368	WITHOUT_CLASSIFICATION	4.96400854863177E-4	IMPLEMENTATION
typefactory.deepcopy( currentstate proptypes persister.getpropertyupdateability() deletedstate session )	WITHOUT_CLASSIFICATION	0.9997327681065773	WITHOUT_CLASSIFICATION	2.672318934227096E-4	IMPLEMENTATION
cascade-delete to collections before the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9998348078200054	WITHOUT_CLASSIFICATION	1.651921799946476E-4	IMPLEMENTATION
cascade-delete to many-to-one after the parent was deleted	WITHOUT_CLASSIFICATION	0.9999719512642479	WITHOUT_CLASSIFICATION	2.8048735752086256E-5	IMPLEMENTATION
if it is an initialized proxy let cascade handle it later on	WITHOUT_CLASSIFICATION	0.999977223242388	WITHOUT_CLASSIFICATION	2.2776757611997304E-5	IMPLEMENTATION
assign the requested id to the proxy before reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999145581899409	WITHOUT_CLASSIFICATION	8.544181005911501E-5	IMPLEMENTATION
an uninitialized proxy noop don't even need to return an id since it is never a save()	WITHOUT_CLASSIFICATION	0.9995062508734286	WITHOUT_CLASSIFICATION	4.937491265713586E-4	IMPLEMENTATION
initialize properties of the event	WITHOUT_CLASSIFICATION	0.9999777162673883	WITHOUT_CLASSIFICATION	2.228373261169969E-5	IMPLEMENTATION
return the id in the event object	WITHOUT_CLASSIFICATION	0.9999970358631427	WITHOUT_CLASSIFICATION	2.9641368571925826E-6	IMPLEMENTATION
transient or deleted	WITHOUT_CLASSIFICATION	0.9997319420919546	WITHOUT_CLASSIFICATION	2.680579080453682E-4	IMPLEMENTATION
use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9998345919916608	WITHOUT_CLASSIFICATION	1.6540800833926325E-4	IMPLEMENTATION
assume this is a newly instantiated transient object which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999668537072439	WITHOUT_CLASSIFICATION	3.314629275603638E-5	IMPLEMENTATION
this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999597329858748	WITHOUT_CLASSIFICATION	4.026701412516823E-5	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9970161792088034	WITHOUT_CLASSIFICATION	0.0029838207911965964	IMPLEMENTATION
cachedstate	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
assume true since we don't really know and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999491478334631	WITHOUT_CLASSIFICATION	5.0852166537023504E-5	IMPLEMENTATION
a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999727343567619	WITHOUT_CLASSIFICATION	2.7265643238113534E-5	IMPLEMENTATION
if the collection belonged to a different entity clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999909298285995	WITHOUT_CLASSIFICATION	9.070171400446804E-6	IMPLEMENTATION
log.debug( "calling onload()" )	WITHOUT_CLASSIFICATION	0.999901522788762	WITHOUT_CLASSIFICATION	9.847721123802691E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999875761064664	WITHOUT_CLASSIFICATION	1.2423893533664315E-5	IMPLEMENTATION
note performexecutions() clears all collectionxxxxtion collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999394483014251	WITHOUT_CLASSIFICATION	6.0551698574880576E-5	IMPLEMENTATION
if no array holder we found an unwrappered array (this can't occur because we now always call wrap() before getting to here) return (ah==null) ? true searchfordirtycollections(ah type)	WITHOUT_CLASSIFICATION	0.9999999208255955	WITHOUT_CLASSIFICATION	7.917440453827836E-8	IMPLEMENTATION
if not wrappered yet its dirty (this can't occur because we now always call wrap() before getting to here) return ( ! (obj instanceof persistentcollection) ) ? true searchfordirtycollections( (persistentcollection) obj type )	WITHOUT_CLASSIFICATION	0.998108737512318	WITHOUT_CLASSIFICATION	0.0018912624876820114	IMPLEMENTATION
we need to check even if it was not initialized because of delayed adds!	WITHOUT_CLASSIFICATION	0.9996398736208009	WITHOUT_CLASSIFICATION	3.6012637919904977E-4	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999898702353346	WITHOUT_CLASSIFICATION	1.012976466548162E-5	IMPLEMENTATION
find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9998960503476344	WITHOUT_CLASSIFICATION	1.0394965236550407E-4	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999875761064664	WITHOUT_CLASSIFICATION	1.2423893533664315E-5	IMPLEMENTATION
check the persistence context for an entry relating to this entity to be merged	WITHOUT_CLASSIFICATION	0.9999213930963862	WITHOUT_CLASSIFICATION	7.860690361389794E-5	IMPLEMENTATION
we have specialized case of a detached entity from the perspective of the merge operation. specifically we have an incoming entity instance which has a corresponding entry in the current persistence context but registered under a different entity instance	WITHOUT_CLASSIFICATION	0.9999999765617469	WITHOUT_CLASSIFICATION	2.3438253160230648E-8	IMPLEMENTATION
deleted	WITHOUT_CLASSIFICATION	0.9998758808353586	WITHOUT_CLASSIFICATION	1.2411916464131686E-4	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999680872736051	WITHOUT_CLASSIFICATION	3.191272639483828E-5	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy cascadeonmerge(event persister entity copycache cascades.cascade_before_merge)	WITHOUT_CLASSIFICATION	0.9999997631345463	WITHOUT_CLASSIFICATION	2.368654537235354E-7	IMPLEMENTATION
this bit is only really absolutely necessary for handling requestedid but is also good if we merge multiple object graphs since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999997413152739	WITHOUT_CLASSIFICATION	2.5868472606221343E-7	IMPLEMENTATION
continue we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9998290291543706	WITHOUT_CLASSIFICATION	1.7097084562954886E-4	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999998453430187	WITHOUT_CLASSIFICATION	1.546569814000976E-7	IMPLEMENTATION
check that entity id = requestedid	WITHOUT_CLASSIFICATION	0.9915194803190129	WITHOUT_CLASSIFICATION	0.00848051968098708	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999680872736051	WITHOUT_CLASSIFICATION	3.191272639483828E-5	IMPLEMENTATION
we got here because we assumed that an instance with an assigned id was detached when it was really persistent	WITHOUT_CLASSIFICATION	0.9999979453023945	WITHOUT_CLASSIFICATION	2.054697605496551E-6	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999998453430187	WITHOUT_CLASSIFICATION	1.546569814000976E-7	IMPLEMENTATION
copyvalues works by reflection so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999633416023149	WITHOUT_CLASSIFICATION	3.665839768511294E-5	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999930123126908	WITHOUT_CLASSIFICATION	6.987687309224519E-6	IMPLEMENTATION
source.getbatcher().executebatch() found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9982154229018235	WITHOUT_CLASSIFICATION	0.0017845770981765234	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999979000845037	WITHOUT_CLASSIFICATION	2.09991549626832E-6	IMPLEMENTATION
now done in entityidentityinsertaction persister.setidentifier( entity id source.getentitymode() )	WITHOUT_CLASSIFICATION	0.9998213198752183	WITHOUT_CLASSIFICATION	1.786801247816481E-4	IMPLEMENTATION
source.getpersistencecontext().removenonexist( new entitykey( id persister source.getentitymode() ) )	WITHOUT_CLASSIFICATION	0.9993928698238851	WITHOUT_CLASSIFICATION	6.071301761150132E-4	IMPLEMENTATION
keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999992639107617	WITHOUT_CLASSIFICATION	7.360892382866639E-7	IMPLEMENTATION
cascade-save to many-to-one before the parent is saved	WITHOUT_CLASSIFICATION	0.9999880998690923	WITHOUT_CLASSIFICATION	1.1900130907621512E-5	IMPLEMENTATION
pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999998939452808	WITHOUT_CLASSIFICATION	1.060547192578821E-7	IMPLEMENTATION
the object is persistent	WITHOUT_CLASSIFICATION	0.9999977070166538	WITHOUT_CLASSIFICATION	2.292983346209742E-6	IMPLEMENTATION
the entity is associated with the session so check its status	WITHOUT_CLASSIFICATION	0.9998536151875834	WITHOUT_CLASSIFICATION	1.463848124165626E-4	IMPLEMENTATION
do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999925556845788	WITHOUT_CLASSIFICATION	7.444315421259177E-6	IMPLEMENTATION
ie. e.status==deleted	WITHOUT_CLASSIFICATION	0.999960806190921	WITHOUT_CLASSIFICATION	3.91938090791539E-5	IMPLEMENTATION
the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999973542775514	WITHOUT_CLASSIFICATION	2.645722448604904E-6	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999898702353346	WITHOUT_CLASSIFICATION	1.012976466548162E-5	IMPLEMENTATION
private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999939527468001	WITHOUT_CLASSIFICATION	6.047253199822797E-6	IMPLEMENTATION
first try to find a matching constructor accepting a violatedconstraintnameextracter param	WITHOUT_CLASSIFICATION	0.9996936548518962	WITHOUT_CLASSIFICATION	3.0634514810378165E-4	IMPLEMENTATION
eat it and try next	WITHOUT_CLASSIFICATION	0.9999048010051373	WITHOUT_CLASSIFICATION	9.519899486261436E-5	IMPLEMENTATION
otherwise try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9977607395220487	WITHOUT_CLASSIFICATION	0.002239260477951256	IMPLEMENTATION
oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.999981026946895	WITHOUT_CLASSIFICATION	1.8973053105081682E-5	IMPLEMENTATION
collectionpropertymapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9998880541705344	WITHOUT_CLASSIFICATION	1.1194582946556238E-4	IMPLEMENTATION
remove initial " "	WITHOUT_CLASSIFICATION	0.9999949096931742	WITHOUT_CLASSIFICATION	5.090306825824208E-6	IMPLEMENTATION
remove initial " and "	WITHOUT_CLASSIFICATION	0.9999953898442431	WITHOUT_CLASSIFICATION	4.6101557569200535E-6	IMPLEMENTATION
beforeclasstokens.add("new") definitely don't have this!!	WITHOUT_CLASSIFICATION	0.9998253514132568	WITHOUT_CLASSIFICATION	1.7464858674322154E-4	IMPLEMENTATION
notafterclasstokens.add("")	WITHOUT_CLASSIFICATION	0.999960806190921	WITHOUT_CLASSIFICATION	3.91938090791539E-5	IMPLEMENTATION
just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9998794966803879	WITHOUT_CLASSIFICATION	1.2050331961215564E-4	IMPLEMENTATION
update last non-whitespace token if necessary	WITHOUT_CLASSIFICATION	0.9999976524787622	WITHOUT_CLASSIFICATION	2.347521237830618E-6	IMPLEMENTATION
select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999957991663941	WITHOUT_CLASSIFICATION	4.20083360594062E-6	IMPLEMENTATION
scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999657360983297	WITHOUT_CLASSIFICATION	3.426390167035391E-5	IMPLEMENTATION
note this!!	WITHOUT_CLASSIFICATION	0.9999566198315972	WITHOUT_CLASSIFICATION	4.338016840285145E-5	IMPLEMENTATION
error message constants.	WITHOUT_CLASSIFICATION	0.9997252112769381	WITHOUT_CLASSIFICATION	2.7478872306189924E-4	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995936791031547	WITHOUT_CLASSIFICATION	4.063208968453491E-4	IMPLEMENTATION
semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9962351683230106	WITHOUT_CLASSIFICATION	0.00376483167698932	IMPLEMENTATION
handle collection-fiter compilation. important note this is modifying the input (hql) tree not the output tree!	WITHOUT_CLASSIFICATION	0.9950005854653774	WITHOUT_CLASSIFICATION	0.004999414534622582	IMPLEMENTATION
show the modified ast.	WITHOUT_CLASSIFICATION	0.99981786904917	WITHOUT_CLASSIFICATION	1.8213095083006143E-4	IMPLEMENTATION
create a parameter specification for the collection filter	WITHOUT_CLASSIFICATION	0.9997905107010715	WITHOUT_CLASSIFICATION	2.0948929892839854E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999390742794663	WITHOUT_CLASSIFICATION	6.092572053364992E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999390742794663	WITHOUT_CLASSIFICATION	6.092572053364992E-5	IMPLEMENTATION
get the names of the columns used to link between the collection owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999976154656197	WITHOUT_CLASSIFICATION	2.384534380277815E-6	IMPLEMENTATION
the path ast should be a dotnode and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999224505972985	WITHOUT_CLASSIFICATION	7.75494027015505E-5	IMPLEMENTATION
tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999860797249893	WITHOUT_CLASSIFICATION	1.3920275010625786E-5	IMPLEMENTATION
re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999318201656251	WITHOUT_CLASSIFICATION	6.817983437487155E-5	IMPLEMENTATION
don't forget to resolve the argument! resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9998250206919489	WITHOUT_CLASSIFICATION	1.749793080510954E-4	IMPLEMENTATION
resolve everything up to this dot but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999799607390578	WITHOUT_CLASSIFICATION	2.0039260942124553E-5	IMPLEMENTATION
should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999965293614994	WITHOUT_CLASSIFICATION	3.4706385005667503E-6	IMPLEMENTATION
was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999998482515263	WITHOUT_CLASSIFICATION	1.517484736273368E-7	IMPLEMENTATION
attach any mapping-defined "order by" fragments	WITHOUT_CLASSIFICATION	0.9999754687999453	WITHOUT_CLASSIFICATION	2.453120005477529E-5	IMPLEMENTATION
use the explicitly declared select expression determine the return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999941783563293	WITHOUT_CLASSIFICATION	5.8216436706037885E-6	IMPLEMENTATION
after that process the joins. invoke a delegate to do the work as this is farily complex.	WITHOUT_CLASSIFICATION	0.9998393651287371	WITHOUT_CLASSIFICATION	1.6063487126289958E-4	IMPLEMENTATION
make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999879028346772	WITHOUT_CLASSIFICATION	1.209716532281305E-5	IMPLEMENTATION
we need to generate ids as part of this bulk insert. note that this is only supported for sequence-style generators and post-insert-style generators basically only in-db generators	WITHOUT_CLASSIFICATION	0.9999922631602364	WITHOUT_CLASSIFICATION	7.736839763600656E-6	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999390742794663	WITHOUT_CLASSIFICATION	6.092572053364992E-5	IMPLEMENTATION
we need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9998098538232072	WITHOUT_CLASSIFICATION	1.901461767929383E-4	IMPLEMENTATION
we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.999958136407874	WITHOUT_CLASSIFICATION	4.1863592125949335E-5	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999380357728038	WITHOUT_CLASSIFICATION	6.196422719615535E-5	IMPLEMENTATION
generate implicit joins only if necessary.	WITHOUT_CLASSIFICATION	0.9999817049805387	WITHOUT_CLASSIFICATION	1.829501946123041E-5	IMPLEMENTATION
notify the from element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999993571470867	WITHOUT_CLASSIFICATION	6.42852913276991E-7	IMPLEMENTATION
turn off includesubclasses on all fromelements.	WITHOUT_CLASSIFICATION	0.9998287909943858	WITHOUT_CLASSIFICATION	1.7120900561426686E-4	IMPLEMENTATION
create the node initially with the param name so that it shows appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999938411062198	WITHOUT_CLASSIFICATION	6.158893780126241E-6	IMPLEMENTATION
use the delegate resolve identifiers as from element aliases.	WITHOUT_CLASSIFICATION	0.999996006596092	WITHOUT_CLASSIFICATION	3.99340390791702E-6	IMPLEMENTATION
select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999958193371531	WITHOUT_CLASSIFICATION	4.180662846853326E-6	IMPLEMENTATION
no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999784213390294	WITHOUT_CLASSIFICATION	2.157866097067059E-5	IMPLEMENTATION
make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9996135341757832	WITHOUT_CLASSIFICATION	3.86465824216684E-4	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995936791031547	WITHOUT_CLASSIFICATION	4.063208968453491E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999390742794663	WITHOUT_CLASSIFICATION	6.092572053364992E-5	IMPLEMENTATION
--commented out by inspection (12/11/04 1056 am) int getwarningcount()	WITHOUT_CLASSIFICATION	0.9999933393038827	WITHOUT_CLASSIFICATION	6.660696117380474E-6	IMPLEMENTATION
alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.99937686502742	WITHOUT_CLASSIFICATION	6.231349725799648E-4	IMPLEMENTATION
switch	WITHOUT_CLASSIFICATION	0.9999874721203479	WITHOUT_CLASSIFICATION	1.2527879652017714E-5	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9993173904057243	WITHOUT_CLASSIFICATION	6.826095942757043E-4	IMPLEMENTATION
just do the regular thing if you can't find the ctor your ast must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.999999128738059	WITHOUT_CLASSIFICATION	8.712619409907115E-7	IMPLEMENTATION
initialize sql nodes here.	WITHOUT_CLASSIFICATION	0.9999450101860866	WITHOUT_CLASSIFICATION	5.498981391348482E-5	IMPLEMENTATION
semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999539354845654	WITHOUT_CLASSIFICATION	4.6064515434597505E-4	IMPLEMENTATION
if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999999553257992	WITHOUT_CLASSIFICATION	4.467420080582686E-8	IMPLEMENTATION
this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.999998568538616	WITHOUT_CLASSIFICATION	1.4314613840459038E-6	IMPLEMENTATION
--- inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999787356968011	WITHOUT_CLASSIFICATION	2.1264303199021596E-5	IMPLEMENTATION
check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9997931051586119	WITHOUT_CLASSIFICATION	2.068948413881264E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999973873380681	WITHOUT_CLASSIFICATION	2.6126619318090982E-6	IMPLEMENTATION
these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999787695044704	WITHOUT_CLASSIFICATION	2.1230495529650565E-5	IMPLEMENTATION
again both should be fromelements	WITHOUT_CLASSIFICATION	0.9998944012537513	WITHOUT_CLASSIFICATION	1.0559874624881077E-4	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999865246275191	WITHOUT_CLASSIFICATION	1.347537248092397E-5	IMPLEMENTATION
right represents a joins originating from left or both right and left reprersent joins originating from the same fromelement	WITHOUT_CLASSIFICATION	0.9999925536871034	WITHOUT_CLASSIFICATION	7.446312896566475E-6	IMPLEMENTATION
check a set of parent/child nodes in the from-clause tree to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999989463297205	WITHOUT_CLASSIFICATION	1.0536702794546117E-6	IMPLEMENTATION
right represents a joins originating from left	WITHOUT_CLASSIFICATION	0.9999948773810495	WITHOUT_CLASSIFICATION	5.122618950560672E-6	IMPLEMENTATION
all clear	WITHOUT_CLASSIFICATION	0.9999890769626397	WITHOUT_CLASSIFICATION	1.0923037360279023E-5	IMPLEMENTATION
ignore the token class name parameter and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999932392184311	WITHOUT_CLASSIFICATION	6.760781568905939E-6	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.999955925306986	WITHOUT_CLASSIFICATION	4.407469301403745E-5	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.999955925306986	WITHOUT_CLASSIFICATION	4.407469301403745E-5	IMPLEMENTATION
remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9997434722925611	WITHOUT_CLASSIFICATION	2.565277074388503E-4	IMPLEMENTATION
don't care about other param types here just those explicitly user-defined	WITHOUT_CLASSIFICATION	0.9997483142912577	WITHOUT_CLASSIFICATION	2.51685708742318E-4	IMPLEMENTATION
if the query is already compiled skip the compilation.	WITHOUT_CLASSIFICATION	0.9999968366860533	WITHOUT_CLASSIFICATION	3.163313946674471E-6	IMPLEMENTATION
remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9998573902360457	WITHOUT_CLASSIFICATION	1.4260976395422386E-4	IMPLEMENTATION
phase 1 parse the hql into an ast.	WITHOUT_CLASSIFICATION	0.9999978817638989	WITHOUT_CLASSIFICATION	2.118236101149767E-6	IMPLEMENTATION
phase 2 analyze the hql ast and produce an sql ast.	WITHOUT_CLASSIFICATION	0.9999997699781841	WITHOUT_CLASSIFICATION	2.3002181605629118E-7	IMPLEMENTATION
phase 3 generate the sql.	WITHOUT_CLASSIFICATION	0.9999793283521315	WITHOUT_CLASSIFICATION	2.0671647868519753E-5	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9991253747432804	WITHOUT_CLASSIFICATION	8.74625256719504E-4	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9991253747432804	WITHOUT_CLASSIFICATION	8.74625256719504E-4	IMPLEMENTATION
only needed during compilation phase	WITHOUT_CLASSIFICATION	0.9392899428095297	WITHOUT_CLASSIFICATION	0.06071005719047023	IMPLEMENTATION
transform the tree.	WITHOUT_CLASSIFICATION	0.9999655687760901	WITHOUT_CLASSIFICATION	3.443122390977675E-5	IMPLEMENTATION
parse the query string into an hql ast.	WITHOUT_CLASSIFICATION	0.9999952004797144	WITHOUT_CLASSIFICATION	4.799520285669035E-6	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9999662742822836	WITHOUT_CLASSIFICATION	3.3725717716329226E-5	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9999662742822836	WITHOUT_CLASSIFICATION	3.3725717716329226E-5	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9999662742822836	WITHOUT_CLASSIFICATION	3.3725717716329226E-5	IMPLEMENTATION
note ( max - 1 ) because first is zero-based while max is not	WITHOUT_CLASSIFICATION	0.9998090161089116	WITHOUT_CLASSIFICATION	1.9098389108850435E-4	IMPLEMENTATION
-- package local methods for the queryloader delegate --	WITHOUT_CLASSIFICATION	0.9999936773839428	WITHOUT_CLASSIFICATION	6.322616057243748E-6	IMPLEMENTATION
if there are no collection fetches then no further checks are needed	WITHOUT_CLASSIFICATION	0.9919232981616295	WITHOUT_CLASSIFICATION	0.008076701838370438	IMPLEMENTATION
a shallow query is ok (although technically there should be no fetching here)	WITHOUT_CLASSIFICATION	0.9999870705669665	WITHOUT_CLASSIFICATION	1.292943303354814E-5	IMPLEMENTATION
should be the first but just to be safe	WITHOUT_CLASSIFICATION	0.9999976545208026	WITHOUT_CLASSIFICATION	2.3454791973177505E-6	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999390742794663	WITHOUT_CLASSIFICATION	6.092572053364992E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999390742794663	WITHOUT_CLASSIFICATION	6.092572053364992E-5	IMPLEMENTATION
impl note allows multiple collection fetches as long as the entire fecthed graph still "points back" to a single root entity for return	WITHOUT_CLASSIFICATION	0.9997343676214907	WITHOUT_CLASSIFICATION	2.656323785093846E-4	IMPLEMENTATION
otherwise we have a non-scalar select with defined collection fetch(es). make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.999784359812924	WITHOUT_CLASSIFICATION	2.1564018707588716E-4	IMPLEMENTATION
this is not strictly true. we actually just need to make sure that it is ordered by root-entity pk and that that order-by comes before any non-root-entity ordering	WITHOUT_CLASSIFICATION	0.9697812325394998	WITHOUT_CLASSIFICATION	0.030218767460500267	IMPLEMENTATION
paramtranslations = new parametertranslationsimpl( collectedparameterspecifications )	WITHOUT_CLASSIFICATION	0.9998919506958278	WITHOUT_CLASSIFICATION	1.0804930417212425E-4	IMPLEMENTATION
we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999952485234384	WITHOUT_CLASSIFICATION	4.751476561599316E-6	IMPLEMENTATION
igndore it	WITHOUT_CLASSIFICATION	0.9999866944964727	WITHOUT_CLASSIFICATION	1.330550352729574E-5	IMPLEMENTATION
we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999979099437908	WITHOUT_CLASSIFICATION	2.0900562092249995E-6	IMPLEMENTATION
[jsd] the fix for hhh-558	WITHOUT_CLASSIFICATION	0.9994059526026516	WITHOUT_CLASSIFICATION	5.940473973483717E-4	IMPLEMENTATION
if the token can tell us if it could be an identifier	WITHOUT_CLASSIFICATION	0.9999892651713478	WITHOUT_CLASSIFICATION	1.0734828652231613E-5	IMPLEMENTATION
and the expected token type was an identifier then	WITHOUT_CLASSIFICATION	0.9999998529506829	WITHOUT_CLASSIFICATION	1.470493170039627E-7	IMPLEMENTATION
use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999919111062118	WITHOUT_CLASSIFICATION	8.088893788254191E-6	IMPLEMENTATION
add the token to the ast.	WITHOUT_CLASSIFICATION	0.9999565951748972	WITHOUT_CLASSIFICATION	4.3404825102899206E-5	IMPLEMENTATION
(not (eq a b) ) => (ne a b)	WITHOUT_CLASSIFICATION	0.999988814948291	WITHOUT_CLASSIFICATION	1.1185051709049652E-5	IMPLEMENTATION
(not (ne a b) ) => (eq a b)	WITHOUT_CLASSIFICATION	0.999988814948291	WITHOUT_CLASSIFICATION	1.1185051709049652E-5	IMPLEMENTATION
(not (lt a b) ) => (ge a b)	WITHOUT_CLASSIFICATION	0.999988814948291	WITHOUT_CLASSIFICATION	1.1185051709049652E-5	IMPLEMENTATION
(not (ge a b) ) => (lt a b)	WITHOUT_CLASSIFICATION	0.999988814948291	WITHOUT_CLASSIFICATION	1.1185051709049652E-5	IMPLEMENTATION
(not (le a b) ) => (gt a b)	WITHOUT_CLASSIFICATION	0.999988814948291	WITHOUT_CLASSIFICATION	1.1185051709049652E-5	IMPLEMENTATION
(not (like a b) ) => (not_like a b)	WITHOUT_CLASSIFICATION	0.9999836140705571	WITHOUT_CLASSIFICATION	1.6385929442829626E-5	IMPLEMENTATION
(not (not_like a b) ) => (like a b)	WITHOUT_CLASSIFICATION	0.9999836140705571	WITHOUT_CLASSIFICATION	1.6385929442829626E-5	IMPLEMENTATION
(not (is_not_null a b) ) => (is_null a b)	WITHOUT_CLASSIFICATION	0.9999817165978317	WITHOUT_CLASSIFICATION	1.82834021682234E-5	IMPLEMENTATION
(not (between a b) ) => (not_between a b)	WITHOUT_CLASSIFICATION	0.9999817165978317	WITHOUT_CLASSIFICATION	1.82834021682234E-5	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9990430306524603	WITHOUT_CLASSIFICATION	9.569693475398263E-4	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.999955925306986	WITHOUT_CLASSIFICATION	4.407469301403745E-5	IMPLEMENTATION
if if otherwise handle the error normally.	WITHOUT_CLASSIFICATION	0.9985381701739799	WITHOUT_CLASSIFICATION	0.0014618298260200546	IMPLEMENTATION
(not (not_between a b) ) => (between a b)	WITHOUT_CLASSIFICATION	0.9999817165978317	WITHOUT_CLASSIFICATION	1.82834021682234E-5	IMPLEMENTATION
this can never happen because this rule will always eliminate the child not.case notreturn x.getfirstchild() (not (not x) ) => (x)	WITHOUT_CLASSIFICATION	0.999621460856132	WITHOUT_CLASSIFICATION	3.7853914386798675E-4	IMPLEMENTATION
just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999872424077859	WITHOUT_CLASSIFICATION	1.2757592214131433E-5	IMPLEMENTATION
(eq null b) => (is_null b)	WITHOUT_CLASSIFICATION	0.9999967329647966	WITHOUT_CLASSIFICATION	3.267035203425462E-6	IMPLEMENTATION
(eq a null) => (is_null a)	WITHOUT_CLASSIFICATION	0.9999947115591887	WITHOUT_CLASSIFICATION	5.288440811246528E-6	IMPLEMENTATION
note because we're using astutil.createparent() the tree must be created from the bottom up. is empty x => (exists (query (select_from (from x) ) ) )	WITHOUT_CLASSIFICATION	0.9999998761844208	WITHOUT_CLASSIFICATION	1.2381557922283717E-7	IMPLEMENTATION
add not if it's negated.	WITHOUT_CLASSIFICATION	0.9985240499655051	WITHOUT_CLASSIFICATION	0.0014759500344948796	IMPLEMENTATION
create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9993583940715852	WITHOUT_CLASSIFICATION	6.416059284148253E-4	IMPLEMENTATION
case 1 multi token keywords group by and order by the next token ( lt(2) ) should be 'by' otherwise this is just an ident.	WITHOUT_CLASSIFICATION	0.9999944112075675	WITHOUT_CLASSIFICATION	5.588792432545842E-6	IMPLEMENTATION
case 2 the current token is after from and before '.'.	WITHOUT_CLASSIFICATION	0.9999986860052885	WITHOUT_CLASSIFICATION	1.3139947114137716E-6	IMPLEMENTATION
this handles hhh-354 where there is a strange property name in a where clause. if the lookahead contains a dot then something that isn't an ident	WITHOUT_CLASSIFICATION	0.9999999532488465	WITHOUT_CLASSIFICATION	4.6751153593484314E-8	IMPLEMENTATION
see if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999999152231311	WITHOUT_CLASSIFICATION	8.477686887789814E-8	IMPLEMENTATION
set it!	WITHOUT_CLASSIFICATION	0.9999858496258155	WITHOUT_CLASSIFICATION	1.4150374184401315E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999772037334894	WITHOUT_CLASSIFICATION	2.2796266510569544E-5	IMPLEMENTATION
strip the " where "	WITHOUT_CLASSIFICATION	0.9998716857906474	WITHOUT_CLASSIFICATION	1.283142093525584E-4	IMPLEMENTATION
don't really know all the codes required to adequately decipher returned jdbc exceptions here. simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9590820669399331	WITHOUT_CLASSIFICATION	0.040917933060066955	IMPLEMENTATION
at the very least cleanup the data )	WITHOUT_CLASSIFICATION	0.9999972019305943	WITHOUT_CLASSIFICATION	2.7980694057892363E-6	IMPLEMENTATION
first save off the pertinent ids as the return value	WITHOUT_CLASSIFICATION	0.999996046614773	WITHOUT_CLASSIFICATION	3.953385226967716E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999957595440447	WITHOUT_CLASSIFICATION	4.240455955241174E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999957595440447	WITHOUT_CLASSIFICATION	4.240455955241174E-6	IMPLEMENTATION
start performing the updates	WITHOUT_CLASSIFICATION	0.99999192644985	WITHOUT_CLASSIFICATION	8.073550149984044E-6	IMPLEMENTATION
first save off the pertinent ids saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999991143626036	WITHOUT_CLASSIFICATION	8.856373964626022E-7	IMPLEMENTATION
start performing the deletes	WITHOUT_CLASSIFICATION	0.9999905328064667	WITHOUT_CLASSIFICATION	9.467193533425177E-6	IMPLEMENTATION
otherwise everything ok.	WITHOUT_CLASSIFICATION	0.9992612653847099	WITHOUT_CLASSIFICATION	7.387346152899876E-4	IMPLEMENTATION
visit width-first then depth	WITHOUT_CLASSIFICATION	0.9999776749924856	WITHOUT_CLASSIFICATION	2.2325007514379568E-5	IMPLEMENTATION
if the types report logical equivalence return true	WITHOUT_CLASSIFICATION	0.9999837492600151	WITHOUT_CLASSIFICATION	1.625073998497935E-5	IMPLEMENTATION
otherwise perform a "deep equivalence" check	WITHOUT_CLASSIFICATION	0.9958517269120891	WITHOUT_CLASSIFICATION	0.004148273087910956	IMPLEMENTATION
if there is no where node make one.	WITHOUT_CLASSIFICATION	0.9999521023554329	WITHOUT_CLASSIFICATION	4.78976445671889E-5	IMPLEMENTATION
inject the where after the parent	WITHOUT_CLASSIFICATION	0.9998548212274734	WITHOUT_CLASSIFICATION	1.4517877252658837E-4	IMPLEMENTATION
never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999924885128164	WITHOUT_CLASSIFICATION	7.511487183631138E-6	IMPLEMENTATION
moved here from selectclause [jsd]	WITHOUT_CLASSIFICATION	0.9999640002341424	WITHOUT_CLASSIFICATION	3.599976585754147E-5	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999973873380681	WITHOUT_CLASSIFICATION	2.6126619318090982E-6	IMPLEMENTATION
use the table fromelement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999844792095479	WITHOUT_CLASSIFICATION	1.5520790452141676E-5	IMPLEMENTATION
set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999961037645759	WITHOUT_CLASSIFICATION	3.896235424140122E-6	IMPLEMENTATION
if the uresolved property path isn't set yet just use the property name.	WITHOUT_CLASSIFICATION	0.9999877074603681	WITHOUT_CLASSIFICATION	1.2292539631819768E-5	IMPLEMENTATION
the 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999467092807366	WITHOUT_CLASSIFICATION	5.3290719263461135E-5	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999998104322787	WITHOUT_CLASSIFICATION	1.895677212665876E-7	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999998104322787	WITHOUT_CLASSIFICATION	1.895677212665876E-7	IMPLEMENTATION
if this dot has already been resolved stop now.	WITHOUT_CLASSIFICATION	0.9999894407789859	WITHOUT_CLASSIFICATION	1.055922101410435E-5	IMPLEMENTATION
if there is no data type for this node and we're at the end of the path (top most dot node) then this might be a java constant.	WITHOUT_CLASSIFICATION	0.9999999951872287	WITHOUT_CLASSIFICATION	4.812771317456483E-9	IMPLEMENTATION
the property is a collection	WITHOUT_CLASSIFICATION	0.9999803280032146	WITHOUT_CLASSIFICATION	1.9671996785479805E-5	IMPLEMENTATION
the property is a component	WITHOUT_CLASSIFICATION	0.999997921924219	WITHOUT_CLASSIFICATION	2.0780757809856324E-6	IMPLEMENTATION
the property is another class..	WITHOUT_CLASSIFICATION	0.9999817439940908	WITHOUT_CLASSIFICATION	1.8256005909183766E-5	IMPLEMENTATION
otherwise this is a primitive type.	WITHOUT_CLASSIFICATION	0.9998866309058797	WITHOUT_CLASSIFICATION	1.1336909412022518E-4	IMPLEMENTATION
foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999747080081084	WITHOUT_CLASSIFICATION	2.529199189164997E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9997718169736192	WITHOUT_CLASSIFICATION	2.2818302638074562E-4	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999335187686111	WITHOUT_CLASSIFICATION	6.648123138888748E-5	IMPLEMENTATION
in non-select queries the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999998508259754	WITHOUT_CLASSIFICATION	1.4917402464313583E-7	IMPLEMENTATION
this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999727772687551	WITHOUT_CLASSIFICATION	2.7222731244872442E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9997718169736192	WITHOUT_CLASSIFICATION	2.2818302638074562E-4	IMPLEMENTATION
even though we might find a pre-existing element by join path we may not be able to reuse it	WITHOUT_CLASSIFICATION	0.9998411376782022	WITHOUT_CLASSIFICATION	1.5886232179778377E-4	IMPLEMENTATION
note addduplicatealias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9998722802170114	WITHOUT_CLASSIFICATION	1.277197829886547E-4	IMPLEMENTATION
if the from-clauses are the same we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999896140895458	WITHOUT_CLASSIFICATION	1.038591045420145E-5	IMPLEMENTATION
again null != null here	WITHOUT_CLASSIFICATION	0.9999835503826247	WITHOUT_CLASSIFICATION	1.6449617375296486E-5	IMPLEMENTATION
if this is an implied join in a from element then use the impled join type which is part of the tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999999998430462	WITHOUT_CLASSIFICATION	1.5695370653736128E-10	IMPLEMENTATION
otherwise (subquery case) dont reuse the fromelement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999943562658444	WITHOUT_CLASSIFICATION	5.643734155548046E-6	IMPLEMENTATION
we know only the lhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9989703563615023	WITHOUT_CLASSIFICATION	0.0010296436384976953	IMPLEMENTATION
the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999388147728844	WITHOUT_CLASSIFICATION	6.118522711564486E-5	IMPLEMENTATION
only the identifier property field name can be a reference to the associated entity's pk	WITHOUT_CLASSIFICATION	0.9999972790575195	WITHOUT_CLASSIFICATION	2.7209424805890407E-6	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999095621806301	WITHOUT_CLASSIFICATION	9.043781936986996E-5	IMPLEMENTATION
append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9997159782184719	WITHOUT_CLASSIFICATION	2.8402178152803876E-4	IMPLEMENTATION
if the lhs is a collection use collectionpropertymapping	WITHOUT_CLASSIFICATION	0.9999910249428218	WITHOUT_CLASSIFICATION	8.975057178320235E-6	IMPLEMENTATION
tell the destination fromelement to 'includesubclasses'.	WITHOUT_CLASSIFICATION	0.9998887149312741	WITHOUT_CLASSIFICATION	1.1128506872594544E-4	IMPLEMENTATION
use theta style (for regression) move the node up after the origin node.	WITHOUT_CLASSIFICATION	0.9985055567164953	WITHOUT_CLASSIFICATION	0.0014944432835046217	IMPLEMENTATION
don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999635018905556	WITHOUT_CLASSIFICATION	3.64981094444255E-5	IMPLEMENTATION
for expected parameter type injection we expect that the lhs represents some form of property ref and that the children of the in-list represent one-or-more params.	WITHOUT_CLASSIFICATION	0.9999710465923252	WITHOUT_CLASSIFICATION	2.8953407674917284E-5	IMPLEMENTATION
we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.999977894424423	WITHOUT_CLASSIFICATION	2.2105575577002376E-5	IMPLEMENTATION
we have something like "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9993649133933616	WITHOUT_CLASSIFICATION	6.350866066382532E-4	IMPLEMENTATION
we have something like "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9993649133933616	WITHOUT_CLASSIFICATION	6.350866066382532E-4	IMPLEMENTATION
we know only the rhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9989703563615023	WITHOUT_CLASSIFICATION	0.0010296436384976953	IMPLEMENTATION
handle the (assumed) valid cases #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9831799823870606	WITHOUT_CLASSIFICATION	0.016820017612939442	IMPLEMENTATION
one or the other needs to be a datetime for us to get into this method in the first place	WITHOUT_CLASSIFICATION	0.9999414479235935	WITHOUT_CLASSIFICATION	5.855207640650147E-5	IMPLEMENTATION
#3 - note that this is also true of "datetime - param"	WITHOUT_CLASSIFICATION	0.9999678339585262	WITHOUT_CLASSIFICATION	3.216604147387751E-5	IMPLEMENTATION
#2	WITHOUT_CLASSIFICATION	0.9999845649547928	WITHOUT_CLASSIFICATION	1.543504520723329E-5	IMPLEMENTATION
generate the inner join -- the elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999947631297348	WITHOUT_CLASSIFICATION	5.236870265186457E-6	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999844367242754	WITHOUT_CLASSIFICATION	1.5563275724635814E-5	IMPLEMENTATION
the 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999924758844115	WITHOUT_CLASSIFICATION	7.524115588487598E-6	IMPLEMENTATION
add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9992629299319876	WITHOUT_CLASSIFICATION	7.370700680123561E-4	IMPLEMENTATION
sometimes use the element table alias sometimes use the umm collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999659644401524	WITHOUT_CLASSIFICATION	3.40355598476255E-5	IMPLEMENTATION
now set the text for this node. it should be the element columns.	WITHOUT_CLASSIFICATION	0.9999200063397155	WITHOUT_CLASSIFICATION	7.999366028451609E-5	IMPLEMENTATION
get the function return value type based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.999977198994815	WITHOUT_CLASSIFICATION	2.28010051849811E-5	IMPLEMENTATION
this will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9998345529081534	WITHOUT_CLASSIFICATION	1.6544709184654235E-4	IMPLEMENTATION
mutation depends on the types of nodes invloved	WITHOUT_CLASSIFICATION	0.9994633204167054	WITHOUT_CLASSIFICATION	5.366795832946062E-4	IMPLEMENTATION
"pass along" our initial embedded parameter node(s) to the first generated sql fragment so that it can be handled later for parameter binding	WITHOUT_CLASSIFICATION	0.9999999025523825	WITHOUT_CLASSIFICATION	9.744761748986225E-8	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999657741109903	WITHOUT_CLASSIFICATION	3.422588900977717E-5	IMPLEMENTATION
generated select expressions are already resolved nothing to do.	WITHOUT_CLASSIFICATION	0.9999994126235509	WITHOUT_CLASSIFICATION	5.873764492208192E-7	IMPLEMENTATION
the path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999998279516429	WITHOUT_CLASSIFICATION	1.720483571831901E-7	IMPLEMENTATION
the hql class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.999993437147721	WITHOUT_CLASSIFICATION	6.562852278837437E-6	IMPLEMENTATION
associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999023715744606	WITHOUT_CLASSIFICATION	9.762842553936199E-5	IMPLEMENTATION
try the parent fromclause	WITHOUT_CLASSIFICATION	0.9999481627364898	WITHOUT_CLASSIFICATION	5.183726351016411E-5	IMPLEMENTATION
add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.999950018179536	WITHOUT_CLASSIFICATION	4.998182046402633E-5	IMPLEMENTATION
make sure that all from elements registered with this from clause are actually in the ast.	WITHOUT_CLASSIFICATION	0.9999951423867627	WITHOUT_CLASSIFICATION	4.857613237296322E-6	IMPLEMENTATION
invoke setscalarcolumntext on each constructor argument.	WITHOUT_CLASSIFICATION	0.9995857110115071	WITHOUT_CLASSIFICATION	4.1428898849285405E-4	IMPLEMENTATION
collect the select expressions skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999990228555078	WITHOUT_CLASSIFICATION	9.77144492215092E-7	IMPLEMENTATION
return an empty type array	WITHOUT_CLASSIFICATION	0.9999563786717468	WITHOUT_CLASSIFICATION	4.362132825315068E-5	IMPLEMENTATION
constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999743106047511	WITHOUT_CLASSIFICATION	2.568939524885311E-5	IMPLEMENTATION
this is the exception returned by reflecthelper.getconstructor() if it cannot locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999997555178278	WITHOUT_CLASSIFICATION	2.444821721700435E-7	IMPLEMENTATION
if there is no order by make one	WITHOUT_CLASSIFICATION	0.9999902747777666	WITHOUT_CLASSIFICATION	9.725222233387486E-6	IMPLEMENTATION
find the where if there is no where find the from	WITHOUT_CLASSIFICATION	0.99999899000237	WITHOUT_CLASSIFICATION	1.0099976299756056E-6	IMPLEMENTATION
now inject the newly built order by into the tree	WITHOUT_CLASSIFICATION	0.9999688069666426	WITHOUT_CLASSIFICATION	3.119303335737925E-5	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999364974910333	WITHOUT_CLASSIFICATION	6.350250896665108E-5	IMPLEMENTATION
logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999658215389892	WITHOUT_CLASSIFICATION	3.417846101074348E-5	IMPLEMENTATION
render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999943089698444	WITHOUT_CLASSIFICATION	5.691030155607479E-6	IMPLEMENTATION
class names in the from clause result in a joinsequence (the old fromparser does this).	WITHOUT_CLASSIFICATION	0.999999995491082	WITHOUT_CLASSIFICATION	4.508917940869998E-9	IMPLEMENTATION
for many-to-many joins use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999979096038485	WITHOUT_CLASSIFICATION	2.0903961514953064E-6	IMPLEMENTATION
otherwise use the property mapping.	WITHOUT_CLASSIFICATION	0.9991852681653597	WITHOUT_CLASSIFICATION	8.147318346403715E-4	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9997389592914914	WITHOUT_CLASSIFICATION	2.610407085086986E-4	IMPLEMENTATION
if the property is a special collection property name return a collectionpropertymapping.	WITHOUT_CLASSIFICATION	0.9999976060572086	WITHOUT_CLASSIFICATION	2.3939427913931003E-6	IMPLEMENTATION
collection of components.	WITHOUT_CLASSIFICATION	0.9999568200119615	WITHOUT_CLASSIFICATION	4.317998803845807E-5	IMPLEMENTATION
make sure the lhs is "assignable"	WITHOUT_CLASSIFICATION	0.9999177528018292	WITHOUT_CLASSIFICATION	8.224719817089846E-5	IMPLEMENTATION
false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9975480374161124	WITHOUT_CLASSIFICATION	0.002451962583887677	IMPLEMENTATION
register the fromelement with the from clause now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9994043357152467	WITHOUT_CLASSIFICATION	5.956642847532329E-4	IMPLEMENTATION
currently allowed	WITHOUT_CLASSIFICATION	0.9999771396236058	WITHOUT_CLASSIFICATION	2.286037639428003E-5	IMPLEMENTATION
hhh-276 implied joins in a subselect where clause - the destination needs to be added to the destination's from clause. not sure if this is will fix everything but it works.	WITHOUT_CLASSIFICATION	0.9999702421404316	WITHOUT_CLASSIFICATION	2.975785956831169E-5	IMPLEMENTATION
return classalias == null ? classname classalias	WITHOUT_CLASSIFICATION	0.9999220430391337	WITHOUT_CLASSIFICATION	7.795696086629954E-5	IMPLEMENTATION
this is an explicit from element.	WITHOUT_CLASSIFICATION	0.9999947959031903	WITHOUT_CLASSIFICATION	5.204096809778847E-6	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999364974910333	WITHOUT_CLASSIFICATION	6.350250896665108E-5	IMPLEMENTATION
fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999588162647302	WITHOUT_CLASSIFICATION	4.1183735269955796E-5	IMPLEMENTATION
if it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9984141449974777	WITHOUT_CLASSIFICATION	0.001585855002522364	IMPLEMENTATION
since this is an explicit from element it can't be implied in the from clause.	WITHOUT_CLASSIFICATION	0.9999999826819416	WITHOUT_CLASSIFICATION	1.731805841657404E-8	IMPLEMENTATION
do nothing eplicit from elements are always in the projection list.	WITHOUT_CLASSIFICATION	0.9999998013704485	WITHOUT_CLASSIFICATION	1.9862955145052728E-7	IMPLEMENTATION
propertyname refers to something like collection.size	WITHOUT_CLASSIFICATION	0.9990838501370313	WITHOUT_CLASSIFICATION	9.16149862968594E-4	IMPLEMENTATION
property name is a sub-path of a component	WITHOUT_CLASSIFICATION	0.9999983612124785	WITHOUT_CLASSIFICATION	1.638787521468414E-6	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999335187686111	WITHOUT_CLASSIFICATION	6.648123138888748E-5	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999966389168746	WITHOUT_CLASSIFICATION	3.3610831252725083E-6	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999657741109903	WITHOUT_CLASSIFICATION	3.422588900977717E-5	IMPLEMENTATION
dotnode uses null here	WITHOUT_CLASSIFICATION	0.9999575158431725	WITHOUT_CLASSIFICATION	4.248415682743574E-5	IMPLEMENTATION
we represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999844600563693	WITHOUT_CLASSIFICATION	1.553994363069426E-5	IMPLEMENTATION
we are the lhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.999995808681021	WITHOUT_CLASSIFICATION	4.191318978923875E-6	IMPLEMENTATION
we are the rhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999957613647458	WITHOUT_CLASSIFICATION	4.238635254228108E-6	IMPLEMENTATION
we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999747212614538	WITHOUT_CLASSIFICATION	2.527873854622849E-5	IMPLEMENTATION
early exit!!! return so the resolve call explicitly coming from dotnode can resolve this	WITHOUT_CLASSIFICATION	0.9999903943599823	WITHOUT_CLASSIFICATION	9.605640017823717E-6	IMPLEMENTATION
assume this ident's text does not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9947954429727648	WITHOUT_CLASSIFICATION	0.005204557027235216	IMPLEMENTATION
just ignore it for now it'll get resolved later	WITHOUT_CLASSIFICATION	0.9999958986004288	WITHOUT_CLASSIFICATION	4.101399571270014E-6	IMPLEMENTATION
this is not actually a constant but a reference to from element.	WITHOUT_CLASSIFICATION	0.9999550197956237	WITHOUT_CLASSIFICATION	4.498020437636885E-5	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999940172094512	WITHOUT_CLASSIFICATION	5.982790548800368E-6	IMPLEMENTATION
these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9966560169975114	WITHOUT_CLASSIFICATION	0.003343983002488566	IMPLEMENTATION
used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999748286742831	WITHOUT_CLASSIFICATION	2.517132571695013E-5	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9657720742241218	WITHOUT_CLASSIFICATION	0.03422792577587818	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9657720742241218	WITHOUT_CLASSIFICATION	0.03422792577587818	IMPLEMENTATION
naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999999283153284	WITHOUT_CLASSIFICATION	7.168467160896075E-8	IMPLEMENTATION
this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9881185794097624	WITHOUT_CLASSIFICATION	0.011881420590237455	IMPLEMENTATION
do not over-write the column text as that has already been "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9947558527096284	WITHOUT_CLASSIFICATION	0.005244147290371674	IMPLEMENTATION
for some reason the antlr.commonast initialization routines force this method to get called twice. the first time with an empty string	WITHOUT_CLASSIFICATION	0.9996690733640019	WITHOUT_CLASSIFICATION	3.30926635998137E-4	IMPLEMENTATION
look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999986280387113	WITHOUT_CLASSIFICATION	1.371961288631556E-6	IMPLEMENTATION
add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999690027780139	WITHOUT_CLASSIFICATION	3.09972219859884E-5	IMPLEMENTATION
if the from element isn't in the same clause create a new from element.	WITHOUT_CLASSIFICATION	0.9999997716316428	WITHOUT_CLASSIFICATION	2.2836835719252632E-7	IMPLEMENTATION
this is the root level node. generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999947567638796	WITHOUT_CLASSIFICATION	5.2432361202889E-6	IMPLEMENTATION
correlated subqueries create 'special' implied from nodes because correlated subselects can't use an ansi-style join	WITHOUT_CLASSIFICATION	0.999997166392159	WITHOUT_CLASSIFICATION	2.833607841142517E-6	IMPLEMENTATION
super-duper-classic-parser-regression-testing-mojo-magic	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
a collection of entities	WITHOUT_CLASSIFICATION	0.9999710012497698	WITHOUT_CLASSIFICATION	2.8998750230191023E-5	IMPLEMENTATION
a collection of components	WITHOUT_CLASSIFICATION	0.9999823236434624	WITHOUT_CLASSIFICATION	1.767635653758826E-5	IMPLEMENTATION
a collection of scalar elements	WITHOUT_CLASSIFICATION	0.9999874444248144	WITHOUT_CLASSIFICATION	1.2555575185632766E-5	IMPLEMENTATION
according to both the ansi-sql and ejb3 specs trim can either take exactly one parameter or a variable number of parameters between 1 and 4. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if only <trim specification> is omitted both is assumed if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.999999970527488	WITHOUT_CLASSIFICATION	2.9472511978453585E-8	IMPLEMENTATION
don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999802325126916	WITHOUT_CLASSIFICATION	1.9767487308275603E-5	IMPLEMENTATION
treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999956160027867	WITHOUT_CLASSIFICATION	4.3839972132002265E-6	IMPLEMENTATION
( implied && dotnode.usethetastyleimplicitjoins ) ) {	WITHOUT_CLASSIFICATION	0.9998900251125616	WITHOUT_CLASSIFICATION	1.0997488743830623E-4	IMPLEMENTATION
the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9997221671678022	WITHOUT_CLASSIFICATION	2.7783283219780794E-4	IMPLEMENTATION
create the from element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999998897419021	WITHOUT_CLASSIFICATION	1.1025809780203741E-7	IMPLEMENTATION
if the join is implied then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999947998000552	WITHOUT_CLASSIFICATION	5.200199944767286E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
the associated entity is implied but it must be included in the from. the collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999996464381716	WITHOUT_CLASSIFICATION	3.5356182841369816E-7	IMPLEMENTATION
tag this node as a join. don't include subclasses in the join. this is a clollection join.	WITHOUT_CLASSIFICATION	0.9999976979388503	WITHOUT_CLASSIFICATION	2.30206114966601E-6	IMPLEMENTATION
get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999992621807677	WITHOUT_CLASSIFICATION	7.378192322691399E-7	IMPLEMENTATION
origin path implied columns classalias	WITHOUT_CLASSIFICATION	0.9999839217979393	WITHOUT_CLASSIFICATION	1.6078202060689545E-5	IMPLEMENTATION
implied	WITHOUT_CLASSIFICATION	0.9999826604447425	WITHOUT_CLASSIFICATION	1.7339555257519022E-5	IMPLEMENTATION
for implied many-to-many just add the end join.	WITHOUT_CLASSIFICATION	0.99997923076356	WITHOUT_CLASSIFICATION	2.0769236439993056E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960797456499	WITHOUT_CLASSIFICATION	3.9202543500946216E-5	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999981255522518	WITHOUT_CLASSIFICATION	1.874447748363201E-6	IMPLEMENTATION
this causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999361266457386	WITHOUT_CLASSIFICATION	6.387335426135325E-5	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.999988390363083	WITHOUT_CLASSIFICATION	1.1609636917099675E-5	IMPLEMENTATION
frontbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999989467609943	WITHOUT_CLASSIFICATION	1.0532390056536971E-6	IMPLEMENTATION
the types represented in the sql result set. @return the types represented in the sql result set.	WITHOUT_CLASSIFICATION	0.9999913033760233	WITHOUT_CLASSIFICATION	8.696623976725872E-6	IMPLEMENTATION
public type[] getsqlresulttypes() {return sqlresulttypes}	WITHOUT_CLASSIFICATION	0.9999880854395347	WITHOUT_CLASSIFICATION	1.191456046526901E-5	IMPLEMENTATION
first collect all of the select expressions. note this must be done before invoking setscalarcolumntext() because setscalarcolumntext() changes the ast!!!	WITHOUT_CLASSIFICATION	0.9999866188282529	WITHOUT_CLASSIFICATION	1.3381171747043717E-5	IMPLEMENTATION
first allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9998072175005301	WITHOUT_CLASSIFICATION	1.9278249946992339E-4	IMPLEMENTATION
sqlresulttypelist.addall( constructorargumenttypelist )	WITHOUT_CLASSIFICATION	0.999901522788762	WITHOUT_CLASSIFICATION	9.847721123802691E-5	IMPLEMENTATION
if the data type is not an association type it could not have been in the from clause.	WITHOUT_CLASSIFICATION	0.9999993780104544	WITHOUT_CLASSIFICATION	6.219895456201966E-7	IMPLEMENTATION
sqlresulttypelist.add( type )	WITHOUT_CLASSIFICATION	0.9999686394658187	WITHOUT_CLASSIFICATION	3.13605341812353E-5	IMPLEMENTATION
always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9995527992811096	WITHOUT_CLASSIFICATION	4.47200718890383E-4	IMPLEMENTATION
add the fetched entities	WITHOUT_CLASSIFICATION	0.9999708985410376	WITHOUT_CLASSIFICATION	2.9101458962402295E-5	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.999973005081964	WITHOUT_CLASSIFICATION	2.6994918036015272E-5	IMPLEMENTATION
function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993364824750608	WITHOUT_CLASSIFICATION	6.635175249391735E-4	IMPLEMENTATION
if there are any scalars (non-entities) selected render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999998158568628	WITHOUT_CLASSIFICATION	1.841431372203122E-7	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
arraylist sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999617938813956	WITHOUT_CLASSIFICATION	3.8206118604445594E-5	IMPLEMENTATION
sqlresulttypes = ( type[] ) sqlresulttypelist.toarray( new type[sqlresulttypelist.size()] )	WITHOUT_CLASSIFICATION	0.9999469884892112	WITHOUT_CLASSIFICATION	5.301151078896877E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993554966455197	WITHOUT_CLASSIFICATION	6.44503354480312E-4	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.8073306800523441	WITHOUT_CLASSIFICATION	0.19266931994765593	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999962442625735	WITHOUT_CLASSIFICATION	3.7557374265222482E-6	IMPLEMENTATION
generate an 2d array of column names the first dimension is parallel with the return types array. the second dimension is the list of column names for each type.	WITHOUT_CLASSIFICATION	0.9999996251393762	WITHOUT_CLASSIFICATION	3.7486062375642996E-7	IMPLEMENTATION
generate the select expression.	WITHOUT_CLASSIFICATION	0.9999866983134273	WITHOUT_CLASSIFICATION	1.330168657270631E-5	IMPLEMENTATION
union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992585977757728	WITHOUT_CLASSIFICATION	7.414022242272575E-4	IMPLEMENTATION
skip 'distinct' and 'all' so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9998478053220305	WITHOUT_CLASSIFICATION	1.5219467796943927E-4	IMPLEMENTATION
create sql_token nodes for the columns.	WITHOUT_CLASSIFICATION	0.999984353379165	WITHOUT_CLASSIFICATION	1.5646620835042937E-5	IMPLEMENTATION
generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999853759228121	WITHOUT_CLASSIFICATION	1.4624077187816678E-5	IMPLEMENTATION
get the function name node.	WITHOUT_CLASSIFICATION	0.9999846256654527	WITHOUT_CLASSIFICATION	1.5374334547388038E-5	IMPLEMENTATION
method expressions in a select should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999965831367656	WITHOUT_CLASSIFICATION	3.4168632342887257E-6	IMPLEMENTATION
if this is 'elements' then create a new from element.	WITHOUT_CLASSIFICATION	0.9999992065702643	WITHOUT_CLASSIFICATION	7.934297356415158E-7	IMPLEMENTATION
not elements(x)	WITHOUT_CLASSIFICATION	0.996864319487	WITHOUT_CLASSIFICATION	0.003135680512999959	IMPLEMENTATION
dialect function	WITHOUT_CLASSIFICATION	0.999956440296807	WITHOUT_CLASSIFICATION	4.355970319308573E-5	IMPLEMENTATION
collection 'property function'	WITHOUT_CLASSIFICATION	0.9999067678816859	WITHOUT_CLASSIFICATION	9.323211831413581E-5	IMPLEMENTATION
if the constant is an ident figure out what it means	WITHOUT_CLASSIFICATION	0.9999616054699458	WITHOUT_CLASSIFICATION	3.839453005420185E-5	IMPLEMENTATION
ident is a class alias in the from.	WITHOUT_CLASSIFICATION	0.9999991108285833	WITHOUT_CLASSIFICATION	8.89171416682534E-7	IMPLEMENTATION
resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999889915950849	WITHOUT_CLASSIFICATION	1.1008404914989002E-5	IMPLEMENTATION
otherwise it's a literal.	WITHOUT_CLASSIFICATION	0.9991904169546366	WITHOUT_CLASSIFICATION	8.095830453633074E-4	IMPLEMENTATION
the name of an entity class	WITHOUT_CLASSIFICATION	0.9999996299514369	WITHOUT_CLASSIFICATION	3.7004856311049427E-7	IMPLEMENTATION
the class discriminator value	WITHOUT_CLASSIFICATION	0.9999904879144845	WITHOUT_CLASSIFICATION	9.512085515386532E-6	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999917771356326	WITHOUT_CLASSIFICATION	8.222864367536099E-6	IMPLEMENTATION
add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999970049458848	WITHOUT_CLASSIFICATION	2.995054115099502E-6	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9997809844423236	WITHOUT_CLASSIFICATION	2.1901555767649453E-4	IMPLEMENTATION
child == parent.getfirstchild()	WITHOUT_CLASSIFICATION	0.9995464703578368	WITHOUT_CLASSIFICATION	4.5352964216311596E-4	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9997809844423236	WITHOUT_CLASSIFICATION	2.1901555767649453E-4	IMPLEMENTATION
filter conditions need to be inserted before the hql where condition and the theta join node. this is because org.hibernate.loader.loader binds the filter parameters first then it binds all the hql query parameters see org.hibernate.loader.loader.processfilterparameters().	WITHOUT_CLASSIFICATION	0.9998884922639676	WITHOUT_CLASSIFICATION	1.1150773603239935E-4	IMPLEMENTATION
put the filters node before the hql condition and theta joins	WITHOUT_CLASSIFICATION	0.9998322299774497	WITHOUT_CLASSIFICATION	1.6777002255039628E-4	IMPLEMENTATION
add the current fragment to the filters node	WITHOUT_CLASSIFICATION	0.9997424186094775	WITHOUT_CLASSIFICATION	2.5758139052241985E-4	IMPLEMENTATION
create a new theta_joins node as a parent of all filters	WITHOUT_CLASSIFICATION	0.999979900265239	WITHOUT_CLASSIFICATION	2.009973476106075E-5	IMPLEMENTATION
put the theta_joins node before the hql condition after the filters.	WITHOUT_CLASSIFICATION	0.9998809008773997	WITHOUT_CLASSIFICATION	1.1909912260037466E-4	IMPLEMENTATION
add the current fragment to the theta_joins node	WITHOUT_CLASSIFICATION	0.9997420046149901	WITHOUT_CLASSIFICATION	2.579953850098338E-4	IMPLEMENTATION
first try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999966968408112	WITHOUT_CLASSIFICATION	3.3031591887960223E-6	IMPLEMENTATION
unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999651793623351	WITHOUT_CLASSIFICATION	3.4820637664849724E-5	IMPLEMENTATION
if that didn't work try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999851479652612	WITHOUT_CLASSIFICATION	1.4852034738714812E-5	IMPLEMENTATION
implicit joins use theta style (where pk = fk) explicit joins use join (after from)	WITHOUT_CLASSIFICATION	0.9995306713217985	WITHOUT_CLASSIFICATION	4.6932867820139763E-4	IMPLEMENTATION
locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999893507084288	WITHOUT_CLASSIFICATION	1.064929157121749E-5	IMPLEMENTATION
determine the type of the first argument	WITHOUT_CLASSIFICATION	0.9999996861275008	WITHOUT_CLASSIFICATION	3.138724991817507E-7	IMPLEMENTATION
use the dot node to emit the first column name. create the column names folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999456557813836	WITHOUT_CLASSIFICATION	5.434421861645812E-5	IMPLEMENTATION
note this simply constructs a "raw" sql_token representing the where fragment and injects this into the tree. this "works" however it is probably not the best long-term solution. at some point we probably want to apply an additional grammar to properly tokenize this where fragment into constituent parts focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9035261358734271	WITHOUT_CLASSIFICATION	0.09647386412657294	IMPLEMENTATION
append the text of the current node.	WITHOUT_CLASSIFICATION	0.9990989138611445	WITHOUT_CLASSIFICATION	9.010861388554927E-4	IMPLEMENTATION
if the node has a first child recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999961547135283	WITHOUT_CLASSIFICATION	3.8452864716887775E-6	IMPLEMENTATION
if there is a second child (rhs) recurse into that child.	WITHOUT_CLASSIFICATION	0.9999949820997859	WITHOUT_CLASSIFICATION	5.017900214181949E-6	IMPLEMENTATION
iterate through the aliasjoinsequence pairs and generate sql token nodes.	WITHOUT_CLASSIFICATION	0.9999924113977882	WITHOUT_CLASSIFICATION	7.588602211838285E-6	IMPLEMENTATION
if the from element represents a join_fragment and it is a theta-style join convert its type from join_fragment to from_fragment	WITHOUT_CLASSIFICATION	0.9999999262944879	WITHOUT_CLASSIFICATION	7.370551213648762E-8	IMPLEMENTATION
this is used during sqlgenerator processing	WITHOUT_CLASSIFICATION	0.9999885490475429	WITHOUT_CLASSIFICATION	1.145095245706364E-5	IMPLEMENTATION
if there is a from fragment and the from element is an explicit then add the from part.	WITHOUT_CLASSIFICATION	0.9999999906279076	WITHOUT_CLASSIFICATION	9.37209247165005E-9	IMPLEMENTATION
&& stringhelper.isnotempty( frag )	WITHOUT_CLASSIFICATION	0.9999030318389843	WITHOUT_CLASSIFICATION	9.696816101564848E-5	IMPLEMENTATION
the from fragment will probably begin with ' '. remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999992853517786	WITHOUT_CLASSIFICATION	7.146482213723243E-7	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9998675313353833	WITHOUT_CLASSIFICATION	1.324686646166571E-4	IMPLEMENTATION
select p from p in class eg.person order by p.name p.address p	WITHOUT_CLASSIFICATION	0.99999989151901	WITHOUT_CLASSIFICATION	1.084809900686164E-7	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999995523555565	WITHOUT_CLASSIFICATION	4.476444434127932E-7	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9999894673379524	WITHOUT_CLASSIFICATION	1.0532662047671158E-5	IMPLEMENTATION
default mode	WITHOUT_CLASSIFICATION	0.9999771371608854	WITHOUT_CLASSIFICATION	2.286283911458688E-5	IMPLEMENTATION
queryjoinfragment join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9999231347990595	WITHOUT_CLASSIFICATION	7.68652009404855E-5	IMPLEMENTATION
reset the dotcount (but not the path) after reset!	WITHOUT_CLASSIFICATION	0.9929552528324204	WITHOUT_CLASSIFICATION	0.007044747167579603	IMPLEMENTATION
after reset!	WITHOUT_CLASSIFICATION	0.9999527833532161	WITHOUT_CLASSIFICATION	4.721664678392294E-5	IMPLEMENTATION
we don't need to worry about any condition in the on clause here (tofromfragmentstring) since anything in the on condition is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999733546821897	WITHOUT_CLASSIFICATION	2.664531781032815E-5	IMPLEMENTATION
bit_length feels a bit broken to me. we have to cast to char in order to pass when a numeric value is supplied. but of course the answers given will be wildly different for these two datatypes. 1234.5678 will be 9 bytes as a char string but will be 8 or 16 bytes as a true numeric. jay nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999999984393505	WITHOUT_CLASSIFICATION	1.5606495221688865E-9	IMPLEMENTATION
dotcount>=2	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
do the corresponding rhs	WITHOUT_CLASSIFICATION	0.9998639423250945	WITHOUT_CLASSIFICATION	1.3605767490544718E-4	IMPLEMENTATION
if its "id"	WITHOUT_CLASSIFICATION	0.9999921416772446	WITHOUT_CLASSIFICATION	7.858322755283745E-6	IMPLEMENTATION
or its the id property name	WITHOUT_CLASSIFICATION	0.9999416163310257	WITHOUT_CLASSIFICATION	5.838366897427033E-5	IMPLEMENTATION
join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9999231347990595	WITHOUT_CLASSIFICATION	7.68652009404855E-5	IMPLEMENTATION
important!!	WITHOUT_CLASSIFICATION	0.9999462976191835	WITHOUT_CLASSIFICATION	5.370238081642132E-5	IMPLEMENTATION
string[] keycols = collpersister.getkeycolumnnames()	WITHOUT_CLASSIFICATION	0.9999047664777486	WITHOUT_CLASSIFICATION	9.523352225139713E-5	IMPLEMENTATION
an association	WITHOUT_CLASSIFICATION	0.9999936727913049	WITHOUT_CLASSIFICATION	6.327208695053588E-6	IMPLEMENTATION
allow index() function	WITHOUT_CLASSIFICATION	0.9999176872513728	WITHOUT_CLASSIFICATION	8.231274862723664E-5	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9902511919875157	WITHOUT_CLASSIFICATION	0.009748808012484438	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999995523555565	WITHOUT_CLASSIFICATION	4.476444434127932E-7	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
collections of values	WITHOUT_CLASSIFICATION	0.9999969402009942	WITHOUT_CLASSIFICATION	3.0597990057614458E-6	IMPLEMENTATION
opening paren in new foo ( )	WITHOUT_CLASSIFICATION	0.9999972781651413	WITHOUT_CLASSIFICATION	2.7218348587500087E-6	IMPLEMENTATION
if we are inside a new result() but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999948222231854	WITHOUT_CLASSIFICATION	5.177776814657139E-6	IMPLEMENTATION
special case	WITHOUT_CLASSIFICATION	0.9999739883806409	WITHOUT_CLASSIFICATION	2.6011619359189433E-5	IMPLEMENTATION
the name of an sql function	WITHOUT_CLASSIFICATION	0.999999490151151	WITHOUT_CLASSIFICATION	5.098488491395462E-7	IMPLEMENTATION
null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999959510041673	WITHOUT_CLASSIFICATION	4.04899583265783E-6	IMPLEMENTATION
this is basically a copy/paste of orderbyparser might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999954650913606	WITHOUT_CLASSIFICATION	4.534908639380087E-6	IMPLEMENTATION
select p from p in class eg.person group by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999998320541356	WITHOUT_CLASSIFICATION	1.6794586445969973E-7	IMPLEMENTATION
return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.999959904415746	WITHOUT_CLASSIFICATION	4.0095584254051065E-5	IMPLEMENTATION
register collection role	WITHOUT_CLASSIFICATION	0.9997972797171556	WITHOUT_CLASSIFICATION	2.0272028284439942E-4	IMPLEMENTATION
the keyword used to specify an identity column if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999986779579159	WITHOUT_CLASSIFICATION	1.3220420841583481E-6	IMPLEMENTATION
.getelementpropertymapping()	WITHOUT_CLASSIFICATION	0.999960806190921	WITHOUT_CLASSIFICATION	3.91938090791539E-5	IMPLEMENTATION
crossjoins.add(name)	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
ie no select clause in hql	WITHOUT_CLASSIFICATION	0.9999976497780819	WITHOUT_CLASSIFICATION	2.3502219180856245E-6	IMPLEMENTATION
initialize the set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999874628456956	WITHOUT_CLASSIFICATION	1.2537154304471477E-5	IMPLEMENTATION
ie. no select clause	WITHOUT_CLASSIFICATION	0.9999750048799582	WITHOUT_CLASSIFICATION	2.4995120041825015E-5	IMPLEMENTATION
there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999881282503514	WITHOUT_CLASSIFICATION	1.1871749648547218E-5	IMPLEMENTATION
return the concrete type or the underlying type if a concrete type was not specified	WITHOUT_CLASSIFICATION	0.9999986048770133	WITHOUT_CLASSIFICATION	1.3951229866670206E-6	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
q.addcollection(collectionname collectionrole)	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9923303436910311	WITHOUT_CLASSIFICATION	0.007669656308968846	IMPLEMENTATION
can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999040587186285	WITHOUT_CLASSIFICATION	9.59412813714437E-5	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9998704650915573	WITHOUT_CLASSIFICATION	1.295349084427817E-4	IMPLEMENTATION
this is the legacy behaviour for hql queries	WITHOUT_CLASSIFICATION	0.9999871540330061	WITHOUT_CLASSIFICATION	1.2845966993828477E-5	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989726808518161	WITHOUT_CLASSIFICATION	0.001027319148183927	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989726808518161	WITHOUT_CLASSIFICATION	0.001027319148183927	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces early exit!!!!	WITHOUT_CLASSIFICATION	0.9999931064385049	WITHOUT_CLASSIFICATION	6.893561495112782E-6	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989726808518161	WITHOUT_CLASSIFICATION	0.001027319148183927	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989726808518161	WITHOUT_CLASSIFICATION	0.001027319148183927	IMPLEMENTATION
need this since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9995288529767071	WITHOUT_CLASSIFICATION	4.7114702329278295E-4	IMPLEMENTATION
tokens that close a sub expression tokens that open a sub expression tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9996733104550497	WITHOUT_CLASSIFICATION	3.266895449503175E-4	IMPLEMENTATION
expressionterminators.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999369948947163	WITHOUT_CLASSIFICATION	6.30051052836485E-5	IMPLEMENTATION
expressionopeners.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999369948947163	WITHOUT_CLASSIFICATION	6.30051052836485E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource) early exit!!!!	WITHOUT_CLASSIFICATION	0.9998940350789882	WITHOUT_CLASSIFICATION	1.0596492101179747E-4	IMPLEMENTATION
otherwise a trim-specification and/or a trim-character have been specified we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character (what is to be trimmed off?) the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9965189272216984	WITHOUT_CLASSIFICATION	0.0034810727783015686	IMPLEMENTATION
inside a between and expression	WITHOUT_CLASSIFICATION	0.9997486637496213	WITHOUT_CLASSIFICATION	2.513362503786323E-4	IMPLEMENTATION
were an odd or even number of nots encountered the join string built up by compound paths inside this expression a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999998675790328	WITHOUT_CLASSIFICATION	1.3242096729564137E-7	IMPLEMENTATION
ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999626212304498	WITHOUT_CLASSIFICATION	3.737876955017611E-5	IMPLEMENTATION
cope with []	WITHOUT_CLASSIFICATION	0.9999313705614734	WITHOUT_CLASSIFICATION	6.862943852656524E-5	IMPLEMENTATION
cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9997234161131848	WITHOUT_CLASSIFICATION	2.7658388681514725E-4	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999867524035075	WITHOUT_CLASSIFICATION	1.324759649239878E-5	IMPLEMENTATION
cope with a subselect	WITHOUT_CLASSIFICATION	0.9999468148316236	WITHOUT_CLASSIFICATION	5.3185168376384267E-5	IMPLEMENTATION
cope with special cases of and not ()	WITHOUT_CLASSIFICATION	0.999267510303451	WITHOUT_CLASSIFICATION	7.324896965489239E-4	IMPLEMENTATION
close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999968813147732	WITHOUT_CLASSIFICATION	3.118685226773415E-6	IMPLEMENTATION
take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999722932442979	WITHOUT_CLASSIFICATION	2.7706755701969774E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999933027752266	WITHOUT_CLASSIFICATION	6.6972247733747375E-6	IMPLEMENTATION
process a token mapping oo path expressions to sql expressions	WITHOUT_CLASSIFICATION	0.9999836136670507	WITHOUT_CLASSIFICATION	1.6386332949313128E-5	IMPLEMENTATION
open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999784547439124	WITHOUT_CLASSIFICATION	2.154525608753155E-5	IMPLEMENTATION
cope with special cases of and not )	WITHOUT_CLASSIFICATION	0.9889292096865447	WITHOUT_CLASSIFICATION	0.011070790313455372	IMPLEMENTATION
the next one up must also be	WITHOUT_CLASSIFICATION	0.9999621979599077	WITHOUT_CLASSIFICATION	3.780204009220466E-5	IMPLEMENTATION
add any joins	WITHOUT_CLASSIFICATION	0.9999745778629331	WITHOUT_CLASSIFICATION	2.5422137066923822E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999933027752266	WITHOUT_CLASSIFICATION	6.6972247733747375E-6	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9999894673379524	WITHOUT_CLASSIFICATION	1.0532662047671158E-5	IMPLEMENTATION
path expression	WITHOUT_CLASSIFICATION	0.9997986031699883	WITHOUT_CLASSIFICATION	2.013968300117582E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999793622950454	WITHOUT_CLASSIFICATION	2.0637704954610565E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998344907850203	WITHOUT_CLASSIFICATION	1.6550921497960496E-4	IMPLEMENTATION
anything else	WITHOUT_CLASSIFICATION	0.9998572541496841	WITHOUT_CLASSIFICATION	1.4274585031601408E-4	IMPLEMENTATION
the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999115002549237	WITHOUT_CLASSIFICATION	8.849974507620646E-5	IMPLEMENTATION
careful with this!	WITHOUT_CLASSIFICATION	0.9997996957432425	WITHOUT_CLASSIFICATION	2.00304256757582E-4	IMPLEMENTATION
the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999574435000155	WITHOUT_CLASSIFICATION	4.255649998449551E-5	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.9999802586921996	WITHOUT_CLASSIFICATION	1.974130780034874E-5	IMPLEMENTATION
notice no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999997519539334	WITHOUT_CLASSIFICATION	2.480460664697687E-7	IMPLEMENTATION
cannot instantiate	WITHOUT_CLASSIFICATION	0.9999931729788782	WITHOUT_CLASSIFICATION	6.827021121817256E-6	IMPLEMENTATION
start by looking for hql keywords	WITHOUT_CLASSIFICATION	0.9999972180279816	WITHOUT_CLASSIFICATION	2.7819720184349804E-6	IMPLEMENTATION
inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999240603254476	WITHOUT_CLASSIFICATION	7.593967455246917E-5	IMPLEMENTATION
'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9996495442952142	WITHOUT_CLASSIFICATION	3.5045570478578643E-4	IMPLEMENTATION
now anything that is not a hql keyword	WITHOUT_CLASSIFICATION	0.9952507265127364	WITHOUT_CLASSIFICATION	0.004749273487263574	IMPLEMENTATION
process the "old" hql style where aliases appear _first_ ie. using the in or in class constructions	WITHOUT_CLASSIFICATION	0.9999991326299865	WITHOUT_CLASSIFICATION	8.673700135720901E-7	IMPLEMENTATION
treat it as a classname	WITHOUT_CLASSIFICATION	0.9998526300289315	WITHOUT_CLASSIFICATION	1.4736997106853798E-4	IMPLEMENTATION
treat it as a path expression	WITHOUT_CLASSIFICATION	0.9994467430212536	WITHOUT_CLASSIFICATION	5.532569787464773E-4	IMPLEMENTATION
starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.999996285026745	WITHOUT_CLASSIFICATION	3.714973254902684E-6	IMPLEMENTATION
starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9997211509164143	WITHOUT_CLASSIFICATION	2.7884908358568277E-4	IMPLEMENTATION
allow odmg oql style from person p p.cars c	WITHOUT_CLASSIFICATION	0.9999810230795029	WITHOUT_CLASSIFICATION	1.897692049709492E-5	IMPLEMENTATION
handle quoted strings	WITHOUT_CLASSIFICATION	0.9996010243034289	WITHOUT_CLASSIFICATION	3.989756965711444E-4	IMPLEMENTATION
object insertions updates and deletions have list semantics because they must happen in the right order so as to respect referential integrity	WITHOUT_CLASSIFICATION	0.9999998588319549	WITHOUT_CLASSIFICATION	1.4116804518694567E-7	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.9999802586921996	WITHOUT_CLASSIFICATION	1.974130780034874E-5	IMPLEMENTATION
ignore whitespace	WITHOUT_CLASSIFICATION	0.9999310581894172	WITHOUT_CLASSIFICATION	6.894181058279429E-5	IMPLEMENTATION
do replacements	WITHOUT_CLASSIFICATION	0.9998763234539619	WITHOUT_CLASSIFICATION	1.23676546038083E-4	IMPLEMENTATION
handle hql2 collection syntax	WITHOUT_CLASSIFICATION	0.9995714567353334	WITHOUT_CLASSIFICATION	4.2854326466667603E-4	IMPLEMENTATION
uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999790132646117	WITHOUT_CLASSIFICATION	2.098673538824965E-5	IMPLEMENTATION
abstractselectingdelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999364974910333	WITHOUT_CLASSIFICATION	6.350250896665108E-5	IMPLEMENTATION
hilo params	WITHOUT_CLASSIFICATION	0.9999468128852965	WITHOUT_CLASSIFICATION	5.318711470342833E-5	IMPLEMENTATION
sql = query	WITHOUT_CLASSIFICATION	0.9999789324282288	WITHOUT_CLASSIFICATION	2.1067571771252557E-5	IMPLEMENTATION
performance opt	WITHOUT_CLASSIFICATION	0.9991455453839065	WITHOUT_CLASSIFICATION	8.544546160934367E-4	IMPLEMENTATION
sql = update	WITHOUT_CLASSIFICATION	0.9999953637482693	WITHOUT_CLASSIFICATION	4.6362517307239455E-6	IMPLEMENTATION
hilo config	WITHOUT_CLASSIFICATION	0.9997573356633103	WITHOUT_CLASSIFICATION	2.4266433668980564E-4	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.999969557243942	WITHOUT_CLASSIFICATION	3.044275605801523E-5	IMPLEMENTATION
don't allow comments on these insert statements as comments totally blow up the oracle getgeneratedkeys "support" (	WITHOUT_CLASSIFICATION	0.9999846846514403	WITHOUT_CLASSIFICATION	1.5315348559693578E-5	IMPLEMENTATION
abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999998997112677	WITHOUT_CLASSIFICATION	1.0028873230472389E-7	IMPLEMENTATION
throw new identifiergenerationexception("save associated object first or disable cascade for inverse association")	WITHOUT_CLASSIFICATION	0.9999976940343652	WITHOUT_CLASSIFICATION	2.3059656347443498E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9990749281316799	WITHOUT_CLASSIFICATION	9.250718683201634E-4	IMPLEMENTATION
do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999802272208729	WITHOUT_CLASSIFICATION	1.9772779127011802E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999918017492211	WITHOUT_CLASSIFICATION	8.198250778804686E-6	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.999969557243942	WITHOUT_CLASSIFICATION	3.044275605801523E-5	IMPLEMENTATION
do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999006428735977	WITHOUT_CLASSIFICATION	9.935712640234765E-5	IMPLEMENTATION
column and table should be renamed but it would break the public api	WITHOUT_CLASSIFICATION	0.9999918967805557	WITHOUT_CLASSIFICATION	8.10321944427279E-6	IMPLEMENTATION
loaded entity instances by entitykey	WITHOUT_CLASSIFICATION	0.999983172306938	WITHOUT_CLASSIFICATION	1.6827693061960032E-5	IMPLEMENTATION
if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999931079378888	WITHOUT_CLASSIFICATION	6.892062111282962E-6	IMPLEMENTATION
the default	WITHOUT_CLASSIFICATION	0.9999953440649306	WITHOUT_CLASSIFICATION	4.655935069360481E-6	IMPLEMENTATION
unfortunately not really safe to normalize this to 1 as an initial value like we do the others because we would not be able to control this if we are using a sequence	WITHOUT_CLASSIFICATION	0.9999766561845723	WITHOUT_CLASSIFICATION	2.3343815427699223E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9990749281316799	WITHOUT_CLASSIFICATION	9.250718683201634E-4	IMPLEMENTATION
identity map of collectionentry instances by the collection wrapper	WITHOUT_CLASSIFICATION	0.999972021045565	WITHOUT_CLASSIFICATION	2.797895443496488E-5	IMPLEMENTATION
general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999499081743811	WITHOUT_CLASSIFICATION	5.0091825618965595E-5	IMPLEMENTATION
table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999224605932742	WITHOUT_CLASSIFICATION	7.753940672573869E-5	IMPLEMENTATION
configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9358999702192664	WITHOUT_CLASSIFICATION	0.06410002978073367	IMPLEMENTATION
identifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997934102256464	WITHOUT_CLASSIFICATION	2.0658977435356396E-4	IMPLEMENTATION
persistentidentifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997934102256464	WITHOUT_CLASSIFICATION	2.0658977435356396E-4	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999921010090581	WITHOUT_CLASSIFICATION	7.898990941931179E-6	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999921010090581	WITHOUT_CLASSIFICATION	7.898990941931179E-6	IMPLEMENTATION
fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.999996955779144	WITHOUT_CLASSIFICATION	3.044220856004541E-6	IMPLEMENTATION
we just hit the last position	WITHOUT_CLASSIFICATION	0.9999976092541933	WITHOUT_CLASSIFICATION	2.390745806568499E-6	IMPLEMENTATION
scroll ahead	WITHOUT_CLASSIFICATION	0.9999512991713937	WITHOUT_CLASSIFICATION	4.870082860640771E-5	IMPLEMENTATION
scroll backward	WITHOUT_CLASSIFICATION	0.9999100097277211	WITHOUT_CLASSIFICATION	8.999027227881942E-5	IMPLEMENTATION
we have not yet hit the last result	WITHOUT_CLASSIFICATION	0.9982960191652469	WITHOUT_CLASSIFICATION	0.0017039808347530862	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998785899299091	WITHOUT_CLASSIFICATION	1.2141007009082998E-4	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999825385451334	WITHOUT_CLASSIFICATION	1.7461454866574824E-5	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999410828810176	WITHOUT_CLASSIFICATION	5.891711898238147E-5	IMPLEMENTATION
do this when all the properties are updateable since there is a certain likelihood that the information will already be snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999988625023856	WITHOUT_CLASSIFICATION	1.1374976143894574E-6	IMPLEMENTATION
inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999650233522512	WITHOUT_CLASSIFICATION	3.497664774868047E-5	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998785899299091	WITHOUT_CLASSIFICATION	1.2141007009082998E-4	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999825385451334	WITHOUT_CLASSIFICATION	1.7461454866574824E-5	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999410828810176	WITHOUT_CLASSIFICATION	5.891711898238147E-5	IMPLEMENTATION
caches	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
generators	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
cache region is defined by the root-class in the hierarchy	WITHOUT_CLASSIFICATION	0.9999986623810568	WITHOUT_CLASSIFICATION	1.337618943118398E-6	IMPLEMENTATION
check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999964720044865	WITHOUT_CLASSIFICATION	3.5279955135162285E-6	IMPLEMENTATION
after all persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999931456526275	WITHOUT_CLASSIFICATION	6.854347372492768E-6	IMPLEMENTATION
if we get here it is possible that we have a proxy 'in the way' of the merge map resolution note decided to put this here rather than in the above loop as i was nervous about the performance of the loop-in-loop especially considering this is far more likely the 'edge case'	WITHOUT_CLASSIFICATION	0.9999995837044947	WITHOUT_CLASSIFICATION	4.1629550535202757E-7	IMPLEMENTATION
jndi + serialization	WITHOUT_CLASSIFICATION	0.9998838731734563	WITHOUT_CLASSIFICATION	1.1612682654368089E-4	IMPLEMENTATION
checking for named queries	WITHOUT_CLASSIFICATION	0.9999879250293204	WITHOUT_CLASSIFICATION	1.2074970679570464E-5	IMPLEMENTATION
stats	WITHOUT_CLASSIFICATION	0.9999826063621596	WITHOUT_CLASSIFICATION	1.739363784033562E-5	IMPLEMENTATION
entitynotfounddelegate	WITHOUT_CLASSIFICATION	0.999960806190921	WITHOUT_CLASSIFICATION	3.91938090791539E-5	IMPLEMENTATION
check named hql queries	WITHOUT_CLASSIFICATION	0.9998927364642187	WITHOUT_CLASSIFICATION	1.072635357813093E-4	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999787698738267	WITHOUT_CLASSIFICATION	2.1230126173248307E-5	IMPLEMENTATION
prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9999335637705526	WITHOUT_CLASSIFICATION	6.643622944741242E-5	IMPLEMENTATION
from javax.naming.referenceable	WITHOUT_CLASSIFICATION	0.9999861990870581	WITHOUT_CLASSIFICATION	1.3800912941926438E-5	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999965171692473	WITHOUT_CLASSIFICATION	3.4828307527008644E-6	IMPLEMENTATION
for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999839118208323	WITHOUT_CLASSIFICATION	1.6088179167696154E-5	IMPLEMENTATION
test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.999999870949057	WITHOUT_CLASSIFICATION	1.290509429361287E-7	IMPLEMENTATION
note early exit	WITHOUT_CLASSIFICATION	0.9999825733643387	WITHOUT_CLASSIFICATION	1.7426635661297852E-5	IMPLEMENTATION
for backward-compatability	WITHOUT_CLASSIFICATION	0.999983130593055	WITHOUT_CLASSIFICATION	1.686940694494403E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.9998301984260228	WITHOUT_CLASSIFICATION	1.6980157397714467E-4	IMPLEMENTATION
to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999966536718486	WITHOUT_CLASSIFICATION	3.3463281513916013E-6	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999972773237823	WITHOUT_CLASSIFICATION	2.722676217784651E-6	IMPLEMENTATION
must add to jndi _after_ adding to hashmaps because some jndi servers use serialization	WITHOUT_CLASSIFICATION	0.9991874439480712	WITHOUT_CLASSIFICATION	8.125560519287681E-4	IMPLEMENTATION
make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9995650579926252	WITHOUT_CLASSIFICATION	4.349420073747991E-4	IMPLEMENTATION
for each of the defined parameters make sure its value has been set	WITHOUT_CLASSIFICATION	0.9999819171868566	WITHOUT_CLASSIFICATION	1.8082813143394853E-5	IMPLEMENTATION
we never need to apply locks to the sql	WITHOUT_CLASSIFICATION	0.9885849329220873	WITHOUT_CLASSIFICATION	0.011415067077912708	IMPLEMENTATION
inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999372878480804	WITHOUT_CLASSIFICATION	6.271215191960044E-5	IMPLEMENTATION
deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999367396838982	WITHOUT_CLASSIFICATION	6.326031610187832E-5	IMPLEMENTATION
during deserialization we need to reconnect all proxies and collections to this session as well as the entityentry and collectionentry instances these associations are transient because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.999997706722509	WITHOUT_CLASSIFICATION	2.293277491044395E-6	IMPLEMENTATION
updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999460516596381	WITHOUT_CLASSIFICATION	5.394834036187781E-5	IMPLEMENTATION
loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999390589224494	WITHOUT_CLASSIFICATION	6.0941077550455395E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999675631479759	WITHOUT_CLASSIFICATION	3.2436852024114794E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999675631479759	WITHOUT_CLASSIFICATION	3.2436852024114794E-5	IMPLEMENTATION
first try to load it from the temp pc associated to this ss	WITHOUT_CLASSIFICATION	0.999982076674285	WITHOUT_CLASSIFICATION	1.7923325715088575E-5	IMPLEMENTATION
if the metadata allowed proxy creation and caller did not request forceful eager loading generate a proxy	WITHOUT_CLASSIFICATION	0.9998451979134909	WITHOUT_CLASSIFICATION	1.5480208650914587E-4	IMPLEMENTATION
otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.999556288651314	WITHOUT_CLASSIFICATION	4.4371134868605194E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999973873380681	WITHOUT_CLASSIFICATION	2.6126619318090982E-6	IMPLEMENTATION
no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9998106889258876	WITHOUT_CLASSIFICATION	1.8931107411244497E-4	IMPLEMENTATION
after setting values to object entitymode	WITHOUT_CLASSIFICATION	0.9999991667229242	WITHOUT_CLASSIFICATION	8.332770757129337E-7	IMPLEMENTATION
for ejb3	WITHOUT_CLASSIFICATION	0.9999924390995666	WITHOUT_CLASSIFICATION	7.5609004333476715E-6	IMPLEMENTATION
just ignore	WITHOUT_CLASSIFICATION	0.9999734956374946	WITHOUT_CLASSIFICATION	2.6504362505307702E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9998362129534928	WITHOUT_CLASSIFICATION	1.6378704650733396E-4	IMPLEMENTATION
saveorupdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999852430326161	WITHOUT_CLASSIFICATION	1.4756967383899354E-4	IMPLEMENTATION
update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998524595340673	WITHOUT_CLASSIFICATION	1.4754046593269774E-4	IMPLEMENTATION
lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999852430326161	WITHOUT_CLASSIFICATION	1.4756967383899354E-4	IMPLEMENTATION
persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999852430326161	WITHOUT_CLASSIFICATION	1.4756967383899354E-4	IMPLEMENTATION
persistonflush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999852430326161	WITHOUT_CLASSIFICATION	1.4756967383899354E-4	IMPLEMENTATION
merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999852430326161	WITHOUT_CLASSIFICATION	1.4756967383899354E-4	IMPLEMENTATION
saveorupdatecopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999852430326161	WITHOUT_CLASSIFICATION	1.4756967383899354E-4	IMPLEMENTATION
delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999852430326161	WITHOUT_CLASSIFICATION	1.4756967383899354E-4	IMPLEMENTATION
load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999852430326161	WITHOUT_CLASSIFICATION	1.4756967383899354E-4	IMPLEMENTATION
refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999852430326161	WITHOUT_CLASSIFICATION	1.4756967383899354E-4	IMPLEMENTATION
replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999852430326161	WITHOUT_CLASSIFICATION	1.4756967383899354E-4	IMPLEMENTATION
do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9935763344342713	WITHOUT_CLASSIFICATION	0.006423665565728785	IMPLEMENTATION
this is an internal error of some sort	WITHOUT_CLASSIFICATION	0.9995851553504043	WITHOUT_CLASSIFICATION	4.1484464959571884E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999903178720161	WITHOUT_CLASSIFICATION	9.682127983860812E-6	IMPLEMENTATION
only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999993671517936	WITHOUT_CLASSIFICATION	6.32848206374668E-7	IMPLEMENTATION
if it was previously unreferenced we need to flush in order to get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999999869421703	WITHOUT_CLASSIFICATION	1.3057829680953439E-8	IMPLEMENTATION
not for internal use	WITHOUT_CLASSIFICATION	0.995018479588022	WITHOUT_CLASSIFICATION	0.004981520411977996	IMPLEMENTATION
otherwise we only need to flush if there are in-memory changes to the queried tables	WITHOUT_CLASSIFICATION	0.9999298254913782	WITHOUT_CLASSIFICATION	7.017450862184261E-5	IMPLEMENTATION
might need to run a different filter entirely after the flush because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9981935836180402	WITHOUT_CLASSIFICATION	0.0018064163819597706	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999903178720161	WITHOUT_CLASSIFICATION	9.682127983860812E-6	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999903178720161	WITHOUT_CLASSIFICATION	9.682127983860812E-6	IMPLEMENTATION
if it is initialized see if the underlying instance is contained since we need to account for the fact that it might have been evicted	WITHOUT_CLASSIFICATION	0.9999993844603713	WITHOUT_CLASSIFICATION	6.155396286703781E-7	IMPLEMENTATION
basically just an adapted copy of find(criteriaimpl)	WITHOUT_CLASSIFICATION	0.999995418063236	WITHOUT_CLASSIFICATION	4.581936764027787E-6	IMPLEMENTATION
it is possible for this method to be called during flush processing so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9995637070141546	WITHOUT_CLASSIFICATION	4.3629298584526406E-4	IMPLEMENTATION
nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999954757283508	WITHOUT_CLASSIFICATION	4.524271649210987E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999772037334894	WITHOUT_CLASSIFICATION	2.2796266510569544E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.9998301984260228	WITHOUT_CLASSIFICATION	1.6980157397714467E-4	IMPLEMENTATION
we need to writeobject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9995204048127121	WITHOUT_CLASSIFICATION	4.7959518728785377E-4	IMPLEMENTATION
the old-time stand-by	WITHOUT_CLASSIFICATION	0.9999744408915412	WITHOUT_CLASSIFICATION	2.5559108458809452E-5	IMPLEMENTATION
parameter bind values	WITHOUT_CLASSIFICATION	0.9999959319451439	WITHOUT_CLASSIFICATION	4.068054856000608E-6	IMPLEMENTATION
parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995613553334914	WITHOUT_CLASSIFICATION	4.3864466650855383E-4	IMPLEMENTATION
prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.999998742427481	WITHOUT_CLASSIFICATION	1.2575725189688334E-6	IMPLEMENTATION
execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999462670201916	WITHOUT_CLASSIFICATION	5.373297980831901E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999655060080063	WITHOUT_CLASSIFICATION	3.4493991993683164E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999655060080063	WITHOUT_CLASSIFICATION	3.4493991993683164E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999655060080063	WITHOUT_CLASSIFICATION	3.4493991993683164E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999655060080063	WITHOUT_CLASSIFICATION	3.4493991993683164E-5	IMPLEMENTATION
fieldinterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999364974910333	WITHOUT_CLASSIFICATION	6.350250896665108E-5	IMPLEMENTATION
subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999400725976043	WITHOUT_CLASSIFICATION	5.992740239579855E-5	IMPLEMENTATION
let's assume that there is only one lazy fetch group for now!	WITHOUT_CLASSIFICATION	0.9999920835462918	WITHOUT_CLASSIFICATION	7.916453708148993E-6	IMPLEMENTATION
fieldhandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999364974910333	WITHOUT_CLASSIFICATION	6.350250896665108E-5	IMPLEMENTATION
should not need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9973730836626986	WITHOUT_CLASSIFICATION	0.002626916337301255	IMPLEMENTATION
should probably no-op commit/rollback here at least in jta scenarios	WITHOUT_CLASSIFICATION	0.99998673592417	WITHOUT_CLASSIFICATION	1.3264075829944095E-5	IMPLEMENTATION
base expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999833296140751	WITHOUT_CLASSIFICATION	1.667038592491868E-5	IMPLEMENTATION
various expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999273720491649	WITHOUT_CLASSIFICATION	7.26279508350652E-5	IMPLEMENTATION
explicitly perform no checking	WITHOUT_CLASSIFICATION	0.9999560490508166	WITHOUT_CLASSIFICATION	4.395094918334726E-5	IMPLEMENTATION
used from testsuite	WITHOUT_CLASSIFICATION	0.999993512409808	WITHOUT_CLASSIFICATION	6.487590191980966E-6	IMPLEMENTATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.999999923063627	WITHOUT_CLASSIFICATION	7.69363730477904E-8	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999733485530602	WITHOUT_CLASSIFICATION	2.6651446939803244E-5	IMPLEMENTATION
register synch stats.connect()	WITHOUT_CLASSIFICATION	0.9999137637385619	WITHOUT_CLASSIFICATION	8.623626143814021E-5	IMPLEMENTATION
noncritical swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9997734136619215	WITHOUT_CLASSIFICATION	2.265863380783591E-4	IMPLEMENTATION
calls executebatch()	WITHOUT_CLASSIFICATION	0.9999025526428297	WITHOUT_CLASSIFICATION	9.744735717025926E-5	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9998990835623823	WITHOUT_CLASSIFICATION	1.009164376176283E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9998990835623823	WITHOUT_CLASSIFICATION	1.009164376176283E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9998990835623823	WITHOUT_CLASSIFICATION	1.009164376176283E-4	IMPLEMENTATION
sybase driver (jconnect) throwing npe here in certain cases but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999983096072593	WITHOUT_CLASSIFICATION	1.6903927405560893E-6	IMPLEMENTATION
see explanation above	WITHOUT_CLASSIFICATION	0.9999842548153405	WITHOUT_CLASSIFICATION	1.5745184659513736E-5	IMPLEMENTATION
if we are in the process of releasing no sense checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999999926404568	WITHOUT_CLASSIFICATION	7.359543278994653E-9	IMPLEMENTATION
early exit!!!!	WITHOUT_CLASSIFICATION	0.999973649489005	WITHOUT_CLASSIFICATION	2.6350510994957435E-5	IMPLEMENTATION
resultset impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999387219256092	WITHOUT_CLASSIFICATION	6.127807439083028E-5	IMPLEMENTATION
resultset impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999387219256092	WITHOUT_CLASSIFICATION	6.127807439083028E-5	IMPLEMENTATION
refer to comment in statefulpersistencecontext.addcollection()	WITHOUT_CLASSIFICATION	0.999992518676622	WITHOUT_CLASSIFICATION	7.481323378010119E-6	IMPLEMENTATION
connectionmanager.callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997934102256464	WITHOUT_CLASSIFICATION	2.0658977435356396E-4	IMPLEMENTATION
note success = false because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9996720361641402	WITHOUT_CLASSIFICATION	3.2796383585977887E-4	IMPLEMENTATION
we already have a callback registered either a local (org.hibernate.transaction) transaction has accepted callback responsibilities or we have previously registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999964144813854	WITHOUT_CLASSIFICATION	3.585518614463846E-6	IMPLEMENTATION
the configured transaction-factory says it only supports local callback mode so no sense attempting to register a jta synchronization	WITHOUT_CLASSIFICATION	0.9998830367823025	WITHOUT_CLASSIFICATION	1.1696321769757473E-4	IMPLEMENTATION
transactions marked for rollback-only cause some tm impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999292309206779	WITHOUT_CLASSIFICATION	7.076907932215483E-5	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998442285476732	WITHOUT_CLASSIFICATION	1.5577145232688048E-4	IMPLEMENTATION
postinitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999911290032801	WITHOUT_CLASSIFICATION	8.87099671982424E-6	IMPLEMENTATION
cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999311169242476	WITHOUT_CLASSIFICATION	6.888307575236879E-5	IMPLEMENTATION
todo for 4.0 private static final logger log = loggerfactory.getlogger( sqlstatementlogger.class ) this is the legacy logging 'category'	WITHOUT_CLASSIFICATION	0.8869233117236368	WITHOUT_CLASSIFICATION	0.11307668827636315	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.999902689372155	WITHOUT_CLASSIFICATION	9.731062784500609E-5	IMPLEMENTATION
don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999593937561257	WITHOUT_CLASSIFICATION	4.0606243874293797E-5	IMPLEMENTATION
don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999843959160467	WITHOUT_CLASSIFICATION	1.56040839533166E-5	IMPLEMENTATION
position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999759060212956	WITHOUT_CLASSIFICATION	2.4093978704356766E-5	IMPLEMENTATION
sequentially read the result set in reverse until we recognize a change in the key value. at that point we are pointed at the last physical sequential row for the logical row in which we are interested in processing	WITHOUT_CLASSIFICATION	0.9999999986238209	WITHOUT_CLASSIFICATION	1.376179098484264E-9	IMPLEMENTATION
read backwards until we read past the first physical sequential row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999998640372612	WITHOUT_CLASSIFICATION	1.3596273880077046E-7	IMPLEMENTATION
finally read ahead one row to position result set cursor at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999999692084235	WITHOUT_CLASSIFICATION	3.079157640979145E-8	IMPLEMENTATION
now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999997928726247	WITHOUT_CLASSIFICATION	2.0712737523708427E-7	IMPLEMENTATION
force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9997284000428831	WITHOUT_CLASSIFICATION	2.7159995711691835E-4	IMPLEMENTATION
this is equivalent to the old behavior	WITHOUT_CLASSIFICATION	0.9999788389074087	WITHOUT_CLASSIFICATION	2.1161092591291076E-5	IMPLEMENTATION
if null owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.999999696913809	WITHOUT_CLASSIFICATION	3.030861910600542E-7	IMPLEMENTATION
final string querystring	WITHOUT_CLASSIFICATION	0.9999597503357632	WITHOUT_CLASSIFICATION	4.0249664236743225E-5	IMPLEMENTATION
if it was a reference to self don't need to nullify unless we are using native id generation in which case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999999829239453	WITHOUT_CLASSIFICATION	1.70760546174556E-8	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999897430497161	WITHOUT_CLASSIFICATION	1.0256950283840814E-5	IMPLEMENTATION
in an effort to avoid concurrent-modification-exceptions (from potential recursive calls back through here as a result of the eventual call to persistentcollection#endread) we scan the internal loadingcollections map for matches and store those matches in a temp collection. the temp collection is then used to "drive" the #endread processing.	WITHOUT_CLASSIFICATION	0.9999959696680337	WITHOUT_CLASSIFICATION	4.030331966311292E-6	IMPLEMENTATION
we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999771575157307	WITHOUT_CLASSIFICATION	2.2842484269383206E-5	IMPLEMENTATION
can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999814340751833	WITHOUT_CLASSIFICATION	1.856592481672118E-5	IMPLEMENTATION
first we need to suspend any current jta transaction and obtain a jdbc connection	WITHOUT_CLASSIFICATION	0.9826927841581905	WITHOUT_CLASSIFICATION	0.01730721584180941	IMPLEMENTATION
getresultlist(results)	WITHOUT_CLASSIFICATION	0.999960806190921	WITHOUT_CLASSIFICATION	3.91938090791539E-5	IMPLEMENTATION
if we only returned one entity query by key is more efficient	WITHOUT_CLASSIFICATION	0.9999946804437003	WITHOUT_CLASSIFICATION	5.319556299634501E-6	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9970161792088034	WITHOUT_CLASSIFICATION	0.0029838207911965964	IMPLEMENTATION
handle empty collection	WITHOUT_CLASSIFICATION	0.9925697692697147	WITHOUT_CLASSIFICATION	0.007430230730285252	IMPLEMENTATION
else no collection element but also no owner	WITHOUT_CLASSIFICATION	0.9999978130470881	WITHOUT_CLASSIFICATION	2.186952911834595E-6	IMPLEMENTATION
handle empty collections	WITHOUT_CLASSIFICATION	0.9962075787781716	WITHOUT_CLASSIFICATION	0.0037924212218284625	IMPLEMENTATION
else this is not a collection initializer (and empty collections will be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9998222520651109	WITHOUT_CLASSIFICATION	1.7774793488917686E-4	IMPLEMENTATION
validate() instances of validatable	WITHOUT_CLASSIFICATION	0.9999587725778555	WITHOUT_CLASSIFICATION	4.122742214451346E-5	IMPLEMENTATION
if we know there is exactly 1 row we can skip. it would be great if we could _always_ skip this it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9836124825902214	WITHOUT_CLASSIFICATION	0.01638751740977864	IMPLEMENTATION
remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.999995692133218	WITHOUT_CLASSIFICATION	4.307866782010831E-6	IMPLEMENTATION
null version means the object is in the process of being loaded somewhere else in the resultset	WITHOUT_CLASSIFICATION	0.9999999608298432	WITHOUT_CLASSIFICATION	3.917015673509694E-8	IMPLEMENTATION
problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999724248893183	WITHOUT_CLASSIFICATION	2.757511068175541E-5	IMPLEMENTATION
use the id passed in	WITHOUT_CLASSIFICATION	0.9999662378183186	WITHOUT_CLASSIFICATION	3.376218168143042E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999965125197563	WITHOUT_CLASSIFICATION	3.487480243645962E-6	IMPLEMENTATION
prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999697088689213	WITHOUT_CLASSIFICATION	3.0291131078733542E-5	IMPLEMENTATION
no point doing this if none was requested	WITHOUT_CLASSIFICATION	0.9999997618048795	WITHOUT_CLASSIFICATION	2.3819512045193433E-7	IMPLEMENTATION
if the object is already loaded return the loaded one	WITHOUT_CLASSIFICATION	0.9999997248249222	WITHOUT_CLASSIFICATION	2.751750778583792E-7	IMPLEMENTATION
its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9998624609419786	WITHOUT_CLASSIFICATION	1.375390580214278E-4	IMPLEMENTATION
cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9990947215829302	WITHOUT_CLASSIFICATION	9.052784170697599E-4	IMPLEMENTATION
the load() which takes an entity does not pass an entityname	WITHOUT_CLASSIFICATION	0.9998502410583168	WITHOUT_CLASSIFICATION	1.4975894168323676E-4	IMPLEMENTATION
we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9996725670239098	WITHOUT_CLASSIFICATION	3.2743297609014865E-4	IMPLEMENTATION
look for a proxy	WITHOUT_CLASSIFICATION	0.999975785482478	WITHOUT_CLASSIFICATION	2.421451752204251E-5	IMPLEMENTATION
we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9990927670437968	WITHOUT_CLASSIFICATION	9.072329562032379E-4	IMPLEMENTATION
its the given optional object	WITHOUT_CLASSIFICATION	0.9999944618563176	WITHOUT_CLASSIFICATION	5.538143682364106E-6	IMPLEMENTATION
instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999924173567145	WITHOUT_CLASSIFICATION	7.582643285390245E-6	IMPLEMENTATION
need to hydrate it.	WITHOUT_CLASSIFICATION	0.9969991155577765	WITHOUT_CLASSIFICATION	0.0030008844422233934	IMPLEMENTATION
return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999970476216092	WITHOUT_CLASSIFICATION	2.952378390753375E-6	IMPLEMENTATION
will be ignored using the existing entry instead	WITHOUT_CLASSIFICATION	0.9999659051660534	WITHOUT_CLASSIFICATION	3.409483394661081E-5	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999632657643	WITHOUT_CLASSIFICATION	3.6734235671206777E-8	IMPLEMENTATION
materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999535532310858	WITHOUT_CLASSIFICATION	4.6446768914273854E-5	IMPLEMENTATION
get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999924065628375	WITHOUT_CLASSIFICATION	7.593437162432534E-6	IMPLEMENTATION
ok in normal hibernate usage to delete a detached entity jpa however forbids it thus this is a hook for hem to affect this behavior	WITHOUT_CLASSIFICATION	0.9999992240071215	WITHOUT_CLASSIFICATION	7.759928785130534E-7	IMPLEMENTATION
the entry will be removed after the flush and will no longer override the stale snapshot this is now handled by removeentity() in entitydeleteaction persistencecontext.removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.999992683083676	WITHOUT_CLASSIFICATION	7.316916324066932E-6	IMPLEMENTATION
addinitializedcollection(collection persister id)	WITHOUT_CLASSIFICATION	0.9998989512298176	WITHOUT_CLASSIFICATION	1.010487701823495E-4	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999875761064664	WITHOUT_CLASSIFICATION	1.2423893533664315E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999875761064664	WITHOUT_CLASSIFICATION	1.2423893533664315E-5	IMPLEMENTATION
|| oj.getjoinable().consumescollectionalias()	WITHOUT_CLASSIFICATION	0.9999383363462824	WITHOUT_CLASSIFICATION	6.166365371761102E-5	IMPLEMENTATION
here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9785359034057372	WITHOUT_CLASSIFICATION	0.021464096594262884	IMPLEMENTATION
code to handle subclasses of topclass	WITHOUT_CLASSIFICATION	0.9998876837233148	WITHOUT_CLASSIFICATION	1.1231627668517274E-4	IMPLEMENTATION
woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.999999026939778	WITHOUT_CLASSIFICATION	9.730602219996501E-7	IMPLEMENTATION
we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999505156229092	WITHOUT_CLASSIFICATION	4.948437709077772E-5	IMPLEMENTATION
we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.999914349959712	WITHOUT_CLASSIFICATION	8.565004028797769E-5	IMPLEMENTATION
synchronized to avoid multi-thread access issues defined as method synch to avoid potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9998778835232197	WITHOUT_CLASSIFICATION	1.221164767803718E-4	IMPLEMENTATION
allows various loaders (ok mainly the queryloader ) to check whether scrolling of their result set should be allowed. by default it is allowed.	WITHOUT_CLASSIFICATION	0.9999997063123899	WITHOUT_CLASSIFICATION	2.936876101136429E-7	IMPLEMENTATION
before adding to collection!	WITHOUT_CLASSIFICATION	0.9999574661052678	WITHOUT_CLASSIFICATION	4.253389473221771E-5	IMPLEMENTATION
if the current depth is 0 the root thing being loaded is the many-to-many collection itself. here it is alright to use an inner join	WITHOUT_CLASSIFICATION	0.999999257886749	WITHOUT_CLASSIFICATION	7.421132510862008E-7	IMPLEMENTATION
operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9998954797862472	WITHOUT_CLASSIFICATION	1.0452021375283009E-4	IMPLEMENTATION
simple because we can't have a one-to-one or a collection (or even a property-ref) in a composite-element	WITHOUT_CLASSIFICATION	0.9999949894905721	WITHOUT_CLASSIFICATION	5.010509427981358E-6	IMPLEMENTATION
a composite key	WITHOUT_CLASSIFICATION	0.9999523091464044	WITHOUT_CLASSIFICATION	4.769085359561105E-5	IMPLEMENTATION
if no batch use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999500602369779	WITHOUT_CLASSIFICATION	4.993976302213484E-5	IMPLEMENTATION
it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999836519599353	WITHOUT_CLASSIFICATION	1.6348040064747418E-5	IMPLEMENTATION
needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.8839380579020858	IMPLEMENTATION	0.1160619420979142	WITHOUT_CLASSIFICATION
&& etype.isreferencetoprimarykey()	WITHOUT_CLASSIFICATION	0.9999369156027158	WITHOUT_CLASSIFICATION	6.308439728423686E-5	IMPLEMENTATION
it might still need to apply a collection ordering based on a many-to-many defined order-by	WITHOUT_CLASSIFICATION	0.9197451569559679	WITHOUT_CLASSIFICATION	0.08025484304403209	IMPLEMENTATION
if a composite key use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching todo unnecessary for databases with ansi-style joins	WITHOUT_CLASSIFICATION	0.6309649515729574	WITHOUT_CLASSIFICATION	0.36903504842704254	IMPLEMENTATION
belong to other persister belong to other persister	WITHOUT_CLASSIFICATION	0.9997515556226154	WITHOUT_CLASSIFICATION	2.484443773845131E-4	IMPLEMENTATION
we found it	WITHOUT_CLASSIFICATION	0.9999666440989494	WITHOUT_CLASSIFICATION	3.335590105054616E-5	IMPLEMENTATION
we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999934380204137	WITHOUT_CLASSIFICATION	6.561979586327394E-6	IMPLEMENTATION
disable a join back to this same association	WITHOUT_CLASSIFICATION	0.999667052593663	WITHOUT_CLASSIFICATION	3.3294740633705764E-4	IMPLEMENTATION
note unlike all other loaders this one is not multithreaded or cacheable!!	WITHOUT_CLASSIFICATION	0.9848731157607334	WITHOUT_CLASSIFICATION	0.01512688423926667	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9997111054365888	WITHOUT_CLASSIFICATION	2.8889456341122267E-4	IMPLEMENTATION
root entity comes last	WITHOUT_CLASSIFICATION	0.9999798863190702	WITHOUT_CLASSIFICATION	2.011368092973987E-5	IMPLEMENTATION
deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.999949161999646	WITHOUT_CLASSIFICATION	5.0838000353912236E-5	IMPLEMENTATION
alias may be null early exit	WITHOUT_CLASSIFICATION	0.9999958002691792	WITHOUT_CLASSIFICATION	4.1997308207795526E-6	IMPLEMENTATION
if it is a compound path	WITHOUT_CLASSIFICATION	0.9999980290748605	WITHOUT_CLASSIFICATION	1.9709251395101674E-6	IMPLEMENTATION
otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9995729671919511	WITHOUT_CLASSIFICATION	4.2703280804886457E-4	IMPLEMENTATION
if its the root criteria we are done	WITHOUT_CLASSIFICATION	0.9999980092865624	WITHOUT_CLASSIFICATION	1.99071343760152E-6	IMPLEMENTATION
otherwise recurse	WITHOUT_CLASSIFICATION	0.9994543096908863	WITHOUT_CLASSIFICATION	5.456903091136568E-4	IMPLEMENTATION
the criteria instance	WITHOUT_CLASSIFICATION	0.9999895557929226	WITHOUT_CLASSIFICATION	1.0444207077422255E-5	IMPLEMENTATION
the entity name	WITHOUT_CLASSIFICATION	0.9999775527015831	WITHOUT_CLASSIFICATION	2.2447298416901003E-5	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9998290254948873	WITHOUT_CLASSIFICATION	1.7097450511284495E-4	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9998290254948873	WITHOUT_CLASSIFICATION	1.7097450511284495E-4	IMPLEMENTATION
it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999964080300259	WITHOUT_CLASSIFICATION	3.5919699741272847E-6	IMPLEMENTATION
should never happen i think	WITHOUT_CLASSIFICATION	0.9955778211943715	WITHOUT_CLASSIFICATION	0.004422178805628354	IMPLEMENTATION
detect discriminator values	WITHOUT_CLASSIFICATION	0.9999833650847234	WITHOUT_CLASSIFICATION	1.663491527652146E-5	IMPLEMENTATION
convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999196314554083	WITHOUT_CLASSIFICATION	8.036854459169242E-5	IMPLEMENTATION
and the qualifier is not the alias of this criteria -> check to see if we belong to some criteria other than the one that created us	WITHOUT_CLASSIFICATION	0.9998508516451604	WITHOUT_CLASSIFICATION	1.4914835483966922E-4	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999920299095244	WITHOUT_CLASSIFICATION	7.970090475468375E-6	IMPLEMENTATION
otherwise this is an ordinary value.	WITHOUT_CLASSIFICATION	0.999940957718236	WITHOUT_CLASSIFICATION	5.904228176389971E-5	IMPLEMENTATION
currently not cachable if autodiscover types is in effect (e.g. "select ")	WITHOUT_CLASSIFICATION	0.9999905628865645	WITHOUT_CLASSIFICATION	9.437113435431583E-6	IMPLEMENTATION
private final string[] sqlaliases private final string[] sqlaliassuffixes	WITHOUT_CLASSIFICATION	0.9999746710618252	WITHOUT_CLASSIFICATION	2.5328938174694753E-5	IMPLEMENTATION
this is only needed (afaict) for resulttransformer processing	WITHOUT_CLASSIFICATION	0.8502824619052678	WITHOUT_CLASSIFICATION	0.14971753809473218	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999998411949933	WITHOUT_CLASSIFICATION	1.5880500665630608E-7	IMPLEMENTATION
build an array with indices equal to the total number of actual returns in the result hibernate will return for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999994354484023	WITHOUT_CLASSIFICATION	5.645515975953802E-7	IMPLEMENTATION
replace {.} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9963609466367618	WITHOUT_CLASSIFICATION	0.003639053363238245	IMPLEMENTATION
no additional open braces found in the string append the rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.999994086296782	WITHOUT_CLASSIFICATION	5.913703218002983E-6	IMPLEMENTATION
apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.999862703504489	WITHOUT_CLASSIFICATION	1.3729649551094098E-4	IMPLEMENTATION
it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999935393462556	WITHOUT_CLASSIFICATION	6.460653744330592E-6	IMPLEMENTATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9285177576235378	IMPLEMENTATION	0.07148224237646215	WITHOUT_CLASSIFICATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9285177576235378	IMPLEMENTATION	0.07148224237646215	WITHOUT_CLASSIFICATION
the current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999599078501392	WITHOUT_CLASSIFICATION	4.009214986087212E-5	IMPLEMENTATION
it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999976649573766	WITHOUT_CLASSIFICATION	2.3350426233350407E-6	IMPLEMENTATION
possibly handle something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9998181235143325	WITHOUT_CLASSIFICATION	1.8187648566740552E-4	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999604555896395	WITHOUT_CLASSIFICATION	3.9544410360519965E-5	IMPLEMENTATION
private final list persisters = new arraylist()	WITHOUT_CLASSIFICATION	0.9999933074052118	WITHOUT_CLASSIFICATION	6.692594788143915E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999733485530602	WITHOUT_CLASSIFICATION	2.6651446939803244E-5	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999898702353346	WITHOUT_CLASSIFICATION	1.012976466548162E-5	IMPLEMENTATION
private final list scalartypes = new arraylist() private final list scalarcolumnaliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999933074052118	WITHOUT_CLASSIFICATION	6.692594788143915E-6	IMPLEMENTATION
now process the returns	WITHOUT_CLASSIFICATION	0.9999663111810808	WITHOUT_CLASSIFICATION	3.368881891913412E-5	IMPLEMENTATION
private list collectionowneraliases = new arraylist() private list collectionaliases = new arraylist() private list collectionpersisters = new arraylist() private list collectionresults = new arraylist()	WITHOUT_CLASSIFICATION	0.9999950885333038	WITHOUT_CLASSIFICATION	4.911466696217003E-6	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999531598676991	WITHOUT_CLASSIFICATION	4.684013230081794E-5	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999531598676991	WITHOUT_CLASSIFICATION	4.684013230081794E-5	IMPLEMENTATION
make sure the owner alias is known	WITHOUT_CLASSIFICATION	0.9999775611049014	WITHOUT_CLASSIFICATION	2.243889509849074E-5	IMPLEMENTATION
first break down the returns into maps keyed by alias so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999558580467458	WITHOUT_CLASSIFICATION	4.414195325416781E-5	IMPLEMENTATION
scalarcolumnaliases.add( typereturn.getcolumnalias() ) scalartypes.add( typereturn.gettype() )	WITHOUT_CLASSIFICATION	0.999901522788762	WITHOUT_CLASSIFICATION	9.847721123802691E-5	IMPLEMENTATION
if this return's alias has not been processed yet do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9998535922644263	WITHOUT_CLASSIFICATION	1.4640773557370178E-4	IMPLEMENTATION
collectionowneraliases.add( owneralias )	WITHOUT_CLASSIFICATION	0.999901522788762	WITHOUT_CLASSIFICATION	9.847721123802691E-5	IMPLEMENTATION
for merging of versioned entities we consider the version having been changed only when 1) the two version values are different and 2) the target actually represents database state! this second condition is a special case which allows an entity to be merged during the same transaction (though during a seperate operation) in which it was originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999999999878592	WITHOUT_CLASSIFICATION	1.214089270813568E-11	IMPLEMENTATION
this is the second pass through on a merge op so here we limit the replacement to associations types (value types were already replaced during the first pass)	WITHOUT_CLASSIFICATION	0.9998486805372542	WITHOUT_CLASSIFICATION	1.5131946274592276E-4	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999930123126908	WITHOUT_CLASSIFICATION	6.987687309224519E-6	IMPLEMENTATION
cascade-save to collections after the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999975370179889	WITHOUT_CLASSIFICATION	2.462982011225534E-6	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9990430306524603	WITHOUT_CLASSIFICATION	9.569693475398263E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999390742794663	WITHOUT_CLASSIFICATION	6.092572053364992E-5	IMPLEMENTATION
currently only the hibernate-supplied dbtimestamptype is supported here	WITHOUT_CLASSIFICATION	0.9999990679733681	WITHOUT_CLASSIFICATION	9.320266317425799E-7	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999380357728038	WITHOUT_CLASSIFICATION	6.196422719615535E-5	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9993173904057243	WITHOUT_CLASSIFICATION	6.826095942757043E-4	IMPLEMENTATION
not so sure this is even valid subtree. but if it was it'd represent two unrelated table references	WITHOUT_CLASSIFICATION	0.9999996742123326	WITHOUT_CLASSIFICATION	3.257876673992004E-7	IMPLEMENTATION
(not (gt a b) ) => (le a b)	WITHOUT_CLASSIFICATION	0.999988814948291	WITHOUT_CLASSIFICATION	1.1185051709049652E-5	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.999988390363083	WITHOUT_CLASSIFICATION	1.1609636917099675E-5	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998435465283537	WITHOUT_CLASSIFICATION	1.5645347164631673E-4	IMPLEMENTATION
sqlresulttypes = selectclause.getsqlresulttypes()	WITHOUT_CLASSIFICATION	0.9999027721065928	WITHOUT_CLASSIFICATION	9.722789340719718E-5	IMPLEMENTATION
by default	WITHOUT_CLASSIFICATION	0.9999991007027358	WITHOUT_CLASSIFICATION	8.992972642363275E-7	IMPLEMENTATION
this is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999971671940477	WITHOUT_CLASSIFICATION	2.832805952254059E-6	IMPLEMENTATION
-- loader implementation --	WITHOUT_CLASSIFICATION	0.9999352581763378	WITHOUT_CLASSIFICATION	6.474182366225255E-5	IMPLEMENTATION
-- loader overrides --	WITHOUT_CLASSIFICATION	0.9999819246820123	WITHOUT_CLASSIFICATION	1.807531798772512E-5	IMPLEMENTATION
(not (is_null a b) ) => (is_not_null a b)	WITHOUT_CLASSIFICATION	0.9999817165978317	WITHOUT_CLASSIFICATION	1.82834021682234E-5	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9992072420988081	WITHOUT_CLASSIFICATION	7.927579011920031E-4	IMPLEMENTATION
meant to handle dynamic instantiation queries	WITHOUT_CLASSIFICATION	0.9997942627777103	WITHOUT_CLASSIFICATION	2.0573722228958612E-4	IMPLEMENTATION
--- query translator methods ---	WITHOUT_CLASSIFICATION	0.9999634770925002	WITHOUT_CLASSIFICATION	3.652290749981586E-5	IMPLEMENTATION
-- implementation private methods --	WITHOUT_CLASSIFICATION	0.9999727492085843	WITHOUT_CLASSIFICATION	2.7250791415801144E-5	IMPLEMENTATION
deduplicate unique constraints sharing the same columns this is needed by hibernate annotations since it creates automagically unique constraints for the user	WITHOUT_CLASSIFICATION	0.9976928357713801	WITHOUT_CLASSIFICATION	0.0023071642286198978	IMPLEMENTATION
try to find out the name of the primary key to create it as identity if the identitygenerator is used	WITHOUT_CLASSIFICATION	0.9999998028180167	WITHOUT_CLASSIFICATION	1.971819833035152E-7	IMPLEMENTATION
to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9992490166858043	WITHOUT_CLASSIFICATION	7.509833141955927E-4	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999998104322787	WITHOUT_CLASSIFICATION	1.895677212665876E-7	IMPLEMENTATION
used also for generation of fk names!	WITHOUT_CLASSIFICATION	0.9999854896889449	WITHOUT_CLASSIFICATION	1.4510311055032046E-5	IMPLEMENTATION
usually useless	WITHOUT_CLASSIFICATION	0.9999550370087058	WITHOUT_CLASSIFICATION	4.496299129424649E-5	IMPLEMENTATION
added this caching as i noticed that gettype() is being called multiple times	WITHOUT_CLASSIFICATION	0.9999238905344628	WITHOUT_CLASSIFICATION	7.610946553719748E-5	IMPLEMENTATION
do not add unique constraint on db not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9880586150352898	WITHOUT_CLASSIFICATION	0.011941384964710273	IMPLEMENTATION
for backward compatibility disable this	WITHOUT_CLASSIFICATION	0.999807729648894	WITHOUT_CLASSIFICATION	1.922703511060217E-4	IMPLEMENTATION
may be final may be final may be final	WITHOUT_CLASSIFICATION	0.9998769461596785	WITHOUT_CLASSIFICATION	1.230538403214535E-4	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9998967962827578	WITHOUT_CLASSIFICATION	1.0320371724218624E-4	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9998967962827578	WITHOUT_CLASSIFICATION	1.0320371724218624E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999936765615626	WITHOUT_CLASSIFICATION	6.323438437469184E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999847030695467	WITHOUT_CLASSIFICATION	1.5296930453346234E-5	IMPLEMENTATION
the root of the incoming property path matched one of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.999811695563851	WITHOUT_CLASSIFICATION	1.883044361489725E-4	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999827337086784	WITHOUT_CLASSIFICATION	1.726629132159614E-5	IMPLEMENTATION
flat recursive algorithm	WITHOUT_CLASSIFICATION	0.999920514051503	WITHOUT_CLASSIFICATION	7.948594849700739E-5	IMPLEMENTATION
an identifier mapper => getkey will be included in the getnonduplicatedpropertyiterator() and checked later so it needs to be excluded	WITHOUT_CLASSIFICATION	0.999999496693731	WITHOUT_CLASSIFICATION	5.033062690373132E-7	IMPLEMENTATION
if the hibernate-mapping did not specify a schema/catalog use the defaults specified by properties - but note that if the schema/catalog were specified in hibernate-mapping or as params they will already be initialized and will override the values set here (they are in identifiergeneratorproperties)	WITHOUT_CLASSIFICATION	0.9999989304906439	WITHOUT_CLASSIFICATION	1.0695093561457677E-6	IMPLEMENTATION
pass the entity-name if not a collection-id	WITHOUT_CLASSIFICATION	0.9993446935274662	WITHOUT_CLASSIFICATION	6.553064725337038E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999936765615626	WITHOUT_CLASSIFICATION	6.323438437469184E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999847030695467	WITHOUT_CLASSIFICATION	1.5296930453346234E-5	IMPLEMENTATION
pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9995845933172397	WITHOUT_CLASSIFICATION	4.1540668276030267E-4	IMPLEMENTATION
needed to satisfy keyvalue	WITHOUT_CLASSIFICATION	0.5958906320772935	WITHOUT_CLASSIFICATION	0.40410936792270635	IMPLEMENTATION
empty means no scoping	WITHOUT_CLASSIFICATION	0.9998374408514801	WITHOUT_CLASSIFICATION	1.6255914851989254E-4	IMPLEMENTATION
index should be last column listed	WITHOUT_CLASSIFICATION	0.9998778976346947	WITHOUT_CLASSIFICATION	1.2210236530523722E-4	IMPLEMENTATION
if it is a formula index use the element columns in the pk	WITHOUT_CLASSIFICATION	0.9999999115558518	WITHOUT_CLASSIFICATION	8.844414822504294E-8	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns	WITHOUT_CLASSIFICATION	0.9993203623891946	WITHOUT_CLASSIFICATION	6.796376108053302E-4	IMPLEMENTATION
arraylist list = new arraylist()list.addall( getkey().getconstraintcolumns() )list.addall( getindex().getconstraintcolumns() )getcollectiontable().createuniquekey(list)	WITHOUT_CLASSIFICATION	0.9999838181860857	WITHOUT_CLASSIFICATION	1.618181391419845E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999594355240138	WITHOUT_CLASSIFICATION	4.056447598626448E-5	IMPLEMENTATION
no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999967107623436	WITHOUT_CLASSIFICATION	3.289237656293312E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.5044337552655372	WITHOUT_CLASSIFICATION	0.49556624473446276	IMPLEMENTATION
the case of a foreign key to something other than the pk is handled in createpropertyrefconstraints	WITHOUT_CLASSIFICATION	0.9999962242329774	WITHOUT_CLASSIFICATION	3.775767022636828E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.5044337552655372	WITHOUT_CLASSIFICATION	0.49556624473446276	IMPLEMENTATION
if the property mapping consists of all formulas make it non-updateable	WITHOUT_CLASSIFICATION	0.9999355564194458	WITHOUT_CLASSIFICATION	6.44435805542653E-5	IMPLEMENTATION
columnupdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999383363462824	WITHOUT_CLASSIFICATION	6.166365371761102E-5	IMPLEMENTATION
if the property mapping consists of all formulas make it insertable	WITHOUT_CLASSIFICATION	0.9999355564194458	WITHOUT_CLASSIFICATION	6.44435805542653E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999734620127412	WITHOUT_CLASSIFICATION	2.6537987258844985E-5	IMPLEMENTATION
expected type is intrinsic here	WITHOUT_CLASSIFICATION	0.9999662903734345	WITHOUT_CLASSIFICATION	3.370962656542741E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999594355240138	WITHOUT_CLASSIFICATION	4.056447598626448E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999594355240138	WITHOUT_CLASSIFICATION	4.056447598626448E-5	IMPLEMENTATION
return memberpersister.getpropertytype(propertyname)	WITHOUT_CLASSIFICATION	0.9999604959922624	WITHOUT_CLASSIFICATION	3.9504007737540473E-5	IMPLEMENTATION
return memberpersister.tocolumns(alias propertyname)	WITHOUT_CLASSIFICATION	0.9999605605353334	WITHOUT_CLASSIFICATION	3.943946466659258E-5	IMPLEMENTATION
return memberpersister.gettype()	WITHOUT_CLASSIFICATION	0.9999604959922624	WITHOUT_CLASSIFICATION	3.9504007737540473E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999470924166712	WITHOUT_CLASSIFICATION	5.2907583328784385E-5	IMPLEMENTATION
return !isonetomany()	WITHOUT_CLASSIFICATION	0.9999758328343056	WITHOUT_CLASSIFICATION	2.4167165694417033E-5	IMPLEMENTATION
instanceof associationtype	WITHOUT_CLASSIFICATION	0.9999613473909986	WITHOUT_CLASSIFICATION	3.8652609001346445E-5	IMPLEMENTATION
we need to determine the best way to know that two joinables represent a single many-to-many	WITHOUT_CLASSIFICATION	0.9708868069248918	WITHOUT_CLASSIFICATION	0.0291131930751082	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9999583200085275	WITHOUT_CLASSIFICATION	4.167999147242995E-5	IMPLEMENTATION
public boolean issubselectloadable()	WITHOUT_CLASSIFICATION	0.999995571328165	WITHOUT_CLASSIFICATION	4.428671835015603E-6	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999862220061467	WITHOUT_CLASSIFICATION	1.3777993853244782E-5	IMPLEMENTATION
columns	WITHOUT_CLASSIFICATION	0.9999964786104695	WITHOUT_CLASSIFICATION	3.5213895305781985E-6	IMPLEMENTATION
sql statements	WITHOUT_CLASSIFICATION	0.999979907504159	WITHOUT_CLASSIFICATION	2.0092495841081864E-5	IMPLEMENTATION
extra information about the element type	WITHOUT_CLASSIFICATION	0.9999972689414758	WITHOUT_CLASSIFICATION	2.731058524134332E-6	IMPLEMENTATION
types	WITHOUT_CLASSIFICATION	0.9999517280945714	WITHOUT_CLASSIFICATION	4.827190542853437E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999936765615626	WITHOUT_CLASSIFICATION	6.323438437469184E-6	IMPLEMENTATION
private final string unquotedidentifiercolumnname	WITHOUT_CLASSIFICATION	0.9999805113138205	WITHOUT_CLASSIFICATION	1.9488686179514183E-5	IMPLEMENTATION
dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999816474325055	WITHOUT_CLASSIFICATION	1.835256749445854E-5	IMPLEMENTATION
dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999761419779367	WITHOUT_CLASSIFICATION	2.3858022063289334E-5	IMPLEMENTATION
nativesql collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999219426855952	WITHOUT_CLASSIFICATION	7.805731440480695E-5	IMPLEMENTATION
unquotedkeycolumnnames = stringhelper.unquote(keycolumnaliases)	WITHOUT_CLASSIFICATION	0.9999027721065928	WITHOUT_CLASSIFICATION	9.722789340719718E-5	IMPLEMENTATION
element	WITHOUT_CLASSIFICATION	0.9999930740476655	WITHOUT_CLASSIFICATION	6.925952334626153E-6	IMPLEMENTATION
nativesql collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999607607226668	WITHOUT_CLASSIFICATION	3.923927733312059E-5	IMPLEMENTATION
index and row select	WITHOUT_CLASSIFICATION	0.9999159327975696	WITHOUT_CLASSIFICATION	8.406720243038701E-5	IMPLEMENTATION
nativesql collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9997009897850966	WITHOUT_CLASSIFICATION	2.9901021490342107E-4	IMPLEMENTATION
unquotedidentifiercolumnname = identifiercolumnalias	WITHOUT_CLASSIFICATION	0.9999027721065928	WITHOUT_CLASSIFICATION	9.722789340719718E-5	IMPLEMENTATION
unquotedidentifiercolumnname = null	WITHOUT_CLASSIFICATION	0.9999697741386112	WITHOUT_CLASSIFICATION	3.022586138887662E-5	IMPLEMENTATION
generate the sql	WITHOUT_CLASSIFICATION	0.9999918472269587	WITHOUT_CLASSIFICATION	8.152773041435785E-6	IMPLEMENTATION
for non-arrays we don't need to know the element class elementtype.returnedclass()	WITHOUT_CLASSIFICATION	0.9980332861191766	WITHOUT_CLASSIFICATION	0.001966713880823429	IMPLEMENTATION
not all classpersisters implement propertymapping!	WITHOUT_CLASSIFICATION	0.6546369603236839	WITHOUT_CLASSIFICATION	0.34536303967631604	IMPLEMENTATION
handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9995244181528019	WITHOUT_CLASSIFICATION	4.7558184719818914E-4	IMPLEMENTATION
handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9997952539281111	WITHOUT_CLASSIFICATION	2.047460718889519E-4	IMPLEMENTATION
if there is a user-specified loader return that todo filters!?	WITHOUT_CLASSIFICATION	0.9649165096924531	WITHOUT_CLASSIFICATION	0.035083490307546865	IMPLEMENTATION
take care of any entities that might have been evicted!	WITHOUT_CLASSIFICATION	0.9999378126845367	WITHOUT_CLASSIFICATION	6.218731546325175E-5	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9999583200085275	WITHOUT_CLASSIFICATION	4.167999147242995E-5	IMPLEMENTATION
run a subquery loader	WITHOUT_CLASSIFICATION	0.9999815917158071	WITHOUT_CLASSIFICATION	1.8408284192951877E-5	IMPLEMENTATION
needed by arrays	WITHOUT_CLASSIFICATION	0.7693822895247303	WITHOUT_CLASSIFICATION	0.23061771047526972	IMPLEMENTATION
todo something with formulas	WITHOUT_CLASSIFICATION	0.5486647525156189	IMPLEMENTATION	0.4513352474843812	WITHOUT_CLASSIFICATION
an assertion	WITHOUT_CLASSIFICATION	0.9999895415433787	WITHOUT_CLASSIFICATION	1.0458456621302212E-5	IMPLEMENTATION
remove all the old entries	WITHOUT_CLASSIFICATION	0.999997708261116	WITHOUT_CLASSIFICATION	2.2917388839280145E-6	IMPLEMENTATION
create all the new entries	WITHOUT_CLASSIFICATION	0.9999879804067621	WITHOUT_CLASSIFICATION	1.2019593237947052E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999470924166712	WITHOUT_CLASSIFICATION	5.2907583328784385E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999470924166712	WITHOUT_CLASSIFICATION	5.2907583328784385E-5	IMPLEMENTATION
delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999286733485645	WITHOUT_CLASSIFICATION	7.132665143548015E-5	IMPLEMENTATION
insert all the new entries	WITHOUT_CLASSIFICATION	0.9999898915776251	WITHOUT_CLASSIFICATION	1.0108422374927641E-5	IMPLEMENTATION
==elementtype ??	WITHOUT_CLASSIFICATION	0.9992906671440571	WITHOUT_CLASSIFICATION	7.093328559428879E-4	IMPLEMENTATION
update all the modified entries	WITHOUT_CLASSIFICATION	0.9999702769264557	WITHOUT_CLASSIFICATION	2.972307354433131E-5	IMPLEMENTATION
identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9996940758280414	WITHOUT_CLASSIFICATION	3.059241719586431E-4	IMPLEMENTATION
update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999503842822576	WITHOUT_CLASSIFICATION	4.961571774233866E-5	IMPLEMENTATION
will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999890822062514	WITHOUT_CLASSIFICATION	1.0917793748677753E-5	IMPLEMENTATION
now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.999999882784719	WITHOUT_CLASSIFICATION	1.1721528106184196E-7	IMPLEMENTATION
buf.append( selectfragment( lhsalias "" ) )ignore suffix for collection columns!	WITHOUT_CLASSIFICATION	0.9999522288408855	WITHOUT_CLASSIFICATION	4.777115911437756E-5	IMPLEMENTATION
use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999940598976435	WITHOUT_CLASSIFICATION	5.940102356615669E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999960555572891	WITHOUT_CLASSIFICATION	3.944442710966437E-6	IMPLEMENTATION
private final string roottablename	WITHOUT_CLASSIFICATION	0.9999805113138205	WITHOUT_CLASSIFICATION	1.9488686179514183E-5	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9999123600857722	WITHOUT_CLASSIFICATION	8.763991422776605E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999936765615626	WITHOUT_CLASSIFICATION	6.323438437469184E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999960555572891	WITHOUT_CLASSIFICATION	3.944442710966437E-6	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999926890428599	WITHOUT_CLASSIFICATION	7.310957140106328E-6	IMPLEMENTATION
this could also just be true all the time	WITHOUT_CLASSIFICATION	0.9999794113724783	WITHOUT_CLASSIFICATION	2.058862752173811E-5	IMPLEMENTATION
chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999858132117423	WITHOUT_CLASSIFICATION	1.4186788257786983E-5	IMPLEMENTATION
todo check this.	WITHOUT_CLASSIFICATION	0.6064521800504415	IMPLEMENTATION	0.3935478199495585	WITHOUT_CLASSIFICATION
initialization	WITHOUT_CLASSIFICATION	0.9999123600857722	WITHOUT_CLASSIFICATION	8.763991422776605E-5	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9999366376566062	WITHOUT_CLASSIFICATION	6.336234339381629E-5	IMPLEMENTATION
the closure of all properties in the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999981440078475	WITHOUT_CLASSIFICATION	1.8559921524776233E-6	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999996869093633	WITHOUT_CLASSIFICATION	3.1309063675680905E-7	IMPLEMENTATION
subclass discrimination works by assigning particular values to certain combinations of null primary key values in the outer join using an sql case	WITHOUT_CLASSIFICATION	0.9999999998839537	WITHOUT_CLASSIFICATION	1.1604632238938847E-10	IMPLEMENTATION
multitables	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999936765615626	WITHOUT_CLASSIFICATION	6.323438437469184E-6	IMPLEMENTATION
subclass closure properties	WITHOUT_CLASSIFICATION	0.9999336577750713	WITHOUT_CLASSIFICATION	6.634222492878419E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.999991663582795	WITHOUT_CLASSIFICATION	8.33641720505505E-6	IMPLEMENTATION
( (column) model.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999685683452593	WITHOUT_CLASSIFICATION	3.143165474081628E-5	IMPLEMENTATION
( (column) sc.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999685683452593	WITHOUT_CLASSIFICATION	3.143165474081628E-5	IMPLEMENTATION
don't need subclass tables because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999398309916381	WITHOUT_CLASSIFICATION	6.0169008362020494E-5	IMPLEMENTATION
special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9919450320338925	WITHOUT_CLASSIFICATION	0.008054967966107536	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999960555572891	WITHOUT_CLASSIFICATION	3.944442710966437E-6	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9999366376566062	WITHOUT_CLASSIFICATION	6.336234339381629E-5	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999996869093633	WITHOUT_CLASSIFICATION	3.1309063675680905E-7	IMPLEMENTATION
get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999790594683502	WITHOUT_CLASSIFICATION	2.0940531649829984E-5	IMPLEMENTATION
now look up the object we are really interested in! (this lets us correctly handle proxies and multi-row or multi-column queries)	WITHOUT_CLASSIFICATION	0.999993131652132	WITHOUT_CLASSIFICATION	6.868347868020044E-6	IMPLEMENTATION
discriminator column	WITHOUT_CLASSIFICATION	0.9999286689001214	WITHOUT_CLASSIFICATION	7.133109987850119E-5	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9999123600857722	WITHOUT_CLASSIFICATION	8.763991422776605E-5	IMPLEMENTATION
private final map propertytablenumbersbyname = new hashmap()	WITHOUT_CLASSIFICATION	0.9999698787795734	WITHOUT_CLASSIFICATION	3.01212204265514E-5	IMPLEMENTATION
class + table	WITHOUT_CLASSIFICATION	0.9999904287632744	WITHOUT_CLASSIFICATION	9.571236725705775E-6	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999462762013848	WITHOUT_CLASSIFICATION	5.372379861518276E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999650913077701	WITHOUT_CLASSIFICATION	3.4908692229934966E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.999991663582795	WITHOUT_CLASSIFICATION	8.33641720505505E-6	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999926890428599	WITHOUT_CLASSIFICATION	7.310957140106328E-6	IMPLEMENTATION
joins	WITHOUT_CLASSIFICATION	0.9999824364752385	WITHOUT_CLASSIFICATION	1.7563524761436895E-5	IMPLEMENTATION
propertytablenumbersbyname.put( prop.getname() join )	WITHOUT_CLASSIFICATION	0.9999221471087634	WITHOUT_CLASSIFICATION	7.7852891236647E-5	IMPLEMENTATION
access cached sql	WITHOUT_CLASSIFICATION	0.9999449765467625	WITHOUT_CLASSIFICATION	5.502345323755002E-5	IMPLEMENTATION
figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9985797246471944	WITHOUT_CLASSIFICATION	0.001420275352805666	IMPLEMENTATION
figure out which columns are needed	WITHOUT_CLASSIFICATION	0.8892947446786542	WITHOUT_CLASSIFICATION	0.11070525532134581	IMPLEMENTATION
figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.6168925509997117	WITHOUT_CLASSIFICATION	0.3831074490002883	IMPLEMENTATION
render the sql	WITHOUT_CLASSIFICATION	0.9999870261558828	WITHOUT_CLASSIFICATION	1.2973844117149784E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999734620127412	WITHOUT_CLASSIFICATION	2.6537987258844985E-5	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999885745539229	WITHOUT_CLASSIFICATION	1.1425446077144408E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
the optional sql string defined in the where attribute	WITHOUT_CLASSIFICATION	0.999997473811476	WITHOUT_CLASSIFICATION	2.5261885240721324E-6	IMPLEMENTATION
information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999907180311619	WITHOUT_CLASSIFICATION	9.28196883811875E-6	IMPLEMENTATION
information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999991621289734	WITHOUT_CLASSIFICATION	8.378710264321238E-7	IMPLEMENTATION
information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999995783687717	WITHOUT_CLASSIFICATION	4.216312281666264E-7	IMPLEMENTATION
dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999695054310821	WITHOUT_CLASSIFICATION	3.0494568917823912E-5	IMPLEMENTATION
sql strings	WITHOUT_CLASSIFICATION	0.9999544158016883	WITHOUT_CLASSIFICATION	4.5584198311649995E-5	IMPLEMENTATION
for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999959784918975	WITHOUT_CLASSIFICATION	4.021508102473144E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999650913077701	WITHOUT_CLASSIFICATION	3.4908692229934966E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
identifier	WITHOUT_CLASSIFICATION	0.9999803937274027	WITHOUT_CLASSIFICATION	1.9606272597339146E-5	IMPLEMENTATION
version	WITHOUT_CLASSIFICATION	0.9999647224794572	WITHOUT_CLASSIFICATION	3.5277520542717215E-5	IMPLEMENTATION
where string	WITHOUT_CLASSIFICATION	0.9998844465007688	WITHOUT_CLASSIFICATION	1.155534992312076E-4	IMPLEMENTATION
subclass property closure	WITHOUT_CLASSIFICATION	0.9999631767331992	WITHOUT_CLASSIFICATION	3.682326680077572E-5	IMPLEMENTATION
before add -)	WITHOUT_CLASSIFICATION	0.9999610279402228	WITHOUT_CLASSIFICATION	3.8972059777310454E-5	IMPLEMENTATION
handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999568812262059	WITHOUT_CLASSIFICATION	4.3118773794132207E-5	IMPLEMENTATION
only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999791145702805	WITHOUT_CLASSIFICATION	2.0885429719477047E-5	IMPLEMENTATION
note early exit here	WITHOUT_CLASSIFICATION	0.9999502731459399	WITHOUT_CLASSIFICATION	4.9726854060208465E-5	IMPLEMENTATION
object have been loaded with setreadonly(true) hhh-2236	WITHOUT_CLASSIFICATION	0.9999644465869301	WITHOUT_CLASSIFICATION	3.555341307004824E-5	IMPLEMENTATION
note this assumes something about how propertyselectfragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9898425117313786	WITHOUT_CLASSIFICATION	0.010157488268621425	IMPLEMENTATION
strip leading " "	WITHOUT_CLASSIFICATION	0.9999319523624549	WITHOUT_CLASSIFICATION	6.804763754503584E-5	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999998441741741	WITHOUT_CLASSIFICATION	1.558258258542266E-7	IMPLEMENTATION
otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9993575785595115	WITHOUT_CLASSIFICATION	6.424214404885946E-4	IMPLEMENTATION
null owner ok??	WITHOUT_CLASSIFICATION	0.9999911105167673	WITHOUT_CLASSIFICATION	8.88948323270828E-6	IMPLEMENTATION
null sql means that the only lazy properties are shared pk one-to-one associations which are handled differently in the type#nullsafeget code	WITHOUT_CLASSIFICATION	0.9999998244716259	WITHOUT_CLASSIFICATION	1.7552837408465582E-7	IMPLEMENTATION
create a new from node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999975030207882	WITHOUT_CLASSIFICATION	2.496979211856192E-6	IMPLEMENTATION
the difficulty here is exactly what do we update in order to force the version to be incremented in the db	WITHOUT_CLASSIFICATION	0.9995882167208199	WITHOUT_CLASSIFICATION	4.117832791801061E-4	IMPLEMENTATION
performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999082192816956	WITHOUT_CLASSIFICATION	9.178071830441831E-5	IMPLEMENTATION
properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.999207232392966	WITHOUT_CLASSIFICATION	7.927676070340041E-4	IMPLEMENTATION
enable for hhh-440 which we don't like	WITHOUT_CLASSIFICATION	0.9996507671660598	WITHOUT_CLASSIFICATION	3.4923283394012675E-4	IMPLEMENTATION
aliases	WITHOUT_CLASSIFICATION	0.9999831997394704	WITHOUT_CLASSIFICATION	1.6800260529642488E-5	IMPLEMENTATION
aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999737178989213	WITHOUT_CLASSIFICATION	2.6282101078694104E-5	IMPLEMENTATION
aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999838668455522	WITHOUT_CLASSIFICATION	1.613315444780923E-5	IMPLEMENTATION
fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999986358369163	WITHOUT_CLASSIFICATION	1.3641630837242422E-6	IMPLEMENTATION
embedded composite ids ( alias.idname1 alias.idname2 )	WITHOUT_CLASSIFICATION	0.99990996838264	WITHOUT_CLASSIFICATION	9.003161735996647E-5	IMPLEMENTATION
todo skip formulas?	WITHOUT_CLASSIFICATION	0.5768567140208932	IMPLEMENTATION	0.4231432859791067	WITHOUT_CLASSIFICATION
don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9995704417103649	WITHOUT_CLASSIFICATION	4.2955828963513274E-4	IMPLEMENTATION
do two passes for collection property-ref!	WITHOUT_CLASSIFICATION	0.9997515909611682	WITHOUT_CLASSIFICATION	2.484090388318764E-4	IMPLEMENTATION
select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999912342489627	WITHOUT_CLASSIFICATION	8.76575103720564E-6	IMPLEMENTATION
todo eventually rowidname[j]	WITHOUT_CLASSIFICATION	0.5700351330492003	WITHOUT_CLASSIFICATION	0.4299648669507998	IMPLEMENTATION
this is a property of the table which we are updating	WITHOUT_CLASSIFICATION	0.9999925291539551	WITHOUT_CLASSIFICATION	7.470846044877001E-6	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999095621806301	WITHOUT_CLASSIFICATION	9.043781936986996E-5	IMPLEMENTATION
we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999958301574327	WITHOUT_CLASSIFICATION	4.169842567359926E-6	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999966389168746	WITHOUT_CLASSIFICATION	3.3610831252725083E-6	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999329464894426	WITHOUT_CLASSIFICATION	6.705351055733615E-5	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.999850235326593	WITHOUT_CLASSIFICATION	1.497646734069478E-4	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9999685290216039	WITHOUT_CLASSIFICATION	3.1470978396047585E-5	IMPLEMENTATION
more specifically "? [op] datetime" 1) if the operator is minus the param needs to be of some datetime type 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9998765869550259	WITHOUT_CLASSIFICATION	1.2341304497407108E-4	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.999850235326593	WITHOUT_CLASSIFICATION	1.497646734069478E-4	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999329464894426	WITHOUT_CLASSIFICATION	6.705351055733615E-5	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9999685290216039	WITHOUT_CLASSIFICATION	3.1470978396047585E-5	IMPLEMENTATION
add the primary key	WITHOUT_CLASSIFICATION	0.9999823540258063	WITHOUT_CLASSIFICATION	1.7645974193751582E-5	IMPLEMENTATION
delegate already handles pk columns	WITHOUT_CLASSIFICATION	0.9999966631028301	WITHOUT_CLASSIFICATION	3.3368971699690323E-6	IMPLEMENTATION
we can't batch joined inserts especially not if it is an identity insert nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9991840684392429	WITHOUT_CLASSIFICATION	8.159315607570494E-4	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.999991242619528	WITHOUT_CLASSIFICATION	8.75738047207947E-6	IMPLEMENTATION
write the values of fields onto the prepared statement - we must use the state at the time the insert was issued (cos of foreign key constraints). not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999964272976365	WITHOUT_CLASSIFICATION	3.5727023635006197E-6	IMPLEMENTATION
todo shouldnt inserts be expectations.none?	WITHOUT_CLASSIFICATION	0.7340524181140242	WITHOUT_CLASSIFICATION	0.2659475818859758	IMPLEMENTATION
don't bother trying to update we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9996560237490858	WITHOUT_CLASSIFICATION	3.439762509141588E-4	IMPLEMENTATION
if all fields are null we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999993790480941	WITHOUT_CLASSIFICATION	6.209519058352951E-7	IMPLEMENTATION
there is probably a row there so try to update if no rows were updated we will find out	WITHOUT_CLASSIFICATION	0.9999999476451352	WITHOUT_CLASSIFICATION	5.2354864793832394E-8	IMPLEMENTATION
note updates to joined tables can't be batched	WITHOUT_CLASSIFICATION	0.9999398002237129	WITHOUT_CLASSIFICATION	6.0199776287189855E-5	IMPLEMENTATION
starting index	WITHOUT_CLASSIFICATION	0.9998186466814937	WITHOUT_CLASSIFICATION	1.8135331850627836E-4	IMPLEMENTATION
now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999920017514159	WITHOUT_CLASSIFICATION	7.998248584080414E-6	IMPLEMENTATION
write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9989447487402076	WITHOUT_CLASSIFICATION	0.001055251259792409	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.999991242619528	WITHOUT_CLASSIFICATION	8.75738047207947E-6	IMPLEMENTATION
do the key. the key is immutable so we can use the _current_ object state - not necessarily the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999997177502322	WITHOUT_CLASSIFICATION	2.8224976780022795E-7	IMPLEMENTATION
we should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999972039173614	WITHOUT_CLASSIFICATION	2.79608263867931E-6	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997666328669063	WITHOUT_CLASSIFICATION	2.3336713309379825E-4	IMPLEMENTATION
note dirtyfields==null means we had no snapshot and we couldn't get one using select-before-update oldfields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyfields)	WITHOUT_CLASSIFICATION	0.9999992313304213	WITHOUT_CLASSIFICATION	7.686695787670319E-7	IMPLEMENTATION
more specifically "datetime [op] ?" 1) if the operator is minus we really cannot determine the expected type as either another datetime or numeric would be valid 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9999958262705638	WITHOUT_CLASSIFICATION	4.173729436190558E-6	IMPLEMENTATION
for the case of dynamic-update="true" we need to generate the update sql	WITHOUT_CLASSIFICATION	0.9999982884848443	WITHOUT_CLASSIFICATION	1.7115151556298756E-6	IMPLEMENTATION
don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9897262591427478	WITHOUT_CLASSIFICATION	0.010273740857252234	IMPLEMENTATION
for the case of dynamic-update="false" or no snapshot we use the static sql	WITHOUT_CLASSIFICATION	0.9999991617216086	WITHOUT_CLASSIFICATION	8.382783915026666E-7	IMPLEMENTATION
if not "get" then try "is"	WITHOUT_CLASSIFICATION	0.9996535344965128	WITHOUT_CLASSIFICATION	3.4646550348723857E-4	IMPLEMENTATION
now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9998868684217662	WITHOUT_CLASSIFICATION	1.1313157823373825E-4	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.999994581177298	WITHOUT_CLASSIFICATION	5.418822701949227E-6	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.999994581177298	WITHOUT_CLASSIFICATION	5.418822701949227E-6	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999963425537645	WITHOUT_CLASSIFICATION	3.657446235532728E-6	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999963425537645	WITHOUT_CLASSIFICATION	3.657446235532728E-6	IMPLEMENTATION
not supported	WITHOUT_CLASSIFICATION	0.9995585541892651	WITHOUT_CLASSIFICATION	4.414458107348472E-4	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997666328669063	WITHOUT_CLASSIFICATION	2.3336713309379825E-4	IMPLEMENTATION
we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9998551259513098	WITHOUT_CLASSIFICATION	1.4487404869028693E-4	IMPLEMENTATION
otherwise utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9998093267917911	WITHOUT_CLASSIFICATION	1.906732082089343E-4	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999786879034334	WITHOUT_CLASSIFICATION	2.1312096566646578E-5	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999786879034334	WITHOUT_CLASSIFICATION	2.1312096566646578E-5	IMPLEMENTATION
all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999763382272739	WITHOUT_CLASSIFICATION	2.36617727260624E-5	IMPLEMENTATION
notice that we skip the first table it is the driving table!	WITHOUT_CLASSIFICATION	0.9999577443683834	WITHOUT_CLASSIFICATION	4.2255631616564424E-5	IMPLEMENTATION
we can inner join to superclass tables (the row must be there) we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.999662678084042	WITHOUT_CLASSIFICATION	3.373219159580546E-4	IMPLEMENTATION
skip the driving table	WITHOUT_CLASSIFICATION	0.9999610164862258	WITHOUT_CLASSIFICATION	3.898351377420883E-5	IMPLEMENTATION
get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999962774886234	WITHOUT_CLASSIFICATION	3.7225113765475887E-6	IMPLEMENTATION
here we work under the following assumptions ------------ valid cases -------------------------------------- 1) datetime + {something other than datetime} always results in a datetime ( db will catch invalid conversions ) 2) datetime - datetime always results in a double 3) datetime - {something other than datetime} always results in a datetime ( db will catch invalid conversions ) ------------ invalid cases ------------------------------------ 4) datetime + datetime 5) {something other than datetime} - datetime 6) datetime {any type} 7) datetime / {any type} 8) {any type} / datetime doing so allows us to properly handle parameters as either the left or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.999999415842912	WITHOUT_CLASSIFICATION	5.841570879998836E-7	IMPLEMENTATION
render the where and from parts	WITHOUT_CLASSIFICATION	0.9999729776539779	WITHOUT_CLASSIFICATION	2.7022346022164196E-5	IMPLEMENTATION
we could regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9998890321813421	WITHOUT_CLASSIFICATION	1.1096781865796914E-4	IMPLEMENTATION
now render the joins	WITHOUT_CLASSIFICATION	0.9999668251283568	WITHOUT_CLASSIFICATION	3.3174871643327636E-5	IMPLEMENTATION
this will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999943380162444	WITHOUT_CLASSIFICATION	5.661983755597064E-6	IMPLEMENTATION
now render the select clause	WITHOUT_CLASSIFICATION	0.9999762759990946	WITHOUT_CLASSIFICATION	2.372400090549296E-5	IMPLEMENTATION
now tie it all together	WITHOUT_CLASSIFICATION	0.9999530148320901	WITHOUT_CLASSIFICATION	4.698516790988963E-5	IMPLEMENTATION
insert/update/delete sql	WITHOUT_CLASSIFICATION	0.9999849988950472	WITHOUT_CLASSIFICATION	1.5001104952662767E-5	IMPLEMENTATION
select sql	WITHOUT_CLASSIFICATION	0.9999964788193475	WITHOUT_CLASSIFICATION	3.5211806524526205E-6	IMPLEMENTATION
no need to check laziness dirty checking handles that	WITHOUT_CLASSIFICATION	0.9756041603965786	WITHOUT_CLASSIFICATION	0.024395839603421413	IMPLEMENTATION
fully resolve the map reference create implicit joins.	WITHOUT_CLASSIFICATION	0.9999872186416573	WITHOUT_CLASSIFICATION	1.2781358342648128E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999398795310902	WITHOUT_CLASSIFICATION	6.012046890991409E-5	IMPLEMENTATION
the basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9995626218597652	WITHOUT_CLASSIFICATION	4.3737814023478113E-4	IMPLEMENTATION
for dialects which are known to not support ansi-sql row-value-constructor syntax we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9897927002759624	WITHOUT_CLASSIFICATION	0.010207299724037451	IMPLEMENTATION
due to the complexity in initializing the selectclause do not generate one here. if it is not found simply return null also do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999999157330283	WITHOUT_CLASSIFICATION	8.426697164783423E-8	IMPLEMENTATION
check the version unsaved-value if appropriate	WITHOUT_CLASSIFICATION	0.9990608414306432	WITHOUT_CLASSIFICATION	9.391585693568718E-4	IMPLEMENTATION
let this take precedence if defined since it works for assigned identifiers	WITHOUT_CLASSIFICATION	0.9999997431506923	WITHOUT_CLASSIFICATION	2.568493076505812E-7	IMPLEMENTATION
check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9992023248217149	WITHOUT_CLASSIFICATION	7.97675178285028E-4	IMPLEMENTATION
check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999997166347082	WITHOUT_CLASSIFICATION	2.833652918284276E-7	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999973873380681	WITHOUT_CLASSIFICATION	2.6126619318090982E-6	IMPLEMENTATION
for property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.999966439663592	WITHOUT_CLASSIFICATION	3.3560336408036536E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999998441741741	WITHOUT_CLASSIFICATION	1.558258258542266E-7	IMPLEMENTATION
force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999596434688194	WITHOUT_CLASSIFICATION	4.035653118066972E-5	IMPLEMENTATION
if this from element is a collection and the path is a collection property (maxindex etc.) then generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999994829242772	WITHOUT_CLASSIFICATION	5.170757227133706E-7	IMPLEMENTATION
entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999394538861592	WITHOUT_CLASSIFICATION	6.054611384075209E-5	IMPLEMENTATION
collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999224967431672	WITHOUT_CLASSIFICATION	7.750325683274414E-5	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.999997006278008	WITHOUT_CLASSIFICATION	2.9937219919611525E-6	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.999997006278008	WITHOUT_CLASSIFICATION	2.9937219919611525E-6	IMPLEMENTATION
only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999962246544442	WITHOUT_CLASSIFICATION	3.775345555809852E-6	IMPLEMENTATION
try "get"	WITHOUT_CLASSIFICATION	0.9999743150179439	WITHOUT_CLASSIFICATION	2.5684982056176756E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999965125197563	WITHOUT_CLASSIFICATION	3.487480243645962E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999965125197563	WITHOUT_CLASSIFICATION	3.487480243645962E-6	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9997389592914914	WITHOUT_CLASSIFICATION	2.610407085086986E-4	IMPLEMENTATION
this page intentionally left blank )	WITHOUT_CLASSIFICATION	0.9999043833966266	WITHOUT_CLASSIFICATION	9.561660337332347E-5	IMPLEMENTATION
do not do anything	WITHOUT_CLASSIFICATION	0.9863978830126174	WITHOUT_CLASSIFICATION	0.013602116987382652	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999772037334894	WITHOUT_CLASSIFICATION	2.2796266510569544E-5	IMPLEMENTATION
cant instantiate	WITHOUT_CLASSIFICATION	0.9999530716132009	WITHOUT_CLASSIFICATION	4.692838679903001E-5	IMPLEMENTATION
if it is a property of an embedded component invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999998646243113	WITHOUT_CLASSIFICATION	1.3537568863750806E-7	IMPLEMENTATION
otherwise	WITHOUT_CLASSIFICATION	0.9998214119951331	WITHOUT_CLASSIFICATION	1.78588004866996E-4	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.9999372096606842	WITHOUT_CLASSIFICATION	6.279033931583636E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999400314833026	WITHOUT_CLASSIFICATION	5.996851669757694E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999400314833026	WITHOUT_CLASSIFICATION	5.996851669757694E-5	IMPLEMENTATION
hhh-2481 make sure the callback gets cleared otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.999901826678321	WITHOUT_CLASSIFICATION	9.817332167903764E-5	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999883854315518	WITHOUT_CLASSIFICATION	1.1614568448217323E-5	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999883854315518	WITHOUT_CLASSIFICATION	1.1614568448217323E-5	IMPLEMENTATION
note interface is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999475640247978	WITHOUT_CLASSIFICATION	5.243597520217144E-5	IMPLEMENTATION
interfaces arguments	WITHOUT_CLASSIFICATION	0.9999641305815108	WITHOUT_CLASSIFICATION	3.586941848919784E-5	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
get the caller	WITHOUT_CLASSIFICATION	0.999995034518375	WITHOUT_CLASSIFICATION	4.965481624920946E-6	IMPLEMENTATION
get the caller principals	WITHOUT_CLASSIFICATION	0.9999963780010742	WITHOUT_CLASSIFICATION	3.6219989257354563E-6	IMPLEMENTATION
private static final alias default_alias = new alias(10 null)	WITHOUT_CLASSIFICATION	0.9999829437776715	WITHOUT_CLASSIFICATION	1.705622232851772E-5	IMPLEMENTATION
needed to bump this up to dotnode because that is the only thing which currently knows about the property-ref path in the correct format it is either this or recurse over the dotnodes constructing the property path just like dotnode does internally	WITHOUT_CLASSIFICATION	0.9999899342280425	WITHOUT_CLASSIFICATION	1.006577195752141E-5	IMPLEMENTATION
if the identifier is quoted remove the quotes	WITHOUT_CLASSIFICATION	0.999998289100313	WITHOUT_CLASSIFICATION	1.7108996870128722E-6	IMPLEMENTATION
truncate the identifier to the max alias length less the suffix length	WITHOUT_CLASSIFICATION	0.9999483716714838	WITHOUT_CLASSIFICATION	5.162832851633968E-5	IMPLEMENTATION
full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9993892844123328	WITHOUT_CLASSIFICATION	6.107155876672689E-4	IMPLEMENTATION
null is not considered the same type as integer. $non-nls-1 $non-nls-1	WITHOUT_CLASSIFICATION	0.999838955152923	WITHOUT_CLASSIFICATION	1.610448470771099E-4	IMPLEMENTATION
the outerjoinsafterwhere needs to come before where clause to properly handle dynamic filters	WITHOUT_CLASSIFICATION	0.9925741209650245	WITHOUT_CLASSIFICATION	0.007425879034975488	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.999991959606534	WITHOUT_CLASSIFICATION	8.040393466029295E-6	IMPLEMENTATION
if the condition is not already there	WITHOUT_CLASSIFICATION	0.9999355788559873	WITHOUT_CLASSIFICATION	6.442114401277059E-5	IMPLEMENTATION
dontspace.add("'")	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
for mysql	WITHOUT_CLASSIFICATION	0.9999937584413366	WITHOUT_CLASSIFICATION	6.24155866329832E-6	IMPLEMENTATION
hashmap columnsunique = new hashmap()	WITHOUT_CLASSIFICATION	0.9999416947018327	WITHOUT_CLASSIFICATION	5.830529816744417E-5	IMPLEMENTATION
null caused some problems	WITHOUT_CLASSIFICATION	0.9999560650999324	WITHOUT_CLASSIFICATION	4.3934900067623165E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999733485530602	WITHOUT_CLASSIFICATION	2.6651446939803244E-5	IMPLEMENTATION
not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999915640040934	WITHOUT_CLASSIFICATION	8.43599590669389E-6	IMPLEMENTATION
even on inverse="true"	WITHOUT_CLASSIFICATION	0.9998952696895653	WITHOUT_CLASSIFICATION	1.047303104347215E-4	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999733485530602	WITHOUT_CLASSIFICATION	2.6651446939803244E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999733485530602	WITHOUT_CLASSIFICATION	2.6651446939803244E-5	IMPLEMENTATION
if true then execute db updates otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999982061310503	WITHOUT_CLASSIFICATION	1.7938689497109624E-6	IMPLEMENTATION
we only release the connection	WITHOUT_CLASSIFICATION	0.9983759012410511	WITHOUT_CLASSIFICATION	0.0016240987589487953	IMPLEMENTATION
deprecated option	WITHOUT_CLASSIFICATION	0.9994430642496596	WITHOUT_CLASSIFICATION	5.569357503404611E-4	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999989008497646	WITHOUT_CLASSIFICATION	1.0991502353662803E-6	IMPLEMENTATION
actually this last test is probably unnecessary since beforecompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999999924547676	WITHOUT_CLASSIFICATION	7.545232419409113E-9	IMPLEMENTATION
this one only really needed for badly-behaved applications! (if the transactionmanager has a sychronization registered its a noop) (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.8237945598081692	IMPLEMENTATION	0.17620544019183076	WITHOUT_CLASSIFICATION
create an dotnode ast for the path and resolve it.	WITHOUT_CLASSIFICATION	0.999988769190553	WITHOUT_CLASSIFICATION	1.1230809446983258E-5	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999989008497646	WITHOUT_CLASSIFICATION	1.0991502353662803E-6	IMPLEMENTATION
if we could not register a synchronization do the before/after completion callbacks ourself (but we need to let jdbccontext know that this is what we are going to do so it doesn't keep trying to register synchronizations)	WITHOUT_CLASSIFICATION	0.7690584546334853	IMPLEMENTATION	0.2309415453665146	WITHOUT_CLASSIFICATION
swallow it and continue to roll back jta transaction	WITHOUT_CLASSIFICATION	0.9998261414474772	WITHOUT_CLASSIFICATION	1.7385855252287683E-4	IMPLEMENTATION
so the transaction is already rolled back by jta spec	WITHOUT_CLASSIFICATION	0.9999980627645567	WITHOUT_CLASSIFICATION	1.9372354433569462E-6	IMPLEMENTATION
this method is a noop if there is a synchronization!	WITHOUT_CLASSIFICATION	0.9999967981521637	WITHOUT_CLASSIFICATION	3.2018478363290163E-6	IMPLEMENTATION
two conditions where we need to transform this to a theta-join syntax 1) 'elem' is the "root from-element" in correlated subqueries 2) the dotnode.usethetastyleimplicitjoins has been set to true and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999952957422267	WITHOUT_CLASSIFICATION	4.704257773360033E-6	IMPLEMENTATION
websphere however is not a sane jee/jta container	WITHOUT_CLASSIFICATION	0.9992465602981974	WITHOUT_CLASSIFICATION	7.534397018027834E-4	IMPLEMENTATION
for sane jee/jta containers the transaction itself functions as its identifier	WITHOUT_CLASSIFICATION	0.9999967122269734	WITHOUT_CLASSIFICATION	3.287773026718217E-6	IMPLEMENTATION
swallow the transaction was finished	WITHOUT_CLASSIFICATION	0.9999967128246539	WITHOUT_CLASSIFICATION	3.287175346117508E-6	IMPLEMENTATION
all aliastoentitymapresulttransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999954711067154	WITHOUT_CLASSIFICATION	4.52889328471162E-6	IMPLEMENTATION
create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999952292851138	WITHOUT_CLASSIFICATION	4.770714886254807E-6	IMPLEMENTATION
all distinctrootentityresulttransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999954711067154	WITHOUT_CLASSIFICATION	4.52889328471162E-6	IMPLEMENTATION
map of entitymode -> tuplizer	WITHOUT_CLASSIFICATION	0.9999971695498625	WITHOUT_CLASSIFICATION	2.830450137512329E-6	IMPLEMENTATION
this is a virtual id property	WITHOUT_CLASSIFICATION	0.9996439631156468	WITHOUT_CLASSIFICATION	3.5603688435305775E-4	IMPLEMENTATION
this one needed only for guessentitymode()	WITHOUT_CLASSIFICATION	0.601847502343686	WITHOUT_CLASSIFICATION	0.39815249765631405	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999858578854456	WITHOUT_CLASSIFICATION	1.414211455447875E-5	IMPLEMENTATION
todo move this to sf per hhh-3517 also see hhh-1907 and componentmetamodel	WITHOUT_CLASSIFICATION	0.6253902703226345	WITHOUT_CLASSIFICATION	0.37460972967736533	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999993543817267	WITHOUT_CLASSIFICATION	6.456182732762221E-7	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999725029911277	WITHOUT_CLASSIFICATION	2.749700887229117E-5	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999948422056949	WITHOUT_CLASSIFICATION	5.1577943050691085E-6	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999725029911277	WITHOUT_CLASSIFICATION	2.749700887229117E-5	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9998886282188677	WITHOUT_CLASSIFICATION	1.113717811322995E-4	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999791957722295	WITHOUT_CLASSIFICATION	2.0804227770606567E-5	IMPLEMENTATION
private final sessionfactoryimplementor sessionfactory	WITHOUT_CLASSIFICATION	0.9999741405878068	WITHOUT_CLASSIFICATION	2.585941219329041E-5	IMPLEMENTATION
cached for efficiency	WITHOUT_CLASSIFICATION	0.9999812749623314	WITHOUT_CLASSIFICATION	1.8725037668607194E-5	IMPLEMENTATION
public componentmetamodel(component component sessionfactoryimplementor sessionfactory) {	WITHOUT_CLASSIFICATION	0.9999929847764678	WITHOUT_CLASSIFICATION	7.0152235322102755E-6	IMPLEMENTATION
this.sessionfactory = sessionfactory	WITHOUT_CLASSIFICATION	0.9999027721065928	WITHOUT_CLASSIFICATION	9.722789340719718E-5	IMPLEMENTATION
it was not embedded so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999992888253691	WITHOUT_CLASSIFICATION	7.111746308860898E-7	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999993543817267	WITHOUT_CLASSIFICATION	6.456182732762221E-7	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999948422056949	WITHOUT_CLASSIFICATION	5.1577943050691085E-6	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9998886282188677	WITHOUT_CLASSIFICATION	1.113717811322995E-4	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9998982280546863	WITHOUT_CLASSIFICATION	1.0177194531372954E-4	IMPLEMENTATION
return currentid	WITHOUT_CLASSIFICATION	0.9999668689292425	WITHOUT_CLASSIFICATION	3.313107075757412E-5	IMPLEMENTATION
reset the id	WITHOUT_CLASSIFICATION	0.9993088524491824	WITHOUT_CLASSIFICATION	6.911475508175419E-4	IMPLEMENTATION
origin.adddestination( destination ) this was the cause of hhh-242 origin.settype( from_fragment ) set the parent node type so that the ast is properly formed. the destination node will have all the from text. the parent node is a collection join too (voodoo - see joinprocessor)	WITHOUT_CLASSIFICATION	0.9999993302815703	WITHOUT_CLASSIFICATION	6.697184297365242E-7	IMPLEMENTATION
reset the version	WITHOUT_CLASSIFICATION	0.9997412573257912	WITHOUT_CLASSIFICATION	2.5874267420878186E-4	IMPLEMENTATION
the default is to simply not lazy fetch properties for now	WITHOUT_CLASSIFICATION	0.9997843947082882	WITHOUT_CLASSIFICATION	2.156052917118068E-4	IMPLEMENTATION
add the second join the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999561036803637	WITHOUT_CLASSIFICATION	4.389631963632252E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999398795310902	WITHOUT_CLASSIFICATION	6.012046890991409E-5	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999791957722295	WITHOUT_CLASSIFICATION	2.0804227770606567E-5	IMPLEMENTATION
determine the id getter and setter methods from the proxy interface (if any) determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.5868375828967762	IMPLEMENTATION	0.4131624171032236	WITHOUT_CLASSIFICATION
return getfactory().getsettings().getbytecodeprovider().getproxyfactoryfactory().buildproxyfactory()	WITHOUT_CLASSIFICATION	0.9999604959922624	WITHOUT_CLASSIFICATION	3.9504007737540473E-5	IMPLEMENTATION
not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9974116696390832	WITHOUT_CLASSIFICATION	0.0025883303609167377	IMPLEMENTATION
superclass entity-name	WITHOUT_CLASSIFICATION	0.9999763062547219	WITHOUT_CLASSIFICATION	2.3693745278133402E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999398795310902	WITHOUT_CLASSIFICATION	6.012046890991409E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
init the aliases after initing the constructornode	WITHOUT_CLASSIFICATION	0.999970311536179	WITHOUT_CLASSIFICATION	2.9688463820989355E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999398795310902	WITHOUT_CLASSIFICATION	6.012046890991409E-5	IMPLEMENTATION
legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999772827930857	WITHOUT_CLASSIFICATION	2.271720691425631E-5	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.999973005081964	WITHOUT_CLASSIFICATION	2.6994918036015272E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
note this affects the return value!	WITHOUT_CLASSIFICATION	0.9999045934836304	WITHOUT_CLASSIFICATION	9.540651636963431E-5	IMPLEMENTATION
need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9996770988982175	WITHOUT_CLASSIFICATION	3.229011017824609E-4	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999962442625735	WITHOUT_CLASSIFICATION	3.7557374265222482E-6	IMPLEMENTATION
collection types	WITHOUT_CLASSIFICATION	0.9996488615274395	WITHOUT_CLASSIFICATION	3.5113847256049743E-4	IMPLEMENTATION
convenience methods relating to operations across arrays of types	WITHOUT_CLASSIFICATION	0.9996710875267948	WITHOUT_CLASSIFICATION	3.289124732051593E-4	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999975765981015	WITHOUT_CLASSIFICATION	2.4234018984959745E-6	IMPLEMENTATION
blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999687357952394	WITHOUT_CLASSIFICATION	3.1264204760656155E-5	IMPLEMENTATION
value is the entity name	WITHOUT_CLASSIFICATION	0.9999895266442079	WITHOUT_CLASSIFICATION	1.0473355792144747E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999875761064664	WITHOUT_CLASSIFICATION	1.2423893533664315E-5	IMPLEMENTATION
generate id select fragment and then property select fragment for each expression just like generateselectfragments().	WITHOUT_CLASSIFICATION	0.9998236708256343	WITHOUT_CLASSIFICATION	1.76329174365733E-4	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
xml is the entity name	WITHOUT_CLASSIFICATION	0.9999939035312024	WITHOUT_CLASSIFICATION	6.096468797510823E-6	IMPLEMENTATION
special case this is the leaf of the containment graph even though not immutable	WITHOUT_CLASSIFICATION	0.9997619788189	WITHOUT_CLASSIFICATION	2.3802118109995493E-4	IMPLEMENTATION
tolerates nulls	WITHOUT_CLASSIFICATION	0.9999531101773366	WITHOUT_CLASSIFICATION	4.688982266345986E-5	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
metatype is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999913205381051	WITHOUT_CLASSIFICATION	8.679461894902645E-6	IMPLEMENTATION
get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999981412944975	WITHOUT_CLASSIFICATION	1.8587055024616028E-6	IMPLEMENTATION
look through the fromelement's children to find any collections of values that should be fetched	WITHOUT_CLASSIFICATION	0.9999691982147839	WITHOUT_CLASSIFICATION	3.0801785216016854E-5	IMPLEMENTATION
return associationtype.foreign_key_to_parent this is better but causes a transient object exception	WITHOUT_CLASSIFICATION	0.9999995347156259	WITHOUT_CLASSIFICATION	4.6528437410204596E-7	IMPLEMENTATION
use the lower case function name. remember whether we're in a select clause or not.	WITHOUT_CLASSIFICATION	0.9999991437037962	WITHOUT_CLASSIFICATION	8.562962038267927E-7	IMPLEMENTATION
ident might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999961425271766	WITHOUT_CLASSIFICATION	3.857472823344656E-6	IMPLEMENTATION
todo!!!	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
st.settimestamp( index new timestamp( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9998534112928721	WITHOUT_CLASSIFICATION	1.4658870712784506E-4	IMPLEMENTATION
st.setdate( index new date( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9998534112928721	WITHOUT_CLASSIFICATION	1.4658870712784506E-4	IMPLEMENTATION
both are timestamps	WITHOUT_CLASSIFICATION	0.9999886307605393	WITHOUT_CLASSIFICATION	1.1369239460542772E-5	IMPLEMENTATION
at least one is a plain old date	WITHOUT_CLASSIFICATION	0.9999942767535582	WITHOUT_CLASSIFICATION	5.7232464417368415E-6	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999830314318879	WITHOUT_CLASSIFICATION	1.6968568112148454E-5	IMPLEMENTATION
if the corresponding sql value is null the reader we got is null as well	WITHOUT_CLASSIFICATION	0.9999999576738419	WITHOUT_CLASSIFICATION	4.232615814302029E-8	IMPLEMENTATION
fetch reader content up to the end - and put characters in a stringbuffer	WITHOUT_CLASSIFICATION	0.9994633450507959	WITHOUT_CLASSIFICATION	5.366549492040713E-4	IMPLEMENTATION
return stringbuffer content as a large string	WITHOUT_CLASSIFICATION	0.9997059997716435	WITHOUT_CLASSIFICATION	2.940002283565584E-4	IMPLEMENTATION
or types.longvarchar?	WITHOUT_CLASSIFICATION	0.9999721765968617	WITHOUT_CLASSIFICATION	2.7823403138409416E-5	IMPLEMENTATION
not called at runtime so doesn't matter if its slow )	WITHOUT_CLASSIFICATION	0.999983406569844	WITHOUT_CLASSIFICATION	1.6593430156016914E-5	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.8073306800523441	WITHOUT_CLASSIFICATION	0.19266931994765593	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999917771356326	WITHOUT_CLASSIFICATION	8.222864367536099E-6	IMPLEMENTATION
different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999634602152085	WITHOUT_CLASSIFICATION	3.6539784791464355E-5	IMPLEMENTATION
cache this	WITHOUT_CLASSIFICATION	0.9999497669150609	WITHOUT_CLASSIFICATION	5.0233084939077146E-5	IMPLEMENTATION
only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9998868484388893	WITHOUT_CLASSIFICATION	1.1315156111069678E-4	IMPLEMENTATION
forcefully remove leading ands from where fragments the grammar will handle adding them	WITHOUT_CLASSIFICATION	0.9999685137103911	WITHOUT_CLASSIFICATION	3.14862896088135E-5	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
create a new filters node as a parent of all filters	WITHOUT_CLASSIFICATION	0.999979900265239	WITHOUT_CLASSIFICATION	2.009973476106075E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
public object instantiate(object parent sessionimplementor session) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999879268950499	WITHOUT_CLASSIFICATION	1.2073104950193966E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999844367242754	WITHOUT_CLASSIFICATION	1.5563275724635814E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999844367242754	WITHOUT_CLASSIFICATION	1.5563275724635814E-5	IMPLEMENTATION
versiontype impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ note simply returns null for seed() and next() as the only known application of binary types for versioning is for use with the timestamp datatype supported by sybase and sql server which are completely db-generated values	WITHOUT_CLASSIFICATION	0.9999998199480397	WITHOUT_CLASSIFICATION	1.8005196035460133E-7	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999975765981015	WITHOUT_CLASSIFICATION	2.4234018984959745E-6	IMPLEMENTATION
not really necessary i guess	WITHOUT_CLASSIFICATION	0.9889204065146644	WITHOUT_CLASSIFICATION	0.011079593485335484	IMPLEMENTATION
clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999910638782988	WITHOUT_CLASSIFICATION	8.936121701096541E-6	IMPLEMENTATION
we do not have to worry about queued additions to uninitialized collections since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9997287579406332	WITHOUT_CLASSIFICATION	2.712420593667365E-4	IMPLEMENTATION
collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999970682816678	WITHOUT_CLASSIFICATION	2.9317183322320233E-6	IMPLEMENTATION
remember the uk value	WITHOUT_CLASSIFICATION	0.9997455796454418	WITHOUT_CLASSIFICATION	2.5442035455826496E-4	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999830314318879	WITHOUT_CLASSIFICATION	1.6968568112148454E-5	IMPLEMENTATION
processcollectionproperty(token q.getcollectionpersister(collectionrole) collectionname)	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
we must use the "remembered" uk value since it is not available from the entityentry during assembly	WITHOUT_CLASSIFICATION	0.9999449772130113	WITHOUT_CLASSIFICATION	5.5022786988561303E-5	IMPLEMENTATION
collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9996115347686155	WITHOUT_CLASSIFICATION	3.8846523138448574E-4	IMPLEMENTATION
return false	WITHOUT_CLASSIFICATION	0.9999594576273969	WITHOUT_CLASSIFICATION	4.054237260308217E-5	IMPLEMENTATION
this just handles a particular case of component projection perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.999999884869689	WITHOUT_CLASSIFICATION	1.1513031095311944E-7	IMPLEMENTATION
note we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999986424049733	WITHOUT_CLASSIFICATION	1.357595026732181E-6	IMPLEMENTATION
the key is the owning entity itself so get the id from the key	WITHOUT_CLASSIFICATION	0.9999990264905941	WITHOUT_CLASSIFICATION	9.735094058302424E-7	IMPLEMENTATION
if the original is a persistentcollection and that original was not flagged as dirty then reset the target's dirty flag here after the copy operation. </p> one thing to be careful of here is a "bare" original collection in which case we should never ever ever reset the dirty flag on the target because we simply do not know	WITHOUT_CLASSIFICATION	0.9643854857616189	WITHOUT_CLASSIFICATION	0.035614514238381155	IMPLEMENTATION
ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999498318637574	WITHOUT_CLASSIFICATION	5.0168136242588546E-5	IMPLEMENTATION
copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9996370447937968	WITHOUT_CLASSIFICATION	3.6295520620329623E-4	IMPLEMENTATION
for a null target or a target which is the same as the original we need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999890833126569	WITHOUT_CLASSIFICATION	1.0916687343148027E-5	IMPLEMENTATION
by default just use an unanticipated capacity since we don't know how to extract the capacity to use from original here	WITHOUT_CLASSIFICATION	0.9998702267293751	WITHOUT_CLASSIFICATION	1.2977327062488916E-4	IMPLEMENTATION
get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9998277635052741	WITHOUT_CLASSIFICATION	1.7223649472587223E-4	IMPLEMENTATION
check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999957596778413	WITHOUT_CLASSIFICATION	4.240322158660331E-6	IMPLEMENTATION
check if it is already completely loaded but unowned	WITHOUT_CLASSIFICATION	0.999999486380878	WITHOUT_CLASSIFICATION	5.136191220125223E-7	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9953265959196713	WITHOUT_CLASSIFICATION	0.004673404080328703	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
create a new collection wrapper to be initialized later	WITHOUT_CLASSIFICATION	0.9999292264988329	WITHOUT_CLASSIFICATION	7.077350116713256E-5	IMPLEMENTATION
some jdbc drivers erroneously return an empty array here for a null db value /	WITHOUT_CLASSIFICATION	0.9999832125551834	WITHOUT_CLASSIFICATION	1.6787444816628664E-5	IMPLEMENTATION
our column span is the number of columns in the pk	WITHOUT_CLASSIFICATION	0.9999997560453533	WITHOUT_CLASSIFICATION	2.43954646656509E-7	IMPLEMENTATION
cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999965488995256	WITHOUT_CLASSIFICATION	3.451100474378077E-6	IMPLEMENTATION
we already know current is not null	WITHOUT_CLASSIFICATION	0.9540401595859961	WITHOUT_CLASSIFICATION	0.04595984041400387	IMPLEMENTATION
the ids are fully resolved so compare them with isdirty() not ismodified()	WITHOUT_CLASSIFICATION	0.9995451993271499	WITHOUT_CLASSIFICATION	4.548006728500682E-4	IMPLEMENTATION
the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9991578886748703	WITHOUT_CLASSIFICATION	8.421113251296962E-4	IMPLEMENTATION
----------------------------------------------------------- constructors	WITHOUT_CLASSIFICATION	0.9998785899299091	WITHOUT_CLASSIFICATION	1.2141007009082998E-4	IMPLEMENTATION
----------------------------------------------------- instance variables	WITHOUT_CLASSIFICATION	0.9999811091792251	WITHOUT_CLASSIFICATION	1.889082077495427E-5	IMPLEMENTATION
public static jdbcexception newjdbcexception(string string sqlexception root string sql) { string = string + " [" + sql + ']' log.error(string root) logexceptions(root) return new jdbcexception(string root sql) } public static jdbcexception newjdbcexception(string string sqlexception root) { log.error(string root) logexceptions(root) return new jdbcexception(string root) }	WITHOUT_CLASSIFICATION	0.9999793181381025	WITHOUT_CLASSIFICATION	2.0681861897604256E-5	IMPLEMENTATION
--------------------------------------------------------- public methods	WITHOUT_CLASSIFICATION	0.9999897061915602	WITHOUT_CLASSIFICATION	1.0293808439642654E-5	IMPLEMENTATION
compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999730145489253	WITHOUT_CLASSIFICATION	2.6985451074667954E-5	IMPLEMENTATION
simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9998255286680144	WITHOUT_CLASSIFICATION	1.7447133198555452E-4	IMPLEMENTATION
sybase fail if we don't do that sigh	WITHOUT_CLASSIFICATION	0.9999161169998428	WITHOUT_CLASSIFICATION	8.388300015721725E-5	IMPLEMENTATION
handles things like a and b or c a and ( b or c ) not a and not b not ( a and b ) x between y and z (overloaded "and") x in ( a b c ) (overloaded brackets) not not a a is not null (overloaded "not") etc and expressions like foo = bar (maps to foo.id = bar.id) foo.bar = 'foo' (maps to foo.bar = 'foo') foo.bar.baz = 1.0 (maps to foo.bar = bar.id and bar.baz = 1.0) 1.0 = foo.bar.baz (maps to bar.baz = 1.0 and foo.bar = bar.id) foo.bar.baz = a.b.c (maps to bar.baz = b.c and foo.bar = bar.id and a.b = b.id) foo.bar.baz + a.b.c (maps to bar.baz + b.c and foo.bar = bar.id and a.b = b.id) ( foo.bar.baz + 1.0 ) < 2.0 (maps to ( bar.baz + 1.0 ) < 2.0 and foo.bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999369092179425	WITHOUT_CLASSIFICATION	6.309078205745148E-5	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9989694529770684	WITHOUT_CLASSIFICATION	0.0010305470229316418	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9989694529770684	WITHOUT_CLASSIFICATION	0.0010305470229316418	IMPLEMENTATION
try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999366747795251	WITHOUT_CLASSIFICATION	6.332522047486038E-5	IMPLEMENTATION
otherwise just dump it	WITHOUT_CLASSIFICATION	0.9998961074490184	WITHOUT_CLASSIFICATION	1.0389255098163656E-4	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999959890437189	WITHOUT_CLASSIFICATION	4.0109562810336165E-6	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999959890437189	WITHOUT_CLASSIFICATION	4.0109562810336165E-6	IMPLEMENTATION
use default behavior	WITHOUT_CLASSIFICATION	0.9999883548588461	WITHOUT_CLASSIFICATION	1.1645141153831053E-5	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999867524035075	WITHOUT_CLASSIFICATION	1.324759649239878E-5	IMPLEMENTATION
the mru cache used to keep hard references to the most recently used query plans note lru here is a bit of a misnomer it indicates that lru entries are removed the actual kept entries are the mru entries	WITHOUT_CLASSIFICATION	0.9993330699406004	WITHOUT_CLASSIFICATION	6.669300593995999E-4	IMPLEMENTATION
we want to be able to just use the defaults if jndi environment properties are not supplied so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999974964180919	WITHOUT_CLASSIFICATION	2.503581908127261E-6	IMPLEMENTATION
clone -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931893685889	WITHOUT_CLASSIFICATION	6.8106314110003085E-6	IMPLEMENTATION
serialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999359422423411	WITHOUT_CLASSIFICATION	6.405775765897511E-5	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999964523977506	WITHOUT_CLASSIFICATION	3.5476022494379293E-6	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999964523977506	WITHOUT_CLASSIFICATION	3.5476022494379293E-6	IMPLEMENTATION
deserialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
static methods only - hide constructor	WITHOUT_CLASSIFICATION	0.9998734691722738	WITHOUT_CLASSIFICATION	1.2653082772610705E-4	IMPLEMENTATION
&& !('_'==character)	WITHOUT_CLASSIFICATION	0.9999470924166712	WITHOUT_CLASSIFICATION	5.2907583328784385E-5	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9999365051629491	WITHOUT_CLASSIFICATION	6.349483705087868E-5	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9999365051629491	WITHOUT_CLASSIFICATION	6.349483705087868E-5	IMPLEMENTATION
includes last '.'	WITHOUT_CLASSIFICATION	0.9999731884074697	WITHOUT_CLASSIFICATION	2.6811592530345913E-5	IMPLEMENTATION
+1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999775486929995	WITHOUT_CLASSIFICATION	2.245130700056562E-5	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999987232065272	WITHOUT_CLASSIFICATION	1.2767934727532993E-6	IMPLEMENTATION
first time we find match!	WITHOUT_CLASSIFICATION	0.9999624556679209	WITHOUT_CLASSIFICATION	3.7544332079075425E-5	IMPLEMENTATION
entitynames may now include slashes for the representations classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999997638211384	WITHOUT_CLASSIFICATION	2.3617886157794811E-7	IMPLEMENTATION
wrapped iterators	WITHOUT_CLASSIFICATION	0.9999475631104431	WITHOUT_CLASSIFICATION	5.243688955691442E-5	IMPLEMENTATION
index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999732717025116	WITHOUT_CLASSIFICATION	2.6728297488348607E-5	IMPLEMENTATION
the current iterator	WITHOUT_CLASSIFICATION	0.9998785144238815	WITHOUT_CLASSIFICATION	1.2148557611852715E-4	IMPLEMENTATION
the last used iterator	WITHOUT_CLASSIFICATION	0.9999891324030559	WITHOUT_CLASSIFICATION	1.0867596944121561E-5	IMPLEMENTATION
it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999987914441388	WITHOUT_CLASSIFICATION	1.2085558612270021E-6	IMPLEMENTATION
public static object[] clone(class elementclass object[] array) {object[] result = (object[]) array.newinstance( elementclass array.length )system.arraycopy(array 0 result 0 array.length)return result}	WITHOUT_CLASSIFICATION	0.9999940376077767	WITHOUT_CLASSIFICATION	5.962392223195805E-6	IMPLEMENTATION
call this before any iterator method to make sure that the current iterator is not exhausted	WITHOUT_CLASSIFICATION	0.928771558581715	WITHOUT_CLASSIFICATION	0.07122844141828498	IMPLEMENTATION
doable if needed	WITHOUT_CLASSIFICATION	0.8969457708128181	WITHOUT_CLASSIFICATION	0.10305422918718196	IMPLEMENTATION
set last used iterator here in case the user calls remove before calling hasnext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999920797165283	WITHOUT_CLASSIFICATION	7.920283471713395E-6	IMPLEMENTATION
peek ahead	WITHOUT_CLASSIFICATION	0.9999827578300519	WITHOUT_CLASSIFICATION	1.724216994808532E-5	IMPLEMENTATION
if we reach the end of the string w/o finding the matching end that is an exception	WITHOUT_CLASSIFICATION	0.9999990711708748	WITHOUT_CLASSIFICATION	9.288291252508904E-7	IMPLEMENTATION
we have a placeholder spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999491530118368	WITHOUT_CLASSIFICATION	5.084698816317795E-5	IMPLEMENTATION
make sure spinning forward did not put us past the end of the buffer	WITHOUT_CLASSIFICATION	0.9521346958216901	WITHOUT_CLASSIFICATION	0.04786530417830997	IMPLEMENTATION
first try to locate this resource through the current context classloader.	WITHOUT_CLASSIFICATION	0.9979050019653649	WITHOUT_CLASSIFICATION	0.0020949980346350702	IMPLEMENTATION
next try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9995168114213369	WITHOUT_CLASSIFICATION	4.831885786631703E-4	IMPLEMENTATION
next try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9987749308653816	WITHOUT_CLASSIFICATION	0.001225069134618424	IMPLEMENTATION
anywhere else we should look?	WITHOUT_CLASSIFICATION	0.999924557902079	WITHOUT_CLASSIFICATION	7.544209792099878E-5	IMPLEMENTATION
would need an identityset for this!	WITHOUT_CLASSIFICATION	0.9991608522843601	WITHOUT_CLASSIFICATION	8.391477156399392E-4	IMPLEMENTATION
arrays.aslist doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999787904856668	WITHOUT_CLASSIFICATION	2.120951433313618E-5	IMPLEMENTATION
faster?	WITHOUT_CLASSIFICATION	0.9999824330434607	WITHOUT_CLASSIFICATION	1.7566956539352152E-5	IMPLEMENTATION
the name of a class	WITHOUT_CLASSIFICATION	0.999998118317029	WITHOUT_CLASSIFICATION	1.8816829710252097E-6	IMPLEMENTATION
its the listener class name	WITHOUT_CLASSIFICATION	0.9999923655478835	WITHOUT_CLASSIFICATION	7.634452116582735E-6	IMPLEMENTATION
allow 987654321	WITHOUT_CLASSIFICATION	0.9998673918898978	WITHOUT_CLASSIFICATION	1.3260811010222285E-4	IMPLEMENTATION
default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999996632108844	WITHOUT_CLASSIFICATION	3.367891157040627E-7	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999965171692473	WITHOUT_CLASSIFICATION	3.4828307527008644E-6	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999972773237823	WITHOUT_CLASSIFICATION	2.722676217784651E-6	IMPLEMENTATION
first lets determine whether to apply cglib or javassist based instrumentation	WITHOUT_CLASSIFICATION	0.9999929294271886	WITHOUT_CLASSIFICATION	7.070572811407027E-6	IMPLEMENTATION
make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9997967757118503	WITHOUT_CLASSIFICATION	2.0322428814967426E-4	IMPLEMENTATION
entirely optional!!	WITHOUT_CLASSIFICATION	0.9999462761118216	WITHOUT_CLASSIFICATION	5.372388817830949E-5	IMPLEMENTATION
its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9998832438228608	WITHOUT_CLASSIFICATION	1.167561771393386E-4	IMPLEMENTATION
context.unbind(boundname)	WITHOUT_CLASSIFICATION	0.999960806190921	WITHOUT_CLASSIFICATION	3.91938090791539E-5	IMPLEMENTATION
readresolveobject	WITHOUT_CLASSIFICATION	0.999946269014717	WITHOUT_CLASSIFICATION	5.3730985283106414E-5	IMPLEMENTATION
cfg.setproperty("hibernate.show_sql" "true")	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
defensive convenience methods	WITHOUT_CLASSIFICATION	0.9999601737321411	WITHOUT_CLASSIFICATION	3.9826267858918905E-5	IMPLEMENTATION
create the sessionfactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999949671260274	WITHOUT_CLASSIFICATION	5.032873972543201E-6	IMPLEMENTATION
make sure you log the exception as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999942165487599	WITHOUT_CLASSIFICATION	5.783451240206027E-6	IMPLEMENTATION
begin unit of work	WITHOUT_CLASSIFICATION	0.9999043250659004	WITHOUT_CLASSIFICATION	9.567493409948849E-5	IMPLEMENTATION
write html header	WITHOUT_CLASSIFICATION	0.9999196633597321	WITHOUT_CLASSIFICATION	8.033664026790216E-5	IMPLEMENTATION
handle actions	WITHOUT_CLASSIFICATION	0.9999013395125991	WITHOUT_CLASSIFICATION	9.86604874008091E-5	IMPLEMENTATION
print page	WITHOUT_CLASSIFICATION	0.9999935565371912	WITHOUT_CLASSIFICATION	6.443462808721335E-6	IMPLEMENTATION
write html footer	WITHOUT_CLASSIFICATION	0.9998451649052758	WITHOUT_CLASSIFICATION	1.5483509472426858E-4	IMPLEMENTATION
end unit of work	WITHOUT_CLASSIFICATION	0.9998556982596505	WITHOUT_CLASSIFICATION	1.4430174034940185E-4	IMPLEMENTATION
start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999833578274784	WITHOUT_CLASSIFICATION	1.6642172521537784E-5	IMPLEMENTATION
make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9963158435423873	WITHOUT_CLASSIFICATION	0.003684156457612747	IMPLEMENTATION
pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9995871799450966	WITHOUT_CLASSIFICATION	4.128200549033598E-4	IMPLEMENTATION
remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999812494814421	WITHOUT_CLASSIFICATION	1.8750518557942116E-5	IMPLEMENTATION
eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999146397861355	WITHOUT_CLASSIFICATION	8.536021386453533E-5	IMPLEMENTATION
if we want to handle it bidirectional and detached we also need to load this collection with an eager outer-join fetch this time with criteria and not hql	WITHOUT_CLASSIFICATION	0.8365453967435434	WITHOUT_CLASSIFICATION	0.16345460325645655	IMPLEMENTATION
event anevent = (event) session .createcriteria(event.class).setfetchmode("participants" fetchmode.join) .add( expression.eq("id" eventid) ) .uniqueresult() eager fetch the colleciton so we can use it detached	WITHOUT_CLASSIFICATION	0.9998227536628961	WITHOUT_CLASSIFICATION	1.772463371039793E-4	IMPLEMENTATION
end of first unit of work	WITHOUT_CLASSIFICATION	0.999892528373244	WITHOUT_CLASSIFICATION	1.0747162675593275E-4	IMPLEMENTATION
or bidirectional safety method setting both sides aperson.addtoevent(anevent)	WITHOUT_CLASSIFICATION	0.9999454688728758	WITHOUT_CLASSIFICATION	5.4531127124076054E-5	IMPLEMENTATION
begin second unit of work	WITHOUT_CLASSIFICATION	0.9999378620133006	WITHOUT_CLASSIFICATION	6.213798669943824E-5	IMPLEMENTATION
reattachment of aperson	WITHOUT_CLASSIFICATION	0.999981457717061	WITHOUT_CLASSIFICATION	1.8542282938874817E-5	IMPLEMENTATION
the getemailaddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999614405796138	WITHOUT_CLASSIFICATION	3.855942038625445E-5	IMPLEMENTATION
we need our tm so get it now and avoid doing other work if there is a problem	WITHOUT_CLASSIFICATION	0.999983406399053	WITHOUT_CLASSIFICATION	1.6593600947037394E-5	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9991475422782722	WITHOUT_CLASSIFICATION	8.524577217278744E-4	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9991475422782722	WITHOUT_CLASSIFICATION	8.524577217278744E-4	IMPLEMENTATION
jbc put a version in the node when it created as part of some internal operation. we are always newer but if the jbc version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999999996713504	WITHOUT_CLASSIFICATION	3.286495675621343E-10	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for properties with hibernate-specific overrides to detect and warn about conflicting declarations	WITHOUT_CLASSIFICATION	0.9992132313638962	WITHOUT_CLASSIFICATION	7.867686361038536E-4	IMPLEMENTATION
not null if the isolation level has been specified in the configuration file. otherwise it is left to the driver's default value.	WITHOUT_CLASSIFICATION	0.999995109571472	WITHOUT_CLASSIFICATION	4.890428527922149E-6	IMPLEMENTATION
configured outside of hibernate (i.e. servlet container or java bean container already has proxool pools running and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999980433882051	WITHOUT_CLASSIFICATION	1.956611794884347E-6	IMPLEMENTATION
if you're closing down the connectionprovider chances are an is not a real big deal just warn	WITHOUT_CLASSIFICATION	0.9999856793206735	WITHOUT_CLASSIFICATION	1.4320679326473534E-5	IMPLEMENTATION
(as is always optional for consistency with sql/oql)	WITHOUT_CLASSIFICATION	0.9999650023560925	WITHOUT_CLASSIFICATION	3.499764390750122E-5	IMPLEMENTATION
process the "new" hql style where aliases are assigned _after_ the class name or path expression ie. using the as construction	WITHOUT_CLASSIFICATION	0.9999974216735361	WITHOUT_CLASSIFICATION	2.578326463950005E-6	IMPLEMENTATION
the loaded owner will be set to null after the collection is removed so capture its value as the affected owner so it is accessible to both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999927779269638	WITHOUT_CLASSIFICATION	7.2220730362202E-6	IMPLEMENTATION
is a primitive type invokespecial	WITHOUT_CLASSIFICATION	0.999995528688974	WITHOUT_CLASSIFICATION	4.471311025968685E-6	IMPLEMENTATION
array of primitive type do nothing	WITHOUT_CLASSIFICATION	0.9999985256708985	WITHOUT_CLASSIFICATION	1.474329101467946E-6	IMPLEMENTATION
handle a path expression or class name that appears at the start in the "new" hql style or an alias that appears at the start in the "old" hql style	WITHOUT_CLASSIFICATION	0.9999985409821608	WITHOUT_CLASSIFICATION	1.4590178392370942E-6	IMPLEMENTATION
handle <= >= != is not not between not in	WITHOUT_CLASSIFICATION	0.9995847738768564	WITHOUT_CLASSIFICATION	4.152261231435663E-4	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999830866962	WITHOUT_CLASSIFICATION	1.6913303704268404E-8	IMPLEMENTATION
transfer an explicitly defined entity name handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999840544748777	WITHOUT_CLASSIFICATION	1.5945525122238523E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999918017492211	WITHOUT_CLASSIFICATION	8.198250778804686E-6	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999918017492211	WITHOUT_CLASSIFICATION	8.198250778804686E-6	IMPLEMENTATION
get meta's from <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999963343668302	WITHOUT_CLASSIFICATION	3.665633169849251E-6	IMPLEMENTATION
parameters on the property mapping should override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9997471216398411	WITHOUT_CLASSIFICATION	2.5287836015887804E-4	IMPLEMENTATION
fetch="join" overrides default laziness fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999923349593405	WITHOUT_CLASSIFICATION	7.665040659535787E-6	IMPLEMENTATION
note special case default to join and non-lazy for the "second join" of the many-to-many	WITHOUT_CLASSIFICATION	0.9999993610551939	WITHOUT_CLASSIFICATION	6.389448060437634E-7	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.999969557243942	WITHOUT_CLASSIFICATION	3.044275605801523E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999825385451334	WITHOUT_CLASSIFICATION	1.7461454866574824E-5	IMPLEMENTATION
void setcomponenttuplizerfactory(componenttuplizerfactory componenttuplizerfactory) { this.componenttuplizerfactory = componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9995856026113205	WITHOUT_CLASSIFICATION	4.14397388679484E-4	IMPLEMENTATION
element index -> id	WITHOUT_CLASSIFICATION	0.9999589176633501	WITHOUT_CLASSIFICATION	4.108233664987491E-5	IMPLEMENTATION
note that it might be better to iterate the snapshot but this is safe assuming the user implements equals() properly as required by the set contract!	WITHOUT_CLASSIFICATION	0.9999766221612862	WITHOUT_CLASSIFICATION	2.3377838713691305E-5	IMPLEMENTATION
collections detect changes made via their public interface and mark themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9965031990191567	WITHOUT_CLASSIFICATION	0.0034968009808432547	IMPLEMENTATION
essentially if the real session is closed allow any method call to pass through since the real session will complain by throwing an appropriate exception note that allowing close() above has the same basic effect but we capture that there simply to perform the unbind	WITHOUT_CLASSIFICATION	0.9999933663353998	WITHOUT_CLASSIFICATION	6.63366460009419E-6	IMPLEMENTATION
the default sqlexceptionconverter for all dialects is based on sqlstate since sqlerrorcode is extremely vendor-specific. specific dialects may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9956578404439181	WITHOUT_CLASSIFICATION	0.004342159556081881	IMPLEMENTATION
only necessary for postgre < 7.4 httpanoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999514385453578	WITHOUT_CLASSIFICATION	4.8561454642117923E-5	IMPLEMENTATION
select topic syntax from information_schema.help where section like 'function%' order by section topic see also -> httpwww.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999993093861669	WITHOUT_CLASSIFICATION	6.906138330375239E-7	IMPLEMENTATION
registercolumntype(types.varbinary "character($l)") registercolumntype(types.blob "character($l)" ) for use prior to cp 11.0 registercolumntype(types.clob "character($l)" )	WITHOUT_CLASSIFICATION	0.9998939882929104	WITHOUT_CLASSIFICATION	1.0601170708963792E-4	IMPLEMENTATION
the blob type requires a size arguement - this defaults to bytes - no arg defaults to 1 whole byte! other argument mods include k - kilobyte m - megabyte g - gigabyte. refer to the pbdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999944899730243	WITHOUT_CLASSIFICATION	5.510026975666476E-6	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9998479253401413	WITHOUT_CLASSIFICATION	1.5207465985868048E-4	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999985055741176	WITHOUT_CLASSIFICATION	1.4944258824232305E-6	IMPLEMENTATION
add the comment nest the main query in an outer select add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999998843303526	WITHOUT_CLASSIFICATION	1.1566964746012204E-7	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999850572138798	WITHOUT_CLASSIFICATION	1.4942786120204721E-5	IMPLEMENTATION
note for object <-> sql datatype mappings see configuration manager | advanced | sql | system ddl datatype mappings tbdregistercolumntype(types.binary "binary($1)") changed 08-11-2005 jsl	WITHOUT_CLASSIFICATION	0.999999998256608	WITHOUT_CLASSIFICATION	1.7433919626198088E-9	IMPLEMENTATION
trim(end_keyword string-expression-1 from string-expression-2) use hibernate implementation "from" is one of the parameters they pass in position ?3 registerfunction( "trim" new sqlfunctiontemplate(hibernate.string "trim(?1 ?2 from ?3)") )	WITHOUT_CLASSIFICATION	0.9999955432343618	WITHOUT_CLASSIFICATION	4.456765638196919E-6	IMPLEMENTATION
whether this dialect has an identity clause added to the data type or a completely seperate identity data type	WITHOUT_CLASSIFICATION	0.9999999860964238	WITHOUT_CLASSIFICATION	1.390357619821714E-8	IMPLEMENTATION
according to both the ansi-sql and jpa specs trim takes a variable number of parameters between 1 and 4. at least one paramer (trimsource) is required. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if <trim specification> is omitted both is assumed. if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.9999999956084291	WITHOUT_CLASSIFICATION	4.391570922345171E-9	IMPLEMENTATION
/ prepare persisters and link them up with their cache region/access-strategy	WITHOUT_CLASSIFICATION	0.9999910806050151	WITHOUT_CLASSIFICATION	8.919394984995432E-6	IMPLEMENTATION
named queries	WITHOUT_CLASSIFICATION	0.9999746892294002	WITHOUT_CLASSIFICATION	2.5310770599804497E-5	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999787698738267	WITHOUT_CLASSIFICATION	2.1230126173248307E-5	IMPLEMENTATION
does not handle arrays (thats ok cos they can't be lazy) or newly instantiated collections so we can do the cast	WITHOUT_CLASSIFICATION	0.9884530953155336	WITHOUT_CLASSIFICATION	0.011546904684466393	IMPLEMENTATION
collection deletions are a special case since update() can add deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999668867838934	WITHOUT_CLASSIFICATION	3.311321610658483E-5	IMPLEMENTATION
we can do the cast since orphan-delete does not apply to 1. newly instantiated collections 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.998696392946492	WITHOUT_CLASSIFICATION	0.0013036070535079902	IMPLEMENTATION
if the natural-id is marked as non-mutable it is not retrieved during a normal database-snapshot operation	WITHOUT_CLASSIFICATION	0.9999926659366241	WITHOUT_CLASSIFICATION	7.334063375939296E-6	IMPLEMENTATION
watch out for a case where old is still referenced somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999998820596276	WITHOUT_CLASSIFICATION	1.1794037231910763E-7	IMPLEMENTATION
slice to get the columns for this component property	WITHOUT_CLASSIFICATION	0.9999992605908573	WITHOUT_CLASSIFICATION	7.394091426122736E-7	IMPLEMENTATION
int result = 17 result = 37 result + type.hashcode() result = 37 result + ( value==null ? 0 value.hashcode() ) return result	WITHOUT_CLASSIFICATION	0.9999912459936765	WITHOUT_CLASSIFICATION	8.754006323542775E-6	IMPLEMENTATION
the collectionentry.isreached() stuff is just to detect any silly users who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.999996230114	WITHOUT_CLASSIFICATION	3.7698860000016896E-6	IMPLEMENTATION
detached collection wrappers that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9952091828600654	WITHOUT_CLASSIFICATION	0.0047908171399346135	IMPLEMENTATION
the unique property value represented here may or may not be serializable so we do an explicit check here in order to generate a better error message	WITHOUT_CLASSIFICATION	0.9717478966099604	WITHOUT_CLASSIFICATION	0.028252103390039578	IMPLEMENTATION
if the version of a newly instantiated object is not the same as the version seed value use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9994894888492031	WITHOUT_CLASSIFICATION	5.105111507970018E-4	IMPLEMENTATION
ie. we never have to null out a reference to an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999950777119367	WITHOUT_CLASSIFICATION	4.922288063176754E-6	IMPLEMENTATION
ignore this row the collection is in process of being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999990974780352	WITHOUT_CLASSIFICATION	9.025219647043939E-7	IMPLEMENTATION
entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currently not yet used	WITHOUT_CLASSIFICATION	0.9991978734506448	WITHOUT_CLASSIFICATION	8.021265493552648E-4	IMPLEMENTATION
should be ok performance-wise to generate new delegate instances for each request since these are locally stack-scoped. besides it makes the code much easier to read than the old transactionhelper stuff	WITHOUT_CLASSIFICATION	0.9999999759946226	WITHOUT_CLASSIFICATION	2.4005377403589282E-8	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998227784347018	WITHOUT_CLASSIFICATION	1.7722156529832145E-4	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998227784347018	WITHOUT_CLASSIFICATION	1.7722156529832145E-4	IMPLEMENTATION
wrap up any new collections directly referenced by the object or its components	WITHOUT_CLASSIFICATION	0.9999997766753081	WITHOUT_CLASSIFICATION	2.2332469177157392E-7	IMPLEMENTATION
remove any snapshot not really for memory management purposes but rather because it might now be stale and there is no longer any entityentry to take precedence this is now handled by removeentity() session.getpersistencecontext().removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.9999999722828334	WITHOUT_CLASSIFICATION	2.771716648314209E-8	IMPLEMENTATION
skip this check for composite-ids relating to dom4j entity-mode alternatively we could add a check to make sure the incoming id value is an instance of element	WITHOUT_CLASSIFICATION	0.9994331420581214	WITHOUT_CLASSIFICATION	5.668579418785779E-4	IMPLEMENTATION
upgrade the lock if necessary lock(result lockmode)	WITHOUT_CLASSIFICATION	0.9999843143444023	WITHOUT_CLASSIFICATION	1.568565559776729E-5	IMPLEMENTATION
now any collections that are initialized inside this block do not get updated - they are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9232936679623167	WITHOUT_CLASSIFICATION	0.07670633203768322	IMPLEMENTATION
we must clone embedded composite identifiers or we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999986298892282	WITHOUT_CLASSIFICATION	1.370110771849744E-6	IMPLEMENTATION
sub-insertions should occur before containing insertion so try to do the callback now	WITHOUT_CLASSIFICATION	0.9998003147012235	WITHOUT_CLASSIFICATION	1.9968529877646327E-4	IMPLEMENTATION
the entity is not associated with the session so try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9975648224145975	WITHOUT_CLASSIFICATION	0.0024351775854025244	IMPLEMENTATION
scan the query string for class names appearing in the from clause and replace with all persistent implementors of the class/interface returning multiple query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999676053873224	WITHOUT_CLASSIFICATION	3.239461267755913E-5	IMPLEMENTATION
save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999852430326161	WITHOUT_CLASSIFICATION	1.4756967383899354E-4	IMPLEMENTATION
evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999852430326161	WITHOUT_CLASSIFICATION	1.4756967383899354E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999903178720161	WITHOUT_CLASSIFICATION	9.682127983860812E-6	IMPLEMENTATION
if it is an uninitialized proxy pointing with this session then when it is accessed the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.999999853884412	WITHOUT_CLASSIFICATION	1.4611558800043598E-7	IMPLEMENTATION
generate an explicit join for the root dot node. the implied joins will be collected and passed up to the root dot node.	WITHOUT_CLASSIFICATION	0.9999979297456604	WITHOUT_CLASSIFICATION	2.0702543396119597E-6	IMPLEMENTATION
a session is considered to contain an entity only if the entity has an entry in the session's persistence context and the entry reports that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9985811064678524	WITHOUT_CLASSIFICATION	0.0014188935321475969	IMPLEMENTATION
does the collection referenced by this fromelement specify an order-by attribute? if so attach it to the query's order-by	WITHOUT_CLASSIFICATION	0.999999769843629	WITHOUT_CLASSIFICATION	2.3015637090384912E-7	IMPLEMENTATION
and the token could be an identifer and the error is a mismatched token error	WITHOUT_CLASSIFICATION	0.999978090116218	WITHOUT_CLASSIFICATION	2.190988378196977E-5	IMPLEMENTATION
if a where clause was specified in the update/delete query use it to limit the returned ids here	WITHOUT_CLASSIFICATION	0.9999996977242603	WITHOUT_CLASSIFICATION	3.0227573959340246E-7	IMPLEMENTATION
int parameterstart = getwalker().getnumberofparametersinsetclause() list allparams = getidselectparameterspecifications() iterator whereparams = allparams.sublist( parameterstart allparams.size() ).iterator()	WITHOUT_CLASSIFICATION	0.999985391338988	WITHOUT_CLASSIFICATION	1.4608661012073816E-5	IMPLEMENTATION
default implementation if this node has a data type and that data type is not an association then this is scalar.	WITHOUT_CLASSIFICATION	0.999997260847703	WITHOUT_CLASSIFICATION	2.7391522969634044E-6	IMPLEMENTATION
resolve the lhs fully generate implicit joins. pass in the property name so that the resolver can discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999696571229573	WITHOUT_CLASSIFICATION	3.0342877042747643E-5	IMPLEMENTATION
if the propertytype is null and there isn't a parent just stop now there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999997684427214	WITHOUT_CLASSIFICATION	2.3155727842058078E-7	IMPLEMENTATION
we do not look for an existing join on the same path because it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9993346163889862	WITHOUT_CLASSIFICATION	6.653836110137775E-4	IMPLEMENTATION
our parent is another dot node meaning we are being further dereferenced. thus we need to generate a join unless the parent refers to the associated entity's pk (because 'our' table would know the fk).	WITHOUT_CLASSIFICATION	0.9956594898536268	WITHOUT_CLASSIFICATION	0.004340510146373215	IMPLEMENTATION
public final currency getcurrency(int col) throws hibernateexception {return (currency) get(col)}	WITHOUT_CLASSIFICATION	0.9999442286426647	WITHOUT_CLASSIFICATION	5.5771357335310754E-5	IMPLEMENTATION
here we have two possibilities 1) the property-name matches the explicitly identifier property name 2) the property-name matches the implicit 'id' property name	WITHOUT_CLASSIFICATION	0.9998610093534424	WITHOUT_CLASSIFICATION	1.3899064655770922E-4	IMPLEMENTATION
set the unresolved path in this node and the parent. set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999195495570024	WITHOUT_CLASSIFICATION	8.045044299770256E-5	IMPLEMENTATION
get the first child to be considered. sub-classes may do this differently in order to skip nodes that are not select expressions (e.g. distinct).	WITHOUT_CLASSIFICATION	0.9995213474780354	WITHOUT_CLASSIFICATION	4.786525219646112E-4	IMPLEMENTATION
if this is an entity and the property is the identifier property then use getidentifiertype(). note that the propertyname.equals( propertypath ) checks whether we have a component key reference where the component class property name is the same as the entity id property name if the two are not equal this is the case and we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.999994083592917	WITHOUT_CLASSIFICATION	5.916407082977197E-6	IMPLEMENTATION
for a subquery the alias to use depends on a few things (we already know this is not an overall select) 1) if this from_element represents a correlation to the outer-most query a) if the outer query represents a multi-table persister we need to use the given alias in anticipation of one of the multi-table executors being used (as this subquery will actually be used in the "id select" phase of that multi-table executor) b) otherwise we need to use the persister's table name as the column qualification 2) otherwise (not correlated) use the given alias	WITHOUT_CLASSIFICATION	0.9989499295809784	WITHOUT_CLASSIFICATION	0.0010500704190216342	IMPLEMENTATION
not a collection? return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9988865252043693	WITHOUT_CLASSIFICATION	0.0011134747956306982	IMPLEMENTATION
collection of <many-to-any/> mappings used to circumvent the component-collection check below	WITHOUT_CLASSIFICATION	0.9998546293139753	WITHOUT_CLASSIFICATION	1.4537068602471997E-4	IMPLEMENTATION
otherwise the destination node was implied by the from clause and the from clause processor will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999985367361721	WITHOUT_CLASSIFICATION	1.4632638279891185E-6	IMPLEMENTATION
if the first identifier in the path referrs to the class alias (not the class name) then this is a correlated subselect. if it's a correlated sub-select use the existing table alias. otherwise generate a new one.	WITHOUT_CLASSIFICATION	0.9999995458578653	WITHOUT_CLASSIFICATION	4.541421346933786E-7	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999940172094512	WITHOUT_CLASSIFICATION	5.982790548800368E-6	IMPLEMENTATION
an ident node can represent an index expression if the ident represents a naked property ref note this makes the assumption (which is currently the case in the hql-sql grammar) that the ident is first resolved itself (addrexpr -> resolve()). the other option if that changes is to call resolve from here but it is currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999179733159	WITHOUT_CLASSIFICATION	8.202668420452917E-8	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9998675313353833	WITHOUT_CLASSIFICATION	1.324686646166571E-4	IMPLEMENTATION
if this is an implied join in a from clause then use ansi-style joining and set the flag on the fromelement that indicates that it was implied in the from clause itself.	WITHOUT_CLASSIFICATION	0.9999997889549752	WITHOUT_CLASSIFICATION	2.1104502473556138E-7	IMPLEMENTATION
origin.adddestination(destination) add the query spaces.	WITHOUT_CLASSIFICATION	0.9999652709634343	WITHOUT_CLASSIFICATION	3.472903656566281E-5	IMPLEMENTATION
for an explicit many-to-many relationship add a second join from the intermediate (many-to-many) table to the destination table. also make sure that the from element's idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999941512616436	WITHOUT_CLASSIFICATION	5.848738356327087E-6	IMPLEMENTATION
reset the node type because the rest of the system is expecting from_fragment all we wanted was for the factory to create the right sub-class. this might get reset again later on anyway to make the sql generation simpler.	WITHOUT_CLASSIFICATION	0.9999724464852026	WITHOUT_CLASSIFICATION	2.7553514797462378E-5	IMPLEMENTATION
explicit = true this is an explict select. arraylist sqlresulttypelist = new arraylist()	WITHOUT_CLASSIFICATION	0.9999964985735948	WITHOUT_CLASSIFICATION	3.501426405296618E-6	IMPLEMENTATION
sqlresulttypelist.add( type ) generate the select expression.	WITHOUT_CLASSIFICATION	0.9999893568436572	WITHOUT_CLASSIFICATION	1.0643156342834737E-5	IMPLEMENTATION
if the expression list has exactly one expression and the type of the expression is a collection then this might be a collection function such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999999430428104	WITHOUT_CLASSIFICATION	5.6957189639396256E-8	IMPLEMENTATION
need to parse off the column qualifiers this is assuming (which is true as of now) that this is only used from update and delete hql statement parsing	WITHOUT_CLASSIFICATION	0.9999869283209352	WITHOUT_CLASSIFICATION	1.3071679064924787E-5	IMPLEMENTATION
for regression testing against output from the old parser found it easiest to simply reorder the fromelements here into ascending order in terms of injecting them into the resulting sql ast in orders relative to those expected by the old parser this is definitely another of those "only needed for regression purposes". the syntheticandfactory then simply injects them as it encounters them.	WITHOUT_CLASSIFICATION	0.9999488275701731	WITHOUT_CLASSIFICATION	5.1172429826956516E-5	IMPLEMENTATION
the uber-rule here is that we need to include subclass joins if the fromelement is in any way dereferenced by a property from the subclass table otherwise we end up with column references qualified by a non-existent table reference in the resulting sql	WITHOUT_CLASSIFICATION	0.9999964208699834	WITHOUT_CLASSIFICATION	3.579130016477845E-6	IMPLEMENTATION
classic translator does not support collection of ordinal param metadata	WITHOUT_CLASSIFICATION	0.9981235086746285	WITHOUT_CLASSIFICATION	0.001876491325371442	IMPLEMENTATION
the following variables are stacks that keep information about each subexpression in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999999878643191	WITHOUT_CLASSIFICATION	1.2135680828819056E-8	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999830866962	WITHOUT_CLASSIFICATION	1.6913303704268404E-8	IMPLEMENTATION
should not be able to reach last without maxposition being set unless there are no results	WITHOUT_CLASSIFICATION	0.9999384335059917	WITHOUT_CLASSIFICATION	6.156649400832901E-5	IMPLEMENTATION
we found it in the temp pc. should indicate we are in the midst of processing a result set containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999957428057222	WITHOUT_CLASSIFICATION	4.257194277777682E-6	IMPLEMENTATION
do not use proxiesbykey since not all proxies that point to this session's instances are in that collection!	WITHOUT_CLASSIFICATION	0.998946404071487	WITHOUT_CLASSIFICATION	0.0010535959285129276	IMPLEMENTATION
if there is no tm configured we will not be able to access the javax.transaction.transaction object in order to register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999994814799994	WITHOUT_CLASSIFICATION	5.185200006613324E-7	IMPLEMENTATION
since the result set cursor is always left at the first physical row after the "last processed" we need to jump back one position to get the key value we are interested in skipping	WITHOUT_CLASSIFICATION	0.9999991567917691	WITHOUT_CLASSIFICATION	8.432082308399824E-7	IMPLEMENTATION
true if this is a query and we are loading multiple instances of the same collection role otherwise this is a collectioninitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999917098011987	WITHOUT_CLASSIFICATION	8.290198801420069E-6	IMPLEMENTATION
we don't need to worry about existing version being uninitialized because this block isn't called by a re-entrant load (re-entrant loads _always_ have lock mode none)	WITHOUT_CLASSIFICATION	0.9998484353247341	WITHOUT_CLASSIFICATION	1.5156467526593727E-4	IMPLEMENTATION
add temp entry so that the next step is circular-reference safe - only needed because some types don't take proper advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.6251437912165475	IMPLEMENTATION	0.37485620878345244	WITHOUT_CLASSIFICATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.999999923063627	WITHOUT_CLASSIFICATION	7.69363730477904E-8	IMPLEMENTATION
log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9874720421988554	WITHOUT_CLASSIFICATION	0.01252795780114469	IMPLEMENTATION
ps.close() just close it do not try to return it to the pool! note early exit!	WITHOUT_CLASSIFICATION	0.9999574721295741	WITHOUT_CLASSIFICATION	4.252787042601983E-5	IMPLEMENTATION
this has been shown to happen occasionally in rare cases when using a transaction manager + transaction-timeout where the timeout calls back through hibernate's registered transaction synchronization on a separate "reaping" thread. in cases where that reaping thread executes through this block at the same time the main application thread does we can get into situations where these cmes occur. and though it is not "allowed" per-se the end result without handling it specifically is infinite looping. so here we simply break the loop	WITHOUT_CLASSIFICATION	0.9981385351888992	WITHOUT_CLASSIFICATION	0.0018614648111007909	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9998704650915573	WITHOUT_CLASSIFICATION	1.295349084427817E-4	IMPLEMENTATION
can't cache this stuff either (per-invocation) we are given a map of user-alias -> lock mode create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999990910803751	WITHOUT_CLASSIFICATION	9.089196248354108E-7	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns getcollectiontable().createuniquekey( getidentifier().getconstraintcolumns() )	WITHOUT_CLASSIFICATION	0.9989556626783191	WITHOUT_CLASSIFICATION	0.0010443373216809495	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999739583556777	WITHOUT_CLASSIFICATION	2.6041644322269096E-5	IMPLEMENTATION
isset = collection.isset() issorted = collection.issorted()	WITHOUT_CLASSIFICATION	0.9999027721065928	WITHOUT_CLASSIFICATION	9.722789340719718E-5	IMPLEMENTATION
lists arrays sets maps bags	WITHOUT_CLASSIFICATION	0.9999882066336722	WITHOUT_CLASSIFICATION	1.1793366327892237E-5	IMPLEMENTATION
we finish all the "removes" first to take care of possible unique constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9993657214139026	WITHOUT_CLASSIFICATION	6.342785860973824E-4	IMPLEMENTATION
use a combination of foreign key columns and pk columns since the ordering of removal and addition is not guaranteed when a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9998889629391252	WITHOUT_CLASSIFICATION	1.1103706087482298E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999739583556777	WITHOUT_CLASSIFICATION	2.6041644322269096E-5	IMPLEMENTATION
information about properties of this class including inherited properties (only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9415799901910799	WITHOUT_CLASSIFICATION	0.05842000980892018	IMPLEMENTATION
all this only really needs to consider properties of this class not its subclasses but since we are reusing code used for sequential selects we use the subclass closure	WITHOUT_CLASSIFICATION	0.9999969259398985	WITHOUT_CLASSIFICATION	3.0740601013971275E-6	IMPLEMENTATION
here we render the select column list based on the properties defined as being generated. for partial component generation we currently just re-select the whole component rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999949903102552	WITHOUT_CLASSIFICATION	5.009689744817285E-6	IMPLEMENTATION
this is the root (versioned) table and we are using version-based optimistic locking if we are not updating the version also don't check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.998903742075765	WITHOUT_CLASSIFICATION	0.0010962579242349366	IMPLEMENTATION
optimistic-lock="all" include all updatable properties optimistic-lock="dirty" include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999848417656783	WITHOUT_CLASSIFICATION	1.515823432172599E-5	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997666328669063	WITHOUT_CLASSIFICATION	2.3336713309379825E-4	IMPLEMENTATION
check to see if the connection is in auto-commit mode (no connection means aggressive connection release outside a jta transaction context so must be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999740255789089	WITHOUT_CLASSIFICATION	2.5974421091163165E-5	IMPLEMENTATION
need to treat this as if it where optimistic-lock="all" (dirty does not make sense) first we need to locate the "loaded" state note it potentially could be a proxy so perform the location the safe way	WITHOUT_CLASSIFICATION	0.9889307951057963	WITHOUT_CLASSIFICATION	0.011069204894203594	IMPLEMENTATION
we always assume an instance with a null identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999993056800599	WITHOUT_CLASSIFICATION	6.943199400162516E-7	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9999479675084498	WITHOUT_CLASSIFICATION	5.2032491550201055E-5	IMPLEMENTATION
allow any identifier quoted with backtick only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.999951350963717	WITHOUT_CLASSIFICATION	4.864903628286045E-5	IMPLEMENTATION
following doesn't handle (null not null) but unnecessary since this would mean all rows	WITHOUT_CLASSIFICATION	0.9984478836492908	WITHOUT_CLASSIFICATION	0.0015521163507092122	IMPLEMENTATION
impl note due to the delayed population of setters (setters cached for performance) we really cannot pro0perly define equality for this transformer	WITHOUT_CLASSIFICATION	0.9999993416272426	WITHOUT_CLASSIFICATION	6.583727574211262E-7	IMPLEMENTATION
we need to dirty check collections since they can cause an owner version number increment	WITHOUT_CLASSIFICATION	0.99458134710266	WITHOUT_CLASSIFICATION	0.0054186528973399805	IMPLEMENTATION
return the id so we can use it to reset the proxy id return result	WITHOUT_CLASSIFICATION	0.9997654274486373	WITHOUT_CLASSIFICATION	2.3457255136271135E-4	IMPLEMENTATION
optimizer = getfactory().getsettings().getbytecodeprovider().getreflectionoptimizer( mappedclass getternames setternames proptypes )	WITHOUT_CLASSIFICATION	0.9998505519982727	WITHOUT_CLASSIFICATION	1.4944800172733667E-4	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9953265959196713	WITHOUT_CLASSIFICATION	0.004673404080328703	IMPLEMENTATION
we now have the value of the property-ref we reference. however we need to dig a little deeper as that property might also be an entity type in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999953997361287	WITHOUT_CLASSIFICATION	4.600263871305941E-6	IMPLEMENTATION
retrieve the value of the designated column in the current row of this resultset object as a java.io.reader object	WITHOUT_CLASSIFICATION	0.9999979817502384	WITHOUT_CLASSIFICATION	2.0182497615780568E-6	IMPLEMENTATION
not absolutely necessary but helps for some equals()/hashcode() implementations	WITHOUT_CLASSIFICATION	0.9978800788541411	WITHOUT_CLASSIFICATION	0.0021199211458589767	IMPLEMENTATION
this should be a call to resolve() not resolveidentifier() 'cos it might be a property-ref and we did not cache the referenced value	WITHOUT_CLASSIFICATION	0.9965451491350781	WITHOUT_CLASSIFICATION	0.0034548508649218665	IMPLEMENTATION
if we have <tt>not-found="ignore"</tt> association mapped to a formula we always need to dirty check it so we can update the second-level cache	WITHOUT_CLASSIFICATION	0.9994107976109099	WITHOUT_CLASSIFICATION	5.892023890901822E-4	IMPLEMENTATION
can't just return null here since that would cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999770769758513	WITHOUT_CLASSIFICATION	2.2923024148748035E-5	IMPLEMENTATION
for arrays replaceelements() may return a different reference since the array length might not match	WITHOUT_CLASSIFICATION	0.999878086171435	WITHOUT_CLASSIFICATION	1.219138285649147E-4	IMPLEMENTATION
actual cache of the entries. soft references are used for both the keys and the values here since the values pertaining to the mru entries are kept in a seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999989943795	WITHOUT_CLASSIFICATION	1.005620417943288E-9	IMPLEMENTATION
as soon as we encounter our first letter return the substring from that position	WITHOUT_CLASSIFICATION	0.9999935659266135	WITHOUT_CLASSIFICATION	6.43407338656727E-6	IMPLEMENTATION
note expected in the syntax type=listenerclass ({sep}type=listenerclass) where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.999998819053421	WITHOUT_CLASSIFICATION	1.1809465789947663E-6	IMPLEMENTATION
istransactioncallbackregistered denotes whether any hibernate transaction has registered as a callback against this jdbccontext only one such callback is allowed. directly serializing this value causes problems with jdbctransaction or really any transaction impl where the callback is local to the transaction instance itself since that transaction is not serialized along with the jdbccontext. thus we handle that fact here explicitly	WITHOUT_CLASSIFICATION	0.9999419643564682	WITHOUT_CLASSIFICATION	5.803564353184635E-5	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.999902689372155	WITHOUT_CLASSIFICATION	9.731062784500609E-5	IMPLEMENTATION
we call getkeyfromresultset() here so that we can know the key value upon which to perform the breaking logic. however it is also then called from getrowfromresultset() which is certainly not the most efficient. but the call here is needed and there currently is no other way without refactoring of the doquery()/getrowfromresultset() methods	WITHOUT_CLASSIFICATION	0.9954250867473328	IMPLEMENTATION	0.0045749132526671414	WITHOUT_CLASSIFICATION
this check is needed since processing leaves the cursor after the last physical row for the current logical row thus if we are after the last physical row this might be caused by either 1) scrolling to the last logical row 2) scrolling past the last logical row in the latter scenario the previous logical row really is the last logical row. in all other cases we should process back two logical records (the current logic row plus the previous logical row).	WITHOUT_CLASSIFICATION	0.9980229743586375	WITHOUT_CLASSIFICATION	0.001977025641362567	IMPLEMENTATION
and perform the load	WITHOUT_CLASSIFICATION	0.9999438991414445	WITHOUT_CLASSIFICATION	5.6100858555537084E-5	IMPLEMENTATION
important reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999343057585816	WITHOUT_CLASSIFICATION	6.56942414184934E-5	IMPLEMENTATION
this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999927006076267	WITHOUT_CLASSIFICATION	7.299392373342644E-6	IMPLEMENTATION
we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999981749120149	WITHOUT_CLASSIFICATION	1.825087985042877E-6	IMPLEMENTATION
we did not find a collection element in the result set so we ensure that a collection is created with the owner's identifier since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9995849056250169	WITHOUT_CLASSIFICATION	4.1509437498314595E-4	IMPLEMENTATION
this is a collection initializer so we must create a collection for each of the passed-in keys to account for the possibility that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999980873323407	WITHOUT_CLASSIFICATION	1.9126676592497824E-6	IMPLEMENTATION
grab its state from the resultset and keep it in the session (but don't yet initialize the object itself) note that we acquire lockmode.read even if it was not requested	WITHOUT_CLASSIFICATION	0.9999999110858264	WITHOUT_CLASSIFICATION	8.891417355925091E-8	IMPLEMENTATION
a many-to-many decrement currentdepth here to allow join across the association table without exceeding max_fetch_depth (i.e. the "currentdepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9998870362892679	WITHOUT_CLASSIFICATION	1.129637107322083E-4	IMPLEMENTATION
if not a composite key use "foo in (? ? ?)" for batching if no batch and not a composite key use "foo = ?"	WITHOUT_CLASSIFICATION	0.9998945488048012	WITHOUT_CLASSIFICATION	1.054511951988513E-4	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9997111054365888	WITHOUT_CLASSIFICATION	2.8889456341122267E-4	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999951063689406	WITHOUT_CLASSIFICATION	4.893631059457453E-6	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999951063689406	WITHOUT_CLASSIFICATION	4.893631059457453E-6	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999920299095244	WITHOUT_CLASSIFICATION	7.970090475468375E-6	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999998411949933	WITHOUT_CLASSIFICATION	1.5880500665630608E-7	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999604555896395	WITHOUT_CLASSIFICATION	3.9544410360519965E-5	IMPLEMENTATION
translates an ast join type (i.e. the token type) into a joinfragment.xxx join type. @param astjointype the ast join type (from hqlsqltokentypes or sqltokentypes) @return a joinfragment.xxx join type. @see joinfragment @see sqltokentypes	WITHOUT_CLASSIFICATION	0.9999972049060926	WITHOUT_CLASSIFICATION	2.7950939073405235E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999772037334894	WITHOUT_CLASSIFICATION	2.2796266510569544E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999772037334894	WITHOUT_CLASSIFICATION	2.2796266510569544E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999594355240138	WITHOUT_CLASSIFICATION	4.056447598626448E-5	IMPLEMENTATION
public list getcollectionaliases() { return collectionaliases } public list getcollectionowners() { return collectionowners } public list getcollectionowneraliases() { return collectionowneraliases } public list getcollectionpersisters() { return collectionpersisters } public map getalias2persister() { return alias2persister } public boolean iscollectioninitializer() { return iscollectioninitializer } public list getpersisters() { return persisters } public map getalias2owneralias() { return alias2owneralias } public list getscalartypes() { return scalartypes } public list getscalarcolumnaliases() { return scalarcolumnaliases } public list getpropertyresults() { return propertyresults } public list getcollectionpropertyresults() { return collectionresults } public map getalias2return() { return alias2return }	WITHOUT_CLASSIFICATION	0.9999955730340755	WITHOUT_CLASSIFICATION	4.4269659244776755E-6	IMPLEMENTATION
sqlqueryparser parser = new sqlqueryparser( sqlquery processor.getalias2persister() processor.getalias2return() aliases collaliases collpersisters suffixes collsuffixes ) sql = parser.process() namedparameterbindpoints = parser.getnamedparameters()	WITHOUT_CLASSIFICATION	0.9998920977877863	WITHOUT_CLASSIFICATION	1.0790221221368666E-4	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998435465283537	WITHOUT_CLASSIFICATION	1.5645347164631673E-4	IMPLEMENTATION
sqlaliassuffixes[i] = element.getcolumnaliassuffix()	WITHOUT_CLASSIFICATION	0.9999027721065928	WITHOUT_CLASSIFICATION	9.722789340719718E-5	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9992072420988081	WITHOUT_CLASSIFICATION	7.927579011920031E-4	IMPLEMENTATION
at this point we have (drivingsqlalias) the sql alias of the driving table corresponding to the given user alias. however the driving table is not (necessarily) the table against which we want to apply locks. mainly the exception case here is joined-subclass hierarchies where we instead want to apply the lock against the root table (for all other strategies it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9863434861658849	WITHOUT_CLASSIFICATION	0.013656513834115163	IMPLEMENTATION
the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.999977798147677	WITHOUT_CLASSIFICATION	2.2201852323033416E-5	IMPLEMENTATION
we have a mapped identifier property and the root of the incoming property path matched that identifier property	WITHOUT_CLASSIFICATION	0.9998689262577158	WITHOUT_CLASSIFICATION	1.310737422840937E-4	IMPLEMENTATION
we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999708961961717	WITHOUT_CLASSIFICATION	2.910380382825089E-5	IMPLEMENTATION
both many-to-one and one-to-one are represented as a property. entitypersister is relying on this value to determine "lazy fetch groups" in terms of field-level interception. so we need to make sure that we return true here for the case of many-to-one and one-to-one with lazy="no-proxy" impl note - lazy="no-proxy" currently forces both lazy and unwrap to be set to true. the other case we are extremely interested in here is that of lazy="proxy" where lazy is set to true but unwrap is set to false. thus we use both here under the assumption that this return is really only ever used during persister construction to determine the lazy property/field fetch groupings. if that assertion changes then this check needs to change as well. partially this is an issue with the overloading of the term "lazy" here	WITHOUT_CLASSIFICATION	0.9999999988401892	WITHOUT_CLASSIFICATION	1.1598108101317662E-9	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999974617520364	WITHOUT_CLASSIFICATION	2.538247963537664E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999974617520364	WITHOUT_CLASSIFICATION	2.538247963537664E-6	IMPLEMENTATION
roottablename = persistentclass.getroottable().getqualifiedname( factory.getdialect() factory.getdefaultcatalog() factory.getdefaultschema() )	WITHOUT_CLASSIFICATION	0.9998505519982727	WITHOUT_CLASSIFICATION	1.4944800172733667E-4	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.999991663582795	WITHOUT_CLASSIFICATION	8.33641720505505E-6	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999936765615626	WITHOUT_CLASSIFICATION	6.323438437469184E-6	IMPLEMENTATION
protected void initpropertypaths(final string pathfinal type typefinal string[] columnsfinal string[] formulatemplatesfinal mapping factory)throws mappingexception {addformulapropertypath(path type formulatemplates)initpropertypaths(path type columns formulatemplates factory)}	WITHOUT_CLASSIFICATION	0.9999942362357113	WITHOUT_CLASSIFICATION	5.763764288774445E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
custom sql (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999863770023358	WITHOUT_CLASSIFICATION	1.362299766406089E-5	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999885745539229	WITHOUT_CLASSIFICATION	1.1425446077144408E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
aliases for identifier ( alias.id ) skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999981833075763	WITHOUT_CLASSIFICATION	1.8166924237412746E-6	IMPLEMENTATION
decide which resultset to get the property value from	WITHOUT_CLASSIFICATION	0.9999870811469415	WITHOUT_CLASSIFICATION	1.2918853058515087E-5	IMPLEMENTATION
note it is conceptually possible that a usertype could map null to a non-null value so the following is arguable	WITHOUT_CLASSIFICATION	0.9998815516672985	WITHOUT_CLASSIFICATION	1.1844833270148636E-4	IMPLEMENTATION
the contract of entitytuplizer.determineconcretesubclassentityname says that returning null is an indication that the specified entity-name (this.getentityname) should be used.	WITHOUT_CLASSIFICATION	0.9999898134071997	WITHOUT_CLASSIFICATION	1.0186592800315585E-5	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9999479675084498	WITHOUT_CLASSIFICATION	5.2032491550201055E-5	IMPLEMENTATION
cache these since they are stateless this one could even be static	WITHOUT_CLASSIFICATION	0.9999721339955643	WITHOUT_CLASSIFICATION	2.7866004435687386E-5	IMPLEMENTATION
"as" is not in keywords	WITHOUT_CLASSIFICATION	0.9998767856321958	WITHOUT_CLASSIFICATION	1.2321436780419898E-4	IMPLEMENTATION
--commented out by inspection (12/4/04 910 am) public abstract void addcondition(string alias string[] columns string condition)	WITHOUT_CLASSIFICATION	0.9999998303385625	WITHOUT_CLASSIFICATION	1.6966143744314257E-7	IMPLEMENTATION
use the id column alias	WITHOUT_CLASSIFICATION	0.9998052032564981	WITHOUT_CLASSIFICATION	1.947967435018968E-4	IMPLEMENTATION
private list aliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999953028930015	WITHOUT_CLASSIFICATION	4.697106998462881E-6	IMPLEMENTATION
columns.add(columnname) aliases.add(tablealias)	WITHOUT_CLASSIFICATION	0.9999359338289158	WITHOUT_CLASSIFICATION	6.406617108423148E-5	IMPLEMENTATION
where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999567854253559	WITHOUT_CLASSIFICATION	4.3214574644019784E-5	IMPLEMENTATION
revert to traditional hibernate behavior of setting initialpoolsize to minpoolsize unless otherwise specified with a c3p0.-style parameter.	WITHOUT_CLASSIFICATION	0.9999086089725367	WITHOUT_CLASSIFICATION	9.139102746335591E-5	IMPLEMENTATION
arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9997493659463178	WITHOUT_CLASSIFICATION	2.50634053682263E-4	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9948388033847437	WITHOUT_CLASSIFICATION	0.005161196615256204	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9948388033847437	WITHOUT_CLASSIFICATION	0.005161196615256204	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999989008497646	WITHOUT_CLASSIFICATION	1.0991502353662803E-6	IMPLEMENTATION
essentially 1) if we have a local (hibernate) transaction in progress and it already has the usertransaction cached use that usertransaction to determine the status. 2) if a transaction manager has been located use that transaction manager to determine the status. 3) finally as the last resort try to lookup the usertransaction via jndi and use that to determine the status.	WITHOUT_CLASSIFICATION	0.9999999543403555	WITHOUT_CLASSIFICATION	4.5659644401818116E-8	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999733485530602	WITHOUT_CLASSIFICATION	2.6651446939803244E-5	IMPLEMENTATION
swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999749340839192	WITHOUT_CLASSIFICATION	2.5065916080768624E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999827337086784	WITHOUT_CLASSIFICATION	1.726629132159614E-5	IMPLEMENTATION
we need to dirty check many-to-ones with not-found="ignore" in order to update the cache (not the database) since in this case a null entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999888284176495	WITHOUT_CLASSIFICATION	1.1171582350552562E-5	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999858578854456	WITHOUT_CLASSIFICATION	1.414211455447875E-5	IMPLEMENTATION
regions can get instantiated in the course of normal work (e.g. a named query region will be created the first time the query is executed) so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999999972863061	WITHOUT_CLASSIFICATION	2.7136938078576934E-9	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9998982280546863	WITHOUT_CLASSIFICATION	1.0177194531372954E-4	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9998641377487332	WITHOUT_CLASSIFICATION	1.358622512669431E-4	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999398795310902	WITHOUT_CLASSIFICATION	6.012046890991409E-5	IMPLEMENTATION
note this is being used from the process of shutting down a sessionfactory. specific things to consider (1) this clearing of the region should not propagate to other nodes on the cluster (if any) this is the cache-mode-local option bit (2) really just trying a best effort to cleanup after ourselves lock failures etc are not critical here this is the fail-silently option bit	WITHOUT_CLASSIFICATION	0.9699298249988317	WITHOUT_CLASSIFICATION	0.03007017500116827	IMPLEMENTATION
need to extract the component values and check for subtype replacements	WITHOUT_CLASSIFICATION	0.999782990113399	WITHOUT_CLASSIFICATION	2.17009886600988E-4	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999863045515169	WITHOUT_CLASSIFICATION	1.3695448482987264E-5	IMPLEMENTATION
for now just "re-flatten" the metamodel since this is temporary stuff anyway (hhh-1907)	WITHOUT_CLASSIFICATION	0.9999995791801336	WITHOUT_CLASSIFICATION	4.2081986633342687E-7	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9998953118328308	WITHOUT_CLASSIFICATION	1.0468816716925217E-4	IMPLEMENTATION
this solution would allow us to eliminate the owner arg to disassemble() but what if the collection was null and then later had elements added? seems unsafe session.getpersistencecontext().getcollectionentry( (persistentcollection) value ).getkey()	WITHOUT_CLASSIFICATION	0.9999945883516084	WITHOUT_CLASSIFICATION	5.4116483916983176E-6	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9998043396187621	WITHOUT_CLASSIFICATION	1.9566038123780378E-4	IMPLEMENTATION
some collections are not lazy	WITHOUT_CLASSIFICATION	0.997878852966838	WITHOUT_CLASSIFICATION	0.002121147033162134	IMPLEMENTATION
here we don't want to suspend the tx. if we do 1) we might be caching query results that reflect uncommitted changes. no tx == no wl on cache node so other threads can prematurely see those query results 2) no tx == immediate replication. more overhead plus we spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9617701903960519	WITHOUT_CLASSIFICATION	0.038229809603948096	IMPLEMENTATION
return the (fully resolved) identifier value but do not resolve to the actual referenced entity instance note the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999901046753552	WITHOUT_CLASSIFICATION	9.895324644694488E-6	IMPLEMENTATION
add a zero (or quite low) timeout option so we don't block. ignore any timeoutexception. basically we forego caching the query result in order to avoid blocking. reads are done with suspended tx so they should not hold the lock for long. not caching the query result is ok since any subsequent read will just see the old result with its out-of-date timestamp that result will be discarded and the db query performed again.	WITHOUT_CLASSIFICATION	0.9999999953222215	WITHOUT_CLASSIFICATION	4.67777848309442E-9	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999987232065272	WITHOUT_CLASSIFICATION	1.2767934727532993E-6	IMPLEMENTATION
we have the jbcwritemutex so no other local thread will be trying to write this key. it's possible here some remote thread has come in and changed the values again but since we are reading the values to write to jbc right now we know we are writing the latest values i.e. we don't assume that what we cached in entry.update() above is what we should write to jbc now. our write could be redundant i.e. we are writing what some remote thread just came in an wrote. there is a chance that yet another remote thread will update us and we'll then overwrite that later data in jbc. but all remote nodes will ignore that change in their localcache the only place it will live will be in jbc where it can only effect the initial state transfer values on newly joined nodes (i.e. populatelocalcache()).	WITHOUT_CLASSIFICATION	0.9999992800825063	WITHOUT_CLASSIFICATION	7.199174938187375E-7	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999798121397061	WITHOUT_CLASSIFICATION	2.018786029390943E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999798121397061	WITHOUT_CLASSIFICATION	2.018786029390943E-5	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9982459926037403	WITHOUT_CLASSIFICATION	0.0017540073962597422	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9855489420408554	WITHOUT_CLASSIFICATION	0.0144510579591445	IMPLEMENTATION
we need to obtain the lock before any actions are executed since this may be an inverse="true" bidirectional association and it is one of the earlier entity actions which actually updates the database (this action is resposible for second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999954597024588	WITHOUT_CLASSIFICATION	4.540297541153841E-6	IMPLEMENTATION
postdelete after actually deleting a row record the fact that the instance no longer exists on the database (needed for identity-column key generation) and remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999933411335176	WITHOUT_CLASSIFICATION	6.6588664824021645E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9990749281316799	WITHOUT_CLASSIFICATION	9.250718683201634E-4	IMPLEMENTATION
