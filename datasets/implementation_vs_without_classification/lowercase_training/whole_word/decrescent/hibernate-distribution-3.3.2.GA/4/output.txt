todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.7848229769084482	IMPLEMENTATION	0.21517702309155182	WITHOUT_CLASSIFICATION
todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.7848229769084482	IMPLEMENTATION	0.21517702309155182	WITHOUT_CLASSIFICATION
todo return new lock(ts)	IMPLEMENTATION	0.8341840510352413	WITHOUT_CLASSIFICATION	0.16581594896475882	IMPLEMENTATION
todo if lock.gettimestamp().equals(ts)	IMPLEMENTATION	0.8527795842062749	WITHOUT_CLASSIFICATION	0.1472204157937252	IMPLEMENTATION
todo mappings.getlogicaltablename(ownertable)	IMPLEMENTATION	0.5056771819455653	WITHOUT_CLASSIFICATION	0.4943228180544346	IMPLEMENTATION
todo handle typedefs	IMPLEMENTATION	0.76914428841142	IMPLEMENTATION	0.23085571158858004	WITHOUT_CLASSIFICATION
todo check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.6169176017182013	WITHOUT_CLASSIFICATION	0.38308239828179863	IMPLEMENTATION
todo bindpropertyresults(alias returnelem)	IMPLEMENTATION	0.5056771819455653	WITHOUT_CLASSIFICATION	0.4943228180544346	IMPLEMENTATION
todo validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.6152954532167889	WITHOUT_CLASSIFICATION	0.3847045467832112	IMPLEMENTATION
todo native ids	IMPLEMENTATION	0.6533952737516958	WITHOUT_CLASSIFICATION	0.34660472624830435	IMPLEMENTATION
todo if we are using identity columns fetch the identifier	IMPLEMENTATION	0.9992209672119895	WITHOUT_CLASSIFICATION	7.79032788010525E-4	IMPLEMENTATION
todo handle property-ref	IMPLEMENTATION	0.7013956341108343	IMPLEMENTATION	0.2986043658891658	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.8922435833452445	IMPLEMENTATION	0.10775641665475558	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.8922435833452445	IMPLEMENTATION	0.10775641665475558	WITHOUT_CLASSIFICATION
todo check if mimer sql cannot handle the way db2 does	IMPLEMENTATION	0.9785455447286056	WITHOUT_CLASSIFICATION	0.021454455271394512	IMPLEMENTATION
todo restrict violation	IMPLEMENTATION	0.7953231362653025	WITHOUT_CLASSIFICATION	0.20467686373469743	IMPLEMENTATION
todo lowercasing done here. was done "at random" before maybe not needed at all ?	IMPLEMENTATION	0.9999998179657485	IMPLEMENTATION	1.8203425153772593E-7	WITHOUT_CLASSIFICATION
todo tolowercase was not done before. only used in template.	IMPLEMENTATION	0.63438371402565	WITHOUT_CLASSIFICATION	0.3656162859743499	IMPLEMENTATION
add an entry for this type of entity. we can be assured that all referenced entities have already been processed so specify that this entity is with the latest batch. doing the batch number before adding the name to the list is a faster way to get an accurate number.	IMPLEMENTATION	0.9999962952055673	WITHOUT_CLASSIFICATION	3.7047944328004764E-6	IMPLEMENTATION
todo avoid this for non-new instances where mightbedirty==false	IMPLEMENTATION	0.509892994756602	IMPLEMENTATION	0.4901070052433979	WITHOUT_CLASSIFICATION
todo optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.6073148895147199	IMPLEMENTATION	0.39268511048528015	WITHOUT_CLASSIFICATION
we could move this inside if we wanted to tolerate collection initializations during collection dirty checking	IMPLEMENTATION	0.9999135875189019	WITHOUT_CLASSIFICATION	8.64124810980593E-5	IMPLEMENTATION
todo assertion only could be optimized away	IMPLEMENTATION	0.7244685790814606	WITHOUT_CLASSIFICATION	0.27553142091853955	IMPLEMENTATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.9584144831168459	IMPLEMENTATION	0.04158551688315418	WITHOUT_CLASSIFICATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.9584144831168459	IMPLEMENTATION	0.04158551688315418	WITHOUT_CLASSIFICATION
todo why aren't these the same?	IMPLEMENTATION	0.9443201410336459	IMPLEMENTATION	0.05567985896635405	WITHOUT_CLASSIFICATION
todo always true for now but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.9095018880955235	WITHOUT_CLASSIFICATION	0.09049811190447651	IMPLEMENTATION
todo or should we return 'containstablealias'??	IMPLEMENTATION	0.6787612617992144	WITHOUT_CLASSIFICATION	0.3212387382007857	IMPLEMENTATION
todo arithmetic expressions multiple new foo()	IMPLEMENTATION	0.6170705480375205	WITHOUT_CLASSIFICATION	0.38292945196247963	IMPLEMENTATION
todo for some dialects it would be appropriate to add the renderorderbypropertiesselect() to other select strings	IMPLEMENTATION	0.9980813344425359	IMPLEMENTATION	0.0019186655574641586	WITHOUT_CLASSIFICATION
todo cache the persister this shows up in yourkit	IMPLEMENTATION	0.6562224222300589	WITHOUT_CLASSIFICATION	0.34377757776994117	IMPLEMENTATION
todo theoretically non-threadsafe	IMPLEMENTATION	0.5056771819455653	WITHOUT_CLASSIFICATION	0.4943228180544346	IMPLEMENTATION
todo look at optimizing these	IMPLEMENTATION	0.7557661427134451	WITHOUT_CLASSIFICATION	0.24423385728655497	IMPLEMENTATION
todo maybe call it getrowselection() ?	IMPLEMENTATION	0.9889638312447875	IMPLEMENTATION	0.011036168755212395	WITHOUT_CLASSIFICATION
todo make this handle multiple collection roles!	IMPLEMENTATION	0.9904625432541035	IMPLEMENTATION	0.009537456745896388	WITHOUT_CLASSIFICATION
todo can we limit stored procedures ?!	IMPLEMENTATION	0.6354641079765381	WITHOUT_CLASSIFICATION	0.36453589202346187	IMPLEMENTATION
todo not visible to the user!	IMPLEMENTATION	0.8790001092138634	IMPLEMENTATION	0.12099989078613661	WITHOUT_CLASSIFICATION
todo unnecessary for databases with ansi-style joins	IMPLEMENTATION	0.7003734269975423	WITHOUT_CLASSIFICATION	0.2996265730024577	IMPLEMENTATION
todo use these in methods above	IMPLEMENTATION	0.7235722843465741	WITHOUT_CLASSIFICATION	0.27642771565342594	IMPLEMENTATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.6189924326775752	IMPLEMENTATION	0.38100756732242486	WITHOUT_CLASSIFICATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.6189924326775752	IMPLEMENTATION	0.38100756732242486	WITHOUT_CLASSIFICATION
todo temporary initial step towards hhh-1907	IMPLEMENTATION	0.9187449593577405	WITHOUT_CLASSIFICATION	0.08125504064225961	IMPLEMENTATION
todo remove this once componentmetamodel is complete and merged	IMPLEMENTATION	0.6918003174533651	WITHOUT_CLASSIFICATION	0.3081996825466348	IMPLEMENTATION
todo handle supportsnotnullunique=false but such a case does not exist in the wild so far	IMPLEMENTATION	0.9978122319563304	WITHOUT_CLASSIFICATION	0.002187768043669522	IMPLEMENTATION
todo still need to make collectionpersisters entitymode-aware	IMPLEMENTATION	0.9973750734564767	IMPLEMENTATION	0.002624926543523394	WITHOUT_CLASSIFICATION
todo add owner argument!!	IMPLEMENTATION	0.6417841871280913	WITHOUT_CLASSIFICATION	0.3582158128719089	IMPLEMENTATION
todo formulas ?	IMPLEMENTATION	0.7133530645337651	IMPLEMENTATION	0.2866469354662349	WITHOUT_CLASSIFICATION
todo include the rowids!!!!	IMPLEMENTATION	0.9198050296459319	WITHOUT_CLASSIFICATION	0.08019497035406804	IMPLEMENTATION
todo cache this sql	IMPLEMENTATION	0.6269800905172142	WITHOUT_CLASSIFICATION	0.37301990948278574	IMPLEMENTATION
todo create uk loaders for component properties	IMPLEMENTATION	0.9255699375331922	WITHOUT_CLASSIFICATION	0.07443006246680788	IMPLEMENTATION
todo cache this in an instvar	IMPLEMENTATION	0.9761037544902268	WITHOUT_CLASSIFICATION	0.023896245509773092	IMPLEMENTATION
/ todo look at perhaps caching this	IMPLEMENTATION	0.783346833215111	IMPLEMENTATION	0.21665316678488905	WITHOUT_CLASSIFICATION
todo eventually put this back in once we think all is fixed object otheralias = columnsunique.put(qualifiedcolumn columnalias)	IMPLEMENTATION	0.6662547041561655	WITHOUT_CLASSIFICATION	0.33374529584383456	IMPLEMENTATION
todo if we support multiple fetch groups we would need to clone the set of lazy properties!	IMPLEMENTATION	0.7717839765536441	IMPLEMENTATION	0.22821602344635597	WITHOUT_CLASSIFICATION
todo proxies!	IMPLEMENTATION	0.5966980261214093	WITHOUT_CLASSIFICATION	0.4033019738785907	IMPLEMENTATION
todo terrible implementation!	IMPLEMENTATION	0.677271028381117	WITHOUT_CLASSIFICATION	0.3227289716188829	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.5966980261214093	WITHOUT_CLASSIFICATION	0.4033019738785907	IMPLEMENTATION
todo i don't really like this implementation it would be better if this was handled by searchfordirtycollections()	IMPLEMENTATION	0.7632703455103107	IMPLEMENTATION	0.2367296544896894	WITHOUT_CLASSIFICATION
todo check if key contains the owner id	IMPLEMENTATION	0.6263215503556356	IMPLEMENTATION	0.3736784496443644	WITHOUT_CLASSIFICATION
todo proxies!	IMPLEMENTATION	0.5966980261214093	WITHOUT_CLASSIFICATION	0.4033019738785907	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9997503901287882	WITHOUT_CLASSIFICATION	2.4960987121184597E-4	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9997503901287882	WITHOUT_CLASSIFICATION	2.4960987121184597E-4	IMPLEMENTATION
if we are still not resolved we might represent a constant. needed to add this here because the allowance of naked-prop-refs in the grammar collides with the definition of literals/constants ("nondeterminism"). todo cleanup the grammar so that "processconstants" is always just handled from here	IMPLEMENTATION	0.9718075237296877	IMPLEMENTATION	0.02819247627031226	WITHOUT_CLASSIFICATION
todo add referencedclass to disambiguate to fks on the same columns pointing to different tables	IMPLEMENTATION	0.7312898280868656	IMPLEMENTATION	0.2687101719131344	WITHOUT_CLASSIFICATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999981186295218	WITHOUT_CLASSIFICATION	1.881370478273416E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891675696807	WITHOUT_CLASSIFICATION	1.0832430319319346E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891675696807	WITHOUT_CLASSIFICATION	1.0832430319319346E-5	IMPLEMENTATION
| this | bean | args | raw bean |	WITHOUT_CLASSIFICATION	0.9999173615147535	WITHOUT_CLASSIFICATION	8.263848524646832E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
astore 4 store the raw bean	WITHOUT_CLASSIFICATION	0.9998848232388482	WITHOUT_CLASSIFICATION	1.1517676115181663E-4	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999356682456714	WITHOUT_CLASSIFICATION	6.433175432856695E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999356682456714	WITHOUT_CLASSIFICATION	6.433175432856695E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999836820499077	WITHOUT_CLASSIFICATION	1.6317950092243943E-5	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999199572894075	WITHOUT_CLASSIFICATION	8.00427105924163E-5	IMPLEMENTATION
putfield new value of the field	WITHOUT_CLASSIFICATION	0.9999738905198828	WITHOUT_CLASSIFICATION	2.610948011706967E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999948429812296	WITHOUT_CLASSIFICATION	5.157018770329682E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999992982405431	WITHOUT_CLASSIFICATION	7.017594568181735E-7	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999992982405431	WITHOUT_CLASSIFICATION	7.017594568181735E-7	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999678724126347	WITHOUT_CLASSIFICATION	3.212758736523344E-5	IMPLEMENTATION
just decrement the lock don't recache (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9987066023604939	WITHOUT_CLASSIFICATION	0.0012933976395060958	IMPLEMENTATION
decode row selection	WITHOUT_CLASSIFICATION	0.9999856148860617	WITHOUT_CLASSIFICATION	1.4385113938272549E-5	IMPLEMENTATION
disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999954029600565	WITHOUT_CLASSIFICATION	4.597039943511783E-6	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999955553278984	WITHOUT_CLASSIFICATION	4.4446721016106425E-6	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9998567125563096	WITHOUT_CLASSIFICATION	1.4328744369037686E-4	IMPLEMENTATION
row id	WITHOUT_CLASSIFICATION	0.999918937344792	WITHOUT_CLASSIFICATION	8.106265520800538E-5	IMPLEMENTATION
composite-id	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999414789935697	WITHOUT_CLASSIFICATION	5.852100643030209E-5	IMPLEMENTATION
property prop = new property() prop.setname("id") prop.setpropertyaccessorname("embedded") prop.setvalue(id) entity.setidentifierproperty(prop)	WITHOUT_CLASSIFICATION	0.9998614839867923	WITHOUT_CLASSIFICATION	1.3851601320764224E-4	IMPLEMENTATION
dynamic insert	WITHOUT_CLASSIFICATION	0.9999844458040655	WITHOUT_CLASSIFICATION	1.555419593439206E-5	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999648300121611	WITHOUT_CLASSIFICATION	3.516998783883519E-5	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999975060026636	WITHOUT_CLASSIFICATION	2.4939973364110327E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999622946556224	WITHOUT_CLASSIFICATION	3.770534437763926E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999622946556224	WITHOUT_CLASSIFICATION	3.770534437763926E-5	IMPLEMENTATION
generated properties can never be insertable	WITHOUT_CLASSIFICATION	0.9977579905113749	WITHOUT_CLASSIFICATION	0.0022420094886249423	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999835583133168	WITHOUT_CLASSIFICATION	1.6441686683133994E-5	IMPLEMENTATION
by default natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.999999014120906	WITHOUT_CLASSIFICATION	9.858790940850037E-7	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999617807392921	WITHOUT_CLASSIFICATION	3.8219260707896373E-5	IMPLEMENTATION
we found some extends attributes referencing entities which were not already processed. here we need to locate all entity-names and class-names contained in this document itself making sure that these get removed from the extendz list such that only extends names which require us to delay processing (i.e. external to this document and not yet processed) are contained in the returned result	WITHOUT_CLASSIFICATION	0.9499742743125302	WITHOUT_CLASSIFICATION	0.05002572568746984	IMPLEMENTATION
build a resultsetmappingdefinition given a containing element for the "return-xxx" elements @param resultsetelem the element containing the return definitions. @param path no clue @param mappings the current processing state. @return the description of the mappings	WITHOUT_CLASSIFICATION	0.9999745924316384	WITHOUT_CLASSIFICATION	2.540756836163608E-5	IMPLEMENTATION
private boolean showsql private boolean formatsql	WITHOUT_CLASSIFICATION	0.9999808629366602	WITHOUT_CLASSIFICATION	1.913706333980218E-5	IMPLEMENTATION
public boolean isshowsqlenabled() { return showsql } public boolean isformatsqlenabled() { return formatsql }	WITHOUT_CLASSIFICATION	0.9999801900951223	WITHOUT_CLASSIFICATION	1.9809904877640143E-5	IMPLEMENTATION
set a custom entity resolver. this entity resolver must be set before addxxx(misc) call. default value is {@link org.hibernate.util.dtdentityresolver} @param entityresolver entity resolver to use	WITHOUT_CLASSIFICATION	0.9999582429218126	WITHOUT_CLASSIFICATION	4.175707818749697E-5	IMPLEMENTATION
final list extendsqueue	WITHOUT_CLASSIFICATION	0.9999788766070339	WITHOUT_CLASSIFICATION	2.1123392966016482E-5	IMPLEMENTATION
if close() is called guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999980331083059	WITHOUT_CLASSIFICATION	1.9668916941548752E-6	IMPLEMENTATION
if a threadlocalsessioncontext-bound session happens to get serialized to be completely correct we need to make sure that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999507851945263	WITHOUT_CLASSIFICATION	4.9214805473698536E-5	IMPLEMENTATION
on the inverse it makes sense that if a threadlocalsessioncontext- bound session then gets deserialized to go ahead and re-bind it to the threadlocalsessioncontext session map.	WITHOUT_CLASSIFICATION	0.9999908031186685	WITHOUT_CLASSIFICATION	9.196881331397585E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.999997329834666	WITHOUT_CLASSIFICATION	2.6701653339549723E-6	IMPLEMENTATION
60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999708559095679	WITHOUT_CLASSIFICATION	2.9144090432158558E-5	IMPLEMENTATION
optimisticcache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999160751372691	WITHOUT_CLASSIFICATION	8.392486273090075E-5	IMPLEMENTATION
cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998737799880029	WITHOUT_CLASSIFICATION	1.262200119970493E-4	IMPLEMENTATION
option.setdataversion( nonlockingdataversion.instance )	WITHOUT_CLASSIFICATION	0.999873606476193	WITHOUT_CLASSIFICATION	1.2639352380700602E-4	IMPLEMENTATION
do the put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9981273190846743	WITHOUT_CLASSIFICATION	0.0018726809153256274	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
tree cache in optimistic mode seems to have as very difficult time with remove calls on non-existent nodes (npes)	WITHOUT_CLASSIFICATION	0.9997134347412897	WITHOUT_CLASSIFICATION	2.8656525871018985E-4	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999795623661951	WITHOUT_CLASSIFICATION	2.0437633804812325E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999795623661951	WITHOUT_CLASSIFICATION	2.0437633804812325E-5	IMPLEMENTATION
do the failfast put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9981273190846743	WITHOUT_CLASSIFICATION	0.0018726809153256274	IMPLEMENTATION
note evict() operates locally only (i.e. does not propogate to any other nodes in the potential cluster). this is exactly what is needed when we destroy() here destroy() is used as part of the process of shutting down a sessionfactory thus these removals should not be propogated	WITHOUT_CLASSIFICATION	0.8474264759432363	IMPLEMENTATION	0.15257352405676372	WITHOUT_CLASSIFICATION
protected regionrootlistener listener	WITHOUT_CLASSIFICATION	0.9997960513785442	WITHOUT_CLASSIFICATION	2.039486214558301E-4	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9998427336684752	WITHOUT_CLASSIFICATION	1.5726633152475313E-4	IMPLEMENTATION
if we've been blocking for the mutex perhaps another thread has already reestablished the root. in case the node was reestablised via replication confirm it's marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999997795214328	WITHOUT_CLASSIFICATION	2.2047856718569007E-7	IMPLEMENTATION
for pessimistic locking we just want to toss out our ref to any old invalid root node and get the latest (may be null)	WITHOUT_CLASSIFICATION	0.999999852307708	WITHOUT_CLASSIFICATION	1.4769229186247417E-7	IMPLEMENTATION
the rest only matters for optimistic locking where we need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9776755392949497	WITHOUT_CLASSIFICATION	0.02232446070505031	IMPLEMENTATION
don't hold a transactional lock for this	WITHOUT_CLASSIFICATION	0.9999582813146444	WITHOUT_CLASSIFICATION	4.171868535567508E-5	IMPLEMENTATION
make sure the root node for the region exists and has a dataversion that never complains	WITHOUT_CLASSIFICATION	0.9981510578649804	WITHOUT_CLASSIFICATION	0.001848942135019558	IMPLEMENTATION
never evict this node	WITHOUT_CLASSIFICATION	0.9987558368085305	WITHOUT_CLASSIFICATION	0.001244163191469453	IMPLEMENTATION
fix up the resident flag	WITHOUT_CLASSIFICATION	0.9912430134398917	WITHOUT_CLASSIFICATION	0.008756986560108185	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999795623661951	WITHOUT_CLASSIFICATION	2.0437633804812325E-5	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999912703031699	WITHOUT_CLASSIFICATION	8.72969683009681E-6	IMPLEMENTATION
no-op. we don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.994134036508101	WITHOUT_CLASSIFICATION	0.005865963491899022	IMPLEMENTATION
this should only be possible if the caches are constructor injected	WITHOUT_CLASSIFICATION	0.9999957079688677	WITHOUT_CLASSIFICATION	4.292031132292673E-6	IMPLEMENTATION
we only build caches if none were passed in. passing in caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999972990648295	WITHOUT_CLASSIFICATION	2.70093517055836E-6	IMPLEMENTATION
set up the cache factory	WITHOUT_CLASSIFICATION	0.9999558236175773	WITHOUT_CLASSIFICATION	4.41763824227094E-5	IMPLEMENTATION
see if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999997155139428	WITHOUT_CLASSIFICATION	2.844860572416356E-7	IMPLEMENTATION
default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999975236670618	WITHOUT_CLASSIFICATION	2.4763329382042164E-6	IMPLEMENTATION
default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.999998760680903	WITHOUT_CLASSIFICATION	1.2393190969676976E-6	IMPLEMENTATION
for timestamps we default to a separate config	WITHOUT_CLASSIFICATION	0.9999956564771264	WITHOUT_CLASSIFICATION	4.343522873618426E-6	IMPLEMENTATION
we can't change the tm on a running cache just check if the cache has no tm and we're ok with that	WITHOUT_CLASSIFICATION	0.9999845402326568	WITHOUT_CLASSIFICATION	1.5459767343222474E-5	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.999874674401266	WITHOUT_CLASSIFICATION	1.2532559873411914E-4	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.999760345030139	WITHOUT_CLASSIFICATION	2.3965496986095617E-4	IMPLEMENTATION
this method should be implemented assuming it's valid to do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.5471578412563296	WITHOUT_CLASSIFICATION	0.4528421587436703	IMPLEMENTATION
make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.999478190841364	WITHOUT_CLASSIFICATION	5.218091586360692E-4	IMPLEMENTATION
we use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999925775321535	WITHOUT_CLASSIFICATION	7.422467846521746E-6	IMPLEMENTATION
following methods we don't delegate since they have so little logic it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9963875444239727	WITHOUT_CLASSIFICATION	0.0036124555760272486	IMPLEMENTATION
if jbc is using invalidation we don't want to propagate changes. we use the timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999770822584886	WITHOUT_CLASSIFICATION	2.2917741511385E-5	IMPLEMENTATION
we don't want to waste effort setting an option if jbc is already in local mode. if jbc is repl_(a)sync then check if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999839740097887	WITHOUT_CLASSIFICATION	1.6025990211364195E-5	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents updates add a zero (or low) timeout option so we don't block waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9996883026450316	WITHOUT_CLASSIFICATION	3.116973549684696E-4	IMPLEMENTATION
double check the distributed cache	WITHOUT_CLASSIFICATION	0.99998205496423	WITHOUT_CLASSIFICATION	1.794503577006778E-5	IMPLEMENTATION
get an exclusive right to update jbc for this key from this node.	WITHOUT_CLASSIFICATION	0.9999994192794001	WITHOUT_CLASSIFICATION	5.807205999968706E-7	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9999253302134209	WITHOUT_CLASSIFICATION	7.46697865791734E-5	IMPLEMENTATION
initial load from jbc	WITHOUT_CLASSIFICATION	0.9999991332945082	WITHOUT_CLASSIFICATION	8.667054918772333E-7	IMPLEMENTATION
see if we had a 2nd invalidation from the same initial preinvalidation timestamp. if so only increment if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999999992142444	WITHOUT_CLASSIFICATION	7.857555672897817E-10	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9999253302134209	WITHOUT_CLASSIFICATION	7.46697865791734E-5	IMPLEMENTATION
if the workspace node has null as well ok if not we've been modified in a non-comparable manner which we have to treat as us being newer	WITHOUT_CLASSIFICATION	0.9995088866026307	WITHOUT_CLASSIFICATION	4.911133973692808E-4	IMPLEMENTATION
the standard comparator types are not serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999331255920222	WITHOUT_CLASSIFICATION	6.687440797779122E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999813923037822	WITHOUT_CLASSIFICATION	1.8607696217748173E-5	IMPLEMENTATION
construct the cache	WITHOUT_CLASSIFICATION	0.9999511391432151	WITHOUT_CLASSIFICATION	4.886085678505188E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999722499211364	WITHOUT_CLASSIFICATION	2.77500788635925E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999722499211364	WITHOUT_CLASSIFICATION	2.77500788635925E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999425520196381	WITHOUT_CLASSIFICATION	5.7447980361867296E-5	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for initialpoolsize which hibernate sensibly lets default to minpoolsize but we'll let users override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999998817351784	WITHOUT_CLASSIFICATION	1.1826482156224348E-7	IMPLEMENTATION
datasource unpooled = datasources.unpooleddatasource(jdbcurl props.getproperty(environment.user) props.getproperty(environment.pass))	WITHOUT_CLASSIFICATION	0.9998389885152281	WITHOUT_CLASSIFICATION	1.6101148477183535E-4	IMPLEMENTATION
true if the pool is borrowed from the outside false if we used to create it	WITHOUT_CLASSIFICATION	0.9999997023870019	WITHOUT_CLASSIFICATION	2.976129981005871E-7	IMPLEMENTATION
get a connection from the pool (thru drivermanager cfr. proxool doc)	WITHOUT_CLASSIFICATION	0.9997484211994601	WITHOUT_CLASSIFICATION	2.51578800539865E-4	IMPLEMENTATION
set the transaction isolation if defined	WITHOUT_CLASSIFICATION	0.9999949414194274	WITHOUT_CLASSIFICATION	5.058580572657594E-6	IMPLEMENTATION
toggle autocommit to false if set	WITHOUT_CLASSIFICATION	0.9999724721198562	WITHOUT_CLASSIFICATION	2.7527880143798052E-5	IMPLEMENTATION
return the connection	WITHOUT_CLASSIFICATION	0.9991204355776936	WITHOUT_CLASSIFICATION	8.795644223065451E-4	IMPLEMENTATION
get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999184490688707	WITHOUT_CLASSIFICATION	8.155093112935414E-5	IMPLEMENTATION
default the proxool alias setting	WITHOUT_CLASSIFICATION	0.9999982605244467	WITHOUT_CLASSIFICATION	1.7394755533465754E-6	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999855140190571	WITHOUT_CLASSIFICATION	1.4485980942805809E-5	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999855140190571	WITHOUT_CLASSIFICATION	1.4485980942805809E-5	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998212465008519	WITHOUT_CLASSIFICATION	1.7875349914801817E-4	IMPLEMENTATION
set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9997363261265447	WITHOUT_CLASSIFICATION	2.6367387345530236E-4	IMPLEMENTATION
configured using the jaxp configurator	WITHOUT_CLASSIFICATION	0.9999749069960331	WITHOUT_CLASSIFICATION	2.5093003966820394E-5	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999855140190571	WITHOUT_CLASSIFICATION	1.4485980942805809E-5	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998212465008519	WITHOUT_CLASSIFICATION	1.7875349914801817E-4	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998212465008519	WITHOUT_CLASSIFICATION	1.7875349914801817E-4	IMPLEMENTATION
configured using the properties file configurator	WITHOUT_CLASSIFICATION	0.9999174471918608	WITHOUT_CLASSIFICATION	8.255280813910855E-5	IMPLEMENTATION
remember isolation level	WITHOUT_CLASSIFICATION	0.999510395458128	WITHOUT_CLASSIFICATION	4.896045418720378E-4	IMPLEMENTATION
if the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999999945844068	WITHOUT_CLASSIFICATION	5.415593212704475E-9	IMPLEMENTATION
we have created the pool ourselves so shut it down	WITHOUT_CLASSIFICATION	0.9999950469299195	WITHOUT_CLASSIFICATION	4.953070080581113E-6	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9992772655223114	WITHOUT_CLASSIFICATION	7.227344776884814E-4	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9992772655223114	WITHOUT_CLASSIFICATION	7.227344776884814E-4	IMPLEMENTATION
always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999791031083645	WITHOUT_CLASSIFICATION	2.089689163556441E-5	IMPLEMENTATION
public currency getcurrency(int col) throws hibernateexception	WITHOUT_CLASSIFICATION	0.999941795525581	WITHOUT_CLASSIFICATION	5.8204474418989066E-5	IMPLEMENTATION
default is pojo	WITHOUT_CLASSIFICATION	0.9999963982977681	WITHOUT_CLASSIFICATION	3.601702231870335E-6	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999971180061822	WITHOUT_CLASSIFICATION	2.881993817882886E-6	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999971180061822	WITHOUT_CLASSIFICATION	2.881993817882886E-6	IMPLEMENTATION
private cacheentry cacheentry	WITHOUT_CLASSIFICATION	0.999984072189666	WITHOUT_CLASSIFICATION	1.5927810334090866E-5	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9975843993108351	WITHOUT_CLASSIFICATION	0.002415600689164931	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9998817289019497	WITHOUT_CLASSIFICATION	1.1827109805032451E-4	IMPLEMENTATION
get the updated snapshot of the entity state by cloning current state it is safe to copy in place since by this time no-one else (should have) has a reference to the array	WITHOUT_CLASSIFICATION	0.9999999853843539	WITHOUT_CLASSIFICATION	1.4615646154069001E-8	IMPLEMENTATION
this entity defines proeprty generation so process those generated values	WITHOUT_CLASSIFICATION	0.9999990033365699	WITHOUT_CLASSIFICATION	9.966634301158104E-7	IMPLEMENTATION
have the entity entry perform post-update processing passing it the update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999030521425099	WITHOUT_CLASSIFICATION	9.694785749015949E-5	IMPLEMENTATION
!persister.iscacheinvalidationrequired()	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9997510374982166	WITHOUT_CLASSIFICATION	2.4896250178339823E-4	IMPLEMENTATION
sort first by role name	WITHOUT_CLASSIFICATION	0.9999633912279341	WITHOUT_CLASSIFICATION	3.660877206594319E-5	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9998817289019497	WITHOUT_CLASSIFICATION	1.1827109805032451E-4	IMPLEMENTATION
then by fk	WITHOUT_CLASSIFICATION	0.9999899312649365	WITHOUT_CLASSIFICATION	1.0068735063550534E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999820870449001	WITHOUT_CLASSIFICATION	1.791295509997044E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999820870449001	WITHOUT_CLASSIFICATION	1.791295509997044E-5	IMPLEMENTATION
an existing collection that was either non-empty or uninitialized is replaced by null or a different collection (if the collection is uninitialized hibernate has no way of knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999993043844995	WITHOUT_CLASSIFICATION	6.956155005165794E-7	IMPLEMENTATION
this method is called when a new non-null collection is persisted or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999957236632697	WITHOUT_CLASSIFICATION	4.27633673028655E-6	IMPLEMENTATION
boolean put = persister.getcache().insert(ck cacheentry)	WITHOUT_CLASSIFICATION	0.9996421932086442	WITHOUT_CLASSIFICATION	3.578067913557458E-4	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9895413417812167	WITHOUT_CLASSIFICATION	0.010458658218783367	IMPLEMENTATION
do nothing - we only need to notify the cache	WITHOUT_CLASSIFICATION	0.9998721801982896	WITHOUT_CLASSIFICATION	1.278198017103547E-4	IMPLEMENTATION
sort first by entity name	WITHOUT_CLASSIFICATION	0.9999631090697847	WITHOUT_CLASSIFICATION	3.6890930215307926E-5	IMPLEMENTATION
then by id	WITHOUT_CLASSIFICATION	0.9999717251820949	WITHOUT_CLASSIFICATION	2.8274817905145478E-5	IMPLEMENTATION
to be safe	WITHOUT_CLASSIFICATION	0.99997398367243	WITHOUT_CLASSIFICATION	2.6016327570062278E-5	IMPLEMENTATION
no transformations took place so handle it as we would a non-instrumented class	WITHOUT_CLASSIFICATION	0.9998507952577028	WITHOUT_CLASSIFICATION	1.4920474229711546E-4	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999320289319	WITHOUT_CLASSIFICATION	6.797106813920926E-8	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999320289319	WITHOUT_CLASSIFICATION	6.797106813920926E-8	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9989850888413557	WITHOUT_CLASSIFICATION	0.0010149111586441888	IMPLEMENTATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999981186295218	WITHOUT_CLASSIFICATION	1.881370478273416E-6	IMPLEMENTATION
set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999873582383562	WITHOUT_CLASSIFICATION	1.2641761643804662E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
invokespecial	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891675696807	WITHOUT_CLASSIFICATION	1.0832430319319346E-5	IMPLEMENTATION
aload_1 load bean	WITHOUT_CLASSIFICATION	0.999955143254121	WITHOUT_CLASSIFICATION	4.4856745879003627E-5	IMPLEMENTATION
checkcast cast bean	WITHOUT_CLASSIFICATION	0.9999426468855908	WITHOUT_CLASSIFICATION	5.73531144092553E-5	IMPLEMENTATION
astore_3 store bean	WITHOUT_CLASSIFICATION	0.9997883052173202	WITHOUT_CLASSIFICATION	2.116947826797521E-4	IMPLEMENTATION
aload_2 args	WITHOUT_CLASSIFICATION	0.9999340593544843	WITHOUT_CLASSIFICATION	6.594064551567033E-5	IMPLEMENTATION
iconst_i continue to aastore growing stack is 1	WITHOUT_CLASSIFICATION	0.9999512872229278	WITHOUT_CLASSIFICATION	4.8712777072151794E-5	IMPLEMENTATION
new	WITHOUT_CLASSIFICATION	0.9999833057416764	WITHOUT_CLASSIFICATION	1.669425832369675E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999795755295973	WITHOUT_CLASSIFICATION	2.0424470402789898E-5	IMPLEMENTATION
aload_3 load the raw bean	WITHOUT_CLASSIFICATION	0.9999812000526436	WITHOUT_CLASSIFICATION	1.8799947356466102E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
aastore args	WITHOUT_CLASSIFICATION	0.9999340593544843	WITHOUT_CLASSIFICATION	6.594064551567033E-5	IMPLEMENTATION
| this | bean | args | i | raw bean | exception |	WITHOUT_CLASSIFICATION	0.9999207231318795	WITHOUT_CLASSIFICATION	7.927686812053187E-5	IMPLEMENTATION
required to exception table iconst_0 i	WITHOUT_CLASSIFICATION	0.9997838745276355	WITHOUT_CLASSIFICATION	2.1612547236434518E-4	IMPLEMENTATION
istore_3 store i	WITHOUT_CLASSIFICATION	0.9995004083067844	WITHOUT_CLASSIFICATION	4.995916932155526E-4	IMPLEMENTATION
aload_1 load the bean	WITHOUT_CLASSIFICATION	0.999980784040732	WITHOUT_CLASSIFICATION	1.9215959268026014E-5	IMPLEMENTATION
checkcast cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.99997631383326	WITHOUT_CLASSIFICATION	2.3686166739961312E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999356682456714	WITHOUT_CLASSIFICATION	6.433175432856695E-5	IMPLEMENTATION
start region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9992106184873705	WITHOUT_CLASSIFICATION	7.893815126295825E-4	IMPLEMENTATION
iinc 3 1	WITHOUT_CLASSIFICATION	0.9999168625115517	WITHOUT_CLASSIFICATION	8.313748844835961E-5	IMPLEMENTATION
aload 4 load the raw bean	WITHOUT_CLASSIFICATION	0.9999755966510208	WITHOUT_CLASSIFICATION	2.440334897922463E-5	IMPLEMENTATION
aload_2 load the args	WITHOUT_CLASSIFICATION	0.9999782852482777	WITHOUT_CLASSIFICATION	2.171475172237072E-5	IMPLEMENTATION
iconst_i	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
aaload	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999792478383519	WITHOUT_CLASSIFICATION	2.0752161648097774E-5	IMPLEMENTATION
checkcast (case of primitive type) invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.999978774670289	WITHOUT_CLASSIFICATION	2.1225329710966114E-5	IMPLEMENTATION
checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999925652370006	WITHOUT_CLASSIFICATION	7.43476299935031E-6	IMPLEMENTATION
current stack len = 2	WITHOUT_CLASSIFICATION	0.9999287794726494	WITHOUT_CLASSIFICATION	7.122052735072094E-5	IMPLEMENTATION
end region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9966114116992135	WITHOUT_CLASSIFICATION	0.0033885883007864163	IMPLEMENTATION
register in exception table	WITHOUT_CLASSIFICATION	0.999996539115016	WITHOUT_CLASSIFICATION	3.4608849839930915E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891675696807	WITHOUT_CLASSIFICATION	1.0832430319319346E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891675696807	WITHOUT_CLASSIFICATION	1.0832430319319346E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999795755295973	WITHOUT_CLASSIFICATION	2.0424470402789898E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999792478383519	WITHOUT_CLASSIFICATION	2.0752161648097774E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999836820499077	WITHOUT_CLASSIFICATION	1.6317950092243943E-5	IMPLEMENTATION
astore 5 store exception	WITHOUT_CLASSIFICATION	0.999962802430054	WITHOUT_CLASSIFICATION	3.719756994611341E-5	IMPLEMENTATION
new bulkaccessorexception	WITHOUT_CLASSIFICATION	0.999966915852632	WITHOUT_CLASSIFICATION	3.308414736811606E-5	IMPLEMENTATION
aload 5 load exception	WITHOUT_CLASSIFICATION	0.9999921191611827	WITHOUT_CLASSIFICATION	7.880838817205158E-6	IMPLEMENTATION
iload_3 i	WITHOUT_CLASSIFICATION	0.9999509954313778	WITHOUT_CLASSIFICATION	4.900456862227254E-5	IMPLEMENTATION
invokespecial bulkaccessorexception.<init>	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
athrow	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
warning classfile only	WITHOUT_CLASSIFICATION	0.9999954336340623	WITHOUT_CLASSIFICATION	4.566365937633304E-6	IMPLEMENTATION
swallow	WITHOUT_CLASSIFICATION	0.9999792153587042	WITHOUT_CLASSIFICATION	2.0784641295790654E-5	IMPLEMENTATION
local variable | this |	WITHOUT_CLASSIFICATION	0.9999298062997155	WITHOUT_CLASSIFICATION	7.019370028448167E-5	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.999930848433627	WITHOUT_CLASSIFICATION	6.915156637293412E-5	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.999930848433627	WITHOUT_CLASSIFICATION	6.915156637293412E-5	IMPLEMENTATION
getfield get field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9999890760085784	WITHOUT_CLASSIFICATION	1.0923991421566624E-5	IMPLEMENTATION
areturn return the value of the field	WITHOUT_CLASSIFICATION	0.9999830582435233	WITHOUT_CLASSIFICATION	1.6941756476743598E-5	IMPLEMENTATION
local variables | this | callback |	WITHOUT_CLASSIFICATION	0.9999439037546057	WITHOUT_CLASSIFICATION	5.6096245394191674E-5	IMPLEMENTATION
aload_1 load callback	WITHOUT_CLASSIFICATION	0.9999370855988291	WITHOUT_CLASSIFICATION	6.29144011708597E-5	IMPLEMENTATION
putfield put field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9998364683417147	WITHOUT_CLASSIFICATION	1.635316582851747E-4	IMPLEMENTATION
case of non-static field	WITHOUT_CLASSIFICATION	0.999992973261242	WITHOUT_CLASSIFICATION	7.026738757966741E-6	IMPLEMENTATION
getfield get each field	WITHOUT_CLASSIFICATION	0.9999908331595261	WITHOUT_CLASSIFICATION	9.1668404739742E-6	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999199572894075	WITHOUT_CLASSIFICATION	8.00427105924163E-5	IMPLEMENTATION
ifnonnull	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.99998195702993	WITHOUT_CLASSIFICATION	1.8042970070017198E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.99998195702993	WITHOUT_CLASSIFICATION	1.8042970070017198E-5	IMPLEMENTATION
store_1 each type	WITHOUT_CLASSIFICATION	0.9999653200703807	WITHOUT_CLASSIFICATION	3.467992961925531E-5	IMPLEMENTATION
ldc name of the field	WITHOUT_CLASSIFICATION	0.9999926861706079	WITHOUT_CLASSIFICATION	7.313829392121879E-6	IMPLEMENTATION
load_1 each type	WITHOUT_CLASSIFICATION	0.9999653200703807	WITHOUT_CLASSIFICATION	3.467992961925531E-5	IMPLEMENTATION
invokeinterface invoke callback.read() each type	WITHOUT_CLASSIFICATION	0.9999525691419237	WITHOUT_CLASSIFICATION	4.743085807640293E-5	IMPLEMENTATION
int	WITHOUT_CLASSIFICATION	0.9999911887620034	WITHOUT_CLASSIFICATION	8.811237996585964E-6	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891675696807	WITHOUT_CLASSIFICATION	1.0832430319319346E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999795755295973	WITHOUT_CLASSIFICATION	2.0424470402789898E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999792478383519	WITHOUT_CLASSIFICATION	2.0752161648097774E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999792478383519	WITHOUT_CLASSIFICATION	2.0752161648097774E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
putfield	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999891675696807	WITHOUT_CLASSIFICATION	1.0832430319319346E-5	IMPLEMENTATION
ldc field name	WITHOUT_CLASSIFICATION	0.9999675270803123	WITHOUT_CLASSIFICATION	3.247291968761887E-5	IMPLEMENTATION
getfield old value of the field	WITHOUT_CLASSIFICATION	0.9999955658131771	WITHOUT_CLASSIFICATION	4.434186822872574E-6	IMPLEMENTATION
invokeinterface callback.write(..)	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999948429812296	WITHOUT_CLASSIFICATION	5.157018770329682E-6	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999948429812296	WITHOUT_CLASSIFICATION	5.157018770329682E-6	IMPLEMENTATION
not array	WITHOUT_CLASSIFICATION	0.9988033959647028	WITHOUT_CLASSIFICATION	0.0011966040352972493	IMPLEMENTATION
array of reference type	WITHOUT_CLASSIFICATION	0.9999978108958552	WITHOUT_CLASSIFICATION	2.1891041447621015E-6	IMPLEMENTATION
boolean	WITHOUT_CLASSIFICATION	0.9999882043716352	WITHOUT_CLASSIFICATION	1.179562836483207E-5	IMPLEMENTATION
byte	WITHOUT_CLASSIFICATION	0.9999802382108083	WITHOUT_CLASSIFICATION	1.9761789191610448E-5	IMPLEMENTATION
char	WITHOUT_CLASSIFICATION	0.999992146891502	WITHOUT_CLASSIFICATION	7.853108498063064E-6	IMPLEMENTATION
short	WITHOUT_CLASSIFICATION	0.9999798360759447	WITHOUT_CLASSIFICATION	2.016392405532003E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999992982405431	WITHOUT_CLASSIFICATION	7.017594568181735E-7	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999825796974053	WITHOUT_CLASSIFICATION	1.7420302594574227E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999825796974053	WITHOUT_CLASSIFICATION	1.7420302594574227E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999678724126347	WITHOUT_CLASSIFICATION	3.212758736523344E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999678724126347	WITHOUT_CLASSIFICATION	3.212758736523344E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999863736376288	WITHOUT_CLASSIFICATION	1.3626362371178296E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999863736376288	WITHOUT_CLASSIFICATION	1.3626362371178296E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999965702929954	WITHOUT_CLASSIFICATION	3.429707004664212E-6	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999965702929954	WITHOUT_CLASSIFICATION	3.429707004664212E-6	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999948429812296	WITHOUT_CLASSIFICATION	5.157018770329682E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999992982405431	WITHOUT_CLASSIFICATION	7.017594568181735E-7	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999825796974053	WITHOUT_CLASSIFICATION	1.7420302594574227E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999825796974053	WITHOUT_CLASSIFICATION	1.7420302594574227E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999678724126347	WITHOUT_CLASSIFICATION	3.212758736523344E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999863736376288	WITHOUT_CLASSIFICATION	1.3626362371178296E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999863736376288	WITHOUT_CLASSIFICATION	1.3626362371178296E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999965702929954	WITHOUT_CLASSIFICATION	3.429707004664212E-6	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.9999291160758795	WITHOUT_CLASSIFICATION	7.088392412047539E-5	IMPLEMENTATION
mainly for oscache	WITHOUT_CLASSIFICATION	0.9999780958307084	WITHOUT_CLASSIFICATION	2.190416929156213E-5	IMPLEMENTATION
decrement the lock	WITHOUT_CLASSIFICATION	0.9999709539931755	WITHOUT_CLASSIFICATION	2.9046006824544418E-5	IMPLEMENTATION
create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9998471911575241	WITHOUT_CLASSIFICATION	1.5280884247595222E-4	IMPLEMENTATION
recache the updated state	WITHOUT_CLASSIFICATION	0.9999841438466293	WITHOUT_CLASSIFICATION	1.5856153370838425E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999795413091507	WITHOUT_CLASSIFICATION	2.0458690849360415E-5	IMPLEMENTATION
null clientlock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999985744813817	WITHOUT_CLASSIFICATION	1.4255186183046366E-6	IMPLEMENTATION
we really could refresh the item if it is not a lock but it might be slower return freshtimestamp < txtimestamp	WITHOUT_CLASSIFICATION	0.9999985573143049	WITHOUT_CLASSIFICATION	1.4426856950194115E-6	IMPLEMENTATION
by requiring < we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999997617311446	WITHOUT_CLASSIFICATION	2.382688554652879E-7	IMPLEMENTATION
the user provided resulttransformer not the one used with "select new". here to avoid mangling transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9764104909766104	WITHOUT_CLASSIFICATION	0.02358950902338964	IMPLEMENTATION
disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999083795044627	WITHOUT_CLASSIFICATION	9.162049553736558E-5	IMPLEMENTATION
disassemble named parameters	WITHOUT_CLASSIFICATION	0.999976080911307	WITHOUT_CLASSIFICATION	2.3919088692968022E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999425520196381	WITHOUT_CLASSIFICATION	5.7447980361867296E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999795413091507	WITHOUT_CLASSIFICATION	2.0458690849360415E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999795413091507	WITHOUT_CLASSIFICATION	2.0458690849360415E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999795413091507	WITHOUT_CLASSIFICATION	2.0458690849360415E-5	IMPLEMENTATION
this is called from settingsfactory irregardless trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999878572086296	WITHOUT_CLASSIFICATION	1.2142791370416234E-5	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9999507525250647	WITHOUT_CLASSIFICATION	4.924747493540262E-5	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9999507525250647	WITHOUT_CLASSIFICATION	4.924747493540262E-5	IMPLEMENTATION
throw new unsupportedoperationexception("can't write to a readonly object")	WITHOUT_CLASSIFICATION	0.9997387703869268	WITHOUT_CLASSIFICATION	2.612296130731091E-4	IMPLEMENTATION
assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999999448734253	WITHOUT_CLASSIFICATION	5.5126574758049394E-8	IMPLEMENTATION
persister.setidentifier(result id) before calling interceptor for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999819375991124	WITHOUT_CLASSIFICATION	1.8062400887571776E-5	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9995920580676699	WITHOUT_CLASSIFICATION	4.0794193233006953E-4	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9995920580676699	WITHOUT_CLASSIFICATION	4.0794193233006953E-4	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999955553278984	WITHOUT_CLASSIFICATION	4.4446721016106425E-6	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999890085649412	WITHOUT_CLASSIFICATION	1.0991435058817057E-5	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999890085649412	WITHOUT_CLASSIFICATION	1.0991435058817057E-5	IMPLEMENTATION
classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9995401263411658	WITHOUT_CLASSIFICATION	4.5987365883405976E-4	IMPLEMENTATION
get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999948836918755	WITHOUT_CLASSIFICATION	5.116308124444567E-6	IMPLEMENTATION
get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999975060026636	WITHOUT_CLASSIFICATION	2.4939973364110327E-6	IMPLEMENTATION
db-objectname	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
mutable	WITHOUT_CLASSIFICATION	0.9999791695901287	WITHOUT_CLASSIFICATION	2.0830409871407822E-5	IMPLEMENTATION
where	WITHOUT_CLASSIFICATION	0.9999455197847806	WITHOUT_CLASSIFICATION	5.448021521933602E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9998567125563096	WITHOUT_CLASSIFICATION	1.4328744369037686E-4	IMPLEMENTATION
polymorphism	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.8061623874176842	WITHOUT_CLASSIFICATION	0.19383761258231585	IMPLEMENTATION
id	WITHOUT_CLASSIFICATION	0.99990032980365	WITHOUT_CLASSIFICATION	9.967019635008399E-5	IMPLEMENTATION
version / timestamp	WITHOUT_CLASSIFICATION	0.9999624197663541	WITHOUT_CLASSIFICATION	3.758023364576828E-5	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999414789935697	WITHOUT_CLASSIFICATION	5.852100643030209E-5	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999839206764288	WITHOUT_CLASSIFICATION	1.6079323571190234E-5	IMPLEMENTATION
this is either a <version/> tag with no type attribute or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.999984020374617	WITHOUT_CLASSIFICATION	1.5979625382971026E-5	IMPLEMENTATION
for version properties marked as being generated make sure they are "always" generated aka "insert" is invalid this is dis-allowed by the dtd but just to make sure	WITHOUT_CLASSIFICATION	0.9999997541208605	WITHOUT_CLASSIFICATION	2.4587913950786616E-7	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999414789935697	WITHOUT_CLASSIFICATION	5.852100643030209E-5	IMPLEMENTATION
( (column) discrim.getcolumniterator().next() ).settype(type)	WITHOUT_CLASSIFICATION	0.9999617807392921	WITHOUT_CLASSIFICATION	3.8219260707896373E-5	IMPLEMENTATION
go ahead and set the lazy here since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9991254523471718	WITHOUT_CLASSIFICATION	8.74547652828117E-4	IMPLEMENTATION
dynamic update	WITHOUT_CLASSIFICATION	0.9999953700007915	WITHOUT_CLASSIFICATION	4.629999208444998E-6	IMPLEMENTATION
import	WITHOUT_CLASSIFICATION	0.9999687602539409	WITHOUT_CLASSIFICATION	3.123974605916368E-5	IMPLEMENTATION
batch size	WITHOUT_CLASSIFICATION	0.9999806662252401	WITHOUT_CLASSIFICATION	1.9333774759910154E-5	IMPLEMENTATION
select before update	WITHOUT_CLASSIFICATION	0.9999973840048122	WITHOUT_CLASSIFICATION	2.6159951878091948E-6	IMPLEMENTATION
optimistic lock mode	WITHOUT_CLASSIFICATION	0.9998802756237462	WITHOUT_CLASSIFICATION	1.1972437625391211E-4	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999648300121611	WITHOUT_CLASSIFICATION	3.516998783883519E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.999992431664391	WITHOUT_CLASSIFICATION	7.56833560887261E-6	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999975060026636	WITHOUT_CLASSIFICATION	2.4939973364110327E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999622946556224	WITHOUT_CLASSIFICATION	3.770534437763926E-5	IMPLEMENTATION
joined subclasses	WITHOUT_CLASSIFICATION	0.9999511151264272	WITHOUT_CLASSIFICATION	4.888487357280703E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999810865112229	WITHOUT_CLASSIFICATION	1.8913488777114994E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9998567125563096	WITHOUT_CLASSIFICATION	1.4328744369037686E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.999992431664391	WITHOUT_CLASSIFICATION	7.56833560887261E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999622946556224	WITHOUT_CLASSIFICATION	3.770534437763926E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999810865112229	WITHOUT_CLASSIFICATION	1.8913488777114994E-5	IMPLEMENTATION
model.getkey().settype( new type( model.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9998986550603117	WITHOUT_CLASSIFICATION	1.01344939688257E-4	IMPLEMENTATION
tablename	WITHOUT_CLASSIFICATION	0.9999794039102224	WITHOUT_CLASSIFICATION	2.0596089777635833E-5	IMPLEMENTATION
join.getkey().settype( new type( lazz.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9998986550603117	WITHOUT_CLASSIFICATION	1.01344939688257E-4	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999622946556224	WITHOUT_CLASSIFICATION	3.770534437763926E-5	IMPLEMENTATION
column(s)	WITHOUT_CLASSIFICATION	0.9999792390763923	WITHOUT_CLASSIFICATION	2.0760923607663865E-5	IMPLEMENTATION
column index	WITHOUT_CLASSIFICATION	0.9996780292164651	WITHOUT_CLASSIFICATION	3.219707835348276E-4	IMPLEMENTATION
column unique-key	WITHOUT_CLASSIFICATION	0.9999217531573746	WITHOUT_CLASSIFICATION	7.82468426254105E-5	IMPLEMENTATION
automatically makes a column with the default name if none is specifed by xml	WITHOUT_CLASSIFICATION	0.9999999252156845	WITHOUT_CLASSIFICATION	7.47843155571489E-8	IMPLEMENTATION
for an any	WITHOUT_CLASSIFICATION	0.9999994431710766	WITHOUT_CLASSIFICATION	5.568289233134932E-7	IMPLEMENTATION
insertable simply because that is the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9820305965135652	WITHOUT_CLASSIFICATION	0.017969403486434915	IMPLEMENTATION
the user specifically supplied insert="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.999983935798847	WITHOUT_CLASSIFICATION	1.6064201152873374E-5	IMPLEMENTATION
properties generated on update can never be updateable	WITHOUT_CLASSIFICATION	0.9988998631538859	WITHOUT_CLASSIFICATION	0.001100136846114079	IMPLEMENTATION
updateable only because the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9941301250647219	WITHOUT_CLASSIFICATION	0.005869874935278165	IMPLEMENTATION
the user specifically supplied update="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.999983935798847	WITHOUT_CLASSIFICATION	1.6064201152873374E-5	IMPLEMENTATION
rolename	WITHOUT_CLASSIFICATION	0.9999812862873197	WITHOUT_CLASSIFICATION	1.871371268027287E-5	IMPLEMENTATION
fetch strategy	WITHOUT_CLASSIFICATION	0.99996543760261	WITHOUT_CLASSIFICATION	3.456239738988203E-5	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999835583133168	WITHOUT_CLASSIFICATION	1.6441686683133994E-5	IMPLEMENTATION
tablename = mappings.getnamingstrategy().propertytotablename( classname path )	WITHOUT_CLASSIFICATION	0.9996747496455578	WITHOUT_CLASSIFICATION	3.252503544421996E-4	IMPLEMENTATION
sort	WITHOUT_CLASSIFICATION	0.9999435242661353	WITHOUT_CLASSIFICATION	5.647573386474738E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.999992431664391	WITHOUT_CLASSIFICATION	7.56833560887261E-6	IMPLEMENTATION
unsorted natural comparator.class.name	WITHOUT_CLASSIFICATION	0.9999153670624434	WITHOUT_CLASSIFICATION	8.463293755648076E-5	IMPLEMENTATION
orphan delete (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999768108380148	WITHOUT_CLASSIFICATION	2.318916198514658E-5	IMPLEMENTATION
set up second pass	WITHOUT_CLASSIFICATION	0.9998683794797699	WITHOUT_CLASSIFICATION	1.3162052023010074E-4	IMPLEMENTATION
an "embedded" component (composite ids and unique) note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9993714313146514	WITHOUT_CLASSIFICATION	6.285686853485268E-4	IMPLEMENTATION
a nested composite element	WITHOUT_CLASSIFICATION	0.9999535707226003	WITHOUT_CLASSIFICATION	4.6429277399693973E-5	IMPLEMENTATION
for an any we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999920165343532	WITHOUT_CLASSIFICATION	7.98346564688409E-6	IMPLEMENTATION
note special case one-to-one constrained=false cannot be proxied so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999998458520006	WITHOUT_CLASSIFICATION	1.5414799933835322E-7	IMPLEMENTATION
use old (hb 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999989856424957	WITHOUT_CLASSIFICATION	1.0143575043572889E-6	IMPLEMENTATION
lazy = !join	WITHOUT_CLASSIFICATION	0.9998770528060208	WITHOUT_CLASSIFICATION	1.2294719397925845E-4	IMPLEMENTATION
generator	WITHOUT_CLASSIFICATION	0.9999793103884715	WITHOUT_CLASSIFICATION	2.068961152848548E-5	IMPLEMENTATION
id unsaved-value	WITHOUT_CLASSIFICATION	0.9997198780404842	WITHOUT_CLASSIFICATION	2.8012195951577525E-4	IMPLEMENTATION
version unsaved-value	WITHOUT_CLASSIFICATION	0.9999135621785492	WITHOUT_CLASSIFICATION	8.643782145081255E-5	IMPLEMENTATION
not necessarily a unique property reference	WITHOUT_CLASSIFICATION	0.999281785769513	WITHOUT_CLASSIFICATION	7.182142304869816E-4	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999617807392921	WITHOUT_CLASSIFICATION	3.8219260707896373E-5	IMPLEMENTATION
contained elements	WITHOUT_CLASSIFICATION	0.9999768540471285	WITHOUT_CLASSIFICATION	2.3145952871370135E-5	IMPLEMENTATION
for non-inverse one-to-many with a not-null fk add a backref!	WITHOUT_CLASSIFICATION	0.9999013627521958	WITHOUT_CLASSIFICATION	9.863724780416255E-5	IMPLEMENTATION
bind the where	WITHOUT_CLASSIFICATION	0.9999097047842148	WITHOUT_CLASSIFICATION	9.02952157851398E-5	IMPLEMENTATION
bind the order-by	WITHOUT_CLASSIFICATION	0.9999654908305958	WITHOUT_CLASSIFICATION	3.4509169404155286E-5	IMPLEMENTATION
bind the filters	WITHOUT_CLASSIFICATION	0.9999655313920327	WITHOUT_CLASSIFICATION	3.446860796738151E-5	IMPLEMENTATION
overriding inherited meta attribute. hbx-621 & hbx-793	WITHOUT_CLASSIFICATION	0.9999468746767227	WITHOUT_CLASSIFICATION	5.312532327722005E-5	IMPLEMENTATION
first iterate over all elements capable of defining an extends attribute collecting all found extends references if they cannot be resolved against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999872356233	WITHOUT_CLASSIFICATION	1.2764376555940246E-8	IMPLEMENTATION
mappings might contain either the "raw" extends name (in the case of an entity-name mapping) or a fqn (in the case of a pojo mapping).	WITHOUT_CLASSIFICATION	0.9999989001384914	WITHOUT_CLASSIFICATION	1.0998615086285827E-6	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9974650587010289	WITHOUT_CLASSIFICATION	0.002534941298971198	IMPLEMENTATION
sessionfactory name	WITHOUT_CLASSIFICATION	0.9999566802285751	WITHOUT_CLASSIFICATION	4.3319771424884105E-5	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9996829201898284	WITHOUT_CLASSIFICATION	3.1707981017165525E-4	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9996829201898284	WITHOUT_CLASSIFICATION	3.1707981017165525E-4	IMPLEMENTATION
interrogate jdbc metadata	WITHOUT_CLASSIFICATION	0.9999767491829288	WITHOUT_CLASSIFICATION	2.3250817071178233E-5	IMPLEMENTATION
user supplied jdbc connections	WITHOUT_CLASSIFICATION	0.9999773517970953	WITHOUT_CLASSIFICATION	2.264820290458989E-5	IMPLEMENTATION
use dialect default properties	WITHOUT_CLASSIFICATION	0.9999827315662357	WITHOUT_CLASSIFICATION	1.7268433764295347E-5	IMPLEMENTATION
transaction settings	WITHOUT_CLASSIFICATION	0.9999944634509416	WITHOUT_CLASSIFICATION	5.536549058399104E-6	IMPLEMENTATION
sql generation settings	WITHOUT_CLASSIFICATION	0.9999978952758413	WITHOUT_CLASSIFICATION	2.1047241587851764E-6	IMPLEMENTATION
query parser settings	WITHOUT_CLASSIFICATION	0.9999878147537237	WITHOUT_CLASSIFICATION	1.2185246276279361E-5	IMPLEMENTATION
second-level / query cache	WITHOUT_CLASSIFICATION	0.9999864048607069	WITHOUT_CLASSIFICATION	1.3595139293183985E-5	IMPLEMENTATION
the cache provider is needed when we either have second-level cache enabled or query cache enabled. note that usesecondlevelcache is enabled by default	WITHOUT_CLASSIFICATION	0.9691047259344221	WITHOUT_CLASSIFICATION	0.030895274065577943	IMPLEMENTATION
sql exception converter	WITHOUT_CLASSIFICATION	0.999994104309517	WITHOUT_CLASSIFICATION	5.895690483082706E-6	IMPLEMENTATION
statistics and logging	WITHOUT_CLASSIFICATION	0.9999812467641366	WITHOUT_CLASSIFICATION	1.8753235863518507E-5	IMPLEMENTATION
settings.setshowsqlenabled(showsql)	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
settings.setformatsqlenabled(formatsql)	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
schema export	WITHOUT_CLASSIFICATION	0.9999722847229922	WITHOUT_CLASSIFICATION	2.77152770078381E-5	IMPLEMENTATION
string provider = properties.getproperty( environment.bytecode_provider ) log.info( "bytecode provider name " + provider ) bytecodeprovider bytecodeprovider = buildbytecodeprovider( provider ) settings.setbytecodeprovider( bytecodeprovider )	WITHOUT_CLASSIFICATION	0.9998775243677992	WITHOUT_CLASSIFICATION	1.2247563220084778E-4	IMPLEMENTATION
legacy behavior apply the bridge	WITHOUT_CLASSIFICATION	0.9999698296879179	WITHOUT_CLASSIFICATION	3.017031208218696E-5	IMPLEMENTATION
maybe a concrete sqlpropertyresult type but map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9997900664478832	WITHOUT_CLASSIFICATION	2.0993355211670718E-4	IMPLEMENTATION
if dotted and not load-collection nor return-join regular property	WITHOUT_CLASSIFICATION	0.9987495199916682	WITHOUT_CLASSIFICATION	0.0012504800083317977	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907 private bytecodeprovider bytecodeprovider	WITHOUT_CLASSIFICATION	0.6803271513941658	WITHOUT_CLASSIFICATION	0.3196728486058343	IMPLEMENTATION
public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999720561067391	WITHOUT_CLASSIFICATION	2.794389326100029E-5	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999650330609727	WITHOUT_CLASSIFICATION	3.496693902725259E-5	IMPLEMENTATION
package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99982534446055	WITHOUT_CLASSIFICATION	1.746555394500576E-4	IMPLEMENTATION
void setshowsqlenabled(boolean b) { showsql = b } void setformatsqlenabled(boolean b) { formatsql = b }	WITHOUT_CLASSIFICATION	0.9995692899413425	WITHOUT_CLASSIFICATION	4.307100586574428E-4	IMPLEMENTATION
public bytecodeprovider getbytecodeprovider() { return bytecodeprovider } void setbytecodeprovider(bytecodeprovider bytecodeprovider) { this.bytecodeprovider = bytecodeprovider }	WITHOUT_CLASSIFICATION	0.9999495099809771	WITHOUT_CLASSIFICATION	5.0490019022997796E-5	IMPLEMENTATION
using local since the inheritedmetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.999705366532058	WITHOUT_CLASSIFICATION	2.94633467941937E-4	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907	WITHOUT_CLASSIFICATION	0.6803271513941658	WITHOUT_CLASSIFICATION	0.3196728486058343	IMPLEMENTATION
protected list extendsqueue	WITHOUT_CLASSIFICATION	0.9999838598517599	WITHOUT_CLASSIFICATION	1.6140148240099454E-5	IMPLEMENTATION
extendsqueue = new arraylist()	WITHOUT_CLASSIFICATION	0.9999371536449323	WITHOUT_CLASSIFICATION	6.284635506771419E-5	IMPLEMENTATION
componenttuplizerfactory = new componenttuplizerfactory()	WITHOUT_CLASSIFICATION	0.9998708967778936	WITHOUT_CLASSIFICATION	1.2910322210638015E-4	IMPLEMENTATION
if doc is null then for whatever reason the cached file cannot be used	WITHOUT_CLASSIFICATION	0.9999999857869367	WITHOUT_CLASSIFICATION	1.4213063228643342E-8	IMPLEMENTATION
drop them in reverse order in case db needs it done that way	WITHOUT_CLASSIFICATION	0.9998805209284051	WITHOUT_CLASSIFICATION	1.194790715949671E-4	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999650330609727	WITHOUT_CLASSIFICATION	3.496693902725259E-5	IMPLEMENTATION
this method may be called many times!!	WITHOUT_CLASSIFICATION	0.9998099546200526	WITHOUT_CLASSIFICATION	1.9004537994736292E-4	IMPLEMENTATION
iterator iterator = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9997640218346616	WITHOUT_CLASSIFICATION	2.3597816533841437E-4	IMPLEMENTATION
iterator iter = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9997640218346616	WITHOUT_CLASSIFICATION	2.3597816533841437E-4	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999760707400747	WITHOUT_CLASSIFICATION	2.3929259925258452E-5	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999760707400747	WITHOUT_CLASSIFICATION	2.3929259925258452E-5	IMPLEMENTATION
settings.setcomponenttuplizerfactory( this.getcomponenttuplizerfactory() )	WITHOUT_CLASSIFICATION	0.999873606476193	WITHOUT_CLASSIFICATION	1.2639352380700602E-4	IMPLEMENTATION
private final list extendsqueue	WITHOUT_CLASSIFICATION	0.9999827072999611	WITHOUT_CLASSIFICATION	1.7292700038917174E-5	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9999415522988849	WITHOUT_CLASSIFICATION	5.844770111517593E-5	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9999415522988849	WITHOUT_CLASSIFICATION	5.844770111517593E-5	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9974650587010289	WITHOUT_CLASSIFICATION	0.002534941298971198	IMPLEMENTATION
set use_reflection_optimizer to false to fix hhh-227	WITHOUT_CLASSIFICATION	0.9922586951102641	WITHOUT_CLASSIFICATION	0.007741304889735835	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9999198785994197	WITHOUT_CLASSIFICATION	8.012140058025056E-5	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9999116350902674	WITHOUT_CLASSIFICATION	8.836490973259603E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9989850888413557	WITHOUT_CLASSIFICATION	0.0010149111586441888	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9999198785994197	WITHOUT_CLASSIFICATION	8.012140058025056E-5	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9999116350902674	WITHOUT_CLASSIFICATION	8.836490973259603E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.650121014103774	WITHOUT_CLASSIFICATION	0.3498789858962259	IMPLEMENTATION
maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999998057022422	WITHOUT_CLASSIFICATION	1.9429775774498554E-7	IMPLEMENTATION
the element has been removed from the set	WITHOUT_CLASSIFICATION	0.999970128748627	WITHOUT_CLASSIFICATION	2.9871251373046574E-5	IMPLEMENTATION
the element has changed	WITHOUT_CLASSIFICATION	0.9999996003218669	WITHOUT_CLASSIFICATION	3.996781331773324E-7	IMPLEMENTATION
careful these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9939485985806636	WITHOUT_CLASSIFICATION	0.006051401419336445	IMPLEMENTATION
needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.7878286866179569	WITHOUT_CLASSIFICATION	0.212171313382043	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9970762414461652	WITHOUT_CLASSIFICATION	0.002923758553834632	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9970762414461652	WITHOUT_CLASSIFICATION	0.002923758553834632	IMPLEMENTATION
do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999648258771153	WITHOUT_CLASSIFICATION	3.517412288463257E-5	IMPLEMENTATION
short-circuit(s) no new elements the old list contains only orphans no old elements so no orphans neither	WITHOUT_CLASSIFICATION	0.9999999295230628	WITHOUT_CLASSIFICATION	7.04769371353572E-8	IMPLEMENTATION
create the collection holding the orphans	WITHOUT_CLASSIFICATION	0.9999461865282704	WITHOUT_CLASSIFICATION	5.381347172966862E-5	IMPLEMENTATION
collect entityidentifier(s) of the current elements - add them into a hashset for fast access	WITHOUT_CLASSIFICATION	0.999990500279138	WITHOUT_CLASSIFICATION	9.499720861874473E-6	IMPLEMENTATION
iterate over the old list	WITHOUT_CLASSIFICATION	0.9999997825390365	WITHOUT_CLASSIFICATION	2.1746096350223356E-7	IMPLEMENTATION
(array==null) ? templist.size()	WITHOUT_CLASSIFICATION	0.9996884154358693	WITHOUT_CLASSIFICATION	3.115845641306934E-4	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9989850888413557	WITHOUT_CLASSIFICATION	0.0010149111586441888	IMPLEMENTATION
(array==null) ? templist.get(i)	WITHOUT_CLASSIFICATION	0.9996884154358693	WITHOUT_CLASSIFICATION	3.115845641306934E-4	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9999895388313792	WITHOUT_CLASSIFICATION	1.0461168620807133E-5	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9999895388313792	WITHOUT_CLASSIFICATION	1.0461168620807133E-5	IMPLEMENTATION
amazingly these two will work because abstractcollection uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999697831171285	WITHOUT_CLASSIFICATION	3.0216882871512328E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.650121014103774	WITHOUT_CLASSIFICATION	0.3498789858962259	IMPLEMENTATION
finally what it's all about	WITHOUT_CLASSIFICATION	0.9987866568148582	WITHOUT_CLASSIFICATION	0.0012133431851417723	IMPLEMENTATION
note that if we load this collection from a cartesian product the multiplicity would be broken so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999983103597837	WITHOUT_CLASSIFICATION	1.6896402162605368E-6	IMPLEMENTATION
anyway here we implement <set> semantics for a <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9956625975818553	WITHOUT_CLASSIFICATION	0.004337402418144733	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.999998315336362	WITHOUT_CLASSIFICATION	1.6846636380556483E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9995311796284546	WITHOUT_CLASSIFICATION	4.6882037154534E-4	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.650121014103774	WITHOUT_CLASSIFICATION	0.3498789858962259	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.999998315336362	WITHOUT_CLASSIFICATION	1.6846636380556483E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9995311796284546	WITHOUT_CLASSIFICATION	4.6882037154534E-4	IMPLEMENTATION
public boolean equals(object other) {read()return bag.equals(other)}public int hashcode(object other) {read()return bag.hashcode()}	WITHOUT_CLASSIFICATION	0.9999962856151645	WITHOUT_CLASSIFICATION	3.7143848355118956E-6	IMPLEMENTATION
list operations	WITHOUT_CLASSIFICATION	0.9999628173428599	WITHOUT_CLASSIFICATION	3.7182657140203056E-5	IMPLEMENTATION
pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999692253457396	WITHOUT_CLASSIFICATION	3.077465426042759E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.650121014103774	WITHOUT_CLASSIFICATION	0.3498789858962259	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.650121014103774	WITHOUT_CLASSIFICATION	0.3498789858962259	IMPLEMENTATION
from map	WITHOUT_CLASSIFICATION	0.9999934892225453	WITHOUT_CLASSIFICATION	6.510777454786419E-6	IMPLEMENTATION
from sortedmap	WITHOUT_CLASSIFICATION	0.999986500451419	WITHOUT_CLASSIFICATION	1.349954858099494E-5	IMPLEMENTATION
inject the data	WITHOUT_CLASSIFICATION	0.9999882306426037	WITHOUT_CLASSIFICATION	1.176935739638477E-5	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.999997329834666	WITHOUT_CLASSIFICATION	2.6701653339549723E-6	IMPLEMENTATION
default pool size 20	WITHOUT_CLASSIFICATION	0.9999881175339181	WITHOUT_CLASSIFICATION	1.1882466081853471E-5	IMPLEMENTATION
trying via forname() first to be as close to drivermanager's semantics	WITHOUT_CLASSIFICATION	0.9999894756150263	WITHOUT_CLASSIFICATION	1.0524384973697131E-5	IMPLEMENTATION
if debug level is enabled then log the password otherwise mask it	WITHOUT_CLASSIFICATION	0.99984193533842	WITHOUT_CLASSIFICATION	1.58064661580006E-4	IMPLEMENTATION
register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999839256712584	WITHOUT_CLASSIFICATION	1.6074328741688398E-5	IMPLEMENTATION
wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999858802362197	WITHOUT_CLASSIFICATION	1.4119763780294502E-5	IMPLEMENTATION
then bind it	WITHOUT_CLASSIFICATION	0.9999719816524659	WITHOUT_CLASSIFICATION	2.801834753395839E-5	IMPLEMENTATION
try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9986660647557196	WITHOUT_CLASSIFICATION	0.0013339352442803916	IMPLEMENTATION
allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9971261531080878	WITHOUT_CLASSIFICATION	0.002873846891912182	IMPLEMENTATION
limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999994159159196	WITHOUT_CLASSIFICATION	5.840840804181763E-7	IMPLEMENTATION
allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9989830616181131	WITHOUT_CLASSIFICATION	0.0010169383818868873	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999915386938238	WITHOUT_CLASSIFICATION	8.461306176201422E-5	IMPLEMENTATION
we could register the session against the transaction even though it is not started but we'd have no guarentee of ever getting the map entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999993492438696	WITHOUT_CLASSIFICATION	6.507561303791223E-7	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.999997329834666	WITHOUT_CLASSIFICATION	2.6701653339549723E-6	IMPLEMENTATION
private string propertyname	WITHOUT_CLASSIFICATION	0.9999886864671481	WITHOUT_CLASSIFICATION	1.1313532851954937E-5	IMPLEMENTATION
public propertyprojection project() {return projections.property(getpropertyname())}	WITHOUT_CLASSIFICATION	0.9999845143561333	WITHOUT_CLASSIFICATION	1.5485643866759132E-5	IMPLEMENTATION
string[] fk = stringhelper.qualify( "collection_" cp.getkeycolumnnames() )	WITHOUT_CLASSIFICATION	0.9996037845587853	WITHOUT_CLASSIFICATION	3.962154412147327E-4	IMPLEMENTATION
" collection_ where " +	WITHOUT_CLASSIFICATION	0.9998853949724368	WITHOUT_CLASSIFICATION	1.1460502756330283E-4	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9999415088792779	WITHOUT_CLASSIFICATION	5.849112072206527E-5	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9999415088792779	WITHOUT_CLASSIFICATION	5.849112072206527E-5	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.999997329834666	WITHOUT_CLASSIFICATION	2.6701653339549723E-6	IMPLEMENTATION
the following two lines were added to ensure that this.params is not null which can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9919933590107191	WITHOUT_CLASSIFICATION	0.008006640989280929	IMPLEMENTATION
with two-deep subqueries the same alias would get generated for both using the old method (criteriaquery.generatesqlalias()) so that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999989366653785	WITHOUT_CLASSIFICATION	1.0633346214209141E-6	IMPLEMENTATION
implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9932537962525083	WITHOUT_CLASSIFICATION	0.006746203747491641	IMPLEMENTATION
pull off the last " "	WITHOUT_CLASSIFICATION	0.9999901265451892	WITHOUT_CLASSIFICATION	9.873454810797766E-6	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999839155282906	WITHOUT_CLASSIFICATION	1.6084471709407602E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource)	WITHOUT_CLASSIFICATION	0.9998262524236738	WITHOUT_CLASSIFICATION	1.737475763261847E-4	IMPLEMENTATION
not_supported_should_use_jdbc3_preparedstatement.getgeneratedkeys_method	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999726465767476	WITHOUT_CLASSIFICATION	2.735342325237376E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
oracle did add support for ansi case statements in 9i	WITHOUT_CLASSIFICATION	0.999995003824758	WITHOUT_CLASSIFICATION	4.996175241900806E-6	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.999996400578287	WITHOUT_CLASSIFICATION	3.5994217129958124E-6	IMPLEMENTATION
informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999842615034917	WITHOUT_CLASSIFICATION	1.5738496508231614E-5	IMPLEMENTATION
or byte or text? or money	WITHOUT_CLASSIFICATION	0.9999717855100321	WITHOUT_CLASSIFICATION	2.821448996791948E-5	IMPLEMENTATION
strip table-owner because informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999091255206707	WITHOUT_CLASSIFICATION	9.087447932928836E-5	IMPLEMENTATION
build the map of standard ansi sql aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999945765914108	WITHOUT_CLASSIFICATION	5.4234085891158954E-6	IMPLEMENTATION
pre h3.2 behavior super.getreturntype(ct m)	WITHOUT_CLASSIFICATION	0.9999387302121826	WITHOUT_CLASSIFICATION	6.126978781732568E-5	IMPLEMENTATION
finally use the sqltype if == on hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9877199742562376	WITHOUT_CLASSIFICATION	0.0122800257437624	IMPLEMENTATION
because numeric can be anything	WITHOUT_CLASSIFICATION	0.9998294693983458	WITHOUT_CLASSIFICATION	1.7053060165406696E-4	IMPLEMENTATION
constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998613461795802	WITHOUT_CLASSIFICATION	1.386538204198075E-4	IMPLEMENTATION
standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999946374531457	WITHOUT_CLASSIFICATION	5.362546854282976E-6	IMPLEMENTATION
map second/minute/hour/day/month/year to ansi extract() override on subclasses	WITHOUT_CLASSIFICATION	0.9969875484564195	WITHOUT_CLASSIFICATION	0.0030124515435805857	IMPLEMENTATION
register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999937007318193	WITHOUT_CLASSIFICATION	6.299268180727279E-6	IMPLEMENTATION
database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992573677001594	WITHOUT_CLASSIFICATION	7.426322998405943E-4	IMPLEMENTATION
hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995608351710682	WITHOUT_CLASSIFICATION	4.391648289317719E-4	IMPLEMENTATION
keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993108885096187	WITHOUT_CLASSIFICATION	6.89111490381307E-4	IMPLEMENTATION
native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999347461346673	WITHOUT_CLASSIFICATION	6.525386533280107E-5	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992311821728567	WITHOUT_CLASSIFICATION	7.688178271433734E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992632979022706	WITHOUT_CLASSIFICATION	7.367020977293433E-4	IMPLEMENTATION
guid support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991368186394306	WITHOUT_CLASSIFICATION	8.631813605693482E-4	IMPLEMENTATION
limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991368186394306	WITHOUT_CLASSIFICATION	8.631813605693482E-4	IMPLEMENTATION
by default we report no support	WITHOUT_CLASSIFICATION	0.9999335860428653	WITHOUT_CLASSIFICATION	6.641395713464666E-5	IMPLEMENTATION
by default we report no support for nowait lock semantics	WITHOUT_CLASSIFICATION	0.999978296577931	WITHOUT_CLASSIFICATION	2.1703422068991182E-5	IMPLEMENTATION
table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993182480260598	WITHOUT_CLASSIFICATION	6.81751973940142E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993528980075761	WITHOUT_CLASSIFICATION	6.471019924239153E-4	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9985741713609517	WITHOUT_CLASSIFICATION	0.0014258286390482966	IMPLEMENTATION
current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9981792000220101	WITHOUT_CLASSIFICATION	0.0018207999779898745	IMPLEMENTATION
sqlexception support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991656918121172	WITHOUT_CLASSIFICATION	8.343081878828171E-4	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991368186394306	WITHOUT_CLASSIFICATION	8.631813605693482E-4	IMPLEMENTATION
identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989066107975639	WITHOUT_CLASSIFICATION	0.001093389202436021	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991368186394306	WITHOUT_CLASSIFICATION	8.631813605693482E-4	IMPLEMENTATION
grrr for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999913798537282	WITHOUT_CLASSIFICATION	8.620146271786786E-6	IMPLEMENTATION
informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999172064326367	WITHOUT_CLASSIFICATION	8.279356736328816E-5	IMPLEMENTATION
return false here as most databases do not properly support this construct	WITHOUT_CLASSIFICATION	0.7943122435444815	IMPLEMENTATION	0.20568775645551857	WITHOUT_CLASSIFICATION
mckoi has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999986279033941	WITHOUT_CLASSIFICATION	1.3720966058679634E-6	IMPLEMENTATION
oracle8 and previous define only a "date" type which is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.999994718440148	WITHOUT_CLASSIFICATION	5.281559852052875E-6	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999464535910351	WITHOUT_CLASSIFICATION	5.354640896496115E-5	IMPLEMENTATION
" cascade"	WITHOUT_CLASSIFICATION	0.9999707484708154	WITHOUT_CLASSIFICATION	2.9251529184579503E-5	IMPLEMENTATION
trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999761817519098	WITHOUT_CLASSIFICATION	2.3818248090259007E-5	IMPLEMENTATION
public boolean droptemporarytableafteruse() {we have to because postgres sets current txto rollback only after a failed create tablereturn true}	WITHOUT_CLASSIFICATION	0.9999954339523837	WITHOUT_CLASSIFICATION	4.566047616305657E-6	IMPLEMENTATION
check violation	WITHOUT_CLASSIFICATION	0.9995973240620677	WITHOUT_CLASSIFICATION	4.026759379322164E-4	IMPLEMENTATION
unique violation	WITHOUT_CLASSIFICATION	0.9998993635063587	WITHOUT_CLASSIFICATION	1.006364936412987E-4	IMPLEMENTATION
foreign key violation	WITHOUT_CLASSIFICATION	0.9999016710925567	WITHOUT_CLASSIFICATION	9.832890744330599E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
not null violation	WITHOUT_CLASSIFICATION	0.9989794039340745	WITHOUT_CLASSIFICATION	0.0010205960659255102	IMPLEMENTATION
all other	WITHOUT_CLASSIFICATION	0.9998600704479385	WITHOUT_CLASSIFICATION	1.39929552061477E-4	IMPLEMENTATION
register the type of the out param - postgresql uses types.other	WITHOUT_CLASSIFICATION	0.9999953417351805	WITHOUT_CLASSIFICATION	4.658264819582163E-6	IMPLEMENTATION
seems to not really public boolean supportsrowvalueconstructorsyntax() { return true }	WITHOUT_CLASSIFICATION	0.9998112870853705	WITHOUT_CLASSIFICATION	1.8871291462939986E-4	IMPLEMENTATION
seems to have spotty lob suppport	WITHOUT_CLASSIFICATION	0.9999031080612232	WITHOUT_CLASSIFICATION	9.689193877684094E-5	IMPLEMENTATION
hhh-2300	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
ignore (probably h2 not in the classpath)	WITHOUT_CLASSIFICATION	0.999627261172115	WITHOUT_CLASSIFICATION	3.727388278850556E-4	IMPLEMENTATION
numeric functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998430452940099	WITHOUT_CLASSIFICATION	1.569547059901245E-4	IMPLEMENTATION
string functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999557941242552	WITHOUT_CLASSIFICATION	4.420587574483224E-5	IMPLEMENTATION
time and date functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996672927531813	WITHOUT_CLASSIFICATION	3.3270724681875143E-4	IMPLEMENTATION
system functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997244296368255	WITHOUT_CLASSIFICATION	2.755703631744852E-4	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9992164021192078	WITHOUT_CLASSIFICATION	7.835978807922549E-4	IMPLEMENTATION
23000 check constraint violation {0} 23001 unique index or primary key violation {0}	WITHOUT_CLASSIFICATION	0.9990033236970228	WITHOUT_CLASSIFICATION	9.96676302977132E-4	IMPLEMENTATION
display the dialect version.	WITHOUT_CLASSIFICATION	0.9999878132036261	WITHOUT_CLASSIFICATION	1.2186796373889061E-5	IMPLEMENTATION
the rdms concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999107416989161	WITHOUT_CLASSIFICATION	8.925830108380496E-5	IMPLEMENTATION
dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999015252518404	WITHOUT_CLASSIFICATION	9.847474815968463E-5	IMPLEMENTATION
original dialect.java returns " for update"	WITHOUT_CLASSIFICATION	0.9998788679472748	WITHOUT_CLASSIFICATION	1.2113205272520877E-4	IMPLEMENTATION
verify the state of this new method in hibernate 3.0 dialect.java	WITHOUT_CLASSIFICATION	0.999998794736613	WITHOUT_CLASSIFICATION	1.2052633869788985E-6	IMPLEMENTATION
origial dialect.java returns true	WITHOUT_CLASSIFICATION	0.9999280931015834	WITHOUT_CLASSIFICATION	7.190689841666012E-5	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999326560604105	WITHOUT_CLASSIFICATION	6.734393958948159E-5	IMPLEMENTATION
sequence methods - start. the rdms dialect needs these	WITHOUT_CLASSIFICATION	0.9997871866972402	WITHOUT_CLASSIFICATION	2.128133027597797E-4	IMPLEMENTATION
methods to make it possible to use the native id generator	WITHOUT_CLASSIFICATION	0.9970812406725594	WITHOUT_CLASSIFICATION	0.002918759327440667	IMPLEMENTATION
the where clause was added to eliminate this statement from brute force searches.	WITHOUT_CLASSIFICATION	0.9999904068963699	WITHOUT_CLASSIFICATION	9.593103630157396E-6	IMPLEMENTATION
sequence methods - end	WITHOUT_CLASSIFICATION	0.999919095376584	WITHOUT_CLASSIFICATION	8.090462341599604E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999464535910351	WITHOUT_CLASSIFICATION	5.354640896496115E-5	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9999169050273412	WITHOUT_CLASSIFICATION	8.309497265881253E-5	IMPLEMENTATION
used with drop table to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999978196331627	WITHOUT_CLASSIFICATION	2.180366837238761E-6	IMPLEMENTATION
rdms supports the union all clause.	WITHOUT_CLASSIFICATION	0.9997474901639237	WITHOUT_CLASSIFICATION	2.525098360762637E-4	IMPLEMENTATION
rdms has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.999998628310638	WITHOUT_CLASSIFICATION	1.3716893619871802E-6	IMPLEMENTATION
multi-param dialect functions	WITHOUT_CLASSIFICATION	0.9999698162943665	WITHOUT_CLASSIFICATION	3.018370563341058E-5	IMPLEMENTATION
function templates	WITHOUT_CLASSIFICATION	0.9999610110122964	WITHOUT_CLASSIFICATION	3.89889877034983E-5	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9992164021192078	WITHOUT_CLASSIFICATION	7.835978807922549E-4	IMPLEMENTATION
this assumes schema support which is present in 1.8.0 and later	WITHOUT_CLASSIFICATION	0.9998978699576264	WITHOUT_CLASSIFICATION	1.0213004237361736E-4	IMPLEMENTATION
hsqldb only supports read_uncommitted transaction isolation	WITHOUT_CLASSIFICATION	0.9998494641065064	WITHOUT_CLASSIFICATION	1.5053589349348442E-4	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999574569501657	WITHOUT_CLASSIFICATION	4.254304983431147E-5	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9998489485823596	WITHOUT_CLASSIFICATION	1.5105141764040482E-4	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9995995420120714	WITHOUT_CLASSIFICATION	4.004579879286198E-4	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999668605302321	WITHOUT_CLASSIFICATION	3.313946976790385E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9995614674111294	WITHOUT_CLASSIFICATION	4.3853258887056114E-4	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999989543442588	WITHOUT_CLASSIFICATION	1.0456557412576734E-6	IMPLEMENTATION
timesten has no blob/clob support but these types may be suitable for some applications. the length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999275685840388	WITHOUT_CLASSIFICATION	7.243141596117533E-5	IMPLEMENTATION
new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999966023586474	WITHOUT_CLASSIFICATION	3.3976413525116464E-6	IMPLEMENTATION
public boolean supportsforupdatenowait() {return false}	WITHOUT_CLASSIFICATION	0.9999912283338113	WITHOUT_CLASSIFICATION	8.771666188721365E-6	IMPLEMENTATION
timesten has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999986156114464	WITHOUT_CLASSIFICATION	1.3843885535664246E-6	IMPLEMENTATION
iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999065502684787	WITHOUT_CLASSIFICATION	9.344973152120283E-5	IMPLEMENTATION
add new ordered map	WITHOUT_CLASSIFICATION	0.9998846830156906	WITHOUT_CLASSIFICATION	1.1531698430942239E-4	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" )	WITHOUT_CLASSIFICATION	0.9998737992207787	WITHOUT_CLASSIFICATION	1.262007792213168E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999981771081615	WITHOUT_CLASSIFICATION	1.8228918384906298E-6	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999817668021982	WITHOUT_CLASSIFICATION	1.8233197801861678E-5	IMPLEMENTATION
return "select current_timestamp from rdb$database"	WITHOUT_CLASSIFICATION	0.9999900804183073	WITHOUT_CLASSIFICATION	9.919581692627617E-6	IMPLEMENTATION
registercolumntype data types	WITHOUT_CLASSIFICATION	0.9999600634707189	WITHOUT_CLASSIFICATION	3.993652928120329E-5	IMPLEMENTATION
hibernate seems to ignore this type	WITHOUT_CLASSIFICATION	0.999946200665735	WITHOUT_CLASSIFICATION	5.379933426499059E-5	IMPLEMENTATION
ibid for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999618046897797	WITHOUT_CLASSIFICATION	3.819531022018814E-5	IMPLEMENTATION
tell hibernate to use getbytes instead of getbinarystream	WITHOUT_CLASSIFICATION	0.9999094974017738	WITHOUT_CLASSIFICATION	9.050259822624488E-5	IMPLEMENTATION
no batch statements	WITHOUT_CLASSIFICATION	0.9999671984774272	WITHOUT_CLASSIFICATION	3.280152257282886E-5	IMPLEMENTATION
we might want a special case for 192. this is very common for money types and here it is converted to 181	WITHOUT_CLASSIFICATION	0.9995871568673876	WITHOUT_CLASSIFICATION	4.1284313261234133E-4	IMPLEMENTATION
no pointbase bit	WITHOUT_CLASSIFICATION	0.9999698298536291	WITHOUT_CLASSIFICATION	3.0170146370909548E-5	IMPLEMENTATION
no pointbase tinyint	WITHOUT_CLASSIFICATION	0.9999691392678074	WITHOUT_CLASSIFICATION	3.0860732192705554E-5	IMPLEMENTATION
pointbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999986282752642	WITHOUT_CLASSIFICATION	1.371724735835575E-6	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999464535910351	WITHOUT_CLASSIFICATION	5.354640896496115E-5	IMPLEMENTATION
the current_timestamp is more accurate but only known to be supported in sql server 7.0 and later (i.e. sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999911932548474	WITHOUT_CLASSIFICATION	8.806745152637224E-6	IMPLEMENTATION
sql server (at least up through 2005) does not support defining cascade delete constraints which can circel back to the mutating table	WITHOUT_CLASSIFICATION	0.9996273525492223	WITHOUT_CLASSIFICATION	3.726474507776735E-4	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9908378809744767	WITHOUT_CLASSIFICATION	0.009162119025523222	IMPLEMENTATION
registercolumntype( types.blob 16777215 "mediumblob" ) registercolumntype( types.blob 65535 "blob" )	WITHOUT_CLASSIFICATION	0.9998737992207787	WITHOUT_CLASSIFICATION	1.262007792213168E-4	IMPLEMENTATION
registercolumntype( types.clob 16777215 "mediumtext" ) registercolumntype( types.clob 65535 "text" )	WITHOUT_CLASSIFICATION	0.999873979381865	WITHOUT_CLASSIFICATION	1.260206181349878E-4	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" ) registercolumntype( types.varchar 65535 "text" )	WITHOUT_CLASSIFICATION	0.999873979381865	WITHOUT_CLASSIFICATION	1.260206181349878E-4	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999464535910351	WITHOUT_CLASSIFICATION	5.354640896496115E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999415401443377	WITHOUT_CLASSIFICATION	5.845985566225776E-5	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999817668021982	WITHOUT_CLASSIFICATION	1.8233197801861678E-5	IMPLEMENTATION
sybase bit type does not support null values	WITHOUT_CLASSIFICATION	0.9999129628280861	WITHOUT_CLASSIFICATION	8.703717191395757E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999981771081615	WITHOUT_CLASSIFICATION	1.8228918384906298E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999564793142913	WITHOUT_CLASSIFICATION	4.352068570870517E-5	IMPLEMENTATION
not null (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9982878746980753	WITHOUT_CLASSIFICATION	0.0017121253019246354	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999979576006863	WITHOUT_CLASSIFICATION	2.0423993137540762E-6	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999574569501657	WITHOUT_CLASSIFICATION	4.254304983431147E-5	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9998489485823596	WITHOUT_CLASSIFICATION	1.5105141764040482E-4	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9995995420120714	WITHOUT_CLASSIFICATION	4.004579879286198E-4	IMPLEMENTATION
add another (inner) nested select add the main query close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999904402941331	WITHOUT_CLASSIFICATION	9.559705866782354E-6	IMPLEMENTATION
add the main query	WITHOUT_CLASSIFICATION	0.9998317113186437	WITHOUT_CLASSIFICATION	1.68288681356355E-4	IMPLEMENTATION
add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999458545939018	WITHOUT_CLASSIFICATION	5.414540609810929E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999981771081615	WITHOUT_CLASSIFICATION	1.8228918384906298E-6	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999564793142913	WITHOUT_CLASSIFICATION	4.352068570870517E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999464535910351	WITHOUT_CLASSIFICATION	5.354640896496115E-5	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999668605302321	WITHOUT_CLASSIFICATION	3.313946976790385E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9995614674111294	WITHOUT_CLASSIFICATION	4.3853258887056114E-4	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999989543442588	WITHOUT_CLASSIFICATION	1.0456557412576734E-6	IMPLEMENTATION
features which change between 8i 9i and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999649011979289	WITHOUT_CLASSIFICATION	3.509880207107238E-5	IMPLEMENTATION
features which remain constant across 8i 9i and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997055338222254	WITHOUT_CLASSIFICATION	2.9446617777459735E-4	IMPLEMENTATION
binary %stream character %stream	WITHOUT_CLASSIFICATION	0.9999517586915646	WITHOUT_CLASSIFICATION	4.824130843550696E-5	IMPLEMENTATION
getdefaultproperties().setproperty(environment.statement_batch_size no_batch)	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
hibernate impelemnts cast in dialect.java	WITHOUT_CLASSIFICATION	0.9999896948031387	WITHOUT_CLASSIFICATION	1.0305196861277527E-5	IMPLEMENTATION
aggregate functions shouldn't be registered right? registerfunction( "list" new standardsqlfunction("list"hibernate.string) ) stopped on $list	WITHOUT_CLASSIFICATION	0.9975821063764194	WITHOUT_CLASSIFICATION	0.0024178936235806103	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991368186394306	WITHOUT_CLASSIFICATION	8.631813605693482E-4	IMPLEMENTATION
below is for cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999919890473956	WITHOUT_CLASSIFICATION	8.010952604464743E-6	IMPLEMENTATION
note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9998435389415049	WITHOUT_CLASSIFICATION	1.5646105849521772E-4	IMPLEMENTATION
%upper is deprecated	WITHOUT_CLASSIFICATION	0.9999657740007636	WITHOUT_CLASSIFICATION	3.422599923636028E-5	IMPLEMENTATION
the syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9998831506403258	WITHOUT_CLASSIFICATION	1.168493596741821E-4	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992311821728567	WITHOUT_CLASSIFICATION	7.688178271433734E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992632979022706	WITHOUT_CLASSIFICATION	7.367020977293433E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993528980075761	WITHOUT_CLASSIFICATION	6.471019924239153E-4	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
the syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999427815722329	WITHOUT_CLASSIFICATION	5.721842776697075E-5	IMPLEMENTATION
completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999063992828433	WITHOUT_CLASSIFICATION	9.360071715658066E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992469478489698	WITHOUT_CLASSIFICATION	7.530521510301586E-4	IMPLEMENTATION
limit support (ala top) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99942679969327	WITHOUT_CLASSIFICATION	5.732003067300074E-4	IMPLEMENTATION
intersystems cache' does not current support "select for update" syntax set your transaction mode to read_committed before using	WITHOUT_CLASSIFICATION	0.9987931242107542	WITHOUT_CLASSIFICATION	0.0012068757892459256	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
<string>	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9985741713609517	WITHOUT_CLASSIFICATION	0.0014258286390482966	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991368186394306	WITHOUT_CLASSIFICATION	8.631813605693482E-4	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999326560604105	WITHOUT_CLASSIFICATION	6.734393958948159E-5	IMPLEMENTATION
does the limit clause come at the start of the select statement rather than at the end?	WITHOUT_CLASSIFICATION	0.9999997122233478	WITHOUT_CLASSIFICATION	2.8777665210885885E-7	IMPLEMENTATION
does the limit clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.999996651989096	WITHOUT_CLASSIFICATION	3.348010903958352E-6	IMPLEMENTATION
the name of the sql function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999847266987248	WITHOUT_CLASSIFICATION	1.527330127522113E-5	IMPLEMENTATION
create an outerjoingenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999960441939979	WITHOUT_CLASSIFICATION	3.955806002074216E-6	IMPLEMENTATION
the keyword used to insert a row without specifying any column values	WITHOUT_CLASSIFICATION	0.9999988831875342	WITHOUT_CLASSIFICATION	1.1168124657577805E-6	IMPLEMENTATION
registerfunction( "trim" new standardsqlfunction( "trim" hibernate.string ) )	WITHOUT_CLASSIFICATION	0.9998986550603117	WITHOUT_CLASSIFICATION	1.01344939688257E-4	IMPLEMENTATION
skip the from keyword in params	WITHOUT_CLASSIFICATION	0.9999974582433916	WITHOUT_CLASSIFICATION	2.5417566084931567E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999672053460105	WITHOUT_CLASSIFICATION	3.2794653989501576E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999726465767476	WITHOUT_CLASSIFICATION	2.735342325237376E-5	IMPLEMENTATION
sqlfunction implementation	WITHOUT_CLASSIFICATION	0.999880940354115	WITHOUT_CLASSIFICATION	1.190596458849413E-4	IMPLEMENTATION
conceivable that the dialect ctor could throw hibernateexceptions so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999438707217795	WITHOUT_CLASSIFICATION	5.612927822052336E-5	IMPLEMENTATION
register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999370745592199	WITHOUT_CLASSIFICATION	6.292544078009623E-5	IMPLEMENTATION
register resolvers set via environment property	WITHOUT_CLASSIFICATION	0.9997239167141334	WITHOUT_CLASSIFICATION	2.760832858665924E-4	IMPLEMENTATION
kept for backward compatibility until after the 3.1beta5 release of ha	WITHOUT_CLASSIFICATION	0.999942624946193	WITHOUT_CLASSIFICATION	5.7375053807037885E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9999471747610161	WITHOUT_CLASSIFICATION	5.2825238983867685E-5	IMPLEMENTATION
the cascadingaction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999916908576054	WITHOUT_CLASSIFICATION	8.30914239459297E-5	IMPLEMENTATION
the cascadingaction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998709015552932	WITHOUT_CLASSIFICATION	1.2909844470673833E-4	IMPLEMENTATION
delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999961779704547	WITHOUT_CLASSIFICATION	3.8220295452495324E-6	IMPLEMENTATION
orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999298481511479	WITHOUT_CLASSIFICATION	7.015184885204185E-5	IMPLEMENTATION
(lockmode) anything	WITHOUT_CLASSIFICATION	0.9998623456034971	WITHOUT_CLASSIFICATION	1.3765439650291665E-4	IMPLEMENTATION
lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999577844905405	WITHOUT_CLASSIFICATION	4.22155094594606E-5	IMPLEMENTATION
refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9995461908902202	WITHOUT_CLASSIFICATION	4.5380910977965076E-4	IMPLEMENTATION
evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9997713005675629	WITHOUT_CLASSIFICATION	2.2869943243714644E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999300267289165	WITHOUT_CLASSIFICATION	6.997327108355155E-5	IMPLEMENTATION
orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9998098004198301	WITHOUT_CLASSIFICATION	1.9019958016981638E-4	IMPLEMENTATION
for deprecated saveorupdatecopy()	WITHOUT_CLASSIFICATION	0.999957649186447	WITHOUT_CLASSIFICATION	4.2350813552998175E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9997713271123564	WITHOUT_CLASSIFICATION	2.2867288764366684E-4	IMPLEMENTATION
a proxy cannot be transient and it breaks foreignkeys.istransient	WITHOUT_CLASSIFICATION	0.9999971936438291	WITHOUT_CLASSIFICATION	2.8063561710085994E-6	IMPLEMENTATION
replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999989636325259	WITHOUT_CLASSIFICATION	1.036367474103639E-5	IMPLEMENTATION
static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999245083364179	WITHOUT_CLASSIFICATION	7.549166358208937E-5	IMPLEMENTATION
handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999161435541515	WITHOUT_CLASSIFICATION	8.385644584851595E-5	IMPLEMENTATION
actually the semantics of the next three are really "bag" note that unlike objects collection insertions updates deletions are not really remembered between flushes. we just re-use the same lists for convenience.	WITHOUT_CLASSIFICATION	0.9999839392926566	WITHOUT_CLASSIFICATION	1.6060707343299143E-5	IMPLEMENTATION
add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9998709849897367	WITHOUT_CLASSIFICATION	1.2901501026334907E-4	IMPLEMENTATION
continue loop	WITHOUT_CLASSIFICATION	0.9999817544113527	WITHOUT_CLASSIFICATION	1.8245588647286723E-5	IMPLEMENTATION
sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999508516064363	WITHOUT_CLASSIFICATION	4.914839356367863E-5	IMPLEMENTATION
sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999711887107813	WITHOUT_CLASSIFICATION	2.8811289218664682E-5	IMPLEMENTATION
the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999649171084547	WITHOUT_CLASSIFICATION	3.5082891545190904E-5	IMPLEMENTATION
the map of batch numbers to entityinsertaction lists	WITHOUT_CLASSIFICATION	0.9999705012974499	WITHOUT_CLASSIFICATION	2.9498702549978735E-5	IMPLEMENTATION
optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9997732413864837	WITHOUT_CLASSIFICATION	2.267586135162906E-4	IMPLEMENTATION
the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9997034423011365	WITHOUT_CLASSIFICATION	2.9655769886347753E-4	IMPLEMENTATION
remove the current element from insertions. it will be added back later.	WITHOUT_CLASSIFICATION	0.9999997106194191	WITHOUT_CLASSIFICATION	2.8938058094547745E-7	IMPLEMENTATION
the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.999842754386099	WITHOUT_CLASSIFICATION	1.5724561390100054E-4	IMPLEMENTATION
there is already an existing batch for this type of entity. check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999999450753401	WITHOUT_CLASSIFICATION	5.492466001143377E-8	IMPLEMENTATION
now rebuild the insertions list. there is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999947190837439	WITHOUT_CLASSIFICATION	5.280916256161071E-6	IMPLEMENTATION
the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999757400445876	WITHOUT_CLASSIFICATION	2.4259955412462973E-5	IMPLEMENTATION
loop through all the associations of the current entity and make sure that they are processed before the current batch number	WITHOUT_CLASSIFICATION	0.9999430564362078	WITHOUT_CLASSIFICATION	5.694356379219816E-5	IMPLEMENTATION
find the batch number associated with the current association if any.	WITHOUT_CLASSIFICATION	0.9999383951569287	WITHOUT_CLASSIFICATION	6.16048430713386E-5	IMPLEMENTATION
create a new batch for this type. the batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999968020411487	WITHOUT_CLASSIFICATION	3.1979588513204906E-6	IMPLEMENTATION
loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9998249365837982	WITHOUT_CLASSIFICATION	1.750634162018672E-4	IMPLEMENTATION
since this entity will now be processed in the latest possible batch we can be assured that it will come after all other associations there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9464202682873076	WITHOUT_CLASSIFICATION	0.05357973171269236	IMPLEMENTATION
cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9998220436189416	WITHOUT_CLASSIFICATION	1.7795638105841386E-4	IMPLEMENTATION
not really necessary but good for consistency	WITHOUT_CLASSIFICATION	0.999596215686757	WITHOUT_CLASSIFICATION	4.037843132428452E-4	IMPLEMENTATION
we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999092363873089	WITHOUT_CLASSIFICATION	9.076361269105514E-5	IMPLEMENTATION
a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9986867621250587	WITHOUT_CLASSIFICATION	0.001313237874941347	IMPLEMENTATION
handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9997966374077559	WITHOUT_CLASSIFICATION	2.0336259224407812E-4	IMPLEMENTATION
loaded entity instances by entityuniquekey	WITHOUT_CLASSIFICATION	0.9999819656446205	WITHOUT_CLASSIFICATION	1.803435537950769E-5	IMPLEMENTATION
identity map of entityentry instances by the entity instance	WITHOUT_CLASSIFICATION	0.9999945285525682	WITHOUT_CLASSIFICATION	5.471447431806541E-6	IMPLEMENTATION
entity proxies by entitykey	WITHOUT_CLASSIFICATION	0.9999817384028951	WITHOUT_CLASSIFICATION	1.8261597104916272E-5	IMPLEMENTATION
snapshots of current database state for entities that have not been loaded	WITHOUT_CLASSIFICATION	0.9966790805602858	WITHOUT_CLASSIFICATION	0.0033209194397143317	IMPLEMENTATION
identity map of array holder arrayholder instances by the array instance	WITHOUT_CLASSIFICATION	0.9999988264943338	WITHOUT_CLASSIFICATION	1.173505666162274E-6	IMPLEMENTATION
collection wrappers by the collectionkey key=collectionkey value=persistentcollection	WITHOUT_CLASSIFICATION	0.9999463840645348	WITHOUT_CLASSIFICATION	5.3615935465256196E-5	IMPLEMENTATION
set of entitykeys of deleted objects	WITHOUT_CLASSIFICATION	0.9998980102184638	WITHOUT_CLASSIFICATION	1.0198978153624536E-4	IMPLEMENTATION
properties that we have tried to load and not found in the database	WITHOUT_CLASSIFICATION	0.9947461023249591	WITHOUT_CLASSIFICATION	0.005253897675040995	IMPLEMENTATION
a list of collection wrappers that were instantiating during result set processing that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999782311754731	WITHOUT_CLASSIFICATION	2.1768824526944895E-5	IMPLEMENTATION
a container for collections we load up when the owning entity is not yet loaded for now this is purely transient!	WITHOUT_CLASSIFICATION	0.9993417554227444	WITHOUT_CLASSIFICATION	6.582445772556514E-4	IMPLEMENTATION
downgrade locks	WITHOUT_CLASSIFICATION	0.9998866841532863	WITHOUT_CLASSIFICATION	1.1331584671369098E-4	IMPLEMENTATION
any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999725151497229	WITHOUT_CLASSIFICATION	2.7484850277130998E-5	IMPLEMENTATION
unwrap the object	WITHOUT_CLASSIFICATION	0.9999921178736502	WITHOUT_CLASSIFICATION	7.882126349879905E-6	IMPLEMENTATION
initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999969819414678	WITHOUT_CLASSIFICATION	3.0180585322873812E-6	IMPLEMENTATION
return the proxied object	WITHOUT_CLASSIFICATION	0.9999970701993838	WITHOUT_CLASSIFICATION	2.9298006162526034E-6	IMPLEMENTATION
overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999970072495346	WITHOUT_CLASSIFICATION	2.992750465368088E-6	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999906346434781	WITHOUT_CLASSIFICATION	9.365356521917124E-6	IMPLEMENTATION
or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999856498024835	WITHOUT_CLASSIFICATION	1.4350197516570577E-5	IMPLEMENTATION
treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9973717709020461	WITHOUT_CLASSIFICATION	0.002628229097953817	IMPLEMENTATION
do this work only at the very highest level of the load don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9998945029449879	WITHOUT_CLASSIFICATION	1.0549705501195912E-4	IMPLEMENTATION
note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999679841764989	WITHOUT_CLASSIFICATION	3.201582350109342E-5	IMPLEMENTATION
it might be an unwrapped collection reference! try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999458587316715	WITHOUT_CLASSIFICATION	5.4141268328492884E-5	IMPLEMENTATION
public boolean isnonexistant(entitykey key) {return nonexistantentitykeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999912269546629	WITHOUT_CLASSIFICATION	8.773045337105444E-6	IMPLEMENTATION
public boolean isnonexistant(entityuniquekey key) {return nonexistententityuniquekeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999912269546629	WITHOUT_CLASSIFICATION	8.773045337105444E-6	IMPLEMENTATION
iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999906416722124	WITHOUT_CLASSIFICATION	9.35832778767683E-6	IMPLEMENTATION
does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999996096945905	WITHOUT_CLASSIFICATION	3.903054095685153E-7	IMPLEMENTATION
check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999923096190505	WITHOUT_CLASSIFICATION	7.690380949450713E-6	IMPLEMENTATION
otherwise the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999946514804363	WITHOUT_CLASSIFICATION	5.348519563673463E-6	IMPLEMENTATION
adds remove as a sort-of alias for delete	WITHOUT_CLASSIFICATION	0.9999979601551418	WITHOUT_CLASSIFICATION	2.0398448582236847E-6	IMPLEMENTATION
bad cast	WITHOUT_CLASSIFICATION	0.9999743532526666	WITHOUT_CLASSIFICATION	2.5646747333319887E-5	IMPLEMENTATION
return lhspersister.getsubclasspropertycolumnnames(property)	WITHOUT_CLASSIFICATION	0.9999559614244578	WITHOUT_CLASSIFICATION	4.40385755422852E-5	IMPLEMENTATION
property-refs for associations defined on a component are not supported so no need to slice	WITHOUT_CLASSIFICATION	0.9999528016945217	WITHOUT_CLASSIFICATION	4.7198305478324695E-5	IMPLEMENTATION
if there is no property-ref assume the join is to the subclass table (ie. the table of the subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999990718793279	WITHOUT_CLASSIFICATION	9.28120672053025E-7	IMPLEMENTATION
handle a property-ref	WITHOUT_CLASSIFICATION	0.9998651908855827	WITHOUT_CLASSIFICATION	1.3480911441731512E-4	IMPLEMENTATION
nativesqlqueryreturn	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.999917125627956	WITHOUT_CLASSIFICATION	8.287437204391218E-5	IMPLEMENTATION
why is all others non final ?	WITHOUT_CLASSIFICATION	0.9991264311756566	WITHOUT_CLASSIFICATION	8.735688243433691E-4	IMPLEMENTATION
this.forcecacherefresh = forcecacherefresh	WITHOUT_CLASSIFICATION	0.9998389885152281	WITHOUT_CLASSIFICATION	1.6101148477183535E-4	IMPLEMENTATION
hella important optimization!!!	WITHOUT_CLASSIFICATION	0.9998927478880316	WITHOUT_CLASSIFICATION	1.0725211196835228E-4	IMPLEMENTATION
return that.type.equals(type) && equalshelper.equals(that.value value)	WITHOUT_CLASSIFICATION	0.9999569849641219	WITHOUT_CLASSIFICATION	4.301503587813312E-5	IMPLEMENTATION
must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999235042036815	WITHOUT_CLASSIFICATION	7.649579631850867E-5	IMPLEMENTATION
take a snapshot	WITHOUT_CLASSIFICATION	0.9999667896611522	WITHOUT_CLASSIFICATION	3.3210338847892245E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9997648297603308	WITHOUT_CLASSIFICATION	2.3517023966910735E-4	IMPLEMENTATION
the owning entity may have been deleted and its identifier unset due to identifier-rollback in which case try to look up its identifier from the persistence context	WITHOUT_CLASSIFICATION	0.9991212845032256	WITHOUT_CLASSIFICATION	8.787154967744362E-4	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9998023323548073	WITHOUT_CLASSIFICATION	1.976676451928236E-4	IMPLEMENTATION
we've been here before	WITHOUT_CLASSIFICATION	0.9998813961989691	WITHOUT_CLASSIFICATION	1.186038010308804E-4	IMPLEMENTATION
it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999986191346323	WITHOUT_CLASSIFICATION	1.3808653677439527E-6	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9998023323548073	WITHOUT_CLASSIFICATION	1.976676451928236E-4	IMPLEMENTATION
if either its role changed	WITHOUT_CLASSIFICATION	0.9999995442353866	WITHOUT_CLASSIFICATION	4.5576461334286216E-7	IMPLEMENTATION
or its key changed	WITHOUT_CLASSIFICATION	0.9999955906677935	WITHOUT_CLASSIFICATION	4.409332206472335E-6	IMPLEMENTATION
we will need to create new entries	WITHOUT_CLASSIFICATION	0.9998557046028104	WITHOUT_CLASSIFICATION	1.44295397189652E-4	IMPLEMENTATION
we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9998308058347546	WITHOUT_CLASSIFICATION	1.691941652453519E-4	IMPLEMENTATION
force initialize!	WITHOUT_CLASSIFICATION	0.999698392914095	WITHOUT_CLASSIFICATION	3.0160708590497835E-4	IMPLEMENTATION
else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999984226424318	WITHOUT_CLASSIFICATION	1.5773575682924717E-6	IMPLEMENTATION
attributes maintained between flush cycles	WITHOUT_CLASSIFICATION	0.9998439874177355	WITHOUT_CLASSIFICATION	1.5601258226451416E-4	IMPLEMENTATION
session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999754231989539	WITHOUT_CLASSIFICATION	2.457680104613182E-5	IMPLEMENTATION
allow the collectionsnapshot to be serialized	WITHOUT_CLASSIFICATION	0.999920543906511	WITHOUT_CLASSIFICATION	7.945609348894135E-5	IMPLEMENTATION
attributes used only during flush cycle	WITHOUT_CLASSIFICATION	0.9999755591628042	WITHOUT_CLASSIFICATION	2.4440837195741172E-5	IMPLEMENTATION
"current" means the reference that was found during flush()	WITHOUT_CLASSIFICATION	0.9999992838203055	WITHOUT_CLASSIFICATION	7.161796945409125E-7	IMPLEMENTATION
"loaded" means the reference that is consistent with the current database state	WITHOUT_CLASSIFICATION	0.9999786610538283	WITHOUT_CLASSIFICATION	2.133894617173896E-5	IMPLEMENTATION
during flush we navigate the object graph to collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9997238911464336	WITHOUT_CLASSIFICATION	2.761088535664945E-4	IMPLEMENTATION
if we instantiate a collection during the flush() process we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.999999253141556	WITHOUT_CLASSIFICATION	7.468584439438417E-7	IMPLEMENTATION
new collections that get found + wrapped during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9974517757062761	WITHOUT_CLASSIFICATION	0.002548224293723984	IMPLEMENTATION
a newly wrapped collection is not dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9959057823226887	WITHOUT_CLASSIFICATION	0.0040942176773113076	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.9999587380234353	WITHOUT_CLASSIFICATION	4.1261976564804205E-5	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.9999587380234353	WITHOUT_CLASSIFICATION	4.1261976564804205E-5	IMPLEMENTATION
detached collections that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9963932252922526	WITHOUT_CLASSIFICATION	0.003606774707747498	IMPLEMENTATION
optimization	WITHOUT_CLASSIFICATION	0.9999592527591517	WITHOUT_CLASSIFICATION	4.074724084840427E-5	IMPLEMENTATION
optimization optimization	WITHOUT_CLASSIFICATION	0.9999712721492396	WITHOUT_CLASSIFICATION	2.8727850760406782E-5	IMPLEMENTATION
re-snapshot	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999508771376817	WITHOUT_CLASSIFICATION	4.9122862318328825E-5	IMPLEMENTATION
note this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9976209330849208	WITHOUT_CLASSIFICATION	0.0023790669150791344	IMPLEMENTATION
memory optimization	WITHOUT_CLASSIFICATION	0.9999293142146197	WITHOUT_CLASSIFICATION	7.068578538032647E-5	IMPLEMENTATION
use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9998664300050527	WITHOUT_CLASSIFICATION	1.3356999494723237E-4	IMPLEMENTATION
copied from session	WITHOUT_CLASSIFICATION	0.9999288317618711	WITHOUT_CLASSIFICATION	7.11682381288528E-5	IMPLEMENTATION
this should not happen since the dtd prevents it	WITHOUT_CLASSIFICATION	0.9976332013353714	WITHOUT_CLASSIFICATION	0.0023667986646286367	IMPLEMENTATION
joinprocessor needs to know if the where clause fragment came from a dynamic filter or not so it can put the where clause fragment in the right place in the sql ast. 'hasfiltercondition' keeps track of that fact.	WITHOUT_CLASSIFICATION	0.7510397337464858	WITHOUT_CLASSIFICATION	0.24896026625351425	IMPLEMENTATION
the current join represents the join between a many-to-many association table and its "target" table. here we need to apply any additional filters defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.998951821952573	WITHOUT_CLASSIFICATION	0.0010481780474270324	IMPLEMENTATION
check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9982491111625349	WITHOUT_CLASSIFICATION	0.0017508888374650033	IMPLEMENTATION
values is not null and is checkable we'll look deeper	WITHOUT_CLASSIFICATION	0.999826116980649	WITHOUT_CLASSIFICATION	1.738830193508778E-4	IMPLEMENTATION
for non null args check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999481145212407	WITHOUT_CLASSIFICATION	5.188547875932705E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9999471747610161	WITHOUT_CLASSIFICATION	5.2825238983867685E-5	IMPLEMENTATION
persistent collections may have components	WITHOUT_CLASSIFICATION	0.9996940571133424	WITHOUT_CLASSIFICATION	3.0594288665760424E-4	IMPLEMENTATION
check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999951841112933	WITHOUT_CLASSIFICATION	4.8158887066997545E-6	IMPLEMENTATION
will check current level if some of them are not null or sublevels if they exist	WITHOUT_CLASSIFICATION	0.999149378467145	WITHOUT_CLASSIFICATION	8.50621532854901E-4	IMPLEMENTATION
do the test	WITHOUT_CLASSIFICATION	0.9999881279098414	WITHOUT_CLASSIFICATION	1.1872090158603796E-5	IMPLEMENTATION
if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999973704869799	WITHOUT_CLASSIFICATION	2.629513020019625E-6	IMPLEMENTATION
unwrap it	WITHOUT_CLASSIFICATION	0.9999838215905439	WITHOUT_CLASSIFICATION	1.6178409456087515E-5	IMPLEMENTATION
see if the entity is already bound to this session if not look at the entity identifier and assume that the entity is persistent if the id is not "unsaved" (that is we rely on foreign keys to keep database integrity)	WITHOUT_CLASSIFICATION	0.9959369279372212	WITHOUT_CLASSIFICATION	0.004063072062778731	IMPLEMENTATION
an unfetched association can only point to an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999968704628899	WITHOUT_CLASSIFICATION	3.129537110070605E-6	IMPLEMENTATION
let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999738043448956	WITHOUT_CLASSIFICATION	2.6195655104360582E-5	IMPLEMENTATION
let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999557512605702	WITHOUT_CLASSIFICATION	4.4248739429793634E-5	IMPLEMENTATION
we use the assumed value if there is one to avoid hitting the database	WITHOUT_CLASSIFICATION	0.999986270815497	WITHOUT_CLASSIFICATION	1.3729184503154801E-5	IMPLEMENTATION
hit the database after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999354278473613	WITHOUT_CLASSIFICATION	6.457215263870871E-5	IMPLEMENTATION
context-entity-identifier returns null explicitly if the entity is not associated with the persistence context so make some deeper checks	WITHOUT_CLASSIFICATION	0.9941782806396641	WITHOUT_CLASSIFICATION	0.0058217193603358405	IMPLEMENTATION
int count = 0	WITHOUT_CLASSIFICATION	0.9999792812368128	WITHOUT_CLASSIFICATION	2.0718763187180205E-5	IMPLEMENTATION
the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999250542717958	WITHOUT_CLASSIFICATION	7.494572820425485E-5	IMPLEMENTATION
checkforend = false	WITHOUT_CLASSIFICATION	0.9998872497541714	WITHOUT_CLASSIFICATION	1.1275024582861253E-4	IMPLEMENTATION
count++	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999707798247234	WITHOUT_CLASSIFICATION	2.92201752766319E-5	IMPLEMENTATION
we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999858536928637	WITHOUT_CLASSIFICATION	1.41463071362192E-5	IMPLEMENTATION
first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999997928056248	WITHOUT_CLASSIFICATION	2.071943751619362E-7	IMPLEMENTATION
the first id found after the given id	WITHOUT_CLASSIFICATION	0.9996051458938472	WITHOUT_CLASSIFICATION	3.9485410615273204E-4	IMPLEMENTATION
we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999833231053208	WITHOUT_CLASSIFICATION	1.6676894679197953E-5	IMPLEMENTATION
look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.999979998700035	WITHOUT_CLASSIFICATION	2.0001299965023605E-5	IMPLEMENTATION
ignore this row of results! note the early exit	WITHOUT_CLASSIFICATION	0.9999840733027947	WITHOUT_CLASSIFICATION	1.5926697205237987E-5	IMPLEMENTATION
initialize this collection	WITHOUT_CLASSIFICATION	0.9998950419912682	WITHOUT_CLASSIFICATION	1.0495800873179855E-4	IMPLEMENTATION
create one	WITHOUT_CLASSIFICATION	0.9999841623519744	WITHOUT_CLASSIFICATION	1.5837648025561046E-5	IMPLEMENTATION
warning can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999795506968925	WITHOUT_CLASSIFICATION	2.044930310752881E-5	IMPLEMENTATION
there were no queued additions and the role has a cache	WITHOUT_CLASSIFICATION	0.9999971234994416	WITHOUT_CLASSIFICATION	2.8765005584193694E-6	IMPLEMENTATION
and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9984617084710283	WITHOUT_CLASSIFICATION	0.001538291528971702	IMPLEMENTATION
some filters affecting the collection are enabled on the session so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.8970433680663699	WITHOUT_CLASSIFICATION	0.10295663193363008	IMPLEMENTATION
cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999721491110354	WITHOUT_CLASSIFICATION	2.785088896471131E-5	IMPLEMENTATION
loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997935131051294	WITHOUT_CLASSIFICATION	2.064868948705788E-4	IMPLEMENTATION
collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998538308457113	WITHOUT_CLASSIFICATION	1.4616915428864856E-4	IMPLEMENTATION
simple cache of param metadata based on query string. ideally the original "user-supplied query" string should be used to retreive this metadata (i.e. not the para-list-expanded query string) to avoid unnecessary cache entries. used solely for caching param metadata for native-sql queries see getsqlparametermetadata() for a discussion as to why	WITHOUT_CLASSIFICATION	0.9996489448247966	WITHOUT_CLASSIFICATION	3.510551752034002E-4	IMPLEMENTATION
the cache of the actual plans	WITHOUT_CLASSIFICATION	0.9999765055851986	WITHOUT_CLASSIFICATION	2.3494414801332912E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999672053460105	WITHOUT_CLASSIFICATION	3.2794653989501576E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999672053460105	WITHOUT_CLASSIFICATION	3.2794653989501576E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.999981788449717	WITHOUT_CLASSIFICATION	1.821155028304244E-5	IMPLEMENTATION
for native-sql queries the param metadata is determined outside any relation to a query plan because query plan creation and/or retreival for a native-sql query depends on all of the return types having been set which might not be the case up-front when param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9964080677393685	WITHOUT_CLASSIFICATION	0.0035919322606315146	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999650571862105	WITHOUT_CLASSIFICATION	3.494281378957525E-5	IMPLEMENTATION
recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028646431873	WITHOUT_CLASSIFICATION	9.713535681265945E-5	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999650571862105	WITHOUT_CLASSIFICATION	3.494281378957525E-5	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999833265688897	WITHOUT_CLASSIFICATION	1.6673431110400845E-5	IMPLEMENTATION
break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999954515330534	WITHOUT_CLASSIFICATION	4.548466946606378E-6	IMPLEMENTATION
named parameter	WITHOUT_CLASSIFICATION	0.9999765302423674	WITHOUT_CLASSIFICATION	2.3469757632543042E-5	IMPLEMENTATION
could be either an ordinal or jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999990483249345	WITHOUT_CLASSIFICATION	9.516750655878589E-7	IMPLEMENTATION
a peek ahead showed this as an jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999903235953403	WITHOUT_CLASSIFICATION	9.676404659589283E-6	IMPLEMENTATION
make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999874225910026	WITHOUT_CLASSIFICATION	1.2577408997328662E-5	IMPLEMENTATION
pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999079760172376	WITHOUT_CLASSIFICATION	9.2023982762464E-5	IMPLEMENTATION
perform the actual work	WITHOUT_CLASSIFICATION	0.9998893641682668	WITHOUT_CLASSIFICATION	1.1063583173322753E-4	IMPLEMENTATION
if everything went ok commit the transaction and close the obtained connection handle	WITHOUT_CLASSIFICATION	0.9980470915794093	WITHOUT_CLASSIFICATION	0.0019529084205905953	IMPLEMENTATION
at some point the processing went bad so we need to 1) make sure the connection handle gets released 2) try to cleanup the jta context as much as possible	WITHOUT_CLASSIFICATION	0.929656628725397	WITHOUT_CLASSIFICATION	0.07034337127460295	IMPLEMENTATION
finally handle the exception	WITHOUT_CLASSIFICATION	0.9999574501925848	WITHOUT_CLASSIFICATION	4.254980741516472E-5	IMPLEMENTATION
a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.999030379899917	WITHOUT_CLASSIFICATION	9.696201000829292E-4	IMPLEMENTATION
saveorupdatecopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999629363733411	WITHOUT_CLASSIFICATION	3.706362665891372E-5	IMPLEMENTATION
collectionpersister should not be null but we don't want to throw an exception if it is null	WITHOUT_CLASSIFICATION	0.9999971152890146	WITHOUT_CLASSIFICATION	2.884710985434633E-6	IMPLEMENTATION
otherwise a null or brand new collection this will also (inefficiently) handle arrays which have no snapshot so we can't do any better processarrayornewcollection(collection type)	WITHOUT_CLASSIFICATION	0.9762823957699145	WITHOUT_CLASSIFICATION	0.023717604230085558	IMPLEMENTATION
a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9992537260458298	WITHOUT_CLASSIFICATION	7.462739541702929E-4	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999954691120736	WITHOUT_CLASSIFICATION	4.530887926454603E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999954691120736	WITHOUT_CLASSIFICATION	4.530887926454603E-6	IMPLEMENTATION
force a substitution!	WITHOUT_CLASSIFICATION	0.9998590291111387	WITHOUT_CLASSIFICATION	1.4097088886133732E-4	IMPLEMENTATION
the user requested a "greater" (i.e. more restrictive) form of pessimistic lock	WITHOUT_CLASSIFICATION	0.9998938623158807	WITHOUT_CLASSIFICATION	1.0613768411924018E-4	IMPLEMENTATION
the database now holds a lock + the object is flushed from the cache so release the soft lock	WITHOUT_CLASSIFICATION	0.9999991533363826	WITHOUT_CLASSIFICATION	8.466636174135358E-7	IMPLEMENTATION
now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999990279841852	WITHOUT_CLASSIFICATION	9.72015814897727E-7	IMPLEMENTATION
search for collections by reachability updating their role. we don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999734524339322	WITHOUT_CLASSIFICATION	2.6547566067711024E-5	IMPLEMENTATION
this is a situation where the entity id is assigned by a post-insert generator and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999946660398257	WITHOUT_CLASSIFICATION	5.3339601743544425E-6	IMPLEMENTATION
note we need to do the wrap here even if its not "dirty" because collections need wrapping but changes to _them_ don't dirty the container. also for versioned data we need to wrap before calling searchfordirtycollections	WITHOUT_CLASSIFICATION	0.999525676966932	WITHOUT_CLASSIFICATION	4.743230330679728E-4	IMPLEMENTATION
grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999996639770043	WITHOUT_CLASSIFICATION	3.360229956412064E-7	IMPLEMENTATION
grab its current state	WITHOUT_CLASSIFICATION	0.9999783157132279	WITHOUT_CLASSIFICATION	2.1684286772100445E-5	IMPLEMENTATION
schedule the update note that we intentionally do _not_ pass in currentpersistentstate!	WITHOUT_CLASSIFICATION	0.9999899041503147	WITHOUT_CLASSIFICATION	1.0095849685290444E-5	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999957490368842	WITHOUT_CLASSIFICATION	4.25096311582624E-6	IMPLEMENTATION
give the interceptor a chance to process property values if the properties were modified by the interceptor we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999946353517517	WITHOUT_CLASSIFICATION	5.364648248405886E-6	IMPLEMENTATION
compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999561472064514	WITHOUT_CLASSIFICATION	4.385279354867021E-5	IMPLEMENTATION
if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999995330407365	WITHOUT_CLASSIFICATION	4.6695926343270585E-7	IMPLEMENTATION
increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9986560768492854	WITHOUT_CLASSIFICATION	0.0013439231507146221	IMPLEMENTATION
check nullability but do not perform command execute we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9995694830506151	WITHOUT_CLASSIFICATION	4.305169493849819E-4	IMPLEMENTATION
give the interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999961140997622	WITHOUT_CLASSIFICATION	3.885900237780232E-6	IMPLEMENTATION
now we might need to recalculate the dirtyproperties array	WITHOUT_CLASSIFICATION	0.9994525173548227	WITHOUT_CLASSIFICATION	5.474826451773268E-4	IMPLEMENTATION
use the current version	WITHOUT_CLASSIFICATION	0.9997973393254466	WITHOUT_CLASSIFICATION	2.026606745533771E-4	IMPLEMENTATION
interceptor returned null so do the dirtycheck ourself if possible	WITHOUT_CLASSIFICATION	0.9999957724999322	WITHOUT_CLASSIFICATION	4.227500067855229E-6	IMPLEMENTATION
object loaded by update()	WITHOUT_CLASSIFICATION	0.999997804496012	WITHOUT_CLASSIFICATION	2.1955039880297466E-6	IMPLEMENTATION
dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9988932030633503	WITHOUT_CLASSIFICATION	0.0011067969366496658	IMPLEMENTATION
dirty check against the database snapshot if possible/necessary	WITHOUT_CLASSIFICATION	0.999388716727227	WITHOUT_CLASSIFICATION	6.112832727729867E-4	IMPLEMENTATION
the interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9998695585551796	WITHOUT_CLASSIFICATION	1.304414448204997E-4	IMPLEMENTATION
even process null collections	WITHOUT_CLASSIFICATION	0.9999923175856217	WITHOUT_CLASSIFICATION	7.682414378338497E-6	IMPLEMENTATION
get the id from the object	WITHOUT_CLASSIFICATION	0.9999983705323434	WITHOUT_CLASSIFICATION	1.6294676565711702E-6	IMPLEMENTATION
always do an insert and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999898090527829	WITHOUT_CLASSIFICATION	1.019094721706166E-5	IMPLEMENTATION
what is the version on the database?	WITHOUT_CLASSIFICATION	0.9972998002066336	WITHOUT_CLASSIFICATION	0.0027001997933664974	IMPLEMENTATION
/ hhh-2378	WITHOUT_CLASSIFICATION	0.9999931730165523	WITHOUT_CLASSIFICATION	6.8269834476890814E-6	IMPLEMENTATION
will result in a sql update	WITHOUT_CLASSIFICATION	0.9999999477312108	WITHOUT_CLASSIFICATION	5.226878917219486E-8	IMPLEMENTATION
else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999734935067285	WITHOUT_CLASSIFICATION	2.650649327156487E-5	IMPLEMENTATION
no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999981607074881	WITHOUT_CLASSIFICATION	1.839292511839477E-6	IMPLEMENTATION
refresh() does not pass an entityname	WITHOUT_CLASSIFICATION	0.9998880506886982	WITHOUT_CLASSIFICATION	1.1194931130174326E-4	IMPLEMENTATION
do not return a proxy! (this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9932428373389324	WITHOUT_CLASSIFICATION	0.006757162661067641	IMPLEMENTATION
return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999768313751162	WITHOUT_CLASSIFICATION	2.316862488380656E-5	IMPLEMENTATION
return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999961788572084	WITHOUT_CLASSIFICATION	3.821142791607539E-6	IMPLEMENTATION
return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999856186182773	WITHOUT_CLASSIFICATION	1.4381381722774331E-5	IMPLEMENTATION
this object was already loaded	WITHOUT_CLASSIFICATION	0.9999995677747027	WITHOUT_CLASSIFICATION	4.322252973588793E-7	IMPLEMENTATION
entity was found in second-level cache	WITHOUT_CLASSIFICATION	0.9999987774085966	WITHOUT_CLASSIFICATION	1.2225914033679623E-6	IMPLEMENTATION
make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9990920368882354	WITHOUT_CLASSIFICATION	9.079631117645335E-4	IMPLEMENTATION
intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999804972299341	WITHOUT_CLASSIFICATION	1.9502770065833427E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pre-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999166555678672	WITHOUT_CLASSIFICATION	8.334443213272696E-5	IMPLEMENTATION
some statistics	WITHOUT_CLASSIFICATION	0.9997784487888067	WITHOUT_CLASSIFICATION	2.2155121119317916E-4	IMPLEMENTATION
safe from concurrent modification because of how entrylist() is implemented on identitymap	WITHOUT_CLASSIFICATION	0.952698714368748	WITHOUT_CLASSIFICATION	0.0473012856312521	IMPLEMENTATION
initialize dirty flags for arrays + collections with composite elements and reset reached doupdate etc.	WITHOUT_CLASSIFICATION	0.998553789647557	WITHOUT_CLASSIFICATION	0.0014462103524430334	IMPLEMENTATION
among other things updatereachables() will recursively load all collections that are moving roles. this might cause entities to be loaded.	WITHOUT_CLASSIFICATION	0.9999231481035842	WITHOUT_CLASSIFICATION	7.685189641580057E-5	IMPLEMENTATION
so this needs to be safe from concurrent modification problems. it is safe because of how identitymap implements entryset()	WITHOUT_CLASSIFICATION	0.999973248688896	WITHOUT_CLASSIFICATION	2.675131110408246E-5	IMPLEMENTATION
update the status of the object and if necessary schedule an update	WITHOUT_CLASSIFICATION	0.9999998944124183	WITHOUT_CLASSIFICATION	1.0558758158454431E-7	IMPLEMENTATION
schedule updates to collections	WITHOUT_CLASSIFICATION	0.9998647756933418	WITHOUT_CLASSIFICATION	1.352243066581935E-4	IMPLEMENTATION
we need to lock the collection caches before executing entity inserts/updates in order to account for bidi associations	WITHOUT_CLASSIFICATION	0.999969409350188	WITHOUT_CLASSIFICATION	3.0590649812083676E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ post-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999166555678672	WITHOUT_CLASSIFICATION	8.334443213272696E-5	IMPLEMENTATION
the database has changed now so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.999982999682153	WITHOUT_CLASSIFICATION	1.7000317846998402E-5	IMPLEMENTATION
if the collection is dereferenced remove from the session cache iter.remove() does not work since the entryset is not backed by the set	WITHOUT_CLASSIFICATION	0.9999955614266357	WITHOUT_CLASSIFICATION	4.4385733642348235E-6	IMPLEMENTATION
otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9983224165127939	WITHOUT_CLASSIFICATION	0.0016775834872061934	IMPLEMENTATION
get a snapshot	WITHOUT_CLASSIFICATION	0.9999905818745433	WITHOUT_CLASSIFICATION	9.418125456727279E-6	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999415401443377	WITHOUT_CLASSIFICATION	5.845985566225776E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999415401443377	WITHOUT_CLASSIFICATION	5.845985566225776E-5	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999988789011526	WITHOUT_CLASSIFICATION	1.1210988474350898E-6	IMPLEMENTATION
early exit!!!	WITHOUT_CLASSIFICATION	0.9999678270911304	WITHOUT_CLASSIFICATION	3.2172908869645454E-5	IMPLEMENTATION
ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999984956435432	WITHOUT_CLASSIFICATION	1.5043564568543252E-6	IMPLEMENTATION
before any callbacks etc so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.999999769699537	WITHOUT_CLASSIFICATION	2.303004630660557E-7	IMPLEMENTATION
ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9992123454404338	WITHOUT_CLASSIFICATION	7.876545595661818E-4	IMPLEMENTATION
typefactory.deepcopy( currentstate proptypes persister.getpropertyupdateability() deletedstate session )	WITHOUT_CLASSIFICATION	0.9996652980742797	WITHOUT_CLASSIFICATION	3.347019257202271E-4	IMPLEMENTATION
cascade-delete to collections before the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9998159272365617	WITHOUT_CLASSIFICATION	1.8407276343839754E-4	IMPLEMENTATION
cascade-delete to many-to-one after the parent was deleted	WITHOUT_CLASSIFICATION	0.9999699912312912	WITHOUT_CLASSIFICATION	3.0008768708834256E-5	IMPLEMENTATION
if it is an initialized proxy let cascade handle it later on	WITHOUT_CLASSIFICATION	0.9999715770725065	WITHOUT_CLASSIFICATION	2.8422927493480327E-5	IMPLEMENTATION
assign the requested id to the proxy before reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999022842760105	WITHOUT_CLASSIFICATION	9.771572398951037E-5	IMPLEMENTATION
an uninitialized proxy noop don't even need to return an id since it is never a save()	WITHOUT_CLASSIFICATION	0.9995051603001761	WITHOUT_CLASSIFICATION	4.94839699823988E-4	IMPLEMENTATION
initialize properties of the event	WITHOUT_CLASSIFICATION	0.9999704571714997	WITHOUT_CLASSIFICATION	2.9542828500356248E-5	IMPLEMENTATION
return the id in the event object	WITHOUT_CLASSIFICATION	0.9999969299369175	WITHOUT_CLASSIFICATION	3.0700630825604683E-6	IMPLEMENTATION
transient or deleted	WITHOUT_CLASSIFICATION	0.9997552838913212	WITHOUT_CLASSIFICATION	2.447161086788683E-4	IMPLEMENTATION
use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9998364895552305	WITHOUT_CLASSIFICATION	1.6351044476939299E-4	IMPLEMENTATION
assume this is a newly instantiated transient object which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999573185185632	WITHOUT_CLASSIFICATION	4.268148143682425E-5	IMPLEMENTATION
this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.999968656077914	WITHOUT_CLASSIFICATION	3.134392208598907E-5	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.996916984838606	WITHOUT_CLASSIFICATION	0.003083015161393903	IMPLEMENTATION
cachedstate	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
assume true since we don't really know and it doesn't matter	WITHOUT_CLASSIFICATION	0.9998564523030413	WITHOUT_CLASSIFICATION	1.435476969587015E-4	IMPLEMENTATION
a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999726489200591	WITHOUT_CLASSIFICATION	2.735107994083552E-5	IMPLEMENTATION
if the collection belonged to a different entity clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999855421744834	WITHOUT_CLASSIFICATION	1.4457825516477698E-5	IMPLEMENTATION
log.debug( "calling onload()" )	WITHOUT_CLASSIFICATION	0.999873606476193	WITHOUT_CLASSIFICATION	1.2639352380700602E-4	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999847536406584	WITHOUT_CLASSIFICATION	1.5246359341646606E-5	IMPLEMENTATION
note performexecutions() clears all collectionxxxxtion collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999018876242125	WITHOUT_CLASSIFICATION	9.811237578746575E-5	IMPLEMENTATION
if no array holder we found an unwrappered array (this can't occur because we now always call wrap() before getting to here) return (ah==null) ? true searchfordirtycollections(ah type)	WITHOUT_CLASSIFICATION	0.9999996866292443	WITHOUT_CLASSIFICATION	3.133707556669814E-7	IMPLEMENTATION
if not wrappered yet its dirty (this can't occur because we now always call wrap() before getting to here) return ( ! (obj instanceof persistentcollection) ) ? true searchfordirtycollections( (persistentcollection) obj type )	WITHOUT_CLASSIFICATION	0.9946014863255285	WITHOUT_CLASSIFICATION	0.005398513674471546	IMPLEMENTATION
we need to check even if it was not initialized because of delayed adds!	WITHOUT_CLASSIFICATION	0.9993933759456749	WITHOUT_CLASSIFICATION	6.066240543250639E-4	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999859299150774	WITHOUT_CLASSIFICATION	1.4070084922667056E-5	IMPLEMENTATION
find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9997315744485334	WITHOUT_CLASSIFICATION	2.684255514666584E-4	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999847536406584	WITHOUT_CLASSIFICATION	1.5246359341646606E-5	IMPLEMENTATION
check the persistence context for an entry relating to this entity to be merged	WITHOUT_CLASSIFICATION	0.9999308754631754	WITHOUT_CLASSIFICATION	6.912453682465104E-5	IMPLEMENTATION
we have specialized case of a detached entity from the perspective of the merge operation. specifically we have an incoming entity instance which has a corresponding entry in the current persistence context but registered under a different entity instance	WITHOUT_CLASSIFICATION	0.9999999821660409	WITHOUT_CLASSIFICATION	1.7833959076457084E-8	IMPLEMENTATION
deleted	WITHOUT_CLASSIFICATION	0.9998788785984118	WITHOUT_CLASSIFICATION	1.2112140158812688E-4	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999649073027221	WITHOUT_CLASSIFICATION	3.5092697277858285E-5	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy cascadeonmerge(event persister entity copycache cascades.cascade_before_merge)	WITHOUT_CLASSIFICATION	0.9999996356978391	WITHOUT_CLASSIFICATION	3.6430216079736934E-7	IMPLEMENTATION
this bit is only really absolutely necessary for handling requestedid but is also good if we merge multiple object graphs since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999997198359972	WITHOUT_CLASSIFICATION	2.8016400272444785E-7	IMPLEMENTATION
continue we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9994850443512333	WITHOUT_CLASSIFICATION	5.149556487667779E-4	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999997842265509	WITHOUT_CLASSIFICATION	2.1577344921707585E-7	IMPLEMENTATION
check that entity id = requestedid	WITHOUT_CLASSIFICATION	0.9821570521273952	WITHOUT_CLASSIFICATION	0.017842947872604858	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999649073027221	WITHOUT_CLASSIFICATION	3.5092697277858285E-5	IMPLEMENTATION
we got here because we assumed that an instance with an assigned id was detached when it was really persistent	WITHOUT_CLASSIFICATION	0.9999973145129423	WITHOUT_CLASSIFICATION	2.6854870577572787E-6	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999997842265509	WITHOUT_CLASSIFICATION	2.1577344921707585E-7	IMPLEMENTATION
copyvalues works by reflection so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999415391151094	WITHOUT_CLASSIFICATION	5.846088489063164E-5	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999906346434781	WITHOUT_CLASSIFICATION	9.365356521917124E-6	IMPLEMENTATION
source.getbatcher().executebatch() found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.996712139839734	WITHOUT_CLASSIFICATION	0.003287860160266104	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999957490368842	WITHOUT_CLASSIFICATION	4.25096311582624E-6	IMPLEMENTATION
now done in entityidentityinsertaction persister.setidentifier( entity id source.getentitymode() )	WITHOUT_CLASSIFICATION	0.9997486261525043	WITHOUT_CLASSIFICATION	2.513738474957305E-4	IMPLEMENTATION
source.getpersistencecontext().removenonexist( new entitykey( id persister source.getentitymode() ) )	WITHOUT_CLASSIFICATION	0.999181025590332	WITHOUT_CLASSIFICATION	8.189744096679856E-4	IMPLEMENTATION
keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999991048730731	WITHOUT_CLASSIFICATION	8.951269268966291E-7	IMPLEMENTATION
cascade-save to many-to-one before the parent is saved	WITHOUT_CLASSIFICATION	0.999982060977018	WITHOUT_CLASSIFICATION	1.7939022981997814E-5	IMPLEMENTATION
pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.999999867035858	WITHOUT_CLASSIFICATION	1.329641420258144E-7	IMPLEMENTATION
the object is persistent	WITHOUT_CLASSIFICATION	0.9999975347585964	WITHOUT_CLASSIFICATION	2.4652414036746127E-6	IMPLEMENTATION
the entity is associated with the session so check its status	WITHOUT_CLASSIFICATION	0.9997977713234201	WITHOUT_CLASSIFICATION	2.0222867657987054E-4	IMPLEMENTATION
do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999937934351578	WITHOUT_CLASSIFICATION	6.2065648421510465E-6	IMPLEMENTATION
ie. e.status==deleted	WITHOUT_CLASSIFICATION	0.9999587380234353	WITHOUT_CLASSIFICATION	4.1261976564804205E-5	IMPLEMENTATION
the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999963646038356	WITHOUT_CLASSIFICATION	3.6353961643411146E-6	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999859299150774	WITHOUT_CLASSIFICATION	1.4070084922667056E-5	IMPLEMENTATION
private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999899906781691	WITHOUT_CLASSIFICATION	1.0009321831003604E-5	IMPLEMENTATION
first try to find a matching constructor accepting a violatedconstraintnameextracter param	WITHOUT_CLASSIFICATION	0.9995501575835185	WITHOUT_CLASSIFICATION	4.4984241648147246E-4	IMPLEMENTATION
eat it and try next	WITHOUT_CLASSIFICATION	0.9998582829227682	WITHOUT_CLASSIFICATION	1.4171707723165567E-4	IMPLEMENTATION
otherwise try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.997682898886257	WITHOUT_CLASSIFICATION	0.0023171011137429203	IMPLEMENTATION
oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999772910687388	WITHOUT_CLASSIFICATION	2.2708931261196982E-5	IMPLEMENTATION
collectionpropertymapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9998454100145888	WITHOUT_CLASSIFICATION	1.5458998541113863E-4	IMPLEMENTATION
remove initial " "	WITHOUT_CLASSIFICATION	0.9999956818133463	WITHOUT_CLASSIFICATION	4.3181866537571824E-6	IMPLEMENTATION
remove initial " and "	WITHOUT_CLASSIFICATION	0.9999963329534036	WITHOUT_CLASSIFICATION	3.6670465962798294E-6	IMPLEMENTATION
beforeclasstokens.add("new") definitely don't have this!!	WITHOUT_CLASSIFICATION	0.9997790120335582	WITHOUT_CLASSIFICATION	2.209879664418841E-4	IMPLEMENTATION
notafterclasstokens.add("")	WITHOUT_CLASSIFICATION	0.9999587380234353	WITHOUT_CLASSIFICATION	4.1261976564804205E-5	IMPLEMENTATION
just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9998557731334479	WITHOUT_CLASSIFICATION	1.442268665521925E-4	IMPLEMENTATION
update last non-whitespace token if necessary	WITHOUT_CLASSIFICATION	0.9999970316243	WITHOUT_CLASSIFICATION	2.9683757001329073E-6	IMPLEMENTATION
select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999924454276738	WITHOUT_CLASSIFICATION	7.554572326143326E-6	IMPLEMENTATION
scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999517326421141	WITHOUT_CLASSIFICATION	4.826735788582378E-5	IMPLEMENTATION
note this!!	WITHOUT_CLASSIFICATION	0.9999459899177999	WITHOUT_CLASSIFICATION	5.4010082200062186E-5	IMPLEMENTATION
error message constants.	WITHOUT_CLASSIFICATION	0.9998609185643133	WITHOUT_CLASSIFICATION	1.390814356866968E-4	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999579666199008	WITHOUT_CLASSIFICATION	4.203338009919677E-4	IMPLEMENTATION
semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9956446417072248	WITHOUT_CLASSIFICATION	0.0043553582927752695	IMPLEMENTATION
handle collection-fiter compilation. important note this is modifying the input (hql) tree not the output tree!	WITHOUT_CLASSIFICATION	0.9947349391448368	WITHOUT_CLASSIFICATION	0.0052650608551632	IMPLEMENTATION
show the modified ast.	WITHOUT_CLASSIFICATION	0.9998520521091974	WITHOUT_CLASSIFICATION	1.4794789080263603E-4	IMPLEMENTATION
create a parameter specification for the collection filter	WITHOUT_CLASSIFICATION	0.9998454451099754	WITHOUT_CLASSIFICATION	1.5455489002456823E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999392749331697	WITHOUT_CLASSIFICATION	6.0725066830194176E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999392749331697	WITHOUT_CLASSIFICATION	6.0725066830194176E-5	IMPLEMENTATION
get the names of the columns used to link between the collection owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999965272193964	WITHOUT_CLASSIFICATION	3.472780603666391E-6	IMPLEMENTATION
the path ast should be a dotnode and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999136488400376	WITHOUT_CLASSIFICATION	8.635115996228592E-5	IMPLEMENTATION
tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999882530822054	WITHOUT_CLASSIFICATION	1.1746917794570377E-5	IMPLEMENTATION
re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9998877343218883	WITHOUT_CLASSIFICATION	1.1226567811162701E-4	IMPLEMENTATION
don't forget to resolve the argument! resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9997650360723689	WITHOUT_CLASSIFICATION	2.3496392763105867E-4	IMPLEMENTATION
resolve everything up to this dot but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999710672435422	WITHOUT_CLASSIFICATION	2.8932756457795106E-5	IMPLEMENTATION
should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999937324739921	WITHOUT_CLASSIFICATION	6.26752600789966E-6	IMPLEMENTATION
was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999996855430516	WITHOUT_CLASSIFICATION	3.144569483703009E-7	IMPLEMENTATION
attach any mapping-defined "order by" fragments	WITHOUT_CLASSIFICATION	0.9999655419391856	WITHOUT_CLASSIFICATION	3.4458060814360696E-5	IMPLEMENTATION
use the explicitly declared select expression determine the return types indicated by each select token	WITHOUT_CLASSIFICATION	0.999989531755652	WITHOUT_CLASSIFICATION	1.0468244348024108E-5	IMPLEMENTATION
after that process the joins. invoke a delegate to do the work as this is farily complex.	WITHOUT_CLASSIFICATION	0.9998091656565926	WITHOUT_CLASSIFICATION	1.9083434340739247E-4	IMPLEMENTATION
make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999900261107795	WITHOUT_CLASSIFICATION	9.973889220450895E-6	IMPLEMENTATION
we need to generate ids as part of this bulk insert. note that this is only supported for sequence-style generators and post-insert-style generators basically only in-db generators	WITHOUT_CLASSIFICATION	0.999989035861871	WITHOUT_CLASSIFICATION	1.0964138128966417E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999392749331697	WITHOUT_CLASSIFICATION	6.0725066830194176E-5	IMPLEMENTATION
we need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.999784796161491	WITHOUT_CLASSIFICATION	2.1520383850896942E-4	IMPLEMENTATION
we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999633327851443	WITHOUT_CLASSIFICATION	3.6667214855745716E-5	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.999872187181652	WITHOUT_CLASSIFICATION	1.2781281834805058E-4	IMPLEMENTATION
generate implicit joins only if necessary.	WITHOUT_CLASSIFICATION	0.9999729961181159	WITHOUT_CLASSIFICATION	2.7003881884079914E-5	IMPLEMENTATION
notify the from element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999983469329841	WITHOUT_CLASSIFICATION	1.6530670160164694E-6	IMPLEMENTATION
turn off includesubclasses on all fromelements.	WITHOUT_CLASSIFICATION	0.9997349597340123	WITHOUT_CLASSIFICATION	2.650402659877873E-4	IMPLEMENTATION
create the node initially with the param name so that it shows appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999947958770773	WITHOUT_CLASSIFICATION	5.204122922728084E-6	IMPLEMENTATION
use the delegate resolve identifiers as from element aliases.	WITHOUT_CLASSIFICATION	0.9999943080039572	WITHOUT_CLASSIFICATION	5.691996042777036E-6	IMPLEMENTATION
select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999938562883257	WITHOUT_CLASSIFICATION	6.1437116742404285E-6	IMPLEMENTATION
no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999604121245045	WITHOUT_CLASSIFICATION	3.9587875495444335E-5	IMPLEMENTATION
make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9996478249416689	WITHOUT_CLASSIFICATION	3.521750583310791E-4	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999579666199008	WITHOUT_CLASSIFICATION	4.203338009919677E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999392749331697	WITHOUT_CLASSIFICATION	6.0725066830194176E-5	IMPLEMENTATION
--commented out by inspection (12/11/04 1056 am) int getwarningcount()	WITHOUT_CLASSIFICATION	0.9999910924016756	WITHOUT_CLASSIFICATION	8.907598324490296E-6	IMPLEMENTATION
alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9994325053268164	WITHOUT_CLASSIFICATION	5.674946731836323E-4	IMPLEMENTATION
switch	WITHOUT_CLASSIFICATION	0.9999855102898623	WITHOUT_CLASSIFICATION	1.4489710137821277E-5	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9996342710176582	WITHOUT_CLASSIFICATION	3.6572898234180675E-4	IMPLEMENTATION
just do the regular thing if you can't find the ctor your ast must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999970963159612	WITHOUT_CLASSIFICATION	2.9036840386998277E-6	IMPLEMENTATION
initialize sql nodes here.	WITHOUT_CLASSIFICATION	0.999945129106842	WITHOUT_CLASSIFICATION	5.487089315792654E-5	IMPLEMENTATION
semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994917495804033	WITHOUT_CLASSIFICATION	5.08250419596564E-4	IMPLEMENTATION
if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999999262947115	WITHOUT_CLASSIFICATION	7.370528854943995E-8	IMPLEMENTATION
this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999984615740029	WITHOUT_CLASSIFICATION	1.5384259971377097E-6	IMPLEMENTATION
--- inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999705272725804	WITHOUT_CLASSIFICATION	2.947272741967083E-5	IMPLEMENTATION
check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9997565140426075	WITHOUT_CLASSIFICATION	2.4348595739249004E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999931730165523	WITHOUT_CLASSIFICATION	6.8269834476890814E-6	IMPLEMENTATION
these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999678558107824	WITHOUT_CLASSIFICATION	3.214418921763396E-5	IMPLEMENTATION
again both should be fromelements	WITHOUT_CLASSIFICATION	0.9998827821074465	WITHOUT_CLASSIFICATION	1.1721789255349883E-4	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999833265688897	WITHOUT_CLASSIFICATION	1.6673431110400845E-5	IMPLEMENTATION
right represents a joins originating from left or both right and left reprersent joins originating from the same fromelement	WITHOUT_CLASSIFICATION	0.9999911808443348	WITHOUT_CLASSIFICATION	8.819155665150832E-6	IMPLEMENTATION
check a set of parent/child nodes in the from-clause tree to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999984868658413	WITHOUT_CLASSIFICATION	1.5131341587117035E-6	IMPLEMENTATION
right represents a joins originating from left	WITHOUT_CLASSIFICATION	0.9999932986401956	WITHOUT_CLASSIFICATION	6.701359804466892E-6	IMPLEMENTATION
all clear	WITHOUT_CLASSIFICATION	0.999986120747703	WITHOUT_CLASSIFICATION	1.3879252297025178E-5	IMPLEMENTATION
ignore the token class name parameter and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999911336508103	WITHOUT_CLASSIFICATION	8.866349189693743E-6	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999544349180679	WITHOUT_CLASSIFICATION	4.55650819320048E-5	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999544349180679	WITHOUT_CLASSIFICATION	4.55650819320048E-5	IMPLEMENTATION
remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9996486413494764	WITHOUT_CLASSIFICATION	3.513586505236114E-4	IMPLEMENTATION
don't care about other param types here just those explicitly user-defined	WITHOUT_CLASSIFICATION	0.9995622918902687	WITHOUT_CLASSIFICATION	4.377081097313795E-4	IMPLEMENTATION
if the query is already compiled skip the compilation.	WITHOUT_CLASSIFICATION	0.9999954092406061	WITHOUT_CLASSIFICATION	4.590759393893921E-6	IMPLEMENTATION
remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9998810729191113	WITHOUT_CLASSIFICATION	1.1892708088874225E-4	IMPLEMENTATION
phase 1 parse the hql into an ast.	WITHOUT_CLASSIFICATION	0.9999946778678827	WITHOUT_CLASSIFICATION	5.3221321173705995E-6	IMPLEMENTATION
phase 2 analyze the hql ast and produce an sql ast.	WITHOUT_CLASSIFICATION	0.9999996997256694	WITHOUT_CLASSIFICATION	3.0027433060076803E-7	IMPLEMENTATION
phase 3 generate the sql.	WITHOUT_CLASSIFICATION	0.9999840507342579	WITHOUT_CLASSIFICATION	1.59492657421097E-5	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9987702255591525	WITHOUT_CLASSIFICATION	0.0012297744408475565	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9987702255591525	WITHOUT_CLASSIFICATION	0.0012297744408475565	IMPLEMENTATION
only needed during compilation phase	WITHOUT_CLASSIFICATION	0.9049658890499487	WITHOUT_CLASSIFICATION	0.09503411095005128	IMPLEMENTATION
transform the tree.	WITHOUT_CLASSIFICATION	0.9999651576681033	WITHOUT_CLASSIFICATION	3.484233189667957E-5	IMPLEMENTATION
parse the query string into an hql ast.	WITHOUT_CLASSIFICATION	0.9999917423964111	WITHOUT_CLASSIFICATION	8.25760358892785E-6	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9999674483103014	WITHOUT_CLASSIFICATION	3.255168969863818E-5	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9999674483103014	WITHOUT_CLASSIFICATION	3.255168969863818E-5	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9999674483103014	WITHOUT_CLASSIFICATION	3.255168969863818E-5	IMPLEMENTATION
note ( max - 1 ) because first is zero-based while max is not	WITHOUT_CLASSIFICATION	0.9996679943780052	WITHOUT_CLASSIFICATION	3.320056219947212E-4	IMPLEMENTATION
-- package local methods for the queryloader delegate --	WITHOUT_CLASSIFICATION	0.9999934490698329	WITHOUT_CLASSIFICATION	6.550930167139625E-6	IMPLEMENTATION
if there are no collection fetches then no further checks are needed	WITHOUT_CLASSIFICATION	0.9827967422369314	WITHOUT_CLASSIFICATION	0.01720325776306867	IMPLEMENTATION
a shallow query is ok (although technically there should be no fetching here)	WITHOUT_CLASSIFICATION	0.9999758314185567	WITHOUT_CLASSIFICATION	2.4168581443293753E-5	IMPLEMENTATION
should be the first but just to be safe	WITHOUT_CLASSIFICATION	0.9999958771737992	WITHOUT_CLASSIFICATION	4.122826200838234E-6	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999392749331697	WITHOUT_CLASSIFICATION	6.0725066830194176E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999392749331697	WITHOUT_CLASSIFICATION	6.0725066830194176E-5	IMPLEMENTATION
impl note allows multiple collection fetches as long as the entire fecthed graph still "points back" to a single root entity for return	WITHOUT_CLASSIFICATION	0.9996104441420677	WITHOUT_CLASSIFICATION	3.895558579322786E-4	IMPLEMENTATION
otherwise we have a non-scalar select with defined collection fetch(es). make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9998151168214191	WITHOUT_CLASSIFICATION	1.8488317858082344E-4	IMPLEMENTATION
this is not strictly true. we actually just need to make sure that it is ordered by root-entity pk and that that order-by comes before any non-root-entity ordering	WITHOUT_CLASSIFICATION	0.9849576932832501	WITHOUT_CLASSIFICATION	0.015042306716749937	IMPLEMENTATION
paramtranslations = new parametertranslationsimpl( collectedparameterspecifications )	WITHOUT_CLASSIFICATION	0.9998072211669424	WITHOUT_CLASSIFICATION	1.927788330575954E-4	IMPLEMENTATION
we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999946574420363	WITHOUT_CLASSIFICATION	5.3425579636233514E-6	IMPLEMENTATION
igndore it	WITHOUT_CLASSIFICATION	0.9999836052066702	WITHOUT_CLASSIFICATION	1.639479332983109E-5	IMPLEMENTATION
we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999983288376418	WITHOUT_CLASSIFICATION	1.6711623582255005E-6	IMPLEMENTATION
[jsd] the fix for hhh-558	WITHOUT_CLASSIFICATION	0.999531599121802	WITHOUT_CLASSIFICATION	4.6840087819805123E-4	IMPLEMENTATION
if the token can tell us if it could be an identifier	WITHOUT_CLASSIFICATION	0.9999981351795484	WITHOUT_CLASSIFICATION	1.8648204516518637E-6	IMPLEMENTATION
and the expected token type was an identifier then	WITHOUT_CLASSIFICATION	0.9999997836251971	WITHOUT_CLASSIFICATION	2.1637480284887845E-7	IMPLEMENTATION
use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999887641797572	WITHOUT_CLASSIFICATION	1.123582024266399E-5	IMPLEMENTATION
add the token to the ast.	WITHOUT_CLASSIFICATION	0.9999344345981293	WITHOUT_CLASSIFICATION	6.5565401870674E-5	IMPLEMENTATION
(not (eq a b) ) => (ne a b)	WITHOUT_CLASSIFICATION	0.9999899858321947	WITHOUT_CLASSIFICATION	1.0014167805441396E-5	IMPLEMENTATION
(not (ne a b) ) => (eq a b)	WITHOUT_CLASSIFICATION	0.9999899858321947	WITHOUT_CLASSIFICATION	1.0014167805441396E-5	IMPLEMENTATION
(not (lt a b) ) => (ge a b)	WITHOUT_CLASSIFICATION	0.9999899858321947	WITHOUT_CLASSIFICATION	1.0014167805441396E-5	IMPLEMENTATION
(not (ge a b) ) => (lt a b)	WITHOUT_CLASSIFICATION	0.9999899858321947	WITHOUT_CLASSIFICATION	1.0014167805441396E-5	IMPLEMENTATION
(not (le a b) ) => (gt a b)	WITHOUT_CLASSIFICATION	0.9999899858321947	WITHOUT_CLASSIFICATION	1.0014167805441396E-5	IMPLEMENTATION
(not (like a b) ) => (not_like a b)	WITHOUT_CLASSIFICATION	0.9999820621294022	WITHOUT_CLASSIFICATION	1.793787059782158E-5	IMPLEMENTATION
(not (not_like a b) ) => (like a b)	WITHOUT_CLASSIFICATION	0.9999820621294022	WITHOUT_CLASSIFICATION	1.793787059782158E-5	IMPLEMENTATION
(not (is_not_null a b) ) => (is_null a b)	WITHOUT_CLASSIFICATION	0.999979456608781	WITHOUT_CLASSIFICATION	2.054339121908231E-5	IMPLEMENTATION
(not (between a b) ) => (not_between a b)	WITHOUT_CLASSIFICATION	0.999979456608781	WITHOUT_CLASSIFICATION	2.054339121908231E-5	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9994282338550403	WITHOUT_CLASSIFICATION	5.717661449596937E-4	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999544349180679	WITHOUT_CLASSIFICATION	4.55650819320048E-5	IMPLEMENTATION
if if otherwise handle the error normally.	WITHOUT_CLASSIFICATION	0.999138421504929	WITHOUT_CLASSIFICATION	8.61578495070809E-4	IMPLEMENTATION
(not (not_between a b) ) => (between a b)	WITHOUT_CLASSIFICATION	0.999979456608781	WITHOUT_CLASSIFICATION	2.054339121908231E-5	IMPLEMENTATION
this can never happen because this rule will always eliminate the child not.case notreturn x.getfirstchild() (not (not x) ) => (x)	WITHOUT_CLASSIFICATION	0.9997910973584954	WITHOUT_CLASSIFICATION	2.089026415046682E-4	IMPLEMENTATION
just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999770120798241	WITHOUT_CLASSIFICATION	2.2987920175814897E-5	IMPLEMENTATION
(eq null b) => (is_null b)	WITHOUT_CLASSIFICATION	0.9999964607864718	WITHOUT_CLASSIFICATION	3.539213528290158E-6	IMPLEMENTATION
(eq a null) => (is_null a)	WITHOUT_CLASSIFICATION	0.9999942085676282	WITHOUT_CLASSIFICATION	5.7914323717807305E-6	IMPLEMENTATION
note because we're using astutil.createparent() the tree must be created from the bottom up. is empty x => (exists (query (select_from (from x) ) ) )	WITHOUT_CLASSIFICATION	0.99999959438075	WITHOUT_CLASSIFICATION	4.056192499141568E-7	IMPLEMENTATION
add not if it's negated.	WITHOUT_CLASSIFICATION	0.9976215349093557	WITHOUT_CLASSIFICATION	0.002378465090644209	IMPLEMENTATION
create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9995475644623875	WITHOUT_CLASSIFICATION	4.5243553761261914E-4	IMPLEMENTATION
case 1 multi token keywords group by and order by the next token ( lt(2) ) should be 'by' otherwise this is just an ident.	WITHOUT_CLASSIFICATION	0.9999893374987148	WITHOUT_CLASSIFICATION	1.0662501285178297E-5	IMPLEMENTATION
case 2 the current token is after from and before '.'.	WITHOUT_CLASSIFICATION	0.9999980673264646	WITHOUT_CLASSIFICATION	1.9326735354873874E-6	IMPLEMENTATION
this handles hhh-354 where there is a strange property name in a where clause. if the lookahead contains a dot then something that isn't an ident	WITHOUT_CLASSIFICATION	0.9999999279398062	WITHOUT_CLASSIFICATION	7.206019391189435E-8	IMPLEMENTATION
see if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999999401347152	WITHOUT_CLASSIFICATION	5.986528474578986E-8	IMPLEMENTATION
set it!	WITHOUT_CLASSIFICATION	0.9999764609123336	WITHOUT_CLASSIFICATION	2.3539087666344415E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999763688219834	WITHOUT_CLASSIFICATION	2.3631178016617243E-5	IMPLEMENTATION
strip the " where "	WITHOUT_CLASSIFICATION	0.9998869188082645	WITHOUT_CLASSIFICATION	1.1308119173549873E-4	IMPLEMENTATION
don't really know all the codes required to adequately decipher returned jdbc exceptions here. simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9604595232112986	WITHOUT_CLASSIFICATION	0.03954047678870137	IMPLEMENTATION
at the very least cleanup the data )	WITHOUT_CLASSIFICATION	0.9999953410827713	WITHOUT_CLASSIFICATION	4.658917228697156E-6	IMPLEMENTATION
first save off the pertinent ids as the return value	WITHOUT_CLASSIFICATION	0.9999949229930507	WITHOUT_CLASSIFICATION	5.077006949301767E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999957139654995	WITHOUT_CLASSIFICATION	4.286034500502853E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999957139654995	WITHOUT_CLASSIFICATION	4.286034500502853E-6	IMPLEMENTATION
start performing the updates	WITHOUT_CLASSIFICATION	0.9999848518360189	WITHOUT_CLASSIFICATION	1.5148163981014785E-5	IMPLEMENTATION
first save off the pertinent ids saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999991975112333	WITHOUT_CLASSIFICATION	8.024887667844394E-7	IMPLEMENTATION
start performing the deletes	WITHOUT_CLASSIFICATION	0.9999840117875334	WITHOUT_CLASSIFICATION	1.598821246655899E-5	IMPLEMENTATION
otherwise everything ok.	WITHOUT_CLASSIFICATION	0.9992349542746259	WITHOUT_CLASSIFICATION	7.650457253739757E-4	IMPLEMENTATION
visit width-first then depth	WITHOUT_CLASSIFICATION	0.9999744902632488	WITHOUT_CLASSIFICATION	2.5509736751188624E-5	IMPLEMENTATION
if the types report logical equivalence return true	WITHOUT_CLASSIFICATION	0.9999762401613295	WITHOUT_CLASSIFICATION	2.3759838670530888E-5	IMPLEMENTATION
otherwise perform a "deep equivalence" check	WITHOUT_CLASSIFICATION	0.993919719348136	WITHOUT_CLASSIFICATION	0.0060802806518639035	IMPLEMENTATION
if there is no where node make one.	WITHOUT_CLASSIFICATION	0.9999674715035012	WITHOUT_CLASSIFICATION	3.252849649877878E-5	IMPLEMENTATION
inject the where after the parent	WITHOUT_CLASSIFICATION	0.9998542369247044	WITHOUT_CLASSIFICATION	1.4576307529556116E-4	IMPLEMENTATION
never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999809077913432	WITHOUT_CLASSIFICATION	1.9092208656833554E-5	IMPLEMENTATION
moved here from selectclause [jsd]	WITHOUT_CLASSIFICATION	0.9999411937353891	WITHOUT_CLASSIFICATION	5.880626461092246E-5	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999931730165523	WITHOUT_CLASSIFICATION	6.8269834476890814E-6	IMPLEMENTATION
use the table fromelement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999768451251254	WITHOUT_CLASSIFICATION	2.315487487468476E-5	IMPLEMENTATION
set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999929247533097	WITHOUT_CLASSIFICATION	7.075246690210036E-6	IMPLEMENTATION
if the uresolved property path isn't set yet just use the property name.	WITHOUT_CLASSIFICATION	0.9999777885101255	WITHOUT_CLASSIFICATION	2.22114898744694E-5	IMPLEMENTATION
the 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999198409769386	WITHOUT_CLASSIFICATION	8.015902306135058E-5	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999996979600847	WITHOUT_CLASSIFICATION	3.0203991520175174E-7	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999996979600847	WITHOUT_CLASSIFICATION	3.0203991520175174E-7	IMPLEMENTATION
if this dot has already been resolved stop now.	WITHOUT_CLASSIFICATION	0.9999904149203219	WITHOUT_CLASSIFICATION	9.58507967798864E-6	IMPLEMENTATION
if there is no data type for this node and we're at the end of the path (top most dot node) then this might be a java constant.	WITHOUT_CLASSIFICATION	0.999999989575086	WITHOUT_CLASSIFICATION	1.0424913976467289E-8	IMPLEMENTATION
the property is a collection	WITHOUT_CLASSIFICATION	0.9999817158055437	WITHOUT_CLASSIFICATION	1.8284194456205034E-5	IMPLEMENTATION
the property is a component	WITHOUT_CLASSIFICATION	0.9999979576802788	WITHOUT_CLASSIFICATION	2.0423197212008554E-6	IMPLEMENTATION
the property is another class..	WITHOUT_CLASSIFICATION	0.999975619968316	WITHOUT_CLASSIFICATION	2.438003168397821E-5	IMPLEMENTATION
otherwise this is a primitive type.	WITHOUT_CLASSIFICATION	0.9998855860182684	WITHOUT_CLASSIFICATION	1.1441398173149488E-4	IMPLEMENTATION
foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999684313688748	WITHOUT_CLASSIFICATION	3.156863112519433E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.999693750125249	WITHOUT_CLASSIFICATION	3.062498747510185E-4	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998878576567252	WITHOUT_CLASSIFICATION	1.1214234327487964E-4	IMPLEMENTATION
in non-select queries the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.999999815913569	WITHOUT_CLASSIFICATION	1.840864309262547E-7	IMPLEMENTATION
this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999860595666179	WITHOUT_CLASSIFICATION	1.3940433382082242E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.999693750125249	WITHOUT_CLASSIFICATION	3.062498747510185E-4	IMPLEMENTATION
even though we might find a pre-existing element by join path we may not be able to reuse it	WITHOUT_CLASSIFICATION	0.9996568853923621	WITHOUT_CLASSIFICATION	3.4311460763791275E-4	IMPLEMENTATION
note addduplicatealias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9998281166684405	WITHOUT_CLASSIFICATION	1.718833315595169E-4	IMPLEMENTATION
if the from-clauses are the same we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999837425508314	WITHOUT_CLASSIFICATION	1.625744916856357E-5	IMPLEMENTATION
again null != null here	WITHOUT_CLASSIFICATION	0.999983153794954	WITHOUT_CLASSIFICATION	1.684620504601511E-5	IMPLEMENTATION
if this is an implied join in a from element then use the impled join type which is part of the tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999999998291604	WITHOUT_CLASSIFICATION	1.708395219066108E-10	IMPLEMENTATION
otherwise (subquery case) dont reuse the fromelement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.99999359674697	WITHOUT_CLASSIFICATION	6.403253030082222E-6	IMPLEMENTATION
we know only the lhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9985171328062497	WITHOUT_CLASSIFICATION	0.0014828671937503954	IMPLEMENTATION
the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999504261766063	WITHOUT_CLASSIFICATION	4.957382339357025E-5	IMPLEMENTATION
only the identifier property field name can be a reference to the associated entity's pk	WITHOUT_CLASSIFICATION	0.9999942388934697	WITHOUT_CLASSIFICATION	5.761106530357905E-6	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.999870980150035	WITHOUT_CLASSIFICATION	1.2901984996502744E-4	IMPLEMENTATION
append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9996282088648482	WITHOUT_CLASSIFICATION	3.717911351518338E-4	IMPLEMENTATION
if the lhs is a collection use collectionpropertymapping	WITHOUT_CLASSIFICATION	0.9999896481241359	WITHOUT_CLASSIFICATION	1.035187586412485E-5	IMPLEMENTATION
tell the destination fromelement to 'includesubclasses'.	WITHOUT_CLASSIFICATION	0.9998841839073761	WITHOUT_CLASSIFICATION	1.1581609262392791E-4	IMPLEMENTATION
use theta style (for regression) move the node up after the origin node.	WITHOUT_CLASSIFICATION	0.9995487363555458	WITHOUT_CLASSIFICATION	4.512636444542547E-4	IMPLEMENTATION
don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999712726350604	WITHOUT_CLASSIFICATION	2.8727364939713778E-5	IMPLEMENTATION
for expected parameter type injection we expect that the lhs represents some form of property ref and that the children of the in-list represent one-or-more params.	WITHOUT_CLASSIFICATION	0.9999686740386978	WITHOUT_CLASSIFICATION	3.1325961302182946E-5	IMPLEMENTATION
we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999634977328354	WITHOUT_CLASSIFICATION	3.650226716464338E-5	IMPLEMENTATION
we have something like "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9992258160732879	WITHOUT_CLASSIFICATION	7.741839267120565E-4	IMPLEMENTATION
we have something like "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9992258160732879	WITHOUT_CLASSIFICATION	7.741839267120565E-4	IMPLEMENTATION
we know only the rhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9985171328062497	WITHOUT_CLASSIFICATION	0.0014828671937503954	IMPLEMENTATION
handle the (assumed) valid cases #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9759222379834789	WITHOUT_CLASSIFICATION	0.024077762016521134	IMPLEMENTATION
one or the other needs to be a datetime for us to get into this method in the first place	WITHOUT_CLASSIFICATION	0.9999291356236882	WITHOUT_CLASSIFICATION	7.086437631171268E-5	IMPLEMENTATION
#3 - note that this is also true of "datetime - param"	WITHOUT_CLASSIFICATION	0.9999235947123761	WITHOUT_CLASSIFICATION	7.640528762384646E-5	IMPLEMENTATION
#2	WITHOUT_CLASSIFICATION	0.9999822925254972	WITHOUT_CLASSIFICATION	1.7707474502863262E-5	IMPLEMENTATION
generate the inner join -- the elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999941015221822	WITHOUT_CLASSIFICATION	5.898477817929086E-6	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999820870449001	WITHOUT_CLASSIFICATION	1.791295509997044E-5	IMPLEMENTATION
the 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999856419220717	WITHOUT_CLASSIFICATION	1.4358077928152392E-5	IMPLEMENTATION
add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9986877756311598	WITHOUT_CLASSIFICATION	0.0013122243688401464	IMPLEMENTATION
sometimes use the element table alias sometimes use the umm collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999672011790939	WITHOUT_CLASSIFICATION	3.279882090614184E-5	IMPLEMENTATION
now set the text for this node. it should be the element columns.	WITHOUT_CLASSIFICATION	0.999931177964708	WITHOUT_CLASSIFICATION	6.882203529200158E-5	IMPLEMENTATION
get the function return value type based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999725374979669	WITHOUT_CLASSIFICATION	2.7462502033180207E-5	IMPLEMENTATION
this will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9998657408879181	WITHOUT_CLASSIFICATION	1.3425911208193124E-4	IMPLEMENTATION
mutation depends on the types of nodes invloved	WITHOUT_CLASSIFICATION	0.9992797519346129	WITHOUT_CLASSIFICATION	7.202480653870976E-4	IMPLEMENTATION
"pass along" our initial embedded parameter node(s) to the first generated sql fragment so that it can be handled later for parameter binding	WITHOUT_CLASSIFICATION	0.9999998670552632	WITHOUT_CLASSIFICATION	1.329447366869401E-7	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999561284396148	WITHOUT_CLASSIFICATION	4.387156038526346E-5	IMPLEMENTATION
generated select expressions are already resolved nothing to do.	WITHOUT_CLASSIFICATION	0.9999993228817544	WITHOUT_CLASSIFICATION	6.771182454559987E-7	IMPLEMENTATION
the path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.999999769350009	WITHOUT_CLASSIFICATION	2.3064999092547376E-7	IMPLEMENTATION
the hql class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999918544776122	WITHOUT_CLASSIFICATION	8.145522387784589E-6	IMPLEMENTATION
associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999196251539436	WITHOUT_CLASSIFICATION	8.037484605639318E-5	IMPLEMENTATION
try the parent fromclause	WITHOUT_CLASSIFICATION	0.9999497132072223	WITHOUT_CLASSIFICATION	5.028679277766126E-5	IMPLEMENTATION
add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9998941567738642	WITHOUT_CLASSIFICATION	1.0584322613589715E-4	IMPLEMENTATION
make sure that all from elements registered with this from clause are actually in the ast.	WITHOUT_CLASSIFICATION	0.9999978098321263	WITHOUT_CLASSIFICATION	2.190167873754864E-6	IMPLEMENTATION
invoke setscalarcolumntext on each constructor argument.	WITHOUT_CLASSIFICATION	0.9994122686892125	WITHOUT_CLASSIFICATION	5.877313107874502E-4	IMPLEMENTATION
collect the select expressions skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999984809051742	WITHOUT_CLASSIFICATION	1.5190948257877637E-6	IMPLEMENTATION
return an empty type array	WITHOUT_CLASSIFICATION	0.9999608812120359	WITHOUT_CLASSIFICATION	3.911878796421784E-5	IMPLEMENTATION
constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999546955772465	WITHOUT_CLASSIFICATION	4.530442275357442E-5	IMPLEMENTATION
this is the exception returned by reflecthelper.getconstructor() if it cannot locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999997165189419	WITHOUT_CLASSIFICATION	2.834810581108812E-7	IMPLEMENTATION
if there is no order by make one	WITHOUT_CLASSIFICATION	0.9999879182696867	WITHOUT_CLASSIFICATION	1.2081730313272474E-5	IMPLEMENTATION
find the where if there is no where find the from	WITHOUT_CLASSIFICATION	0.9999971540309375	WITHOUT_CLASSIFICATION	2.845969062605962E-6	IMPLEMENTATION
now inject the newly built order by into the tree	WITHOUT_CLASSIFICATION	0.9999377434835333	WITHOUT_CLASSIFICATION	6.225651646666195E-5	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999160751372691	WITHOUT_CLASSIFICATION	8.392486273090075E-5	IMPLEMENTATION
logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999561181024641	WITHOUT_CLASSIFICATION	4.3881897535943396E-5	IMPLEMENTATION
render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999915276229764	WITHOUT_CLASSIFICATION	8.472377023645608E-6	IMPLEMENTATION
class names in the from clause result in a joinsequence (the old fromparser does this).	WITHOUT_CLASSIFICATION	0.999999994487765	WITHOUT_CLASSIFICATION	5.512235018579387E-9	IMPLEMENTATION
for many-to-many joins use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999975915683675	WITHOUT_CLASSIFICATION	2.408431632414304E-6	IMPLEMENTATION
otherwise use the property mapping.	WITHOUT_CLASSIFICATION	0.9990846858437359	WITHOUT_CLASSIFICATION	9.153141562640001E-4	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9996462574062733	WITHOUT_CLASSIFICATION	3.5374259372657945E-4	IMPLEMENTATION
if the property is a special collection property name return a collectionpropertymapping.	WITHOUT_CLASSIFICATION	0.9999974254805619	WITHOUT_CLASSIFICATION	2.574519438057027E-6	IMPLEMENTATION
collection of components.	WITHOUT_CLASSIFICATION	0.999951247272858	WITHOUT_CLASSIFICATION	4.875272714201417E-5	IMPLEMENTATION
make sure the lhs is "assignable"	WITHOUT_CLASSIFICATION	0.9999392274610214	WITHOUT_CLASSIFICATION	6.077253897869496E-5	IMPLEMENTATION
false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9979472368339097	WITHOUT_CLASSIFICATION	0.0020527631660902474	IMPLEMENTATION
register the fromelement with the from clause now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9994753316102795	WITHOUT_CLASSIFICATION	5.246683897205523E-4	IMPLEMENTATION
currently allowed	WITHOUT_CLASSIFICATION	0.9999786937363054	WITHOUT_CLASSIFICATION	2.1306263694569627E-5	IMPLEMENTATION
hhh-276 implied joins in a subselect where clause - the destination needs to be added to the destination's from clause. not sure if this is will fix everything but it works.	WITHOUT_CLASSIFICATION	0.9999668899948317	WITHOUT_CLASSIFICATION	3.311000516825596E-5	IMPLEMENTATION
return classalias == null ? classname classalias	WITHOUT_CLASSIFICATION	0.9997998750023401	WITHOUT_CLASSIFICATION	2.001249976597996E-4	IMPLEMENTATION
this is an explicit from element.	WITHOUT_CLASSIFICATION	0.9999946511451318	WITHOUT_CLASSIFICATION	5.3488548682482695E-6	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999160751372691	WITHOUT_CLASSIFICATION	8.392486273090075E-5	IMPLEMENTATION
fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999383921546088	WITHOUT_CLASSIFICATION	6.16078453911206E-5	IMPLEMENTATION
if it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9984909655942923	WITHOUT_CLASSIFICATION	0.0015090344057076188	IMPLEMENTATION
since this is an explicit from element it can't be implied in the from clause.	WITHOUT_CLASSIFICATION	0.9999999768332001	WITHOUT_CLASSIFICATION	2.3166799850589632E-8	IMPLEMENTATION
do nothing eplicit from elements are always in the projection list.	WITHOUT_CLASSIFICATION	0.9999996897121276	WITHOUT_CLASSIFICATION	3.1028787239770173E-7	IMPLEMENTATION
propertyname refers to something like collection.size	WITHOUT_CLASSIFICATION	0.9986974473959436	WITHOUT_CLASSIFICATION	0.001302552604056367	IMPLEMENTATION
property name is a sub-path of a component	WITHOUT_CLASSIFICATION	0.9999973165842689	WITHOUT_CLASSIFICATION	2.6834157310035482E-6	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998878576567252	WITHOUT_CLASSIFICATION	1.1214234327487964E-4	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999990088893786	WITHOUT_CLASSIFICATION	9.911106212889462E-7	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999561284396148	WITHOUT_CLASSIFICATION	4.387156038526346E-5	IMPLEMENTATION
dotnode uses null here	WITHOUT_CLASSIFICATION	0.9999469646602601	WITHOUT_CLASSIFICATION	5.303533973982769E-5	IMPLEMENTATION
we represent a from-clause alias	WITHOUT_CLASSIFICATION	0.999982116566714	WITHOUT_CLASSIFICATION	1.7883433286074752E-5	IMPLEMENTATION
we are the lhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999968592976664	WITHOUT_CLASSIFICATION	3.1407023337788935E-6	IMPLEMENTATION
we are the rhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999968536032683	WITHOUT_CLASSIFICATION	3.1463967316280836E-6	IMPLEMENTATION
we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999705730617412	WITHOUT_CLASSIFICATION	2.9426938258810888E-5	IMPLEMENTATION
early exit!!! return so the resolve call explicitly coming from dotnode can resolve this	WITHOUT_CLASSIFICATION	0.9999902234260065	WITHOUT_CLASSIFICATION	9.776573993487939E-6	IMPLEMENTATION
assume this ident's text does not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9959274735776631	WITHOUT_CLASSIFICATION	0.004072526422336945	IMPLEMENTATION
just ignore it for now it'll get resolved later	WITHOUT_CLASSIFICATION	0.9999941514309676	WITHOUT_CLASSIFICATION	5.848569032404718E-6	IMPLEMENTATION
this is not actually a constant but a reference to from element.	WITHOUT_CLASSIFICATION	0.9999616412006264	WITHOUT_CLASSIFICATION	3.835879937357544E-5	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999962765410182	WITHOUT_CLASSIFICATION	3.7234589818483926E-6	IMPLEMENTATION
these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9965989637087254	WITHOUT_CLASSIFICATION	0.003401036291274687	IMPLEMENTATION
used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999741810440196	WITHOUT_CLASSIFICATION	2.581895598048673E-5	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9628284279790204	WITHOUT_CLASSIFICATION	0.03717157202097964	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9628284279790204	WITHOUT_CLASSIFICATION	0.03717157202097964	IMPLEMENTATION
naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999999339707069	WITHOUT_CLASSIFICATION	6.602929304662933E-8	IMPLEMENTATION
this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9899884488772899	WITHOUT_CLASSIFICATION	0.010011551122710198	IMPLEMENTATION
do not over-write the column text as that has already been "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9936699420992856	WITHOUT_CLASSIFICATION	0.006330057900714371	IMPLEMENTATION
for some reason the antlr.commonast initialization routines force this method to get called twice. the first time with an empty string	WITHOUT_CLASSIFICATION	0.9997689044645294	WITHOUT_CLASSIFICATION	2.31095535470544E-4	IMPLEMENTATION
look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999975052965195	WITHOUT_CLASSIFICATION	2.494703480441662E-6	IMPLEMENTATION
add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999537050526843	WITHOUT_CLASSIFICATION	4.629494731566397E-5	IMPLEMENTATION
if the from element isn't in the same clause create a new from element.	WITHOUT_CLASSIFICATION	0.9999998003081367	WITHOUT_CLASSIFICATION	1.9969186332958673E-7	IMPLEMENTATION
this is the root level node. generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999969953765118	WITHOUT_CLASSIFICATION	3.0046234882659417E-6	IMPLEMENTATION
correlated subqueries create 'special' implied from nodes because correlated subselects can't use an ansi-style join	WITHOUT_CLASSIFICATION	0.9999966632040785	WITHOUT_CLASSIFICATION	3.336795921528615E-6	IMPLEMENTATION
super-duper-classic-parser-regression-testing-mojo-magic	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
a collection of entities	WITHOUT_CLASSIFICATION	0.9999682284528801	WITHOUT_CLASSIFICATION	3.177154711984854E-5	IMPLEMENTATION
a collection of components	WITHOUT_CLASSIFICATION	0.9999807399721722	WITHOUT_CLASSIFICATION	1.9260027827761358E-5	IMPLEMENTATION
a collection of scalar elements	WITHOUT_CLASSIFICATION	0.9999799054304134	WITHOUT_CLASSIFICATION	2.009456958657958E-5	IMPLEMENTATION
according to both the ansi-sql and ejb3 specs trim can either take exactly one parameter or a variable number of parameters between 1 and 4. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if only <trim specification> is omitted both is assumed if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.9999999273593942	WITHOUT_CLASSIFICATION	7.264060571919259E-8	IMPLEMENTATION
don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999741114300509	WITHOUT_CLASSIFICATION	2.5888569949006153E-5	IMPLEMENTATION
treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999922296560418	WITHOUT_CLASSIFICATION	7.77034395807969E-6	IMPLEMENTATION
( implied && dotnode.usethetastyleimplicitjoins ) ) {	WITHOUT_CLASSIFICATION	0.9998825205248695	WITHOUT_CLASSIFICATION	1.1747947513047583E-4	IMPLEMENTATION
the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.999749581217373	WITHOUT_CLASSIFICATION	2.504187826270561E-4	IMPLEMENTATION
create the from element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999998504424185	WITHOUT_CLASSIFICATION	1.4955758157448547E-7	IMPLEMENTATION
if the join is implied then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999927157683388	WITHOUT_CLASSIFICATION	7.284231661244345E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
the associated entity is implied but it must be included in the from. the collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999992069186409	WITHOUT_CLASSIFICATION	7.930813591388274E-7	IMPLEMENTATION
tag this node as a join. don't include subclasses in the join. this is a clollection join.	WITHOUT_CLASSIFICATION	0.9999957264423961	WITHOUT_CLASSIFICATION	4.2735576038789336E-6	IMPLEMENTATION
get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999986554504667	WITHOUT_CLASSIFICATION	1.3445495333349672E-6	IMPLEMENTATION
origin path implied columns classalias	WITHOUT_CLASSIFICATION	0.9999785042356018	WITHOUT_CLASSIFICATION	2.149576439816513E-5	IMPLEMENTATION
implied	WITHOUT_CLASSIFICATION	0.999979185414494	WITHOUT_CLASSIFICATION	2.0814585505896717E-5	IMPLEMENTATION
for implied many-to-many just add the end join.	WITHOUT_CLASSIFICATION	0.999955021903278	WITHOUT_CLASSIFICATION	4.4978096722031814E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481983724351	WITHOUT_CLASSIFICATION	5.180162756493677E-5	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.999996400578287	WITHOUT_CLASSIFICATION	3.5994217129958124E-6	IMPLEMENTATION
this causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999421696422846	WITHOUT_CLASSIFICATION	5.783035771549512E-5	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.999983533685045	WITHOUT_CLASSIFICATION	1.646631495502292E-5	IMPLEMENTATION
frontbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999986499669629	WITHOUT_CLASSIFICATION	1.3500330371983506E-6	IMPLEMENTATION
the types represented in the sql result set. @return the types represented in the sql result set.	WITHOUT_CLASSIFICATION	0.9999901627747395	WITHOUT_CLASSIFICATION	9.837225260560467E-6	IMPLEMENTATION
public type[] getsqlresulttypes() {return sqlresulttypes}	WITHOUT_CLASSIFICATION	0.9999845143561333	WITHOUT_CLASSIFICATION	1.5485643866759132E-5	IMPLEMENTATION
first collect all of the select expressions. note this must be done before invoking setscalarcolumntext() because setscalarcolumntext() changes the ast!!!	WITHOUT_CLASSIFICATION	0.9999762674315748	WITHOUT_CLASSIFICATION	2.373256842535359E-5	IMPLEMENTATION
first allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999758046448695	WITHOUT_CLASSIFICATION	2.4195355130593967E-5	IMPLEMENTATION
sqlresulttypelist.addall( constructorargumenttypelist )	WITHOUT_CLASSIFICATION	0.999873606476193	WITHOUT_CLASSIFICATION	1.2639352380700602E-4	IMPLEMENTATION
if the data type is not an association type it could not have been in the from clause.	WITHOUT_CLASSIFICATION	0.999999892535745	WITHOUT_CLASSIFICATION	1.0746425503512221E-7	IMPLEMENTATION
sqlresulttypelist.add( type )	WITHOUT_CLASSIFICATION	0.9999677168505477	WITHOUT_CLASSIFICATION	3.2283149452212124E-5	IMPLEMENTATION
always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9993238574549211	WITHOUT_CLASSIFICATION	6.761425450788173E-4	IMPLEMENTATION
add the fetched entities	WITHOUT_CLASSIFICATION	0.9999536205176123	WITHOUT_CLASSIFICATION	4.6379482387711255E-5	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999457706535863	WITHOUT_CLASSIFICATION	5.422934641376873E-5	IMPLEMENTATION
function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992106464147189	WITHOUT_CLASSIFICATION	7.893535852809951E-4	IMPLEMENTATION
if there are any scalars (non-entities) selected render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999996822145537	WITHOUT_CLASSIFICATION	3.177854462842968E-7	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
arraylist sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999605541480117	WITHOUT_CLASSIFICATION	3.9445851988314045E-5	IMPLEMENTATION
sqlresulttypes = ( type[] ) sqlresulttypelist.toarray( new type[sqlresulttypelist.size()] )	WITHOUT_CLASSIFICATION	0.9999129488810574	WITHOUT_CLASSIFICATION	8.705111894260685E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992469478489698	WITHOUT_CLASSIFICATION	7.530521510301586E-4	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.8061623874176842	WITHOUT_CLASSIFICATION	0.19383761258231585	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999888881250439	WITHOUT_CLASSIFICATION	1.111187495606299E-5	IMPLEMENTATION
generate an 2d array of column names the first dimension is parallel with the return types array. the second dimension is the list of column names for each type.	WITHOUT_CLASSIFICATION	0.9999996096835826	WITHOUT_CLASSIFICATION	3.9031641736181043E-7	IMPLEMENTATION
generate the select expression.	WITHOUT_CLASSIFICATION	0.9999847753076299	WITHOUT_CLASSIFICATION	1.5224692370071093E-5	IMPLEMENTATION
union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991700095664531	WITHOUT_CLASSIFICATION	8.299904335468306E-4	IMPLEMENTATION
skip 'distinct' and 'all' so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9998023092920761	WITHOUT_CLASSIFICATION	1.976907079237472E-4	IMPLEMENTATION
create sql_token nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999875344993755	WITHOUT_CLASSIFICATION	1.2465500624467334E-5	IMPLEMENTATION
generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999834734747923	WITHOUT_CLASSIFICATION	1.6526525207750443E-5	IMPLEMENTATION
get the function name node.	WITHOUT_CLASSIFICATION	0.9999833300177949	WITHOUT_CLASSIFICATION	1.666998220506485E-5	IMPLEMENTATION
method expressions in a select should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999929983852329	WITHOUT_CLASSIFICATION	7.001614767050459E-6	IMPLEMENTATION
if this is 'elements' then create a new from element.	WITHOUT_CLASSIFICATION	0.9999991327279102	WITHOUT_CLASSIFICATION	8.672720898040488E-7	IMPLEMENTATION
not elements(x)	WITHOUT_CLASSIFICATION	0.9970679046162532	WITHOUT_CLASSIFICATION	0.0029320953837468056	IMPLEMENTATION
dialect function	WITHOUT_CLASSIFICATION	0.9999484971558108	WITHOUT_CLASSIFICATION	5.1502844189197526E-5	IMPLEMENTATION
collection 'property function'	WITHOUT_CLASSIFICATION	0.9999050028198575	WITHOUT_CLASSIFICATION	9.499718014249898E-5	IMPLEMENTATION
if the constant is an ident figure out what it means	WITHOUT_CLASSIFICATION	0.9999605745847868	WITHOUT_CLASSIFICATION	3.942541521320902E-5	IMPLEMENTATION
ident is a class alias in the from.	WITHOUT_CLASSIFICATION	0.9999989619225109	WITHOUT_CLASSIFICATION	1.038077489127053E-6	IMPLEMENTATION
resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999906297155545	WITHOUT_CLASSIFICATION	9.370284445414891E-6	IMPLEMENTATION
otherwise it's a literal.	WITHOUT_CLASSIFICATION	0.9991354420697707	WITHOUT_CLASSIFICATION	8.645579302294029E-4	IMPLEMENTATION
the name of an entity class	WITHOUT_CLASSIFICATION	0.9999995480623716	WITHOUT_CLASSIFICATION	4.5193762849955873E-7	IMPLEMENTATION
the class discriminator value	WITHOUT_CLASSIFICATION	0.9999893230934627	WITHOUT_CLASSIFICATION	1.0676906537405152E-5	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999888553437474	WITHOUT_CLASSIFICATION	1.1144656252676E-5	IMPLEMENTATION
add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999939317634339	WITHOUT_CLASSIFICATION	6.068236566149466E-6	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9997350630325743	WITHOUT_CLASSIFICATION	2.6493696742564265E-4	IMPLEMENTATION
child == parent.getfirstchild()	WITHOUT_CLASSIFICATION	0.9993776686461386	WITHOUT_CLASSIFICATION	6.223313538613763E-4	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9997350630325743	WITHOUT_CLASSIFICATION	2.6493696742564265E-4	IMPLEMENTATION
filter conditions need to be inserted before the hql where condition and the theta join node. this is because org.hibernate.loader.loader binds the filter parameters first then it binds all the hql query parameters see org.hibernate.loader.loader.processfilterparameters().	WITHOUT_CLASSIFICATION	0.9999464363651848	WITHOUT_CLASSIFICATION	5.3563634815200076E-5	IMPLEMENTATION
put the filters node before the hql condition and theta joins	WITHOUT_CLASSIFICATION	0.9998146114301559	WITHOUT_CLASSIFICATION	1.8538856984412505E-4	IMPLEMENTATION
add the current fragment to the filters node	WITHOUT_CLASSIFICATION	0.999666645706824	WITHOUT_CLASSIFICATION	3.333542931760552E-4	IMPLEMENTATION
create a new theta_joins node as a parent of all filters	WITHOUT_CLASSIFICATION	0.999975708177061	WITHOUT_CLASSIFICATION	2.4291822938930825E-5	IMPLEMENTATION
put the theta_joins node before the hql condition after the filters.	WITHOUT_CLASSIFICATION	0.9998667103819399	WITHOUT_CLASSIFICATION	1.3328961806020832E-4	IMPLEMENTATION
add the current fragment to the theta_joins node	WITHOUT_CLASSIFICATION	0.9996662535446899	WITHOUT_CLASSIFICATION	3.3374645531017037E-4	IMPLEMENTATION
first try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999923366229253	WITHOUT_CLASSIFICATION	7.663377074648047E-6	IMPLEMENTATION
unable to locate it using this name	WITHOUT_CLASSIFICATION	0.999950166803615	WITHOUT_CLASSIFICATION	4.983319638483255E-5	IMPLEMENTATION
if that didn't work try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999728789027313	WITHOUT_CLASSIFICATION	2.712109726863118E-5	IMPLEMENTATION
implicit joins use theta style (where pk = fk) explicit joins use join (after from)	WITHOUT_CLASSIFICATION	0.9997250478034178	WITHOUT_CLASSIFICATION	2.749521965822556E-4	IMPLEMENTATION
locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.999976815859207	WITHOUT_CLASSIFICATION	2.318414079301838E-5	IMPLEMENTATION
determine the type of the first argument	WITHOUT_CLASSIFICATION	0.9999995971948877	WITHOUT_CLASSIFICATION	4.0280511231070047E-7	IMPLEMENTATION
use the dot node to emit the first column name. create the column names folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999529372989302	WITHOUT_CLASSIFICATION	4.706270106988953E-5	IMPLEMENTATION
note this simply constructs a "raw" sql_token representing the where fragment and injects this into the tree. this "works" however it is probably not the best long-term solution. at some point we probably want to apply an additional grammar to properly tokenize this where fragment into constituent parts focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9686955187510723	WITHOUT_CLASSIFICATION	0.0313044812489277	IMPLEMENTATION
append the text of the current node.	WITHOUT_CLASSIFICATION	0.9992154406206547	WITHOUT_CLASSIFICATION	7.845593793452224E-4	IMPLEMENTATION
if the node has a first child recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999961540388704	WITHOUT_CLASSIFICATION	3.845961129638865E-6	IMPLEMENTATION
if there is a second child (rhs) recurse into that child.	WITHOUT_CLASSIFICATION	0.999987616087467	WITHOUT_CLASSIFICATION	1.2383912532940636E-5	IMPLEMENTATION
iterate through the aliasjoinsequence pairs and generate sql token nodes.	WITHOUT_CLASSIFICATION	0.9999856954738288	WITHOUT_CLASSIFICATION	1.4304526171175302E-5	IMPLEMENTATION
if the from element represents a join_fragment and it is a theta-style join convert its type from join_fragment to from_fragment	WITHOUT_CLASSIFICATION	0.9999999197499834	WITHOUT_CLASSIFICATION	8.025001667822189E-8	IMPLEMENTATION
this is used during sqlgenerator processing	WITHOUT_CLASSIFICATION	0.9999877083186622	WITHOUT_CLASSIFICATION	1.2291681337683763E-5	IMPLEMENTATION
if there is a from fragment and the from element is an explicit then add the from part.	WITHOUT_CLASSIFICATION	0.999999975843124	WITHOUT_CLASSIFICATION	2.4156876003372835E-8	IMPLEMENTATION
&& stringhelper.isnotempty( frag )	WITHOUT_CLASSIFICATION	0.999876251813159	WITHOUT_CLASSIFICATION	1.2374818684098116E-4	IMPLEMENTATION
the from fragment will probably begin with ' '. remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999995149149816	WITHOUT_CLASSIFICATION	4.850850185015858E-7	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9998353778150468	WITHOUT_CLASSIFICATION	1.6462218495323977E-4	IMPLEMENTATION
select p from p in class eg.person order by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999998146257221	WITHOUT_CLASSIFICATION	1.8537427797059338E-7	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999993952374194	WITHOUT_CLASSIFICATION	6.047625805862773E-7	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9999889450807732	WITHOUT_CLASSIFICATION	1.1054919226832145E-5	IMPLEMENTATION
default mode	WITHOUT_CLASSIFICATION	0.999980707720697	WITHOUT_CLASSIFICATION	1.9292279302894097E-5	IMPLEMENTATION
queryjoinfragment join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.999879816337491	WITHOUT_CLASSIFICATION	1.2018366250900855E-4	IMPLEMENTATION
reset the dotcount (but not the path) after reset!	WITHOUT_CLASSIFICATION	0.9928975148522518	WITHOUT_CLASSIFICATION	0.007102485147748358	IMPLEMENTATION
after reset!	WITHOUT_CLASSIFICATION	0.9999495066701997	WITHOUT_CLASSIFICATION	5.04933298003053E-5	IMPLEMENTATION
we don't need to worry about any condition in the on clause here (tofromfragmentstring) since anything in the on condition is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999680461633791	WITHOUT_CLASSIFICATION	3.195383662088659E-5	IMPLEMENTATION
bit_length feels a bit broken to me. we have to cast to char in order to pass when a numeric value is supplied. but of course the answers given will be wildly different for these two datatypes. 1234.5678 will be 9 bytes as a char string but will be 8 or 16 bytes as a true numeric. jay nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999999976956018	WITHOUT_CLASSIFICATION	2.3043981513666677E-9	IMPLEMENTATION
dotcount>=2	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
do the corresponding rhs	WITHOUT_CLASSIFICATION	0.9998664653563338	WITHOUT_CLASSIFICATION	1.3353464366627196E-4	IMPLEMENTATION
if its "id"	WITHOUT_CLASSIFICATION	0.999991674661862	WITHOUT_CLASSIFICATION	8.325338137929226E-6	IMPLEMENTATION
or its the id property name	WITHOUT_CLASSIFICATION	0.9999436446546479	WITHOUT_CLASSIFICATION	5.635534535218731E-5	IMPLEMENTATION
join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.999879816337491	WITHOUT_CLASSIFICATION	1.2018366250900855E-4	IMPLEMENTATION
important!!	WITHOUT_CLASSIFICATION	0.9999415048999774	WITHOUT_CLASSIFICATION	5.8495100022647935E-5	IMPLEMENTATION
string[] keycols = collpersister.getkeycolumnnames()	WITHOUT_CLASSIFICATION	0.9998443252461444	WITHOUT_CLASSIFICATION	1.556747538555726E-4	IMPLEMENTATION
an association	WITHOUT_CLASSIFICATION	0.9999943842276883	WITHOUT_CLASSIFICATION	5.615772311767939E-6	IMPLEMENTATION
allow index() function	WITHOUT_CLASSIFICATION	0.999912680084152	WITHOUT_CLASSIFICATION	8.731991584795616E-5	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9908378809744767	WITHOUT_CLASSIFICATION	0.009162119025523222	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999993952374194	WITHOUT_CLASSIFICATION	6.047625805862773E-7	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
collections of values	WITHOUT_CLASSIFICATION	0.9999959670971601	WITHOUT_CLASSIFICATION	4.032902839919385E-6	IMPLEMENTATION
opening paren in new foo ( )	WITHOUT_CLASSIFICATION	0.999997206752019	WITHOUT_CLASSIFICATION	2.793247981115669E-6	IMPLEMENTATION
if we are inside a new result() but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999927083657473	WITHOUT_CLASSIFICATION	7.291634252764914E-6	IMPLEMENTATION
special case	WITHOUT_CLASSIFICATION	0.9999711826767645	WITHOUT_CLASSIFICATION	2.881732323550455E-5	IMPLEMENTATION
the name of an sql function	WITHOUT_CLASSIFICATION	0.9999994061811509	WITHOUT_CLASSIFICATION	5.938188491741649E-7	IMPLEMENTATION
null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.999999091599485	WITHOUT_CLASSIFICATION	9.084005150186505E-7	IMPLEMENTATION
this is basically a copy/paste of orderbyparser might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999934484515369	WITHOUT_CLASSIFICATION	6.5515484630791595E-6	IMPLEMENTATION
select p from p in class eg.person group by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999996977682144	WITHOUT_CLASSIFICATION	3.022317856317241E-7	IMPLEMENTATION
return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999638365655231	WITHOUT_CLASSIFICATION	3.616343447676935E-5	IMPLEMENTATION
register collection role	WITHOUT_CLASSIFICATION	0.9998068744685663	WITHOUT_CLASSIFICATION	1.9312553143372574E-4	IMPLEMENTATION
the keyword used to specify an identity column if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999984769745963	WITHOUT_CLASSIFICATION	1.523025403713026E-6	IMPLEMENTATION
.getelementpropertymapping()	WITHOUT_CLASSIFICATION	0.9999587380234353	WITHOUT_CLASSIFICATION	4.1261976564804205E-5	IMPLEMENTATION
crossjoins.add(name)	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
ie no select clause in hql	WITHOUT_CLASSIFICATION	0.999997653082692	WITHOUT_CLASSIFICATION	2.346917307967446E-6	IMPLEMENTATION
initialize the set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999797108143061	WITHOUT_CLASSIFICATION	2.028918569383082E-5	IMPLEMENTATION
ie. no select clause	WITHOUT_CLASSIFICATION	0.9999737619773406	WITHOUT_CLASSIFICATION	2.6238022659453668E-5	IMPLEMENTATION
there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999848765217187	WITHOUT_CLASSIFICATION	1.5123478281293712E-5	IMPLEMENTATION
return the concrete type or the underlying type if a concrete type was not specified	WITHOUT_CLASSIFICATION	0.9999986198454742	WITHOUT_CLASSIFICATION	1.3801545257503889E-6	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
q.addcollection(collectionname collectionrole)	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9922281443343103	WITHOUT_CLASSIFICATION	0.0077718556656897145	IMPLEMENTATION
can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9998718309122349	WITHOUT_CLASSIFICATION	1.281690877651445E-4	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.999901955605351	WITHOUT_CLASSIFICATION	9.804439464902354E-5	IMPLEMENTATION
this is the legacy behaviour for hql queries	WITHOUT_CLASSIFICATION	0.999987802708054	WITHOUT_CLASSIFICATION	1.2197291946061974E-5	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989549452759083	WITHOUT_CLASSIFICATION	0.0010450547240916338	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989549452759083	WITHOUT_CLASSIFICATION	0.0010450547240916338	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces early exit!!!!	WITHOUT_CLASSIFICATION	0.9999911580916405	WITHOUT_CLASSIFICATION	8.841908359517904E-6	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989549452759083	WITHOUT_CLASSIFICATION	0.0010450547240916338	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9989549452759083	WITHOUT_CLASSIFICATION	0.0010450547240916338	IMPLEMENTATION
need this since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9996309976472507	WITHOUT_CLASSIFICATION	3.690023527492802E-4	IMPLEMENTATION
tokens that close a sub expression tokens that open a sub expression tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9991121272025325	WITHOUT_CLASSIFICATION	8.87872797467424E-4	IMPLEMENTATION
expressionterminators.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999157565676834	WITHOUT_CLASSIFICATION	8.4243432316609E-5	IMPLEMENTATION
expressionopeners.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999157565676834	WITHOUT_CLASSIFICATION	8.4243432316609E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource) early exit!!!!	WITHOUT_CLASSIFICATION	0.9999044812133997	WITHOUT_CLASSIFICATION	9.55187866003765E-5	IMPLEMENTATION
otherwise a trim-specification and/or a trim-character have been specified we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character (what is to be trimmed off?) the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9983202170336611	WITHOUT_CLASSIFICATION	0.0016797829663388	IMPLEMENTATION
inside a between and expression	WITHOUT_CLASSIFICATION	0.9996345491229874	WITHOUT_CLASSIFICATION	3.654508770126031E-4	IMPLEMENTATION
were an odd or even number of nots encountered the join string built up by compound paths inside this expression a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999996392371074	WITHOUT_CLASSIFICATION	3.6076289252204675E-7	IMPLEMENTATION
ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999612055321127	WITHOUT_CLASSIFICATION	3.879446788746085E-5	IMPLEMENTATION
cope with []	WITHOUT_CLASSIFICATION	0.9999463051784564	WITHOUT_CLASSIFICATION	5.36948215435895E-5	IMPLEMENTATION
cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.999683606243272	WITHOUT_CLASSIFICATION	3.163937567278999E-4	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999845527830877	WITHOUT_CLASSIFICATION	1.5447216912200302E-5	IMPLEMENTATION
cope with a subselect	WITHOUT_CLASSIFICATION	0.999961662432314	WITHOUT_CLASSIFICATION	3.833756768592278E-5	IMPLEMENTATION
cope with special cases of and not ()	WITHOUT_CLASSIFICATION	0.9994856433819486	WITHOUT_CLASSIFICATION	5.143566180514397E-4	IMPLEMENTATION
close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999970066802679	WITHOUT_CLASSIFICATION	2.993319732008147E-6	IMPLEMENTATION
take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999216032997221	WITHOUT_CLASSIFICATION	7.839670027782848E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.999981788449717	WITHOUT_CLASSIFICATION	1.821155028304244E-5	IMPLEMENTATION
process a token mapping oo path expressions to sql expressions	WITHOUT_CLASSIFICATION	0.9999822344195464	WITHOUT_CLASSIFICATION	1.776558045367652E-5	IMPLEMENTATION
open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999678065767629	WITHOUT_CLASSIFICATION	3.2193423237039404E-5	IMPLEMENTATION
cope with special cases of and not )	WITHOUT_CLASSIFICATION	0.990672649534396	WITHOUT_CLASSIFICATION	0.009327350465603951	IMPLEMENTATION
the next one up must also be	WITHOUT_CLASSIFICATION	0.9999243899414294	WITHOUT_CLASSIFICATION	7.56100585705215E-5	IMPLEMENTATION
add any joins	WITHOUT_CLASSIFICATION	0.9999530153584559	WITHOUT_CLASSIFICATION	4.698464154409753E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.999981788449717	WITHOUT_CLASSIFICATION	1.821155028304244E-5	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9999889450807732	WITHOUT_CLASSIFICATION	1.1054919226832145E-5	IMPLEMENTATION
path expression	WITHOUT_CLASSIFICATION	0.9997297112637107	WITHOUT_CLASSIFICATION	2.702887362892999E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999300267289165	WITHOUT_CLASSIFICATION	6.997327108355155E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9997713271123564	WITHOUT_CLASSIFICATION	2.2867288764366684E-4	IMPLEMENTATION
anything else	WITHOUT_CLASSIFICATION	0.9997869860982967	WITHOUT_CLASSIFICATION	2.130139017033411E-4	IMPLEMENTATION
the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.999876706521255	WITHOUT_CLASSIFICATION	1.2329347874491008E-4	IMPLEMENTATION
careful with this!	WITHOUT_CLASSIFICATION	0.9998441193895281	WITHOUT_CLASSIFICATION	1.5588061047193448E-4	IMPLEMENTATION
the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999480468637515	WITHOUT_CLASSIFICATION	5.195313624851205E-5	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.9999818627480705	WITHOUT_CLASSIFICATION	1.813725192953525E-5	IMPLEMENTATION
notice no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999996849098169	WITHOUT_CLASSIFICATION	3.1509018313677065E-7	IMPLEMENTATION
cannot instantiate	WITHOUT_CLASSIFICATION	0.9999924815491918	WITHOUT_CLASSIFICATION	7.518450808208196E-6	IMPLEMENTATION
start by looking for hql keywords	WITHOUT_CLASSIFICATION	0.9999933982035555	WITHOUT_CLASSIFICATION	6.60179644444962E-6	IMPLEMENTATION
inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9998997676631388	WITHOUT_CLASSIFICATION	1.0023233686119741E-4	IMPLEMENTATION
'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9993426863118605	WITHOUT_CLASSIFICATION	6.573136881394317E-4	IMPLEMENTATION
now anything that is not a hql keyword	WITHOUT_CLASSIFICATION	0.9907437136687767	WITHOUT_CLASSIFICATION	0.009256286331223263	IMPLEMENTATION
process the "old" hql style where aliases appear _first_ ie. using the in or in class constructions	WITHOUT_CLASSIFICATION	0.9999995975146129	WITHOUT_CLASSIFICATION	4.0248538718231695E-7	IMPLEMENTATION
treat it as a classname	WITHOUT_CLASSIFICATION	0.9998024513268218	WITHOUT_CLASSIFICATION	1.9754867317817247E-4	IMPLEMENTATION
treat it as a path expression	WITHOUT_CLASSIFICATION	0.9990863791820743	WITHOUT_CLASSIFICATION	9.13620817925669E-4	IMPLEMENTATION
starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999956220218952	WITHOUT_CLASSIFICATION	4.377978104813348E-6	IMPLEMENTATION
starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9996766239226389	WITHOUT_CLASSIFICATION	3.2337607736120306E-4	IMPLEMENTATION
allow odmg oql style from person p p.cars c	WITHOUT_CLASSIFICATION	0.9999914920265761	WITHOUT_CLASSIFICATION	8.507973423797331E-6	IMPLEMENTATION
handle quoted strings	WITHOUT_CLASSIFICATION	0.9995478922433361	WITHOUT_CLASSIFICATION	4.5210775666391006E-4	IMPLEMENTATION
object insertions updates and deletions have list semantics because they must happen in the right order so as to respect referential integrity	WITHOUT_CLASSIFICATION	0.9999997091887957	WITHOUT_CLASSIFICATION	2.9081120425421494E-7	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.9999818627480705	WITHOUT_CLASSIFICATION	1.813725192953525E-5	IMPLEMENTATION
ignore whitespace	WITHOUT_CLASSIFICATION	0.9999344420541292	WITHOUT_CLASSIFICATION	6.555794587082843E-5	IMPLEMENTATION
do replacements	WITHOUT_CLASSIFICATION	0.9998551984094335	WITHOUT_CLASSIFICATION	1.448015905665195E-4	IMPLEMENTATION
handle hql2 collection syntax	WITHOUT_CLASSIFICATION	0.9995357067804813	WITHOUT_CLASSIFICATION	4.6429321951867923E-4	IMPLEMENTATION
uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999758698383919	WITHOUT_CLASSIFICATION	2.413016160810368E-5	IMPLEMENTATION
abstractselectingdelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999160751372691	WITHOUT_CLASSIFICATION	8.392486273090075E-5	IMPLEMENTATION
hilo params	WITHOUT_CLASSIFICATION	0.9999423338314413	WITHOUT_CLASSIFICATION	5.7666168558874744E-5	IMPLEMENTATION
sql = query	WITHOUT_CLASSIFICATION	0.9999716771568072	WITHOUT_CLASSIFICATION	2.8322843192765414E-5	IMPLEMENTATION
performance opt	WITHOUT_CLASSIFICATION	0.9992024496412865	WITHOUT_CLASSIFICATION	7.975503587135794E-4	IMPLEMENTATION
sql = update	WITHOUT_CLASSIFICATION	0.9999937791439474	WITHOUT_CLASSIFICATION	6.220856052612559E-6	IMPLEMENTATION
hilo config	WITHOUT_CLASSIFICATION	0.9997388390679555	WITHOUT_CLASSIFICATION	2.611609320445625E-4	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999619726859617	WITHOUT_CLASSIFICATION	3.8027314038321694E-5	IMPLEMENTATION
don't allow comments on these insert statements as comments totally blow up the oracle getgeneratedkeys "support" (	WITHOUT_CLASSIFICATION	0.999973132510305	WITHOUT_CLASSIFICATION	2.686748969502329E-5	IMPLEMENTATION
abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999998182307274	WITHOUT_CLASSIFICATION	1.8176927260431714E-7	IMPLEMENTATION
throw new identifiergenerationexception("save associated object first or disable cascade for inverse association")	WITHOUT_CLASSIFICATION	0.9999967327069892	WITHOUT_CLASSIFICATION	3.2672930109406812E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9989850888413557	WITHOUT_CLASSIFICATION	0.0010149111586441888	IMPLEMENTATION
do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999731777216948	WITHOUT_CLASSIFICATION	2.6822278305139678E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999891198045088	WITHOUT_CLASSIFICATION	1.0880195491267023E-5	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999619726859617	WITHOUT_CLASSIFICATION	3.8027314038321694E-5	IMPLEMENTATION
do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9998840714450756	WITHOUT_CLASSIFICATION	1.1592855492439313E-4	IMPLEMENTATION
column and table should be renamed but it would break the public api	WITHOUT_CLASSIFICATION	0.9999887966625037	WITHOUT_CLASSIFICATION	1.120333749629568E-5	IMPLEMENTATION
loaded entity instances by entitykey	WITHOUT_CLASSIFICATION	0.9999819656446205	WITHOUT_CLASSIFICATION	1.803435537950769E-5	IMPLEMENTATION
if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.999989473212251	WITHOUT_CLASSIFICATION	1.052678774909109E-5	IMPLEMENTATION
the default	WITHOUT_CLASSIFICATION	0.9999950019978124	WITHOUT_CLASSIFICATION	4.998002187636787E-6	IMPLEMENTATION
unfortunately not really safe to normalize this to 1 as an initial value like we do the others because we would not be able to control this if we are using a sequence	WITHOUT_CLASSIFICATION	0.9999719419841923	WITHOUT_CLASSIFICATION	2.8058015807812736E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9989850888413557	WITHOUT_CLASSIFICATION	0.0010149111586441888	IMPLEMENTATION
identity map of collectionentry instances by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999700490823679	WITHOUT_CLASSIFICATION	2.995091763213852E-5	IMPLEMENTATION
general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999153177339547	WITHOUT_CLASSIFICATION	8.468226604525855E-5	IMPLEMENTATION
table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999083795044627	WITHOUT_CLASSIFICATION	9.162049553736558E-5	IMPLEMENTATION
configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999646214188102	WITHOUT_CLASSIFICATION	3.5378581189812915E-4	IMPLEMENTATION
identifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997557851506208	WITHOUT_CLASSIFICATION	2.442148493792463E-4	IMPLEMENTATION
persistentidentifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997557851506208	WITHOUT_CLASSIFICATION	2.442148493792463E-4	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999920567662284	WITHOUT_CLASSIFICATION	7.943233771632167E-6	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999920567662284	WITHOUT_CLASSIFICATION	7.943233771632167E-6	IMPLEMENTATION
fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999971473878251	WITHOUT_CLASSIFICATION	2.8526121748831554E-6	IMPLEMENTATION
we just hit the last position	WITHOUT_CLASSIFICATION	0.9999972965657118	WITHOUT_CLASSIFICATION	2.7034342882174436E-6	IMPLEMENTATION
scroll ahead	WITHOUT_CLASSIFICATION	0.9999473317322267	WITHOUT_CLASSIFICATION	5.266826777320035E-5	IMPLEMENTATION
scroll backward	WITHOUT_CLASSIFICATION	0.9999053496712622	WITHOUT_CLASSIFICATION	9.465032873776166E-5	IMPLEMENTATION
we have not yet hit the last result	WITHOUT_CLASSIFICATION	0.9981191674266577	WITHOUT_CLASSIFICATION	0.0018808325733422832	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998439327666293	WITHOUT_CLASSIFICATION	1.5606723337071077E-4	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999754180808151	WITHOUT_CLASSIFICATION	2.4581919184871322E-5	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999242276473393	WITHOUT_CLASSIFICATION	7.57723526607135E-5	IMPLEMENTATION
do this when all the properties are updateable since there is a certain likelihood that the information will already be snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999977054466658	WITHOUT_CLASSIFICATION	2.2945533342638443E-6	IMPLEMENTATION
inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999587211908346	WITHOUT_CLASSIFICATION	4.127880916538736E-5	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998439327666293	WITHOUT_CLASSIFICATION	1.5606723337071077E-4	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999754180808151	WITHOUT_CLASSIFICATION	2.4581919184871322E-5	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999242276473393	WITHOUT_CLASSIFICATION	7.57723526607135E-5	IMPLEMENTATION
caches	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
generators	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
cache region is defined by the root-class in the hierarchy	WITHOUT_CLASSIFICATION	0.9999975268798903	WITHOUT_CLASSIFICATION	2.4731201097229702E-6	IMPLEMENTATION
check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999939298118841	WITHOUT_CLASSIFICATION	6.07018811590008E-6	IMPLEMENTATION
after all persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.999989351738964	WITHOUT_CLASSIFICATION	1.0648261036032827E-5	IMPLEMENTATION
if we get here it is possible that we have a proxy 'in the way' of the merge map resolution note decided to put this here rather than in the above loop as i was nervous about the performance of the loop-in-loop especially considering this is far more likely the 'edge case'	WITHOUT_CLASSIFICATION	0.9999993478480464	WITHOUT_CLASSIFICATION	6.521519536228968E-7	IMPLEMENTATION
jndi + serialization	WITHOUT_CLASSIFICATION	0.9999557950224626	WITHOUT_CLASSIFICATION	4.4204977537407465E-5	IMPLEMENTATION
checking for named queries	WITHOUT_CLASSIFICATION	0.9999882116789556	WITHOUT_CLASSIFICATION	1.1788321044413703E-5	IMPLEMENTATION
stats	WITHOUT_CLASSIFICATION	0.9999793765881363	WITHOUT_CLASSIFICATION	2.0623411863773642E-5	IMPLEMENTATION
entitynotfounddelegate	WITHOUT_CLASSIFICATION	0.9999587380234353	WITHOUT_CLASSIFICATION	4.1261976564804205E-5	IMPLEMENTATION
check named hql queries	WITHOUT_CLASSIFICATION	0.9998507674836231	WITHOUT_CLASSIFICATION	1.4923251637684586E-4	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.999992186736084	WITHOUT_CLASSIFICATION	7.813263916037102E-6	IMPLEMENTATION
prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.999926626801803	WITHOUT_CLASSIFICATION	7.337319819705443E-5	IMPLEMENTATION
from javax.naming.referenceable	WITHOUT_CLASSIFICATION	0.9999804755780809	WITHOUT_CLASSIFICATION	1.952442191914747E-5	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999966871545253	WITHOUT_CLASSIFICATION	3.3128454747264496E-6	IMPLEMENTATION
for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999854667699728	WITHOUT_CLASSIFICATION	1.453323002713163E-5	IMPLEMENTATION
test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9999999056031109	WITHOUT_CLASSIFICATION	9.439688911047122E-8	IMPLEMENTATION
note early exit	WITHOUT_CLASSIFICATION	0.9999757054917185	WITHOUT_CLASSIFICATION	2.4294508281501183E-5	IMPLEMENTATION
for backward-compatability	WITHOUT_CLASSIFICATION	0.9999845423650625	WITHOUT_CLASSIFICATION	1.5457634937392598E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.9999358888231528	WITHOUT_CLASSIFICATION	6.41111768471509E-5	IMPLEMENTATION
to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999951433134503	WITHOUT_CLASSIFICATION	4.856686549635399E-6	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999997204325548	WITHOUT_CLASSIFICATION	2.7956744515515505E-7	IMPLEMENTATION
must add to jndi _after_ adding to hashmaps because some jndi servers use serialization	WITHOUT_CLASSIFICATION	0.9992129000394474	WITHOUT_CLASSIFICATION	7.870999605525216E-4	IMPLEMENTATION
make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9996799835328691	WITHOUT_CLASSIFICATION	3.20016467130893E-4	IMPLEMENTATION
for each of the defined parameters make sure its value has been set	WITHOUT_CLASSIFICATION	0.9999828858811021	WITHOUT_CLASSIFICATION	1.711411889798821E-5	IMPLEMENTATION
we never need to apply locks to the sql	WITHOUT_CLASSIFICATION	0.9955776404582158	WITHOUT_CLASSIFICATION	0.004422359541784234	IMPLEMENTATION
inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999173863110734	WITHOUT_CLASSIFICATION	8.261368892652065E-5	IMPLEMENTATION
deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999163536616604	WITHOUT_CLASSIFICATION	8.364633833962425E-5	IMPLEMENTATION
during deserialization we need to reconnect all proxies and collections to this session as well as the entityentry and collectionentry instances these associations are transient because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999993024541591	WITHOUT_CLASSIFICATION	6.975458408596725E-7	IMPLEMENTATION
updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999207483039982	WITHOUT_CLASSIFICATION	7.925169600167343E-5	IMPLEMENTATION
loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999103068659514	WITHOUT_CLASSIFICATION	8.969313404856187E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.999917125627956	WITHOUT_CLASSIFICATION	8.287437204391218E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.999917125627956	WITHOUT_CLASSIFICATION	8.287437204391218E-5	IMPLEMENTATION
first try to load it from the temp pc associated to this ss	WITHOUT_CLASSIFICATION	0.9999792662366291	WITHOUT_CLASSIFICATION	2.073376337089107E-5	IMPLEMENTATION
if the metadata allowed proxy creation and caller did not request forceful eager loading generate a proxy	WITHOUT_CLASSIFICATION	0.9998507913918656	WITHOUT_CLASSIFICATION	1.4920860813444345E-4	IMPLEMENTATION
otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9994331519715204	WITHOUT_CLASSIFICATION	5.668480284796654E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999931730165523	WITHOUT_CLASSIFICATION	6.8269834476890814E-6	IMPLEMENTATION
no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9997843161977231	WITHOUT_CLASSIFICATION	2.1568380227683428E-4	IMPLEMENTATION
after setting values to object entitymode	WITHOUT_CLASSIFICATION	0.9999986012434968	WITHOUT_CLASSIFICATION	1.398756503218873E-6	IMPLEMENTATION
for ejb3	WITHOUT_CLASSIFICATION	0.9999922001466617	WITHOUT_CLASSIFICATION	7.799853338260491E-6	IMPLEMENTATION
just ignore	WITHOUT_CLASSIFICATION	0.9999715786745519	WITHOUT_CLASSIFICATION	2.8421325448112525E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9997648297603308	WITHOUT_CLASSIFICATION	2.3517023966910735E-4	IMPLEMENTATION
saveorupdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998184724120098	WITHOUT_CLASSIFICATION	1.8152758799026193E-4	IMPLEMENTATION
update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998185128967867	WITHOUT_CLASSIFICATION	1.8148710321321047E-4	IMPLEMENTATION
lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998184724120098	WITHOUT_CLASSIFICATION	1.8152758799026193E-4	IMPLEMENTATION
persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998184724120098	WITHOUT_CLASSIFICATION	1.8152758799026193E-4	IMPLEMENTATION
persistonflush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998184724120098	WITHOUT_CLASSIFICATION	1.8152758799026193E-4	IMPLEMENTATION
merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998184724120098	WITHOUT_CLASSIFICATION	1.8152758799026193E-4	IMPLEMENTATION
saveorupdatecopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998184724120098	WITHOUT_CLASSIFICATION	1.8152758799026193E-4	IMPLEMENTATION
delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998184724120098	WITHOUT_CLASSIFICATION	1.8152758799026193E-4	IMPLEMENTATION
load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998184724120098	WITHOUT_CLASSIFICATION	1.8152758799026193E-4	IMPLEMENTATION
refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998184724120098	WITHOUT_CLASSIFICATION	1.8152758799026193E-4	IMPLEMENTATION
replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998184724120098	WITHOUT_CLASSIFICATION	1.8152758799026193E-4	IMPLEMENTATION
do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9914887456825594	WITHOUT_CLASSIFICATION	0.008511254317440651	IMPLEMENTATION
this is an internal error of some sort	WITHOUT_CLASSIFICATION	0.9997976715654504	WITHOUT_CLASSIFICATION	2.023284345496359E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.999990204537561	WITHOUT_CLASSIFICATION	9.795462439049439E-6	IMPLEMENTATION
only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999990091818438	WITHOUT_CLASSIFICATION	9.908181561667453E-7	IMPLEMENTATION
if it was previously unreferenced we need to flush in order to get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999999821207858	WITHOUT_CLASSIFICATION	1.787921419523678E-8	IMPLEMENTATION
not for internal use	WITHOUT_CLASSIFICATION	0.9964990205740873	WITHOUT_CLASSIFICATION	0.003500979425912761	IMPLEMENTATION
otherwise we only need to flush if there are in-memory changes to the queried tables	WITHOUT_CLASSIFICATION	0.9998582312727282	WITHOUT_CLASSIFICATION	1.4176872727179627E-4	IMPLEMENTATION
might need to run a different filter entirely after the flush because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9984384175499251	WITHOUT_CLASSIFICATION	0.0015615824500749438	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.999990204537561	WITHOUT_CLASSIFICATION	9.795462439049439E-6	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.999990204537561	WITHOUT_CLASSIFICATION	9.795462439049439E-6	IMPLEMENTATION
if it is initialized see if the underlying instance is contained since we need to account for the fact that it might have been evicted	WITHOUT_CLASSIFICATION	0.999999721192404	WITHOUT_CLASSIFICATION	2.7880759592625605E-7	IMPLEMENTATION
basically just an adapted copy of find(criteriaimpl)	WITHOUT_CLASSIFICATION	0.9999925517072794	WITHOUT_CLASSIFICATION	7.448292720566741E-6	IMPLEMENTATION
it is possible for this method to be called during flush processing so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9997608622780028	WITHOUT_CLASSIFICATION	2.3913772199730447E-4	IMPLEMENTATION
nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999942174832857	WITHOUT_CLASSIFICATION	5.782516714407124E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999763688219834	WITHOUT_CLASSIFICATION	2.3631178016617243E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.9999358888231528	WITHOUT_CLASSIFICATION	6.41111768471509E-5	IMPLEMENTATION
we need to writeobject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9995132860240288	WITHOUT_CLASSIFICATION	4.867139759712514E-4	IMPLEMENTATION
the old-time stand-by	WITHOUT_CLASSIFICATION	0.9999749284883974	WITHOUT_CLASSIFICATION	2.5071511602575107E-5	IMPLEMENTATION
parameter bind values	WITHOUT_CLASSIFICATION	0.9999954090542896	WITHOUT_CLASSIFICATION	4.59094571046964E-6	IMPLEMENTATION
parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994416870584696	WITHOUT_CLASSIFICATION	5.583129415304762E-4	IMPLEMENTATION
prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999985830824565	WITHOUT_CLASSIFICATION	1.4169175434765955E-6	IMPLEMENTATION
execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999340263973249	WITHOUT_CLASSIFICATION	6.597360267504866E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999619922099301	WITHOUT_CLASSIFICATION	3.8007790069959383E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999619922099301	WITHOUT_CLASSIFICATION	3.8007790069959383E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999619922099301	WITHOUT_CLASSIFICATION	3.8007790069959383E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999619922099301	WITHOUT_CLASSIFICATION	3.8007790069959383E-5	IMPLEMENTATION
fieldinterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999160751372691	WITHOUT_CLASSIFICATION	8.392486273090075E-5	IMPLEMENTATION
subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999193523438374	WITHOUT_CLASSIFICATION	8.064765616258735E-5	IMPLEMENTATION
let's assume that there is only one lazy fetch group for now!	WITHOUT_CLASSIFICATION	0.9999791961052799	WITHOUT_CLASSIFICATION	2.0803894720111626E-5	IMPLEMENTATION
fieldhandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999160751372691	WITHOUT_CLASSIFICATION	8.392486273090075E-5	IMPLEMENTATION
should not need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9979828325127222	WITHOUT_CLASSIFICATION	0.0020171674872777835	IMPLEMENTATION
should probably no-op commit/rollback here at least in jta scenarios	WITHOUT_CLASSIFICATION	0.9999841100026549	WITHOUT_CLASSIFICATION	1.588999734514574E-5	IMPLEMENTATION
base expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999745116883569	WITHOUT_CLASSIFICATION	2.548831164298984E-5	IMPLEMENTATION
various expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99992855620477	WITHOUT_CLASSIFICATION	7.144379523004562E-5	IMPLEMENTATION
explicitly perform no checking	WITHOUT_CLASSIFICATION	0.9999478419511874	WITHOUT_CLASSIFICATION	5.2158048812695745E-5	IMPLEMENTATION
used from testsuite	WITHOUT_CLASSIFICATION	0.9999921718034023	WITHOUT_CLASSIFICATION	7.82819659773524E-6	IMPLEMENTATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999184150591	WITHOUT_CLASSIFICATION	8.158494098567398E-8	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999672053460105	WITHOUT_CLASSIFICATION	3.2794653989501576E-5	IMPLEMENTATION
register synch stats.connect()	WITHOUT_CLASSIFICATION	0.9999154228484357	WITHOUT_CLASSIFICATION	8.457715156421361E-5	IMPLEMENTATION
noncritical swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9997346260801762	WITHOUT_CLASSIFICATION	2.65373919823866E-4	IMPLEMENTATION
calls executebatch()	WITHOUT_CLASSIFICATION	0.9998926006929911	WITHOUT_CLASSIFICATION	1.0739930700883308E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9998339420664256	WITHOUT_CLASSIFICATION	1.6605793357440151E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9998339420664256	WITHOUT_CLASSIFICATION	1.6605793357440151E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9998339420664256	WITHOUT_CLASSIFICATION	1.6605793357440151E-4	IMPLEMENTATION
sybase driver (jconnect) throwing npe here in certain cases but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999930015039931	WITHOUT_CLASSIFICATION	6.998496006917509E-6	IMPLEMENTATION
see explanation above	WITHOUT_CLASSIFICATION	0.9999904821891971	WITHOUT_CLASSIFICATION	9.517810802867614E-6	IMPLEMENTATION
if we are in the process of releasing no sense checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999999934287669	WITHOUT_CLASSIFICATION	6.571233207130414E-9	IMPLEMENTATION
early exit!!!!	WITHOUT_CLASSIFICATION	0.9999678270911304	WITHOUT_CLASSIFICATION	3.2172908869645454E-5	IMPLEMENTATION
resultset impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999195444428257	WITHOUT_CLASSIFICATION	8.045555717417206E-5	IMPLEMENTATION
resultset impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999195444428257	WITHOUT_CLASSIFICATION	8.045555717417206E-5	IMPLEMENTATION
refer to comment in statefulpersistencecontext.addcollection()	WITHOUT_CLASSIFICATION	0.9999916456506869	WITHOUT_CLASSIFICATION	8.354349313175502E-6	IMPLEMENTATION
connectionmanager.callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997557851506208	WITHOUT_CLASSIFICATION	2.442148493792463E-4	IMPLEMENTATION
note success = false because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.999596532482152	WITHOUT_CLASSIFICATION	4.034675178480646E-4	IMPLEMENTATION
we already have a callback registered either a local (org.hibernate.transaction) transaction has accepted callback responsibilities or we have previously registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999959791149208	WITHOUT_CLASSIFICATION	4.0208850792488164E-6	IMPLEMENTATION
the configured transaction-factory says it only supports local callback mode so no sense attempting to register a jta synchronization	WITHOUT_CLASSIFICATION	0.9998624396846102	WITHOUT_CLASSIFICATION	1.3756031538989931E-4	IMPLEMENTATION
transactions marked for rollback-only cause some tm impls to throw exceptions	WITHOUT_CLASSIFICATION	0.999908144838898	WITHOUT_CLASSIFICATION	9.185516110204217E-5	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999915386938238	WITHOUT_CLASSIFICATION	8.461306176201422E-5	IMPLEMENTATION
postinitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999889442619502	WITHOUT_CLASSIFICATION	1.1055738049771355E-5	IMPLEMENTATION
cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999211175726544	WITHOUT_CLASSIFICATION	7.888242734554688E-5	IMPLEMENTATION
todo for 4.0 private static final logger log = loggerfactory.getlogger( sqlstatementlogger.class ) this is the legacy logging 'category'	WITHOUT_CLASSIFICATION	0.8588997282593801	WITHOUT_CLASSIFICATION	0.14110027174061993	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999224360597005	WITHOUT_CLASSIFICATION	7.756394029943927E-5	IMPLEMENTATION
don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.999939770083145	WITHOUT_CLASSIFICATION	6.022991685492411E-5	IMPLEMENTATION
don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999754018340292	WITHOUT_CLASSIFICATION	2.459816597084872E-5	IMPLEMENTATION
position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999673312640996	WITHOUT_CLASSIFICATION	3.26687359003647E-5	IMPLEMENTATION
sequentially read the result set in reverse until we recognize a change in the key value. at that point we are pointed at the last physical sequential row for the logical row in which we are interested in processing	WITHOUT_CLASSIFICATION	0.9999999978951072	WITHOUT_CLASSIFICATION	2.1048928432322694E-9	IMPLEMENTATION
read backwards until we read past the first physical sequential row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999998615015079	WITHOUT_CLASSIFICATION	1.384984921531084E-7	IMPLEMENTATION
finally read ahead one row to position result set cursor at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999999605200655	WITHOUT_CLASSIFICATION	3.9479934505180434E-8	IMPLEMENTATION
now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999992442700706	WITHOUT_CLASSIFICATION	7.557299294900227E-7	IMPLEMENTATION
force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9997236467494907	WITHOUT_CLASSIFICATION	2.763532505093513E-4	IMPLEMENTATION
this is equivalent to the old behavior	WITHOUT_CLASSIFICATION	0.9999794645660843	WITHOUT_CLASSIFICATION	2.0535433915682396E-5	IMPLEMENTATION
if null owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999995253480233	WITHOUT_CLASSIFICATION	4.746519767064195E-7	IMPLEMENTATION
final string querystring	WITHOUT_CLASSIFICATION	0.9999510046893783	WITHOUT_CLASSIFICATION	4.8995310621725736E-5	IMPLEMENTATION
if it was a reference to self don't need to nullify unless we are using native id generation in which case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999999733712044	WITHOUT_CLASSIFICATION	2.662879568651168E-8	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999707798247234	WITHOUT_CLASSIFICATION	2.92201752766319E-5	IMPLEMENTATION
in an effort to avoid concurrent-modification-exceptions (from potential recursive calls back through here as a result of the eventual call to persistentcollection#endread) we scan the internal loadingcollections map for matches and store those matches in a temp collection. the temp collection is then used to "drive" the #endread processing.	WITHOUT_CLASSIFICATION	0.9999946850331726	WITHOUT_CLASSIFICATION	5.314966827471819E-6	IMPLEMENTATION
we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999753233475016	WITHOUT_CLASSIFICATION	2.467665249844843E-5	IMPLEMENTATION
can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999791569393087	WITHOUT_CLASSIFICATION	2.0843060691302282E-5	IMPLEMENTATION
first we need to suspend any current jta transaction and obtain a jdbc connection	WITHOUT_CLASSIFICATION	0.9873257019532696	WITHOUT_CLASSIFICATION	0.012674298046730469	IMPLEMENTATION
getresultlist(results)	WITHOUT_CLASSIFICATION	0.9999587380234353	WITHOUT_CLASSIFICATION	4.1261976564804205E-5	IMPLEMENTATION
if we only returned one entity query by key is more efficient	WITHOUT_CLASSIFICATION	0.9999795106445767	WITHOUT_CLASSIFICATION	2.048935542333511E-5	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.996916984838606	WITHOUT_CLASSIFICATION	0.003083015161393903	IMPLEMENTATION
handle empty collection	WITHOUT_CLASSIFICATION	0.9919289646645866	WITHOUT_CLASSIFICATION	0.00807103533541337	IMPLEMENTATION
else no collection element but also no owner	WITHOUT_CLASSIFICATION	0.9999952954375465	WITHOUT_CLASSIFICATION	4.7045624534772276E-6	IMPLEMENTATION
handle empty collections	WITHOUT_CLASSIFICATION	0.9957277647570764	WITHOUT_CLASSIFICATION	0.004272235242923588	IMPLEMENTATION
else this is not a collection initializer (and empty collections will be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9998289689831019	WITHOUT_CLASSIFICATION	1.7103101689810678E-4	IMPLEMENTATION
validate() instances of validatable	WITHOUT_CLASSIFICATION	0.9999599633856435	WITHOUT_CLASSIFICATION	4.003661435638768E-5	IMPLEMENTATION
if we know there is exactly 1 row we can skip. it would be great if we could _always_ skip this it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9969033906986782	WITHOUT_CLASSIFICATION	0.0030966093013219107	IMPLEMENTATION
remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999949914426345	WITHOUT_CLASSIFICATION	5.008557365547812E-6	IMPLEMENTATION
null version means the object is in the process of being loaded somewhere else in the resultset	WITHOUT_CLASSIFICATION	0.9999999206490352	WITHOUT_CLASSIFICATION	7.935096475414285E-8	IMPLEMENTATION
problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999682898838415	WITHOUT_CLASSIFICATION	3.171011615855731E-5	IMPLEMENTATION
use the id passed in	WITHOUT_CLASSIFICATION	0.9999658368446707	WITHOUT_CLASSIFICATION	3.4163155329367225E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999954691120736	WITHOUT_CLASSIFICATION	4.530887926454603E-6	IMPLEMENTATION
prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999555086806777	WITHOUT_CLASSIFICATION	4.4491319322193116E-5	IMPLEMENTATION
no point doing this if none was requested	WITHOUT_CLASSIFICATION	0.9999996368830432	WITHOUT_CLASSIFICATION	3.631169568254548E-7	IMPLEMENTATION
if the object is already loaded return the loaded one	WITHOUT_CLASSIFICATION	0.9999996540543894	WITHOUT_CLASSIFICATION	3.459456105797827E-7	IMPLEMENTATION
its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9998004977011012	WITHOUT_CLASSIFICATION	1.9950229889864523E-4	IMPLEMENTATION
cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9990058122214841	WITHOUT_CLASSIFICATION	9.941877785159185E-4	IMPLEMENTATION
the load() which takes an entity does not pass an entityname	WITHOUT_CLASSIFICATION	0.9998538627687984	WITHOUT_CLASSIFICATION	1.461372312015868E-4	IMPLEMENTATION
we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9992599909902212	WITHOUT_CLASSIFICATION	7.400090097787579E-4	IMPLEMENTATION
look for a proxy	WITHOUT_CLASSIFICATION	0.999976876584508	WITHOUT_CLASSIFICATION	2.3123415491967273E-5	IMPLEMENTATION
we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9993146097004492	WITHOUT_CLASSIFICATION	6.85390299550876E-4	IMPLEMENTATION
its the given optional object	WITHOUT_CLASSIFICATION	0.9999903153867081	WITHOUT_CLASSIFICATION	9.684613291887941E-6	IMPLEMENTATION
instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999914912080562	WITHOUT_CLASSIFICATION	8.50879194381362E-6	IMPLEMENTATION
need to hydrate it.	WITHOUT_CLASSIFICATION	0.9970856268130439	WITHOUT_CLASSIFICATION	0.002914373186956122	IMPLEMENTATION
return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999973455069383	WITHOUT_CLASSIFICATION	2.6544930616411915E-6	IMPLEMENTATION
will be ignored using the existing entry instead	WITHOUT_CLASSIFICATION	0.9999603620283156	WITHOUT_CLASSIFICATION	3.9637971684368086E-5	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999588160404	WITHOUT_CLASSIFICATION	4.118395960891775E-8	IMPLEMENTATION
materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999332624179952	WITHOUT_CLASSIFICATION	6.67375820048922E-5	IMPLEMENTATION
get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999914712950607	WITHOUT_CLASSIFICATION	8.528704939296939E-6	IMPLEMENTATION
ok in normal hibernate usage to delete a detached entity jpa however forbids it thus this is a hook for hem to affect this behavior	WITHOUT_CLASSIFICATION	0.9999991649053532	WITHOUT_CLASSIFICATION	8.35094646915833E-7	IMPLEMENTATION
the entry will be removed after the flush and will no longer override the stale snapshot this is now handled by removeentity() in entitydeleteaction persistencecontext.removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.9999905926139829	WITHOUT_CLASSIFICATION	9.407386017167116E-6	IMPLEMENTATION
addinitializedcollection(collection persister id)	WITHOUT_CLASSIFICATION	0.9998586350046437	WITHOUT_CLASSIFICATION	1.4136499535623902E-4	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999847536406584	WITHOUT_CLASSIFICATION	1.5246359341646606E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999847536406584	WITHOUT_CLASSIFICATION	1.5246359341646606E-5	IMPLEMENTATION
|| oj.getjoinable().consumescollectionalias()	WITHOUT_CLASSIFICATION	0.9999210115900659	WITHOUT_CLASSIFICATION	7.898840993413542E-5	IMPLEMENTATION
here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9823984426187677	WITHOUT_CLASSIFICATION	0.017601557381232192	IMPLEMENTATION
code to handle subclasses of topclass	WITHOUT_CLASSIFICATION	0.9997044120034948	WITHOUT_CLASSIFICATION	2.9558799650517367E-4	IMPLEMENTATION
woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999989003113835	WITHOUT_CLASSIFICATION	1.099688616545035E-6	IMPLEMENTATION
we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.999949154498901	WITHOUT_CLASSIFICATION	5.084550109895339E-5	IMPLEMENTATION
we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9998915611694739	WITHOUT_CLASSIFICATION	1.0843883052617341E-4	IMPLEMENTATION
synchronized to avoid multi-thread access issues defined as method synch to avoid potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9997227941642958	WITHOUT_CLASSIFICATION	2.7720583570432994E-4	IMPLEMENTATION
allows various loaders (ok mainly the queryloader ) to check whether scrolling of their result set should be allowed. by default it is allowed.	WITHOUT_CLASSIFICATION	0.9999993094904546	WITHOUT_CLASSIFICATION	6.905095454734192E-7	IMPLEMENTATION
before adding to collection!	WITHOUT_CLASSIFICATION	0.9999568840675154	WITHOUT_CLASSIFICATION	4.311593248461705E-5	IMPLEMENTATION
if the current depth is 0 the root thing being loaded is the many-to-many collection itself. here it is alright to use an inner join	WITHOUT_CLASSIFICATION	0.9999990604552623	WITHOUT_CLASSIFICATION	9.395447376711565E-7	IMPLEMENTATION
operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9998302603133258	WITHOUT_CLASSIFICATION	1.6973968667422903E-4	IMPLEMENTATION
simple because we can't have a one-to-one or a collection (or even a property-ref) in a composite-element	WITHOUT_CLASSIFICATION	0.999991998352965	WITHOUT_CLASSIFICATION	8.001647034948418E-6	IMPLEMENTATION
a composite key	WITHOUT_CLASSIFICATION	0.9999271435503749	WITHOUT_CLASSIFICATION	7.285644962504172E-5	IMPLEMENTATION
if no batch use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9997920114986464	WITHOUT_CLASSIFICATION	2.07988501353653E-4	IMPLEMENTATION
it must be a collection fetch	WITHOUT_CLASSIFICATION	0.999977970133555	WITHOUT_CLASSIFICATION	2.2029866444852164E-5	IMPLEMENTATION
needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.8925625975008448	IMPLEMENTATION	0.10743740249915527	WITHOUT_CLASSIFICATION
&& etype.isreferencetoprimarykey()	WITHOUT_CLASSIFICATION	0.9999171282185977	WITHOUT_CLASSIFICATION	8.287178140239755E-5	IMPLEMENTATION
it might still need to apply a collection ordering based on a many-to-many defined order-by	WITHOUT_CLASSIFICATION	0.9547509352756409	WITHOUT_CLASSIFICATION	0.04524906472435903	IMPLEMENTATION
if a composite key use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching todo unnecessary for databases with ansi-style joins	WITHOUT_CLASSIFICATION	0.6154402450183128	IMPLEMENTATION	0.38455975498168704	WITHOUT_CLASSIFICATION
belong to other persister belong to other persister	WITHOUT_CLASSIFICATION	0.9996563661502531	WITHOUT_CLASSIFICATION	3.4363384974679483E-4	IMPLEMENTATION
we found it	WITHOUT_CLASSIFICATION	0.9999649927535208	WITHOUT_CLASSIFICATION	3.500724647915213E-5	IMPLEMENTATION
we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.999994970161837	WITHOUT_CLASSIFICATION	5.029838163070238E-6	IMPLEMENTATION
disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9997561439506024	WITHOUT_CLASSIFICATION	2.4385604939769693E-4	IMPLEMENTATION
note unlike all other loaders this one is not multithreaded or cacheable!!	WITHOUT_CLASSIFICATION	0.9798331808173931	WITHOUT_CLASSIFICATION	0.020166819182606897	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9995876698006687	WITHOUT_CLASSIFICATION	4.123301993313223E-4	IMPLEMENTATION
root entity comes last	WITHOUT_CLASSIFICATION	0.9999763805627999	WITHOUT_CLASSIFICATION	2.3619437200006906E-5	IMPLEMENTATION
deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999502445329176	WITHOUT_CLASSIFICATION	4.9755467082426624E-5	IMPLEMENTATION
alias may be null early exit	WITHOUT_CLASSIFICATION	0.9999940393313116	WITHOUT_CLASSIFICATION	5.960668688291984E-6	IMPLEMENTATION
if it is a compound path	WITHOUT_CLASSIFICATION	0.9999977251833707	WITHOUT_CLASSIFICATION	2.274816629222962E-6	IMPLEMENTATION
otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9995033620052198	WITHOUT_CLASSIFICATION	4.966379947800809E-4	IMPLEMENTATION
if its the root criteria we are done	WITHOUT_CLASSIFICATION	0.9999977705587076	WITHOUT_CLASSIFICATION	2.2294412924154392E-6	IMPLEMENTATION
otherwise recurse	WITHOUT_CLASSIFICATION	0.9994416227947092	WITHOUT_CLASSIFICATION	5.583772052908691E-4	IMPLEMENTATION
the criteria instance	WITHOUT_CLASSIFICATION	0.9999906825950435	WITHOUT_CLASSIFICATION	9.317404956425044E-6	IMPLEMENTATION
the entity name	WITHOUT_CLASSIFICATION	0.9999736911822908	WITHOUT_CLASSIFICATION	2.6308817709069377E-5	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9997877148970846	WITHOUT_CLASSIFICATION	2.12285102915329E-4	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9997877148970846	WITHOUT_CLASSIFICATION	2.12285102915329E-4	IMPLEMENTATION
it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999956095065468	WITHOUT_CLASSIFICATION	4.390493453182706E-6	IMPLEMENTATION
should never happen i think	WITHOUT_CLASSIFICATION	0.9976337474070663	WITHOUT_CLASSIFICATION	0.002366252592933702	IMPLEMENTATION
detect discriminator values	WITHOUT_CLASSIFICATION	0.9999825935170213	WITHOUT_CLASSIFICATION	1.7406482978729926E-5	IMPLEMENTATION
convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9998994965008035	WITHOUT_CLASSIFICATION	1.005034991965441E-4	IMPLEMENTATION
and the qualifier is not the alias of this criteria -> check to see if we belong to some criteria other than the one that created us	WITHOUT_CLASSIFICATION	0.9999002327132371	WITHOUT_CLASSIFICATION	9.976728676285883E-5	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999921749112479	WITHOUT_CLASSIFICATION	7.82508875211065E-6	IMPLEMENTATION
otherwise this is an ordinary value.	WITHOUT_CLASSIFICATION	0.999942318382323	WITHOUT_CLASSIFICATION	5.7681617677031266E-5	IMPLEMENTATION
currently not cachable if autodiscover types is in effect (e.g. "select ")	WITHOUT_CLASSIFICATION	0.9999964254296837	WITHOUT_CLASSIFICATION	3.5745703162702352E-6	IMPLEMENTATION
private final string[] sqlaliases private final string[] sqlaliassuffixes	WITHOUT_CLASSIFICATION	0.9999435572487051	WITHOUT_CLASSIFICATION	5.644275129499006E-5	IMPLEMENTATION
this is only needed (afaict) for resulttransformer processing	WITHOUT_CLASSIFICATION	0.8313030148021257	WITHOUT_CLASSIFICATION	0.1686969851978743	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.999999775999029	WITHOUT_CLASSIFICATION	2.2400097096248197E-7	IMPLEMENTATION
build an array with indices equal to the total number of actual returns in the result hibernate will return for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999997146217448	WITHOUT_CLASSIFICATION	2.853782553046615E-7	IMPLEMENTATION
replace {.} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9965185565819206	WITHOUT_CLASSIFICATION	0.003481443418079366	IMPLEMENTATION
no additional open braces found in the string append the rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999931660228727	WITHOUT_CLASSIFICATION	6.833977127222429E-6	IMPLEMENTATION
apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9997539126728106	WITHOUT_CLASSIFICATION	2.4608732718945915E-4	IMPLEMENTATION
it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.999991629246724	WITHOUT_CLASSIFICATION	8.370753275939496E-6	IMPLEMENTATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9184265270863003	IMPLEMENTATION	0.08157347291369961	WITHOUT_CLASSIFICATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9184265270863003	IMPLEMENTATION	0.08157347291369961	WITHOUT_CLASSIFICATION
the current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999533393266082	WITHOUT_CLASSIFICATION	4.666067339188468E-5	IMPLEMENTATION
it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999964493953831	WITHOUT_CLASSIFICATION	3.5506046168844707E-6	IMPLEMENTATION
possibly handle something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9996120317469168	WITHOUT_CLASSIFICATION	3.8796825308318303E-4	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999410471201802	WITHOUT_CLASSIFICATION	5.89528798198897E-5	IMPLEMENTATION
private final list persisters = new arraylist()	WITHOUT_CLASSIFICATION	0.999973661058327	WITHOUT_CLASSIFICATION	2.6338941673008827E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999672053460105	WITHOUT_CLASSIFICATION	3.2794653989501576E-5	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999859299150774	WITHOUT_CLASSIFICATION	1.4070084922667056E-5	IMPLEMENTATION
private final list scalartypes = new arraylist() private final list scalarcolumnaliases = new arraylist()	WITHOUT_CLASSIFICATION	0.999973661058327	WITHOUT_CLASSIFICATION	2.6338941673008827E-5	IMPLEMENTATION
now process the returns	WITHOUT_CLASSIFICATION	0.9999739485167947	WITHOUT_CLASSIFICATION	2.605148320539494E-5	IMPLEMENTATION
private list collectionowneraliases = new arraylist() private list collectionaliases = new arraylist() private list collectionpersisters = new arraylist() private list collectionresults = new arraylist()	WITHOUT_CLASSIFICATION	0.9999847596520951	WITHOUT_CLASSIFICATION	1.5240347904909669E-5	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999521147605318	WITHOUT_CLASSIFICATION	4.788523946817479E-5	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999521147605318	WITHOUT_CLASSIFICATION	4.788523946817479E-5	IMPLEMENTATION
make sure the owner alias is known	WITHOUT_CLASSIFICATION	0.9999823703939844	WITHOUT_CLASSIFICATION	1.76296060155967E-5	IMPLEMENTATION
first break down the returns into maps keyed by alias so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999124539127997	WITHOUT_CLASSIFICATION	8.754608720023035E-5	IMPLEMENTATION
scalarcolumnaliases.add( typereturn.getcolumnalias() ) scalartypes.add( typereturn.gettype() )	WITHOUT_CLASSIFICATION	0.999873606476193	WITHOUT_CLASSIFICATION	1.2639352380700602E-4	IMPLEMENTATION
if this return's alias has not been processed yet do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9998198641869571	WITHOUT_CLASSIFICATION	1.801358130428776E-4	IMPLEMENTATION
collectionowneraliases.add( owneralias )	WITHOUT_CLASSIFICATION	0.999873606476193	WITHOUT_CLASSIFICATION	1.2639352380700602E-4	IMPLEMENTATION
for merging of versioned entities we consider the version having been changed only when 1) the two version values are different and 2) the target actually represents database state! this second condition is a special case which allows an entity to be merged during the same transaction (though during a seperate operation) in which it was originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999999999833088	WITHOUT_CLASSIFICATION	1.669121116915087E-11	IMPLEMENTATION
this is the second pass through on a merge op so here we limit the replacement to associations types (value types were already replaced during the first pass)	WITHOUT_CLASSIFICATION	0.999845412517201	WITHOUT_CLASSIFICATION	1.5458748279907766E-4	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999906346434781	WITHOUT_CLASSIFICATION	9.365356521917124E-6	IMPLEMENTATION
cascade-save to collections after the collection owner was saved	WITHOUT_CLASSIFICATION	0.999994861086706	WITHOUT_CLASSIFICATION	5.138913294012244E-6	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9994282338550403	WITHOUT_CLASSIFICATION	5.717661449596937E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999392749331697	WITHOUT_CLASSIFICATION	6.0725066830194176E-5	IMPLEMENTATION
currently only the hibernate-supplied dbtimestamptype is supported here	WITHOUT_CLASSIFICATION	0.999998630554287	WITHOUT_CLASSIFICATION	1.3694457130576091E-6	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.999872187181652	WITHOUT_CLASSIFICATION	1.2781281834805058E-4	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9996342710176582	WITHOUT_CLASSIFICATION	3.6572898234180675E-4	IMPLEMENTATION
not so sure this is even valid subtree. but if it was it'd represent two unrelated table references	WITHOUT_CLASSIFICATION	0.9999991090281835	WITHOUT_CLASSIFICATION	8.909718166487865E-7	IMPLEMENTATION
(not (gt a b) ) => (le a b)	WITHOUT_CLASSIFICATION	0.9999899858321947	WITHOUT_CLASSIFICATION	1.0014167805441396E-5	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.999983533685045	WITHOUT_CLASSIFICATION	1.646631495502292E-5	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998087111612879	WITHOUT_CLASSIFICATION	1.9128883871214427E-4	IMPLEMENTATION
sqlresulttypes = selectclause.getsqlresulttypes()	WITHOUT_CLASSIFICATION	0.9998389885152281	WITHOUT_CLASSIFICATION	1.6101148477183535E-4	IMPLEMENTATION
by default	WITHOUT_CLASSIFICATION	0.9999986750659905	WITHOUT_CLASSIFICATION	1.3249340095195802E-6	IMPLEMENTATION
this is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.999996222232426	WITHOUT_CLASSIFICATION	3.7777675739243858E-6	IMPLEMENTATION
-- loader implementation --	WITHOUT_CLASSIFICATION	0.9999388529266208	WITHOUT_CLASSIFICATION	6.114707337920788E-5	IMPLEMENTATION
-- loader overrides --	WITHOUT_CLASSIFICATION	0.9999813121474713	WITHOUT_CLASSIFICATION	1.8687852528758698E-5	IMPLEMENTATION
(not (is_null a b) ) => (is_not_null a b)	WITHOUT_CLASSIFICATION	0.999979456608781	WITHOUT_CLASSIFICATION	2.054339121908231E-5	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.999348365600417	WITHOUT_CLASSIFICATION	6.516343995830597E-4	IMPLEMENTATION
meant to handle dynamic instantiation queries	WITHOUT_CLASSIFICATION	0.9997116445706625	WITHOUT_CLASSIFICATION	2.8835542933753835E-4	IMPLEMENTATION
--- query translator methods ---	WITHOUT_CLASSIFICATION	0.9999550865188348	WITHOUT_CLASSIFICATION	4.491348116523032E-5	IMPLEMENTATION
-- implementation private methods --	WITHOUT_CLASSIFICATION	0.9999592303058226	WITHOUT_CLASSIFICATION	4.076969417744615E-5	IMPLEMENTATION
deduplicate unique constraints sharing the same columns this is needed by hibernate annotations since it creates automagically unique constraints for the user	WITHOUT_CLASSIFICATION	0.9969928198263781	WITHOUT_CLASSIFICATION	0.003007180173621918	IMPLEMENTATION
try to find out the name of the primary key to create it as identity if the identitygenerator is used	WITHOUT_CLASSIFICATION	0.9999995131540657	WITHOUT_CLASSIFICATION	4.868459343350491E-7	IMPLEMENTATION
to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9989287192875764	WITHOUT_CLASSIFICATION	0.0010712807124236422	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999996979600847	WITHOUT_CLASSIFICATION	3.0203991520175174E-7	IMPLEMENTATION
used also for generation of fk names!	WITHOUT_CLASSIFICATION	0.9999798809029105	WITHOUT_CLASSIFICATION	2.0119097089570617E-5	IMPLEMENTATION
usually useless	WITHOUT_CLASSIFICATION	0.999932820166776	WITHOUT_CLASSIFICATION	6.717983322404079E-5	IMPLEMENTATION
added this caching as i noticed that gettype() is being called multiple times	WITHOUT_CLASSIFICATION	0.9999172645435079	WITHOUT_CLASSIFICATION	8.27354564920808E-5	IMPLEMENTATION
do not add unique constraint on db not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9823749440146836	WITHOUT_CLASSIFICATION	0.017625055985316475	IMPLEMENTATION
for backward compatibility disable this	WITHOUT_CLASSIFICATION	0.9998277901412662	WITHOUT_CLASSIFICATION	1.7220985873377776E-4	IMPLEMENTATION
may be final may be final may be final	WITHOUT_CLASSIFICATION	0.9997775123720585	WITHOUT_CLASSIFICATION	2.224876279415511E-4	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9998461582790987	WITHOUT_CLASSIFICATION	1.5384172090126424E-4	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9998461582790987	WITHOUT_CLASSIFICATION	1.5384172090126424E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.999992431664391	WITHOUT_CLASSIFICATION	7.56833560887261E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999839206764288	WITHOUT_CLASSIFICATION	1.6079323571190234E-5	IMPLEMENTATION
the root of the incoming property path matched one of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9996267058205676	WITHOUT_CLASSIFICATION	3.732941794324787E-4	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999813923037822	WITHOUT_CLASSIFICATION	1.8607696217748173E-5	IMPLEMENTATION
flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999162835454654	WITHOUT_CLASSIFICATION	8.371645453459026E-5	IMPLEMENTATION
an identifier mapper => getkey will be included in the getnonduplicatedpropertyiterator() and checked later so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999993486380763	WITHOUT_CLASSIFICATION	6.513619237715684E-7	IMPLEMENTATION
if the hibernate-mapping did not specify a schema/catalog use the defaults specified by properties - but note that if the schema/catalog were specified in hibernate-mapping or as params they will already be initialized and will override the values set here (they are in identifiergeneratorproperties)	WITHOUT_CLASSIFICATION	0.9999978395299234	WITHOUT_CLASSIFICATION	2.1604700766369647E-6	IMPLEMENTATION
pass the entity-name if not a collection-id	WITHOUT_CLASSIFICATION	0.9993841161777478	WITHOUT_CLASSIFICATION	6.158838222522044E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.999992431664391	WITHOUT_CLASSIFICATION	7.56833560887261E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999839206764288	WITHOUT_CLASSIFICATION	1.6079323571190234E-5	IMPLEMENTATION
pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9995957260460692	WITHOUT_CLASSIFICATION	4.04273953930913E-4	IMPLEMENTATION
needed to satisfy keyvalue	WITHOUT_CLASSIFICATION	0.5871685049873986	WITHOUT_CLASSIFICATION	0.41283149501260136	IMPLEMENTATION
empty means no scoping	WITHOUT_CLASSIFICATION	0.9997959419396132	WITHOUT_CLASSIFICATION	2.0405806038685737E-4	IMPLEMENTATION
index should be last column listed	WITHOUT_CLASSIFICATION	0.9997550142876428	WITHOUT_CLASSIFICATION	2.4498571235709657E-4	IMPLEMENTATION
if it is a formula index use the element columns in the pk	WITHOUT_CLASSIFICATION	0.9999998734023448	WITHOUT_CLASSIFICATION	1.265976552454896E-7	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns	WITHOUT_CLASSIFICATION	0.9991502439240316	WITHOUT_CLASSIFICATION	8.497560759683387E-4	IMPLEMENTATION
arraylist list = new arraylist()list.addall( getkey().getconstraintcolumns() )list.addall( getindex().getconstraintcolumns() )getcollectiontable().createuniquekey(list)	WITHOUT_CLASSIFICATION	0.999963438463099	WITHOUT_CLASSIFICATION	3.656153690096629E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999570543238127	WITHOUT_CLASSIFICATION	4.2945676187422864E-5	IMPLEMENTATION
no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999948966558615	WITHOUT_CLASSIFICATION	5.1033441384983465E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.8828347224640675	WITHOUT_CLASSIFICATION	0.11716527753593256	IMPLEMENTATION
the case of a foreign key to something other than the pk is handled in createpropertyrefconstraints	WITHOUT_CLASSIFICATION	0.9999946046347301	WITHOUT_CLASSIFICATION	5.395365269936246E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.8828347224640675	WITHOUT_CLASSIFICATION	0.11716527753593256	IMPLEMENTATION
if the property mapping consists of all formulas make it non-updateable	WITHOUT_CLASSIFICATION	0.9999583431941202	WITHOUT_CLASSIFICATION	4.1656805879794085E-5	IMPLEMENTATION
columnupdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999210115900659	WITHOUT_CLASSIFICATION	7.898840993413542E-5	IMPLEMENTATION
if the property mapping consists of all formulas make it insertable	WITHOUT_CLASSIFICATION	0.9999583431941202	WITHOUT_CLASSIFICATION	4.1656805879794085E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999622306808069	WITHOUT_CLASSIFICATION	3.776931919297337E-5	IMPLEMENTATION
expected type is intrinsic here	WITHOUT_CLASSIFICATION	0.9999498980429306	WITHOUT_CLASSIFICATION	5.0101957069438756E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999570543238127	WITHOUT_CLASSIFICATION	4.2945676187422864E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999570543238127	WITHOUT_CLASSIFICATION	4.2945676187422864E-5	IMPLEMENTATION
return memberpersister.getpropertytype(propertyname)	WITHOUT_CLASSIFICATION	0.9999559614244578	WITHOUT_CLASSIFICATION	4.40385755422852E-5	IMPLEMENTATION
return memberpersister.tocolumns(alias propertyname)	WITHOUT_CLASSIFICATION	0.9999560862061788	WITHOUT_CLASSIFICATION	4.3913793821122576E-5	IMPLEMENTATION
return memberpersister.gettype()	WITHOUT_CLASSIFICATION	0.9999559614244578	WITHOUT_CLASSIFICATION	4.40385755422852E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999426997883326	WITHOUT_CLASSIFICATION	5.7300211667389064E-5	IMPLEMENTATION
return !isonetomany()	WITHOUT_CLASSIFICATION	0.9999785325124	WITHOUT_CLASSIFICATION	2.146748760006849E-5	IMPLEMENTATION
instanceof associationtype	WITHOUT_CLASSIFICATION	0.9999593169520695	WITHOUT_CLASSIFICATION	4.0683047930589E-5	IMPLEMENTATION
we need to determine the best way to know that two joinables represent a single many-to-many	WITHOUT_CLASSIFICATION	0.9629063120429965	WITHOUT_CLASSIFICATION	0.03709368795700356	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9999506469768867	WITHOUT_CLASSIFICATION	4.9353023113278605E-5	IMPLEMENTATION
public boolean issubselectloadable()	WITHOUT_CLASSIFICATION	0.9999912228816771	WITHOUT_CLASSIFICATION	8.777118322893717E-6	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999810865112229	WITHOUT_CLASSIFICATION	1.8913488777114994E-5	IMPLEMENTATION
columns	WITHOUT_CLASSIFICATION	0.9999961341199087	WITHOUT_CLASSIFICATION	3.865880091222844E-6	IMPLEMENTATION
sql statements	WITHOUT_CLASSIFICATION	0.9999781621416747	WITHOUT_CLASSIFICATION	2.18378583253928E-5	IMPLEMENTATION
extra information about the element type	WITHOUT_CLASSIFICATION	0.999997108448867	WITHOUT_CLASSIFICATION	2.8915511330266956E-6	IMPLEMENTATION
types	WITHOUT_CLASSIFICATION	0.9999391774122433	WITHOUT_CLASSIFICATION	6.082258775680076E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.999992431664391	WITHOUT_CLASSIFICATION	7.56833560887261E-6	IMPLEMENTATION
private final string unquotedidentifiercolumnname	WITHOUT_CLASSIFICATION	0.999959889706456	WITHOUT_CLASSIFICATION	4.011029354397962E-5	IMPLEMENTATION
dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999812716995878	WITHOUT_CLASSIFICATION	1.872830041217994E-5	IMPLEMENTATION
dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999761127007304	WITHOUT_CLASSIFICATION	2.3887299269700076E-5	IMPLEMENTATION
nativesql collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9998827121265765	WITHOUT_CLASSIFICATION	1.1728787342344615E-4	IMPLEMENTATION
unquotedkeycolumnnames = stringhelper.unquote(keycolumnaliases)	WITHOUT_CLASSIFICATION	0.9998389885152281	WITHOUT_CLASSIFICATION	1.6101148477183535E-4	IMPLEMENTATION
element	WITHOUT_CLASSIFICATION	0.9999923485068283	WITHOUT_CLASSIFICATION	7.651493171688885E-6	IMPLEMENTATION
nativesql collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999525481551444	WITHOUT_CLASSIFICATION	4.745184485559528E-5	IMPLEMENTATION
index and row select	WITHOUT_CLASSIFICATION	0.9998801343740024	WITHOUT_CLASSIFICATION	1.1986562599754043E-4	IMPLEMENTATION
nativesql collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9994688013548315	WITHOUT_CLASSIFICATION	5.311986451685089E-4	IMPLEMENTATION
unquotedidentifiercolumnname = identifiercolumnalias	WITHOUT_CLASSIFICATION	0.9998389885152281	WITHOUT_CLASSIFICATION	1.6101148477183535E-4	IMPLEMENTATION
unquotedidentifiercolumnname = null	WITHOUT_CLASSIFICATION	0.9999440569051583	WITHOUT_CLASSIFICATION	5.59430948417581E-5	IMPLEMENTATION
generate the sql	WITHOUT_CLASSIFICATION	0.9999921100964826	WITHOUT_CLASSIFICATION	7.889903517370711E-6	IMPLEMENTATION
for non-arrays we don't need to know the element class elementtype.returnedclass()	WITHOUT_CLASSIFICATION	0.9986575152998488	WITHOUT_CLASSIFICATION	0.0013424847001512483	IMPLEMENTATION
not all classpersisters implement propertymapping!	WITHOUT_CLASSIFICATION	0.625042742163686	WITHOUT_CLASSIFICATION	0.37495725783631395	IMPLEMENTATION
handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9994734126700267	WITHOUT_CLASSIFICATION	5.26587329973352E-4	IMPLEMENTATION
handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9998026690245126	WITHOUT_CLASSIFICATION	1.9733097548738605E-4	IMPLEMENTATION
if there is a user-specified loader return that todo filters!?	WITHOUT_CLASSIFICATION	0.9455391873504525	WITHOUT_CLASSIFICATION	0.054460812649547406	IMPLEMENTATION
take care of any entities that might have been evicted!	WITHOUT_CLASSIFICATION	0.9998970677808527	WITHOUT_CLASSIFICATION	1.0293221914726035E-4	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9999506469768867	WITHOUT_CLASSIFICATION	4.9353023113278605E-5	IMPLEMENTATION
run a subquery loader	WITHOUT_CLASSIFICATION	0.9999797957331981	WITHOUT_CLASSIFICATION	2.020426680195229E-5	IMPLEMENTATION
needed by arrays	WITHOUT_CLASSIFICATION	0.718182506875253	WITHOUT_CLASSIFICATION	0.281817493124747	IMPLEMENTATION
todo something with formulas	WITHOUT_CLASSIFICATION	0.5522125798653565	WITHOUT_CLASSIFICATION	0.44778742013464334	IMPLEMENTATION
an assertion	WITHOUT_CLASSIFICATION	0.9999897608982452	WITHOUT_CLASSIFICATION	1.0239101754742966E-5	IMPLEMENTATION
remove all the old entries	WITHOUT_CLASSIFICATION	0.9999980799873255	WITHOUT_CLASSIFICATION	1.9200126745066306E-6	IMPLEMENTATION
create all the new entries	WITHOUT_CLASSIFICATION	0.9999879750502021	WITHOUT_CLASSIFICATION	1.2024949797797434E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999426997883326	WITHOUT_CLASSIFICATION	5.7300211667389064E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999426997883326	WITHOUT_CLASSIFICATION	5.7300211667389064E-5	IMPLEMENTATION
delete all the deleted entries	WITHOUT_CLASSIFICATION	0.999931758037446	WITHOUT_CLASSIFICATION	6.824196255397305E-5	IMPLEMENTATION
insert all the new entries	WITHOUT_CLASSIFICATION	0.999987427660099	WITHOUT_CLASSIFICATION	1.2572339901073122E-5	IMPLEMENTATION
==elementtype ??	WITHOUT_CLASSIFICATION	0.9992968369100835	WITHOUT_CLASSIFICATION	7.031630899164501E-4	IMPLEMENTATION
update all the modified entries	WITHOUT_CLASSIFICATION	0.9999646082161477	WITHOUT_CLASSIFICATION	3.539178385224654E-5	IMPLEMENTATION
identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9996926100905711	WITHOUT_CLASSIFICATION	3.073899094288737E-4	IMPLEMENTATION
update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999402178720579	WITHOUT_CLASSIFICATION	5.978212794217592E-5	IMPLEMENTATION
will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999772607700183	WITHOUT_CLASSIFICATION	2.2739229981713686E-5	IMPLEMENTATION
now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999997538546855	WITHOUT_CLASSIFICATION	2.461453144072428E-7	IMPLEMENTATION
buf.append( selectfragment( lhsalias "" ) )ignore suffix for collection columns!	WITHOUT_CLASSIFICATION	0.9999411415559382	WITHOUT_CLASSIFICATION	5.885844406194098E-5	IMPLEMENTATION
use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999940401098535	WITHOUT_CLASSIFICATION	5.959890146577585E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999950518311886	WITHOUT_CLASSIFICATION	4.948168811329056E-6	IMPLEMENTATION
private final string roottablename	WITHOUT_CLASSIFICATION	0.999959889706456	WITHOUT_CLASSIFICATION	4.011029354397962E-5	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9999034034484556	WITHOUT_CLASSIFICATION	9.659655154439164E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.999992431664391	WITHOUT_CLASSIFICATION	7.56833560887261E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999950518311886	WITHOUT_CLASSIFICATION	4.948168811329056E-6	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999925278898713	WITHOUT_CLASSIFICATION	7.472110128676423E-6	IMPLEMENTATION
this could also just be true all the time	WITHOUT_CLASSIFICATION	0.9999923085047625	WITHOUT_CLASSIFICATION	7.691495237588853E-6	IMPLEMENTATION
chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999857191902112	WITHOUT_CLASSIFICATION	1.4280809788952854E-5	IMPLEMENTATION
todo check this.	WITHOUT_CLASSIFICATION	0.6578907266237526	IMPLEMENTATION	0.3421092733762475	WITHOUT_CLASSIFICATION
initialization	WITHOUT_CLASSIFICATION	0.9999034034484556	WITHOUT_CLASSIFICATION	9.659655154439164E-5	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9999196437781478	WITHOUT_CLASSIFICATION	8.035622185229775E-5	IMPLEMENTATION
the closure of all properties in the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999963555755432	WITHOUT_CLASSIFICATION	3.6444244568113487E-6	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999992283145144	WITHOUT_CLASSIFICATION	7.716854856427636E-7	IMPLEMENTATION
subclass discrimination works by assigning particular values to certain combinations of null primary key values in the outer join using an sql case	WITHOUT_CLASSIFICATION	0.9999999996439399	WITHOUT_CLASSIFICATION	3.560601008656109E-10	IMPLEMENTATION
multitables	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.999992431664391	WITHOUT_CLASSIFICATION	7.56833560887261E-6	IMPLEMENTATION
subclass closure properties	WITHOUT_CLASSIFICATION	0.9999365984729774	WITHOUT_CLASSIFICATION	6.340152702262683E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999826145564068	WITHOUT_CLASSIFICATION	1.7385443593278585E-5	IMPLEMENTATION
( (column) model.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999617807392921	WITHOUT_CLASSIFICATION	3.8219260707896373E-5	IMPLEMENTATION
( (column) sc.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999617807392921	WITHOUT_CLASSIFICATION	3.8219260707896373E-5	IMPLEMENTATION
don't need subclass tables because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9998912524010066	WITHOUT_CLASSIFICATION	1.08747598993368E-4	IMPLEMENTATION
special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9929877614739144	WITHOUT_CLASSIFICATION	0.0070122385260855714	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999950518311886	WITHOUT_CLASSIFICATION	4.948168811329056E-6	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9999196437781478	WITHOUT_CLASSIFICATION	8.035622185229775E-5	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999992283145144	WITHOUT_CLASSIFICATION	7.716854856427636E-7	IMPLEMENTATION
get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999810634448956	WITHOUT_CLASSIFICATION	1.8936555104496982E-5	IMPLEMENTATION
now look up the object we are really interested in! (this lets us correctly handle proxies and multi-row or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999915654405859	WITHOUT_CLASSIFICATION	8.434559414129861E-6	IMPLEMENTATION
discriminator column	WITHOUT_CLASSIFICATION	0.9999217587485401	WITHOUT_CLASSIFICATION	7.824125146003373E-5	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9999034034484556	WITHOUT_CLASSIFICATION	9.659655154439164E-5	IMPLEMENTATION
private final map propertytablenumbersbyname = new hashmap()	WITHOUT_CLASSIFICATION	0.999901629360183	WITHOUT_CLASSIFICATION	9.837063981688604E-5	IMPLEMENTATION
class + table	WITHOUT_CLASSIFICATION	0.9999907422146496	WITHOUT_CLASSIFICATION	9.257785350455235E-6	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999414789935697	WITHOUT_CLASSIFICATION	5.852100643030209E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999622946556224	WITHOUT_CLASSIFICATION	3.770534437763926E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999826145564068	WITHOUT_CLASSIFICATION	1.7385443593278585E-5	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999925278898713	WITHOUT_CLASSIFICATION	7.472110128676423E-6	IMPLEMENTATION
joins	WITHOUT_CLASSIFICATION	0.9999791723082267	WITHOUT_CLASSIFICATION	2.0827691773259985E-5	IMPLEMENTATION
propertytablenumbersbyname.put( prop.getname() join )	WITHOUT_CLASSIFICATION	0.9999056570202648	WITHOUT_CLASSIFICATION	9.43429797352587E-5	IMPLEMENTATION
access cached sql	WITHOUT_CLASSIFICATION	0.9999505307824176	WITHOUT_CLASSIFICATION	4.946921758235706E-5	IMPLEMENTATION
figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9981760725375769	WITHOUT_CLASSIFICATION	0.0018239274624230314	IMPLEMENTATION
figure out which columns are needed	WITHOUT_CLASSIFICATION	0.8783127344757704	WITHOUT_CLASSIFICATION	0.12168726552422958	IMPLEMENTATION
figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.5726728416991179	WITHOUT_CLASSIFICATION	0.42732715830088197	IMPLEMENTATION
render the sql	WITHOUT_CLASSIFICATION	0.9999865773768852	WITHOUT_CLASSIFICATION	1.3422623114684978E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999622306808069	WITHOUT_CLASSIFICATION	3.776931919297337E-5	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999812652767256	WITHOUT_CLASSIFICATION	1.873472327444191E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
the optional sql string defined in the where attribute	WITHOUT_CLASSIFICATION	0.999995832321792	WITHOUT_CLASSIFICATION	4.1676782079591566E-6	IMPLEMENTATION
information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999903277576786	WITHOUT_CLASSIFICATION	9.672242321338456E-6	IMPLEMENTATION
information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999990055310188	WITHOUT_CLASSIFICATION	9.94468981230283E-7	IMPLEMENTATION
information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999994508636908	WITHOUT_CLASSIFICATION	5.491363091773014E-7	IMPLEMENTATION
dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999645579951503	WITHOUT_CLASSIFICATION	3.54420048496975E-5	IMPLEMENTATION
sql strings	WITHOUT_CLASSIFICATION	0.9999498217044208	WITHOUT_CLASSIFICATION	5.017829557925032E-5	IMPLEMENTATION
for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999951817853896	WITHOUT_CLASSIFICATION	4.818214610344981E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999622946556224	WITHOUT_CLASSIFICATION	3.770534437763926E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
identifier	WITHOUT_CLASSIFICATION	0.9999757302779223	WITHOUT_CLASSIFICATION	2.4269722077611528E-5	IMPLEMENTATION
version	WITHOUT_CLASSIFICATION	0.9999563823287514	WITHOUT_CLASSIFICATION	4.3617671248608366E-5	IMPLEMENTATION
where string	WITHOUT_CLASSIFICATION	0.9998947852587622	WITHOUT_CLASSIFICATION	1.052147412378336E-4	IMPLEMENTATION
subclass property closure	WITHOUT_CLASSIFICATION	0.9999617919300339	WITHOUT_CLASSIFICATION	3.820806996612056E-5	IMPLEMENTATION
before add -)	WITHOUT_CLASSIFICATION	0.9999315640172829	WITHOUT_CLASSIFICATION	6.843598271710458E-5	IMPLEMENTATION
handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.999950094846289	WITHOUT_CLASSIFICATION	4.9905153710921945E-5	IMPLEMENTATION
only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999649445642991	WITHOUT_CLASSIFICATION	3.505543570099801E-5	IMPLEMENTATION
note early exit here	WITHOUT_CLASSIFICATION	0.9999245485763333	WITHOUT_CLASSIFICATION	7.545142366679271E-5	IMPLEMENTATION
object have been loaded with setreadonly(true) hhh-2236	WITHOUT_CLASSIFICATION	0.9999700437207143	WITHOUT_CLASSIFICATION	2.995627928569478E-5	IMPLEMENTATION
note this assumes something about how propertyselectfragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9927592623720212	WITHOUT_CLASSIFICATION	0.007240737627978853	IMPLEMENTATION
strip leading " "	WITHOUT_CLASSIFICATION	0.9999294938322689	WITHOUT_CLASSIFICATION	7.050616773110291E-5	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999996707625423	WITHOUT_CLASSIFICATION	3.292374577485161E-7	IMPLEMENTATION
otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9993631393396106	WITHOUT_CLASSIFICATION	6.36860660389411E-4	IMPLEMENTATION
null owner ok??	WITHOUT_CLASSIFICATION	0.9999878801753525	WITHOUT_CLASSIFICATION	1.21198246475944E-5	IMPLEMENTATION
null sql means that the only lazy properties are shared pk one-to-one associations which are handled differently in the type#nullsafeget code	WITHOUT_CLASSIFICATION	0.9999996595040409	WITHOUT_CLASSIFICATION	3.4049595900242867E-7	IMPLEMENTATION
create a new from node for the referenced class.	WITHOUT_CLASSIFICATION	0.999997940615375	WITHOUT_CLASSIFICATION	2.0593846250422425E-6	IMPLEMENTATION
the difficulty here is exactly what do we update in order to force the version to be incremented in the db	WITHOUT_CLASSIFICATION	0.9995217368910432	WITHOUT_CLASSIFICATION	4.782631089568558E-4	IMPLEMENTATION
performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9998779498900566	WITHOUT_CLASSIFICATION	1.2205010994332563E-4	IMPLEMENTATION
properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9988956684380343	WITHOUT_CLASSIFICATION	0.001104331561965672	IMPLEMENTATION
enable for hhh-440 which we don't like	WITHOUT_CLASSIFICATION	0.9995384928978746	WITHOUT_CLASSIFICATION	4.6150710212539446E-4	IMPLEMENTATION
aliases	WITHOUT_CLASSIFICATION	0.999980371024968	WITHOUT_CLASSIFICATION	1.9628975032055226E-5	IMPLEMENTATION
aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999664120021554	WITHOUT_CLASSIFICATION	3.358799784467769E-5	IMPLEMENTATION
aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999854272482963	WITHOUT_CLASSIFICATION	1.457275170376224E-5	IMPLEMENTATION
fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999980593784896	WITHOUT_CLASSIFICATION	1.9406215103907833E-6	IMPLEMENTATION
embedded composite ids ( alias.idname1 alias.idname2 )	WITHOUT_CLASSIFICATION	0.9998622849750791	WITHOUT_CLASSIFICATION	1.3771502492076836E-4	IMPLEMENTATION
todo skip formulas?	WITHOUT_CLASSIFICATION	0.5915599560759215	IMPLEMENTATION	0.4084400439240785	WITHOUT_CLASSIFICATION
don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9996392128159501	WITHOUT_CLASSIFICATION	3.6078718404992764E-4	IMPLEMENTATION
do two passes for collection property-ref!	WITHOUT_CLASSIFICATION	0.9996714239802388	WITHOUT_CLASSIFICATION	3.285760197611816E-4	IMPLEMENTATION
select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999897985364131	WITHOUT_CLASSIFICATION	1.020146358682741E-5	IMPLEMENTATION
todo eventually rowidname[j]	WITHOUT_CLASSIFICATION	0.5836199306671949	WITHOUT_CLASSIFICATION	0.4163800693328052	IMPLEMENTATION
this is a property of the table which we are updating	WITHOUT_CLASSIFICATION	0.9999934212705324	WITHOUT_CLASSIFICATION	6.578729467617571E-6	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.999870980150035	WITHOUT_CLASSIFICATION	1.2901984996502744E-4	IMPLEMENTATION
we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999933825846861	WITHOUT_CLASSIFICATION	6.617415313891585E-6	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999990088893786	WITHOUT_CLASSIFICATION	9.911106212889462E-7	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999354102790026	WITHOUT_CLASSIFICATION	6.458972099752498E-5	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9997666309770324	WITHOUT_CLASSIFICATION	2.333690229675614E-4	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.999950735974382	WITHOUT_CLASSIFICATION	4.926402561805176E-5	IMPLEMENTATION
more specifically "? [op] datetime" 1) if the operator is minus the param needs to be of some datetime type 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9998052443257044	WITHOUT_CLASSIFICATION	1.9475567429572406E-4	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9997666309770324	WITHOUT_CLASSIFICATION	2.333690229675614E-4	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999354102790026	WITHOUT_CLASSIFICATION	6.458972099752498E-5	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.999950735974382	WITHOUT_CLASSIFICATION	4.926402561805176E-5	IMPLEMENTATION
add the primary key	WITHOUT_CLASSIFICATION	0.9999694456724376	WITHOUT_CLASSIFICATION	3.0554327562288714E-5	IMPLEMENTATION
delegate already handles pk columns	WITHOUT_CLASSIFICATION	0.9999955018094846	WITHOUT_CLASSIFICATION	4.498190515398427E-6	IMPLEMENTATION
we can't batch joined inserts especially not if it is an identity insert nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9991054331754451	WITHOUT_CLASSIFICATION	8.945668245547742E-4	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.9999910322973709	WITHOUT_CLASSIFICATION	8.967702629028585E-6	IMPLEMENTATION
write the values of fields onto the prepared statement - we must use the state at the time the insert was issued (cos of foreign key constraints). not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.999993478230031	WITHOUT_CLASSIFICATION	6.521769969025361E-6	IMPLEMENTATION
todo shouldnt inserts be expectations.none?	WITHOUT_CLASSIFICATION	0.6881083710772183	WITHOUT_CLASSIFICATION	0.3118916289227817	IMPLEMENTATION
don't bother trying to update we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9993146073152569	WITHOUT_CLASSIFICATION	6.853926847430969E-4	IMPLEMENTATION
if all fields are null we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999991884807374	WITHOUT_CLASSIFICATION	8.115192625742461E-7	IMPLEMENTATION
there is probably a row there so try to update if no rows were updated we will find out	WITHOUT_CLASSIFICATION	0.9999998299844777	WITHOUT_CLASSIFICATION	1.7001552232448492E-7	IMPLEMENTATION
note updates to joined tables can't be batched	WITHOUT_CLASSIFICATION	0.999837643096733	WITHOUT_CLASSIFICATION	1.6235690326695668E-4	IMPLEMENTATION
starting index	WITHOUT_CLASSIFICATION	0.9997305133307031	WITHOUT_CLASSIFICATION	2.6948666929694153E-4	IMPLEMENTATION
now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999871221331897	WITHOUT_CLASSIFICATION	1.2877866810265567E-5	IMPLEMENTATION
write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9987969751492692	WITHOUT_CLASSIFICATION	0.0012030248507306845	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.9999910322973709	WITHOUT_CLASSIFICATION	8.967702629028585E-6	IMPLEMENTATION
do the key. the key is immutable so we can use the _current_ object state - not necessarily the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999995894895817	WITHOUT_CLASSIFICATION	4.105104182595592E-7	IMPLEMENTATION
we should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999958162491004	WITHOUT_CLASSIFICATION	4.183750899672339E-6	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997473702205564	WITHOUT_CLASSIFICATION	2.5262977944354935E-4	IMPLEMENTATION
note dirtyfields==null means we had no snapshot and we couldn't get one using select-before-update oldfields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyfields)	WITHOUT_CLASSIFICATION	0.9999986494567404	WITHOUT_CLASSIFICATION	1.3505432595859822E-6	IMPLEMENTATION
more specifically "datetime [op] ?" 1) if the operator is minus we really cannot determine the expected type as either another datetime or numeric would be valid 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9999937052416161	WITHOUT_CLASSIFICATION	6.294758383865223E-6	IMPLEMENTATION
for the case of dynamic-update="true" we need to generate the update sql	WITHOUT_CLASSIFICATION	0.9999984926829403	WITHOUT_CLASSIFICATION	1.5073170597444883E-6	IMPLEMENTATION
don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9850277762505204	WITHOUT_CLASSIFICATION	0.014972223749479551	IMPLEMENTATION
for the case of dynamic-update="false" or no snapshot we use the static sql	WITHOUT_CLASSIFICATION	0.9999991456369343	WITHOUT_CLASSIFICATION	8.543630657099578E-7	IMPLEMENTATION
if not "get" then try "is"	WITHOUT_CLASSIFICATION	0.9996340596019152	WITHOUT_CLASSIFICATION	3.659403980848327E-4	IMPLEMENTATION
now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9998619619554671	WITHOUT_CLASSIFICATION	1.380380445329435E-4	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999949362242697	WITHOUT_CLASSIFICATION	5.0637757302620275E-6	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999949362242697	WITHOUT_CLASSIFICATION	5.0637757302620275E-6	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999963331652354	WITHOUT_CLASSIFICATION	3.6668347645248704E-6	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999963331652354	WITHOUT_CLASSIFICATION	3.6668347645248704E-6	IMPLEMENTATION
not supported	WITHOUT_CLASSIFICATION	0.999599143975276	WITHOUT_CLASSIFICATION	4.008560247240403E-4	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997473702205564	WITHOUT_CLASSIFICATION	2.5262977944354935E-4	IMPLEMENTATION
we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9998455205233095	WITHOUT_CLASSIFICATION	1.5447947669049516E-4	IMPLEMENTATION
otherwise utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9997975186738216	WITHOUT_CLASSIFICATION	2.0248132617835618E-4	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999738108781451	WITHOUT_CLASSIFICATION	2.6189121854900488E-5	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999738108781451	WITHOUT_CLASSIFICATION	2.6189121854900488E-5	IMPLEMENTATION
all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999687846524709	WITHOUT_CLASSIFICATION	3.121534752908637E-5	IMPLEMENTATION
notice that we skip the first table it is the driving table!	WITHOUT_CLASSIFICATION	0.9999340228824798	WITHOUT_CLASSIFICATION	6.597711752021937E-5	IMPLEMENTATION
we can inner join to superclass tables (the row must be there) we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9993792185896613	WITHOUT_CLASSIFICATION	6.207814103386567E-4	IMPLEMENTATION
skip the driving table	WITHOUT_CLASSIFICATION	0.999957575846471	WITHOUT_CLASSIFICATION	4.242415352884603E-5	IMPLEMENTATION
get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999956932580385	WITHOUT_CLASSIFICATION	4.306741961464042E-6	IMPLEMENTATION
here we work under the following assumptions ------------ valid cases -------------------------------------- 1) datetime + {something other than datetime} always results in a datetime ( db will catch invalid conversions ) 2) datetime - datetime always results in a double 3) datetime - {something other than datetime} always results in a datetime ( db will catch invalid conversions ) ------------ invalid cases ------------------------------------ 4) datetime + datetime 5) {something other than datetime} - datetime 6) datetime {any type} 7) datetime / {any type} 8) {any type} / datetime doing so allows us to properly handle parameters as either the left or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999991565070631	WITHOUT_CLASSIFICATION	8.434929369885407E-7	IMPLEMENTATION
render the where and from parts	WITHOUT_CLASSIFICATION	0.9999666597409671	WITHOUT_CLASSIFICATION	3.334025903287884E-5	IMPLEMENTATION
we could regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999780095534776	WITHOUT_CLASSIFICATION	2.1990446522397644E-5	IMPLEMENTATION
now render the joins	WITHOUT_CLASSIFICATION	0.9999584140204207	WITHOUT_CLASSIFICATION	4.158597957918384E-5	IMPLEMENTATION
this will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999921510015034	WITHOUT_CLASSIFICATION	7.848998496600384E-6	IMPLEMENTATION
now render the select clause	WITHOUT_CLASSIFICATION	0.9999750801296707	WITHOUT_CLASSIFICATION	2.4919870329222516E-5	IMPLEMENTATION
now tie it all together	WITHOUT_CLASSIFICATION	0.999928705609	WITHOUT_CLASSIFICATION	7.1294390999992E-5	IMPLEMENTATION
insert/update/delete sql	WITHOUT_CLASSIFICATION	0.999984289023696	WITHOUT_CLASSIFICATION	1.5710976303997957E-5	IMPLEMENTATION
select sql	WITHOUT_CLASSIFICATION	0.9999959727478185	WITHOUT_CLASSIFICATION	4.027252181547646E-6	IMPLEMENTATION
no need to check laziness dirty checking handles that	WITHOUT_CLASSIFICATION	0.9653190232696082	WITHOUT_CLASSIFICATION	0.03468097673039188	IMPLEMENTATION
fully resolve the map reference create implicit joins.	WITHOUT_CLASSIFICATION	0.9999833778012247	WITHOUT_CLASSIFICATION	1.6622198775269906E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999196610454726	WITHOUT_CLASSIFICATION	8.033895452744328E-5	IMPLEMENTATION
the basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9996199224704982	WITHOUT_CLASSIFICATION	3.800775295017304E-4	IMPLEMENTATION
for dialects which are known to not support ansi-sql row-value-constructor syntax we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9936954385920337	WITHOUT_CLASSIFICATION	0.006304561407966414	IMPLEMENTATION
due to the complexity in initializing the selectclause do not generate one here. if it is not found simply return null also do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999999167036522	WITHOUT_CLASSIFICATION	8.329634782099724E-8	IMPLEMENTATION
check the version unsaved-value if appropriate	WITHOUT_CLASSIFICATION	0.998559458674587	WITHOUT_CLASSIFICATION	0.001440541325413106	IMPLEMENTATION
let this take precedence if defined since it works for assigned identifiers	WITHOUT_CLASSIFICATION	0.9999996439393696	WITHOUT_CLASSIFICATION	3.560606303143669E-7	IMPLEMENTATION
check the id unsaved-value	WITHOUT_CLASSIFICATION	0.999174540610693	WITHOUT_CLASSIFICATION	8.254593893069313E-4	IMPLEMENTATION
check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999997485922045	WITHOUT_CLASSIFICATION	2.5140779551666717E-7	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999931730165523	WITHOUT_CLASSIFICATION	6.8269834476890814E-6	IMPLEMENTATION
for property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999587442053431	WITHOUT_CLASSIFICATION	4.125579465676894E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999996707625423	WITHOUT_CLASSIFICATION	3.292374577485161E-7	IMPLEMENTATION
force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999509326283645	WITHOUT_CLASSIFICATION	4.906737163538211E-5	IMPLEMENTATION
if this from element is a collection and the path is a collection property (maxindex etc.) then generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999994799269476	WITHOUT_CLASSIFICATION	5.200730524151113E-7	IMPLEMENTATION
entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999187755264872	WITHOUT_CLASSIFICATION	8.122447351288849E-5	IMPLEMENTATION
collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998972374078031	WITHOUT_CLASSIFICATION	1.0276259219687824E-4	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.9999964192172421	WITHOUT_CLASSIFICATION	3.580782757892917E-6	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.9999964192172421	WITHOUT_CLASSIFICATION	3.580782757892917E-6	IMPLEMENTATION
only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999936813038949	WITHOUT_CLASSIFICATION	6.318696105096987E-6	IMPLEMENTATION
try "get"	WITHOUT_CLASSIFICATION	0.9999667729118185	WITHOUT_CLASSIFICATION	3.322708818161647E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999954691120736	WITHOUT_CLASSIFICATION	4.530887926454603E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999954691120736	WITHOUT_CLASSIFICATION	4.530887926454603E-6	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9996462574062733	WITHOUT_CLASSIFICATION	3.5374259372657945E-4	IMPLEMENTATION
this page intentionally left blank )	WITHOUT_CLASSIFICATION	0.999885838022602	WITHOUT_CLASSIFICATION	1.1416197739804143E-4	IMPLEMENTATION
do not do anything	WITHOUT_CLASSIFICATION	0.9831595106690355	WITHOUT_CLASSIFICATION	0.01684048933096449	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999763688219834	WITHOUT_CLASSIFICATION	2.3631178016617243E-5	IMPLEMENTATION
cant instantiate	WITHOUT_CLASSIFICATION	0.9999448339185323	WITHOUT_CLASSIFICATION	5.516608146777614E-5	IMPLEMENTATION
if it is a property of an embedded component invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999998331670256	WITHOUT_CLASSIFICATION	1.6683297442642056E-7	IMPLEMENTATION
otherwise	WITHOUT_CLASSIFICATION	0.999801136931407	WITHOUT_CLASSIFICATION	1.9886306859287793E-4	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.9999291160758795	WITHOUT_CLASSIFICATION	7.088392412047539E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999080968166948	WITHOUT_CLASSIFICATION	9.19031833052217E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999080968166948	WITHOUT_CLASSIFICATION	9.19031833052217E-5	IMPLEMENTATION
hhh-2481 make sure the callback gets cleared otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999469260638933	WITHOUT_CLASSIFICATION	5.3073936106600376E-5	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999887957335979	WITHOUT_CLASSIFICATION	1.1204266402171076E-5	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999887957335979	WITHOUT_CLASSIFICATION	1.1204266402171076E-5	IMPLEMENTATION
note interface is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999218694435558	WITHOUT_CLASSIFICATION	7.813055644422915E-5	IMPLEMENTATION
interfaces arguments	WITHOUT_CLASSIFICATION	0.999961395510291	WITHOUT_CLASSIFICATION	3.860448970906496E-5	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
get the caller	WITHOUT_CLASSIFICATION	0.9999949209542079	WITHOUT_CLASSIFICATION	5.0790457919978435E-6	IMPLEMENTATION
get the caller principals	WITHOUT_CLASSIFICATION	0.999996419180016	WITHOUT_CLASSIFICATION	3.580819983981531E-6	IMPLEMENTATION
private static final alias default_alias = new alias(10 null)	WITHOUT_CLASSIFICATION	0.9999473763960622	WITHOUT_CLASSIFICATION	5.262360393769154E-5	IMPLEMENTATION
needed to bump this up to dotnode because that is the only thing which currently knows about the property-ref path in the correct format it is either this or recurse over the dotnodes constructing the property path just like dotnode does internally	WITHOUT_CLASSIFICATION	0.9999844935198308	WITHOUT_CLASSIFICATION	1.5506480169176366E-5	IMPLEMENTATION
if the identifier is quoted remove the quotes	WITHOUT_CLASSIFICATION	0.9999979960865062	WITHOUT_CLASSIFICATION	2.003913493768736E-6	IMPLEMENTATION
truncate the identifier to the max alias length less the suffix length	WITHOUT_CLASSIFICATION	0.9999457164503924	WITHOUT_CLASSIFICATION	5.428354960766597E-5	IMPLEMENTATION
full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9993077168391742	WITHOUT_CLASSIFICATION	6.922831608258299E-4	IMPLEMENTATION
null is not considered the same type as integer. $non-nls-1 $non-nls-1	WITHOUT_CLASSIFICATION	0.9996015109391482	WITHOUT_CLASSIFICATION	3.9848906085183954E-4	IMPLEMENTATION
the outerjoinsafterwhere needs to come before where clause to properly handle dynamic filters	WITHOUT_CLASSIFICATION	0.9933428422242222	WITHOUT_CLASSIFICATION	0.0066571577757777445	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.999986190457506	WITHOUT_CLASSIFICATION	1.3809542493999314E-5	IMPLEMENTATION
if the condition is not already there	WITHOUT_CLASSIFICATION	0.9998977402472761	WITHOUT_CLASSIFICATION	1.0225975272402197E-4	IMPLEMENTATION
dontspace.add("'")	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
for mysql	WITHOUT_CLASSIFICATION	0.9999937280839686	WITHOUT_CLASSIFICATION	6.271916031427914E-6	IMPLEMENTATION
hashmap columnsunique = new hashmap()	WITHOUT_CLASSIFICATION	0.9998956560134602	WITHOUT_CLASSIFICATION	1.0434398653981563E-4	IMPLEMENTATION
null caused some problems	WITHOUT_CLASSIFICATION	0.9999468546021326	WITHOUT_CLASSIFICATION	5.314539786728091E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999672053460105	WITHOUT_CLASSIFICATION	3.2794653989501576E-5	IMPLEMENTATION
not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.999989463934314	WITHOUT_CLASSIFICATION	1.0536065686045945E-5	IMPLEMENTATION
even on inverse="true"	WITHOUT_CLASSIFICATION	0.9998714904203523	WITHOUT_CLASSIFICATION	1.2850957964778023E-4	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999672053460105	WITHOUT_CLASSIFICATION	3.2794653989501576E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999672053460105	WITHOUT_CLASSIFICATION	3.2794653989501576E-5	IMPLEMENTATION
if true then execute db updates otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999958269199167	WITHOUT_CLASSIFICATION	4.173080083239014E-6	IMPLEMENTATION
we only release the connection	WITHOUT_CLASSIFICATION	0.9983350563866668	WITHOUT_CLASSIFICATION	0.0016649436133332894	IMPLEMENTATION
deprecated option	WITHOUT_CLASSIFICATION	0.9993878912104474	WITHOUT_CLASSIFICATION	6.121087895525894E-4	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999983939058318	WITHOUT_CLASSIFICATION	1.6060941681575083E-6	IMPLEMENTATION
actually this last test is probably unnecessary since beforecompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999999912219025	WITHOUT_CLASSIFICATION	8.778097477282974E-9	IMPLEMENTATION
this one only really needed for badly-behaved applications! (if the transactionmanager has a sychronization registered its a noop) (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.8657043764819724	IMPLEMENTATION	0.13429562351802762	WITHOUT_CLASSIFICATION
create an dotnode ast for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999899101448869	WITHOUT_CLASSIFICATION	1.0089855113041158E-5	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999983939058318	WITHOUT_CLASSIFICATION	1.6060941681575083E-6	IMPLEMENTATION
if we could not register a synchronization do the before/after completion callbacks ourself (but we need to let jdbccontext know that this is what we are going to do so it doesn't keep trying to register synchronizations)	WITHOUT_CLASSIFICATION	0.7031285289104879	WITHOUT_CLASSIFICATION	0.29687147108951195	IMPLEMENTATION
swallow it and continue to roll back jta transaction	WITHOUT_CLASSIFICATION	0.9998237785415132	WITHOUT_CLASSIFICATION	1.7622145848687797E-4	IMPLEMENTATION
so the transaction is already rolled back by jta spec	WITHOUT_CLASSIFICATION	0.9999966392551715	WITHOUT_CLASSIFICATION	3.3607448285352256E-6	IMPLEMENTATION
this method is a noop if there is a synchronization!	WITHOUT_CLASSIFICATION	0.9999941578700874	WITHOUT_CLASSIFICATION	5.842129912546952E-6	IMPLEMENTATION
two conditions where we need to transform this to a theta-join syntax 1) 'elem' is the "root from-element" in correlated subqueries 2) the dotnode.usethetastyleimplicitjoins has been set to true and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999960807994539	WITHOUT_CLASSIFICATION	3.919200546095237E-6	IMPLEMENTATION
websphere however is not a sane jee/jta container	WITHOUT_CLASSIFICATION	0.9990724641738834	WITHOUT_CLASSIFICATION	9.275358261166177E-4	IMPLEMENTATION
for sane jee/jta containers the transaction itself functions as its identifier	WITHOUT_CLASSIFICATION	0.9999944263353159	WITHOUT_CLASSIFICATION	5.573664684203255E-6	IMPLEMENTATION
swallow the transaction was finished	WITHOUT_CLASSIFICATION	0.9999954264011879	WITHOUT_CLASSIFICATION	4.573598812086198E-6	IMPLEMENTATION
all aliastoentitymapresulttransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999813920622513	WITHOUT_CLASSIFICATION	1.8607937748748563E-5	IMPLEMENTATION
create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999954669277341	WITHOUT_CLASSIFICATION	4.533072265847469E-6	IMPLEMENTATION
all distinctrootentityresulttransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999813920622513	WITHOUT_CLASSIFICATION	1.8607937748748563E-5	IMPLEMENTATION
map of entitymode -> tuplizer	WITHOUT_CLASSIFICATION	0.9999962172396006	WITHOUT_CLASSIFICATION	3.7827603993383906E-6	IMPLEMENTATION
this is a virtual id property	WITHOUT_CLASSIFICATION	0.9997421428677912	WITHOUT_CLASSIFICATION	2.5785713220882533E-4	IMPLEMENTATION
this one needed only for guessentitymode()	WITHOUT_CLASSIFICATION	0.5442056857880276	WITHOUT_CLASSIFICATION	0.45579431421197225	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999814348790873	WITHOUT_CLASSIFICATION	1.8565120912746137E-5	IMPLEMENTATION
todo move this to sf per hhh-3517 also see hhh-1907 and componentmetamodel	WITHOUT_CLASSIFICATION	0.784208328661599	WITHOUT_CLASSIFICATION	0.21579167133840102	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.999999038289607	WITHOUT_CLASSIFICATION	9.617103930369532E-7	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.999976244694485	WITHOUT_CLASSIFICATION	2.3755305515077316E-5	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999938730076505	WITHOUT_CLASSIFICATION	6.126992349438564E-6	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.999976244694485	WITHOUT_CLASSIFICATION	2.3755305515077316E-5	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9998049652337485	WITHOUT_CLASSIFICATION	1.9503476625140251E-4	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999608353687615	WITHOUT_CLASSIFICATION	3.9164631238557206E-5	IMPLEMENTATION
private final sessionfactoryimplementor sessionfactory	WITHOUT_CLASSIFICATION	0.9999416221199278	WITHOUT_CLASSIFICATION	5.837788007228881E-5	IMPLEMENTATION
cached for efficiency	WITHOUT_CLASSIFICATION	0.9999857049808152	WITHOUT_CLASSIFICATION	1.4295019184916649E-5	IMPLEMENTATION
public componentmetamodel(component component sessionfactoryimplementor sessionfactory) {	WITHOUT_CLASSIFICATION	0.9999916200514206	WITHOUT_CLASSIFICATION	8.379948579428604E-6	IMPLEMENTATION
this.sessionfactory = sessionfactory	WITHOUT_CLASSIFICATION	0.9998389885152281	WITHOUT_CLASSIFICATION	1.6101148477183535E-4	IMPLEMENTATION
it was not embedded so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999989926247894	WITHOUT_CLASSIFICATION	1.0073752105559468E-6	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.999999038289607	WITHOUT_CLASSIFICATION	9.617103930369532E-7	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999938730076505	WITHOUT_CLASSIFICATION	6.126992349438564E-6	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9998049652337485	WITHOUT_CLASSIFICATION	1.9503476625140251E-4	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9998349095966315	WITHOUT_CLASSIFICATION	1.6509040336857897E-4	IMPLEMENTATION
return currentid	WITHOUT_CLASSIFICATION	0.9999695506791584	WITHOUT_CLASSIFICATION	3.044932084150901E-5	IMPLEMENTATION
reset the id	WITHOUT_CLASSIFICATION	0.9993741662074592	WITHOUT_CLASSIFICATION	6.258337925407651E-4	IMPLEMENTATION
origin.adddestination( destination ) this was the cause of hhh-242 origin.settype( from_fragment ) set the parent node type so that the ast is properly formed. the destination node will have all the from text. the parent node is a collection join too (voodoo - see joinprocessor)	WITHOUT_CLASSIFICATION	0.9999997034661303	WITHOUT_CLASSIFICATION	2.9653386977050694E-7	IMPLEMENTATION
reset the version	WITHOUT_CLASSIFICATION	0.9997260415427468	WITHOUT_CLASSIFICATION	2.7395845725326307E-4	IMPLEMENTATION
the default is to simply not lazy fetch properties for now	WITHOUT_CLASSIFICATION	0.9997687783775172	WITHOUT_CLASSIFICATION	2.3122162248280566E-4	IMPLEMENTATION
add the second join the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999190530213155	WITHOUT_CLASSIFICATION	8.094697868447705E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999196610454726	WITHOUT_CLASSIFICATION	8.033895452744328E-5	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999608353687615	WITHOUT_CLASSIFICATION	3.9164631238557206E-5	IMPLEMENTATION
determine the id getter and setter methods from the proxy interface (if any) determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.7602956507283956	IMPLEMENTATION	0.2397043492716045	WITHOUT_CLASSIFICATION
return getfactory().getsettings().getbytecodeprovider().getproxyfactoryfactory().buildproxyfactory()	WITHOUT_CLASSIFICATION	0.9999559614244578	WITHOUT_CLASSIFICATION	4.40385755422852E-5	IMPLEMENTATION
not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.996259294951744	WITHOUT_CLASSIFICATION	0.0037407050482559418	IMPLEMENTATION
superclass entity-name	WITHOUT_CLASSIFICATION	0.999974230634716	WITHOUT_CLASSIFICATION	2.576936528391948E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999196610454726	WITHOUT_CLASSIFICATION	8.033895452744328E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
init the aliases after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999651041843788	WITHOUT_CLASSIFICATION	3.4895815621345525E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999196610454726	WITHOUT_CLASSIFICATION	8.033895452744328E-5	IMPLEMENTATION
legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999661553025379	WITHOUT_CLASSIFICATION	3.384469746208672E-5	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999457706535863	WITHOUT_CLASSIFICATION	5.422934641376873E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
note this affects the return value!	WITHOUT_CLASSIFICATION	0.9999155333029117	WITHOUT_CLASSIFICATION	8.44666970882623E-5	IMPLEMENTATION
need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9996399177716204	WITHOUT_CLASSIFICATION	3.600822283796336E-4	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999888881250439	WITHOUT_CLASSIFICATION	1.111187495606299E-5	IMPLEMENTATION
collection types	WITHOUT_CLASSIFICATION	0.9996064819808083	WITHOUT_CLASSIFICATION	3.935180191918356E-4	IMPLEMENTATION
convenience methods relating to operations across arrays of types	WITHOUT_CLASSIFICATION	0.9995633533003729	WITHOUT_CLASSIFICATION	4.366466996270045E-4	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999973292240606	WITHOUT_CLASSIFICATION	2.6707759393954843E-6	IMPLEMENTATION
blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999612449409505	WITHOUT_CLASSIFICATION	3.875505904947146E-5	IMPLEMENTATION
value is the entity name	WITHOUT_CLASSIFICATION	0.9999869529868961	WITHOUT_CLASSIFICATION	1.304701310387199E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999847536406584	WITHOUT_CLASSIFICATION	1.5246359341646606E-5	IMPLEMENTATION
generate id select fragment and then property select fragment for each expression just like generateselectfragments().	WITHOUT_CLASSIFICATION	0.9996877312124739	WITHOUT_CLASSIFICATION	3.1226878752613294E-4	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
xml is the entity name	WITHOUT_CLASSIFICATION	0.9999930222051673	WITHOUT_CLASSIFICATION	6.977794832669437E-6	IMPLEMENTATION
special case this is the leaf of the containment graph even though not immutable	WITHOUT_CLASSIFICATION	0.9997975773000052	WITHOUT_CLASSIFICATION	2.0242269999488623E-4	IMPLEMENTATION
tolerates nulls	WITHOUT_CLASSIFICATION	0.9999489967936689	WITHOUT_CLASSIFICATION	5.100320633110781E-5	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
metatype is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999871228345276	WITHOUT_CLASSIFICATION	1.2877165472259473E-5	IMPLEMENTATION
get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999973506166211	WITHOUT_CLASSIFICATION	2.649383378910094E-6	IMPLEMENTATION
look through the fromelement's children to find any collections of values that should be fetched	WITHOUT_CLASSIFICATION	0.9999160758347085	WITHOUT_CLASSIFICATION	8.392416529146516E-5	IMPLEMENTATION
return associationtype.foreign_key_to_parent this is better but causes a transient object exception	WITHOUT_CLASSIFICATION	0.9999992231806483	WITHOUT_CLASSIFICATION	7.768193516432488E-7	IMPLEMENTATION
use the lower case function name. remember whether we're in a select clause or not.	WITHOUT_CLASSIFICATION	0.9999992450952665	WITHOUT_CLASSIFICATION	7.549047334567791E-7	IMPLEMENTATION
ident might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999931167343109	WITHOUT_CLASSIFICATION	6.883265689196942E-6	IMPLEMENTATION
todo!!!	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
st.settimestamp( index new timestamp( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9996549975920783	WITHOUT_CLASSIFICATION	3.4500240792172983E-4	IMPLEMENTATION
st.setdate( index new date( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9996549975920783	WITHOUT_CLASSIFICATION	3.4500240792172983E-4	IMPLEMENTATION
both are timestamps	WITHOUT_CLASSIFICATION	0.9999884756344155	WITHOUT_CLASSIFICATION	1.1524365584486112E-5	IMPLEMENTATION
at least one is a plain old date	WITHOUT_CLASSIFICATION	0.999993029513005	WITHOUT_CLASSIFICATION	6.970486995031851E-6	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999795413091507	WITHOUT_CLASSIFICATION	2.0458690849360415E-5	IMPLEMENTATION
if the corresponding sql value is null the reader we got is null as well	WITHOUT_CLASSIFICATION	0.9999999265209065	WITHOUT_CLASSIFICATION	7.347909344965574E-8	IMPLEMENTATION
fetch reader content up to the end - and put characters in a stringbuffer	WITHOUT_CLASSIFICATION	0.9991540751873315	WITHOUT_CLASSIFICATION	8.459248126685917E-4	IMPLEMENTATION
return stringbuffer content as a large string	WITHOUT_CLASSIFICATION	0.9996720008965971	WITHOUT_CLASSIFICATION	3.2799910340276035E-4	IMPLEMENTATION
or types.longvarchar?	WITHOUT_CLASSIFICATION	0.9999702225949008	WITHOUT_CLASSIFICATION	2.9777405099200302E-5	IMPLEMENTATION
not called at runtime so doesn't matter if its slow )	WITHOUT_CLASSIFICATION	0.9999482175329951	WITHOUT_CLASSIFICATION	5.178246700489292E-5	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.8061623874176842	WITHOUT_CLASSIFICATION	0.19383761258231585	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999888553437474	WITHOUT_CLASSIFICATION	1.1144656252676E-5	IMPLEMENTATION
different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999550335573837	WITHOUT_CLASSIFICATION	4.496644261637903E-5	IMPLEMENTATION
cache this	WITHOUT_CLASSIFICATION	0.9999518664852478	WITHOUT_CLASSIFICATION	4.8133514752109455E-5	IMPLEMENTATION
only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9998351203574554	WITHOUT_CLASSIFICATION	1.648796425446283E-4	IMPLEMENTATION
forcefully remove leading ands from where fragments the grammar will handle adding them	WITHOUT_CLASSIFICATION	0.9999713734445158	WITHOUT_CLASSIFICATION	2.8626555484136628E-5	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
create a new filters node as a parent of all filters	WITHOUT_CLASSIFICATION	0.999975708177061	WITHOUT_CLASSIFICATION	2.4291822938930825E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
public object instantiate(object parent sessionimplementor session) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999835937406251	WITHOUT_CLASSIFICATION	1.6406259374879995E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999820870449001	WITHOUT_CLASSIFICATION	1.791295509997044E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999820870449001	WITHOUT_CLASSIFICATION	1.791295509997044E-5	IMPLEMENTATION
versiontype impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ note simply returns null for seed() and next() as the only known application of binary types for versioning is for use with the timestamp datatype supported by sybase and sql server which are completely db-generated values	WITHOUT_CLASSIFICATION	0.9999996577665631	WITHOUT_CLASSIFICATION	3.4223343688732846E-7	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999973292240606	WITHOUT_CLASSIFICATION	2.6707759393954843E-6	IMPLEMENTATION
not really necessary i guess	WITHOUT_CLASSIFICATION	0.9931818152456384	WITHOUT_CLASSIFICATION	0.006818184754361493	IMPLEMENTATION
clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999879623581731	WITHOUT_CLASSIFICATION	1.2037641826844849E-5	IMPLEMENTATION
we do not have to worry about queued additions to uninitialized collections since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9997465990957035	WITHOUT_CLASSIFICATION	2.5340090429645215E-4	IMPLEMENTATION
collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999967574469077	WITHOUT_CLASSIFICATION	3.242553092282565E-6	IMPLEMENTATION
remember the uk value	WITHOUT_CLASSIFICATION	0.9997703118824114	WITHOUT_CLASSIFICATION	2.2968811758862325E-4	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999795413091507	WITHOUT_CLASSIFICATION	2.0458690849360415E-5	IMPLEMENTATION
processcollectionproperty(token q.getcollectionpersister(collectionrole) collectionname)	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
we must use the "remembered" uk value since it is not available from the entityentry during assembly	WITHOUT_CLASSIFICATION	0.9999371348058291	WITHOUT_CLASSIFICATION	6.286519417082368E-5	IMPLEMENTATION
collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9996199694281602	WITHOUT_CLASSIFICATION	3.800305718396719E-4	IMPLEMENTATION
return false	WITHOUT_CLASSIFICATION	0.9999691625345117	WITHOUT_CLASSIFICATION	3.0837465488268234E-5	IMPLEMENTATION
this just handles a particular case of component projection perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999998562092469	WITHOUT_CLASSIFICATION	1.4379075311725178E-7	IMPLEMENTATION
note we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.999996782553025	WITHOUT_CLASSIFICATION	3.2174469749618727E-6	IMPLEMENTATION
the key is the owning entity itself so get the id from the key	WITHOUT_CLASSIFICATION	0.999998332360112	WITHOUT_CLASSIFICATION	1.667639887960408E-6	IMPLEMENTATION
if the original is a persistentcollection and that original was not flagged as dirty then reset the target's dirty flag here after the copy operation. </p> one thing to be careful of here is a "bare" original collection in which case we should never ever ever reset the dirty flag on the target because we simply do not know	WITHOUT_CLASSIFICATION	0.9468977640608911	WITHOUT_CLASSIFICATION	0.053102235939108906	IMPLEMENTATION
ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999538985800861	WITHOUT_CLASSIFICATION	4.610141991383087E-5	IMPLEMENTATION
copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.999302149297822	WITHOUT_CLASSIFICATION	6.978507021780463E-4	IMPLEMENTATION
for a null target or a target which is the same as the original we need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999811478155859	WITHOUT_CLASSIFICATION	1.885218441413278E-5	IMPLEMENTATION
by default just use an unanticipated capacity since we don't know how to extract the capacity to use from original here	WITHOUT_CLASSIFICATION	0.9998719750810245	WITHOUT_CLASSIFICATION	1.2802491897543158E-4	IMPLEMENTATION
get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9995821517968788	WITHOUT_CLASSIFICATION	4.178482031211642E-4	IMPLEMENTATION
check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999929863037865	WITHOUT_CLASSIFICATION	7.013696213534202E-6	IMPLEMENTATION
check if it is already completely loaded but unowned	WITHOUT_CLASSIFICATION	0.9999980985629161	WITHOUT_CLASSIFICATION	1.9014370838041285E-6	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9936222558567477	WITHOUT_CLASSIFICATION	0.006377744143252393	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
create a new collection wrapper to be initialized later	WITHOUT_CLASSIFICATION	0.9999157059960015	WITHOUT_CLASSIFICATION	8.429400399849437E-5	IMPLEMENTATION
some jdbc drivers erroneously return an empty array here for a null db value /	WITHOUT_CLASSIFICATION	0.9999578340846763	WITHOUT_CLASSIFICATION	4.216591532370439E-5	IMPLEMENTATION
our column span is the number of columns in the pk	WITHOUT_CLASSIFICATION	0.9999997015385136	WITHOUT_CLASSIFICATION	2.984614864405357E-7	IMPLEMENTATION
cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999942419016558	WITHOUT_CLASSIFICATION	5.75809834430485E-6	IMPLEMENTATION
we already know current is not null	WITHOUT_CLASSIFICATION	0.961632231619895	WITHOUT_CLASSIFICATION	0.038367768380104944	IMPLEMENTATION
the ids are fully resolved so compare them with isdirty() not ismodified()	WITHOUT_CLASSIFICATION	0.9995785667279516	WITHOUT_CLASSIFICATION	4.21433272048382E-4	IMPLEMENTATION
the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.999069033815479	WITHOUT_CLASSIFICATION	9.309661845210515E-4	IMPLEMENTATION
----------------------------------------------------------- constructors	WITHOUT_CLASSIFICATION	0.9998439327666293	WITHOUT_CLASSIFICATION	1.5606723337071077E-4	IMPLEMENTATION
----------------------------------------------------- instance variables	WITHOUT_CLASSIFICATION	0.9999765590729071	WITHOUT_CLASSIFICATION	2.344092709293284E-5	IMPLEMENTATION
public static jdbcexception newjdbcexception(string string sqlexception root string sql) { string = string + " [" + sql + ']' log.error(string root) logexceptions(root) return new jdbcexception(string root sql) } public static jdbcexception newjdbcexception(string string sqlexception root) { log.error(string root) logexceptions(root) return new jdbcexception(string root) }	WITHOUT_CLASSIFICATION	0.9999848750343939	WITHOUT_CLASSIFICATION	1.5124965606077413E-5	IMPLEMENTATION
--------------------------------------------------------- public methods	WITHOUT_CLASSIFICATION	0.9999874911133904	WITHOUT_CLASSIFICATION	1.2508886609693253E-5	IMPLEMENTATION
compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999664291321704	WITHOUT_CLASSIFICATION	3.357086782966676E-5	IMPLEMENTATION
simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9997470085872658	WITHOUT_CLASSIFICATION	2.529914127342005E-4	IMPLEMENTATION
sybase fail if we don't do that sigh	WITHOUT_CLASSIFICATION	0.9998644122776469	WITHOUT_CLASSIFICATION	1.3558772235304392E-4	IMPLEMENTATION
handles things like a and b or c a and ( b or c ) not a and not b not ( a and b ) x between y and z (overloaded "and") x in ( a b c ) (overloaded brackets) not not a a is not null (overloaded "not") etc and expressions like foo = bar (maps to foo.id = bar.id) foo.bar = 'foo' (maps to foo.bar = 'foo') foo.bar.baz = 1.0 (maps to foo.bar = bar.id and bar.baz = 1.0) 1.0 = foo.bar.baz (maps to bar.baz = 1.0 and foo.bar = bar.id) foo.bar.baz = a.b.c (maps to bar.baz = b.c and foo.bar = bar.id and a.b = b.id) foo.bar.baz + a.b.c (maps to bar.baz + b.c and foo.bar = bar.id and a.b = b.id) ( foo.bar.baz + 1.0 ) < 2.0 (maps to ( bar.baz + 1.0 ) < 2.0 and foo.bar = bar.id)	WITHOUT_CLASSIFICATION	0.9998844085548083	WITHOUT_CLASSIFICATION	1.1559144519176954E-4	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9993704426265041	WITHOUT_CLASSIFICATION	6.295573734958669E-4	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9993704426265041	WITHOUT_CLASSIFICATION	6.295573734958669E-4	IMPLEMENTATION
try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999270761589694	WITHOUT_CLASSIFICATION	7.292384103053579E-5	IMPLEMENTATION
otherwise just dump it	WITHOUT_CLASSIFICATION	0.9998824949528046	WITHOUT_CLASSIFICATION	1.1750504719548341E-4	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999929822351632	WITHOUT_CLASSIFICATION	7.017764836774513E-6	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999929822351632	WITHOUT_CLASSIFICATION	7.017764836774513E-6	IMPLEMENTATION
use default behavior	WITHOUT_CLASSIFICATION	0.9999861923004508	WITHOUT_CLASSIFICATION	1.380769954921926E-5	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999845527830877	WITHOUT_CLASSIFICATION	1.5447216912200302E-5	IMPLEMENTATION
the mru cache used to keep hard references to the most recently used query plans note lru here is a bit of a misnomer it indicates that lru entries are removed the actual kept entries are the mru entries	WITHOUT_CLASSIFICATION	0.9990172762016701	WITHOUT_CLASSIFICATION	9.82723798329879E-4	IMPLEMENTATION
we want to be able to just use the defaults if jndi environment properties are not supplied so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999959205687218	WITHOUT_CLASSIFICATION	4.079431278230178E-6	IMPLEMENTATION
clone -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999912900408425	WITHOUT_CLASSIFICATION	8.709959157573984E-6	IMPLEMENTATION
serialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999915353210936	WITHOUT_CLASSIFICATION	8.464678906397025E-5	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999966329170896	WITHOUT_CLASSIFICATION	3.3670829102292134E-6	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999966329170896	WITHOUT_CLASSIFICATION	3.3670829102292134E-6	IMPLEMENTATION
deserialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
static methods only - hide constructor	WITHOUT_CLASSIFICATION	0.9998620489434947	WITHOUT_CLASSIFICATION	1.3795105650532343E-4	IMPLEMENTATION
&& !('_'==character)	WITHOUT_CLASSIFICATION	0.9999426997883326	WITHOUT_CLASSIFICATION	5.7300211667389064E-5	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9999312900658004	WITHOUT_CLASSIFICATION	6.870993419962145E-5	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9999312900658004	WITHOUT_CLASSIFICATION	6.870993419962145E-5	IMPLEMENTATION
includes last '.'	WITHOUT_CLASSIFICATION	0.9999690417770525	WITHOUT_CLASSIFICATION	3.095822294740329E-5	IMPLEMENTATION
+1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999715478244307	WITHOUT_CLASSIFICATION	2.845217556935685E-5	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999971278529791	WITHOUT_CLASSIFICATION	2.872147020834388E-6	IMPLEMENTATION
first time we find match!	WITHOUT_CLASSIFICATION	0.9999384161083505	WITHOUT_CLASSIFICATION	6.158389164945293E-5	IMPLEMENTATION
entitynames may now include slashes for the representations classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999996652637295	WITHOUT_CLASSIFICATION	3.3473627047187063E-7	IMPLEMENTATION
wrapped iterators	WITHOUT_CLASSIFICATION	0.9999370154462831	WITHOUT_CLASSIFICATION	6.29845537169912E-5	IMPLEMENTATION
index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999422704810154	WITHOUT_CLASSIFICATION	5.772951898471948E-5	IMPLEMENTATION
the current iterator	WITHOUT_CLASSIFICATION	0.999882278881132	WITHOUT_CLASSIFICATION	1.1772111886786659E-4	IMPLEMENTATION
the last used iterator	WITHOUT_CLASSIFICATION	0.9999877399990601	WITHOUT_CLASSIFICATION	1.2260000939911004E-5	IMPLEMENTATION
it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999972954028622	WITHOUT_CLASSIFICATION	2.7045971378419436E-6	IMPLEMENTATION
public static object[] clone(class elementclass object[] array) {object[] result = (object[]) array.newinstance( elementclass array.length )system.arraycopy(array 0 result 0 array.length)return result}	WITHOUT_CLASSIFICATION	0.9999914418272431	WITHOUT_CLASSIFICATION	8.558172756933486E-6	IMPLEMENTATION
call this before any iterator method to make sure that the current iterator is not exhausted	WITHOUT_CLASSIFICATION	0.9531474479075583	WITHOUT_CLASSIFICATION	0.046852552092441595	IMPLEMENTATION
doable if needed	WITHOUT_CLASSIFICATION	0.8880199929261937	WITHOUT_CLASSIFICATION	0.11198000707380625	IMPLEMENTATION
set last used iterator here in case the user calls remove before calling hasnext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999874406109394	WITHOUT_CLASSIFICATION	1.2559389060543307E-5	IMPLEMENTATION
peek ahead	WITHOUT_CLASSIFICATION	0.9999794554131196	WITHOUT_CLASSIFICATION	2.0544586880387754E-5	IMPLEMENTATION
if we reach the end of the string w/o finding the matching end that is an exception	WITHOUT_CLASSIFICATION	0.9999986102706797	WITHOUT_CLASSIFICATION	1.3897293202843541E-6	IMPLEMENTATION
we have a placeholder spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999331154854666	WITHOUT_CLASSIFICATION	6.688451453331864E-5	IMPLEMENTATION
make sure spinning forward did not put us past the end of the buffer	WITHOUT_CLASSIFICATION	0.9654215456928661	WITHOUT_CLASSIFICATION	0.03457845430713386	IMPLEMENTATION
first try to locate this resource through the current context classloader.	WITHOUT_CLASSIFICATION	0.9981465170575492	WITHOUT_CLASSIFICATION	0.001853482942450818	IMPLEMENTATION
next try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9992988525788351	WITHOUT_CLASSIFICATION	7.011474211648108E-4	IMPLEMENTATION
next try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9981774422599635	WITHOUT_CLASSIFICATION	0.0018225577400364523	IMPLEMENTATION
anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999244577417348	WITHOUT_CLASSIFICATION	7.554225826524154E-5	IMPLEMENTATION
would need an identityset for this!	WITHOUT_CLASSIFICATION	0.999278929928986	WITHOUT_CLASSIFICATION	7.210700710139074E-4	IMPLEMENTATION
arrays.aslist doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.999957833275863	WITHOUT_CLASSIFICATION	4.2166724137081796E-5	IMPLEMENTATION
faster?	WITHOUT_CLASSIFICATION	0.999979179125312	WITHOUT_CLASSIFICATION	2.0820874687993046E-5	IMPLEMENTATION
the name of a class	WITHOUT_CLASSIFICATION	0.9999975680491183	WITHOUT_CLASSIFICATION	2.4319508816567023E-6	IMPLEMENTATION
its the listener class name	WITHOUT_CLASSIFICATION	0.9999927686802481	WITHOUT_CLASSIFICATION	7.231319751939362E-6	IMPLEMENTATION
allow 987654321	WITHOUT_CLASSIFICATION	0.9998645574085797	WITHOUT_CLASSIFICATION	1.3544259142025733E-4	IMPLEMENTATION
default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999995349433651	WITHOUT_CLASSIFICATION	4.650566349035976E-7	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999966871545253	WITHOUT_CLASSIFICATION	3.3128454747264496E-6	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999997204325548	WITHOUT_CLASSIFICATION	2.7956744515515505E-7	IMPLEMENTATION
first lets determine whether to apply cglib or javassist based instrumentation	WITHOUT_CLASSIFICATION	0.9999964412430025	WITHOUT_CLASSIFICATION	3.5587569976462263E-6	IMPLEMENTATION
make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9997387860717721	WITHOUT_CLASSIFICATION	2.6121392822784175E-4	IMPLEMENTATION
entirely optional!!	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9998568950548835	WITHOUT_CLASSIFICATION	1.4310494511657524E-4	IMPLEMENTATION
context.unbind(boundname)	WITHOUT_CLASSIFICATION	0.9999587380234353	WITHOUT_CLASSIFICATION	4.1261976564804205E-5	IMPLEMENTATION
readresolveobject	WITHOUT_CLASSIFICATION	0.9999414748115422	WITHOUT_CLASSIFICATION	5.8525188457970515E-5	IMPLEMENTATION
cfg.setproperty("hibernate.show_sql" "true")	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
defensive convenience methods	WITHOUT_CLASSIFICATION	0.9999594111582227	WITHOUT_CLASSIFICATION	4.058884177723076E-5	IMPLEMENTATION
create the sessionfactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999944063977692	WITHOUT_CLASSIFICATION	5.59360223091804E-6	IMPLEMENTATION
make sure you log the exception as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999918783667304	WITHOUT_CLASSIFICATION	8.121633269554489E-6	IMPLEMENTATION
begin unit of work	WITHOUT_CLASSIFICATION	0.999871143228583	WITHOUT_CLASSIFICATION	1.2885677141709353E-4	IMPLEMENTATION
write html header	WITHOUT_CLASSIFICATION	0.9999172817761118	WITHOUT_CLASSIFICATION	8.271822388816397E-5	IMPLEMENTATION
handle actions	WITHOUT_CLASSIFICATION	0.9998873314375955	WITHOUT_CLASSIFICATION	1.1266856240453764E-4	IMPLEMENTATION
print page	WITHOUT_CLASSIFICATION	0.9999907347336054	WITHOUT_CLASSIFICATION	9.265266394503575E-6	IMPLEMENTATION
write html footer	WITHOUT_CLASSIFICATION	0.9998433306273651	WITHOUT_CLASSIFICATION	1.5666937263486815E-4	IMPLEMENTATION
end unit of work	WITHOUT_CLASSIFICATION	0.999809530979189	WITHOUT_CLASSIFICATION	1.904690208110788E-4	IMPLEMENTATION
start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999739193748227	WITHOUT_CLASSIFICATION	2.6080625177280036E-5	IMPLEMENTATION
make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9983848517844159	WITHOUT_CLASSIFICATION	0.0016151482155840296	IMPLEMENTATION
pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9995104919102104	WITHOUT_CLASSIFICATION	4.895080897896215E-4	IMPLEMENTATION
remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999770757805618	WITHOUT_CLASSIFICATION	2.2924219438183908E-5	IMPLEMENTATION
eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9998859367601707	WITHOUT_CLASSIFICATION	1.1406323982931421E-4	IMPLEMENTATION
if we want to handle it bidirectional and detached we also need to load this collection with an eager outer-join fetch this time with criteria and not hql	WITHOUT_CLASSIFICATION	0.886307550977708	WITHOUT_CLASSIFICATION	0.11369244902229199	IMPLEMENTATION
event anevent = (event) session .createcriteria(event.class).setfetchmode("participants" fetchmode.join) .add( expression.eq("id" eventid) ) .uniqueresult() eager fetch the colleciton so we can use it detached	WITHOUT_CLASSIFICATION	0.9996872102891696	WITHOUT_CLASSIFICATION	3.127897108303909E-4	IMPLEMENTATION
end of first unit of work	WITHOUT_CLASSIFICATION	0.999867858960118	WITHOUT_CLASSIFICATION	1.321410398820409E-4	IMPLEMENTATION
or bidirectional safety method setting both sides aperson.addtoevent(anevent)	WITHOUT_CLASSIFICATION	0.9999234081249568	WITHOUT_CLASSIFICATION	7.65918750432357E-5	IMPLEMENTATION
begin second unit of work	WITHOUT_CLASSIFICATION	0.9999218269121315	WITHOUT_CLASSIFICATION	7.81730878685325E-5	IMPLEMENTATION
reattachment of aperson	WITHOUT_CLASSIFICATION	0.9999783055862882	WITHOUT_CLASSIFICATION	2.1694413711819396E-5	IMPLEMENTATION
the getemailaddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999559578918883	WITHOUT_CLASSIFICATION	4.404210811163761E-5	IMPLEMENTATION
we need our tm so get it now and avoid doing other work if there is a problem	WITHOUT_CLASSIFICATION	0.9999664390614047	WITHOUT_CLASSIFICATION	3.356093859532292E-5	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9985943770516064	WITHOUT_CLASSIFICATION	0.001405622948393557	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9985943770516064	WITHOUT_CLASSIFICATION	0.001405622948393557	IMPLEMENTATION
jbc put a version in the node when it created as part of some internal operation. we are always newer but if the jbc version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999999990304577	WITHOUT_CLASSIFICATION	9.6954235341821E-10	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for properties with hibernate-specific overrides to detect and warn about conflicting declarations	WITHOUT_CLASSIFICATION	0.9995950499308368	WITHOUT_CLASSIFICATION	4.049500691631605E-4	IMPLEMENTATION
not null if the isolation level has been specified in the configuration file. otherwise it is left to the driver's default value.	WITHOUT_CLASSIFICATION	0.9999953341207367	WITHOUT_CLASSIFICATION	4.665879263307011E-6	IMPLEMENTATION
configured outside of hibernate (i.e. servlet container or java bean container already has proxool pools running and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999969416559671	WITHOUT_CLASSIFICATION	3.0583440328459742E-6	IMPLEMENTATION
if you're closing down the connectionprovider chances are an is not a real big deal just warn	WITHOUT_CLASSIFICATION	0.9999759909385247	WITHOUT_CLASSIFICATION	2.400906147521378E-5	IMPLEMENTATION
(as is always optional for consistency with sql/oql)	WITHOUT_CLASSIFICATION	0.9999619867855597	WITHOUT_CLASSIFICATION	3.8013214440355626E-5	IMPLEMENTATION
process the "new" hql style where aliases are assigned _after_ the class name or path expression ie. using the as construction	WITHOUT_CLASSIFICATION	0.9999982196849361	WITHOUT_CLASSIFICATION	1.7803150639183587E-6	IMPLEMENTATION
the loaded owner will be set to null after the collection is removed so capture its value as the affected owner so it is accessible to both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999888675146632	WITHOUT_CLASSIFICATION	1.1132485336673743E-5	IMPLEMENTATION
is a primitive type invokespecial	WITHOUT_CLASSIFICATION	0.9999938197541289	WITHOUT_CLASSIFICATION	6.180245871069695E-6	IMPLEMENTATION
array of primitive type do nothing	WITHOUT_CLASSIFICATION	0.9999972100360753	WITHOUT_CLASSIFICATION	2.789963924703866E-6	IMPLEMENTATION
handle a path expression or class name that appears at the start in the "new" hql style or an alias that appears at the start in the "old" hql style	WITHOUT_CLASSIFICATION	0.999998688856195	WITHOUT_CLASSIFICATION	1.311143805003698E-6	IMPLEMENTATION
handle <= >= != is not not between not in	WITHOUT_CLASSIFICATION	0.9994997566811653	WITHOUT_CLASSIFICATION	5.002433188346906E-4	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999845750284	WITHOUT_CLASSIFICATION	1.542497164583196E-8	IMPLEMENTATION
transfer an explicitly defined entity name handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999742452802504	WITHOUT_CLASSIFICATION	2.5754719749658888E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999891198045088	WITHOUT_CLASSIFICATION	1.0880195491267023E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999891198045088	WITHOUT_CLASSIFICATION	1.0880195491267023E-5	IMPLEMENTATION
get meta's from <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999948836918755	WITHOUT_CLASSIFICATION	5.116308124444567E-6	IMPLEMENTATION
parameters on the property mapping should override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9996615284348296	WITHOUT_CLASSIFICATION	3.3847156517047674E-4	IMPLEMENTATION
fetch="join" overrides default laziness fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999895083019879	WITHOUT_CLASSIFICATION	1.0491698012141902E-5	IMPLEMENTATION
note special case default to join and non-lazy for the "second join" of the many-to-many	WITHOUT_CLASSIFICATION	0.9999991819603388	WITHOUT_CLASSIFICATION	8.180396613077975E-7	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999619726859617	WITHOUT_CLASSIFICATION	3.8027314038321694E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999754180808151	WITHOUT_CLASSIFICATION	2.4581919184871322E-5	IMPLEMENTATION
void setcomponenttuplizerfactory(componenttuplizerfactory componenttuplizerfactory) { this.componenttuplizerfactory = componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.99947001100235	WITHOUT_CLASSIFICATION	5.299889976500174E-4	IMPLEMENTATION
element index -> id	WITHOUT_CLASSIFICATION	0.9999454964845454	WITHOUT_CLASSIFICATION	5.4503515454577834E-5	IMPLEMENTATION
note that it might be better to iterate the snapshot but this is safe assuming the user implements equals() properly as required by the set contract!	WITHOUT_CLASSIFICATION	0.9998432646158264	WITHOUT_CLASSIFICATION	1.5673538417365035E-4	IMPLEMENTATION
collections detect changes made via their public interface and mark themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9947587978108682	WITHOUT_CLASSIFICATION	0.005241202189131819	IMPLEMENTATION
essentially if the real session is closed allow any method call to pass through since the real session will complain by throwing an appropriate exception note that allowing close() above has the same basic effect but we capture that there simply to perform the unbind	WITHOUT_CLASSIFICATION	0.9999884298883015	WITHOUT_CLASSIFICATION	1.1570111698384333E-5	IMPLEMENTATION
the default sqlexceptionconverter for all dialects is based on sqlstate since sqlerrorcode is extremely vendor-specific. specific dialects may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9918172544257745	WITHOUT_CLASSIFICATION	0.008182745574225521	IMPLEMENTATION
only necessary for postgre < 7.4 httpanoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.99993267531262	WITHOUT_CLASSIFICATION	6.732468738006868E-5	IMPLEMENTATION
select topic syntax from information_schema.help where section like 'function%' order by section topic see also -> httpwww.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999992105760251	WITHOUT_CLASSIFICATION	7.894239748527559E-7	IMPLEMENTATION
registercolumntype(types.varbinary "character($l)") registercolumntype(types.blob "character($l)" ) for use prior to cp 11.0 registercolumntype(types.clob "character($l)" )	WITHOUT_CLASSIFICATION	0.9998886331256586	WITHOUT_CLASSIFICATION	1.1136687434152783E-4	IMPLEMENTATION
the blob type requires a size arguement - this defaults to bytes - no arg defaults to 1 whole byte! other argument mods include k - kilobyte m - megabyte g - gigabyte. refer to the pbdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999922892391052	WITHOUT_CLASSIFICATION	7.71076089477789E-6	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9999169050273412	WITHOUT_CLASSIFICATION	8.309497265881253E-5	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999979576006863	WITHOUT_CLASSIFICATION	2.0423993137540762E-6	IMPLEMENTATION
add the comment nest the main query in an outer select add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999996984197224	WITHOUT_CLASSIFICATION	3.0158027761962337E-7	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999564793142913	WITHOUT_CLASSIFICATION	4.352068570870517E-5	IMPLEMENTATION
note for object <-> sql datatype mappings see configuration manager | advanced | sql | system ddl datatype mappings tbdregistercolumntype(types.binary "binary($1)") changed 08-11-2005 jsl	WITHOUT_CLASSIFICATION	0.9999999986956659	WITHOUT_CLASSIFICATION	1.3043341470259297E-9	IMPLEMENTATION
trim(end_keyword string-expression-1 from string-expression-2) use hibernate implementation "from" is one of the parameters they pass in position ?3 registerfunction( "trim" new sqlfunctiontemplate(hibernate.string "trim(?1 ?2 from ?3)") )	WITHOUT_CLASSIFICATION	0.9999936222492338	WITHOUT_CLASSIFICATION	6.377750766098452E-6	IMPLEMENTATION
whether this dialect has an identity clause added to the data type or a completely seperate identity data type	WITHOUT_CLASSIFICATION	0.9999999717994135	WITHOUT_CLASSIFICATION	2.8200586497858583E-8	IMPLEMENTATION
according to both the ansi-sql and jpa specs trim takes a variable number of parameters between 1 and 4. at least one paramer (trimsource) is required. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if <trim specification> is omitted both is assumed. if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.9999999921495781	WITHOUT_CLASSIFICATION	7.850421841654201E-9	IMPLEMENTATION
/ prepare persisters and link them up with their cache region/access-strategy	WITHOUT_CLASSIFICATION	0.9999818653606589	WITHOUT_CLASSIFICATION	1.813463934108313E-5	IMPLEMENTATION
named queries	WITHOUT_CLASSIFICATION	0.9999691772362005	WITHOUT_CLASSIFICATION	3.082276379947994E-5	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.999992186736084	WITHOUT_CLASSIFICATION	7.813263916037102E-6	IMPLEMENTATION
does not handle arrays (thats ok cos they can't be lazy) or newly instantiated collections so we can do the cast	WITHOUT_CLASSIFICATION	0.9814599660940754	WITHOUT_CLASSIFICATION	0.018540033905924572	IMPLEMENTATION
collection deletions are a special case since update() can add deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999375727842864	WITHOUT_CLASSIFICATION	6.242721571362629E-5	IMPLEMENTATION
we can do the cast since orphan-delete does not apply to 1. newly instantiated collections 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9994335639959347	WITHOUT_CLASSIFICATION	5.664360040652689E-4	IMPLEMENTATION
if the natural-id is marked as non-mutable it is not retrieved during a normal database-snapshot operation	WITHOUT_CLASSIFICATION	0.9999920679328498	WITHOUT_CLASSIFICATION	7.932067150202133E-6	IMPLEMENTATION
watch out for a case where old is still referenced somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999998519187036	WITHOUT_CLASSIFICATION	1.4808129638832342E-7	IMPLEMENTATION
slice to get the columns for this component property	WITHOUT_CLASSIFICATION	0.9999994311945877	WITHOUT_CLASSIFICATION	5.688054122304144E-7	IMPLEMENTATION
int result = 17 result = 37 result + type.hashcode() result = 37 result + ( value==null ? 0 value.hashcode() ) return result	WITHOUT_CLASSIFICATION	0.99998269673267	WITHOUT_CLASSIFICATION	1.7303267330025833E-5	IMPLEMENTATION
the collectionentry.isreached() stuff is just to detect any silly users who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999949852176059	WITHOUT_CLASSIFICATION	5.014782394038155E-6	IMPLEMENTATION
detached collection wrappers that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9931820899944942	WITHOUT_CLASSIFICATION	0.006817910005505764	IMPLEMENTATION
the unique property value represented here may or may not be serializable so we do an explicit check here in order to generate a better error message	WITHOUT_CLASSIFICATION	0.9751355274752196	WITHOUT_CLASSIFICATION	0.024864472524780367	IMPLEMENTATION
if the version of a newly instantiated object is not the same as the version seed value use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9990183155805337	WITHOUT_CLASSIFICATION	9.816844194663894E-4	IMPLEMENTATION
ie. we never have to null out a reference to an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999945739977618	WITHOUT_CLASSIFICATION	5.426002238196379E-6	IMPLEMENTATION
ignore this row the collection is in process of being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999991389770473	WITHOUT_CLASSIFICATION	8.610229526945029E-7	IMPLEMENTATION
entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currently not yet used	WITHOUT_CLASSIFICATION	0.9989281596763471	WITHOUT_CLASSIFICATION	0.0010718403236529923	IMPLEMENTATION
should be ok performance-wise to generate new delegate instances for each request since these are locally stack-scoped. besides it makes the code much easier to read than the old transactionhelper stuff	WITHOUT_CLASSIFICATION	0.9999999823024766	WITHOUT_CLASSIFICATION	1.7697523432343312E-8	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998492573726698	WITHOUT_CLASSIFICATION	1.5074262733021676E-4	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998492573726698	WITHOUT_CLASSIFICATION	1.5074262733021676E-4	IMPLEMENTATION
wrap up any new collections directly referenced by the object or its components	WITHOUT_CLASSIFICATION	0.9999994975630302	WITHOUT_CLASSIFICATION	5.024369697519393E-7	IMPLEMENTATION
remove any snapshot not really for memory management purposes but rather because it might now be stale and there is no longer any entityentry to take precedence this is now handled by removeentity() session.getpersistencecontext().removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.999999937354938	WITHOUT_CLASSIFICATION	6.264506205640802E-8	IMPLEMENTATION
skip this check for composite-ids relating to dom4j entity-mode alternatively we could add a check to make sure the incoming id value is an instance of element	WITHOUT_CLASSIFICATION	0.9999337311460779	WITHOUT_CLASSIFICATION	6.626885392213408E-5	IMPLEMENTATION
upgrade the lock if necessary lock(result lockmode)	WITHOUT_CLASSIFICATION	0.9999805221293063	WITHOUT_CLASSIFICATION	1.9477870693575764E-5	IMPLEMENTATION
now any collections that are initialized inside this block do not get updated - they are ignored until the next flush	WITHOUT_CLASSIFICATION	0.8852530087947391	WITHOUT_CLASSIFICATION	0.11474699120526093	IMPLEMENTATION
we must clone embedded composite identifiers or we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999983358969435	WITHOUT_CLASSIFICATION	1.6641030565497519E-6	IMPLEMENTATION
sub-insertions should occur before containing insertion so try to do the callback now	WITHOUT_CLASSIFICATION	0.9995062536405545	WITHOUT_CLASSIFICATION	4.937463594455816E-4	IMPLEMENTATION
the entity is not associated with the session so try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9972878334839899	WITHOUT_CLASSIFICATION	0.0027121665160102304	IMPLEMENTATION
scan the query string for class names appearing in the from clause and replace with all persistent implementors of the class/interface returning multiple query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999710753478456	WITHOUT_CLASSIFICATION	2.892465215440082E-5	IMPLEMENTATION
save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998184724120098	WITHOUT_CLASSIFICATION	1.8152758799026193E-4	IMPLEMENTATION
evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998184724120098	WITHOUT_CLASSIFICATION	1.8152758799026193E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.999990204537561	WITHOUT_CLASSIFICATION	9.795462439049439E-6	IMPLEMENTATION
if it is an uninitialized proxy pointing with this session then when it is accessed the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.999999881729615	WITHOUT_CLASSIFICATION	1.1827038502248968E-7	IMPLEMENTATION
generate an explicit join for the root dot node. the implied joins will be collected and passed up to the root dot node.	WITHOUT_CLASSIFICATION	0.9999980548292334	WITHOUT_CLASSIFICATION	1.9451707665649185E-6	IMPLEMENTATION
a session is considered to contain an entity only if the entity has an entry in the session's persistence context and the entry reports that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9982526074093089	WITHOUT_CLASSIFICATION	0.0017473925906911062	IMPLEMENTATION
does the collection referenced by this fromelement specify an order-by attribute? if so attach it to the query's order-by	WITHOUT_CLASSIFICATION	0.9999997252373636	WITHOUT_CLASSIFICATION	2.747626365101751E-7	IMPLEMENTATION
and the token could be an identifer and the error is a mismatched token error	WITHOUT_CLASSIFICATION	0.9999981182380728	WITHOUT_CLASSIFICATION	1.8817619271092516E-6	IMPLEMENTATION
if a where clause was specified in the update/delete query use it to limit the returned ids here	WITHOUT_CLASSIFICATION	0.9999995907566547	WITHOUT_CLASSIFICATION	4.0924334534056573E-7	IMPLEMENTATION
int parameterstart = getwalker().getnumberofparametersinsetclause() list allparams = getidselectparameterspecifications() iterator whereparams = allparams.sublist( parameterstart allparams.size() ).iterator()	WITHOUT_CLASSIFICATION	0.9999704136863267	WITHOUT_CLASSIFICATION	2.9586313673221502E-5	IMPLEMENTATION
default implementation if this node has a data type and that data type is not an association then this is scalar.	WITHOUT_CLASSIFICATION	0.9999974492610493	WITHOUT_CLASSIFICATION	2.550738950801904E-6	IMPLEMENTATION
resolve the lhs fully generate implicit joins. pass in the property name so that the resolver can discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999361889726988	WITHOUT_CLASSIFICATION	6.381102730132588E-5	IMPLEMENTATION
if the propertytype is null and there isn't a parent just stop now there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999996178052489	WITHOUT_CLASSIFICATION	3.8219475111930765E-7	IMPLEMENTATION
we do not look for an existing join on the same path because it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9991477363796091	WITHOUT_CLASSIFICATION	8.522636203909472E-4	IMPLEMENTATION
our parent is another dot node meaning we are being further dereferenced. thus we need to generate a join unless the parent refers to the associated entity's pk (because 'our' table would know the fk).	WITHOUT_CLASSIFICATION	0.9973843163111445	WITHOUT_CLASSIFICATION	0.0026156836888553904	IMPLEMENTATION
public final currency getcurrency(int col) throws hibernateexception {return (currency) get(col)}	WITHOUT_CLASSIFICATION	0.9998994586615891	WITHOUT_CLASSIFICATION	1.0054133841093889E-4	IMPLEMENTATION
here we have two possibilities 1) the property-name matches the explicitly identifier property name 2) the property-name matches the implicit 'id' property name	WITHOUT_CLASSIFICATION	0.9997601863533188	WITHOUT_CLASSIFICATION	2.3981364668131398E-4	IMPLEMENTATION
set the unresolved path in this node and the parent. set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999522533562283	WITHOUT_CLASSIFICATION	4.7746643771743826E-5	IMPLEMENTATION
get the first child to be considered. sub-classes may do this differently in order to skip nodes that are not select expressions (e.g. distinct).	WITHOUT_CLASSIFICATION	0.999676883393872	WITHOUT_CLASSIFICATION	3.231166061280652E-4	IMPLEMENTATION
if this is an entity and the property is the identifier property then use getidentifiertype(). note that the propertyname.equals( propertypath ) checks whether we have a component key reference where the component class property name is the same as the entity id property name if the two are not equal this is the case and we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999837868401872	WITHOUT_CLASSIFICATION	1.6213159812877818E-5	IMPLEMENTATION
for a subquery the alias to use depends on a few things (we already know this is not an overall select) 1) if this from_element represents a correlation to the outer-most query a) if the outer query represents a multi-table persister we need to use the given alias in anticipation of one of the multi-table executors being used (as this subquery will actually be used in the "id select" phase of that multi-table executor) b) otherwise we need to use the persister's table name as the column qualification 2) otherwise (not correlated) use the given alias	WITHOUT_CLASSIFICATION	0.9990921938799149	WITHOUT_CLASSIFICATION	9.078061200851196E-4	IMPLEMENTATION
not a collection? return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9990288251246973	WITHOUT_CLASSIFICATION	9.711748753026889E-4	IMPLEMENTATION
collection of <many-to-any/> mappings used to circumvent the component-collection check below	WITHOUT_CLASSIFICATION	0.9997784210385964	WITHOUT_CLASSIFICATION	2.2157896140366493E-4	IMPLEMENTATION
otherwise the destination node was implied by the from clause and the from clause processor will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999981615695033	WITHOUT_CLASSIFICATION	1.8384304967028081E-6	IMPLEMENTATION
if the first identifier in the path referrs to the class alias (not the class name) then this is a correlated subselect. if it's a correlated sub-select use the existing table alias. otherwise generate a new one.	WITHOUT_CLASSIFICATION	0.9999994339261044	WITHOUT_CLASSIFICATION	5.660738957311996E-7	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999962765410182	WITHOUT_CLASSIFICATION	3.7234589818483926E-6	IMPLEMENTATION
an ident node can represent an index expression if the ident represents a naked property ref note this makes the assumption (which is currently the case in the hql-sql grammar) that the ident is first resolved itself (addrexpr -> resolve()). the other option if that changes is to call resolve from here but it is currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.999999641496406	WITHOUT_CLASSIFICATION	3.5850359396691463E-7	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9998353778150468	WITHOUT_CLASSIFICATION	1.6462218495323977E-4	IMPLEMENTATION
if this is an implied join in a from clause then use ansi-style joining and set the flag on the fromelement that indicates that it was implied in the from clause itself.	WITHOUT_CLASSIFICATION	0.9999996376562383	WITHOUT_CLASSIFICATION	3.623437616520821E-7	IMPLEMENTATION
origin.adddestination(destination) add the query spaces.	WITHOUT_CLASSIFICATION	0.9999324762247239	WITHOUT_CLASSIFICATION	6.752377527604342E-5	IMPLEMENTATION
for an explicit many-to-many relationship add a second join from the intermediate (many-to-many) table to the destination table. also make sure that the from element's idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999946774069268	WITHOUT_CLASSIFICATION	5.322593073176619E-6	IMPLEMENTATION
reset the node type because the rest of the system is expecting from_fragment all we wanted was for the factory to create the right sub-class. this might get reset again later on anyway to make the sql generation simpler.	WITHOUT_CLASSIFICATION	0.9999911581018475	WITHOUT_CLASSIFICATION	8.841898152468524E-6	IMPLEMENTATION
explicit = true this is an explict select. arraylist sqlresulttypelist = new arraylist()	WITHOUT_CLASSIFICATION	0.999993517193483	WITHOUT_CLASSIFICATION	6.482806517068181E-6	IMPLEMENTATION
sqlresulttypelist.add( type ) generate the select expression.	WITHOUT_CLASSIFICATION	0.9999880883497303	WITHOUT_CLASSIFICATION	1.1911650269676801E-5	IMPLEMENTATION
if the expression list has exactly one expression and the type of the expression is a collection then this might be a collection function such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999998657011958	WITHOUT_CLASSIFICATION	1.342988040988305E-7	IMPLEMENTATION
need to parse off the column qualifiers this is assuming (which is true as of now) that this is only used from update and delete hql statement parsing	WITHOUT_CLASSIFICATION	0.999930514197819	WITHOUT_CLASSIFICATION	6.948580218103913E-5	IMPLEMENTATION
for regression testing against output from the old parser found it easiest to simply reorder the fromelements here into ascending order in terms of injecting them into the resulting sql ast in orders relative to those expected by the old parser this is definitely another of those "only needed for regression purposes". the syntheticandfactory then simply injects them as it encounters them.	WITHOUT_CLASSIFICATION	0.9999132609737542	WITHOUT_CLASSIFICATION	8.673902624571038E-5	IMPLEMENTATION
the uber-rule here is that we need to include subclass joins if the fromelement is in any way dereferenced by a property from the subclass table otherwise we end up with column references qualified by a non-existent table reference in the resulting sql	WITHOUT_CLASSIFICATION	0.9999933598383068	WITHOUT_CLASSIFICATION	6.640161693186614E-6	IMPLEMENTATION
classic translator does not support collection of ordinal param metadata	WITHOUT_CLASSIFICATION	0.9976429344789421	WITHOUT_CLASSIFICATION	0.0023570655210578	IMPLEMENTATION
the following variables are stacks that keep information about each subexpression in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999999796717638	WITHOUT_CLASSIFICATION	2.0328236164082568E-8	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999845750284	WITHOUT_CLASSIFICATION	1.542497164583196E-8	IMPLEMENTATION
should not be able to reach last without maxposition being set unless there are no results	WITHOUT_CLASSIFICATION	0.9998554350709307	WITHOUT_CLASSIFICATION	1.445649290693857E-4	IMPLEMENTATION
we found it in the temp pc. should indicate we are in the midst of processing a result set containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999947751002768	WITHOUT_CLASSIFICATION	5.224899723241123E-6	IMPLEMENTATION
do not use proxiesbykey since not all proxies that point to this session's instances are in that collection!	WITHOUT_CLASSIFICATION	0.9991715076401367	WITHOUT_CLASSIFICATION	8.28492359863223E-4	IMPLEMENTATION
if there is no tm configured we will not be able to access the javax.transaction.transaction object in order to register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999993337640398	WITHOUT_CLASSIFICATION	6.662359601346238E-7	IMPLEMENTATION
since the result set cursor is always left at the first physical row after the "last processed" we need to jump back one position to get the key value we are interested in skipping	WITHOUT_CLASSIFICATION	0.9999993197599122	WITHOUT_CLASSIFICATION	6.802400877294777E-7	IMPLEMENTATION
true if this is a query and we are loading multiple instances of the same collection role otherwise this is a collectioninitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999914796078808	WITHOUT_CLASSIFICATION	8.520392119172815E-6	IMPLEMENTATION
we don't need to worry about existing version being uninitialized because this block isn't called by a re-entrant load (re-entrant loads _always_ have lock mode none)	WITHOUT_CLASSIFICATION	0.9998997210280521	WITHOUT_CLASSIFICATION	1.0027897194789606E-4	IMPLEMENTATION
add temp entry so that the next step is circular-reference safe - only needed because some types don't take proper advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.8997834606002222	IMPLEMENTATION	0.10021653939977776	WITHOUT_CLASSIFICATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999999184150591	WITHOUT_CLASSIFICATION	8.158494098567398E-8	IMPLEMENTATION
log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9851925114062396	WITHOUT_CLASSIFICATION	0.014807488593760352	IMPLEMENTATION
ps.close() just close it do not try to return it to the pool! note early exit!	WITHOUT_CLASSIFICATION	0.9999382553439358	WITHOUT_CLASSIFICATION	6.174465606424308E-5	IMPLEMENTATION
this has been shown to happen occasionally in rare cases when using a transaction manager + transaction-timeout where the timeout calls back through hibernate's registered transaction synchronization on a separate "reaping" thread. in cases where that reaping thread executes through this block at the same time the main application thread does we can get into situations where these cmes occur. and though it is not "allowed" per-se the end result without handling it specifically is infinite looping. so here we simply break the loop	WITHOUT_CLASSIFICATION	0.9980689042683084	WITHOUT_CLASSIFICATION	0.0019310957316916236	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.999901955605351	WITHOUT_CLASSIFICATION	9.804439464902354E-5	IMPLEMENTATION
can't cache this stuff either (per-invocation) we are given a map of user-alias -> lock mode create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999988017046175	WITHOUT_CLASSIFICATION	1.1982953824698028E-6	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns getcollectiontable().createuniquekey( getidentifier().getconstraintcolumns() )	WITHOUT_CLASSIFICATION	0.9987315826098626	WITHOUT_CLASSIFICATION	0.0012684173901373445	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999624532468365	WITHOUT_CLASSIFICATION	3.754675316357661E-5	IMPLEMENTATION
isset = collection.isset() issorted = collection.issorted()	WITHOUT_CLASSIFICATION	0.9998389885152281	WITHOUT_CLASSIFICATION	1.6101148477183535E-4	IMPLEMENTATION
lists arrays sets maps bags	WITHOUT_CLASSIFICATION	0.9999865937375643	WITHOUT_CLASSIFICATION	1.340626243582133E-5	IMPLEMENTATION
we finish all the "removes" first to take care of possible unique constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9988409316399984	WITHOUT_CLASSIFICATION	0.0011590683600015963	IMPLEMENTATION
use a combination of foreign key columns and pk columns since the ordering of removal and addition is not guaranteed when a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9998290871082666	WITHOUT_CLASSIFICATION	1.7091289173350684E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999624532468365	WITHOUT_CLASSIFICATION	3.754675316357661E-5	IMPLEMENTATION
information about properties of this class including inherited properties (only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9474307895544023	WITHOUT_CLASSIFICATION	0.05256921044559772	IMPLEMENTATION
all this only really needs to consider properties of this class not its subclasses but since we are reusing code used for sequential selects we use the subclass closure	WITHOUT_CLASSIFICATION	0.9999947235739368	WITHOUT_CLASSIFICATION	5.276426063167393E-6	IMPLEMENTATION
here we render the select column list based on the properties defined as being generated. for partial component generation we currently just re-select the whole component rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999924524139135	WITHOUT_CLASSIFICATION	7.54758608646345E-6	IMPLEMENTATION
this is the root (versioned) table and we are using version-based optimistic locking if we are not updating the version also don't check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9985662596823535	WITHOUT_CLASSIFICATION	0.001433740317646476	IMPLEMENTATION
optimistic-lock="all" include all updatable properties optimistic-lock="dirty" include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999816316530484	WITHOUT_CLASSIFICATION	1.83683469515893E-5	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997473702205564	WITHOUT_CLASSIFICATION	2.5262977944354935E-4	IMPLEMENTATION
check to see if the connection is in auto-commit mode (no connection means aggressive connection release outside a jta transaction context so must be autocommit mode)	WITHOUT_CLASSIFICATION	0.999977777086316	WITHOUT_CLASSIFICATION	2.222291368399604E-5	IMPLEMENTATION
need to treat this as if it where optimistic-lock="all" (dirty does not make sense) first we need to locate the "loaded" state note it potentially could be a proxy so perform the location the safe way	WITHOUT_CLASSIFICATION	0.9985420122117774	WITHOUT_CLASSIFICATION	0.001457987788222565	IMPLEMENTATION
we always assume an instance with a null identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999994733763367	WITHOUT_CLASSIFICATION	5.266236634623833E-7	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.999961227537827	WITHOUT_CLASSIFICATION	3.877246217300847E-5	IMPLEMENTATION
allow any identifier quoted with backtick only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999444820141915	WITHOUT_CLASSIFICATION	5.551798580841232E-5	IMPLEMENTATION
following doesn't handle (null not null) but unnecessary since this would mean all rows	WITHOUT_CLASSIFICATION	0.9967446480356204	WITHOUT_CLASSIFICATION	0.0032553519643796864	IMPLEMENTATION
impl note due to the delayed population of setters (setters cached for performance) we really cannot pro0perly define equality for this transformer	WITHOUT_CLASSIFICATION	0.9999995772169441	WITHOUT_CLASSIFICATION	4.2278305592598134E-7	IMPLEMENTATION
we need to dirty check collections since they can cause an owner version number increment	WITHOUT_CLASSIFICATION	0.9951471314750496	WITHOUT_CLASSIFICATION	0.0048528685249503625	IMPLEMENTATION
return the id so we can use it to reset the proxy id return result	WITHOUT_CLASSIFICATION	0.9997791644736423	WITHOUT_CLASSIFICATION	2.2083552635762124E-4	IMPLEMENTATION
optimizer = getfactory().getsettings().getbytecodeprovider().getreflectionoptimizer( mappedclass getternames setternames proptypes )	WITHOUT_CLASSIFICATION	0.9997595790632356	WITHOUT_CLASSIFICATION	2.4042093676436387E-4	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9936222558567477	WITHOUT_CLASSIFICATION	0.006377744143252393	IMPLEMENTATION
we now have the value of the property-ref we reference. however we need to dig a little deeper as that property might also be an entity type in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999911070558408	WITHOUT_CLASSIFICATION	8.892944159173669E-6	IMPLEMENTATION
retrieve the value of the designated column in the current row of this resultset object as a java.io.reader object	WITHOUT_CLASSIFICATION	0.9999974528475204	WITHOUT_CLASSIFICATION	2.5471524797004294E-6	IMPLEMENTATION
not absolutely necessary but helps for some equals()/hashcode() implementations	WITHOUT_CLASSIFICATION	0.9972181286371099	WITHOUT_CLASSIFICATION	0.0027818713628902053	IMPLEMENTATION
this should be a call to resolve() not resolveidentifier() 'cos it might be a property-ref and we did not cache the referenced value	WITHOUT_CLASSIFICATION	0.997491774985738	WITHOUT_CLASSIFICATION	0.0025082250142620137	IMPLEMENTATION
if we have <tt>not-found="ignore"</tt> association mapped to a formula we always need to dirty check it so we can update the second-level cache	WITHOUT_CLASSIFICATION	0.9995920684232219	WITHOUT_CLASSIFICATION	4.079315767780851E-4	IMPLEMENTATION
can't just return null here since that would cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999541711015076	WITHOUT_CLASSIFICATION	4.582889849237047E-5	IMPLEMENTATION
for arrays replaceelements() may return a different reference since the array length might not match	WITHOUT_CLASSIFICATION	0.9998905227942658	WITHOUT_CLASSIFICATION	1.0947720573421541E-4	IMPLEMENTATION
actual cache of the entries. soft references are used for both the keys and the values here since the values pertaining to the mru entries are kept in a seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999989332152	WITHOUT_CLASSIFICATION	1.0667848295606134E-9	IMPLEMENTATION
as soon as we encounter our first letter return the substring from that position	WITHOUT_CLASSIFICATION	0.9999907330048601	WITHOUT_CLASSIFICATION	9.266995139933049E-6	IMPLEMENTATION
note expected in the syntax type=listenerclass ({sep}type=listenerclass) where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999983536928023	WITHOUT_CLASSIFICATION	1.6463071976537732E-6	IMPLEMENTATION
istransactioncallbackregistered denotes whether any hibernate transaction has registered as a callback against this jdbccontext only one such callback is allowed. directly serializing this value causes problems with jdbctransaction or really any transaction impl where the callback is local to the transaction instance itself since that transaction is not serialized along with the jdbccontext. thus we handle that fact here explicitly	WITHOUT_CLASSIFICATION	0.9999374038738068	WITHOUT_CLASSIFICATION	6.259612619320451E-5	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999224360597005	WITHOUT_CLASSIFICATION	7.756394029943927E-5	IMPLEMENTATION
we call getkeyfromresultset() here so that we can know the key value upon which to perform the breaking logic. however it is also then called from getrowfromresultset() which is certainly not the most efficient. but the call here is needed and there currently is no other way without refactoring of the doquery()/getrowfromresultset() methods	WITHOUT_CLASSIFICATION	0.9989936065360799	IMPLEMENTATION	0.001006393463920111	WITHOUT_CLASSIFICATION
this check is needed since processing leaves the cursor after the last physical row for the current logical row thus if we are after the last physical row this might be caused by either 1) scrolling to the last logical row 2) scrolling past the last logical row in the latter scenario the previous logical row really is the last logical row. in all other cases we should process back two logical records (the current logic row plus the previous logical row).	WITHOUT_CLASSIFICATION	0.9982455868970757	WITHOUT_CLASSIFICATION	0.0017544131029243696	IMPLEMENTATION
and perform the load	WITHOUT_CLASSIFICATION	0.9999454026489741	WITHOUT_CLASSIFICATION	5.4597351025861955E-5	IMPLEMENTATION
important reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999436608628107	WITHOUT_CLASSIFICATION	5.6339137189291066E-5	IMPLEMENTATION
this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999950567103817	WITHOUT_CLASSIFICATION	4.943289618216666E-6	IMPLEMENTATION
we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999981610462845	WITHOUT_CLASSIFICATION	1.8389537156026972E-6	IMPLEMENTATION
we did not find a collection element in the result set so we ensure that a collection is created with the owner's identifier since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.999592349538812	WITHOUT_CLASSIFICATION	4.0765046118804117E-4	IMPLEMENTATION
this is a collection initializer so we must create a collection for each of the passed-in keys to account for the possibility that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999975564987902	WITHOUT_CLASSIFICATION	2.443501209833421E-6	IMPLEMENTATION
grab its state from the resultset and keep it in the session (but don't yet initialize the object itself) note that we acquire lockmode.read even if it was not requested	WITHOUT_CLASSIFICATION	0.999999749504806	WITHOUT_CLASSIFICATION	2.504951939851403E-7	IMPLEMENTATION
a many-to-many decrement currentdepth here to allow join across the association table without exceeding max_fetch_depth (i.e. the "currentdepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999024167116343	WITHOUT_CLASSIFICATION	9.758328836564829E-5	IMPLEMENTATION
if not a composite key use "foo in (? ? ?)" for batching if no batch and not a composite key use "foo = ?"	WITHOUT_CLASSIFICATION	0.9996330102822666	WITHOUT_CLASSIFICATION	3.669897177334671E-4	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9995876698006687	WITHOUT_CLASSIFICATION	4.123301993313223E-4	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999943485245963	WITHOUT_CLASSIFICATION	5.651475403596827E-6	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999943485245963	WITHOUT_CLASSIFICATION	5.651475403596827E-6	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999921749112479	WITHOUT_CLASSIFICATION	7.82508875211065E-6	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.999999775999029	WITHOUT_CLASSIFICATION	2.2400097096248197E-7	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999410471201802	WITHOUT_CLASSIFICATION	5.89528798198897E-5	IMPLEMENTATION
translates an ast join type (i.e. the token type) into a joinfragment.xxx join type. @param astjointype the ast join type (from hqlsqltokentypes or sqltokentypes) @return a joinfragment.xxx join type. @see joinfragment @see sqltokentypes	WITHOUT_CLASSIFICATION	0.9999978788073632	WITHOUT_CLASSIFICATION	2.1211926367523377E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999763688219834	WITHOUT_CLASSIFICATION	2.3631178016617243E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999763688219834	WITHOUT_CLASSIFICATION	2.3631178016617243E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999570543238127	WITHOUT_CLASSIFICATION	4.2945676187422864E-5	IMPLEMENTATION
public list getcollectionaliases() { return collectionaliases } public list getcollectionowners() { return collectionowners } public list getcollectionowneraliases() { return collectionowneraliases } public list getcollectionpersisters() { return collectionpersisters } public map getalias2persister() { return alias2persister } public boolean iscollectioninitializer() { return iscollectioninitializer } public list getpersisters() { return persisters } public map getalias2owneralias() { return alias2owneralias } public list getscalartypes() { return scalartypes } public list getscalarcolumnaliases() { return scalarcolumnaliases } public list getpropertyresults() { return propertyresults } public list getcollectionpropertyresults() { return collectionresults } public map getalias2return() { return alias2return }	WITHOUT_CLASSIFICATION	0.9999920447290002	WITHOUT_CLASSIFICATION	7.955270999836206E-6	IMPLEMENTATION
sqlqueryparser parser = new sqlqueryparser( sqlquery processor.getalias2persister() processor.getalias2return() aliases collaliases collpersisters suffixes collsuffixes ) sql = parser.process() namedparameterbindpoints = parser.getnamedparameters()	WITHOUT_CLASSIFICATION	0.9998141607602979	WITHOUT_CLASSIFICATION	1.8583923970206547E-4	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998087111612879	WITHOUT_CLASSIFICATION	1.9128883871214427E-4	IMPLEMENTATION
sqlaliassuffixes[i] = element.getcolumnaliassuffix()	WITHOUT_CLASSIFICATION	0.9998389885152281	WITHOUT_CLASSIFICATION	1.6101148477183535E-4	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.999348365600417	WITHOUT_CLASSIFICATION	6.516343995830597E-4	IMPLEMENTATION
at this point we have (drivingsqlalias) the sql alias of the driving table corresponding to the given user alias. however the driving table is not (necessarily) the table against which we want to apply locks. mainly the exception case here is joined-subclass hierarchies where we instead want to apply the lock against the root table (for all other strategies it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.989960069935664	WITHOUT_CLASSIFICATION	0.01003993006433597	IMPLEMENTATION
the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999763142632391	WITHOUT_CLASSIFICATION	2.36857367608323E-5	IMPLEMENTATION
we have a mapped identifier property and the root of the incoming property path matched that identifier property	WITHOUT_CLASSIFICATION	0.9998188307377895	WITHOUT_CLASSIFICATION	1.8116926221049462E-4	IMPLEMENTATION
we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999629303035886	WITHOUT_CLASSIFICATION	3.70696964113778E-5	IMPLEMENTATION
both many-to-one and one-to-one are represented as a property. entitypersister is relying on this value to determine "lazy fetch groups" in terms of field-level interception. so we need to make sure that we return true here for the case of many-to-one and one-to-one with lazy="no-proxy" impl note - lazy="no-proxy" currently forces both lazy and unwrap to be set to true. the other case we are extremely interested in here is that of lazy="proxy" where lazy is set to true but unwrap is set to false. thus we use both here under the assumption that this return is really only ever used during persister construction to determine the lazy property/field fetch groupings. if that assertion changes then this check needs to change as well. partially this is an issue with the overloading of the term "lazy" here	WITHOUT_CLASSIFICATION	0.9999999978299178	WITHOUT_CLASSIFICATION	2.170082295537847E-9	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952152024666	WITHOUT_CLASSIFICATION	4.784797533349811E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952152024666	WITHOUT_CLASSIFICATION	4.784797533349811E-6	IMPLEMENTATION
roottablename = persistentclass.getroottable().getqualifiedname( factory.getdialect() factory.getdefaultcatalog() factory.getdefaultschema() )	WITHOUT_CLASSIFICATION	0.9997595790632356	WITHOUT_CLASSIFICATION	2.4042093676436387E-4	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999826145564068	WITHOUT_CLASSIFICATION	1.7385443593278585E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.999992431664391	WITHOUT_CLASSIFICATION	7.56833560887261E-6	IMPLEMENTATION
protected void initpropertypaths(final string pathfinal type typefinal string[] columnsfinal string[] formulatemplatesfinal mapping factory)throws mappingexception {addformulapropertypath(path type formulatemplates)initpropertypaths(path type columns formulatemplates factory)}	WITHOUT_CLASSIFICATION	0.9999933197750414	WITHOUT_CLASSIFICATION	6.680224958691193E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
custom sql (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999747428112007	WITHOUT_CLASSIFICATION	2.5257188799332825E-5	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999812652767256	WITHOUT_CLASSIFICATION	1.873472327444191E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
aliases for identifier ( alias.id ) skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999979109821882	WITHOUT_CLASSIFICATION	2.089017811884245E-6	IMPLEMENTATION
decide which resultset to get the property value from	WITHOUT_CLASSIFICATION	0.9999835499076858	WITHOUT_CLASSIFICATION	1.645009231421152E-5	IMPLEMENTATION
note it is conceptually possible that a usertype could map null to a non-null value so the following is arguable	WITHOUT_CLASSIFICATION	0.9999597921662836	WITHOUT_CLASSIFICATION	4.020783371646864E-5	IMPLEMENTATION
the contract of entitytuplizer.determineconcretesubclassentityname says that returning null is an indication that the specified entity-name (this.getentityname) should be used.	WITHOUT_CLASSIFICATION	0.9999834677666491	WITHOUT_CLASSIFICATION	1.653223335094794E-5	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.999961227537827	WITHOUT_CLASSIFICATION	3.877246217300847E-5	IMPLEMENTATION
cache these since they are stateless this one could even be static	WITHOUT_CLASSIFICATION	0.9999947911517956	WITHOUT_CLASSIFICATION	5.208848204349021E-6	IMPLEMENTATION
"as" is not in keywords	WITHOUT_CLASSIFICATION	0.9998864055140138	WITHOUT_CLASSIFICATION	1.1359448598625238E-4	IMPLEMENTATION
--commented out by inspection (12/4/04 910 am) public abstract void addcondition(string alias string[] columns string condition)	WITHOUT_CLASSIFICATION	0.9999998106248473	WITHOUT_CLASSIFICATION	1.8937515262036196E-7	IMPLEMENTATION
use the id column alias	WITHOUT_CLASSIFICATION	0.9998333983020978	WITHOUT_CLASSIFICATION	1.6660169790223934E-4	IMPLEMENTATION
private list aliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999856320967577	WITHOUT_CLASSIFICATION	1.43679032422571E-5	IMPLEMENTATION
columns.add(columnname) aliases.add(tablealias)	WITHOUT_CLASSIFICATION	0.9999153566133226	WITHOUT_CLASSIFICATION	8.464338667727693E-5	IMPLEMENTATION
where fragment must be empty!	WITHOUT_CLASSIFICATION	0.999946543739826	WITHOUT_CLASSIFICATION	5.345626017401864E-5	IMPLEMENTATION
revert to traditional hibernate behavior of setting initialpoolsize to minpoolsize unless otherwise specified with a c3p0.-style parameter.	WITHOUT_CLASSIFICATION	0.9998992768497355	WITHOUT_CLASSIFICATION	1.0072315026455368E-4	IMPLEMENTATION
arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9997714851954101	WITHOUT_CLASSIFICATION	2.285148045897096E-4	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9957844462959741	WITHOUT_CLASSIFICATION	0.004215553704025952	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9957844462959741	WITHOUT_CLASSIFICATION	0.004215553704025952	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999983939058318	WITHOUT_CLASSIFICATION	1.6060941681575083E-6	IMPLEMENTATION
essentially 1) if we have a local (hibernate) transaction in progress and it already has the usertransaction cached use that usertransaction to determine the status. 2) if a transaction manager has been located use that transaction manager to determine the status. 3) finally as the last resort try to lookup the usertransaction via jndi and use that to determine the status.	WITHOUT_CLASSIFICATION	0.999999962852786	WITHOUT_CLASSIFICATION	3.714721393779464E-8	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999672053460105	WITHOUT_CLASSIFICATION	3.2794653989501576E-5	IMPLEMENTATION
swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999610619272455	WITHOUT_CLASSIFICATION	3.893807275441017E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999813923037822	WITHOUT_CLASSIFICATION	1.8607696217748173E-5	IMPLEMENTATION
we need to dirty check many-to-ones with not-found="ignore" in order to update the cache (not the database) since in this case a null entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999933245137338	WITHOUT_CLASSIFICATION	6.675486266152417E-6	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999814348790873	WITHOUT_CLASSIFICATION	1.8565120912746137E-5	IMPLEMENTATION
regions can get instantiated in the course of normal work (e.g. a named query region will be created the first time the query is executed) so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999999959635244	WITHOUT_CLASSIFICATION	4.036475593286471E-9	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9998349095966315	WITHOUT_CLASSIFICATION	1.6509040336857897E-4	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9998427336684752	WITHOUT_CLASSIFICATION	1.5726633152475313E-4	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999196610454726	WITHOUT_CLASSIFICATION	8.033895452744328E-5	IMPLEMENTATION
note this is being used from the process of shutting down a sessionfactory. specific things to consider (1) this clearing of the region should not propagate to other nodes on the cluster (if any) this is the cache-mode-local option bit (2) really just trying a best effort to cleanup after ourselves lock failures etc are not critical here this is the fail-silently option bit	WITHOUT_CLASSIFICATION	0.9402489527901678	WITHOUT_CLASSIFICATION	0.05975104720983211	IMPLEMENTATION
need to extract the component values and check for subtype replacements	WITHOUT_CLASSIFICATION	0.9997567885521479	WITHOUT_CLASSIFICATION	2.4321144785203347E-4	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999912703031699	WITHOUT_CLASSIFICATION	8.72969683009681E-6	IMPLEMENTATION
for now just "re-flatten" the metamodel since this is temporary stuff anyway (hhh-1907)	WITHOUT_CLASSIFICATION	0.9999995571762603	WITHOUT_CLASSIFICATION	4.428237395919881E-7	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.999874674401266	WITHOUT_CLASSIFICATION	1.2532559873411914E-4	IMPLEMENTATION
this solution would allow us to eliminate the owner arg to disassemble() but what if the collection was null and then later had elements added? seems unsafe session.getpersistencecontext().getcollectionentry( (persistentcollection) value ).getkey()	WITHOUT_CLASSIFICATION	0.999990975805273	WITHOUT_CLASSIFICATION	9.024194727112883E-6	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.999760345030139	WITHOUT_CLASSIFICATION	2.3965496986095617E-4	IMPLEMENTATION
some collections are not lazy	WITHOUT_CLASSIFICATION	0.9980774237363332	WITHOUT_CLASSIFICATION	0.0019225762636667573	IMPLEMENTATION
here we don't want to suspend the tx. if we do 1) we might be caching query results that reflect uncommitted changes. no tx == no wl on cache node so other threads can prematurely see those query results 2) no tx == immediate replication. more overhead plus we spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9505129523597342	WITHOUT_CLASSIFICATION	0.04948704764026593	IMPLEMENTATION
return the (fully resolved) identifier value but do not resolve to the actual referenced entity instance note the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999853569053795	WITHOUT_CLASSIFICATION	1.4643094620363545E-5	IMPLEMENTATION
add a zero (or quite low) timeout option so we don't block. ignore any timeoutexception. basically we forego caching the query result in order to avoid blocking. reads are done with suspended tx so they should not hold the lock for long. not caching the query result is ok since any subsequent read will just see the old result with its out-of-date timestamp that result will be discarded and the db query performed again.	WITHOUT_CLASSIFICATION	0.9999999974806769	WITHOUT_CLASSIFICATION	2.519323100009346E-9	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999971278529791	WITHOUT_CLASSIFICATION	2.872147020834388E-6	IMPLEMENTATION
we have the jbcwritemutex so no other local thread will be trying to write this key. it's possible here some remote thread has come in and changed the values again but since we are reading the values to write to jbc right now we know we are writing the latest values i.e. we don't assume that what we cached in entry.update() above is what we should write to jbc now. our write could be redundant i.e. we are writing what some remote thread just came in an wrote. there is a chance that yet another remote thread will update us and we'll then overwrite that later data in jbc. but all remote nodes will ignore that change in their localcache the only place it will live will be in jbc where it can only effect the initial state transfer values on newly joined nodes (i.e. populatelocalcache()).	WITHOUT_CLASSIFICATION	0.9999998257368954	WITHOUT_CLASSIFICATION	1.7426310448492245E-7	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999722499211364	WITHOUT_CLASSIFICATION	2.77500788635925E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999722499211364	WITHOUT_CLASSIFICATION	2.77500788635925E-5	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9975843993108351	WITHOUT_CLASSIFICATION	0.002415600689164931	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9895413417812167	WITHOUT_CLASSIFICATION	0.010458658218783367	IMPLEMENTATION
we need to obtain the lock before any actions are executed since this may be an inverse="true" bidirectional association and it is one of the earlier entity actions which actually updates the database (this action is resposible for second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999976632462387	WITHOUT_CLASSIFICATION	2.336753761259602E-6	IMPLEMENTATION
postdelete after actually deleting a row record the fact that the instance no longer exists on the database (needed for identity-column key generation) and remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999939488463971	WITHOUT_CLASSIFICATION	6.051153602881511E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9989850888413557	WITHOUT_CLASSIFICATION	0.0010149111586441888	IMPLEMENTATION
