todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.6676230375996299	IMPLEMENTATION	0.33237696240037	WITHOUT_CLASSIFICATION
todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.6676230375996299	IMPLEMENTATION	0.33237696240037	WITHOUT_CLASSIFICATION
todo return new lock(ts)	IMPLEMENTATION	0.8377528477957599	WITHOUT_CLASSIFICATION	0.16224715220424016	IMPLEMENTATION
todo if lock.gettimestamp().equals(ts)	IMPLEMENTATION	0.9414195742369305	WITHOUT_CLASSIFICATION	0.05858042576306964	IMPLEMENTATION
todo mappings.getlogicaltablename(ownertable)	IMPLEMENTATION	0.6635312075744088	WITHOUT_CLASSIFICATION	0.33646879242559125	IMPLEMENTATION
todo handle typedefs	IMPLEMENTATION	0.7016819662603279	IMPLEMENTATION	0.2983180337396721	WITHOUT_CLASSIFICATION
todo check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.915598500096145	WITHOUT_CLASSIFICATION	0.08440149990385504	IMPLEMENTATION
todo bindpropertyresults(alias returnelem)	IMPLEMENTATION	0.6635312075744088	WITHOUT_CLASSIFICATION	0.33646879242559125	IMPLEMENTATION
todo validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.9021706477531998	WITHOUT_CLASSIFICATION	0.09782935224680027	IMPLEMENTATION
todo native ids	IMPLEMENTATION	0.5515358559623086	IMPLEMENTATION	0.4484641440376914	WITHOUT_CLASSIFICATION
todo if we are using identity columns fetch the identifier	IMPLEMENTATION	0.9969742859025179	WITHOUT_CLASSIFICATION	0.0030257140974821414	IMPLEMENTATION
todo handle property-ref	IMPLEMENTATION	0.5681555416686181	IMPLEMENTATION	0.43184445833138185	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.8213479932911406	IMPLEMENTATION	0.1786520067088594	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.8213479932911406	IMPLEMENTATION	0.1786520067088594	WITHOUT_CLASSIFICATION
todo check if mimer sql cannot handle the way db2 does	IMPLEMENTATION	0.9973406956382787	WITHOUT_CLASSIFICATION	0.0026593043617214045	IMPLEMENTATION
todo restrict violation	IMPLEMENTATION	0.7883625190352729	WITHOUT_CLASSIFICATION	0.21163748096472723	IMPLEMENTATION
todo lowercasing done here. was done "at random" before maybe not needed at all ?	IMPLEMENTATION	0.9999926891145354	IMPLEMENTATION	7.310885464569249E-6	WITHOUT_CLASSIFICATION
todo tolowercase was not done before. only used in template.	IMPLEMENTATION	0.9559967957107053	WITHOUT_CLASSIFICATION	0.0440032042892947	IMPLEMENTATION
add an entry for this type of entity. we can be assured that all referenced entities have already been processed so specify that this entity is with the latest batch. doing the batch number before adding the name to the list is a faster way to get an accurate number.	IMPLEMENTATION	0.9999761666187957	WITHOUT_CLASSIFICATION	2.3833381204264424E-5	IMPLEMENTATION
todo avoid this for non-new instances where mightbedirty==false	IMPLEMENTATION	0.575877747411824	WITHOUT_CLASSIFICATION	0.4241222525881761	IMPLEMENTATION
todo optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.8448362720724367	WITHOUT_CLASSIFICATION	0.15516372792756325	IMPLEMENTATION
we could move this inside if we wanted to tolerate collection initializations during collection dirty checking	IMPLEMENTATION	0.999955654883981	WITHOUT_CLASSIFICATION	4.434511601905182E-5	IMPLEMENTATION
todo assertion only could be optimized away	IMPLEMENTATION	0.6978664155209955	WITHOUT_CLASSIFICATION	0.30213358447900457	IMPLEMENTATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.8149685517442129	IMPLEMENTATION	0.18503144825578713	WITHOUT_CLASSIFICATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.8149685517442129	IMPLEMENTATION	0.18503144825578713	WITHOUT_CLASSIFICATION
todo why aren't these the same?	IMPLEMENTATION	0.9727572477146511	IMPLEMENTATION	0.027242752285348868	WITHOUT_CLASSIFICATION
todo always true for now but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.949235830874799	WITHOUT_CLASSIFICATION	0.05076416912520092	IMPLEMENTATION
todo or should we return 'containstablealias'??	IMPLEMENTATION	0.7080670922353037	WITHOUT_CLASSIFICATION	0.2919329077646962	IMPLEMENTATION
todo arithmetic expressions multiple new foo()	IMPLEMENTATION	0.7554236362155599	WITHOUT_CLASSIFICATION	0.24457636378444023	IMPLEMENTATION
todo for some dialects it would be appropriate to add the renderorderbypropertiesselect() to other select strings	IMPLEMENTATION	0.9466015409614689	IMPLEMENTATION	0.05339845903853121	WITHOUT_CLASSIFICATION
todo cache the persister this shows up in yourkit	IMPLEMENTATION	0.9266643388365667	WITHOUT_CLASSIFICATION	0.07333566116343333	IMPLEMENTATION
todo theoretically non-threadsafe	IMPLEMENTATION	0.6635312075744088	WITHOUT_CLASSIFICATION	0.33646879242559125	IMPLEMENTATION
todo look at optimizing these	IMPLEMENTATION	0.5692079476779606	WITHOUT_CLASSIFICATION	0.43079205232203954	IMPLEMENTATION
todo maybe call it getrowselection() ?	IMPLEMENTATION	0.9589643442233853	IMPLEMENTATION	0.04103565577661465	WITHOUT_CLASSIFICATION
todo make this handle multiple collection roles!	IMPLEMENTATION	0.9137396105796046	IMPLEMENTATION	0.08626038942039535	WITHOUT_CLASSIFICATION
todo can we limit stored procedures ?!	IMPLEMENTATION	0.5117657387100364	IMPLEMENTATION	0.4882342612899636	WITHOUT_CLASSIFICATION
todo not visible to the user!	IMPLEMENTATION	0.9384097234944894	IMPLEMENTATION	0.06159027650551057	WITHOUT_CLASSIFICATION
todo unnecessary for databases with ansi-style joins	IMPLEMENTATION	0.9091997025089026	WITHOUT_CLASSIFICATION	0.09080029749109739	IMPLEMENTATION
todo use these in methods above	IMPLEMENTATION	0.767108682592621	WITHOUT_CLASSIFICATION	0.23289131740737895	IMPLEMENTATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.7410048848714196	WITHOUT_CLASSIFICATION	0.2589951151285804	IMPLEMENTATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.7410048848714196	WITHOUT_CLASSIFICATION	0.2589951151285804	IMPLEMENTATION
todo temporary initial step towards hhh-1907	IMPLEMENTATION	0.9242934636918887	WITHOUT_CLASSIFICATION	0.07570653630811132	IMPLEMENTATION
todo remove this once componentmetamodel is complete and merged	IMPLEMENTATION	0.7870298793068488	WITHOUT_CLASSIFICATION	0.21297012069315127	IMPLEMENTATION
todo handle supportsnotnullunique=false but such a case does not exist in the wild so far	IMPLEMENTATION	0.9974076727662298	WITHOUT_CLASSIFICATION	0.0025923272337703496	IMPLEMENTATION
todo still need to make collectionpersisters entitymode-aware	IMPLEMENTATION	0.9898370088633374	IMPLEMENTATION	0.010162991136662672	WITHOUT_CLASSIFICATION
todo add owner argument!!	IMPLEMENTATION	0.7142419176750016	WITHOUT_CLASSIFICATION	0.2857580823249984	IMPLEMENTATION
todo formulas ?	IMPLEMENTATION	0.5343871741356953	IMPLEMENTATION	0.4656128258643048	WITHOUT_CLASSIFICATION
todo include the rowids!!!!	IMPLEMENTATION	0.814143563967784	WITHOUT_CLASSIFICATION	0.1858564360322161	IMPLEMENTATION
todo cache this sql	IMPLEMENTATION	0.6200137870550702	WITHOUT_CLASSIFICATION	0.37998621294492985	IMPLEMENTATION
todo create uk loaders for component properties	IMPLEMENTATION	0.9839733183597247	WITHOUT_CLASSIFICATION	0.016026681640275386	IMPLEMENTATION
todo cache this in an instvar	IMPLEMENTATION	0.9769556423595602	WITHOUT_CLASSIFICATION	0.023044357640439835	IMPLEMENTATION
/ todo look at perhaps caching this	IMPLEMENTATION	0.7730148841839967	IMPLEMENTATION	0.22698511581600334	WITHOUT_CLASSIFICATION
todo eventually put this back in once we think all is fixed object otheralias = columnsunique.put(qualifiedcolumn columnalias)	IMPLEMENTATION	0.5127731445747795	WITHOUT_CLASSIFICATION	0.48722685542522043	IMPLEMENTATION
todo if we support multiple fetch groups we would need to clone the set of lazy properties!	IMPLEMENTATION	0.6769358741471707	WITHOUT_CLASSIFICATION	0.3230641258528293	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.5152360849019185	WITHOUT_CLASSIFICATION	0.4847639150980814	IMPLEMENTATION
todo terrible implementation!	IMPLEMENTATION	0.6551949367983296	WITHOUT_CLASSIFICATION	0.3448050632016704	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.5152360849019185	WITHOUT_CLASSIFICATION	0.4847639150980814	IMPLEMENTATION
todo i don't really like this implementation it would be better if this was handled by searchfordirtycollections()	IMPLEMENTATION	0.8821394227912486	IMPLEMENTATION	0.11786057720875145	WITHOUT_CLASSIFICATION
todo check if key contains the owner id	IMPLEMENTATION	0.6925425174619136	WITHOUT_CLASSIFICATION	0.3074574825380863	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.5152360849019185	WITHOUT_CLASSIFICATION	0.4847639150980814	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9998918367946388	WITHOUT_CLASSIFICATION	1.0816320536127996E-4	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9998918367946388	WITHOUT_CLASSIFICATION	1.0816320536127996E-4	IMPLEMENTATION
if we are still not resolved we might represent a constant. needed to add this here because the allowance of naked-prop-refs in the grammar collides with the definition of literals/constants ("nondeterminism"). todo cleanup the grammar so that "processconstants" is always just handled from here	IMPLEMENTATION	0.9658131324816465	IMPLEMENTATION	0.03418686751835355	WITHOUT_CLASSIFICATION
todo add referencedclass to disambiguate to fks on the same columns pointing to different tables	IMPLEMENTATION	0.7903370564067398	WITHOUT_CLASSIFICATION	0.2096629435932602	IMPLEMENTATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999862225028436	WITHOUT_CLASSIFICATION	1.3777497156367229E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999823464483113	WITHOUT_CLASSIFICATION	1.765355168866808E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999823464483113	WITHOUT_CLASSIFICATION	1.765355168866808E-5	IMPLEMENTATION
| this | bean | args | raw bean |	WITHOUT_CLASSIFICATION	0.9998990389831186	WITHOUT_CLASSIFICATION	1.0096101688144439E-4	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
astore 4 store the raw bean	WITHOUT_CLASSIFICATION	0.9998776266437981	WITHOUT_CLASSIFICATION	1.2237335620186396E-4	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.999808530418152	WITHOUT_CLASSIFICATION	1.9146958184797122E-4	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.999808530418152	WITHOUT_CLASSIFICATION	1.9146958184797122E-4	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999304139958985	WITHOUT_CLASSIFICATION	6.958600410144346E-5	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999001599560597	WITHOUT_CLASSIFICATION	9.98400439401816E-5	IMPLEMENTATION
putfield new value of the field	WITHOUT_CLASSIFICATION	0.9999951062217555	WITHOUT_CLASSIFICATION	4.893778244571775E-6	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999544574780663	WITHOUT_CLASSIFICATION	4.5542521933573244E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999982758706536	WITHOUT_CLASSIFICATION	1.7241293463919392E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999982758706536	WITHOUT_CLASSIFICATION	1.7241293463919392E-6	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999709351404694	WITHOUT_CLASSIFICATION	2.9064859530495598E-5	IMPLEMENTATION
just decrement the lock don't recache (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9935901603415241	WITHOUT_CLASSIFICATION	0.006409839658475804	IMPLEMENTATION
decode row selection	WITHOUT_CLASSIFICATION	0.9998840555742574	WITHOUT_CLASSIFICATION	1.1594442574256413E-4	IMPLEMENTATION
disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999939118000813	WITHOUT_CLASSIFICATION	6.088199918654968E-6	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9998603847761148	WITHOUT_CLASSIFICATION	1.3961522388513748E-4	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9998816497931172	WITHOUT_CLASSIFICATION	1.1835020688283786E-4	IMPLEMENTATION
row id	WITHOUT_CLASSIFICATION	0.9998319252404669	WITHOUT_CLASSIFICATION	1.680747595329469E-4	IMPLEMENTATION
composite-id	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9998105675173592	WITHOUT_CLASSIFICATION	1.894324826408023E-4	IMPLEMENTATION
property prop = new property() prop.setname("id") prop.setpropertyaccessorname("embedded") prop.setvalue(id) entity.setidentifierproperty(prop)	WITHOUT_CLASSIFICATION	0.999766399291472	WITHOUT_CLASSIFICATION	2.3360070852797396E-4	IMPLEMENTATION
dynamic insert	WITHOUT_CLASSIFICATION	0.9999072818445115	WITHOUT_CLASSIFICATION	9.271815548853053E-5	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999443974932175	WITHOUT_CLASSIFICATION	5.560250678254641E-5	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999875385470631	WITHOUT_CLASSIFICATION	1.246145293686254E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999779203891159	WITHOUT_CLASSIFICATION	2.207961088413162E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999779203891159	WITHOUT_CLASSIFICATION	2.207961088413162E-5	IMPLEMENTATION
generated properties can never be insertable	WITHOUT_CLASSIFICATION	0.9979146231450002	WITHOUT_CLASSIFICATION	0.0020853768549997267	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999718277522144	WITHOUT_CLASSIFICATION	2.8172247785536813E-5	IMPLEMENTATION
by default natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999956923425832	WITHOUT_CLASSIFICATION	4.307657416758598E-6	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999365480255092	WITHOUT_CLASSIFICATION	6.345197449074581E-5	IMPLEMENTATION
we found some extends attributes referencing entities which were not already processed. here we need to locate all entity-names and class-names contained in this document itself making sure that these get removed from the extendz list such that only extends names which require us to delay processing (i.e. external to this document and not yet processed) are contained in the returned result	WITHOUT_CLASSIFICATION	0.9130352856404773	WITHOUT_CLASSIFICATION	0.08696471435952267	IMPLEMENTATION
build a resultsetmappingdefinition given a containing element for the "return-xxx" elements @param resultsetelem the element containing the return definitions. @param path no clue @param mappings the current processing state. @return the description of the mappings	WITHOUT_CLASSIFICATION	0.9999925845490782	WITHOUT_CLASSIFICATION	7.415450921705172E-6	IMPLEMENTATION
private boolean showsql private boolean formatsql	WITHOUT_CLASSIFICATION	0.9999711294771096	WITHOUT_CLASSIFICATION	2.8870522890301705E-5	IMPLEMENTATION
public boolean isshowsqlenabled() { return showsql } public boolean isformatsqlenabled() { return formatsql }	WITHOUT_CLASSIFICATION	0.9999735626811223	WITHOUT_CLASSIFICATION	2.643731887771968E-5	IMPLEMENTATION
set a custom entity resolver. this entity resolver must be set before addxxx(misc) call. default value is {@link org.hibernate.util.dtdentityresolver} @param entityresolver entity resolver to use	WITHOUT_CLASSIFICATION	0.999975402190704	WITHOUT_CLASSIFICATION	2.4597809295990105E-5	IMPLEMENTATION
final list extendsqueue	WITHOUT_CLASSIFICATION	0.9998671483415018	WITHOUT_CLASSIFICATION	1.3285165849819935E-4	IMPLEMENTATION
if close() is called guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999972071949985	WITHOUT_CLASSIFICATION	2.7928050014322066E-6	IMPLEMENTATION
if a threadlocalsessioncontext-bound session happens to get serialized to be completely correct we need to make sure that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999317354994102	WITHOUT_CLASSIFICATION	6.826450058982443E-5	IMPLEMENTATION
on the inverse it makes sense that if a threadlocalsessioncontext- bound session then gets deserialized to go ahead and re-bind it to the threadlocalsessioncontext session map.	WITHOUT_CLASSIFICATION	0.9999581663647777	WITHOUT_CLASSIFICATION	4.183363522219202E-5	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999886706845221	WITHOUT_CLASSIFICATION	1.1329315477836959E-5	IMPLEMENTATION
60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999319053866866	WITHOUT_CLASSIFICATION	6.809461331338919E-5	IMPLEMENTATION
optimisticcache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998984145386138	WITHOUT_CLASSIFICATION	1.0158546138621162E-4	IMPLEMENTATION
cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998210449519601	WITHOUT_CLASSIFICATION	1.7895504803984357E-4	IMPLEMENTATION
option.setdataversion( nonlockingdataversion.instance )	WITHOUT_CLASSIFICATION	0.9997821130154566	WITHOUT_CLASSIFICATION	2.178869845434314E-4	IMPLEMENTATION
do the put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9993712626744725	WITHOUT_CLASSIFICATION	6.287373255275325E-4	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
tree cache in optimistic mode seems to have as very difficult time with remove calls on non-existent nodes (npes)	WITHOUT_CLASSIFICATION	0.9999392618469928	WITHOUT_CLASSIFICATION	6.0738153007152806E-5	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999646734567037	WITHOUT_CLASSIFICATION	3.532654329624523E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999646734567037	WITHOUT_CLASSIFICATION	3.532654329624523E-5	IMPLEMENTATION
do the failfast put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9993712626744725	WITHOUT_CLASSIFICATION	6.287373255275325E-4	IMPLEMENTATION
note evict() operates locally only (i.e. does not propogate to any other nodes in the potential cluster). this is exactly what is needed when we destroy() here destroy() is used as part of the process of shutting down a sessionfactory thus these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9593213505075172	IMPLEMENTATION	0.04067864949248274	WITHOUT_CLASSIFICATION
protected regionrootlistener listener	WITHOUT_CLASSIFICATION	0.9998405973237762	WITHOUT_CLASSIFICATION	1.5940267622391888E-4	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9995954875135601	WITHOUT_CLASSIFICATION	4.045124864399057E-4	IMPLEMENTATION
if we've been blocking for the mutex perhaps another thread has already reestablished the root. in case the node was reestablised via replication confirm it's marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999992146047095	WITHOUT_CLASSIFICATION	7.853952904448012E-7	IMPLEMENTATION
for pessimistic locking we just want to toss out our ref to any old invalid root node and get the latest (may be null)	WITHOUT_CLASSIFICATION	0.999992320129572	WITHOUT_CLASSIFICATION	7.679870428000358E-6	IMPLEMENTATION
the rest only matters for optimistic locking where we need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9649045508521711	WITHOUT_CLASSIFICATION	0.03509544914782892	IMPLEMENTATION
don't hold a transactional lock for this	WITHOUT_CLASSIFICATION	0.9999439489787804	WITHOUT_CLASSIFICATION	5.6051021219713225E-5	IMPLEMENTATION
make sure the root node for the region exists and has a dataversion that never complains	WITHOUT_CLASSIFICATION	0.9947690770525716	WITHOUT_CLASSIFICATION	0.005230922947428458	IMPLEMENTATION
never evict this node	WITHOUT_CLASSIFICATION	0.9956750883959864	WITHOUT_CLASSIFICATION	0.004324911604013569	IMPLEMENTATION
fix up the resident flag	WITHOUT_CLASSIFICATION	0.9966581082471445	WITHOUT_CLASSIFICATION	0.003341891752855514	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999646734567037	WITHOUT_CLASSIFICATION	3.532654329624523E-5	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999140476114371	WITHOUT_CLASSIFICATION	8.595238856300632E-5	IMPLEMENTATION
no-op. we don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9941572994166099	WITHOUT_CLASSIFICATION	0.005842700583390181	IMPLEMENTATION
this should only be possible if the caches are constructor injected	WITHOUT_CLASSIFICATION	0.9999759989787231	WITHOUT_CLASSIFICATION	2.4001021276846756E-5	IMPLEMENTATION
we only build caches if none were passed in. passing in caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999958356890345	WITHOUT_CLASSIFICATION	4.164310965469169E-6	IMPLEMENTATION
set up the cache factory	WITHOUT_CLASSIFICATION	0.9999401184974765	WITHOUT_CLASSIFICATION	5.988150252332312E-5	IMPLEMENTATION
see if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999982753251463	WITHOUT_CLASSIFICATION	1.724674853755714E-6	IMPLEMENTATION
default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999990617764424	WITHOUT_CLASSIFICATION	9.382235576575961E-7	IMPLEMENTATION
default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999993392356012	WITHOUT_CLASSIFICATION	6.607643987385749E-7	IMPLEMENTATION
for timestamps we default to a separate config	WITHOUT_CLASSIFICATION	0.999995734377263	WITHOUT_CLASSIFICATION	4.265622737040063E-6	IMPLEMENTATION
we can't change the tm on a running cache just check if the cache has no tm and we're ok with that	WITHOUT_CLASSIFICATION	0.9999277718708194	WITHOUT_CLASSIFICATION	7.222812918072626E-5	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9998022812651755	WITHOUT_CLASSIFICATION	1.9771873482450365E-4	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9998923543984625	WITHOUT_CLASSIFICATION	1.0764560153751242E-4	IMPLEMENTATION
this method should be implemented assuming it's valid to do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.7223974574513488	WITHOUT_CLASSIFICATION	0.2776025425486513	IMPLEMENTATION
make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9994630745963509	WITHOUT_CLASSIFICATION	5.36925403649106E-4	IMPLEMENTATION
we use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999843381224788	WITHOUT_CLASSIFICATION	1.566187752123679E-5	IMPLEMENTATION
following methods we don't delegate since they have so little logic it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9991914408608662	WITHOUT_CLASSIFICATION	8.085591391338124E-4	IMPLEMENTATION
if jbc is using invalidation we don't want to propagate changes. we use the timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9996109928426492	WITHOUT_CLASSIFICATION	3.8900715735071663E-4	IMPLEMENTATION
we don't want to waste effort setting an option if jbc is already in local mode. if jbc is repl_(a)sync then check if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.99999909421824	WITHOUT_CLASSIFICATION	9.057817601094368E-7	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents updates add a zero (or low) timeout option so we don't block waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.999913311761686	WITHOUT_CLASSIFICATION	8.668823831402621E-5	IMPLEMENTATION
double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999750076398233	WITHOUT_CLASSIFICATION	2.4992360176731827E-5	IMPLEMENTATION
get an exclusive right to update jbc for this key from this node.	WITHOUT_CLASSIFICATION	0.9999990580543265	WITHOUT_CLASSIFICATION	9.419456734971514E-7	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9997854182614069	WITHOUT_CLASSIFICATION	2.145817385931604E-4	IMPLEMENTATION
initial load from jbc	WITHOUT_CLASSIFICATION	0.9999921182419471	WITHOUT_CLASSIFICATION	7.881758052798404E-6	IMPLEMENTATION
see if we had a 2nd invalidation from the same initial preinvalidation timestamp. if so only increment if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999999973466044	WITHOUT_CLASSIFICATION	2.6533956791017866E-9	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9997854182614069	WITHOUT_CLASSIFICATION	2.145817385931604E-4	IMPLEMENTATION
if the workspace node has null as well ok if not we've been modified in a non-comparable manner which we have to treat as us being newer	WITHOUT_CLASSIFICATION	0.9981026164991277	WITHOUT_CLASSIFICATION	0.0018973835008722947	IMPLEMENTATION
the standard comparator types are not serializable but are singletons	WITHOUT_CLASSIFICATION	0.9998749410541842	WITHOUT_CLASSIFICATION	1.2505894581582756E-4	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9998857487838877	WITHOUT_CLASSIFICATION	1.1425121611226127E-4	IMPLEMENTATION
construct the cache	WITHOUT_CLASSIFICATION	0.9997211545343039	WITHOUT_CLASSIFICATION	2.788454656962218E-4	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999056674452292	WITHOUT_CLASSIFICATION	9.433255477071922E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999056674452292	WITHOUT_CLASSIFICATION	9.433255477071922E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9998167072223608	WITHOUT_CLASSIFICATION	1.8329277763914721E-4	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for initialpoolsize which hibernate sensibly lets default to minpoolsize but we'll let users override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999999746150997	WITHOUT_CLASSIFICATION	2.5384900251234988E-8	IMPLEMENTATION
datasource unpooled = datasources.unpooleddatasource(jdbcurl props.getproperty(environment.user) props.getproperty(environment.pass))	WITHOUT_CLASSIFICATION	0.999760200845213	WITHOUT_CLASSIFICATION	2.3979915478707586E-4	IMPLEMENTATION
true if the pool is borrowed from the outside false if we used to create it	WITHOUT_CLASSIFICATION	0.9999990690468747	WITHOUT_CLASSIFICATION	9.309531254145208E-7	IMPLEMENTATION
get a connection from the pool (thru drivermanager cfr. proxool doc)	WITHOUT_CLASSIFICATION	0.9992233907363389	WITHOUT_CLASSIFICATION	7.766092636610665E-4	IMPLEMENTATION
set the transaction isolation if defined	WITHOUT_CLASSIFICATION	0.9999911200418398	WITHOUT_CLASSIFICATION	8.879958160217015E-6	IMPLEMENTATION
toggle autocommit to false if set	WITHOUT_CLASSIFICATION	0.9999890220700172	WITHOUT_CLASSIFICATION	1.0977929982857241E-5	IMPLEMENTATION
return the connection	WITHOUT_CLASSIFICATION	0.9957757052879213	WITHOUT_CLASSIFICATION	0.004224294712078767	IMPLEMENTATION
get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9998848521990453	WITHOUT_CLASSIFICATION	1.1514780095465507E-4	IMPLEMENTATION
default the proxool alias setting	WITHOUT_CLASSIFICATION	0.9999982260913128	WITHOUT_CLASSIFICATION	1.7739086872235842E-6	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999820145443187	WITHOUT_CLASSIFICATION	1.7985455681286068E-5	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999820145443187	WITHOUT_CLASSIFICATION	1.7985455681286068E-5	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.999690101655999	WITHOUT_CLASSIFICATION	3.0989834400098554E-4	IMPLEMENTATION
set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9994908317940002	WITHOUT_CLASSIFICATION	5.091682059997644E-4	IMPLEMENTATION
configured using the jaxp configurator	WITHOUT_CLASSIFICATION	0.9999232253600261	WITHOUT_CLASSIFICATION	7.677463997383623E-5	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999820145443187	WITHOUT_CLASSIFICATION	1.7985455681286068E-5	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.999690101655999	WITHOUT_CLASSIFICATION	3.0989834400098554E-4	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.999690101655999	WITHOUT_CLASSIFICATION	3.0989834400098554E-4	IMPLEMENTATION
configured using the properties file configurator	WITHOUT_CLASSIFICATION	0.9999292787196393	WITHOUT_CLASSIFICATION	7.072128036060145E-5	IMPLEMENTATION
remember isolation level	WITHOUT_CLASSIFICATION	0.9987880388731732	WITHOUT_CLASSIFICATION	0.0012119611268268317	IMPLEMENTATION
if the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999999806526696	WITHOUT_CLASSIFICATION	1.934733049523815E-8	IMPLEMENTATION
we have created the pool ourselves so shut it down	WITHOUT_CLASSIFICATION	0.9999912760190982	WITHOUT_CLASSIFICATION	8.723980901797568E-6	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9986095452659092	WITHOUT_CLASSIFICATION	0.0013904547340908967	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9986095452659092	WITHOUT_CLASSIFICATION	0.0013904547340908967	IMPLEMENTATION
always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999722468855694	WITHOUT_CLASSIFICATION	2.7753114430613063E-5	IMPLEMENTATION
public currency getcurrency(int col) throws hibernateexception	WITHOUT_CLASSIFICATION	0.999906209736486	WITHOUT_CLASSIFICATION	9.379026351405066E-5	IMPLEMENTATION
default is pojo	WITHOUT_CLASSIFICATION	0.9999859843683653	WITHOUT_CLASSIFICATION	1.4015631634766724E-5	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999948935549597	WITHOUT_CLASSIFICATION	5.106445040283678E-6	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999948935549597	WITHOUT_CLASSIFICATION	5.106445040283678E-6	IMPLEMENTATION
private cacheentry cacheentry	WITHOUT_CLASSIFICATION	0.9999611708815118	WITHOUT_CLASSIFICATION	3.882911848815835E-5	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9999172849250614	WITHOUT_CLASSIFICATION	8.271507493861962E-5	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9998490625607996	WITHOUT_CLASSIFICATION	1.5093743920040182E-4	IMPLEMENTATION
get the updated snapshot of the entity state by cloning current state it is safe to copy in place since by this time no-one else (should have) has a reference to the array	WITHOUT_CLASSIFICATION	0.999999894014507	WITHOUT_CLASSIFICATION	1.0598549298963423E-7	IMPLEMENTATION
this entity defines proeprty generation so process those generated values	WITHOUT_CLASSIFICATION	0.9999967988516899	WITHOUT_CLASSIFICATION	3.2011483100283246E-6	IMPLEMENTATION
have the entity entry perform post-update processing passing it the update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9993108273981269	WITHOUT_CLASSIFICATION	6.89172601873021E-4	IMPLEMENTATION
!persister.iscacheinvalidationrequired()	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9994707596068214	WITHOUT_CLASSIFICATION	5.292403931785859E-4	IMPLEMENTATION
sort first by role name	WITHOUT_CLASSIFICATION	0.9996131763941377	WITHOUT_CLASSIFICATION	3.868236058622474E-4	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9998490625607996	WITHOUT_CLASSIFICATION	1.5093743920040182E-4	IMPLEMENTATION
then by fk	WITHOUT_CLASSIFICATION	0.9999516026337185	WITHOUT_CLASSIFICATION	4.839736628146616E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999297080521495	WITHOUT_CLASSIFICATION	7.029194785052346E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999297080521495	WITHOUT_CLASSIFICATION	7.029194785052346E-5	IMPLEMENTATION
an existing collection that was either non-empty or uninitialized is replaced by null or a different collection (if the collection is uninitialized hibernate has no way of knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999951142041283	WITHOUT_CLASSIFICATION	4.885795871626272E-6	IMPLEMENTATION
this method is called when a new non-null collection is persisted or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999956601900726	WITHOUT_CLASSIFICATION	4.33980992741775E-6	IMPLEMENTATION
boolean put = persister.getcache().insert(ck cacheentry)	WITHOUT_CLASSIFICATION	0.9993573195883191	WITHOUT_CLASSIFICATION	6.426804116808848E-4	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9959103695153213	WITHOUT_CLASSIFICATION	0.004089630484678766	IMPLEMENTATION
do nothing - we only need to notify the cache	WITHOUT_CLASSIFICATION	0.9994765293796645	WITHOUT_CLASSIFICATION	5.2347062033556E-4	IMPLEMENTATION
sort first by entity name	WITHOUT_CLASSIFICATION	0.9996114080825695	WITHOUT_CLASSIFICATION	3.885919174304486E-4	IMPLEMENTATION
then by id	WITHOUT_CLASSIFICATION	0.9998431691898124	WITHOUT_CLASSIFICATION	1.5683081018761142E-4	IMPLEMENTATION
to be safe	WITHOUT_CLASSIFICATION	0.9999613974543368	WITHOUT_CLASSIFICATION	3.860254566329484E-5	IMPLEMENTATION
no transformations took place so handle it as we would a non-instrumented class	WITHOUT_CLASSIFICATION	0.9995030479695345	WITHOUT_CLASSIFICATION	4.969520304655226E-4	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999988198272053	WITHOUT_CLASSIFICATION	1.1801727947352277E-6	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999988198272053	WITHOUT_CLASSIFICATION	1.1801727947352277E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.994713079594217	WITHOUT_CLASSIFICATION	0.005286920405783018	IMPLEMENTATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999862225028436	WITHOUT_CLASSIFICATION	1.3777497156367229E-5	IMPLEMENTATION
set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999353538647151	WITHOUT_CLASSIFICATION	6.464613528479711E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
invokespecial	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999823464483113	WITHOUT_CLASSIFICATION	1.765355168866808E-5	IMPLEMENTATION
aload_1 load bean	WITHOUT_CLASSIFICATION	0.999808354781229	WITHOUT_CLASSIFICATION	1.916452187709532E-4	IMPLEMENTATION
checkcast cast bean	WITHOUT_CLASSIFICATION	0.9998117663948312	WITHOUT_CLASSIFICATION	1.882336051688904E-4	IMPLEMENTATION
astore_3 store bean	WITHOUT_CLASSIFICATION	0.9998291960958929	WITHOUT_CLASSIFICATION	1.708039041071461E-4	IMPLEMENTATION
aload_2 args	WITHOUT_CLASSIFICATION	0.9998172957355386	WITHOUT_CLASSIFICATION	1.827042644614615E-4	IMPLEMENTATION
iconst_i continue to aastore growing stack is 1	WITHOUT_CLASSIFICATION	0.9998516575640614	WITHOUT_CLASSIFICATION	1.4834243593857805E-4	IMPLEMENTATION
new	WITHOUT_CLASSIFICATION	0.9999721996130939	WITHOUT_CLASSIFICATION	2.7800386906114194E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
aload_3 load the raw bean	WITHOUT_CLASSIFICATION	0.9999027826814237	WITHOUT_CLASSIFICATION	9.721731857629379E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
aastore args	WITHOUT_CLASSIFICATION	0.9998172957355386	WITHOUT_CLASSIFICATION	1.827042644614615E-4	IMPLEMENTATION
| this | bean | args | i | raw bean | exception |	WITHOUT_CLASSIFICATION	0.9998871242122679	WITHOUT_CLASSIFICATION	1.1287578773207771E-4	IMPLEMENTATION
required to exception table iconst_0 i	WITHOUT_CLASSIFICATION	0.9998018614877834	WITHOUT_CLASSIFICATION	1.9813851221655714E-4	IMPLEMENTATION
istore_3 store i	WITHOUT_CLASSIFICATION	0.9995816617232969	WITHOUT_CLASSIFICATION	4.183382767031902E-4	IMPLEMENTATION
aload_1 load the bean	WITHOUT_CLASSIFICATION	0.9999026908758275	WITHOUT_CLASSIFICATION	9.730912417249288E-5	IMPLEMENTATION
checkcast cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9998853940083507	WITHOUT_CLASSIFICATION	1.1460599164918896E-4	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.999808530418152	WITHOUT_CLASSIFICATION	1.9146958184797122E-4	IMPLEMENTATION
start region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9988142399251086	WITHOUT_CLASSIFICATION	0.0011857600748913283	IMPLEMENTATION
iinc 3 1	WITHOUT_CLASSIFICATION	0.9999642334161479	WITHOUT_CLASSIFICATION	3.5766583852109796E-5	IMPLEMENTATION
aload 4 load the raw bean	WITHOUT_CLASSIFICATION	0.9998626939626584	WITHOUT_CLASSIFICATION	1.3730603734161885E-4	IMPLEMENTATION
aload_2 load the args	WITHOUT_CLASSIFICATION	0.9999060404010263	WITHOUT_CLASSIFICATION	9.39595989736497E-5	IMPLEMENTATION
iconst_i	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
aaload	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
checkcast (case of primitive type) invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999644726074421	WITHOUT_CLASSIFICATION	3.5527392557887896E-5	IMPLEMENTATION
checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.999989536089225	WITHOUT_CLASSIFICATION	1.046391077488003E-5	IMPLEMENTATION
current stack len = 2	WITHOUT_CLASSIFICATION	0.9999393349559627	WITHOUT_CLASSIFICATION	6.0665044037259546E-5	IMPLEMENTATION
end region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9969324291204065	WITHOUT_CLASSIFICATION	0.0030675708795934757	IMPLEMENTATION
register in exception table	WITHOUT_CLASSIFICATION	0.9999928159628553	WITHOUT_CLASSIFICATION	7.184037144719743E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999823464483113	WITHOUT_CLASSIFICATION	1.765355168866808E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999823464483113	WITHOUT_CLASSIFICATION	1.765355168866808E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999304139958985	WITHOUT_CLASSIFICATION	6.958600410144346E-5	IMPLEMENTATION
astore 5 store exception	WITHOUT_CLASSIFICATION	0.9999730004217138	WITHOUT_CLASSIFICATION	2.699957828632054E-5	IMPLEMENTATION
new bulkaccessorexception	WITHOUT_CLASSIFICATION	0.9999193107952065	WITHOUT_CLASSIFICATION	8.068920479357115E-5	IMPLEMENTATION
aload 5 load exception	WITHOUT_CLASSIFICATION	0.9999697054295981	WITHOUT_CLASSIFICATION	3.0294570401943606E-5	IMPLEMENTATION
iload_3 i	WITHOUT_CLASSIFICATION	0.9999106628754081	WITHOUT_CLASSIFICATION	8.933712459189109E-5	IMPLEMENTATION
invokespecial bulkaccessorexception.<init>	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
athrow	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
warning classfile only	WITHOUT_CLASSIFICATION	0.9998355901996915	WITHOUT_CLASSIFICATION	1.6440980030842854E-4	IMPLEMENTATION
swallow	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
local variable | this |	WITHOUT_CLASSIFICATION	0.9999160750885506	WITHOUT_CLASSIFICATION	8.392491144940878E-5	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9996945260306899	WITHOUT_CLASSIFICATION	3.054739693101332E-4	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9996945260306899	WITHOUT_CLASSIFICATION	3.054739693101332E-4	IMPLEMENTATION
getfield get field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9999958102778653	WITHOUT_CLASSIFICATION	4.1897221346560625E-6	IMPLEMENTATION
areturn return the value of the field	WITHOUT_CLASSIFICATION	0.9999968924229303	WITHOUT_CLASSIFICATION	3.1075770697818015E-6	IMPLEMENTATION
local variables | this | callback |	WITHOUT_CLASSIFICATION	0.9999271578875626	WITHOUT_CLASSIFICATION	7.284211243746876E-5	IMPLEMENTATION
aload_1 load callback	WITHOUT_CLASSIFICATION	0.999892678519644	WITHOUT_CLASSIFICATION	1.0732148035593551E-4	IMPLEMENTATION
putfield put field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9999618424882297	WITHOUT_CLASSIFICATION	3.815751177022533E-5	IMPLEMENTATION
case of non-static field	WITHOUT_CLASSIFICATION	0.9999857556888632	WITHOUT_CLASSIFICATION	1.4244311136759495E-5	IMPLEMENTATION
getfield get each field	WITHOUT_CLASSIFICATION	0.9999722794421804	WITHOUT_CLASSIFICATION	2.7720557819597556E-5	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999001599560597	WITHOUT_CLASSIFICATION	9.98400439401816E-5	IMPLEMENTATION
ifnonnull	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.999844814840575	WITHOUT_CLASSIFICATION	1.5518515942501864E-4	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.999844814840575	WITHOUT_CLASSIFICATION	1.5518515942501864E-4	IMPLEMENTATION
store_1 each type	WITHOUT_CLASSIFICATION	0.9996790327553498	WITHOUT_CLASSIFICATION	3.209672446503442E-4	IMPLEMENTATION
ldc name of the field	WITHOUT_CLASSIFICATION	0.9999765920428881	WITHOUT_CLASSIFICATION	2.3407957111899245E-5	IMPLEMENTATION
load_1 each type	WITHOUT_CLASSIFICATION	0.9996790327553498	WITHOUT_CLASSIFICATION	3.209672446503442E-4	IMPLEMENTATION
invokeinterface invoke callback.read() each type	WITHOUT_CLASSIFICATION	0.9998308609005081	WITHOUT_CLASSIFICATION	1.691390994919381E-4	IMPLEMENTATION
int	WITHOUT_CLASSIFICATION	0.9999786419442463	WITHOUT_CLASSIFICATION	2.1358055753663416E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999823464483113	WITHOUT_CLASSIFICATION	1.765355168866808E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
putfield	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999823464483113	WITHOUT_CLASSIFICATION	1.765355168866808E-5	IMPLEMENTATION
ldc field name	WITHOUT_CLASSIFICATION	0.9999017096893186	WITHOUT_CLASSIFICATION	9.829031068141612E-5	IMPLEMENTATION
getfield old value of the field	WITHOUT_CLASSIFICATION	0.9999969744343137	WITHOUT_CLASSIFICATION	3.0255656862781382E-6	IMPLEMENTATION
invokeinterface callback.write(..)	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999544574780663	WITHOUT_CLASSIFICATION	4.5542521933573244E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999544574780663	WITHOUT_CLASSIFICATION	4.5542521933573244E-5	IMPLEMENTATION
not array	WITHOUT_CLASSIFICATION	0.9981958441212568	WITHOUT_CLASSIFICATION	0.0018041558787431694	IMPLEMENTATION
array of reference type	WITHOUT_CLASSIFICATION	0.9999867563546857	WITHOUT_CLASSIFICATION	1.3243645314304161E-5	IMPLEMENTATION
boolean	WITHOUT_CLASSIFICATION	0.9999718211980622	WITHOUT_CLASSIFICATION	2.817880193791623E-5	IMPLEMENTATION
byte	WITHOUT_CLASSIFICATION	0.9999638765592368	WITHOUT_CLASSIFICATION	3.6123440763129885E-5	IMPLEMENTATION
char	WITHOUT_CLASSIFICATION	0.9999844043860551	WITHOUT_CLASSIFICATION	1.5595613944960563E-5	IMPLEMENTATION
short	WITHOUT_CLASSIFICATION	0.9999652868363696	WITHOUT_CLASSIFICATION	3.471316363036813E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999982758706536	WITHOUT_CLASSIFICATION	1.7241293463919392E-6	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999635356145341	WITHOUT_CLASSIFICATION	3.646438546587887E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999635356145341	WITHOUT_CLASSIFICATION	3.646438546587887E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999709351404694	WITHOUT_CLASSIFICATION	2.9064859530495598E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999709351404694	WITHOUT_CLASSIFICATION	2.9064859530495598E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999443082216807	WITHOUT_CLASSIFICATION	5.569177831922877E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999443082216807	WITHOUT_CLASSIFICATION	5.569177831922877E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999807903662681	WITHOUT_CLASSIFICATION	1.9209633732006358E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999807903662681	WITHOUT_CLASSIFICATION	1.9209633732006358E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999544574780663	WITHOUT_CLASSIFICATION	4.5542521933573244E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999982758706536	WITHOUT_CLASSIFICATION	1.7241293463919392E-6	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999635356145341	WITHOUT_CLASSIFICATION	3.646438546587887E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999635356145341	WITHOUT_CLASSIFICATION	3.646438546587887E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999709351404694	WITHOUT_CLASSIFICATION	2.9064859530495598E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999443082216807	WITHOUT_CLASSIFICATION	5.569177831922877E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999443082216807	WITHOUT_CLASSIFICATION	5.569177831922877E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999807903662681	WITHOUT_CLASSIFICATION	1.9209633732006358E-5	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.999878616778256	WITHOUT_CLASSIFICATION	1.2138322174399788E-4	IMPLEMENTATION
mainly for oscache	WITHOUT_CLASSIFICATION	0.9999488985473305	WITHOUT_CLASSIFICATION	5.1101452669530485E-5	IMPLEMENTATION
decrement the lock	WITHOUT_CLASSIFICATION	0.9998346889287019	WITHOUT_CLASSIFICATION	1.6531107129814113E-4	IMPLEMENTATION
create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9998873834137084	WITHOUT_CLASSIFICATION	1.1261658629158067E-4	IMPLEMENTATION
recache the updated state	WITHOUT_CLASSIFICATION	0.9999139325752331	WITHOUT_CLASSIFICATION	8.606742476684763E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999635460642358	WITHOUT_CLASSIFICATION	3.645393576419916E-5	IMPLEMENTATION
null clientlock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999990184134155	WITHOUT_CLASSIFICATION	9.815865845675816E-7	IMPLEMENTATION
we really could refresh the item if it is not a lock but it might be slower return freshtimestamp < txtimestamp	WITHOUT_CLASSIFICATION	0.9999918129107594	WITHOUT_CLASSIFICATION	8.187089240681938E-6	IMPLEMENTATION
by requiring < we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999978690647306	WITHOUT_CLASSIFICATION	2.1309352693579736E-6	IMPLEMENTATION
the user provided resulttransformer not the one used with "select new". here to avoid mangling transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9951700380027276	WITHOUT_CLASSIFICATION	0.004829961997272347	IMPLEMENTATION
disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999194119639897	WITHOUT_CLASSIFICATION	8.058803601031097E-5	IMPLEMENTATION
disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999519088923126	WITHOUT_CLASSIFICATION	4.8091107687380197E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9998167072223608	WITHOUT_CLASSIFICATION	1.8329277763914721E-4	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999635460642358	WITHOUT_CLASSIFICATION	3.645393576419916E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999635460642358	WITHOUT_CLASSIFICATION	3.645393576419916E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999635460642358	WITHOUT_CLASSIFICATION	3.645393576419916E-5	IMPLEMENTATION
this is called from settingsfactory irregardless trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999632578540432	WITHOUT_CLASSIFICATION	3.674214595689675E-5	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.999965940087049	WITHOUT_CLASSIFICATION	3.405991295110724E-5	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.999965940087049	WITHOUT_CLASSIFICATION	3.405991295110724E-5	IMPLEMENTATION
throw new unsupportedoperationexception("can't write to a readonly object")	WITHOUT_CLASSIFICATION	0.9999123187501023	WITHOUT_CLASSIFICATION	8.768124989762868E-5	IMPLEMENTATION
assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999995102570772	WITHOUT_CLASSIFICATION	4.89742922797757E-7	IMPLEMENTATION
persister.setidentifier(result id) before calling interceptor for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999810928717803	WITHOUT_CLASSIFICATION	1.890712821977456E-5	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9967415035058025	WITHOUT_CLASSIFICATION	0.0032584964941975553	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9967415035058025	WITHOUT_CLASSIFICATION	0.0032584964941975553	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9998603847761148	WITHOUT_CLASSIFICATION	1.3961522388513748E-4	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9997418952021473	WITHOUT_CLASSIFICATION	2.5810479785275147E-4	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9997418952021473	WITHOUT_CLASSIFICATION	2.5810479785275147E-4	IMPLEMENTATION
classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9997734818965333	WITHOUT_CLASSIFICATION	2.26518103466718E-4	IMPLEMENTATION
get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999879925935206	WITHOUT_CLASSIFICATION	1.2007406479510257E-5	IMPLEMENTATION
get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999875385470631	WITHOUT_CLASSIFICATION	1.246145293686254E-5	IMPLEMENTATION
db-objectname	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
mutable	WITHOUT_CLASSIFICATION	0.9999635048285366	WITHOUT_CLASSIFICATION	3.6495171463438434E-5	IMPLEMENTATION
where	WITHOUT_CLASSIFICATION	0.9999528732373878	WITHOUT_CLASSIFICATION	4.7126762612244244E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9998816497931172	WITHOUT_CLASSIFICATION	1.1835020688283786E-4	IMPLEMENTATION
polymorphism	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.8465197101873373	WITHOUT_CLASSIFICATION	0.1534802898126627	IMPLEMENTATION
id	WITHOUT_CLASSIFICATION	0.9997906584158079	WITHOUT_CLASSIFICATION	2.093415841920378E-4	IMPLEMENTATION
version / timestamp	WITHOUT_CLASSIFICATION	0.9998622797127742	WITHOUT_CLASSIFICATION	1.3772028722576127E-4	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9998105675173592	WITHOUT_CLASSIFICATION	1.894324826408023E-4	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999726445498809	WITHOUT_CLASSIFICATION	2.7355450119020908E-5	IMPLEMENTATION
this is either a <version/> tag with no type attribute or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999778132777376	WITHOUT_CLASSIFICATION	2.2186722262420154E-5	IMPLEMENTATION
for version properties marked as being generated make sure they are "always" generated aka "insert" is invalid this is dis-allowed by the dtd but just to make sure	WITHOUT_CLASSIFICATION	0.9999995437455562	WITHOUT_CLASSIFICATION	4.5625444375203677E-7	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9998105675173592	WITHOUT_CLASSIFICATION	1.894324826408023E-4	IMPLEMENTATION
( (column) discrim.getcolumniterator().next() ).settype(type)	WITHOUT_CLASSIFICATION	0.9999365480255092	WITHOUT_CLASSIFICATION	6.345197449074581E-5	IMPLEMENTATION
go ahead and set the lazy here since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9998520812081975	WITHOUT_CLASSIFICATION	1.4791879180246897E-4	IMPLEMENTATION
dynamic update	WITHOUT_CLASSIFICATION	0.9999643782598019	WITHOUT_CLASSIFICATION	3.5621740198118466E-5	IMPLEMENTATION
import	WITHOUT_CLASSIFICATION	0.9999667772742733	WITHOUT_CLASSIFICATION	3.3222725726723706E-5	IMPLEMENTATION
batch size	WITHOUT_CLASSIFICATION	0.9999650286541699	WITHOUT_CLASSIFICATION	3.49713458300989E-5	IMPLEMENTATION
select before update	WITHOUT_CLASSIFICATION	0.9999846755490235	WITHOUT_CLASSIFICATION	1.5324450976530128E-5	IMPLEMENTATION
optimistic lock mode	WITHOUT_CLASSIFICATION	0.9998207141644364	WITHOUT_CLASSIFICATION	1.792858355636358E-4	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999443974932175	WITHOUT_CLASSIFICATION	5.560250678254641E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999924068328114	WITHOUT_CLASSIFICATION	7.593167188620978E-6	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999875385470631	WITHOUT_CLASSIFICATION	1.246145293686254E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999779203891159	WITHOUT_CLASSIFICATION	2.207961088413162E-5	IMPLEMENTATION
joined subclasses	WITHOUT_CLASSIFICATION	0.9998656336997063	WITHOUT_CLASSIFICATION	1.343663002938516E-4	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999735329803568	WITHOUT_CLASSIFICATION	2.6467019643212122E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9998816497931172	WITHOUT_CLASSIFICATION	1.1835020688283786E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999924068328114	WITHOUT_CLASSIFICATION	7.593167188620978E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999779203891159	WITHOUT_CLASSIFICATION	2.207961088413162E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999735329803568	WITHOUT_CLASSIFICATION	2.6467019643212122E-5	IMPLEMENTATION
model.getkey().settype( new type( model.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9998341198230953	WITHOUT_CLASSIFICATION	1.6588017690462065E-4	IMPLEMENTATION
tablename	WITHOUT_CLASSIFICATION	0.9999639416609098	WITHOUT_CLASSIFICATION	3.605833909007754E-5	IMPLEMENTATION
join.getkey().settype( new type( lazz.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9998341198230953	WITHOUT_CLASSIFICATION	1.6588017690462065E-4	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999779203891159	WITHOUT_CLASSIFICATION	2.207961088413162E-5	IMPLEMENTATION
column(s)	WITHOUT_CLASSIFICATION	0.9999636345786289	WITHOUT_CLASSIFICATION	3.6365421371181506E-5	IMPLEMENTATION
column index	WITHOUT_CLASSIFICATION	0.9992475359405664	WITHOUT_CLASSIFICATION	7.524640594335883E-4	IMPLEMENTATION
column unique-key	WITHOUT_CLASSIFICATION	0.9998321286568068	WITHOUT_CLASSIFICATION	1.678713431932711E-4	IMPLEMENTATION
automatically makes a column with the default name if none is specifed by xml	WITHOUT_CLASSIFICATION	0.9999997310654992	WITHOUT_CLASSIFICATION	2.689345007795414E-7	IMPLEMENTATION
for an any	WITHOUT_CLASSIFICATION	0.9999987993510323	WITHOUT_CLASSIFICATION	1.20064896775523E-6	IMPLEMENTATION
insertable simply because that is the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9761732273373586	WITHOUT_CLASSIFICATION	0.023826772662641424	IMPLEMENTATION
the user specifically supplied insert="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999564112248219	WITHOUT_CLASSIFICATION	4.358877517797174E-5	IMPLEMENTATION
properties generated on update can never be updateable	WITHOUT_CLASSIFICATION	0.9987268758701434	WITHOUT_CLASSIFICATION	0.0012731241298565932	IMPLEMENTATION
updateable only because the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9905140802945965	WITHOUT_CLASSIFICATION	0.009485919705403547	IMPLEMENTATION
the user specifically supplied update="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999564112248219	WITHOUT_CLASSIFICATION	4.358877517797174E-5	IMPLEMENTATION
rolename	WITHOUT_CLASSIFICATION	0.9999664763044784	WITHOUT_CLASSIFICATION	3.3523695521589416E-5	IMPLEMENTATION
fetch strategy	WITHOUT_CLASSIFICATION	0.9998681857313324	WITHOUT_CLASSIFICATION	1.3181426866764207E-4	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999718277522144	WITHOUT_CLASSIFICATION	2.8172247785536813E-5	IMPLEMENTATION
tablename = mappings.getnamingstrategy().propertytotablename( classname path )	WITHOUT_CLASSIFICATION	0.9996521747153702	WITHOUT_CLASSIFICATION	3.478252846298506E-4	IMPLEMENTATION
sort	WITHOUT_CLASSIFICATION	0.9999060978890251	WITHOUT_CLASSIFICATION	9.390211097492773E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999924068328114	WITHOUT_CLASSIFICATION	7.593167188620978E-6	IMPLEMENTATION
unsorted natural comparator.class.name	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
orphan delete (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999863496870995	WITHOUT_CLASSIFICATION	1.3650312900489739E-5	IMPLEMENTATION
set up second pass	WITHOUT_CLASSIFICATION	0.9999443936184221	WITHOUT_CLASSIFICATION	5.5606381577828426E-5	IMPLEMENTATION
an "embedded" component (composite ids and unique) note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9987044327290616	WITHOUT_CLASSIFICATION	0.001295567270938381	IMPLEMENTATION
a nested composite element	WITHOUT_CLASSIFICATION	0.9998230403527604	WITHOUT_CLASSIFICATION	1.769596472396714E-4	IMPLEMENTATION
for an any we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999683377024169	WITHOUT_CLASSIFICATION	3.166229758316214E-5	IMPLEMENTATION
note special case one-to-one constrained=false cannot be proxied so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999995042093305	WITHOUT_CLASSIFICATION	4.957906694724807E-7	IMPLEMENTATION
use old (hb 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.999990980957416	WITHOUT_CLASSIFICATION	9.019042583930585E-6	IMPLEMENTATION
lazy = !join	WITHOUT_CLASSIFICATION	0.9995346658583305	WITHOUT_CLASSIFICATION	4.653341416694126E-4	IMPLEMENTATION
generator	WITHOUT_CLASSIFICATION	0.999963841010885	WITHOUT_CLASSIFICATION	3.615898911496389E-5	IMPLEMENTATION
id unsaved-value	WITHOUT_CLASSIFICATION	0.9989146163468481	WITHOUT_CLASSIFICATION	0.0010853836531518207	IMPLEMENTATION
version unsaved-value	WITHOUT_CLASSIFICATION	0.9997605528821549	WITHOUT_CLASSIFICATION	2.3944711784502887E-4	IMPLEMENTATION
not necessarily a unique property reference	WITHOUT_CLASSIFICATION	0.9989975740181032	WITHOUT_CLASSIFICATION	0.0010024259818967353	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999365480255092	WITHOUT_CLASSIFICATION	6.345197449074581E-5	IMPLEMENTATION
contained elements	WITHOUT_CLASSIFICATION	0.9999161586728109	WITHOUT_CLASSIFICATION	8.384132718899516E-5	IMPLEMENTATION
for non-inverse one-to-many with a not-null fk add a backref!	WITHOUT_CLASSIFICATION	0.9999578577553145	WITHOUT_CLASSIFICATION	4.2142244685507015E-5	IMPLEMENTATION
bind the where	WITHOUT_CLASSIFICATION	0.9997828886099943	WITHOUT_CLASSIFICATION	2.1711139000573523E-4	IMPLEMENTATION
bind the order-by	WITHOUT_CLASSIFICATION	0.9998317565892978	WITHOUT_CLASSIFICATION	1.682434107021084E-4	IMPLEMENTATION
bind the filters	WITHOUT_CLASSIFICATION	0.9998317565892978	WITHOUT_CLASSIFICATION	1.682434107021084E-4	IMPLEMENTATION
overriding inherited meta attribute. hbx-621 & hbx-793	WITHOUT_CLASSIFICATION	0.999934034205234	WITHOUT_CLASSIFICATION	6.596579476608467E-5	IMPLEMENTATION
first iterate over all elements capable of defining an extends attribute collecting all found extends references if they cannot be resolved against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999647733461	WITHOUT_CLASSIFICATION	3.522665397662924E-8	IMPLEMENTATION
mappings might contain either the "raw" extends name (in the case of an entity-name mapping) or a fqn (in the case of a pojo mapping).	WITHOUT_CLASSIFICATION	0.9999929962492451	WITHOUT_CLASSIFICATION	7.003750754880296E-6	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9978889799501653	WITHOUT_CLASSIFICATION	0.0021110200498346164	IMPLEMENTATION
sessionfactory name	WITHOUT_CLASSIFICATION	0.9997783364440076	WITHOUT_CLASSIFICATION	2.216635559924518E-4	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9987960967841785	WITHOUT_CLASSIFICATION	0.001203903215821567	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9987960967841785	WITHOUT_CLASSIFICATION	0.001203903215821567	IMPLEMENTATION
interrogate jdbc metadata	WITHOUT_CLASSIFICATION	0.9999423622839645	WITHOUT_CLASSIFICATION	5.763771603537102E-5	IMPLEMENTATION
user supplied jdbc connections	WITHOUT_CLASSIFICATION	0.9999478353828588	WITHOUT_CLASSIFICATION	5.21646171412988E-5	IMPLEMENTATION
use dialect default properties	WITHOUT_CLASSIFICATION	0.9999857800043638	WITHOUT_CLASSIFICATION	1.4219995636118544E-5	IMPLEMENTATION
transaction settings	WITHOUT_CLASSIFICATION	0.9999656339221092	WITHOUT_CLASSIFICATION	3.4366077890775694E-5	IMPLEMENTATION
sql generation settings	WITHOUT_CLASSIFICATION	0.9999965319274731	WITHOUT_CLASSIFICATION	3.468072527029793E-6	IMPLEMENTATION
query parser settings	WITHOUT_CLASSIFICATION	0.9999891277358899	WITHOUT_CLASSIFICATION	1.0872264110171196E-5	IMPLEMENTATION
second-level / query cache	WITHOUT_CLASSIFICATION	0.9999533644879671	WITHOUT_CLASSIFICATION	4.663551203296969E-5	IMPLEMENTATION
the cache provider is needed when we either have second-level cache enabled or query cache enabled. note that usesecondlevelcache is enabled by default	WITHOUT_CLASSIFICATION	0.839126893017731	WITHOUT_CLASSIFICATION	0.16087310698226903	IMPLEMENTATION
sql exception converter	WITHOUT_CLASSIFICATION	0.9999900576051717	WITHOUT_CLASSIFICATION	9.942394828355803E-6	IMPLEMENTATION
statistics and logging	WITHOUT_CLASSIFICATION	0.9999189008204349	WITHOUT_CLASSIFICATION	8.109917956509469E-5	IMPLEMENTATION
settings.setshowsqlenabled(showsql)	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
settings.setformatsqlenabled(formatsql)	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
schema export	WITHOUT_CLASSIFICATION	0.9998573402432226	WITHOUT_CLASSIFICATION	1.4265975677743627E-4	IMPLEMENTATION
string provider = properties.getproperty( environment.bytecode_provider ) log.info( "bytecode provider name " + provider ) bytecodeprovider bytecodeprovider = buildbytecodeprovider( provider ) settings.setbytecodeprovider( bytecodeprovider )	WITHOUT_CLASSIFICATION	0.9997521677464087	WITHOUT_CLASSIFICATION	2.478322535912441E-4	IMPLEMENTATION
legacy behavior apply the bridge	WITHOUT_CLASSIFICATION	0.9999579712667807	WITHOUT_CLASSIFICATION	4.202873321933644E-5	IMPLEMENTATION
maybe a concrete sqlpropertyresult type but map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9995623582035736	WITHOUT_CLASSIFICATION	4.3764179642632827E-4	IMPLEMENTATION
if dotted and not load-collection nor return-join regular property	WITHOUT_CLASSIFICATION	0.9991622169364489	WITHOUT_CLASSIFICATION	8.377830635509896E-4	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907 private bytecodeprovider bytecodeprovider	WITHOUT_CLASSIFICATION	0.8125131915890088	WITHOUT_CLASSIFICATION	0.1874868084109911	IMPLEMENTATION
public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737144155388	WITHOUT_CLASSIFICATION	2.62855844611069E-5	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999657388803171	WITHOUT_CLASSIFICATION	3.4261119682788124E-5	IMPLEMENTATION
package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998570861595284	WITHOUT_CLASSIFICATION	1.4291384047159062E-4	IMPLEMENTATION
void setshowsqlenabled(boolean b) { showsql = b } void setformatsqlenabled(boolean b) { formatsql = b }	WITHOUT_CLASSIFICATION	0.9992578693859916	WITHOUT_CLASSIFICATION	7.421306140083139E-4	IMPLEMENTATION
public bytecodeprovider getbytecodeprovider() { return bytecodeprovider } void setbytecodeprovider(bytecodeprovider bytecodeprovider) { this.bytecodeprovider = bytecodeprovider }	WITHOUT_CLASSIFICATION	0.9999285217268576	WITHOUT_CLASSIFICATION	7.147827314231567E-5	IMPLEMENTATION
using local since the inheritedmetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9961517619270998	WITHOUT_CLASSIFICATION	0.003848238072900264	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907	WITHOUT_CLASSIFICATION	0.8125131915890088	WITHOUT_CLASSIFICATION	0.1874868084109911	IMPLEMENTATION
protected list extendsqueue	WITHOUT_CLASSIFICATION	0.9999342590339653	WITHOUT_CLASSIFICATION	6.574096603472501E-5	IMPLEMENTATION
extendsqueue = new arraylist()	WITHOUT_CLASSIFICATION	0.999810990195258	WITHOUT_CLASSIFICATION	1.890098047420162E-4	IMPLEMENTATION
componenttuplizerfactory = new componenttuplizerfactory()	WITHOUT_CLASSIFICATION	0.9998174368496952	WITHOUT_CLASSIFICATION	1.8256315030489633E-4	IMPLEMENTATION
if doc is null then for whatever reason the cached file cannot be used	WITHOUT_CLASSIFICATION	0.9999999595330727	WITHOUT_CLASSIFICATION	4.046692733285503E-8	IMPLEMENTATION
drop them in reverse order in case db needs it done that way	WITHOUT_CLASSIFICATION	0.9999410520487578	WITHOUT_CLASSIFICATION	5.894795124212626E-5	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999657388803171	WITHOUT_CLASSIFICATION	3.4261119682788124E-5	IMPLEMENTATION
this method may be called many times!!	WITHOUT_CLASSIFICATION	0.99941026980295	WITHOUT_CLASSIFICATION	5.897301970499861E-4	IMPLEMENTATION
iterator iterator = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.999522672844427	WITHOUT_CLASSIFICATION	4.773271555730248E-4	IMPLEMENTATION
iterator iter = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.999522672844427	WITHOUT_CLASSIFICATION	4.773271555730248E-4	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999418194438887	WITHOUT_CLASSIFICATION	5.8180556111355786E-5	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999418194438887	WITHOUT_CLASSIFICATION	5.8180556111355786E-5	IMPLEMENTATION
settings.setcomponenttuplizerfactory( this.getcomponenttuplizerfactory() )	WITHOUT_CLASSIFICATION	0.9997821130154566	WITHOUT_CLASSIFICATION	2.178869845434314E-4	IMPLEMENTATION
private final list extendsqueue	WITHOUT_CLASSIFICATION	0.999953102556052	WITHOUT_CLASSIFICATION	4.6897443948068765E-5	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9998107879975885	WITHOUT_CLASSIFICATION	1.8921200241151138E-4	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9998107879975885	WITHOUT_CLASSIFICATION	1.8921200241151138E-4	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9978889799501653	WITHOUT_CLASSIFICATION	0.0021110200498346164	IMPLEMENTATION
set use_reflection_optimizer to false to fix hhh-227	WITHOUT_CLASSIFICATION	0.9988608449013533	WITHOUT_CLASSIFICATION	0.0011391550986467561	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9999027714509969	WITHOUT_CLASSIFICATION	9.722854900305336E-5	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9998431477663118	WITHOUT_CLASSIFICATION	1.568522336881787E-4	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.994713079594217	WITHOUT_CLASSIFICATION	0.005286920405783018	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9999027714509969	WITHOUT_CLASSIFICATION	9.722854900305336E-5	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9998431477663118	WITHOUT_CLASSIFICATION	1.568522336881787E-4	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.7788400824925155	WITHOUT_CLASSIFICATION	0.22115991750748454	IMPLEMENTATION
maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999999018984629	WITHOUT_CLASSIFICATION	9.81015371826323E-8	IMPLEMENTATION
the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999427872430443	WITHOUT_CLASSIFICATION	5.721275695579439E-5	IMPLEMENTATION
the element has changed	WITHOUT_CLASSIFICATION	0.9999973084659708	WITHOUT_CLASSIFICATION	2.69153402915359E-6	IMPLEMENTATION
careful these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9882696096614161	WITHOUT_CLASSIFICATION	0.011730390338583979	IMPLEMENTATION
needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.7714935746001816	WITHOUT_CLASSIFICATION	0.22850642539981827	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9991350918463745	WITHOUT_CLASSIFICATION	8.649081536254822E-4	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9991350918463745	WITHOUT_CLASSIFICATION	8.649081536254822E-4	IMPLEMENTATION
do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.999793012859805	WITHOUT_CLASSIFICATION	2.0698714019507978E-4	IMPLEMENTATION
short-circuit(s) no new elements the old list contains only orphans no old elements so no orphans neither	WITHOUT_CLASSIFICATION	0.9999980499594253	WITHOUT_CLASSIFICATION	1.950040574649919E-6	IMPLEMENTATION
create the collection holding the orphans	WITHOUT_CLASSIFICATION	0.9999372660466926	WITHOUT_CLASSIFICATION	6.27339533073306E-5	IMPLEMENTATION
collect entityidentifier(s) of the current elements - add them into a hashset for fast access	WITHOUT_CLASSIFICATION	0.9999868522496735	WITHOUT_CLASSIFICATION	1.3147750326483652E-5	IMPLEMENTATION
iterate over the old list	WITHOUT_CLASSIFICATION	0.9999874215383563	WITHOUT_CLASSIFICATION	1.2578461643745524E-5	IMPLEMENTATION
(array==null) ? templist.size()	WITHOUT_CLASSIFICATION	0.9998754214779956	WITHOUT_CLASSIFICATION	1.245785220043645E-4	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.994713079594217	WITHOUT_CLASSIFICATION	0.005286920405783018	IMPLEMENTATION
(array==null) ? templist.get(i)	WITHOUT_CLASSIFICATION	0.9998754214779956	WITHOUT_CLASSIFICATION	1.245785220043645E-4	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9999330795197658	WITHOUT_CLASSIFICATION	6.692048023418407E-5	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9999330795197658	WITHOUT_CLASSIFICATION	6.692048023418407E-5	IMPLEMENTATION
amazingly these two will work because abstractcollection uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9996915246626394	WITHOUT_CLASSIFICATION	3.084753373606063E-4	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.7788400824925155	WITHOUT_CLASSIFICATION	0.22115991750748454	IMPLEMENTATION
finally what it's all about	WITHOUT_CLASSIFICATION	0.9970687501541246	WITHOUT_CLASSIFICATION	0.002931249845875374	IMPLEMENTATION
note that if we load this collection from a cartesian product the multiplicity would be broken so use an idbag instead	WITHOUT_CLASSIFICATION	0.999998505745616	WITHOUT_CLASSIFICATION	1.4942543839586865E-6	IMPLEMENTATION
anyway here we implement <set> semantics for a <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9981106274787926	WITHOUT_CLASSIFICATION	0.0018893725212073206	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999978151971252	WITHOUT_CLASSIFICATION	2.1848028748737296E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9987577580617345	WITHOUT_CLASSIFICATION	0.0012422419382654756	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.7788400824925155	WITHOUT_CLASSIFICATION	0.22115991750748454	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999978151971252	WITHOUT_CLASSIFICATION	2.1848028748737296E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9987577580617345	WITHOUT_CLASSIFICATION	0.0012422419382654756	IMPLEMENTATION
public boolean equals(object other) {read()return bag.equals(other)}public int hashcode(object other) {read()return bag.hashcode()}	WITHOUT_CLASSIFICATION	0.9999925182936833	WITHOUT_CLASSIFICATION	7.481706316633108E-6	IMPLEMENTATION
list operations	WITHOUT_CLASSIFICATION	0.999689141025897	WITHOUT_CLASSIFICATION	3.108589741030516E-4	IMPLEMENTATION
pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999888794272693	WITHOUT_CLASSIFICATION	1.1120572730600298E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.7788400824925155	WITHOUT_CLASSIFICATION	0.22115991750748454	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.7788400824925155	WITHOUT_CLASSIFICATION	0.22115991750748454	IMPLEMENTATION
from map	WITHOUT_CLASSIFICATION	0.9999849267057117	WITHOUT_CLASSIFICATION	1.5073294288268667E-5	IMPLEMENTATION
from sortedmap	WITHOUT_CLASSIFICATION	0.9999416058663582	WITHOUT_CLASSIFICATION	5.839413364179755E-5	IMPLEMENTATION
inject the data	WITHOUT_CLASSIFICATION	0.9999405542726315	WITHOUT_CLASSIFICATION	5.9445727368509686E-5	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999886706845221	WITHOUT_CLASSIFICATION	1.1329315477836959E-5	IMPLEMENTATION
default pool size 20	WITHOUT_CLASSIFICATION	0.9999840146626645	WITHOUT_CLASSIFICATION	1.598533733541031E-5	IMPLEMENTATION
trying via forname() first to be as close to drivermanager's semantics	WITHOUT_CLASSIFICATION	0.999953074901858	WITHOUT_CLASSIFICATION	4.692509814186923E-5	IMPLEMENTATION
if debug level is enabled then log the password otherwise mask it	WITHOUT_CLASSIFICATION	0.9993954653365817	WITHOUT_CLASSIFICATION	6.045346634182926E-4	IMPLEMENTATION
register a cleanup synch	WITHOUT_CLASSIFICATION	0.9997712230148026	WITHOUT_CLASSIFICATION	2.2877698519736591E-4	IMPLEMENTATION
wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999902599644644	WITHOUT_CLASSIFICATION	9.740035535548779E-6	IMPLEMENTATION
then bind it	WITHOUT_CLASSIFICATION	0.999783328051404	WITHOUT_CLASSIFICATION	2.1667194859593234E-4	IMPLEMENTATION
try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9993253713195791	WITHOUT_CLASSIFICATION	6.746286804208767E-4	IMPLEMENTATION
allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9663258808161193	WITHOUT_CLASSIFICATION	0.033674119183880684	IMPLEMENTATION
limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999976079318278	WITHOUT_CLASSIFICATION	2.3920681721484693E-6	IMPLEMENTATION
allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9990259436995202	WITHOUT_CLASSIFICATION	9.740563004796216E-4	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998978933533771	WITHOUT_CLASSIFICATION	1.0210664662288794E-4	IMPLEMENTATION
we could register the session against the transaction even though it is not started but we'd have no guarentee of ever getting the map entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999867907839416	WITHOUT_CLASSIFICATION	1.320921605837119E-5	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999886706845221	WITHOUT_CLASSIFICATION	1.1329315477836959E-5	IMPLEMENTATION
private string propertyname	WITHOUT_CLASSIFICATION	0.9999866935223802	WITHOUT_CLASSIFICATION	1.3306477619797932E-5	IMPLEMENTATION
public propertyprojection project() {return projections.property(getpropertyname())}	WITHOUT_CLASSIFICATION	0.9999834218693457	WITHOUT_CLASSIFICATION	1.6578130654251073E-5	IMPLEMENTATION
string[] fk = stringhelper.qualify( "collection_" cp.getkeycolumnnames() )	WITHOUT_CLASSIFICATION	0.9991116520341383	WITHOUT_CLASSIFICATION	8.883479658616342E-4	IMPLEMENTATION
" collection_ where " +	WITHOUT_CLASSIFICATION	0.9998315604190686	WITHOUT_CLASSIFICATION	1.6843958093143687E-4	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999886706845221	WITHOUT_CLASSIFICATION	1.1329315477836959E-5	IMPLEMENTATION
the following two lines were added to ensure that this.params is not null which can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9204739034478204	WITHOUT_CLASSIFICATION	0.07952609655217951	IMPLEMENTATION
with two-deep subqueries the same alias would get generated for both using the old method (criteriaquery.generatesqlalias()) so that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999995234933806	WITHOUT_CLASSIFICATION	4.7650661942514875E-7	IMPLEMENTATION
implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9911864068122713	WITHOUT_CLASSIFICATION	0.008813593187728567	IMPLEMENTATION
pull off the last " "	WITHOUT_CLASSIFICATION	0.999960751588612	WITHOUT_CLASSIFICATION	3.924841138803092E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999396871439605	WITHOUT_CLASSIFICATION	6.0312856039606084E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource)	WITHOUT_CLASSIFICATION	0.9985076421867467	WITHOUT_CLASSIFICATION	0.0014923578132532865	IMPLEMENTATION
not_supported_should_use_jdbc3_preparedstatement.getgeneratedkeys_method	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9998945564044566	WITHOUT_CLASSIFICATION	1.0544359554349848E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
oracle did add support for ansi case statements in 9i	WITHOUT_CLASSIFICATION	0.9999938191112716	WITHOUT_CLASSIFICATION	6.18088872846312E-6	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999863088046113	WITHOUT_CLASSIFICATION	1.369119538869644E-5	IMPLEMENTATION
informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999427470296167	WITHOUT_CLASSIFICATION	5.725297038341969E-5	IMPLEMENTATION
or byte or text? or money	WITHOUT_CLASSIFICATION	0.9999362688902123	WITHOUT_CLASSIFICATION	6.373110978781349E-5	IMPLEMENTATION
strip table-owner because informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999837556250746	WITHOUT_CLASSIFICATION	1.6244374925423907E-5	IMPLEMENTATION
build the map of standard ansi sql aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999969879290053	WITHOUT_CLASSIFICATION	3.0120709946999236E-6	IMPLEMENTATION
pre h3.2 behavior super.getreturntype(ct m)	WITHOUT_CLASSIFICATION	0.9999246140789282	WITHOUT_CLASSIFICATION	7.538592107183555E-5	IMPLEMENTATION
finally use the sqltype if == on hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.992910576946827	WITHOUT_CLASSIFICATION	0.007089423053173034	IMPLEMENTATION
because numeric can be anything	WITHOUT_CLASSIFICATION	0.9997588149704048	WITHOUT_CLASSIFICATION	2.4118502959526693E-4	IMPLEMENTATION
constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998532091592377	WITHOUT_CLASSIFICATION	1.4679084076235752E-4	IMPLEMENTATION
standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999645785448004	WITHOUT_CLASSIFICATION	3.542145519960039E-5	IMPLEMENTATION
map second/minute/hour/day/month/year to ansi extract() override on subclasses	WITHOUT_CLASSIFICATION	0.9994320658050548	WITHOUT_CLASSIFICATION	5.679341949451227E-4	IMPLEMENTATION
register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999963719036886	WITHOUT_CLASSIFICATION	3.628096311377265E-6	IMPLEMENTATION
database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9987414062763323	WITHOUT_CLASSIFICATION	0.0012585937236675793	IMPLEMENTATION
hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988969928342343	WITHOUT_CLASSIFICATION	0.0011030071657657748	IMPLEMENTATION
keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991884694505797	WITHOUT_CLASSIFICATION	8.115305494202451E-4	IMPLEMENTATION
native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998709760682571	WITHOUT_CLASSIFICATION	1.2902393174279344E-4	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990618701720526	WITHOUT_CLASSIFICATION	9.381298279472957E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991618361413185	WITHOUT_CLASSIFICATION	8.381638586815114E-4	IMPLEMENTATION
guid support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989736615645132	WITHOUT_CLASSIFICATION	0.0010263384354868585	IMPLEMENTATION
limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989736615645132	WITHOUT_CLASSIFICATION	0.0010263384354868585	IMPLEMENTATION
by default we report no support	WITHOUT_CLASSIFICATION	0.9995958372025613	WITHOUT_CLASSIFICATION	4.0416279743879226E-4	IMPLEMENTATION
by default we report no support for nowait lock semantics	WITHOUT_CLASSIFICATION	0.9998936437427894	WITHOUT_CLASSIFICATION	1.0635625721048114E-4	IMPLEMENTATION
table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992080387979552	WITHOUT_CLASSIFICATION	7.919612020447299E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992418522525875	WITHOUT_CLASSIFICATION	7.581477474124577E-4	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990614424565508	WITHOUT_CLASSIFICATION	9.385575434492705E-4	IMPLEMENTATION
current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989527402955879	WITHOUT_CLASSIFICATION	0.0010472597044120615	IMPLEMENTATION
sqlexception support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989780347886761	WITHOUT_CLASSIFICATION	0.001021965211323969	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989736615645132	WITHOUT_CLASSIFICATION	0.0010263384354868585	IMPLEMENTATION
identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9987014848648366	WITHOUT_CLASSIFICATION	0.0012985151351634773	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989736615645132	WITHOUT_CLASSIFICATION	0.0010263384354868585	IMPLEMENTATION
grrr for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999913230935026	WITHOUT_CLASSIFICATION	8.676906497413518E-6	IMPLEMENTATION
informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998980508728684	WITHOUT_CLASSIFICATION	1.0194912713155905E-4	IMPLEMENTATION
return false here as most databases do not properly support this construct	WITHOUT_CLASSIFICATION	0.7762590969486043	WITHOUT_CLASSIFICATION	0.22374090305139585	IMPLEMENTATION
mckoi has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999968274073295	WITHOUT_CLASSIFICATION	3.1725926705224743E-6	IMPLEMENTATION
oracle8 and previous define only a "date" type which is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999313239336461	WITHOUT_CLASSIFICATION	6.867606635380729E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999134880550828	WITHOUT_CLASSIFICATION	8.65119449171149E-5	IMPLEMENTATION
" cascade"	WITHOUT_CLASSIFICATION	0.9999499128998685	WITHOUT_CLASSIFICATION	5.008710013157291E-5	IMPLEMENTATION
trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999709512441609	WITHOUT_CLASSIFICATION	2.9048755838996057E-5	IMPLEMENTATION
public boolean droptemporarytableafteruse() {we have to because postgres sets current txto rollback only after a failed create tablereturn true}	WITHOUT_CLASSIFICATION	0.9999895296125675	WITHOUT_CLASSIFICATION	1.0470387432608507E-5	IMPLEMENTATION
check violation	WITHOUT_CLASSIFICATION	0.9993861500474686	WITHOUT_CLASSIFICATION	6.138499525315563E-4	IMPLEMENTATION
unique violation	WITHOUT_CLASSIFICATION	0.9997299749193442	WITHOUT_CLASSIFICATION	2.700250806557235E-4	IMPLEMENTATION
foreign key violation	WITHOUT_CLASSIFICATION	0.9998397291906039	WITHOUT_CLASSIFICATION	1.60270809396062E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
not null violation	WITHOUT_CLASSIFICATION	0.9957062985103116	WITHOUT_CLASSIFICATION	0.004293701489688383	IMPLEMENTATION
all other	WITHOUT_CLASSIFICATION	0.9997282155327772	WITHOUT_CLASSIFICATION	2.71784467222723E-4	IMPLEMENTATION
register the type of the out param - postgresql uses types.other	WITHOUT_CLASSIFICATION	0.999965075152774	WITHOUT_CLASSIFICATION	3.4924847226023535E-5	IMPLEMENTATION
seems to not really public boolean supportsrowvalueconstructorsyntax() { return true }	WITHOUT_CLASSIFICATION	0.9996755815570832	WITHOUT_CLASSIFICATION	3.244184429167282E-4	IMPLEMENTATION
seems to have spotty lob suppport	WITHOUT_CLASSIFICATION	0.9999000667160727	WITHOUT_CLASSIFICATION	9.993328392724857E-5	IMPLEMENTATION
hhh-2300	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
ignore (probably h2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9994514546283366	WITHOUT_CLASSIFICATION	5.485453716633573E-4	IMPLEMENTATION
numeric functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999275605646996	WITHOUT_CLASSIFICATION	7.243943530040587E-5	IMPLEMENTATION
string functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999734270389238	WITHOUT_CLASSIFICATION	2.657296107621441E-5	IMPLEMENTATION
time and date functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996524171988461	WITHOUT_CLASSIFICATION	3.475828011539346E-4	IMPLEMENTATION
system functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997311538755937	WITHOUT_CLASSIFICATION	2.688461244062513E-4	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9969007290166847	WITHOUT_CLASSIFICATION	0.003099270983315329	IMPLEMENTATION
23000 check constraint violation {0} 23001 unique index or primary key violation {0}	WITHOUT_CLASSIFICATION	0.9997197719774378	WITHOUT_CLASSIFICATION	2.802280225621999E-4	IMPLEMENTATION
display the dialect version.	WITHOUT_CLASSIFICATION	0.99997944206808	WITHOUT_CLASSIFICATION	2.0557931920072032E-5	IMPLEMENTATION
the rdms concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999228893952965	WITHOUT_CLASSIFICATION	7.71106047034955E-5	IMPLEMENTATION
dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997389454159659	WITHOUT_CLASSIFICATION	2.610545840341326E-4	IMPLEMENTATION
original dialect.java returns " for update"	WITHOUT_CLASSIFICATION	0.9998839207726058	WITHOUT_CLASSIFICATION	1.16079227394251E-4	IMPLEMENTATION
verify the state of this new method in hibernate 3.0 dialect.java	WITHOUT_CLASSIFICATION	0.9999965643756425	WITHOUT_CLASSIFICATION	3.4356243575149384E-6	IMPLEMENTATION
origial dialect.java returns true	WITHOUT_CLASSIFICATION	0.9998723229757325	WITHOUT_CLASSIFICATION	1.2767702426753926E-4	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9998890487899346	WITHOUT_CLASSIFICATION	1.1095121006543688E-4	IMPLEMENTATION
sequence methods - start. the rdms dialect needs these	WITHOUT_CLASSIFICATION	0.9996156517108711	WITHOUT_CLASSIFICATION	3.843482891288885E-4	IMPLEMENTATION
methods to make it possible to use the native id generator	WITHOUT_CLASSIFICATION	0.9896951766590927	WITHOUT_CLASSIFICATION	0.010304823340907236	IMPLEMENTATION
the where clause was added to eliminate this statement from brute force searches.	WITHOUT_CLASSIFICATION	0.9999929485933076	WITHOUT_CLASSIFICATION	7.051406692439263E-6	IMPLEMENTATION
sequence methods - end	WITHOUT_CLASSIFICATION	0.9999100889598584	WITHOUT_CLASSIFICATION	8.99110401415679E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999134880550828	WITHOUT_CLASSIFICATION	8.65119449171149E-5	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9997894740190448	WITHOUT_CLASSIFICATION	2.1052598095515178E-4	IMPLEMENTATION
used with drop table to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999991702503039	WITHOUT_CLASSIFICATION	8.297496960906138E-7	IMPLEMENTATION
rdms supports the union all clause.	WITHOUT_CLASSIFICATION	0.9995236663165455	WITHOUT_CLASSIFICATION	4.763336834545474E-4	IMPLEMENTATION
rdms has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999968254812925	WITHOUT_CLASSIFICATION	3.1745187075605673E-6	IMPLEMENTATION
multi-param dialect functions	WITHOUT_CLASSIFICATION	0.999926432093685	WITHOUT_CLASSIFICATION	7.356790631493018E-5	IMPLEMENTATION
function templates	WITHOUT_CLASSIFICATION	0.9997790541701139	WITHOUT_CLASSIFICATION	2.209458298860025E-4	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9969007290166847	WITHOUT_CLASSIFICATION	0.003099270983315329	IMPLEMENTATION
this assumes schema support which is present in 1.8.0 and later	WITHOUT_CLASSIFICATION	0.9997361730406007	WITHOUT_CLASSIFICATION	2.638269593992573E-4	IMPLEMENTATION
hsqldb only supports read_uncommitted transaction isolation	WITHOUT_CLASSIFICATION	0.9996481349567311	WITHOUT_CLASSIFICATION	3.5186504326888384E-4	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999757068057198	WITHOUT_CLASSIFICATION	2.4293194280163747E-5	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9999337750807961	WITHOUT_CLASSIFICATION	6.622491920394462E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9996362240392073	WITHOUT_CLASSIFICATION	3.6377596079268873E-4	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999310430120621	WITHOUT_CLASSIFICATION	6.895698793779789E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9990493903815194	WITHOUT_CLASSIFICATION	9.506096184804874E-4	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.999985025971956	WITHOUT_CLASSIFICATION	1.4974028044047508E-5	IMPLEMENTATION
timesten has no blob/clob support but these types may be suitable for some applications. the length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9997937192633788	WITHOUT_CLASSIFICATION	2.0628073662110974E-4	IMPLEMENTATION
new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999968708810358	WITHOUT_CLASSIFICATION	3.129118964108139E-6	IMPLEMENTATION
public boolean supportsforupdatenowait() {return false}	WITHOUT_CLASSIFICATION	0.999987214598585	WITHOUT_CLASSIFICATION	1.2785401415034478E-5	IMPLEMENTATION
timesten has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999967707864689	WITHOUT_CLASSIFICATION	3.2292135310569486E-6	IMPLEMENTATION
iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9996015340492969	WITHOUT_CLASSIFICATION	3.9846595070304035E-4	IMPLEMENTATION
add new ordered map	WITHOUT_CLASSIFICATION	0.9997738088710886	WITHOUT_CLASSIFICATION	2.2619112891137118E-4	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" )	WITHOUT_CLASSIFICATION	0.9997825180519292	WITHOUT_CLASSIFICATION	2.1748194807080052E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999833750630508	WITHOUT_CLASSIFICATION	1.6624936949213143E-5	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999773462122136	WITHOUT_CLASSIFICATION	2.2653787786429614E-5	IMPLEMENTATION
return "select current_timestamp from rdb$database"	WITHOUT_CLASSIFICATION	0.9999852006541448	WITHOUT_CLASSIFICATION	1.4799345855175735E-5	IMPLEMENTATION
registercolumntype data types	WITHOUT_CLASSIFICATION	0.9999032889634296	WITHOUT_CLASSIFICATION	9.671103657048594E-5	IMPLEMENTATION
hibernate seems to ignore this type	WITHOUT_CLASSIFICATION	0.9998157966246942	WITHOUT_CLASSIFICATION	1.8420337530566263E-4	IMPLEMENTATION
ibid for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999653786270367	WITHOUT_CLASSIFICATION	3.462137296330241E-5	IMPLEMENTATION
tell hibernate to use getbytes instead of getbinarystream	WITHOUT_CLASSIFICATION	0.9998583130222265	WITHOUT_CLASSIFICATION	1.416869777736254E-4	IMPLEMENTATION
no batch statements	WITHOUT_CLASSIFICATION	0.999817083092625	WITHOUT_CLASSIFICATION	1.8291690737495827E-4	IMPLEMENTATION
we might want a special case for 192. this is very common for money types and here it is converted to 181	WITHOUT_CLASSIFICATION	0.9972612796466916	WITHOUT_CLASSIFICATION	0.0027387203533083978	IMPLEMENTATION
no pointbase bit	WITHOUT_CLASSIFICATION	0.9998395336509649	WITHOUT_CLASSIFICATION	1.604663490349853E-4	IMPLEMENTATION
no pointbase tinyint	WITHOUT_CLASSIFICATION	0.9998280411233775	WITHOUT_CLASSIFICATION	1.7195887662249296E-4	IMPLEMENTATION
pointbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999968260186156	WITHOUT_CLASSIFICATION	3.1739813843762625E-6	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999134880550828	WITHOUT_CLASSIFICATION	8.65119449171149E-5	IMPLEMENTATION
the current_timestamp is more accurate but only known to be supported in sql server 7.0 and later (i.e. sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9998814952462765	WITHOUT_CLASSIFICATION	1.1850475372355975E-4	IMPLEMENTATION
sql server (at least up through 2005) does not support defining cascade delete constraints which can circel back to the mutating table	WITHOUT_CLASSIFICATION	0.9995743559016356	WITHOUT_CLASSIFICATION	4.2564409836442005E-4	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.995682054060921	WITHOUT_CLASSIFICATION	0.004317945939078941	IMPLEMENTATION
registercolumntype( types.blob 16777215 "mediumblob" ) registercolumntype( types.blob 65535 "blob" )	WITHOUT_CLASSIFICATION	0.9997825180519292	WITHOUT_CLASSIFICATION	2.1748194807080052E-4	IMPLEMENTATION
registercolumntype( types.clob 16777215 "mediumtext" ) registercolumntype( types.clob 65535 "text" )	WITHOUT_CLASSIFICATION	0.9997827762577488	WITHOUT_CLASSIFICATION	2.1722374225125515E-4	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" ) registercolumntype( types.varchar 65535 "text" )	WITHOUT_CLASSIFICATION	0.9997827762577488	WITHOUT_CLASSIFICATION	2.1722374225125515E-4	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999134880550828	WITHOUT_CLASSIFICATION	8.65119449171149E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999773462122136	WITHOUT_CLASSIFICATION	2.2653787786429614E-5	IMPLEMENTATION
sybase bit type does not support null values	WITHOUT_CLASSIFICATION	0.9996346346706262	WITHOUT_CLASSIFICATION	3.6536532937384117E-4	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999833750630508	WITHOUT_CLASSIFICATION	1.6624936949213143E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999258646772862	WITHOUT_CLASSIFICATION	7.41353227138191E-5	IMPLEMENTATION
not null (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.998742207793946	WITHOUT_CLASSIFICATION	0.0012577922060540195	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999995878274139	WITHOUT_CLASSIFICATION	4.1217258604331867E-7	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999757068057198	WITHOUT_CLASSIFICATION	2.4293194280163747E-5	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9999337750807961	WITHOUT_CLASSIFICATION	6.622491920394462E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9996362240392073	WITHOUT_CLASSIFICATION	3.6377596079268873E-4	IMPLEMENTATION
add another (inner) nested select add the main query close off the inner nested select	WITHOUT_CLASSIFICATION	0.999946096870386	WITHOUT_CLASSIFICATION	5.3903129614040274E-5	IMPLEMENTATION
add the main query	WITHOUT_CLASSIFICATION	0.9996185313978098	WITHOUT_CLASSIFICATION	3.814686021903073E-4	IMPLEMENTATION
add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9998946692296614	WITHOUT_CLASSIFICATION	1.0533077033866845E-4	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999833750630508	WITHOUT_CLASSIFICATION	1.6624936949213143E-5	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999258646772862	WITHOUT_CLASSIFICATION	7.41353227138191E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999134880550828	WITHOUT_CLASSIFICATION	8.65119449171149E-5	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999310430120621	WITHOUT_CLASSIFICATION	6.895698793779789E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9990493903815194	WITHOUT_CLASSIFICATION	9.506096184804874E-4	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.999985025971956	WITHOUT_CLASSIFICATION	1.4974028044047508E-5	IMPLEMENTATION
features which change between 8i 9i and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999604451726445	WITHOUT_CLASSIFICATION	3.9554827355531776E-5	IMPLEMENTATION
features which remain constant across 8i 9i and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997298421005542	WITHOUT_CLASSIFICATION	2.701578994458606E-4	IMPLEMENTATION
binary %stream character %stream	WITHOUT_CLASSIFICATION	0.9999384413803171	WITHOUT_CLASSIFICATION	6.155861968298498E-5	IMPLEMENTATION
getdefaultproperties().setproperty(environment.statement_batch_size no_batch)	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
hibernate impelemnts cast in dialect.java	WITHOUT_CLASSIFICATION	0.999992945239768	WITHOUT_CLASSIFICATION	7.054760231995355E-6	IMPLEMENTATION
aggregate functions shouldn't be registered right? registerfunction( "list" new standardsqlfunction("list"hibernate.string) ) stopped on $list	WITHOUT_CLASSIFICATION	0.9987117371853123	WITHOUT_CLASSIFICATION	0.001288262814687687	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989736615645132	WITHOUT_CLASSIFICATION	0.0010263384354868585	IMPLEMENTATION
below is for cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999982402976428	WITHOUT_CLASSIFICATION	1.7597023571676677E-6	IMPLEMENTATION
note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9997065701194515	WITHOUT_CLASSIFICATION	2.9342988054856055E-4	IMPLEMENTATION
%upper is deprecated	WITHOUT_CLASSIFICATION	0.9998009152931017	WITHOUT_CLASSIFICATION	1.9908470689820206E-4	IMPLEMENTATION
the syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999138469533908	WITHOUT_CLASSIFICATION	8.615304660918612E-5	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990618701720526	WITHOUT_CLASSIFICATION	9.381298279472957E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991618361413185	WITHOUT_CLASSIFICATION	8.381638586815114E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992418522525875	WITHOUT_CLASSIFICATION	7.581477474124577E-4	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
the syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999556845880555	WITHOUT_CLASSIFICATION	4.4315411944465056E-5	IMPLEMENTATION
completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999073553681004	WITHOUT_CLASSIFICATION	9.264463189960296E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990105196529699	WITHOUT_CLASSIFICATION	9.894803470300595E-4	IMPLEMENTATION
limit support (ala top) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993189201885355	WITHOUT_CLASSIFICATION	6.810798114643769E-4	IMPLEMENTATION
intersystems cache' does not current support "select for update" syntax set your transaction mode to read_committed before using	WITHOUT_CLASSIFICATION	0.9990176029361836	WITHOUT_CLASSIFICATION	9.823970638164464E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
<string>	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990614424565508	WITHOUT_CLASSIFICATION	9.385575434492705E-4	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989736615645132	WITHOUT_CLASSIFICATION	0.0010263384354868585	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9998890487899346	WITHOUT_CLASSIFICATION	1.1095121006543688E-4	IMPLEMENTATION
does the limit clause come at the start of the select statement rather than at the end?	WITHOUT_CLASSIFICATION	0.9999996405534414	WITHOUT_CLASSIFICATION	3.5944655862334734E-7	IMPLEMENTATION
does the limit clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999857833060362	WITHOUT_CLASSIFICATION	1.4216693963836697E-5	IMPLEMENTATION
the name of the sql function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999851308720995	WITHOUT_CLASSIFICATION	1.486912790060664E-5	IMPLEMENTATION
create an outerjoingenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999941652857997	WITHOUT_CLASSIFICATION	5.834714200283583E-6	IMPLEMENTATION
the keyword used to insert a row without specifying any column values	WITHOUT_CLASSIFICATION	0.9999989911012419	WITHOUT_CLASSIFICATION	1.0088987580773014E-6	IMPLEMENTATION
registerfunction( "trim" new standardsqlfunction( "trim" hibernate.string ) )	WITHOUT_CLASSIFICATION	0.9998341198230953	WITHOUT_CLASSIFICATION	1.6588017690462065E-4	IMPLEMENTATION
skip the from keyword in params	WITHOUT_CLASSIFICATION	0.9999967144222709	WITHOUT_CLASSIFICATION	3.2855777291382255E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999473687648642	WITHOUT_CLASSIFICATION	5.263123513578086E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9998945564044566	WITHOUT_CLASSIFICATION	1.0544359554349848E-4	IMPLEMENTATION
sqlfunction implementation	WITHOUT_CLASSIFICATION	0.9996959527357602	WITHOUT_CLASSIFICATION	3.0404726423981286E-4	IMPLEMENTATION
conceivable that the dialect ctor could throw hibernateexceptions so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999474531798733	WITHOUT_CLASSIFICATION	5.2546820126727016E-5	IMPLEMENTATION
register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9998515900046658	WITHOUT_CLASSIFICATION	1.4840999533417533E-4	IMPLEMENTATION
register resolvers set via environment property	WITHOUT_CLASSIFICATION	0.9995848476292494	WITHOUT_CLASSIFICATION	4.1515237075064076E-4	IMPLEMENTATION
kept for backward compatibility until after the 3.1beta5 release of ha	WITHOUT_CLASSIFICATION	0.9999638773716548	WITHOUT_CLASSIFICATION	3.612262834519424E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9996970432034599	WITHOUT_CLASSIFICATION	3.0295679654003527E-4	IMPLEMENTATION
the cascadingaction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998470504215132	WITHOUT_CLASSIFICATION	1.529495784867996E-4	IMPLEMENTATION
the cascadingaction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999750114568683	WITHOUT_CLASSIFICATION	2.4988543131699675E-4	IMPLEMENTATION
delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999952084598952	WITHOUT_CLASSIFICATION	4.791540104772981E-6	IMPLEMENTATION
orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9998780190152184	WITHOUT_CLASSIFICATION	1.2198098478157463E-4	IMPLEMENTATION
(lockmode) anything	WITHOUT_CLASSIFICATION	0.999523414538358	WITHOUT_CLASSIFICATION	4.765854616419322E-4	IMPLEMENTATION
lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999925859840714	WITHOUT_CLASSIFICATION	7.414015928599922E-5	IMPLEMENTATION
refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9994912648882095	WITHOUT_CLASSIFICATION	5.087351117904798E-4	IMPLEMENTATION
evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9996715435611567	WITHOUT_CLASSIFICATION	3.2845643884329626E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998781442990153	WITHOUT_CLASSIFICATION	1.2185570098468012E-4	IMPLEMENTATION
orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.999510286871216	WITHOUT_CLASSIFICATION	4.897131287840015E-4	IMPLEMENTATION
for deprecated saveorupdatecopy()	WITHOUT_CLASSIFICATION	0.9999593803764172	WITHOUT_CLASSIFICATION	4.06196235828809E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9996716402949297	WITHOUT_CLASSIFICATION	3.2835970507031416E-4	IMPLEMENTATION
a proxy cannot be transient and it breaks foreignkeys.istransient	WITHOUT_CLASSIFICATION	0.9999865113788541	WITHOUT_CLASSIFICATION	1.348862114591579E-5	IMPLEMENTATION
replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999807567591271	WITHOUT_CLASSIFICATION	1.9243240872864266E-5	IMPLEMENTATION
static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999378163390789	WITHOUT_CLASSIFICATION	6.21836609211735E-5	IMPLEMENTATION
handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9998930982383134	WITHOUT_CLASSIFICATION	1.0690176168661722E-4	IMPLEMENTATION
actually the semantics of the next three are really "bag" note that unlike objects collection insertions updates deletions are not really remembered between flushes. we just re-use the same lists for convenience.	WITHOUT_CLASSIFICATION	0.9999821453562031	WITHOUT_CLASSIFICATION	1.785464379691512E-5	IMPLEMENTATION
add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9996256703518058	WITHOUT_CLASSIFICATION	3.7432964819409395E-4	IMPLEMENTATION
continue loop	WITHOUT_CLASSIFICATION	0.9999063514095672	WITHOUT_CLASSIFICATION	9.364859043282306E-5	IMPLEMENTATION
sort the updates by fk	WITHOUT_CLASSIFICATION	0.9995335239868767	WITHOUT_CLASSIFICATION	4.6647601312329624E-4	IMPLEMENTATION
sort the updates by pk	WITHOUT_CLASSIFICATION	0.999737196860056	WITHOUT_CLASSIFICATION	2.62803139943913E-4	IMPLEMENTATION
the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999888040867967	WITHOUT_CLASSIFICATION	1.1195913203224139E-5	IMPLEMENTATION
the map of batch numbers to entityinsertaction lists	WITHOUT_CLASSIFICATION	0.9999688835867326	WITHOUT_CLASSIFICATION	3.1116413267421943E-5	IMPLEMENTATION
optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.999846997797925	WITHOUT_CLASSIFICATION	1.5300220207502957E-4	IMPLEMENTATION
the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999253952992232	WITHOUT_CLASSIFICATION	7.460470077676707E-5	IMPLEMENTATION
remove the current element from insertions. it will be added back later.	WITHOUT_CLASSIFICATION	0.9999976439767491	WITHOUT_CLASSIFICATION	2.3560232509394678E-6	IMPLEMENTATION
the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999273014849804	WITHOUT_CLASSIFICATION	7.269851501957809E-5	IMPLEMENTATION
there is already an existing batch for this type of entity. check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999999434462601	WITHOUT_CLASSIFICATION	5.6553739921722834E-8	IMPLEMENTATION
now rebuild the insertions list. there is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999951661130003	WITHOUT_CLASSIFICATION	4.833886999624982E-6	IMPLEMENTATION
the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999792491187741	WITHOUT_CLASSIFICATION	2.0750881225959594E-5	IMPLEMENTATION
loop through all the associations of the current entity and make sure that they are processed before the current batch number	WITHOUT_CLASSIFICATION	0.9999189100644961	WITHOUT_CLASSIFICATION	8.108993550393411E-5	IMPLEMENTATION
find the batch number associated with the current association if any.	WITHOUT_CLASSIFICATION	0.9999827096176187	WITHOUT_CLASSIFICATION	1.7290382381286627E-5	IMPLEMENTATION
create a new batch for this type. the batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999965503738255	WITHOUT_CLASSIFICATION	3.4496261745472572E-6	IMPLEMENTATION
loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9997733261122269	WITHOUT_CLASSIFICATION	2.266738877731432E-4	IMPLEMENTATION
since this entity will now be processed in the latest possible batch we can be assured that it will come after all other associations there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.6205745858746645	WITHOUT_CLASSIFICATION	0.3794254141253354	IMPLEMENTATION
cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999373237474717	WITHOUT_CLASSIFICATION	6.267625252829596E-5	IMPLEMENTATION
not really necessary but good for consistency	WITHOUT_CLASSIFICATION	0.9998170534046964	WITHOUT_CLASSIFICATION	1.8294659530360786E-4	IMPLEMENTATION
we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9998375936270825	WITHOUT_CLASSIFICATION	1.6240637291749227E-4	IMPLEMENTATION
a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9991640019051877	WITHOUT_CLASSIFICATION	8.359980948123379E-4	IMPLEMENTATION
handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9997350697249889	WITHOUT_CLASSIFICATION	2.649302750111257E-4	IMPLEMENTATION
loaded entity instances by entityuniquekey	WITHOUT_CLASSIFICATION	0.9998627109913913	WITHOUT_CLASSIFICATION	1.3728900860876907E-4	IMPLEMENTATION
identity map of entityentry instances by the entity instance	WITHOUT_CLASSIFICATION	0.9999338285062819	WITHOUT_CLASSIFICATION	6.617149371809841E-5	IMPLEMENTATION
entity proxies by entitykey	WITHOUT_CLASSIFICATION	0.9998865970800587	WITHOUT_CLASSIFICATION	1.1340291994130138E-4	IMPLEMENTATION
snapshots of current database state for entities that have not been loaded	WITHOUT_CLASSIFICATION	0.9984885465066037	WITHOUT_CLASSIFICATION	0.0015114534933963078	IMPLEMENTATION
identity map of array holder arrayholder instances by the array instance	WITHOUT_CLASSIFICATION	0.999981090859155	WITHOUT_CLASSIFICATION	1.8909140845050173E-5	IMPLEMENTATION
collection wrappers by the collectionkey key=collectionkey value=persistentcollection	WITHOUT_CLASSIFICATION	0.9998869468708056	WITHOUT_CLASSIFICATION	1.1305312919442811E-4	IMPLEMENTATION
set of entitykeys of deleted objects	WITHOUT_CLASSIFICATION	0.999901473207587	WITHOUT_CLASSIFICATION	9.852679241296474E-5	IMPLEMENTATION
properties that we have tried to load and not found in the database	WITHOUT_CLASSIFICATION	0.9970542662286745	WITHOUT_CLASSIFICATION	0.0029457337713255528	IMPLEMENTATION
a list of collection wrappers that were instantiating during result set processing that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999266327376946	WITHOUT_CLASSIFICATION	7.336726230548032E-5	IMPLEMENTATION
a container for collections we load up when the owning entity is not yet loaded for now this is purely transient!	WITHOUT_CLASSIFICATION	0.999405650212174	WITHOUT_CLASSIFICATION	5.943497878260518E-4	IMPLEMENTATION
downgrade locks	WITHOUT_CLASSIFICATION	0.9998149819894728	WITHOUT_CLASSIFICATION	1.850180105272005E-4	IMPLEMENTATION
any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.999962021808514	WITHOUT_CLASSIFICATION	3.7978191486030884E-5	IMPLEMENTATION
unwrap the object	WITHOUT_CLASSIFICATION	0.9999635998654872	WITHOUT_CLASSIFICATION	3.640013451284402E-5	IMPLEMENTATION
initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999866277782795	WITHOUT_CLASSIFICATION	1.337222172040373E-5	IMPLEMENTATION
return the proxied object	WITHOUT_CLASSIFICATION	0.9999901573720548	WITHOUT_CLASSIFICATION	9.842627945189036E-6	IMPLEMENTATION
overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999622343388431	WITHOUT_CLASSIFICATION	3.776566115680248E-5	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999823276165897	WITHOUT_CLASSIFICATION	1.7672383410348934E-5	IMPLEMENTATION
or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999444027666271	WITHOUT_CLASSIFICATION	5.5597233373020625E-5	IMPLEMENTATION
treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9955164332680367	WITHOUT_CLASSIFICATION	0.004483566731963323	IMPLEMENTATION
do this work only at the very highest level of the load don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9975887150477603	WITHOUT_CLASSIFICATION	0.002411284952239682	IMPLEMENTATION
note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999585968119208	WITHOUT_CLASSIFICATION	4.140318807920328E-5	IMPLEMENTATION
it might be an unwrapped collection reference! try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.99987284350975	WITHOUT_CLASSIFICATION	1.2715649024998429E-4	IMPLEMENTATION
public boolean isnonexistant(entitykey key) {return nonexistantentitykeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999872076697812	WITHOUT_CLASSIFICATION	1.2792330218758893E-5	IMPLEMENTATION
public boolean isnonexistant(entityuniquekey key) {return nonexistententityuniquekeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999872076697812	WITHOUT_CLASSIFICATION	1.2792330218758893E-5	IMPLEMENTATION
iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999866598729131	WITHOUT_CLASSIFICATION	1.3340127086893737E-5	IMPLEMENTATION
does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.999997711919544	WITHOUT_CLASSIFICATION	2.288080456125173E-6	IMPLEMENTATION
check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999938784695744	WITHOUT_CLASSIFICATION	6.121530425569734E-6	IMPLEMENTATION
otherwise the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999629829973155	WITHOUT_CLASSIFICATION	3.701700268457E-5	IMPLEMENTATION
adds remove as a sort-of alias for delete	WITHOUT_CLASSIFICATION	0.9999979009548894	WITHOUT_CLASSIFICATION	2.099045110651789E-6	IMPLEMENTATION
bad cast	WITHOUT_CLASSIFICATION	0.9999494406052668	WITHOUT_CLASSIFICATION	5.0559394733155255E-5	IMPLEMENTATION
return lhspersister.getsubclasspropertycolumnnames(property)	WITHOUT_CLASSIFICATION	0.9999506273750659	WITHOUT_CLASSIFICATION	4.937262493409843E-5	IMPLEMENTATION
property-refs for associations defined on a component are not supported so no need to slice	WITHOUT_CLASSIFICATION	0.9996260641858383	WITHOUT_CLASSIFICATION	3.7393581416169346E-4	IMPLEMENTATION
if there is no property-ref assume the join is to the subclass table (ie. the table of the subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999988811379652	WITHOUT_CLASSIFICATION	1.1188620347844579E-6	IMPLEMENTATION
handle a property-ref	WITHOUT_CLASSIFICATION	0.999792557083221	WITHOUT_CLASSIFICATION	2.0744291677904562E-4	IMPLEMENTATION
nativesqlqueryreturn	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9998421012678189	WITHOUT_CLASSIFICATION	1.578987321810027E-4	IMPLEMENTATION
why is all others non final ?	WITHOUT_CLASSIFICATION	0.9971655362858648	WITHOUT_CLASSIFICATION	0.0028344637141351145	IMPLEMENTATION
this.forcecacherefresh = forcecacherefresh	WITHOUT_CLASSIFICATION	0.999760200845213	WITHOUT_CLASSIFICATION	2.3979915478707586E-4	IMPLEMENTATION
hella important optimization!!!	WITHOUT_CLASSIFICATION	0.9998736835904544	WITHOUT_CLASSIFICATION	1.2631640954568078E-4	IMPLEMENTATION
return that.type.equals(type) && equalshelper.equals(that.value value)	WITHOUT_CLASSIFICATION	0.9999512809757237	WITHOUT_CLASSIFICATION	4.8719024276388E-5	IMPLEMENTATION
must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9997164410109387	WITHOUT_CLASSIFICATION	2.8355898906128063E-4	IMPLEMENTATION
take a snapshot	WITHOUT_CLASSIFICATION	0.9998748973062288	WITHOUT_CLASSIFICATION	1.2510269377113368E-4	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9997516152247677	WITHOUT_CLASSIFICATION	2.4838477523219044E-4	IMPLEMENTATION
the owning entity may have been deleted and its identifier unset due to identifier-rollback in which case try to look up its identifier from the persistence context	WITHOUT_CLASSIFICATION	0.9991879586081722	WITHOUT_CLASSIFICATION	8.120413918278496E-4	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.998461994525128	WITHOUT_CLASSIFICATION	0.0015380054748719346	IMPLEMENTATION
we've been here before	WITHOUT_CLASSIFICATION	0.9998960410223772	WITHOUT_CLASSIFICATION	1.0395897762277093E-4	IMPLEMENTATION
it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999945412847525	WITHOUT_CLASSIFICATION	5.458715247551634E-6	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.998461994525128	WITHOUT_CLASSIFICATION	0.0015380054748719346	IMPLEMENTATION
if either its role changed	WITHOUT_CLASSIFICATION	0.999997872773264	WITHOUT_CLASSIFICATION	2.127226735962528E-6	IMPLEMENTATION
or its key changed	WITHOUT_CLASSIFICATION	0.9999814480470636	WITHOUT_CLASSIFICATION	1.8551952936491936E-5	IMPLEMENTATION
we will need to create new entries	WITHOUT_CLASSIFICATION	0.9996348680059779	WITHOUT_CLASSIFICATION	3.6513199402205324E-4	IMPLEMENTATION
we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.999654259775553	WITHOUT_CLASSIFICATION	3.457402244470394E-4	IMPLEMENTATION
force initialize!	WITHOUT_CLASSIFICATION	0.9993614954669746	WITHOUT_CLASSIFICATION	6.38504533025464E-4	IMPLEMENTATION
else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999974098118889	WITHOUT_CLASSIFICATION	2.590188111030818E-6	IMPLEMENTATION
attributes maintained between flush cycles	WITHOUT_CLASSIFICATION	0.9998926500746301	WITHOUT_CLASSIFICATION	1.0734992536991719E-4	IMPLEMENTATION
session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.999955846652302	WITHOUT_CLASSIFICATION	4.415334769801634E-5	IMPLEMENTATION
allow the collectionsnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9997193387019833	WITHOUT_CLASSIFICATION	2.8066129801674277E-4	IMPLEMENTATION
attributes used only during flush cycle	WITHOUT_CLASSIFICATION	0.9999400998121155	WITHOUT_CLASSIFICATION	5.9900187884493797E-5	IMPLEMENTATION
"current" means the reference that was found during flush()	WITHOUT_CLASSIFICATION	0.999996493188744	WITHOUT_CLASSIFICATION	3.5068112560149215E-6	IMPLEMENTATION
"loaded" means the reference that is consistent with the current database state	WITHOUT_CLASSIFICATION	0.9999776239666256	WITHOUT_CLASSIFICATION	2.237603337440859E-5	IMPLEMENTATION
during flush we navigate the object graph to collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9987595380695002	WITHOUT_CLASSIFICATION	0.0012404619304997506	IMPLEMENTATION
if we instantiate a collection during the flush() process we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999882419824035	WITHOUT_CLASSIFICATION	1.1758017596436513E-5	IMPLEMENTATION
new collections that get found + wrapped during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9938174185025955	WITHOUT_CLASSIFICATION	0.006182581497404367	IMPLEMENTATION
a newly wrapped collection is not dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9883545177281827	WITHOUT_CLASSIFICATION	0.011645482271817258	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.9998940102578118	WITHOUT_CLASSIFICATION	1.0598974218819274E-4	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.9998940102578118	WITHOUT_CLASSIFICATION	1.0598974218819274E-4	IMPLEMENTATION
detached collections that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9918637099100455	WITHOUT_CLASSIFICATION	0.00813629008995452	IMPLEMENTATION
optimization	WITHOUT_CLASSIFICATION	0.9998106224806794	WITHOUT_CLASSIFICATION	1.893775193204864E-4	IMPLEMENTATION
optimization optimization	WITHOUT_CLASSIFICATION	0.9998940639547695	WITHOUT_CLASSIFICATION	1.059360452304362E-4	IMPLEMENTATION
re-snapshot	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999506919046113	WITHOUT_CLASSIFICATION	4.9308095388828966E-5	IMPLEMENTATION
note this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9977173538804589	WITHOUT_CLASSIFICATION	0.002282646119541177	IMPLEMENTATION
memory optimization	WITHOUT_CLASSIFICATION	0.9996597432827556	WITHOUT_CLASSIFICATION	3.402567172444114E-4	IMPLEMENTATION
use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9998643823653885	WITHOUT_CLASSIFICATION	1.3561763461144704E-4	IMPLEMENTATION
copied from session	WITHOUT_CLASSIFICATION	0.999811724554712	WITHOUT_CLASSIFICATION	1.8827544528800884E-4	IMPLEMENTATION
this should not happen since the dtd prevents it	WITHOUT_CLASSIFICATION	0.9931481157426335	WITHOUT_CLASSIFICATION	0.006851884257366396	IMPLEMENTATION
joinprocessor needs to know if the where clause fragment came from a dynamic filter or not so it can put the where clause fragment in the right place in the sql ast. 'hasfiltercondition' keeps track of that fact.	WITHOUT_CLASSIFICATION	0.9651652545299083	WITHOUT_CLASSIFICATION	0.03483474547009164	IMPLEMENTATION
the current join represents the join between a many-to-many association table and its "target" table. here we need to apply any additional filters defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9989882518020727	WITHOUT_CLASSIFICATION	0.0010117481979272083	IMPLEMENTATION
check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9990028930437306	WITHOUT_CLASSIFICATION	9.971069562693658E-4	IMPLEMENTATION
values is not null and is checkable we'll look deeper	WITHOUT_CLASSIFICATION	0.9991934295351728	WITHOUT_CLASSIFICATION	8.065704648273133E-4	IMPLEMENTATION
for non null args check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999784396111768	WITHOUT_CLASSIFICATION	2.1560388823186295E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9996970432034599	WITHOUT_CLASSIFICATION	3.0295679654003527E-4	IMPLEMENTATION
persistent collections may have components	WITHOUT_CLASSIFICATION	0.9997501282400523	WITHOUT_CLASSIFICATION	2.4987175994768544E-4	IMPLEMENTATION
check for all components values in the collection	WITHOUT_CLASSIFICATION	0.99999892846174	WITHOUT_CLASSIFICATION	1.071538259956144E-6	IMPLEMENTATION
will check current level if some of them are not null or sublevels if they exist	WITHOUT_CLASSIFICATION	0.9995603242892913	WITHOUT_CLASSIFICATION	4.396757107086244E-4	IMPLEMENTATION
do the test	WITHOUT_CLASSIFICATION	0.999938057466922	WITHOUT_CLASSIFICATION	6.194253307794355E-5	IMPLEMENTATION
if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999917236966139	WITHOUT_CLASSIFICATION	8.276303386136006E-6	IMPLEMENTATION
unwrap it	WITHOUT_CLASSIFICATION	0.9999390136867282	WITHOUT_CLASSIFICATION	6.098631327180644E-5	IMPLEMENTATION
see if the entity is already bound to this session if not look at the entity identifier and assume that the entity is persistent if the id is not "unsaved" (that is we rely on foreign keys to keep database integrity)	WITHOUT_CLASSIFICATION	0.9861111703119051	WITHOUT_CLASSIFICATION	0.013888829688094843	IMPLEMENTATION
an unfetched association can only point to an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999928960006846	WITHOUT_CLASSIFICATION	7.1039993153505245E-6	IMPLEMENTATION
let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999165799375822	WITHOUT_CLASSIFICATION	8.342006241781947E-5	IMPLEMENTATION
let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9998729871112849	WITHOUT_CLASSIFICATION	1.270128887149736E-4	IMPLEMENTATION
we use the assumed value if there is one to avoid hitting the database	WITHOUT_CLASSIFICATION	0.9999958500828596	WITHOUT_CLASSIFICATION	4.149917140436656E-6	IMPLEMENTATION
hit the database after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.999945573446314	WITHOUT_CLASSIFICATION	5.442655368603105E-5	IMPLEMENTATION
context-entity-identifier returns null explicitly if the entity is not associated with the persistence context so make some deeper checks	WITHOUT_CLASSIFICATION	0.9964408237142212	WITHOUT_CLASSIFICATION	0.0035591762857788826	IMPLEMENTATION
int count = 0	WITHOUT_CLASSIFICATION	0.9998120249966029	WITHOUT_CLASSIFICATION	1.8797500339700222E-4	IMPLEMENTATION
the first key found after the given key	WITHOUT_CLASSIFICATION	0.9996158094536043	WITHOUT_CLASSIFICATION	3.841905463957093E-4	IMPLEMENTATION
checkforend = false	WITHOUT_CLASSIFICATION	0.9997859841522474	WITHOUT_CLASSIFICATION	2.1401584775266813E-4	IMPLEMENTATION
count++	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999804778852702	WITHOUT_CLASSIFICATION	1.952211472980577E-5	IMPLEMENTATION
we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999080247644415	WITHOUT_CLASSIFICATION	9.197523555849173E-5	IMPLEMENTATION
first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999993621626952	WITHOUT_CLASSIFICATION	6.378373047099474E-7	IMPLEMENTATION
the first id found after the given id	WITHOUT_CLASSIFICATION	0.9969687274185749	WITHOUT_CLASSIFICATION	0.0030312725814250867	IMPLEMENTATION
we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9998812156231973	WITHOUT_CLASSIFICATION	1.1878437680275045E-4	IMPLEMENTATION
look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999802784708742	WITHOUT_CLASSIFICATION	1.9721529125747195E-5	IMPLEMENTATION
ignore this row of results! note the early exit	WITHOUT_CLASSIFICATION	0.9999485789128135	WITHOUT_CLASSIFICATION	5.1421087186537884E-5	IMPLEMENTATION
initialize this collection	WITHOUT_CLASSIFICATION	0.9998593569601674	WITHOUT_CLASSIFICATION	1.40643039832598E-4	IMPLEMENTATION
create one	WITHOUT_CLASSIFICATION	0.9999714728785809	WITHOUT_CLASSIFICATION	2.852712141916798E-5	IMPLEMENTATION
warning can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9994696873363643	WITHOUT_CLASSIFICATION	5.303126636357832E-4	IMPLEMENTATION
there were no queued additions and the role has a cache	WITHOUT_CLASSIFICATION	0.9999919296708694	WITHOUT_CLASSIFICATION	8.070329130602664E-6	IMPLEMENTATION
and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9930824885507851	WITHOUT_CLASSIFICATION	0.0069175114492149	IMPLEMENTATION
some filters affecting the collection are enabled on the session so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.8458571314897969	WITHOUT_CLASSIFICATION	0.15414286851020306	IMPLEMENTATION
cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998862314154688	WITHOUT_CLASSIFICATION	1.137685845312798E-4	IMPLEMENTATION
loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998197152814731	WITHOUT_CLASSIFICATION	1.802847185269602E-4	IMPLEMENTATION
collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998960622186027	WITHOUT_CLASSIFICATION	1.0393778139736884E-4	IMPLEMENTATION
simple cache of param metadata based on query string. ideally the original "user-supplied query" string should be used to retreive this metadata (i.e. not the para-list-expanded query string) to avoid unnecessary cache entries. used solely for caching param metadata for native-sql queries see getsqlparametermetadata() for a discussion as to why	WITHOUT_CLASSIFICATION	0.9969215484642646	WITHOUT_CLASSIFICATION	0.003078451535735313	IMPLEMENTATION
the cache of the actual plans	WITHOUT_CLASSIFICATION	0.9999306166820147	WITHOUT_CLASSIFICATION	6.93833179854038E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999473687648642	WITHOUT_CLASSIFICATION	5.263123513578086E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999473687648642	WITHOUT_CLASSIFICATION	5.263123513578086E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999526683174041	WITHOUT_CLASSIFICATION	4.733168259581869E-5	IMPLEMENTATION
for native-sql queries the param metadata is determined outside any relation to a query plan because query plan creation and/or retreival for a native-sql query depends on all of the return types having been set which might not be the case up-front when param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9944133187469352	WITHOUT_CLASSIFICATION	0.005586681253064825	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999428571509805	WITHOUT_CLASSIFICATION	5.714284901944776E-5	IMPLEMENTATION
recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998879064350094	WITHOUT_CLASSIFICATION	1.1209356499074088E-4	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999428571509805	WITHOUT_CLASSIFICATION	5.714284901944776E-5	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999220138837005	WITHOUT_CLASSIFICATION	7.798611629956664E-5	IMPLEMENTATION
break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999782150156338	WITHOUT_CLASSIFICATION	2.178498436610888E-5	IMPLEMENTATION
named parameter	WITHOUT_CLASSIFICATION	0.9999025874017033	WITHOUT_CLASSIFICATION	9.74125982965783E-5	IMPLEMENTATION
could be either an ordinal or jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999974344399007	WITHOUT_CLASSIFICATION	2.5655600992000847E-6	IMPLEMENTATION
a peek ahead showed this as an jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999735878035977	WITHOUT_CLASSIFICATION	2.641219640224279E-5	IMPLEMENTATION
make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999437921013321	WITHOUT_CLASSIFICATION	5.620789866788716E-5	IMPLEMENTATION
pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9997971495649792	WITHOUT_CLASSIFICATION	2.028504350207222E-4	IMPLEMENTATION
perform the actual work	WITHOUT_CLASSIFICATION	0.9995487300704257	WITHOUT_CLASSIFICATION	4.5126992957426876E-4	IMPLEMENTATION
if everything went ok commit the transaction and close the obtained connection handle	WITHOUT_CLASSIFICATION	0.9921171473443572	WITHOUT_CLASSIFICATION	0.00788285265564281	IMPLEMENTATION
at some point the processing went bad so we need to 1) make sure the connection handle gets released 2) try to cleanup the jta context as much as possible	WITHOUT_CLASSIFICATION	0.7989242891283597	WITHOUT_CLASSIFICATION	0.20107571087164036	IMPLEMENTATION
finally handle the exception	WITHOUT_CLASSIFICATION	0.9998993058663945	WITHOUT_CLASSIFICATION	1.006941336055385E-4	IMPLEMENTATION
a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9995301925337954	WITHOUT_CLASSIFICATION	4.698074662046761E-4	IMPLEMENTATION
saveorupdatecopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999263682254717	WITHOUT_CLASSIFICATION	7.363177452833768E-5	IMPLEMENTATION
collectionpersister should not be null but we don't want to throw an exception if it is null	WITHOUT_CLASSIFICATION	0.9999481873914842	WITHOUT_CLASSIFICATION	5.1812608515860705E-5	IMPLEMENTATION
otherwise a null or brand new collection this will also (inefficiently) handle arrays which have no snapshot so we can't do any better processarrayornewcollection(collection type)	WITHOUT_CLASSIFICATION	0.9737222770253575	WITHOUT_CLASSIFICATION	0.026277722974642433	IMPLEMENTATION
a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9997599179619802	WITHOUT_CLASSIFICATION	2.4008203801979938E-4	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999909545686818	WITHOUT_CLASSIFICATION	9.045431318292047E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999909545686818	WITHOUT_CLASSIFICATION	9.045431318292047E-6	IMPLEMENTATION
force a substitution!	WITHOUT_CLASSIFICATION	0.9997202687368966	WITHOUT_CLASSIFICATION	2.797312631034696E-4	IMPLEMENTATION
the user requested a "greater" (i.e. more restrictive) form of pessimistic lock	WITHOUT_CLASSIFICATION	0.9996498238966252	WITHOUT_CLASSIFICATION	3.50176103374822E-4	IMPLEMENTATION
the database now holds a lock + the object is flushed from the cache so release the soft lock	WITHOUT_CLASSIFICATION	0.999998496323737	WITHOUT_CLASSIFICATION	1.5036762629103884E-6	IMPLEMENTATION
now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.999998095989146	WITHOUT_CLASSIFICATION	1.904010853990009E-6	IMPLEMENTATION
search for collections by reachability updating their role. we don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9996030765477729	WITHOUT_CLASSIFICATION	3.969234522270755E-4	IMPLEMENTATION
this is a situation where the entity id is assigned by a post-insert generator and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9997440684842761	WITHOUT_CLASSIFICATION	2.5593151572388334E-4	IMPLEMENTATION
note we need to do the wrap here even if its not "dirty" because collections need wrapping but changes to _them_ don't dirty the container. also for versioned data we need to wrap before calling searchfordirtycollections	WITHOUT_CLASSIFICATION	0.9996944832519726	WITHOUT_CLASSIFICATION	3.0551674802731807E-4	IMPLEMENTATION
grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999994807848093	WITHOUT_CLASSIFICATION	5.192151908011914E-7	IMPLEMENTATION
grab its current state	WITHOUT_CLASSIFICATION	0.9999474192924498	WITHOUT_CLASSIFICATION	5.258070755012558E-5	IMPLEMENTATION
schedule the update note that we intentionally do _not_ pass in currentpersistentstate!	WITHOUT_CLASSIFICATION	0.9999898510372154	WITHOUT_CLASSIFICATION	1.0148962784720547E-5	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999735738243991	WITHOUT_CLASSIFICATION	2.642617560082212E-5	IMPLEMENTATION
give the interceptor a chance to process property values if the properties were modified by the interceptor we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999613855216543	WITHOUT_CLASSIFICATION	3.861447834565896E-5	IMPLEMENTATION
compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9998791281123816	WITHOUT_CLASSIFICATION	1.2087188761839713E-4	IMPLEMENTATION
if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.999998173382568	WITHOUT_CLASSIFICATION	1.8266174320089425E-6	IMPLEMENTATION
increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.99876230814017	WITHOUT_CLASSIFICATION	0.0012376918598300283	IMPLEMENTATION
check nullability but do not perform command execute we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9996653762742099	WITHOUT_CLASSIFICATION	3.346237257901785E-4	IMPLEMENTATION
give the interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999853832575805	WITHOUT_CLASSIFICATION	1.461674241956603E-5	IMPLEMENTATION
now we might need to recalculate the dirtyproperties array	WITHOUT_CLASSIFICATION	0.9988629566563221	WITHOUT_CLASSIFICATION	0.001137043343677846	IMPLEMENTATION
use the current version	WITHOUT_CLASSIFICATION	0.9993800696350746	WITHOUT_CLASSIFICATION	6.199303649253767E-4	IMPLEMENTATION
interceptor returned null so do the dirtycheck ourself if possible	WITHOUT_CLASSIFICATION	0.999994575858021	WITHOUT_CLASSIFICATION	5.424141978985776E-6	IMPLEMENTATION
object loaded by update()	WITHOUT_CLASSIFICATION	0.999985987044672	WITHOUT_CLASSIFICATION	1.4012955327884502E-5	IMPLEMENTATION
dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9993997994495596	WITHOUT_CLASSIFICATION	6.00200550440472E-4	IMPLEMENTATION
dirty check against the database snapshot if possible/necessary	WITHOUT_CLASSIFICATION	0.9998241004707197	WITHOUT_CLASSIFICATION	1.7589952928041524E-4	IMPLEMENTATION
the interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9997794257136782	WITHOUT_CLASSIFICATION	2.2057428632193604E-4	IMPLEMENTATION
even process null collections	WITHOUT_CLASSIFICATION	0.9999565664994483	WITHOUT_CLASSIFICATION	4.343350055164146E-5	IMPLEMENTATION
get the id from the object	WITHOUT_CLASSIFICATION	0.9999862760135921	WITHOUT_CLASSIFICATION	1.3723986407828766E-5	IMPLEMENTATION
always do an insert and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999213170561734	WITHOUT_CLASSIFICATION	7.868294382660407E-5	IMPLEMENTATION
what is the version on the database?	WITHOUT_CLASSIFICATION	0.9914392060088795	WITHOUT_CLASSIFICATION	0.00856079399112049	IMPLEMENTATION
/ hhh-2378	WITHOUT_CLASSIFICATION	0.9999861152765468	WITHOUT_CLASSIFICATION	1.3884723453167649E-5	IMPLEMENTATION
will result in a sql update	WITHOUT_CLASSIFICATION	0.9999998883044316	WITHOUT_CLASSIFICATION	1.116955684312987E-7	IMPLEMENTATION
else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999833139823492	WITHOUT_CLASSIFICATION	1.668601765078587E-5	IMPLEMENTATION
no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999880622818603	WITHOUT_CLASSIFICATION	1.1937718139701685E-5	IMPLEMENTATION
refresh() does not pass an entityname	WITHOUT_CLASSIFICATION	0.9998907071243955	WITHOUT_CLASSIFICATION	1.0929287560448562E-4	IMPLEMENTATION
do not return a proxy! (this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9963445410532608	WITHOUT_CLASSIFICATION	0.003655458946739397	IMPLEMENTATION
return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999949755947705	WITHOUT_CLASSIFICATION	5.024405229591383E-6	IMPLEMENTATION
return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999947680982915	WITHOUT_CLASSIFICATION	5.231901708532604E-6	IMPLEMENTATION
return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999687273556963	WITHOUT_CLASSIFICATION	3.127264430364792E-5	IMPLEMENTATION
this object was already loaded	WITHOUT_CLASSIFICATION	0.9999994283389805	WITHOUT_CLASSIFICATION	5.716610196298802E-7	IMPLEMENTATION
entity was found in second-level cache	WITHOUT_CLASSIFICATION	0.9999985141521349	WITHOUT_CLASSIFICATION	1.4858478650046603E-6	IMPLEMENTATION
make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9991698295533519	WITHOUT_CLASSIFICATION	8.301704466480515E-4	IMPLEMENTATION
intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999254530923541	WITHOUT_CLASSIFICATION	7.454690764584721E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pre-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998991777326922	WITHOUT_CLASSIFICATION	1.0082226730778695E-4	IMPLEMENTATION
some statistics	WITHOUT_CLASSIFICATION	0.9994443572965892	WITHOUT_CLASSIFICATION	5.556427034108005E-4	IMPLEMENTATION
safe from concurrent modification because of how entrylist() is implemented on identitymap	WITHOUT_CLASSIFICATION	0.9405918894171865	WITHOUT_CLASSIFICATION	0.05940811058281341	IMPLEMENTATION
initialize dirty flags for arrays + collections with composite elements and reset reached doupdate etc.	WITHOUT_CLASSIFICATION	0.9993838549789426	WITHOUT_CLASSIFICATION	6.161450210574812E-4	IMPLEMENTATION
among other things updatereachables() will recursively load all collections that are moving roles. this might cause entities to be loaded.	WITHOUT_CLASSIFICATION	0.9994521604065039	WITHOUT_CLASSIFICATION	5.478395934960385E-4	IMPLEMENTATION
so this needs to be safe from concurrent modification problems. it is safe because of how identitymap implements entryset()	WITHOUT_CLASSIFICATION	0.9997585740349916	WITHOUT_CLASSIFICATION	2.4142596500827576E-4	IMPLEMENTATION
update the status of the object and if necessary schedule an update	WITHOUT_CLASSIFICATION	0.9999998496307346	WITHOUT_CLASSIFICATION	1.5036926526037348E-7	IMPLEMENTATION
schedule updates to collections	WITHOUT_CLASSIFICATION	0.9998036406587545	WITHOUT_CLASSIFICATION	1.963593412455338E-4	IMPLEMENTATION
we need to lock the collection caches before executing entity inserts/updates in order to account for bidi associations	WITHOUT_CLASSIFICATION	0.9999790454826563	WITHOUT_CLASSIFICATION	2.09545173436886E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ post-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998991777326922	WITHOUT_CLASSIFICATION	1.0082226730778695E-4	IMPLEMENTATION
the database has changed now so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999633939297734	WITHOUT_CLASSIFICATION	3.660607022653701E-5	IMPLEMENTATION
if the collection is dereferenced remove from the session cache iter.remove() does not work since the entryset is not backed by the set	WITHOUT_CLASSIFICATION	0.9999833632643083	WITHOUT_CLASSIFICATION	1.6636735691749018E-5	IMPLEMENTATION
otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9991497444077404	WITHOUT_CLASSIFICATION	8.502555922594914E-4	IMPLEMENTATION
get a snapshot	WITHOUT_CLASSIFICATION	0.9999480253045864	WITHOUT_CLASSIFICATION	5.197469541373392E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.999997711230563	WITHOUT_CLASSIFICATION	2.288769436841116E-6	IMPLEMENTATION
early exit!!!	WITHOUT_CLASSIFICATION	0.999907570057376	WITHOUT_CLASSIFICATION	9.242994262406018E-5	IMPLEMENTATION
ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999979782946731	WITHOUT_CLASSIFICATION	2.021705326945427E-6	IMPLEMENTATION
before any callbacks etc so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999997168414776	WITHOUT_CLASSIFICATION	2.8315852242215486E-7	IMPLEMENTATION
ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9996109605155881	WITHOUT_CLASSIFICATION	3.8903948441197303E-4	IMPLEMENTATION
typefactory.deepcopy( currentstate proptypes persister.getpropertyupdateability() deletedstate session )	WITHOUT_CLASSIFICATION	0.9995928952393976	WITHOUT_CLASSIFICATION	4.071047606023488E-4	IMPLEMENTATION
cascade-delete to collections before the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9998388428036704	WITHOUT_CLASSIFICATION	1.6115719632951643E-4	IMPLEMENTATION
cascade-delete to many-to-one after the parent was deleted	WITHOUT_CLASSIFICATION	0.9999420999590006	WITHOUT_CLASSIFICATION	5.7900040999313724E-5	IMPLEMENTATION
if it is an initialized proxy let cascade handle it later on	WITHOUT_CLASSIFICATION	0.9998919602666055	WITHOUT_CLASSIFICATION	1.0803973339442466E-4	IMPLEMENTATION
assign the requested id to the proxy before reassociating the proxy	WITHOUT_CLASSIFICATION	0.9997790093696461	WITHOUT_CLASSIFICATION	2.20990630353858E-4	IMPLEMENTATION
an uninitialized proxy noop don't even need to return an id since it is never a save()	WITHOUT_CLASSIFICATION	0.9984252702637033	WITHOUT_CLASSIFICATION	0.0015747297362966174	IMPLEMENTATION
initialize properties of the event	WITHOUT_CLASSIFICATION	0.9999872762413617	WITHOUT_CLASSIFICATION	1.2723758638267473E-5	IMPLEMENTATION
return the id in the event object	WITHOUT_CLASSIFICATION	0.9999974539694352	WITHOUT_CLASSIFICATION	2.5460305647734704E-6	IMPLEMENTATION
transient or deleted	WITHOUT_CLASSIFICATION	0.999543543315051	WITHOUT_CLASSIFICATION	4.5645668494900907E-4	IMPLEMENTATION
use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9989862315677697	WITHOUT_CLASSIFICATION	0.0010137684322303355	IMPLEMENTATION
assume this is a newly instantiated transient object which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999186120655993	WITHOUT_CLASSIFICATION	8.138793440067955E-5	IMPLEMENTATION
this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.999810079149245	WITHOUT_CLASSIFICATION	1.899208507549335E-4	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9961986109884683	WITHOUT_CLASSIFICATION	0.003801389011531737	IMPLEMENTATION
cachedstate	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
assume true since we don't really know and it doesn't matter	WITHOUT_CLASSIFICATION	0.9992367774920365	WITHOUT_CLASSIFICATION	7.632225079633899E-4	IMPLEMENTATION
a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999170118900227	WITHOUT_CLASSIFICATION	8.298810997735575E-5	IMPLEMENTATION
if the collection belonged to a different entity clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999949993868081	WITHOUT_CLASSIFICATION	5.000613191899615E-6	IMPLEMENTATION
log.debug( "calling onload()" )	WITHOUT_CLASSIFICATION	0.9997821130154566	WITHOUT_CLASSIFICATION	2.178869845434314E-4	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.999907570057376	WITHOUT_CLASSIFICATION	9.242994262406018E-5	IMPLEMENTATION
note performexecutions() clears all collectionxxxxtion collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999511030659116	WITHOUT_CLASSIFICATION	4.889693408824773E-5	IMPLEMENTATION
if no array holder we found an unwrappered array (this can't occur because we now always call wrap() before getting to here) return (ah==null) ? true searchfordirtycollections(ah type)	WITHOUT_CLASSIFICATION	0.999999266064359	WITHOUT_CLASSIFICATION	7.3393564101686E-7	IMPLEMENTATION
if not wrappered yet its dirty (this can't occur because we now always call wrap() before getting to here) return ( ! (obj instanceof persistentcollection) ) ? true searchfordirtycollections( (persistentcollection) obj type )	WITHOUT_CLASSIFICATION	0.9886076548377424	WITHOUT_CLASSIFICATION	0.011392345162257568	IMPLEMENTATION
we need to check even if it was not initialized because of delayed adds!	WITHOUT_CLASSIFICATION	0.999527188302492	WITHOUT_CLASSIFICATION	4.728116975080462E-4	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999056708090268	WITHOUT_CLASSIFICATION	9.432919097315986E-5	IMPLEMENTATION
find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9988782333829559	WITHOUT_CLASSIFICATION	0.0011217666170441536	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.999907570057376	WITHOUT_CLASSIFICATION	9.242994262406018E-5	IMPLEMENTATION
check the persistence context for an entry relating to this entity to be merged	WITHOUT_CLASSIFICATION	0.999867148242712	WITHOUT_CLASSIFICATION	1.3285175728802316E-4	IMPLEMENTATION
we have specialized case of a detached entity from the perspective of the merge operation. specifically we have an incoming entity instance which has a corresponding entry in the current persistence context but registered under a different entity instance	WITHOUT_CLASSIFICATION	0.9999999636935433	WITHOUT_CLASSIFICATION	3.6306456800064455E-8	IMPLEMENTATION
deleted	WITHOUT_CLASSIFICATION	0.9998544874260127	WITHOUT_CLASSIFICATION	1.4551257398737232E-4	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999055774830182	WITHOUT_CLASSIFICATION	9.442251698174684E-5	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy cascadeonmerge(event persister entity copycache cascades.cascade_before_merge)	WITHOUT_CLASSIFICATION	0.9999992684159351	WITHOUT_CLASSIFICATION	7.315840647936877E-7	IMPLEMENTATION
this bit is only really absolutely necessary for handling requestedid but is also good if we merge multiple object graphs since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999992587937642	WITHOUT_CLASSIFICATION	7.412062358622624E-7	IMPLEMENTATION
continue we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9986924068575179	WITHOUT_CLASSIFICATION	0.0013075931424820933	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999995195279499	WITHOUT_CLASSIFICATION	4.804720501318848E-7	IMPLEMENTATION
check that entity id = requestedid	WITHOUT_CLASSIFICATION	0.9881959546120719	WITHOUT_CLASSIFICATION	0.011804045387928164	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999055774830182	WITHOUT_CLASSIFICATION	9.442251698174684E-5	IMPLEMENTATION
we got here because we assumed that an instance with an assigned id was detached when it was really persistent	WITHOUT_CLASSIFICATION	0.9999928480473178	WITHOUT_CLASSIFICATION	7.1519526823079816E-6	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999995195279499	WITHOUT_CLASSIFICATION	4.804720501318848E-7	IMPLEMENTATION
copyvalues works by reflection so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9996505512972174	WITHOUT_CLASSIFICATION	3.4944870278270354E-4	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999823276165897	WITHOUT_CLASSIFICATION	1.7672383410348934E-5	IMPLEMENTATION
source.getbatcher().executebatch() found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9764053724679849	WITHOUT_CLASSIFICATION	0.023594627532015054	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999735738243991	WITHOUT_CLASSIFICATION	2.642617560082212E-5	IMPLEMENTATION
now done in entityidentityinsertaction persister.setidentifier( entity id source.getentitymode() )	WITHOUT_CLASSIFICATION	0.9999309366296768	WITHOUT_CLASSIFICATION	6.90633703231478E-5	IMPLEMENTATION
source.getpersistencecontext().removenonexist( new entitykey( id persister source.getentitymode() ) )	WITHOUT_CLASSIFICATION	0.9985537002610209	WITHOUT_CLASSIFICATION	0.0014462997389791455	IMPLEMENTATION
keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.999998272799569	WITHOUT_CLASSIFICATION	1.7272004310323884E-6	IMPLEMENTATION
cascade-save to many-to-one before the parent is saved	WITHOUT_CLASSIFICATION	0.9999538398632714	WITHOUT_CLASSIFICATION	4.616013672859645E-5	IMPLEMENTATION
pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999991327018201	WITHOUT_CLASSIFICATION	8.672981798440635E-7	IMPLEMENTATION
the object is persistent	WITHOUT_CLASSIFICATION	0.9999853827755468	WITHOUT_CLASSIFICATION	1.4617224453243002E-5	IMPLEMENTATION
the entity is associated with the session so check its status	WITHOUT_CLASSIFICATION	0.9999116011103898	WITHOUT_CLASSIFICATION	8.839888961018829E-5	IMPLEMENTATION
do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999852065471858	WITHOUT_CLASSIFICATION	1.4793452814228024E-5	IMPLEMENTATION
ie. e.status==deleted	WITHOUT_CLASSIFICATION	0.9998940102578118	WITHOUT_CLASSIFICATION	1.0598974218819274E-4	IMPLEMENTATION
the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999914472219296	WITHOUT_CLASSIFICATION	8.552778070372035E-6	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999056708090268	WITHOUT_CLASSIFICATION	9.432919097315986E-5	IMPLEMENTATION
private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.999988681478206	WITHOUT_CLASSIFICATION	1.1318521793977432E-5	IMPLEMENTATION
first try to find a matching constructor accepting a violatedconstraintnameextracter param	WITHOUT_CLASSIFICATION	0.999110994142195	WITHOUT_CLASSIFICATION	8.890058578050836E-4	IMPLEMENTATION
eat it and try next	WITHOUT_CLASSIFICATION	0.999151085558675	WITHOUT_CLASSIFICATION	8.489144413250399E-4	IMPLEMENTATION
otherwise try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9949341621777221	WITHOUT_CLASSIFICATION	0.005065837822277922	IMPLEMENTATION
oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999789835024117	WITHOUT_CLASSIFICATION	2.101649758843086E-5	IMPLEMENTATION
collectionpropertymapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9997990137561978	WITHOUT_CLASSIFICATION	2.009862438022231E-4	IMPLEMENTATION
remove initial " "	WITHOUT_CLASSIFICATION	0.9999734582251477	WITHOUT_CLASSIFICATION	2.6541774852289264E-5	IMPLEMENTATION
remove initial " and "	WITHOUT_CLASSIFICATION	0.9999815581323248	WITHOUT_CLASSIFICATION	1.8441867675173015E-5	IMPLEMENTATION
beforeclasstokens.add("new") definitely don't have this!!	WITHOUT_CLASSIFICATION	0.9996932420137109	WITHOUT_CLASSIFICATION	3.067579862891485E-4	IMPLEMENTATION
notafterclasstokens.add("")	WITHOUT_CLASSIFICATION	0.9998940102578118	WITHOUT_CLASSIFICATION	1.0598974218819274E-4	IMPLEMENTATION
just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999879736041112	WITHOUT_CLASSIFICATION	1.2026395888920372E-5	IMPLEMENTATION
update last non-whitespace token if necessary	WITHOUT_CLASSIFICATION	0.9999959027025217	WITHOUT_CLASSIFICATION	4.09729747825285E-6	IMPLEMENTATION
select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999685196247557	WITHOUT_CLASSIFICATION	3.148037524419184E-5	IMPLEMENTATION
scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999551982746248	WITHOUT_CLASSIFICATION	4.480172537527774E-5	IMPLEMENTATION
note this!!	WITHOUT_CLASSIFICATION	0.9998066335852513	WITHOUT_CLASSIFICATION	1.933664147487347E-4	IMPLEMENTATION
error message constants.	WITHOUT_CLASSIFICATION	0.9993620607073368	WITHOUT_CLASSIFICATION	6.379392926632468E-4	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998712423196509	WITHOUT_CLASSIFICATION	1.2875768034907378E-4	IMPLEMENTATION
semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999476117512631	WITHOUT_CLASSIFICATION	5.23882487369015E-4	IMPLEMENTATION
handle collection-fiter compilation. important note this is modifying the input (hql) tree not the output tree!	WITHOUT_CLASSIFICATION	0.9897463397619172	WITHOUT_CLASSIFICATION	0.010253660238082793	IMPLEMENTATION
show the modified ast.	WITHOUT_CLASSIFICATION	0.9998189986734598	WITHOUT_CLASSIFICATION	1.8100132654024612E-4	IMPLEMENTATION
create a parameter specification for the collection filter	WITHOUT_CLASSIFICATION	0.999980739318093	WITHOUT_CLASSIFICATION	1.9260681906989017E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995931989821779	WITHOUT_CLASSIFICATION	4.068010178221251E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995931989821779	WITHOUT_CLASSIFICATION	4.068010178221251E-4	IMPLEMENTATION
get the names of the columns used to link between the collection owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999997413767776	WITHOUT_CLASSIFICATION	2.586232224064651E-7	IMPLEMENTATION
the path ast should be a dotnode and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9995191510560094	WITHOUT_CLASSIFICATION	4.8084894399051014E-4	IMPLEMENTATION
tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999751166079277	WITHOUT_CLASSIFICATION	2.488339207238728E-5	IMPLEMENTATION
re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999150336344529	WITHOUT_CLASSIFICATION	8.496636554719607E-5	IMPLEMENTATION
don't forget to resolve the argument! resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9996341365791678	WITHOUT_CLASSIFICATION	3.6586342083218655E-4	IMPLEMENTATION
resolve everything up to this dot but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.999980717880549	WITHOUT_CLASSIFICATION	1.928211945103604E-5	IMPLEMENTATION
should mean that no such property was found	WITHOUT_CLASSIFICATION	0.999927681821518	WITHOUT_CLASSIFICATION	7.231817848197449E-5	IMPLEMENTATION
was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999996700441494	WITHOUT_CLASSIFICATION	3.299558506178463E-7	IMPLEMENTATION
attach any mapping-defined "order by" fragments	WITHOUT_CLASSIFICATION	0.9999457144089957	WITHOUT_CLASSIFICATION	5.4285591004177766E-5	IMPLEMENTATION
use the explicitly declared select expression determine the return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9993839683611541	WITHOUT_CLASSIFICATION	6.16031638845817E-4	IMPLEMENTATION
after that process the joins. invoke a delegate to do the work as this is farily complex.	WITHOUT_CLASSIFICATION	0.9957517429577174	WITHOUT_CLASSIFICATION	0.004248257042282631	IMPLEMENTATION
make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.99994983730014	WITHOUT_CLASSIFICATION	5.016269985991865E-5	IMPLEMENTATION
we need to generate ids as part of this bulk insert. note that this is only supported for sequence-style generators and post-insert-style generators basically only in-db generators	WITHOUT_CLASSIFICATION	0.999950845277695	WITHOUT_CLASSIFICATION	4.9154722305079325E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995931989821779	WITHOUT_CLASSIFICATION	4.068010178221251E-4	IMPLEMENTATION
we need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999190555573816	WITHOUT_CLASSIFICATION	8.094444261852552E-5	IMPLEMENTATION
we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999407945001797	WITHOUT_CLASSIFICATION	5.9205499820256885E-5	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9998648448464997	WITHOUT_CLASSIFICATION	1.351551535001948E-4	IMPLEMENTATION
generate implicit joins only if necessary.	WITHOUT_CLASSIFICATION	0.9999800745653911	WITHOUT_CLASSIFICATION	1.9925434609021406E-5	IMPLEMENTATION
notify the from element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999817540094521	WITHOUT_CLASSIFICATION	1.824599054793667E-5	IMPLEMENTATION
turn off includesubclasses on all fromelements.	WITHOUT_CLASSIFICATION	0.9998088882857135	WITHOUT_CLASSIFICATION	1.911117142864719E-4	IMPLEMENTATION
create the node initially with the param name so that it shows appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999919907865185	WITHOUT_CLASSIFICATION	8.009213481659122E-6	IMPLEMENTATION
use the delegate resolve identifiers as from element aliases.	WITHOUT_CLASSIFICATION	0.9999694410856802	WITHOUT_CLASSIFICATION	3.055891431975041E-5	IMPLEMENTATION
select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999801234314385	WITHOUT_CLASSIFICATION	1.9876568561539E-5	IMPLEMENTATION
no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999656179014863	WITHOUT_CLASSIFICATION	3.43820985137878E-5	IMPLEMENTATION
make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9994208851874957	WITHOUT_CLASSIFICATION	5.79114812504391E-4	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998712423196509	WITHOUT_CLASSIFICATION	1.2875768034907378E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995931989821779	WITHOUT_CLASSIFICATION	4.068010178221251E-4	IMPLEMENTATION
--commented out by inspection (12/11/04 1056 am) int getwarningcount()	WITHOUT_CLASSIFICATION	0.9999318557044696	WITHOUT_CLASSIFICATION	6.814429553036013E-5	IMPLEMENTATION
alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9993046470332938	WITHOUT_CLASSIFICATION	6.953529667062066E-4	IMPLEMENTATION
switch	WITHOUT_CLASSIFICATION	0.9999721472557807	WITHOUT_CLASSIFICATION	2.7852744219394373E-5	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9992874625693875	WITHOUT_CLASSIFICATION	7.125374306123947E-4	IMPLEMENTATION
just do the regular thing if you can't find the ctor your ast must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999735190435803	WITHOUT_CLASSIFICATION	2.6480956419716707E-5	IMPLEMENTATION
initialize sql nodes here.	WITHOUT_CLASSIFICATION	0.9999339559010388	WITHOUT_CLASSIFICATION	6.604409896116041E-5	IMPLEMENTATION
semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999143990828971	WITHOUT_CLASSIFICATION	8.560091710278154E-5	IMPLEMENTATION
if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999998175692778	WITHOUT_CLASSIFICATION	1.8243072205858726E-7	IMPLEMENTATION
this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.999989174367065	WITHOUT_CLASSIFICATION	1.0825632934947574E-5	IMPLEMENTATION
--- inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999859544353513	WITHOUT_CLASSIFICATION	1.4045564648641522E-5	IMPLEMENTATION
check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9996133614305802	WITHOUT_CLASSIFICATION	3.8663856941981964E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999861152765468	WITHOUT_CLASSIFICATION	1.3884723453167649E-5	IMPLEMENTATION
these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9996861258567776	WITHOUT_CLASSIFICATION	3.138741432224209E-4	IMPLEMENTATION
again both should be fromelements	WITHOUT_CLASSIFICATION	0.9998738865533294	WITHOUT_CLASSIFICATION	1.2611344667062815E-4	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999220138837005	WITHOUT_CLASSIFICATION	7.798611629956664E-5	IMPLEMENTATION
right represents a joins originating from left or both right and left reprersent joins originating from the same fromelement	WITHOUT_CLASSIFICATION	0.9999866376557252	WITHOUT_CLASSIFICATION	1.3362344274881246E-5	IMPLEMENTATION
check a set of parent/child nodes in the from-clause tree to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999988479722629	WITHOUT_CLASSIFICATION	1.1520277370302116E-6	IMPLEMENTATION
right represents a joins originating from left	WITHOUT_CLASSIFICATION	0.9999786313834551	WITHOUT_CLASSIFICATION	2.136861654489893E-5	IMPLEMENTATION
all clear	WITHOUT_CLASSIFICATION	0.9999444742436032	WITHOUT_CLASSIFICATION	5.552575639676959E-5	IMPLEMENTATION
ignore the token class name parameter and use a specific token class.	WITHOUT_CLASSIFICATION	0.9998089817859562	WITHOUT_CLASSIFICATION	1.9101821404378887E-4	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9998089321858061	WITHOUT_CLASSIFICATION	1.9106781419394117E-4	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9998089321858061	WITHOUT_CLASSIFICATION	1.9106781419394117E-4	IMPLEMENTATION
remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9997261393011202	WITHOUT_CLASSIFICATION	2.7386069887981953E-4	IMPLEMENTATION
don't care about other param types here just those explicitly user-defined	WITHOUT_CLASSIFICATION	0.9997653056780288	WITHOUT_CLASSIFICATION	2.3469432197125874E-4	IMPLEMENTATION
if the query is already compiled skip the compilation.	WITHOUT_CLASSIFICATION	0.9999957847381397	WITHOUT_CLASSIFICATION	4.215261860340441E-6	IMPLEMENTATION
remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9999007765752851	WITHOUT_CLASSIFICATION	9.922342471481663E-5	IMPLEMENTATION
phase 1 parse the hql into an ast.	WITHOUT_CLASSIFICATION	0.9999579472282245	WITHOUT_CLASSIFICATION	4.2052771775566466E-5	IMPLEMENTATION
phase 2 analyze the hql ast and produce an sql ast.	WITHOUT_CLASSIFICATION	0.9999997695021625	WITHOUT_CLASSIFICATION	2.304978376055468E-7	IMPLEMENTATION
phase 3 generate the sql.	WITHOUT_CLASSIFICATION	0.9999880030256147	WITHOUT_CLASSIFICATION	1.1996974385164076E-5	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9990296403920722	WITHOUT_CLASSIFICATION	9.703596079277711E-4	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9990296403920722	WITHOUT_CLASSIFICATION	9.703596079277711E-4	IMPLEMENTATION
only needed during compilation phase	WITHOUT_CLASSIFICATION	0.8129728867427	WITHOUT_CLASSIFICATION	0.18702711325730012	IMPLEMENTATION
transform the tree.	WITHOUT_CLASSIFICATION	0.9998302398848633	WITHOUT_CLASSIFICATION	1.6976011513665645E-4	IMPLEMENTATION
parse the query string into an hql ast.	WITHOUT_CLASSIFICATION	0.9999707982422874	WITHOUT_CLASSIFICATION	2.920175771259527E-5	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9998503001280323	WITHOUT_CLASSIFICATION	1.4969987196760317E-4	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9998503001280323	WITHOUT_CLASSIFICATION	1.4969987196760317E-4	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9998503001280323	WITHOUT_CLASSIFICATION	1.4969987196760317E-4	IMPLEMENTATION
note ( max - 1 ) because first is zero-based while max is not	WITHOUT_CLASSIFICATION	0.9988523666251674	WITHOUT_CLASSIFICATION	0.001147633374832654	IMPLEMENTATION
-- package local methods for the queryloader delegate --	WITHOUT_CLASSIFICATION	0.9999855016698617	WITHOUT_CLASSIFICATION	1.4498330138304107E-5	IMPLEMENTATION
if there are no collection fetches then no further checks are needed	WITHOUT_CLASSIFICATION	0.9923845023340034	WITHOUT_CLASSIFICATION	0.0076154976659965155	IMPLEMENTATION
a shallow query is ok (although technically there should be no fetching here)	WITHOUT_CLASSIFICATION	0.9999062230145841	WITHOUT_CLASSIFICATION	9.377698541585843E-5	IMPLEMENTATION
should be the first but just to be safe	WITHOUT_CLASSIFICATION	0.9999929645582946	WITHOUT_CLASSIFICATION	7.035441705357594E-6	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995931989821779	WITHOUT_CLASSIFICATION	4.068010178221251E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995931989821779	WITHOUT_CLASSIFICATION	4.068010178221251E-4	IMPLEMENTATION
impl note allows multiple collection fetches as long as the entire fecthed graph still "points back" to a single root entity for return	WITHOUT_CLASSIFICATION	0.9995896563943277	WITHOUT_CLASSIFICATION	4.1034360567232986E-4	IMPLEMENTATION
otherwise we have a non-scalar select with defined collection fetch(es). make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9998937019642179	WITHOUT_CLASSIFICATION	1.06298035782044E-4	IMPLEMENTATION
this is not strictly true. we actually just need to make sure that it is ordered by root-entity pk and that that order-by comes before any non-root-entity ordering	WITHOUT_CLASSIFICATION	0.862528980461267	WITHOUT_CLASSIFICATION	0.137471019538733	IMPLEMENTATION
paramtranslations = new parametertranslationsimpl( collectedparameterspecifications )	WITHOUT_CLASSIFICATION	0.9996105434916159	WITHOUT_CLASSIFICATION	3.89456508384083E-4	IMPLEMENTATION
we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999886756727918	WITHOUT_CLASSIFICATION	1.1324327208230212E-5	IMPLEMENTATION
igndore it	WITHOUT_CLASSIFICATION	0.9999390136867282	WITHOUT_CLASSIFICATION	6.098631327180644E-5	IMPLEMENTATION
we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999855556389519	WITHOUT_CLASSIFICATION	1.4444361048141843E-5	IMPLEMENTATION
[jsd] the fix for hhh-558	WITHOUT_CLASSIFICATION	0.9996677501478358	WITHOUT_CLASSIFICATION	3.322498521642358E-4	IMPLEMENTATION
if the token can tell us if it could be an identifier	WITHOUT_CLASSIFICATION	0.9999839958949843	WITHOUT_CLASSIFICATION	1.600410501572908E-5	IMPLEMENTATION
and the expected token type was an identifier then	WITHOUT_CLASSIFICATION	0.9999985024406719	WITHOUT_CLASSIFICATION	1.497559328019503E-6	IMPLEMENTATION
use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999543579997808	WITHOUT_CLASSIFICATION	4.5642000219182455E-5	IMPLEMENTATION
add the token to the ast.	WITHOUT_CLASSIFICATION	0.9998049024534371	WITHOUT_CLASSIFICATION	1.9509754656295143E-4	IMPLEMENTATION
(not (eq a b) ) => (ne a b)	WITHOUT_CLASSIFICATION	0.9999623764256309	WITHOUT_CLASSIFICATION	3.762357436907874E-5	IMPLEMENTATION
(not (ne a b) ) => (eq a b)	WITHOUT_CLASSIFICATION	0.9999623764256309	WITHOUT_CLASSIFICATION	3.762357436907874E-5	IMPLEMENTATION
(not (lt a b) ) => (ge a b)	WITHOUT_CLASSIFICATION	0.9999623764256309	WITHOUT_CLASSIFICATION	3.762357436907874E-5	IMPLEMENTATION
(not (ge a b) ) => (lt a b)	WITHOUT_CLASSIFICATION	0.9999623764256309	WITHOUT_CLASSIFICATION	3.762357436907874E-5	IMPLEMENTATION
(not (le a b) ) => (gt a b)	WITHOUT_CLASSIFICATION	0.9999623764256309	WITHOUT_CLASSIFICATION	3.762357436907874E-5	IMPLEMENTATION
(not (like a b) ) => (not_like a b)	WITHOUT_CLASSIFICATION	0.9999643099478485	WITHOUT_CLASSIFICATION	3.5690052151496316E-5	IMPLEMENTATION
(not (not_like a b) ) => (like a b)	WITHOUT_CLASSIFICATION	0.9999643099478485	WITHOUT_CLASSIFICATION	3.5690052151496316E-5	IMPLEMENTATION
(not (is_not_null a b) ) => (is_null a b)	WITHOUT_CLASSIFICATION	0.9999637472478423	WITHOUT_CLASSIFICATION	3.625275215780305E-5	IMPLEMENTATION
(not (between a b) ) => (not_between a b)	WITHOUT_CLASSIFICATION	0.9999637472478423	WITHOUT_CLASSIFICATION	3.625275215780305E-5	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9992488643771756	WITHOUT_CLASSIFICATION	7.511356228243262E-4	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9998089321858061	WITHOUT_CLASSIFICATION	1.9106781419394117E-4	IMPLEMENTATION
if if otherwise handle the error normally.	WITHOUT_CLASSIFICATION	0.999453304481921	WITHOUT_CLASSIFICATION	5.466955180788942E-4	IMPLEMENTATION
(not (not_between a b) ) => (between a b)	WITHOUT_CLASSIFICATION	0.9999637472478423	WITHOUT_CLASSIFICATION	3.625275215780305E-5	IMPLEMENTATION
this can never happen because this rule will always eliminate the child not.case notreturn x.getfirstchild() (not (not x) ) => (x)	WITHOUT_CLASSIFICATION	0.9995424317699202	WITHOUT_CLASSIFICATION	4.5756823007976746E-4	IMPLEMENTATION
just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999400878826232	WITHOUT_CLASSIFICATION	5.9912117376723445E-5	IMPLEMENTATION
(eq null b) => (is_null b)	WITHOUT_CLASSIFICATION	0.9999877268955701	WITHOUT_CLASSIFICATION	1.2273104429799615E-5	IMPLEMENTATION
(eq a null) => (is_null a)	WITHOUT_CLASSIFICATION	0.9999829051959735	WITHOUT_CLASSIFICATION	1.70948040264653E-5	IMPLEMENTATION
note because we're using astutil.createparent() the tree must be created from the bottom up. is empty x => (exists (query (select_from (from x) ) ) )	WITHOUT_CLASSIFICATION	0.9999839886113627	WITHOUT_CLASSIFICATION	1.601138863726462E-5	IMPLEMENTATION
add not if it's negated.	WITHOUT_CLASSIFICATION	0.9979865016115234	WITHOUT_CLASSIFICATION	0.002013498388476677	IMPLEMENTATION
create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9997384054486707	WITHOUT_CLASSIFICATION	2.6159455132939477E-4	IMPLEMENTATION
case 1 multi token keywords group by and order by the next token ( lt(2) ) should be 'by' otherwise this is just an ident.	WITHOUT_CLASSIFICATION	0.9988380923007639	WITHOUT_CLASSIFICATION	0.0011619076992360501	IMPLEMENTATION
case 2 the current token is after from and before '.'.	WITHOUT_CLASSIFICATION	0.99999563599858	WITHOUT_CLASSIFICATION	4.364001420049601E-6	IMPLEMENTATION
this handles hhh-354 where there is a strange property name in a where clause. if the lookahead contains a dot then something that isn't an ident	WITHOUT_CLASSIFICATION	0.9999999862256612	WITHOUT_CLASSIFICATION	1.377433875124546E-8	IMPLEMENTATION
see if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999988661462406	WITHOUT_CLASSIFICATION	1.133853759529744E-6	IMPLEMENTATION
set it!	WITHOUT_CLASSIFICATION	0.9999618745901743	WITHOUT_CLASSIFICATION	3.812540982583103E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999315861271421	WITHOUT_CLASSIFICATION	6.841387285803872E-5	IMPLEMENTATION
strip the " where "	WITHOUT_CLASSIFICATION	0.9997247446096444	WITHOUT_CLASSIFICATION	2.752553903555064E-4	IMPLEMENTATION
don't really know all the codes required to adequately decipher returned jdbc exceptions here. simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9067245631284875	WITHOUT_CLASSIFICATION	0.09327543687151252	IMPLEMENTATION
at the very least cleanup the data )	WITHOUT_CLASSIFICATION	0.9999721617397093	WITHOUT_CLASSIFICATION	2.7838260290744098E-5	IMPLEMENTATION
first save off the pertinent ids as the return value	WITHOUT_CLASSIFICATION	0.9999973344392721	WITHOUT_CLASSIFICATION	2.665560727924227E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999781825536953	WITHOUT_CLASSIFICATION	2.1817446304700494E-5	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999781825536953	WITHOUT_CLASSIFICATION	2.1817446304700494E-5	IMPLEMENTATION
start performing the updates	WITHOUT_CLASSIFICATION	0.9999183094650741	WITHOUT_CLASSIFICATION	8.169053492598976E-5	IMPLEMENTATION
first save off the pertinent ids saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999992667952744	WITHOUT_CLASSIFICATION	7.332047256454794E-7	IMPLEMENTATION
start performing the deletes	WITHOUT_CLASSIFICATION	0.999921192870848	WITHOUT_CLASSIFICATION	7.880712915199935E-5	IMPLEMENTATION
otherwise everything ok.	WITHOUT_CLASSIFICATION	0.9977395511100899	WITHOUT_CLASSIFICATION	0.0022604488899101286	IMPLEMENTATION
visit width-first then depth	WITHOUT_CLASSIFICATION	0.999925830918192	WITHOUT_CLASSIFICATION	7.416908180806065E-5	IMPLEMENTATION
if the types report logical equivalence return true	WITHOUT_CLASSIFICATION	0.9999626699624764	WITHOUT_CLASSIFICATION	3.733003752359835E-5	IMPLEMENTATION
otherwise perform a "deep equivalence" check	WITHOUT_CLASSIFICATION	0.9959400314539282	WITHOUT_CLASSIFICATION	0.004059968546071808	IMPLEMENTATION
if there is no where node make one.	WITHOUT_CLASSIFICATION	0.9999883323763729	WITHOUT_CLASSIFICATION	1.1667623627089134E-5	IMPLEMENTATION
inject the where after the parent	WITHOUT_CLASSIFICATION	0.9998296361214192	WITHOUT_CLASSIFICATION	1.7036387858084632E-4	IMPLEMENTATION
never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999755426210095	WITHOUT_CLASSIFICATION	2.4457378990441724E-5	IMPLEMENTATION
moved here from selectclause [jsd]	WITHOUT_CLASSIFICATION	0.9999691451767098	WITHOUT_CLASSIFICATION	3.085482329016006E-5	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999861152765468	WITHOUT_CLASSIFICATION	1.3884723453167649E-5	IMPLEMENTATION
use the table fromelement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999043157061905	WITHOUT_CLASSIFICATION	9.568429380946246E-5	IMPLEMENTATION
set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999836354700418	WITHOUT_CLASSIFICATION	1.6364529958229994E-5	IMPLEMENTATION
if the uresolved property path isn't set yet just use the property name.	WITHOUT_CLASSIFICATION	0.9999898726322395	WITHOUT_CLASSIFICATION	1.0127367760651826E-5	IMPLEMENTATION
the 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9997875801684685	WITHOUT_CLASSIFICATION	2.1241983153148385E-4	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999986433953039	WITHOUT_CLASSIFICATION	1.3566046962224058E-6	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999986433953039	WITHOUT_CLASSIFICATION	1.3566046962224058E-6	IMPLEMENTATION
if this dot has already been resolved stop now.	WITHOUT_CLASSIFICATION	0.9999941479734805	WITHOUT_CLASSIFICATION	5.852026519472287E-6	IMPLEMENTATION
if there is no data type for this node and we're at the end of the path (top most dot node) then this might be a java constant.	WITHOUT_CLASSIFICATION	0.9999999888075041	WITHOUT_CLASSIFICATION	1.1192495991829144E-8	IMPLEMENTATION
the property is a collection	WITHOUT_CLASSIFICATION	0.9999205556068373	WITHOUT_CLASSIFICATION	7.944439316264807E-5	IMPLEMENTATION
the property is a component	WITHOUT_CLASSIFICATION	0.9999771738819252	WITHOUT_CLASSIFICATION	2.2826118074810716E-5	IMPLEMENTATION
the property is another class..	WITHOUT_CLASSIFICATION	0.9998363990672263	WITHOUT_CLASSIFICATION	1.6360093277375723E-4	IMPLEMENTATION
otherwise this is a primitive type.	WITHOUT_CLASSIFICATION	0.9995382636688707	WITHOUT_CLASSIFICATION	4.6173633112931936E-4	IMPLEMENTATION
foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9998724597697236	WITHOUT_CLASSIFICATION	1.2754023027646924E-4	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9989797504434841	WITHOUT_CLASSIFICATION	0.001020249556515895	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998756119025278	WITHOUT_CLASSIFICATION	1.2438809747217613E-4	IMPLEMENTATION
in non-select queries the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999973633806039	WITHOUT_CLASSIFICATION	2.636619396193124E-6	IMPLEMENTATION
this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999515389912534	WITHOUT_CLASSIFICATION	4.846100874646631E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9989797504434841	WITHOUT_CLASSIFICATION	0.001020249556515895	IMPLEMENTATION
even though we might find a pre-existing element by join path we may not be able to reuse it	WITHOUT_CLASSIFICATION	0.9980441056471706	WITHOUT_CLASSIFICATION	0.001955894352829404	IMPLEMENTATION
note addduplicatealias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9998695001075762	WITHOUT_CLASSIFICATION	1.304998924237961E-4	IMPLEMENTATION
if the from-clauses are the same we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999036021709106	WITHOUT_CLASSIFICATION	9.639782908949514E-5	IMPLEMENTATION
again null != null here	WITHOUT_CLASSIFICATION	0.9999867538278789	WITHOUT_CLASSIFICATION	1.324617212104524E-5	IMPLEMENTATION
if this is an implied join in a from element then use the impled join type which is part of the tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.999999997238166	WITHOUT_CLASSIFICATION	2.761834004760729E-9	IMPLEMENTATION
otherwise (subquery case) dont reuse the fromelement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999740796311354	WITHOUT_CLASSIFICATION	2.592036886459009E-5	IMPLEMENTATION
we know only the lhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9923447712807341	WITHOUT_CLASSIFICATION	0.007655228719265989	IMPLEMENTATION
the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9997991763079634	WITHOUT_CLASSIFICATION	2.0082369203641758E-4	IMPLEMENTATION
only the identifier property field name can be a reference to the associated entity's pk	WITHOUT_CLASSIFICATION	0.9999302977226764	WITHOUT_CLASSIFICATION	6.970227732364997E-5	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9998665612672754	WITHOUT_CLASSIFICATION	1.3343873272468485E-4	IMPLEMENTATION
append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9986946900845125	WITHOUT_CLASSIFICATION	0.0013053099154874588	IMPLEMENTATION
if the lhs is a collection use collectionpropertymapping	WITHOUT_CLASSIFICATION	0.9999826865702227	WITHOUT_CLASSIFICATION	1.7313429777227633E-5	IMPLEMENTATION
tell the destination fromelement to 'includesubclasses'.	WITHOUT_CLASSIFICATION	0.9998245866375178	WITHOUT_CLASSIFICATION	1.7541336248213754E-4	IMPLEMENTATION
use theta style (for regression) move the node up after the origin node.	WITHOUT_CLASSIFICATION	0.999652626263419	WITHOUT_CLASSIFICATION	3.4737373658091296E-4	IMPLEMENTATION
don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9997657782020549	WITHOUT_CLASSIFICATION	2.342217979452037E-4	IMPLEMENTATION
for expected parameter type injection we expect that the lhs represents some form of property ref and that the children of the in-list represent one-or-more params.	WITHOUT_CLASSIFICATION	0.9997252867041362	WITHOUT_CLASSIFICATION	2.74713295863735E-4	IMPLEMENTATION
we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999606835271231	WITHOUT_CLASSIFICATION	3.931647287693794E-5	IMPLEMENTATION
we have something like "? [op] rhs"	WITHOUT_CLASSIFICATION	0.998690075264674	WITHOUT_CLASSIFICATION	0.0013099247353260156	IMPLEMENTATION
we have something like "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.998690075264674	WITHOUT_CLASSIFICATION	0.0013099247353260156	IMPLEMENTATION
we know only the rhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9923447712807341	WITHOUT_CLASSIFICATION	0.007655228719265989	IMPLEMENTATION
handle the (assumed) valid cases #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9967083356062997	WITHOUT_CLASSIFICATION	0.0032916643937003893	IMPLEMENTATION
one or the other needs to be a datetime for us to get into this method in the first place	WITHOUT_CLASSIFICATION	0.9990543937057639	WITHOUT_CLASSIFICATION	9.45606294236024E-4	IMPLEMENTATION
#3 - note that this is also true of "datetime - param"	WITHOUT_CLASSIFICATION	0.999872153388133	WITHOUT_CLASSIFICATION	1.2784661186695723E-4	IMPLEMENTATION
#2	WITHOUT_CLASSIFICATION	0.9999671530077424	WITHOUT_CLASSIFICATION	3.2846992257494266E-5	IMPLEMENTATION
generate the inner join -- the elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999784156815945	WITHOUT_CLASSIFICATION	2.1584318405489253E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999297080521495	WITHOUT_CLASSIFICATION	7.029194785052346E-5	IMPLEMENTATION
the 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999733413231369	WITHOUT_CLASSIFICATION	2.6658676863131144E-5	IMPLEMENTATION
add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9985375316486766	WITHOUT_CLASSIFICATION	0.0014624683513233506	IMPLEMENTATION
sometimes use the element table alias sometimes use the umm collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999574484348899	WITHOUT_CLASSIFICATION	4.255156511019213E-5	IMPLEMENTATION
now set the text for this node. it should be the element columns.	WITHOUT_CLASSIFICATION	0.999855199779963	WITHOUT_CLASSIFICATION	1.4480022003696835E-4	IMPLEMENTATION
get the function return value type based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999798142732271	WITHOUT_CLASSIFICATION	2.0185726772842077E-5	IMPLEMENTATION
this will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9998694491163822	WITHOUT_CLASSIFICATION	1.30550883617854E-4	IMPLEMENTATION
mutation depends on the types of nodes invloved	WITHOUT_CLASSIFICATION	0.9988829845622581	WITHOUT_CLASSIFICATION	0.0011170154377419118	IMPLEMENTATION
"pass along" our initial embedded parameter node(s) to the first generated sql fragment so that it can be handled later for parameter binding	WITHOUT_CLASSIFICATION	0.9999982220054204	WITHOUT_CLASSIFICATION	1.7779945796769452E-6	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9997875746475313	WITHOUT_CLASSIFICATION	2.1242535246876622E-4	IMPLEMENTATION
generated select expressions are already resolved nothing to do.	WITHOUT_CLASSIFICATION	0.9999988997608192	WITHOUT_CLASSIFICATION	1.1002391807225442E-6	IMPLEMENTATION
the path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999998400509876	WITHOUT_CLASSIFICATION	1.599490123936625E-7	IMPLEMENTATION
the hql class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999825563832356	WITHOUT_CLASSIFICATION	1.7443616764289826E-5	IMPLEMENTATION
associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.999927228589887	WITHOUT_CLASSIFICATION	7.277141011304273E-5	IMPLEMENTATION
try the parent fromclause	WITHOUT_CLASSIFICATION	0.9998628444401252	WITHOUT_CLASSIFICATION	1.3715555987479434E-4	IMPLEMENTATION
add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9994995484672614	WITHOUT_CLASSIFICATION	5.004515327385876E-4	IMPLEMENTATION
make sure that all from elements registered with this from clause are actually in the ast.	WITHOUT_CLASSIFICATION	0.999996499343085	WITHOUT_CLASSIFICATION	3.500656915060831E-6	IMPLEMENTATION
invoke setscalarcolumntext on each constructor argument.	WITHOUT_CLASSIFICATION	0.9990841565901231	WITHOUT_CLASSIFICATION	9.158434098770078E-4	IMPLEMENTATION
collect the select expressions skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999858226096212	WITHOUT_CLASSIFICATION	1.4177390378846641E-5	IMPLEMENTATION
return an empty type array	WITHOUT_CLASSIFICATION	0.9996059737928034	WITHOUT_CLASSIFICATION	3.94026207196626E-4	IMPLEMENTATION
constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9998552715499343	WITHOUT_CLASSIFICATION	1.447284500656642E-4	IMPLEMENTATION
this is the exception returned by reflecthelper.getconstructor() if it cannot locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999994034660252	WITHOUT_CLASSIFICATION	5.965339747922289E-7	IMPLEMENTATION
if there is no order by make one	WITHOUT_CLASSIFICATION	0.9999880083363427	WITHOUT_CLASSIFICATION	1.1991663657201493E-5	IMPLEMENTATION
find the where if there is no where find the from	WITHOUT_CLASSIFICATION	0.9999976021523764	WITHOUT_CLASSIFICATION	2.3978476235445403E-6	IMPLEMENTATION
now inject the newly built order by into the tree	WITHOUT_CLASSIFICATION	0.9993849946941888	WITHOUT_CLASSIFICATION	6.150053058111201E-4	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998984145386138	WITHOUT_CLASSIFICATION	1.0158546138621162E-4	IMPLEMENTATION
logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9997881921698039	WITHOUT_CLASSIFICATION	2.118078301960624E-4	IMPLEMENTATION
render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999523980114308	WITHOUT_CLASSIFICATION	4.760198856925698E-5	IMPLEMENTATION
class names in the from clause result in a joinsequence (the old fromparser does this).	WITHOUT_CLASSIFICATION	0.9999999830825071	WITHOUT_CLASSIFICATION	1.6917492939128666E-8	IMPLEMENTATION
for many-to-many joins use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999979694160046	WITHOUT_CLASSIFICATION	2.0305839954194314E-6	IMPLEMENTATION
otherwise use the property mapping.	WITHOUT_CLASSIFICATION	0.9972544230019755	WITHOUT_CLASSIFICATION	0.002745576998024496	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9982917261698238	WITHOUT_CLASSIFICATION	0.0017082738301762036	IMPLEMENTATION
if the property is a special collection property name return a collectionpropertymapping.	WITHOUT_CLASSIFICATION	0.9999932904243177	WITHOUT_CLASSIFICATION	6.709575682248909E-6	IMPLEMENTATION
collection of components.	WITHOUT_CLASSIFICATION	0.9999446468713729	WITHOUT_CLASSIFICATION	5.535312862714004E-5	IMPLEMENTATION
make sure the lhs is "assignable"	WITHOUT_CLASSIFICATION	0.9998580142953178	WITHOUT_CLASSIFICATION	1.4198570468217315E-4	IMPLEMENTATION
false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.998340349191304	WITHOUT_CLASSIFICATION	0.001659650808695926	IMPLEMENTATION
register the fromelement with the from clause now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9997578298587078	WITHOUT_CLASSIFICATION	2.42170141292252E-4	IMPLEMENTATION
currently allowed	WITHOUT_CLASSIFICATION	0.9999417502661891	WITHOUT_CLASSIFICATION	5.824973381092709E-5	IMPLEMENTATION
hhh-276 implied joins in a subselect where clause - the destination needs to be added to the destination's from clause. not sure if this is will fix everything but it works.	WITHOUT_CLASSIFICATION	0.9999754791813924	WITHOUT_CLASSIFICATION	2.4520818607573457E-5	IMPLEMENTATION
return classalias == null ? classname classalias	WITHOUT_CLASSIFICATION	0.9999814722077026	WITHOUT_CLASSIFICATION	1.8527792297367813E-5	IMPLEMENTATION
this is an explicit from element.	WITHOUT_CLASSIFICATION	0.9999818381903605	WITHOUT_CLASSIFICATION	1.81618096394907E-5	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998984145386138	WITHOUT_CLASSIFICATION	1.0158546138621162E-4	IMPLEMENTATION
fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.999963907740455	WITHOUT_CLASSIFICATION	3.609225954496145E-5	IMPLEMENTATION
if it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9964800750826551	WITHOUT_CLASSIFICATION	0.003519924917344877	IMPLEMENTATION
since this is an explicit from element it can't be implied in the from clause.	WITHOUT_CLASSIFICATION	0.9999998728684891	WITHOUT_CLASSIFICATION	1.2713151092581344E-7	IMPLEMENTATION
do nothing eplicit from elements are always in the projection list.	WITHOUT_CLASSIFICATION	0.9999993306922547	WITHOUT_CLASSIFICATION	6.693077454302173E-7	IMPLEMENTATION
propertyname refers to something like collection.size	WITHOUT_CLASSIFICATION	0.9986053707382138	WITHOUT_CLASSIFICATION	0.0013946292617862304	IMPLEMENTATION
property name is a sub-path of a component	WITHOUT_CLASSIFICATION	0.9999867032195259	WITHOUT_CLASSIFICATION	1.3296780474111327E-5	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998756119025278	WITHOUT_CLASSIFICATION	1.2438809747217613E-4	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999995944452503	WITHOUT_CLASSIFICATION	4.0555474970855926E-7	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9997875746475313	WITHOUT_CLASSIFICATION	2.1242535246876622E-4	IMPLEMENTATION
dotnode uses null here	WITHOUT_CLASSIFICATION	0.9999412688441428	WITHOUT_CLASSIFICATION	5.873115585717843E-5	IMPLEMENTATION
we represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999538676837728	WITHOUT_CLASSIFICATION	4.613231622705979E-5	IMPLEMENTATION
we are the lhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999825963348571	WITHOUT_CLASSIFICATION	1.7403665142880145E-5	IMPLEMENTATION
we are the rhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999825963348571	WITHOUT_CLASSIFICATION	1.7403665142880145E-5	IMPLEMENTATION
we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999198062635881	WITHOUT_CLASSIFICATION	8.019373641185853E-5	IMPLEMENTATION
early exit!!! return so the resolve call explicitly coming from dotnode can resolve this	WITHOUT_CLASSIFICATION	0.9999768836119387	WITHOUT_CLASSIFICATION	2.3116388061250635E-5	IMPLEMENTATION
assume this ident's text does not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9886091796255284	WITHOUT_CLASSIFICATION	0.011390820374471516	IMPLEMENTATION
just ignore it for now it'll get resolved later	WITHOUT_CLASSIFICATION	0.9999560510759249	WITHOUT_CLASSIFICATION	4.394892407510344E-5	IMPLEMENTATION
this is not actually a constant but a reference to from element.	WITHOUT_CLASSIFICATION	0.9999476592649509	WITHOUT_CLASSIFICATION	5.234073504913963E-5	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999890229555446	WITHOUT_CLASSIFICATION	1.0977044455374332E-5	IMPLEMENTATION
these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9888389250174838	WITHOUT_CLASSIFICATION	0.011161074982516188	IMPLEMENTATION
used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999150366798978	WITHOUT_CLASSIFICATION	8.4963320102275E-5	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.8527736755092573	WITHOUT_CLASSIFICATION	0.14722632449074274	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.8527736755092573	WITHOUT_CLASSIFICATION	0.14722632449074274	IMPLEMENTATION
naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999999164137271	WITHOUT_CLASSIFICATION	8.358627292311386E-8	IMPLEMENTATION
this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9858208013377795	WITHOUT_CLASSIFICATION	0.014179198662220397	IMPLEMENTATION
do not over-write the column text as that has already been "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9928799216341025	WITHOUT_CLASSIFICATION	0.007120078365897343	IMPLEMENTATION
for some reason the antlr.commonast initialization routines force this method to get called twice. the first time with an empty string	WITHOUT_CLASSIFICATION	0.9994318312491546	WITHOUT_CLASSIFICATION	5.681687508454276E-4	IMPLEMENTATION
look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999965892098448	WITHOUT_CLASSIFICATION	3.410790155220622E-6	IMPLEMENTATION
add to the query spaces.	WITHOUT_CLASSIFICATION	0.9998696950224278	WITHOUT_CLASSIFICATION	1.3030497757212165E-4	IMPLEMENTATION
if the from element isn't in the same clause create a new from element.	WITHOUT_CLASSIFICATION	0.9999999278623464	WITHOUT_CLASSIFICATION	7.213765363295209E-8	IMPLEMENTATION
this is the root level node. generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999852175760826	WITHOUT_CLASSIFICATION	1.4782423917480393E-5	IMPLEMENTATION
correlated subqueries create 'special' implied from nodes because correlated subselects can't use an ansi-style join	WITHOUT_CLASSIFICATION	0.9999882839259236	WITHOUT_CLASSIFICATION	1.1716074076228696E-5	IMPLEMENTATION
super-duper-classic-parser-regression-testing-mojo-magic	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
a collection of entities	WITHOUT_CLASSIFICATION	0.9999556416025982	WITHOUT_CLASSIFICATION	4.4358397401810675E-5	IMPLEMENTATION
a collection of components	WITHOUT_CLASSIFICATION	0.9999743909142689	WITHOUT_CLASSIFICATION	2.560908573116204E-5	IMPLEMENTATION
a collection of scalar elements	WITHOUT_CLASSIFICATION	0.9999867901624923	WITHOUT_CLASSIFICATION	1.3209837507629354E-5	IMPLEMENTATION
according to both the ansi-sql and ejb3 specs trim can either take exactly one parameter or a variable number of parameters between 1 and 4. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if only <trim specification> is omitted both is assumed if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.99999945277486	WITHOUT_CLASSIFICATION	5.472251399946449E-7	IMPLEMENTATION
don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999840090833055	WITHOUT_CLASSIFICATION	1.599091669446686E-5	IMPLEMENTATION
treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999963944465311	WITHOUT_CLASSIFICATION	3.6055534689028923E-6	IMPLEMENTATION
( implied && dotnode.usethetastyleimplicitjoins ) ) {	WITHOUT_CLASSIFICATION	0.99972153525658	WITHOUT_CLASSIFICATION	2.784647434199569E-4	IMPLEMENTATION
the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9997783796138838	WITHOUT_CLASSIFICATION	2.2162038611628598E-4	IMPLEMENTATION
create the from element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999997011227836	WITHOUT_CLASSIFICATION	2.9887721638137627E-7	IMPLEMENTATION
if the join is implied then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999715027243508	WITHOUT_CLASSIFICATION	2.8497275649219638E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
the associated entity is implied but it must be included in the from. the collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999989018183152	WITHOUT_CLASSIFICATION	1.0981816848442165E-6	IMPLEMENTATION
tag this node as a join. don't include subclasses in the join. this is a clollection join.	WITHOUT_CLASSIFICATION	0.999995016032017	WITHOUT_CLASSIFICATION	4.983967982917176E-6	IMPLEMENTATION
get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999930596069021	WITHOUT_CLASSIFICATION	6.940393097967556E-6	IMPLEMENTATION
origin path implied columns classalias	WITHOUT_CLASSIFICATION	0.9999861772444684	WITHOUT_CLASSIFICATION	1.3822755531660068E-5	IMPLEMENTATION
implied	WITHOUT_CLASSIFICATION	0.9999634906032464	WITHOUT_CLASSIFICATION	3.650939675359692E-5	IMPLEMENTATION
for implied many-to-many just add the end join.	WITHOUT_CLASSIFICATION	0.9999596071341639	WITHOUT_CLASSIFICATION	4.039286583601087E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999028909264526	WITHOUT_CLASSIFICATION	9.710907354749132E-5	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999863088046113	WITHOUT_CLASSIFICATION	1.369119538869644E-5	IMPLEMENTATION
this causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9998811441365854	WITHOUT_CLASSIFICATION	1.1885586341456792E-4	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9999611708815118	WITHOUT_CLASSIFICATION	3.882911848815835E-5	IMPLEMENTATION
frontbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999968622697312	WITHOUT_CLASSIFICATION	3.137730268867694E-6	IMPLEMENTATION
the types represented in the sql result set. @return the types represented in the sql result set.	WITHOUT_CLASSIFICATION	0.9999932110872736	WITHOUT_CLASSIFICATION	6.788912726417312E-6	IMPLEMENTATION
public type[] getsqlresulttypes() {return sqlresulttypes}	WITHOUT_CLASSIFICATION	0.9999834218693457	WITHOUT_CLASSIFICATION	1.6578130654251073E-5	IMPLEMENTATION
first collect all of the select expressions. note this must be done before invoking setscalarcolumntext() because setscalarcolumntext() changes the ast!!!	WITHOUT_CLASSIFICATION	0.9999337852604668	WITHOUT_CLASSIFICATION	6.621473953315349E-5	IMPLEMENTATION
first allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9997726396495437	WITHOUT_CLASSIFICATION	2.2736035045633582E-4	IMPLEMENTATION
sqlresulttypelist.addall( constructorargumenttypelist )	WITHOUT_CLASSIFICATION	0.9997821130154566	WITHOUT_CLASSIFICATION	2.178869845434314E-4	IMPLEMENTATION
if the data type is not an association type it could not have been in the from clause.	WITHOUT_CLASSIFICATION	0.9999985963946355	WITHOUT_CLASSIFICATION	1.4036053644511115E-6	IMPLEMENTATION
sqlresulttypelist.add( type )	WITHOUT_CLASSIFICATION	0.9997522198956813	WITHOUT_CLASSIFICATION	2.4778010431870023E-4	IMPLEMENTATION
always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9988611825025699	WITHOUT_CLASSIFICATION	0.0011388174974299896	IMPLEMENTATION
add the fetched entities	WITHOUT_CLASSIFICATION	0.999867533679009	WITHOUT_CLASSIFICATION	1.3246632099097135E-4	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9997997198637164	WITHOUT_CLASSIFICATION	2.0028013628357584E-4	IMPLEMENTATION
function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988000328755247	WITHOUT_CLASSIFICATION	0.0011999671244753425	IMPLEMENTATION
if there are any scalars (non-entities) selected render the select column aliases.	WITHOUT_CLASSIFICATION	0.999999518191648	WITHOUT_CLASSIFICATION	4.818083519372633E-7	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
arraylist sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9998941585235559	WITHOUT_CLASSIFICATION	1.0584147644403375E-4	IMPLEMENTATION
sqlresulttypes = ( type[] ) sqlresulttypelist.toarray( new type[sqlresulttypelist.size()] )	WITHOUT_CLASSIFICATION	0.9997580054842423	WITHOUT_CLASSIFICATION	2.4199451575764453E-4	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990105196529699	WITHOUT_CLASSIFICATION	9.894803470300595E-4	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.8465197101873373	WITHOUT_CLASSIFICATION	0.1534802898126627	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999347815523987	WITHOUT_CLASSIFICATION	6.521844760136085E-5	IMPLEMENTATION
generate an 2d array of column names the first dimension is parallel with the return types array. the second dimension is the list of column names for each type.	WITHOUT_CLASSIFICATION	0.9999999234646444	WITHOUT_CLASSIFICATION	7.65353556965651E-8	IMPLEMENTATION
generate the select expression.	WITHOUT_CLASSIFICATION	0.9999526605000889	WITHOUT_CLASSIFICATION	4.733949991115647E-5	IMPLEMENTATION
union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990398926972335	WITHOUT_CLASSIFICATION	9.601073027665091E-4	IMPLEMENTATION
skip 'distinct' and 'all' so we return the first expression node.	WITHOUT_CLASSIFICATION	0.999584550287059	WITHOUT_CLASSIFICATION	4.154497129410829E-4	IMPLEMENTATION
create sql_token nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999793532180091	WITHOUT_CLASSIFICATION	2.0646781990869108E-5	IMPLEMENTATION
generate the property select tokens.	WITHOUT_CLASSIFICATION	0.999939230787886	WITHOUT_CLASSIFICATION	6.076921211391661E-5	IMPLEMENTATION
get the function name node.	WITHOUT_CLASSIFICATION	0.9998749301563556	WITHOUT_CLASSIFICATION	1.2506984364437805E-4	IMPLEMENTATION
method expressions in a select should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999651496124016	WITHOUT_CLASSIFICATION	3.4850387598514665E-5	IMPLEMENTATION
if this is 'elements' then create a new from element.	WITHOUT_CLASSIFICATION	0.9999975494457765	WITHOUT_CLASSIFICATION	2.4505542235948026E-6	IMPLEMENTATION
not elements(x)	WITHOUT_CLASSIFICATION	0.9916089645452038	WITHOUT_CLASSIFICATION	0.008391035454796268	IMPLEMENTATION
dialect function	WITHOUT_CLASSIFICATION	0.9997974460440657	WITHOUT_CLASSIFICATION	2.025539559343923E-4	IMPLEMENTATION
collection 'property function'	WITHOUT_CLASSIFICATION	0.999879220027986	WITHOUT_CLASSIFICATION	1.2077997201401042E-4	IMPLEMENTATION
if the constant is an ident figure out what it means	WITHOUT_CLASSIFICATION	0.9997823275601139	WITHOUT_CLASSIFICATION	2.1767243988623765E-4	IMPLEMENTATION
ident is a class alias in the from.	WITHOUT_CLASSIFICATION	0.9999974502247835	WITHOUT_CLASSIFICATION	2.5497752164307324E-6	IMPLEMENTATION
resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999554993494302	WITHOUT_CLASSIFICATION	4.4500650569794716E-5	IMPLEMENTATION
otherwise it's a literal.	WITHOUT_CLASSIFICATION	0.9979597123191198	WITHOUT_CLASSIFICATION	0.0020402876808801175	IMPLEMENTATION
the name of an entity class	WITHOUT_CLASSIFICATION	0.9999948278474426	WITHOUT_CLASSIFICATION	5.172152557362571E-6	IMPLEMENTATION
the class discriminator value	WITHOUT_CLASSIFICATION	0.9999860862263157	WITHOUT_CLASSIFICATION	1.3913773684319599E-5	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999685680475617	WITHOUT_CLASSIFICATION	3.143195243830746E-5	IMPLEMENTATION
add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999908058101482	WITHOUT_CLASSIFICATION	9.19418985181569E-6	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9996757115700217	WITHOUT_CLASSIFICATION	3.2428842997835614E-4	IMPLEMENTATION
child == parent.getfirstchild()	WITHOUT_CLASSIFICATION	0.9999037721510258	WITHOUT_CLASSIFICATION	9.622784897431667E-5	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9996757115700217	WITHOUT_CLASSIFICATION	3.2428842997835614E-4	IMPLEMENTATION
filter conditions need to be inserted before the hql where condition and the theta join node. this is because org.hibernate.loader.loader binds the filter parameters first then it binds all the hql query parameters see org.hibernate.loader.loader.processfilterparameters().	WITHOUT_CLASSIFICATION	0.9999007977261509	WITHOUT_CLASSIFICATION	9.920227384905552E-5	IMPLEMENTATION
put the filters node before the hql condition and theta joins	WITHOUT_CLASSIFICATION	0.9996279407668922	WITHOUT_CLASSIFICATION	3.720592331078214E-4	IMPLEMENTATION
add the current fragment to the filters node	WITHOUT_CLASSIFICATION	0.9996571049601721	WITHOUT_CLASSIFICATION	3.428950398277839E-4	IMPLEMENTATION
create a new theta_joins node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999291244564291	WITHOUT_CLASSIFICATION	7.087554357086742E-5	IMPLEMENTATION
put the theta_joins node before the hql condition after the filters.	WITHOUT_CLASSIFICATION	0.9996043676364592	WITHOUT_CLASSIFICATION	3.956323635407302E-4	IMPLEMENTATION
add the current fragment to the theta_joins node	WITHOUT_CLASSIFICATION	0.9996571049601721	WITHOUT_CLASSIFICATION	3.428950398277839E-4	IMPLEMENTATION
first try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999337755797282	WITHOUT_CLASSIFICATION	6.622442027181062E-5	IMPLEMENTATION
unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9996604528133848	WITHOUT_CLASSIFICATION	3.39547186615176E-4	IMPLEMENTATION
if that didn't work try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999652007741364	WITHOUT_CLASSIFICATION	3.479922586358957E-5	IMPLEMENTATION
implicit joins use theta style (where pk = fk) explicit joins use join (after from)	WITHOUT_CLASSIFICATION	0.9996334580049222	WITHOUT_CLASSIFICATION	3.6654199507783183E-4	IMPLEMENTATION
locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9997470170648265	WITHOUT_CLASSIFICATION	2.529829351735402E-4	IMPLEMENTATION
determine the type of the first argument	WITHOUT_CLASSIFICATION	0.999992859508383	WITHOUT_CLASSIFICATION	7.140491616994293E-6	IMPLEMENTATION
use the dot node to emit the first column name. create the column names folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999569592584251	WITHOUT_CLASSIFICATION	4.304074157497539E-5	IMPLEMENTATION
note this simply constructs a "raw" sql_token representing the where fragment and injects this into the tree. this "works" however it is probably not the best long-term solution. at some point we probably want to apply an additional grammar to properly tokenize this where fragment into constituent parts focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.8372857001020055	WITHOUT_CLASSIFICATION	0.16271429989799446	IMPLEMENTATION
append the text of the current node.	WITHOUT_CLASSIFICATION	0.999397167276849	WITHOUT_CLASSIFICATION	6.028327231509267E-4	IMPLEMENTATION
if the node has a first child recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999805185245254	WITHOUT_CLASSIFICATION	1.9481475474536593E-5	IMPLEMENTATION
if there is a second child (rhs) recurse into that child.	WITHOUT_CLASSIFICATION	0.9999930427649644	WITHOUT_CLASSIFICATION	6.957235035651967E-6	IMPLEMENTATION
iterate through the aliasjoinsequence pairs and generate sql token nodes.	WITHOUT_CLASSIFICATION	0.999982111562828	WITHOUT_CLASSIFICATION	1.7888437171985772E-5	IMPLEMENTATION
if the from element represents a join_fragment and it is a theta-style join convert its type from join_fragment to from_fragment	WITHOUT_CLASSIFICATION	0.9999977074904697	WITHOUT_CLASSIFICATION	2.2925095303308978E-6	IMPLEMENTATION
this is used during sqlgenerator processing	WITHOUT_CLASSIFICATION	0.99996730753102	WITHOUT_CLASSIFICATION	3.2692468980048465E-5	IMPLEMENTATION
if there is a from fragment and the from element is an explicit then add the from part.	WITHOUT_CLASSIFICATION	0.9999999755841887	WITHOUT_CLASSIFICATION	2.4415811232758464E-8	IMPLEMENTATION
&& stringhelper.isnotempty( frag )	WITHOUT_CLASSIFICATION	0.999784891035937	WITHOUT_CLASSIFICATION	2.1510896406293933E-4	IMPLEMENTATION
the from fragment will probably begin with ' '. remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999993346629845	WITHOUT_CLASSIFICATION	6.653370154561383E-7	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9999642734684665	WITHOUT_CLASSIFICATION	3.572653153357068E-5	IMPLEMENTATION
select p from p in class eg.person order by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999989028494018	WITHOUT_CLASSIFICATION	1.0971505981599486E-6	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.999993539976403	WITHOUT_CLASSIFICATION	6.4600235971116075E-6	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9999642083968665	WITHOUT_CLASSIFICATION	3.579160313341772E-5	IMPLEMENTATION
default mode	WITHOUT_CLASSIFICATION	0.9999809192278722	WITHOUT_CLASSIFICATION	1.908077212772313E-5	IMPLEMENTATION
queryjoinfragment join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9998011246669559	WITHOUT_CLASSIFICATION	1.9887533304403337E-4	IMPLEMENTATION
reset the dotcount (but not the path) after reset!	WITHOUT_CLASSIFICATION	0.9849979132405392	WITHOUT_CLASSIFICATION	0.015002086759460685	IMPLEMENTATION
after reset!	WITHOUT_CLASSIFICATION	0.9997512042117981	WITHOUT_CLASSIFICATION	2.4879578820192176E-4	IMPLEMENTATION
we don't need to worry about any condition in the on clause here (tofromfragmentstring) since anything in the on condition is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999891875405647	WITHOUT_CLASSIFICATION	1.081245943541211E-5	IMPLEMENTATION
bit_length feels a bit broken to me. we have to cast to char in order to pass when a numeric value is supplied. but of course the answers given will be wildly different for these two datatypes. 1234.5678 will be 9 bytes as a char string but will be 8 or 16 bytes as a true numeric. jay nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999999974037521	WITHOUT_CLASSIFICATION	2.596247855283956E-9	IMPLEMENTATION
dotcount>=2	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
do the corresponding rhs	WITHOUT_CLASSIFICATION	0.9995550430780967	WITHOUT_CLASSIFICATION	4.449569219031724E-4	IMPLEMENTATION
if its "id"	WITHOUT_CLASSIFICATION	0.9999778997033156	WITHOUT_CLASSIFICATION	2.2100296684338997E-5	IMPLEMENTATION
or its the id property name	WITHOUT_CLASSIFICATION	0.9995197970272698	WITHOUT_CLASSIFICATION	4.8020297273018616E-4	IMPLEMENTATION
join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9998011246669559	WITHOUT_CLASSIFICATION	1.9887533304403337E-4	IMPLEMENTATION
important!!	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
string[] keycols = collpersister.getkeycolumnnames()	WITHOUT_CLASSIFICATION	0.9997645147502899	WITHOUT_CLASSIFICATION	2.3548524971011E-4	IMPLEMENTATION
an association	WITHOUT_CLASSIFICATION	0.9999700085971635	WITHOUT_CLASSIFICATION	2.9991402836502025E-5	IMPLEMENTATION
allow index() function	WITHOUT_CLASSIFICATION	0.9996393764101663	WITHOUT_CLASSIFICATION	3.6062358983359925E-4	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.995682054060921	WITHOUT_CLASSIFICATION	0.004317945939078941	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.999993539976403	WITHOUT_CLASSIFICATION	6.4600235971116075E-6	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
collections of values	WITHOUT_CLASSIFICATION	0.9999902626089208	WITHOUT_CLASSIFICATION	9.737391079302113E-6	IMPLEMENTATION
opening paren in new foo ( )	WITHOUT_CLASSIFICATION	0.9999925048220863	WITHOUT_CLASSIFICATION	7.4951779135288785E-6	IMPLEMENTATION
if we are inside a new result() but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999751576454877	WITHOUT_CLASSIFICATION	2.4842354512401E-5	IMPLEMENTATION
special case	WITHOUT_CLASSIFICATION	0.9997945018993653	WITHOUT_CLASSIFICATION	2.0549810063470768E-4	IMPLEMENTATION
the name of an sql function	WITHOUT_CLASSIFICATION	0.9999967618420413	WITHOUT_CLASSIFICATION	3.2381579587839895E-6	IMPLEMENTATION
null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999997483613721	WITHOUT_CLASSIFICATION	2.516386279137302E-7	IMPLEMENTATION
this is basically a copy/paste of orderbyparser might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999796923162675	WITHOUT_CLASSIFICATION	2.03076837324098E-5	IMPLEMENTATION
select p from p in class eg.person group by p.name p.address p	WITHOUT_CLASSIFICATION	0.999997799761471	WITHOUT_CLASSIFICATION	2.2002385290016174E-6	IMPLEMENTATION
return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999515833760663	WITHOUT_CLASSIFICATION	4.841662393376716E-5	IMPLEMENTATION
register collection role	WITHOUT_CLASSIFICATION	0.999673456259415	WITHOUT_CLASSIFICATION	3.265437405851078E-4	IMPLEMENTATION
the keyword used to specify an identity column if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999981894965772	WITHOUT_CLASSIFICATION	1.810503422798091E-6	IMPLEMENTATION
.getelementpropertymapping()	WITHOUT_CLASSIFICATION	0.9998940102578118	WITHOUT_CLASSIFICATION	1.0598974218819274E-4	IMPLEMENTATION
crossjoins.add(name)	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
ie no select clause in hql	WITHOUT_CLASSIFICATION	0.9999877529381684	WITHOUT_CLASSIFICATION	1.2247061831564081E-5	IMPLEMENTATION
initialize the set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999605653880467	WITHOUT_CLASSIFICATION	3.943461195331875E-5	IMPLEMENTATION
ie. no select clause	WITHOUT_CLASSIFICATION	0.9996897997173418	WITHOUT_CLASSIFICATION	3.102002826580485E-4	IMPLEMENTATION
there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999660812491254	WITHOUT_CLASSIFICATION	3.391875087456252E-5	IMPLEMENTATION
return the concrete type or the underlying type if a concrete type was not specified	WITHOUT_CLASSIFICATION	0.999990402836472	WITHOUT_CLASSIFICATION	9.5971635278712E-6	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
q.addcollection(collectionname collectionrole)	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.99685644014346	WITHOUT_CLASSIFICATION	0.0031435598565401307	IMPLEMENTATION
can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9995113189806993	WITHOUT_CLASSIFICATION	4.886810193006714E-4	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9988970268094468	WITHOUT_CLASSIFICATION	0.0011029731905532634	IMPLEMENTATION
this is the legacy behaviour for hql queries	WITHOUT_CLASSIFICATION	0.9999716120475108	WITHOUT_CLASSIFICATION	2.8387952489069958E-5	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9983719826836365	WITHOUT_CLASSIFICATION	0.001628017316363504	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9983719826836365	WITHOUT_CLASSIFICATION	0.001628017316363504	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces early exit!!!!	WITHOUT_CLASSIFICATION	0.9999705798177483	WITHOUT_CLASSIFICATION	2.9420182251737156E-5	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9983719826836365	WITHOUT_CLASSIFICATION	0.001628017316363504	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9983719826836365	WITHOUT_CLASSIFICATION	0.001628017316363504	IMPLEMENTATION
need this since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9992428474406222	WITHOUT_CLASSIFICATION	7.571525593777536E-4	IMPLEMENTATION
tokens that close a sub expression tokens that open a sub expression tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9995134961806894	WITHOUT_CLASSIFICATION	4.865038193105447E-4	IMPLEMENTATION
expressionterminators.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.999900273523105	WITHOUT_CLASSIFICATION	9.972647689511952E-5	IMPLEMENTATION
expressionopeners.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.999900273523105	WITHOUT_CLASSIFICATION	9.972647689511952E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource) early exit!!!!	WITHOUT_CLASSIFICATION	0.9992715040852181	WITHOUT_CLASSIFICATION	7.284959147818188E-4	IMPLEMENTATION
otherwise a trim-specification and/or a trim-character have been specified we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character (what is to be trimmed off?) the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.7949092921576789	WITHOUT_CLASSIFICATION	0.20509070784232108	IMPLEMENTATION
inside a between and expression	WITHOUT_CLASSIFICATION	0.9996103240337031	WITHOUT_CLASSIFICATION	3.8967596629701574E-4	IMPLEMENTATION
were an odd or even number of nots encountered the join string built up by compound paths inside this expression a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999979971526375	WITHOUT_CLASSIFICATION	2.0028473623970986E-6	IMPLEMENTATION
ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9998516428806442	WITHOUT_CLASSIFICATION	1.4835711935579364E-4	IMPLEMENTATION
cope with []	WITHOUT_CLASSIFICATION	0.999849849899185	WITHOUT_CLASSIFICATION	1.5015010081500813E-4	IMPLEMENTATION
cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9998052288162851	WITHOUT_CLASSIFICATION	1.9477118371492272E-4	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999543979117881	WITHOUT_CLASSIFICATION	4.5602088211969726E-5	IMPLEMENTATION
cope with a subselect	WITHOUT_CLASSIFICATION	0.9999341177058879	WITHOUT_CLASSIFICATION	6.588229411203108E-5	IMPLEMENTATION
cope with special cases of and not ()	WITHOUT_CLASSIFICATION	0.9997360544763207	WITHOUT_CLASSIFICATION	2.639455236791865E-4	IMPLEMENTATION
close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999819276027808	WITHOUT_CLASSIFICATION	1.807239721925544E-5	IMPLEMENTATION
take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9997302112687281	WITHOUT_CLASSIFICATION	2.6978873127193377E-4	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999526683174041	WITHOUT_CLASSIFICATION	4.733168259581869E-5	IMPLEMENTATION
process a token mapping oo path expressions to sql expressions	WITHOUT_CLASSIFICATION	0.99998281832348	WITHOUT_CLASSIFICATION	1.7181676519907918E-5	IMPLEMENTATION
open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.999971615221478	WITHOUT_CLASSIFICATION	2.838477852196619E-5	IMPLEMENTATION
cope with special cases of and not )	WITHOUT_CLASSIFICATION	0.9963000401224255	WITHOUT_CLASSIFICATION	0.003699959877574578	IMPLEMENTATION
the next one up must also be	WITHOUT_CLASSIFICATION	0.9998497435526178	WITHOUT_CLASSIFICATION	1.5025644738217038E-4	IMPLEMENTATION
add any joins	WITHOUT_CLASSIFICATION	0.9998608470928984	WITHOUT_CLASSIFICATION	1.39152907101647E-4	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999526683174041	WITHOUT_CLASSIFICATION	4.733168259581869E-5	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9999642083968665	WITHOUT_CLASSIFICATION	3.579160313341772E-5	IMPLEMENTATION
path expression	WITHOUT_CLASSIFICATION	0.9994042601538194	WITHOUT_CLASSIFICATION	5.957398461805918E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998781442990153	WITHOUT_CLASSIFICATION	1.2185570098468012E-4	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9996716402949297	WITHOUT_CLASSIFICATION	3.2835970507031416E-4	IMPLEMENTATION
anything else	WITHOUT_CLASSIFICATION	0.9994774516101527	WITHOUT_CLASSIFICATION	5.22548389847297E-4	IMPLEMENTATION
the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9997294803100352	WITHOUT_CLASSIFICATION	2.705196899648714E-4	IMPLEMENTATION
careful with this!	WITHOUT_CLASSIFICATION	0.9997562633854337	WITHOUT_CLASSIFICATION	2.4373661456643925E-4	IMPLEMENTATION
the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999495409013043	WITHOUT_CLASSIFICATION	5.0459098695756286E-5	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.9999248015411089	WITHOUT_CLASSIFICATION	7.519845889115517E-5	IMPLEMENTATION
notice no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999994885807817	WITHOUT_CLASSIFICATION	5.114192182082356E-7	IMPLEMENTATION
cannot instantiate	WITHOUT_CLASSIFICATION	0.9999722114937835	WITHOUT_CLASSIFICATION	2.7788506216555787E-5	IMPLEMENTATION
start by looking for hql keywords	WITHOUT_CLASSIFICATION	0.999979670086468	WITHOUT_CLASSIFICATION	2.0329913531887562E-5	IMPLEMENTATION
inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9996300780279522	WITHOUT_CLASSIFICATION	3.699219720478139E-4	IMPLEMENTATION
'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.998431305051959	WITHOUT_CLASSIFICATION	0.0015686949480410144	IMPLEMENTATION
now anything that is not a hql keyword	WITHOUT_CLASSIFICATION	0.9848693810565311	WITHOUT_CLASSIFICATION	0.015130618943468808	IMPLEMENTATION
process the "old" hql style where aliases appear _first_ ie. using the in or in class constructions	WITHOUT_CLASSIFICATION	0.9999987421836868	WITHOUT_CLASSIFICATION	1.2578163133086258E-6	IMPLEMENTATION
treat it as a classname	WITHOUT_CLASSIFICATION	0.9992569059651477	WITHOUT_CLASSIFICATION	7.430940348522626E-4	IMPLEMENTATION
treat it as a path expression	WITHOUT_CLASSIFICATION	0.9976535539837859	WITHOUT_CLASSIFICATION	0.0023464460162142477	IMPLEMENTATION
starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999885300177398	WITHOUT_CLASSIFICATION	1.1469982260219407E-5	IMPLEMENTATION
starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9998323424760428	WITHOUT_CLASSIFICATION	1.6765752395724875E-4	IMPLEMENTATION
allow odmg oql style from person p p.cars c	WITHOUT_CLASSIFICATION	0.9999752941772545	WITHOUT_CLASSIFICATION	2.470582274551825E-5	IMPLEMENTATION
handle quoted strings	WITHOUT_CLASSIFICATION	0.9995733333198987	WITHOUT_CLASSIFICATION	4.2666668010130803E-4	IMPLEMENTATION
object insertions updates and deletions have list semantics because they must happen in the right order so as to respect referential integrity	WITHOUT_CLASSIFICATION	0.9999995596029841	WITHOUT_CLASSIFICATION	4.403970158024039E-7	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.9999248015411089	WITHOUT_CLASSIFICATION	7.519845889115517E-5	IMPLEMENTATION
ignore whitespace	WITHOUT_CLASSIFICATION	0.9996484302450602	WITHOUT_CLASSIFICATION	3.515697549397476E-4	IMPLEMENTATION
do replacements	WITHOUT_CLASSIFICATION	0.9994924863551068	WITHOUT_CLASSIFICATION	5.07513644893266E-4	IMPLEMENTATION
handle hql2 collection syntax	WITHOUT_CLASSIFICATION	0.9997105173245051	WITHOUT_CLASSIFICATION	2.894826754948286E-4	IMPLEMENTATION
uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9998886333667671	WITHOUT_CLASSIFICATION	1.1136663323286768E-4	IMPLEMENTATION
abstractselectingdelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998984145386138	WITHOUT_CLASSIFICATION	1.0158546138621162E-4	IMPLEMENTATION
hilo params	WITHOUT_CLASSIFICATION	0.9998136344678653	WITHOUT_CLASSIFICATION	1.863655321346946E-4	IMPLEMENTATION
sql = query	WITHOUT_CLASSIFICATION	0.9999321136035345	WITHOUT_CLASSIFICATION	6.788639646557469E-5	IMPLEMENTATION
performance opt	WITHOUT_CLASSIFICATION	0.9996031889325266	WITHOUT_CLASSIFICATION	3.9681106747342497E-4	IMPLEMENTATION
sql = update	WITHOUT_CLASSIFICATION	0.99998056097354	WITHOUT_CLASSIFICATION	1.9439026459938215E-5	IMPLEMENTATION
hilo config	WITHOUT_CLASSIFICATION	0.9994863666739533	WITHOUT_CLASSIFICATION	5.136333260467768E-4	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.999904782098978	WITHOUT_CLASSIFICATION	9.521790102190579E-5	IMPLEMENTATION
don't allow comments on these insert statements as comments totally blow up the oracle getgeneratedkeys "support" (	WITHOUT_CLASSIFICATION	0.9998127791484807	WITHOUT_CLASSIFICATION	1.8722085151936114E-4	IMPLEMENTATION
abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999987453232648	WITHOUT_CLASSIFICATION	1.2546767350717818E-6	IMPLEMENTATION
throw new identifiergenerationexception("save associated object first or disable cascade for inverse association")	WITHOUT_CLASSIFICATION	0.9999976190614136	WITHOUT_CLASSIFICATION	2.3809385864468835E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.994713079594217	WITHOUT_CLASSIFICATION	0.005286920405783018	IMPLEMENTATION
do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999021567592417	WITHOUT_CLASSIFICATION	9.784324075832891E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999900287025232	WITHOUT_CLASSIFICATION	9.971297476770496E-6	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.999904782098978	WITHOUT_CLASSIFICATION	9.521790102190579E-5	IMPLEMENTATION
do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9998700534934619	WITHOUT_CLASSIFICATION	1.2994650653806942E-4	IMPLEMENTATION
column and table should be renamed but it would break the public api	WITHOUT_CLASSIFICATION	0.9999907112661056	WITHOUT_CLASSIFICATION	9.288733894381323E-6	IMPLEMENTATION
loaded entity instances by entitykey	WITHOUT_CLASSIFICATION	0.9998627109913913	WITHOUT_CLASSIFICATION	1.3728900860876907E-4	IMPLEMENTATION
if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999050655379079	WITHOUT_CLASSIFICATION	9.493446209207791E-5	IMPLEMENTATION
the default	WITHOUT_CLASSIFICATION	0.9999823542726236	WITHOUT_CLASSIFICATION	1.7645727376350366E-5	IMPLEMENTATION
unfortunately not really safe to normalize this to 1 as an initial value like we do the others because we would not be able to control this if we are using a sequence	WITHOUT_CLASSIFICATION	0.9997728460153978	WITHOUT_CLASSIFICATION	2.271539846022489E-4	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.994713079594217	WITHOUT_CLASSIFICATION	0.005286920405783018	IMPLEMENTATION
identity map of collectionentry instances by the collection wrapper	WITHOUT_CLASSIFICATION	0.9998648399791292	WITHOUT_CLASSIFICATION	1.3516002087073374E-4	IMPLEMENTATION
general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999321231359364	WITHOUT_CLASSIFICATION	6.787686406362786E-5	IMPLEMENTATION
table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999194119639897	WITHOUT_CLASSIFICATION	8.058803601031097E-5	IMPLEMENTATION
configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995652859915748	WITHOUT_CLASSIFICATION	4.347140084253195E-4	IMPLEMENTATION
identifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997070279126123	WITHOUT_CLASSIFICATION	2.929720873876244E-4	IMPLEMENTATION
persistentidentifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997070279126123	WITHOUT_CLASSIFICATION	2.929720873876244E-4	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.999964893790938	WITHOUT_CLASSIFICATION	3.5106209061996595E-5	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.999964893790938	WITHOUT_CLASSIFICATION	3.5106209061996595E-5	IMPLEMENTATION
fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999953571168543	WITHOUT_CLASSIFICATION	4.64288314567487E-6	IMPLEMENTATION
we just hit the last position	WITHOUT_CLASSIFICATION	0.9999738860913384	WITHOUT_CLASSIFICATION	2.6113908661625776E-5	IMPLEMENTATION
scroll ahead	WITHOUT_CLASSIFICATION	0.9998276467060984	WITHOUT_CLASSIFICATION	1.7235329390161705E-4	IMPLEMENTATION
scroll backward	WITHOUT_CLASSIFICATION	0.9997365937473741	WITHOUT_CLASSIFICATION	2.634062526259591E-4	IMPLEMENTATION
we have not yet hit the last result	WITHOUT_CLASSIFICATION	0.9933225471028633	WITHOUT_CLASSIFICATION	0.006677452897136761	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997437635399617	WITHOUT_CLASSIFICATION	2.5623646003814746E-4	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999556598435	WITHOUT_CLASSIFICATION	4.434015649998999E-5	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998986321549388	WITHOUT_CLASSIFICATION	1.0136784506118045E-4	IMPLEMENTATION
do this when all the properties are updateable since there is a certain likelihood that the information will already be snapshot-cached.	WITHOUT_CLASSIFICATION	0.999999500363356	WITHOUT_CLASSIFICATION	4.996366440204795E-7	IMPLEMENTATION
inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999543182296367	WITHOUT_CLASSIFICATION	4.568177036341636E-5	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997437635399617	WITHOUT_CLASSIFICATION	2.5623646003814746E-4	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999556598435	WITHOUT_CLASSIFICATION	4.434015649998999E-5	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998986321549388	WITHOUT_CLASSIFICATION	1.0136784506118045E-4	IMPLEMENTATION
caches	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
generators	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
cache region is defined by the root-class in the hierarchy	WITHOUT_CLASSIFICATION	0.9999903792417747	WITHOUT_CLASSIFICATION	9.620758225234287E-6	IMPLEMENTATION
check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999960843938785	WITHOUT_CLASSIFICATION	3.915606121465969E-6	IMPLEMENTATION
after all persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999473839042026	WITHOUT_CLASSIFICATION	5.261609579741269E-5	IMPLEMENTATION
if we get here it is possible that we have a proxy 'in the way' of the merge map resolution note decided to put this here rather than in the above loop as i was nervous about the performance of the loop-in-loop especially considering this is far more likely the 'edge case'	WITHOUT_CLASSIFICATION	0.9999969921799727	WITHOUT_CLASSIFICATION	3.0078200272340726E-6	IMPLEMENTATION
jndi + serialization	WITHOUT_CLASSIFICATION	0.9998299089768385	WITHOUT_CLASSIFICATION	1.700910231614042E-4	IMPLEMENTATION
checking for named queries	WITHOUT_CLASSIFICATION	0.9999811293261729	WITHOUT_CLASSIFICATION	1.8870673827107353E-5	IMPLEMENTATION
stats	WITHOUT_CLASSIFICATION	0.9999636290699834	WITHOUT_CLASSIFICATION	3.637093001660813E-5	IMPLEMENTATION
entitynotfounddelegate	WITHOUT_CLASSIFICATION	0.9998940102578118	WITHOUT_CLASSIFICATION	1.0598974218819274E-4	IMPLEMENTATION
check named hql queries	WITHOUT_CLASSIFICATION	0.9998062872422192	WITHOUT_CLASSIFICATION	1.9371275778078565E-4	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999965788361428	WITHOUT_CLASSIFICATION	3.421163857234687E-6	IMPLEMENTATION
prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9998718940524969	WITHOUT_CLASSIFICATION	1.2810594750319428E-4	IMPLEMENTATION
from javax.naming.referenceable	WITHOUT_CLASSIFICATION	0.9999685268410812	WITHOUT_CLASSIFICATION	3.147315891880665E-5	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999587373190288	WITHOUT_CLASSIFICATION	4.126268097120889E-5	IMPLEMENTATION
for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999595114681563	WITHOUT_CLASSIFICATION	4.0488531843715284E-5	IMPLEMENTATION
test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9999980997773995	WITHOUT_CLASSIFICATION	1.9002226003822597E-6	IMPLEMENTATION
note early exit	WITHOUT_CLASSIFICATION	0.9999064152934355	WITHOUT_CLASSIFICATION	9.35847065644882E-5	IMPLEMENTATION
for backward-compatability	WITHOUT_CLASSIFICATION	0.9999710749517106	WITHOUT_CLASSIFICATION	2.892504828946439E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.9998095423051843	WITHOUT_CLASSIFICATION	1.9045769481577772E-4	IMPLEMENTATION
to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999819967537659	WITHOUT_CLASSIFICATION	1.8003246234168628E-5	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999996435152537	WITHOUT_CLASSIFICATION	3.5648474625895744E-7	IMPLEMENTATION
must add to jndi _after_ adding to hashmaps because some jndi servers use serialization	WITHOUT_CLASSIFICATION	0.999229926625508	WITHOUT_CLASSIFICATION	7.700733744920733E-4	IMPLEMENTATION
make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9998554095468464	WITHOUT_CLASSIFICATION	1.4459045315357185E-4	IMPLEMENTATION
for each of the defined parameters make sure its value has been set	WITHOUT_CLASSIFICATION	0.9999950775113821	WITHOUT_CLASSIFICATION	4.922488617939285E-6	IMPLEMENTATION
we never need to apply locks to the sql	WITHOUT_CLASSIFICATION	0.9968353643656598	WITHOUT_CLASSIFICATION	0.003164635634340175	IMPLEMENTATION
inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999029039871298	WITHOUT_CLASSIFICATION	9.709601287027317E-5	IMPLEMENTATION
deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999901848489179	WITHOUT_CLASSIFICATION	9.815151082102033E-5	IMPLEMENTATION
during deserialization we need to reconnect all proxies and collections to this session as well as the entityentry and collectionentry instances these associations are transient because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999436993948265	WITHOUT_CLASSIFICATION	5.6300605173419176E-5	IMPLEMENTATION
updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998982573805996	WITHOUT_CLASSIFICATION	1.0174261940035478E-4	IMPLEMENTATION
loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998417910703798	WITHOUT_CLASSIFICATION	1.5820892962009581E-4	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9998421012678189	WITHOUT_CLASSIFICATION	1.578987321810027E-4	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9998421012678189	WITHOUT_CLASSIFICATION	1.578987321810027E-4	IMPLEMENTATION
first try to load it from the temp pc associated to this ss	WITHOUT_CLASSIFICATION	0.9998622299299225	WITHOUT_CLASSIFICATION	1.3777007007752706E-4	IMPLEMENTATION
if the metadata allowed proxy creation and caller did not request forceful eager loading generate a proxy	WITHOUT_CLASSIFICATION	0.999785919960249	WITHOUT_CLASSIFICATION	2.1408003975103548E-4	IMPLEMENTATION
otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9985071325601579	WITHOUT_CLASSIFICATION	0.001492867439842035	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999861152765468	WITHOUT_CLASSIFICATION	1.3884723453167649E-5	IMPLEMENTATION
no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9998153373314659	WITHOUT_CLASSIFICATION	1.846626685341433E-4	IMPLEMENTATION
after setting values to object entitymode	WITHOUT_CLASSIFICATION	0.9999979055603443	WITHOUT_CLASSIFICATION	2.094439655719915E-6	IMPLEMENTATION
for ejb3	WITHOUT_CLASSIFICATION	0.9999900345994132	WITHOUT_CLASSIFICATION	9.965400586789785E-6	IMPLEMENTATION
just ignore	WITHOUT_CLASSIFICATION	0.9998136267560813	WITHOUT_CLASSIFICATION	1.8637324391877297E-4	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9997516152247677	WITHOUT_CLASSIFICATION	2.4838477523219044E-4	IMPLEMENTATION
saveorupdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997321625692537	WITHOUT_CLASSIFICATION	2.6783743074622937E-4	IMPLEMENTATION
update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997321625692537	WITHOUT_CLASSIFICATION	2.6783743074622937E-4	IMPLEMENTATION
lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997321625692537	WITHOUT_CLASSIFICATION	2.6783743074622937E-4	IMPLEMENTATION
persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997321625692537	WITHOUT_CLASSIFICATION	2.6783743074622937E-4	IMPLEMENTATION
persistonflush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997321625692537	WITHOUT_CLASSIFICATION	2.6783743074622937E-4	IMPLEMENTATION
merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997321625692537	WITHOUT_CLASSIFICATION	2.6783743074622937E-4	IMPLEMENTATION
saveorupdatecopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997321625692537	WITHOUT_CLASSIFICATION	2.6783743074622937E-4	IMPLEMENTATION
delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997321625692537	WITHOUT_CLASSIFICATION	2.6783743074622937E-4	IMPLEMENTATION
load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997321625692537	WITHOUT_CLASSIFICATION	2.6783743074622937E-4	IMPLEMENTATION
refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997321625692537	WITHOUT_CLASSIFICATION	2.6783743074622937E-4	IMPLEMENTATION
replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997321625692537	WITHOUT_CLASSIFICATION	2.6783743074622937E-4	IMPLEMENTATION
do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.987775598377067	WITHOUT_CLASSIFICATION	0.012224401622933133	IMPLEMENTATION
this is an internal error of some sort	WITHOUT_CLASSIFICATION	0.999734741834469	WITHOUT_CLASSIFICATION	2.652581655310635E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999896848623449	WITHOUT_CLASSIFICATION	1.031513765504597E-5	IMPLEMENTATION
only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999968179672956	WITHOUT_CLASSIFICATION	3.1820327045123264E-6	IMPLEMENTATION
if it was previously unreferenced we need to flush in order to get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999998155734925	WITHOUT_CLASSIFICATION	1.8442650740911024E-7	IMPLEMENTATION
not for internal use	WITHOUT_CLASSIFICATION	0.9921941597201985	WITHOUT_CLASSIFICATION	0.007805840279801574	IMPLEMENTATION
otherwise we only need to flush if there are in-memory changes to the queried tables	WITHOUT_CLASSIFICATION	0.9997562469375983	WITHOUT_CLASSIFICATION	2.4375306240177405E-4	IMPLEMENTATION
might need to run a different filter entirely after the flush because the collection role may have changed	WITHOUT_CLASSIFICATION	0.999807022473034	WITHOUT_CLASSIFICATION	1.9297752696600346E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999896848623449	WITHOUT_CLASSIFICATION	1.031513765504597E-5	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999896848623449	WITHOUT_CLASSIFICATION	1.031513765504597E-5	IMPLEMENTATION
if it is initialized see if the underlying instance is contained since we need to account for the fact that it might have been evicted	WITHOUT_CLASSIFICATION	0.9999833226517899	WITHOUT_CLASSIFICATION	1.667734821015614E-5	IMPLEMENTATION
basically just an adapted copy of find(criteriaimpl)	WITHOUT_CLASSIFICATION	0.999991257467176	WITHOUT_CLASSIFICATION	8.74253282407874E-6	IMPLEMENTATION
it is possible for this method to be called during flush processing so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9969666648474438	WITHOUT_CLASSIFICATION	0.0030333351525561546	IMPLEMENTATION
nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999960769649566	WITHOUT_CLASSIFICATION	3.923035043377297E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999315861271421	WITHOUT_CLASSIFICATION	6.841387285803872E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.9998095423051843	WITHOUT_CLASSIFICATION	1.9045769481577772E-4	IMPLEMENTATION
we need to writeobject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9992978691548384	WITHOUT_CLASSIFICATION	7.021308451614685E-4	IMPLEMENTATION
the old-time stand-by	WITHOUT_CLASSIFICATION	0.9999037936816254	WITHOUT_CLASSIFICATION	9.620631837450579E-5	IMPLEMENTATION
parameter bind values	WITHOUT_CLASSIFICATION	0.9999859119531896	WITHOUT_CLASSIFICATION	1.4088046810399823E-5	IMPLEMENTATION
parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994354748857328	WITHOUT_CLASSIFICATION	5.645251142672834E-4	IMPLEMENTATION
prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999992366650888	WITHOUT_CLASSIFICATION	7.633349111181007E-7	IMPLEMENTATION
execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999443046780557	WITHOUT_CLASSIFICATION	5.56953219442617E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999077407552711	WITHOUT_CLASSIFICATION	9.225924472886811E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999077407552711	WITHOUT_CLASSIFICATION	9.225924472886811E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999077407552711	WITHOUT_CLASSIFICATION	9.225924472886811E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999077407552711	WITHOUT_CLASSIFICATION	9.225924472886811E-5	IMPLEMENTATION
fieldinterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998984145386138	WITHOUT_CLASSIFICATION	1.0158546138621162E-4	IMPLEMENTATION
subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999053539954934	WITHOUT_CLASSIFICATION	9.464600450663538E-5	IMPLEMENTATION
let's assume that there is only one lazy fetch group for now!	WITHOUT_CLASSIFICATION	0.9999955710466252	WITHOUT_CLASSIFICATION	4.428953374762696E-6	IMPLEMENTATION
fieldhandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998984145386138	WITHOUT_CLASSIFICATION	1.0158546138621162E-4	IMPLEMENTATION
should not need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9980572450009325	WITHOUT_CLASSIFICATION	0.001942754999067434	IMPLEMENTATION
should probably no-op commit/rollback here at least in jta scenarios	WITHOUT_CLASSIFICATION	0.999998018306712	WITHOUT_CLASSIFICATION	1.981693288084893E-6	IMPLEMENTATION
base expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999651884522786	WITHOUT_CLASSIFICATION	3.481154772142561E-5	IMPLEMENTATION
various expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998109994073928	WITHOUT_CLASSIFICATION	1.8900059260710042E-4	IMPLEMENTATION
explicitly perform no checking	WITHOUT_CLASSIFICATION	0.999824606687924	WITHOUT_CLASSIFICATION	1.7539331207593875E-4	IMPLEMENTATION
used from testsuite	WITHOUT_CLASSIFICATION	0.9999736194964846	WITHOUT_CLASSIFICATION	2.638050351532955E-5	IMPLEMENTATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999997347645504	WITHOUT_CLASSIFICATION	2.652354495915807E-7	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999473687648642	WITHOUT_CLASSIFICATION	5.263123513578086E-5	IMPLEMENTATION
register synch stats.connect()	WITHOUT_CLASSIFICATION	0.9997121261525826	WITHOUT_CLASSIFICATION	2.8787384741737674E-4	IMPLEMENTATION
noncritical swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9994779829000322	WITHOUT_CLASSIFICATION	5.220170999677694E-4	IMPLEMENTATION
calls executebatch()	WITHOUT_CLASSIFICATION	0.9996218717961872	WITHOUT_CLASSIFICATION	3.7812820381288685E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9996933274311925	WITHOUT_CLASSIFICATION	3.0667256880742534E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9996933274311925	WITHOUT_CLASSIFICATION	3.0667256880742534E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9996933274311925	WITHOUT_CLASSIFICATION	3.0667256880742534E-4	IMPLEMENTATION
sybase driver (jconnect) throwing npe here in certain cases but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999994787764591	WITHOUT_CLASSIFICATION	5.212235408775111E-7	IMPLEMENTATION
see explanation above	WITHOUT_CLASSIFICATION	0.9998342700868769	WITHOUT_CLASSIFICATION	1.6572991312311766E-4	IMPLEMENTATION
if we are in the process of releasing no sense checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999999823758793	WITHOUT_CLASSIFICATION	1.762412073352884E-8	IMPLEMENTATION
early exit!!!!	WITHOUT_CLASSIFICATION	0.999907570057376	WITHOUT_CLASSIFICATION	9.242994262406018E-5	IMPLEMENTATION
resultset impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999005172811857	WITHOUT_CLASSIFICATION	9.948271881439312E-5	IMPLEMENTATION
resultset impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999005172811857	WITHOUT_CLASSIFICATION	9.948271881439312E-5	IMPLEMENTATION
refer to comment in statefulpersistencecontext.addcollection()	WITHOUT_CLASSIFICATION	0.9999926367443703	WITHOUT_CLASSIFICATION	7.363255629645008E-6	IMPLEMENTATION
connectionmanager.callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997070279126123	WITHOUT_CLASSIFICATION	2.929720873876244E-4	IMPLEMENTATION
note success = false because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9990776975949865	WITHOUT_CLASSIFICATION	9.223024050134547E-4	IMPLEMENTATION
we already have a callback registered either a local (org.hibernate.transaction) transaction has accepted callback responsibilities or we have previously registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999915998714625	WITHOUT_CLASSIFICATION	8.40012853756952E-6	IMPLEMENTATION
the configured transaction-factory says it only supports local callback mode so no sense attempting to register a jta synchronization	WITHOUT_CLASSIFICATION	0.9997072982234025	WITHOUT_CLASSIFICATION	2.927017765975407E-4	IMPLEMENTATION
transactions marked for rollback-only cause some tm impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9998942860020642	WITHOUT_CLASSIFICATION	1.0571399793571737E-4	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998978933533771	WITHOUT_CLASSIFICATION	1.0210664662288794E-4	IMPLEMENTATION
postinitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999496415280978	WITHOUT_CLASSIFICATION	5.035847190218576E-5	IMPLEMENTATION
cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9998699913040862	WITHOUT_CLASSIFICATION	1.300086959137797E-4	IMPLEMENTATION
todo for 4.0 private static final logger log = loggerfactory.getlogger( sqlstatementlogger.class ) this is the legacy logging 'category'	WITHOUT_CLASSIFICATION	0.7196912517872274	WITHOUT_CLASSIFICATION	0.2803087482127725	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9998656826529123	WITHOUT_CLASSIFICATION	1.3431734708761742E-4	IMPLEMENTATION
don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999210799128038	WITHOUT_CLASSIFICATION	7.892008719624481E-5	IMPLEMENTATION
don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999578937677129	WITHOUT_CLASSIFICATION	4.2106232287046124E-5	IMPLEMENTATION
position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999002730175307	WITHOUT_CLASSIFICATION	9.972698246923083E-5	IMPLEMENTATION
sequentially read the result set in reverse until we recognize a change in the key value. at that point we are pointed at the last physical sequential row for the logical row in which we are interested in processing	WITHOUT_CLASSIFICATION	0.9999999938223506	WITHOUT_CLASSIFICATION	6.177649362040639E-9	IMPLEMENTATION
read backwards until we read past the first physical sequential row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999996984448132	WITHOUT_CLASSIFICATION	3.0155518680354857E-7	IMPLEMENTATION
finally read ahead one row to position result set cursor at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999997137340864	WITHOUT_CLASSIFICATION	2.862659136603292E-7	IMPLEMENTATION
now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999993262884697	WITHOUT_CLASSIFICATION	6.737115304150157E-7	IMPLEMENTATION
force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9995996646649246	WITHOUT_CLASSIFICATION	4.003353350754353E-4	IMPLEMENTATION
this is equivalent to the old behavior	WITHOUT_CLASSIFICATION	0.9997931732237891	WITHOUT_CLASSIFICATION	2.0682677621094064E-4	IMPLEMENTATION
if null owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999990989495973	WITHOUT_CLASSIFICATION	9.010504027421068E-7	IMPLEMENTATION
final string querystring	WITHOUT_CLASSIFICATION	0.9999272191183791	WITHOUT_CLASSIFICATION	7.278088162088389E-5	IMPLEMENTATION
if it was a reference to self don't need to nullify unless we are using native id generation in which case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.999999352512285	WITHOUT_CLASSIFICATION	6.474877150091697E-7	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999804778852702	WITHOUT_CLASSIFICATION	1.952211472980577E-5	IMPLEMENTATION
in an effort to avoid concurrent-modification-exceptions (from potential recursive calls back through here as a result of the eventual call to persistentcollection#endread) we scan the internal loadingcollections map for matches and store those matches in a temp collection. the temp collection is then used to "drive" the #endread processing.	WITHOUT_CLASSIFICATION	0.9999968432358509	WITHOUT_CLASSIFICATION	3.1567641490141097E-6	IMPLEMENTATION
we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9995848799033318	WITHOUT_CLASSIFICATION	4.1512009666816175E-4	IMPLEMENTATION
can't reuse in this case	WITHOUT_CLASSIFICATION	0.999954390909801	WITHOUT_CLASSIFICATION	4.5609090199054724E-5	IMPLEMENTATION
first we need to suspend any current jta transaction and obtain a jdbc connection	WITHOUT_CLASSIFICATION	0.9567357727758783	WITHOUT_CLASSIFICATION	0.04326422722412172	IMPLEMENTATION
getresultlist(results)	WITHOUT_CLASSIFICATION	0.9998940102578118	WITHOUT_CLASSIFICATION	1.0598974218819274E-4	IMPLEMENTATION
if we only returned one entity query by key is more efficient	WITHOUT_CLASSIFICATION	0.9997667156503165	WITHOUT_CLASSIFICATION	2.3328434968348385E-4	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9961986109884683	WITHOUT_CLASSIFICATION	0.003801389011531737	IMPLEMENTATION
handle empty collection	WITHOUT_CLASSIFICATION	0.9916016191111203	WITHOUT_CLASSIFICATION	0.008398380888879578	IMPLEMENTATION
else no collection element but also no owner	WITHOUT_CLASSIFICATION	0.9999985030769463	WITHOUT_CLASSIFICATION	1.4969230537646824E-6	IMPLEMENTATION
handle empty collections	WITHOUT_CLASSIFICATION	0.9905119735807331	WITHOUT_CLASSIFICATION	0.009488026419266963	IMPLEMENTATION
else this is not a collection initializer (and empty collections will be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9985977722521804	WITHOUT_CLASSIFICATION	0.0014022277478195672	IMPLEMENTATION
validate() instances of validatable	WITHOUT_CLASSIFICATION	0.9998969179938165	WITHOUT_CLASSIFICATION	1.030820061834604E-4	IMPLEMENTATION
if we know there is exactly 1 row we can skip. it would be great if we could _always_ skip this it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9984507502948022	WITHOUT_CLASSIFICATION	0.001549249705197699	IMPLEMENTATION
remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999859858056391	WITHOUT_CLASSIFICATION	1.4014194360872938E-5	IMPLEMENTATION
null version means the object is in the process of being loaded somewhere else in the resultset	WITHOUT_CLASSIFICATION	0.9999998371832254	WITHOUT_CLASSIFICATION	1.6281677470236374E-7	IMPLEMENTATION
problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999721288502749	WITHOUT_CLASSIFICATION	2.787114972522268E-5	IMPLEMENTATION
use the id passed in	WITHOUT_CLASSIFICATION	0.9997591176721559	WITHOUT_CLASSIFICATION	2.4088232784417652E-4	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999909545686818	WITHOUT_CLASSIFICATION	9.045431318292047E-6	IMPLEMENTATION
prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999520956357656	WITHOUT_CLASSIFICATION	4.790436423430485E-5	IMPLEMENTATION
no point doing this if none was requested	WITHOUT_CLASSIFICATION	0.9999992005194054	WITHOUT_CLASSIFICATION	7.994805946674118E-7	IMPLEMENTATION
if the object is already loaded return the loaded one	WITHOUT_CLASSIFICATION	0.9999997590606068	WITHOUT_CLASSIFICATION	2.4093939320057037E-7	IMPLEMENTATION
its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9998115401152614	WITHOUT_CLASSIFICATION	1.8845988473859408E-4	IMPLEMENTATION
cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.998618133836182	WITHOUT_CLASSIFICATION	0.0013818661638180638	IMPLEMENTATION
the load() which takes an entity does not pass an entityname	WITHOUT_CLASSIFICATION	0.9997973207113707	WITHOUT_CLASSIFICATION	2.0267928862919635E-4	IMPLEMENTATION
we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9992229608286484	WITHOUT_CLASSIFICATION	7.770391713515918E-4	IMPLEMENTATION
look for a proxy	WITHOUT_CLASSIFICATION	0.9999115895200819	WITHOUT_CLASSIFICATION	8.841047991815359E-5	IMPLEMENTATION
we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9991729015311174	WITHOUT_CLASSIFICATION	8.270984688825226E-4	IMPLEMENTATION
its the given optional object	WITHOUT_CLASSIFICATION	0.9999358120772954	WITHOUT_CLASSIFICATION	6.41879227045028E-5	IMPLEMENTATION
instantiate a new instance	WITHOUT_CLASSIFICATION	0.999967440653683	WITHOUT_CLASSIFICATION	3.2559346316891943E-5	IMPLEMENTATION
need to hydrate it.	WITHOUT_CLASSIFICATION	0.9934998315758393	WITHOUT_CLASSIFICATION	0.006500168424160686	IMPLEMENTATION
return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999921428968483	WITHOUT_CLASSIFICATION	7.857103151729974E-6	IMPLEMENTATION
will be ignored using the existing entry instead	WITHOUT_CLASSIFICATION	0.9995808442706199	WITHOUT_CLASSIFICATION	4.1915572938015387E-4	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999998060950589	WITHOUT_CLASSIFICATION	1.9390494102659685E-7	IMPLEMENTATION
materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9996858936388313	WITHOUT_CLASSIFICATION	3.1410636116866326E-4	IMPLEMENTATION
get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999853042160691	WITHOUT_CLASSIFICATION	1.4695783930828205E-5	IMPLEMENTATION
ok in normal hibernate usage to delete a detached entity jpa however forbids it thus this is a hook for hem to affect this behavior	WITHOUT_CLASSIFICATION	0.9999962971712278	WITHOUT_CLASSIFICATION	3.702828772156807E-6	IMPLEMENTATION
the entry will be removed after the flush and will no longer override the stale snapshot this is now handled by removeentity() in entitydeleteaction persistencecontext.removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.9999703911476101	WITHOUT_CLASSIFICATION	2.96088523898981E-5	IMPLEMENTATION
addinitializedcollection(collection persister id)	WITHOUT_CLASSIFICATION	0.9998445041209495	WITHOUT_CLASSIFICATION	1.554958790504633E-4	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.999907570057376	WITHOUT_CLASSIFICATION	9.242994262406018E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.999907570057376	WITHOUT_CLASSIFICATION	9.242994262406018E-5	IMPLEMENTATION
|| oj.getjoinable().consumescollectionalias()	WITHOUT_CLASSIFICATION	0.9999029491233925	WITHOUT_CLASSIFICATION	9.70508766075029E-5	IMPLEMENTATION
here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9908734196045017	WITHOUT_CLASSIFICATION	0.009126580395498275	IMPLEMENTATION
code to handle subclasses of topclass	WITHOUT_CLASSIFICATION	0.9998603753545156	WITHOUT_CLASSIFICATION	1.396246454845563E-4	IMPLEMENTATION
woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999958664790309	WITHOUT_CLASSIFICATION	4.133520969080652E-6	IMPLEMENTATION
we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.999718533639608	WITHOUT_CLASSIFICATION	2.814663603918928E-4	IMPLEMENTATION
we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9998517402369942	WITHOUT_CLASSIFICATION	1.482597630058375E-4	IMPLEMENTATION
synchronized to avoid multi-thread access issues defined as method synch to avoid potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9984830794856755	WITHOUT_CLASSIFICATION	0.001516920514324467	IMPLEMENTATION
allows various loaders (ok mainly the queryloader ) to check whether scrolling of their result set should be allowed. by default it is allowed.	WITHOUT_CLASSIFICATION	0.9999854076328476	WITHOUT_CLASSIFICATION	1.4592367152282433E-5	IMPLEMENTATION
before adding to collection!	WITHOUT_CLASSIFICATION	0.9999238577515841	WITHOUT_CLASSIFICATION	7.61422484159092E-5	IMPLEMENTATION
if the current depth is 0 the root thing being loaded is the many-to-many collection itself. here it is alright to use an inner join	WITHOUT_CLASSIFICATION	0.9999976584181649	WITHOUT_CLASSIFICATION	2.341581834980431E-6	IMPLEMENTATION
operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9996734985733926	WITHOUT_CLASSIFICATION	3.26501426607447E-4	IMPLEMENTATION
simple because we can't have a one-to-one or a collection (or even a property-ref) in a composite-element	WITHOUT_CLASSIFICATION	0.9999975096697422	WITHOUT_CLASSIFICATION	2.4903302577306554E-6	IMPLEMENTATION
a composite key	WITHOUT_CLASSIFICATION	0.9997984303335138	WITHOUT_CLASSIFICATION	2.0156966648625648E-4	IMPLEMENTATION
if no batch use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9997839443506535	WITHOUT_CLASSIFICATION	2.160556493465393E-4	IMPLEMENTATION
it must be a collection fetch	WITHOUT_CLASSIFICATION	0.999859079543696	WITHOUT_CLASSIFICATION	1.4092045630394317E-4	IMPLEMENTATION
needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.8537912051614622	IMPLEMENTATION	0.14620879483853785	WITHOUT_CLASSIFICATION
&& etype.isreferencetoprimarykey()	WITHOUT_CLASSIFICATION	0.9998991740259902	WITHOUT_CLASSIFICATION	1.0082597400981536E-4	IMPLEMENTATION
it might still need to apply a collection ordering based on a many-to-many defined order-by	WITHOUT_CLASSIFICATION	0.9722940637119013	WITHOUT_CLASSIFICATION	0.02770593628809872	IMPLEMENTATION
if a composite key use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching todo unnecessary for databases with ansi-style joins	WITHOUT_CLASSIFICATION	0.8875696885249821	WITHOUT_CLASSIFICATION	0.11243031147501785	IMPLEMENTATION
belong to other persister belong to other persister	WITHOUT_CLASSIFICATION	0.9996809043428849	WITHOUT_CLASSIFICATION	3.190956571150377E-4	IMPLEMENTATION
we found it	WITHOUT_CLASSIFICATION	0.9994609827294906	WITHOUT_CLASSIFICATION	5.390172705093691E-4	IMPLEMENTATION
we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999583351171494	WITHOUT_CLASSIFICATION	4.166488285059357E-5	IMPLEMENTATION
disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9995414411013943	WITHOUT_CLASSIFICATION	4.585588986055936E-4	IMPLEMENTATION
note unlike all other loaders this one is not multithreaded or cacheable!!	WITHOUT_CLASSIFICATION	0.9716086509423008	WITHOUT_CLASSIFICATION	0.028391349057699206	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9986468974806179	WITHOUT_CLASSIFICATION	0.0013531025193822045	IMPLEMENTATION
root entity comes last	WITHOUT_CLASSIFICATION	0.9998744657577294	WITHOUT_CLASSIFICATION	1.2553424227066732E-4	IMPLEMENTATION
deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999075048259202	WITHOUT_CLASSIFICATION	9.249517407983231E-5	IMPLEMENTATION
alias may be null early exit	WITHOUT_CLASSIFICATION	0.9999801267822479	WITHOUT_CLASSIFICATION	1.9873217752084255E-5	IMPLEMENTATION
if it is a compound path	WITHOUT_CLASSIFICATION	0.999991529339381	WITHOUT_CLASSIFICATION	8.470660619066326E-6	IMPLEMENTATION
otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9991807862975028	WITHOUT_CLASSIFICATION	8.192137024971665E-4	IMPLEMENTATION
if its the root criteria we are done	WITHOUT_CLASSIFICATION	0.9999961241649813	WITHOUT_CLASSIFICATION	3.875835018707731E-6	IMPLEMENTATION
otherwise recurse	WITHOUT_CLASSIFICATION	0.9981530823036218	WITHOUT_CLASSIFICATION	0.0018469176963782968	IMPLEMENTATION
the criteria instance	WITHOUT_CLASSIFICATION	0.9999481800629338	WITHOUT_CLASSIFICATION	5.181993706615888E-5	IMPLEMENTATION
the entity name	WITHOUT_CLASSIFICATION	0.999798795035024	WITHOUT_CLASSIFICATION	2.0120496497611016E-4	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9998161858408371	WITHOUT_CLASSIFICATION	1.8381415916282384E-4	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9998161858408371	WITHOUT_CLASSIFICATION	1.8381415916282384E-4	IMPLEMENTATION
it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999838752463733	WITHOUT_CLASSIFICATION	1.6124753626677665E-5	IMPLEMENTATION
should never happen i think	WITHOUT_CLASSIFICATION	0.9935944560961383	WITHOUT_CLASSIFICATION	0.006405543903861707	IMPLEMENTATION
detect discriminator values	WITHOUT_CLASSIFICATION	0.9999823398167276	WITHOUT_CLASSIFICATION	1.7660183272490663E-5	IMPLEMENTATION
convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999395995061552	WITHOUT_CLASSIFICATION	6.0400493844762567E-5	IMPLEMENTATION
and the qualifier is not the alias of this criteria -> check to see if we belong to some criteria other than the one that created us	WITHOUT_CLASSIFICATION	0.9997587847042614	WITHOUT_CLASSIFICATION	2.412152957386152E-4	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999531481066334	WITHOUT_CLASSIFICATION	4.6851893366657434E-5	IMPLEMENTATION
otherwise this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9998318345509432	WITHOUT_CLASSIFICATION	1.681654490568165E-4	IMPLEMENTATION
currently not cachable if autodiscover types is in effect (e.g. "select ")	WITHOUT_CLASSIFICATION	0.9999975836244925	WITHOUT_CLASSIFICATION	2.4163755073893358E-6	IMPLEMENTATION
private final string[] sqlaliases private final string[] sqlaliassuffixes	WITHOUT_CLASSIFICATION	0.999926382425687	WITHOUT_CLASSIFICATION	7.361757431303843E-5	IMPLEMENTATION
this is only needed (afaict) for resulttransformer processing	WITHOUT_CLASSIFICATION	0.7275704657485506	WITHOUT_CLASSIFICATION	0.27242953425144956	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999991737086283	WITHOUT_CLASSIFICATION	8.262913715981783E-7	IMPLEMENTATION
build an array with indices equal to the total number of actual returns in the result hibernate will return for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999998748994376	WITHOUT_CLASSIFICATION	1.2510056232910955E-7	IMPLEMENTATION
replace {.} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9994853693709147	WITHOUT_CLASSIFICATION	5.146306290853273E-4	IMPLEMENTATION
no additional open braces found in the string append the rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999874061178352	WITHOUT_CLASSIFICATION	1.2593882164906602E-5	IMPLEMENTATION
apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999485846624705	WITHOUT_CLASSIFICATION	5.141533752954882E-5	IMPLEMENTATION
it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999604871113039	WITHOUT_CLASSIFICATION	3.9512888696143914E-5	IMPLEMENTATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9360418607654067	IMPLEMENTATION	0.06395813923459329	WITHOUT_CLASSIFICATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9360418607654067	IMPLEMENTATION	0.06395813923459329	WITHOUT_CLASSIFICATION
the current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999449242114998	WITHOUT_CLASSIFICATION	5.5075788500199314E-5	IMPLEMENTATION
it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999728913762228	WITHOUT_CLASSIFICATION	2.710862377724252E-5	IMPLEMENTATION
possibly handle something parameters for the query ?	WITHOUT_CLASSIFICATION	0.999970641576263	WITHOUT_CLASSIFICATION	2.9358423737013128E-5	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999795847365116	WITHOUT_CLASSIFICATION	2.0415263488323465E-5	IMPLEMENTATION
private final list persisters = new arraylist()	WITHOUT_CLASSIFICATION	0.9999163646699568	WITHOUT_CLASSIFICATION	8.363533004308202E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999473687648642	WITHOUT_CLASSIFICATION	5.263123513578086E-5	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999056708090268	WITHOUT_CLASSIFICATION	9.432919097315986E-5	IMPLEMENTATION
private final list scalartypes = new arraylist() private final list scalarcolumnaliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999163646699568	WITHOUT_CLASSIFICATION	8.363533004308202E-5	IMPLEMENTATION
now process the returns	WITHOUT_CLASSIFICATION	0.999772348247995	WITHOUT_CLASSIFICATION	2.276517520050542E-4	IMPLEMENTATION
private list collectionowneraliases = new arraylist() private list collectionaliases = new arraylist() private list collectionpersisters = new arraylist() private list collectionresults = new arraylist()	WITHOUT_CLASSIFICATION	0.9999582589460995	WITHOUT_CLASSIFICATION	4.174105390040671E-5	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999356238620779	WITHOUT_CLASSIFICATION	6.437613792208804E-5	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999356238620779	WITHOUT_CLASSIFICATION	6.437613792208804E-5	IMPLEMENTATION
make sure the owner alias is known	WITHOUT_CLASSIFICATION	0.9999578302230858	WITHOUT_CLASSIFICATION	4.216977691423054E-5	IMPLEMENTATION
first break down the returns into maps keyed by alias so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9976693624450367	WITHOUT_CLASSIFICATION	0.0023306375549633227	IMPLEMENTATION
scalarcolumnaliases.add( typereturn.getcolumnalias() ) scalartypes.add( typereturn.gettype() )	WITHOUT_CLASSIFICATION	0.9997821130154566	WITHOUT_CLASSIFICATION	2.178869845434314E-4	IMPLEMENTATION
if this return's alias has not been processed yet do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.999900202284979	WITHOUT_CLASSIFICATION	9.9797715020968E-5	IMPLEMENTATION
collectionowneraliases.add( owneralias )	WITHOUT_CLASSIFICATION	0.9997821130154566	WITHOUT_CLASSIFICATION	2.178869845434314E-4	IMPLEMENTATION
for merging of versioned entities we consider the version having been changed only when 1) the two version values are different and 2) the target actually represents database state! this second condition is a special case which allows an entity to be merged during the same transaction (though during a seperate operation) in which it was originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999999978638868	WITHOUT_CLASSIFICATION	2.136113145730174E-9	IMPLEMENTATION
this is the second pass through on a merge op so here we limit the replacement to associations types (value types were already replaced during the first pass)	WITHOUT_CLASSIFICATION	0.9998967422070378	WITHOUT_CLASSIFICATION	1.0325779296223758E-4	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999823276165897	WITHOUT_CLASSIFICATION	1.7672383410348934E-5	IMPLEMENTATION
cascade-save to collections after the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999907910268856	WITHOUT_CLASSIFICATION	9.208973114448177E-6	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9992488643771756	WITHOUT_CLASSIFICATION	7.511356228243262E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9995931989821779	WITHOUT_CLASSIFICATION	4.068010178221251E-4	IMPLEMENTATION
currently only the hibernate-supplied dbtimestamptype is supported here	WITHOUT_CLASSIFICATION	0.9999957208502295	WITHOUT_CLASSIFICATION	4.279149770459762E-6	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9998648448464997	WITHOUT_CLASSIFICATION	1.351551535001948E-4	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9992874625693875	WITHOUT_CLASSIFICATION	7.125374306123947E-4	IMPLEMENTATION
not so sure this is even valid subtree. but if it was it'd represent two unrelated table references	WITHOUT_CLASSIFICATION	0.9999995038444005	WITHOUT_CLASSIFICATION	4.961555995851047E-7	IMPLEMENTATION
(not (gt a b) ) => (le a b)	WITHOUT_CLASSIFICATION	0.9999623764256309	WITHOUT_CLASSIFICATION	3.762357436907874E-5	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9999611708815118	WITHOUT_CLASSIFICATION	3.882911848815835E-5	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998523335817365	WITHOUT_CLASSIFICATION	1.4766641826349672E-4	IMPLEMENTATION
sqlresulttypes = selectclause.getsqlresulttypes()	WITHOUT_CLASSIFICATION	0.999760200845213	WITHOUT_CLASSIFICATION	2.3979915478707586E-4	IMPLEMENTATION
by default	WITHOUT_CLASSIFICATION	0.9999959906869922	WITHOUT_CLASSIFICATION	4.009313007787476E-6	IMPLEMENTATION
this is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999951486444156	WITHOUT_CLASSIFICATION	4.851355584388927E-6	IMPLEMENTATION
-- loader implementation --	WITHOUT_CLASSIFICATION	0.9997344662993491	WITHOUT_CLASSIFICATION	2.655337006508343E-4	IMPLEMENTATION
-- loader overrides --	WITHOUT_CLASSIFICATION	0.9999155073878058	WITHOUT_CLASSIFICATION	8.44926121941931E-5	IMPLEMENTATION
(not (is_null a b) ) => (is_not_null a b)	WITHOUT_CLASSIFICATION	0.9999637472478423	WITHOUT_CLASSIFICATION	3.625275215780305E-5	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9993206411433582	WITHOUT_CLASSIFICATION	6.793588566418518E-4	IMPLEMENTATION
meant to handle dynamic instantiation queries	WITHOUT_CLASSIFICATION	0.9996763137921832	WITHOUT_CLASSIFICATION	3.236862078168061E-4	IMPLEMENTATION
--- query translator methods ---	WITHOUT_CLASSIFICATION	0.9999638256238317	WITHOUT_CLASSIFICATION	3.6174376168364297E-5	IMPLEMENTATION
-- implementation private methods --	WITHOUT_CLASSIFICATION	0.9999486309815477	WITHOUT_CLASSIFICATION	5.136901845231086E-5	IMPLEMENTATION
deduplicate unique constraints sharing the same columns this is needed by hibernate annotations since it creates automagically unique constraints for the user	WITHOUT_CLASSIFICATION	0.9946240123997749	WITHOUT_CLASSIFICATION	0.0053759876002249865	IMPLEMENTATION
try to find out the name of the primary key to create it as identity if the identitygenerator is used	WITHOUT_CLASSIFICATION	0.9999948001235709	WITHOUT_CLASSIFICATION	5.199876429013302E-6	IMPLEMENTATION
to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9963335312624407	WITHOUT_CLASSIFICATION	0.0036664687375592823	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999986433953039	WITHOUT_CLASSIFICATION	1.3566046962224058E-6	IMPLEMENTATION
used also for generation of fk names!	WITHOUT_CLASSIFICATION	0.9999869050682785	WITHOUT_CLASSIFICATION	1.3094931721447774E-5	IMPLEMENTATION
usually useless	WITHOUT_CLASSIFICATION	0.9997966771246475	WITHOUT_CLASSIFICATION	2.0332287535248717E-4	IMPLEMENTATION
added this caching as i noticed that gettype() is being called multiple times	WITHOUT_CLASSIFICATION	0.9999486967539848	WITHOUT_CLASSIFICATION	5.130324601528679E-5	IMPLEMENTATION
do not add unique constraint on db not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9913738669509325	WITHOUT_CLASSIFICATION	0.008626133049067444	IMPLEMENTATION
for backward compatibility disable this	WITHOUT_CLASSIFICATION	0.9997841258052929	WITHOUT_CLASSIFICATION	2.1587419470703675E-4	IMPLEMENTATION
may be final may be final may be final	WITHOUT_CLASSIFICATION	0.9997295865650602	WITHOUT_CLASSIFICATION	2.704134349398005E-4	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9994983874490554	WITHOUT_CLASSIFICATION	5.016125509446572E-4	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9994983874490554	WITHOUT_CLASSIFICATION	5.016125509446572E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999924068328114	WITHOUT_CLASSIFICATION	7.593167188620978E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999726445498809	WITHOUT_CLASSIFICATION	2.7355450119020908E-5	IMPLEMENTATION
the root of the incoming property path matched one of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999142467113943	WITHOUT_CLASSIFICATION	8.575328860570225E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9998857487838877	WITHOUT_CLASSIFICATION	1.1425121611226127E-4	IMPLEMENTATION
flat recursive algorithm	WITHOUT_CLASSIFICATION	0.99977198035086	WITHOUT_CLASSIFICATION	2.2801964913989552E-4	IMPLEMENTATION
an identifier mapper => getkey will be included in the getnonduplicatedpropertyiterator() and checked later so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999957300042279	WITHOUT_CLASSIFICATION	4.2699957721138346E-6	IMPLEMENTATION
if the hibernate-mapping did not specify a schema/catalog use the defaults specified by properties - but note that if the schema/catalog were specified in hibernate-mapping or as params they will already be initialized and will override the values set here (they are in identifiergeneratorproperties)	WITHOUT_CLASSIFICATION	0.9999998333318859	WITHOUT_CLASSIFICATION	1.6666811410160466E-7	IMPLEMENTATION
pass the entity-name if not a collection-id	WITHOUT_CLASSIFICATION	0.9995829865913679	WITHOUT_CLASSIFICATION	4.1701340863213826E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999924068328114	WITHOUT_CLASSIFICATION	7.593167188620978E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999726445498809	WITHOUT_CLASSIFICATION	2.7355450119020908E-5	IMPLEMENTATION
pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.999384828918823	WITHOUT_CLASSIFICATION	6.151710811771197E-4	IMPLEMENTATION
needed to satisfy keyvalue	WITHOUT_CLASSIFICATION	0.6160917298817631	IMPLEMENTATION	0.38390827011823686	WITHOUT_CLASSIFICATION
empty means no scoping	WITHOUT_CLASSIFICATION	0.9977424068113683	WITHOUT_CLASSIFICATION	0.0022575931886317023	IMPLEMENTATION
index should be last column listed	WITHOUT_CLASSIFICATION	0.9993280742522548	WITHOUT_CLASSIFICATION	6.719257477452238E-4	IMPLEMENTATION
if it is a formula index use the element columns in the pk	WITHOUT_CLASSIFICATION	0.9999995193449465	WITHOUT_CLASSIFICATION	4.806550534664185E-7	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns	WITHOUT_CLASSIFICATION	0.9985396635072726	WITHOUT_CLASSIFICATION	0.0014603364927273958	IMPLEMENTATION
arraylist list = new arraylist()list.addall( getkey().getconstraintcolumns() )list.addall( getindex().getconstraintcolumns() )getcollectiontable().createuniquekey(list)	WITHOUT_CLASSIFICATION	0.9998859474183289	WITHOUT_CLASSIFICATION	1.1405258167105962E-4	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999250990259764	WITHOUT_CLASSIFICATION	7.49009740235585E-5	IMPLEMENTATION
no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999956933423563	WITHOUT_CLASSIFICATION	4.3066576437965426E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.9287580344151484	WITHOUT_CLASSIFICATION	0.07124196558485166	IMPLEMENTATION
the case of a foreign key to something other than the pk is handled in createpropertyrefconstraints	WITHOUT_CLASSIFICATION	0.9999974048809267	WITHOUT_CLASSIFICATION	2.595119073419822E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.9287580344151484	WITHOUT_CLASSIFICATION	0.07124196558485166	IMPLEMENTATION
if the property mapping consists of all formulas make it non-updateable	WITHOUT_CLASSIFICATION	0.9998985085639309	WITHOUT_CLASSIFICATION	1.0149143606911229E-4	IMPLEMENTATION
columnupdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999029491233925	WITHOUT_CLASSIFICATION	9.70508766075029E-5	IMPLEMENTATION
if the property mapping consists of all formulas make it insertable	WITHOUT_CLASSIFICATION	0.9998985085639309	WITHOUT_CLASSIFICATION	1.0149143606911229E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998637368150539	WITHOUT_CLASSIFICATION	1.3626318494604412E-4	IMPLEMENTATION
expected type is intrinsic here	WITHOUT_CLASSIFICATION	0.9999335933758402	WITHOUT_CLASSIFICATION	6.640662415972929E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999250990259764	WITHOUT_CLASSIFICATION	7.49009740235585E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999250990259764	WITHOUT_CLASSIFICATION	7.49009740235585E-5	IMPLEMENTATION
return memberpersister.getpropertytype(propertyname)	WITHOUT_CLASSIFICATION	0.9999506273750659	WITHOUT_CLASSIFICATION	4.937262493409843E-5	IMPLEMENTATION
return memberpersister.tocolumns(alias propertyname)	WITHOUT_CLASSIFICATION	0.9999508427076584	WITHOUT_CLASSIFICATION	4.915729234157371E-5	IMPLEMENTATION
return memberpersister.gettype()	WITHOUT_CLASSIFICATION	0.9999506273750659	WITHOUT_CLASSIFICATION	4.937262493409843E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9998129423182495	WITHOUT_CLASSIFICATION	1.8705768175060944E-4	IMPLEMENTATION
return !isonetomany()	WITHOUT_CLASSIFICATION	0.9999487604776502	WITHOUT_CLASSIFICATION	5.123952234969761E-5	IMPLEMENTATION
instanceof associationtype	WITHOUT_CLASSIFICATION	0.9998959887326878	WITHOUT_CLASSIFICATION	1.0401126731212345E-4	IMPLEMENTATION
we need to determine the best way to know that two joinables represent a single many-to-many	WITHOUT_CLASSIFICATION	0.6806289786479393	WITHOUT_CLASSIFICATION	0.3193710213520608	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9998312652293981	WITHOUT_CLASSIFICATION	1.6873477060191285E-4	IMPLEMENTATION
public boolean issubselectloadable()	WITHOUT_CLASSIFICATION	0.9999872076697812	WITHOUT_CLASSIFICATION	1.2792330218758893E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999735329803568	WITHOUT_CLASSIFICATION	2.6467019643212122E-5	IMPLEMENTATION
columns	WITHOUT_CLASSIFICATION	0.9999928595387924	WITHOUT_CLASSIFICATION	7.140461207533102E-6	IMPLEMENTATION
sql statements	WITHOUT_CLASSIFICATION	0.9999586178980663	WITHOUT_CLASSIFICATION	4.138210193381464E-5	IMPLEMENTATION
extra information about the element type	WITHOUT_CLASSIFICATION	0.9999972128013191	WITHOUT_CLASSIFICATION	2.787198680933812E-6	IMPLEMENTATION
types	WITHOUT_CLASSIFICATION	0.9999039151605368	WITHOUT_CLASSIFICATION	9.608483946319084E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999924068328114	WITHOUT_CLASSIFICATION	7.593167188620978E-6	IMPLEMENTATION
private final string unquotedidentifiercolumnname	WITHOUT_CLASSIFICATION	0.9999743089044918	WITHOUT_CLASSIFICATION	2.5691095508285432E-5	IMPLEMENTATION
dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999741711411995	WITHOUT_CLASSIFICATION	2.5828858800589922E-5	IMPLEMENTATION
dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999711864720959	WITHOUT_CLASSIFICATION	2.881352790398912E-5	IMPLEMENTATION
nativesql collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999247122289787	WITHOUT_CLASSIFICATION	7.528777102124793E-5	IMPLEMENTATION
unquotedkeycolumnnames = stringhelper.unquote(keycolumnaliases)	WITHOUT_CLASSIFICATION	0.999760200845213	WITHOUT_CLASSIFICATION	2.3979915478707586E-4	IMPLEMENTATION
element	WITHOUT_CLASSIFICATION	0.9999888059111988	WITHOUT_CLASSIFICATION	1.1194088801286831E-5	IMPLEMENTATION
nativesql collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999681565302748	WITHOUT_CLASSIFICATION	3.184346972529223E-5	IMPLEMENTATION
index and row select	WITHOUT_CLASSIFICATION	0.9992691269280043	WITHOUT_CLASSIFICATION	7.308730719958204E-4	IMPLEMENTATION
nativesql collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9995342811691658	WITHOUT_CLASSIFICATION	4.6571883083421724E-4	IMPLEMENTATION
unquotedidentifiercolumnname = identifiercolumnalias	WITHOUT_CLASSIFICATION	0.999760200845213	WITHOUT_CLASSIFICATION	2.3979915478707586E-4	IMPLEMENTATION
unquotedidentifiercolumnname = null	WITHOUT_CLASSIFICATION	0.9998777850864055	WITHOUT_CLASSIFICATION	1.2221491359449757E-4	IMPLEMENTATION
generate the sql	WITHOUT_CLASSIFICATION	0.9999763576789982	WITHOUT_CLASSIFICATION	2.36423210018221E-5	IMPLEMENTATION
for non-arrays we don't need to know the element class elementtype.returnedclass()	WITHOUT_CLASSIFICATION	0.9974479992797853	WITHOUT_CLASSIFICATION	0.0025520007202147156	IMPLEMENTATION
not all classpersisters implement propertymapping!	WITHOUT_CLASSIFICATION	0.5943088222871371	WITHOUT_CLASSIFICATION	0.40569117771286295	IMPLEMENTATION
handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9998147761865511	WITHOUT_CLASSIFICATION	1.8522381344886015E-4	IMPLEMENTATION
handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999494487264134	WITHOUT_CLASSIFICATION	5.055127358650108E-5	IMPLEMENTATION
if there is a user-specified loader return that todo filters!?	WITHOUT_CLASSIFICATION	0.9897954563353781	WITHOUT_CLASSIFICATION	0.010204543664621807	IMPLEMENTATION
take care of any entities that might have been evicted!	WITHOUT_CLASSIFICATION	0.9998738245608855	WITHOUT_CLASSIFICATION	1.26175439114636E-4	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9998312652293981	WITHOUT_CLASSIFICATION	1.6873477060191285E-4	IMPLEMENTATION
run a subquery loader	WITHOUT_CLASSIFICATION	0.9999394365541898	WITHOUT_CLASSIFICATION	6.056344581005729E-5	IMPLEMENTATION
needed by arrays	WITHOUT_CLASSIFICATION	0.7261269764852238	IMPLEMENTATION	0.27387302351477616	WITHOUT_CLASSIFICATION
todo something with formulas	WITHOUT_CLASSIFICATION	0.8305539889213286	WITHOUT_CLASSIFICATION	0.16944601107867138	IMPLEMENTATION
an assertion	WITHOUT_CLASSIFICATION	0.9999572307177487	WITHOUT_CLASSIFICATION	4.2769282251353024E-5	IMPLEMENTATION
remove all the old entries	WITHOUT_CLASSIFICATION	0.999965093529943	WITHOUT_CLASSIFICATION	3.490647005700744E-5	IMPLEMENTATION
create all the new entries	WITHOUT_CLASSIFICATION	0.9999216762666492	WITHOUT_CLASSIFICATION	7.832373335079978E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9998129423182495	WITHOUT_CLASSIFICATION	1.8705768175060944E-4	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9998129423182495	WITHOUT_CLASSIFICATION	1.8705768175060944E-4	IMPLEMENTATION
delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9998283259538219	WITHOUT_CLASSIFICATION	1.7167404617818142E-4	IMPLEMENTATION
insert all the new entries	WITHOUT_CLASSIFICATION	0.9999355140518079	WITHOUT_CLASSIFICATION	6.448594819210021E-5	IMPLEMENTATION
==elementtype ??	WITHOUT_CLASSIFICATION	0.9988235446392046	WITHOUT_CLASSIFICATION	0.0011764553607953834	IMPLEMENTATION
update all the modified entries	WITHOUT_CLASSIFICATION	0.999890736960458	WITHOUT_CLASSIFICATION	1.09263039542E-4	IMPLEMENTATION
identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9993618738646655	WITHOUT_CLASSIFICATION	6.381261353345009E-4	IMPLEMENTATION
update removed rows fks to null	WITHOUT_CLASSIFICATION	0.999921648293162	WITHOUT_CLASSIFICATION	7.835170683806026E-5	IMPLEMENTATION
will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999213321540439	WITHOUT_CLASSIFICATION	7.86678459561436E-5	IMPLEMENTATION
now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999993834111737	WITHOUT_CLASSIFICATION	6.165888264451158E-7	IMPLEMENTATION
buf.append( selectfragment( lhsalias "" ) )ignore suffix for collection columns!	WITHOUT_CLASSIFICATION	0.9999643016772378	WITHOUT_CLASSIFICATION	3.569832276217225E-5	IMPLEMENTATION
use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999884307893958	WITHOUT_CLASSIFICATION	1.156921060428021E-5	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999697228806057	WITHOUT_CLASSIFICATION	3.027711939417491E-5	IMPLEMENTATION
private final string roottablename	WITHOUT_CLASSIFICATION	0.9999743089044918	WITHOUT_CLASSIFICATION	2.5691095508285432E-5	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9996134622262474	WITHOUT_CLASSIFICATION	3.8653777375262274E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999924068328114	WITHOUT_CLASSIFICATION	7.593167188620978E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999697228806057	WITHOUT_CLASSIFICATION	3.027711939417491E-5	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999759821787828	WITHOUT_CLASSIFICATION	2.4017821217222497E-5	IMPLEMENTATION
this could also just be true all the time	WITHOUT_CLASSIFICATION	0.9999556804710268	WITHOUT_CLASSIFICATION	4.431952897311695E-5	IMPLEMENTATION
chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999097914161831	WITHOUT_CLASSIFICATION	9.020858381694656E-5	IMPLEMENTATION
todo check this.	WITHOUT_CLASSIFICATION	0.7118748683184686	IMPLEMENTATION	0.28812513168153153	WITHOUT_CLASSIFICATION
initialization	WITHOUT_CLASSIFICATION	0.9996134622262474	WITHOUT_CLASSIFICATION	3.8653777375262274E-4	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9999367640345638	WITHOUT_CLASSIFICATION	6.323596543623047E-5	IMPLEMENTATION
the closure of all properties in the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999972158347458	WITHOUT_CLASSIFICATION	2.7841652541992864E-6	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.999993848782157	WITHOUT_CLASSIFICATION	6.151217842981547E-6	IMPLEMENTATION
subclass discrimination works by assigning particular values to certain combinations of null primary key values in the outer join using an sql case	WITHOUT_CLASSIFICATION	0.9999999981997922	WITHOUT_CLASSIFICATION	1.8002076908787909E-9	IMPLEMENTATION
multitables	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999924068328114	WITHOUT_CLASSIFICATION	7.593167188620978E-6	IMPLEMENTATION
subclass closure properties	WITHOUT_CLASSIFICATION	0.9999400146015927	WITHOUT_CLASSIFICATION	5.9985398407431695E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999740959592482	WITHOUT_CLASSIFICATION	2.5904040751742453E-5	IMPLEMENTATION
( (column) model.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999365480255092	WITHOUT_CLASSIFICATION	6.345197449074581E-5	IMPLEMENTATION
( (column) sc.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999365480255092	WITHOUT_CLASSIFICATION	6.345197449074581E-5	IMPLEMENTATION
don't need subclass tables because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999710368138396	WITHOUT_CLASSIFICATION	2.896318616042646E-5	IMPLEMENTATION
special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9895222565110328	WITHOUT_CLASSIFICATION	0.010477743488967232	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999697228806057	WITHOUT_CLASSIFICATION	3.027711939417491E-5	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9999367640345638	WITHOUT_CLASSIFICATION	6.323596543623047E-5	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.999993848782157	WITHOUT_CLASSIFICATION	6.151217842981547E-6	IMPLEMENTATION
get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999204026992321	WITHOUT_CLASSIFICATION	7.959730076790595E-5	IMPLEMENTATION
now look up the object we are really interested in! (this lets us correctly handle proxies and multi-row or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999436318927917	WITHOUT_CLASSIFICATION	5.6368107208397365E-5	IMPLEMENTATION
discriminator column	WITHOUT_CLASSIFICATION	0.9998321650012936	WITHOUT_CLASSIFICATION	1.67834998706507E-4	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9996134622262474	WITHOUT_CLASSIFICATION	3.8653777375262274E-4	IMPLEMENTATION
private final map propertytablenumbersbyname = new hashmap()	WITHOUT_CLASSIFICATION	0.9998711681365469	WITHOUT_CLASSIFICATION	1.288318634531365E-4	IMPLEMENTATION
class + table	WITHOUT_CLASSIFICATION	0.9999430594204733	WITHOUT_CLASSIFICATION	5.6940579526530734E-5	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9998105675173592	WITHOUT_CLASSIFICATION	1.894324826408023E-4	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999779203891159	WITHOUT_CLASSIFICATION	2.207961088413162E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999740959592482	WITHOUT_CLASSIFICATION	2.5904040751742453E-5	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999759821787828	WITHOUT_CLASSIFICATION	2.4017821217222497E-5	IMPLEMENTATION
joins	WITHOUT_CLASSIFICATION	0.9999634936910795	WITHOUT_CLASSIFICATION	3.650630892046718E-5	IMPLEMENTATION
propertytablenumbersbyname.put( prop.getname() join )	WITHOUT_CLASSIFICATION	0.9998192980097207	WITHOUT_CLASSIFICATION	1.8070199027929817E-4	IMPLEMENTATION
access cached sql	WITHOUT_CLASSIFICATION	0.9998874792105914	WITHOUT_CLASSIFICATION	1.125207894085641E-4	IMPLEMENTATION
figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9973315078631916	WITHOUT_CLASSIFICATION	0.0026684921368083448	IMPLEMENTATION
figure out which columns are needed	WITHOUT_CLASSIFICATION	0.6754514758097013	WITHOUT_CLASSIFICATION	0.32454852419029884	IMPLEMENTATION
figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.7107665304403437	IMPLEMENTATION	0.28923346955965634	WITHOUT_CLASSIFICATION
render the sql	WITHOUT_CLASSIFICATION	0.999960251670753	WITHOUT_CLASSIFICATION	3.9748329246895935E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998637368150539	WITHOUT_CLASSIFICATION	1.3626318494604412E-4	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999894406182507	WITHOUT_CLASSIFICATION	1.055938174931591E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
the optional sql string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999994134491633	WITHOUT_CLASSIFICATION	5.865508366689102E-7	IMPLEMENTATION
information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.999997768655806	WITHOUT_CLASSIFICATION	2.2313441940344176E-6	IMPLEMENTATION
information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999998240870388	WITHOUT_CLASSIFICATION	1.7591296124584497E-7	IMPLEMENTATION
information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999997090495134	WITHOUT_CLASSIFICATION	2.909504866833296E-7	IMPLEMENTATION
dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9998827583867683	WITHOUT_CLASSIFICATION	1.1724161323170515E-4	IMPLEMENTATION
sql strings	WITHOUT_CLASSIFICATION	0.9999285431352104	WITHOUT_CLASSIFICATION	7.145686478958277E-5	IMPLEMENTATION
for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999978783986194	WITHOUT_CLASSIFICATION	2.1216013806294464E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999779203891159	WITHOUT_CLASSIFICATION	2.207961088413162E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
identifier	WITHOUT_CLASSIFICATION	0.9999536718229212	WITHOUT_CLASSIFICATION	4.6328177078925736E-5	IMPLEMENTATION
version	WITHOUT_CLASSIFICATION	0.9999174931099742	WITHOUT_CLASSIFICATION	8.250689002571513E-5	IMPLEMENTATION
where string	WITHOUT_CLASSIFICATION	0.999916197949214	WITHOUT_CLASSIFICATION	8.380205078588916E-5	IMPLEMENTATION
subclass property closure	WITHOUT_CLASSIFICATION	0.9998726487067761	WITHOUT_CLASSIFICATION	1.2735129322400667E-4	IMPLEMENTATION
before add -)	WITHOUT_CLASSIFICATION	0.9998701293506652	WITHOUT_CLASSIFICATION	1.2987064933481124E-4	IMPLEMENTATION
handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999074124943308	WITHOUT_CLASSIFICATION	9.258750566919197E-5	IMPLEMENTATION
only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999038854397063	WITHOUT_CLASSIFICATION	9.611456029367954E-5	IMPLEMENTATION
note early exit here	WITHOUT_CLASSIFICATION	0.9999062456772557	WITHOUT_CLASSIFICATION	9.375432274436469E-5	IMPLEMENTATION
object have been loaded with setreadonly(true) hhh-2236	WITHOUT_CLASSIFICATION	0.9999716614652314	WITHOUT_CLASSIFICATION	2.8338534768586098E-5	IMPLEMENTATION
note this assumes something about how propertyselectfragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9793708599635099	WITHOUT_CLASSIFICATION	0.02062914003649008	IMPLEMENTATION
strip leading " "	WITHOUT_CLASSIFICATION	0.9997662809106188	WITHOUT_CLASSIFICATION	2.3371908938121065E-4	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999996335215733	WITHOUT_CLASSIFICATION	3.6647842668345214E-7	IMPLEMENTATION
otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9947706026245654	WITHOUT_CLASSIFICATION	0.005229397375434672	IMPLEMENTATION
null owner ok??	WITHOUT_CLASSIFICATION	0.9999466830173949	WITHOUT_CLASSIFICATION	5.3316982604996226E-5	IMPLEMENTATION
null sql means that the only lazy properties are shared pk one-to-one associations which are handled differently in the type#nullsafeget code	WITHOUT_CLASSIFICATION	0.9999993254340707	WITHOUT_CLASSIFICATION	6.745659292676384E-7	IMPLEMENTATION
create a new from node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999932852045127	WITHOUT_CLASSIFICATION	6.714795487241164E-6	IMPLEMENTATION
the difficulty here is exactly what do we update in order to force the version to be incremented in the db	WITHOUT_CLASSIFICATION	0.9995047292067011	WITHOUT_CLASSIFICATION	4.952707932989666E-4	IMPLEMENTATION
performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9991706914200729	WITHOUT_CLASSIFICATION	8.293085799272887E-4	IMPLEMENTATION
properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9993751959538917	WITHOUT_CLASSIFICATION	6.248040461083577E-4	IMPLEMENTATION
enable for hhh-440 which we don't like	WITHOUT_CLASSIFICATION	0.9975475273886787	WITHOUT_CLASSIFICATION	0.0024524726113213983	IMPLEMENTATION
aliases	WITHOUT_CLASSIFICATION	0.9999638833999595	WITHOUT_CLASSIFICATION	3.611660004063417E-5	IMPLEMENTATION
aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999023280853886	WITHOUT_CLASSIFICATION	9.767191461139353E-5	IMPLEMENTATION
aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999713928579225	WITHOUT_CLASSIFICATION	2.8607142077467998E-5	IMPLEMENTATION
fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999919255608015	WITHOUT_CLASSIFICATION	8.074439198495515E-6	IMPLEMENTATION
embedded composite ids ( alias.idname1 alias.idname2 )	WITHOUT_CLASSIFICATION	0.9996725405440126	WITHOUT_CLASSIFICATION	3.27459455987419E-4	IMPLEMENTATION
todo skip formulas?	WITHOUT_CLASSIFICATION	0.6628961525741214	IMPLEMENTATION	0.3371038474258786	WITHOUT_CLASSIFICATION
don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9996015699798794	WITHOUT_CLASSIFICATION	3.984300201207212E-4	IMPLEMENTATION
do two passes for collection property-ref!	WITHOUT_CLASSIFICATION	0.9996479151344204	WITHOUT_CLASSIFICATION	3.520848655796071E-4	IMPLEMENTATION
select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.999947800319438	WITHOUT_CLASSIFICATION	5.219968056213913E-5	IMPLEMENTATION
todo eventually rowidname[j]	WITHOUT_CLASSIFICATION	0.5672544506741083	WITHOUT_CLASSIFICATION	0.4327455493258916	IMPLEMENTATION
this is a property of the table which we are updating	WITHOUT_CLASSIFICATION	0.9999230918432714	WITHOUT_CLASSIFICATION	7.690815672855936E-5	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9998665612672754	WITHOUT_CLASSIFICATION	1.3343873272468485E-4	IMPLEMENTATION
we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.999978807541019	WITHOUT_CLASSIFICATION	2.1192458980982093E-5	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999995944452503	WITHOUT_CLASSIFICATION	4.0555474970855926E-7	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.99957982697331	WITHOUT_CLASSIFICATION	4.20173026689935E-4	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9998368942599155	WITHOUT_CLASSIFICATION	1.6310574008441154E-4	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9998675623592519	WITHOUT_CLASSIFICATION	1.3243764074808586E-4	IMPLEMENTATION
more specifically "? [op] datetime" 1) if the operator is minus the param needs to be of some datetime type 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9993739996435259	WITHOUT_CLASSIFICATION	6.260003564739777E-4	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9998368942599155	WITHOUT_CLASSIFICATION	1.6310574008441154E-4	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.99957982697331	WITHOUT_CLASSIFICATION	4.20173026689935E-4	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9998675623592519	WITHOUT_CLASSIFICATION	1.3243764074808586E-4	IMPLEMENTATION
add the primary key	WITHOUT_CLASSIFICATION	0.9999133361584494	WITHOUT_CLASSIFICATION	8.666384155070425E-5	IMPLEMENTATION
delegate already handles pk columns	WITHOUT_CLASSIFICATION	0.99999750903501	WITHOUT_CLASSIFICATION	2.490964989950962E-6	IMPLEMENTATION
we can't batch joined inserts especially not if it is an identity insert nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9968422636347033	WITHOUT_CLASSIFICATION	0.0031577363652968114	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.9999738913164995	WITHOUT_CLASSIFICATION	2.610868350050341E-5	IMPLEMENTATION
write the values of fields onto the prepared statement - we must use the state at the time the insert was issued (cos of foreign key constraints). not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999973848938698	WITHOUT_CLASSIFICATION	2.615106130129654E-6	IMPLEMENTATION
todo shouldnt inserts be expectations.none?	WITHOUT_CLASSIFICATION	0.7486729895264097	WITHOUT_CLASSIFICATION	0.2513270104735903	IMPLEMENTATION
don't bother trying to update we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9988896418462658	WITHOUT_CLASSIFICATION	0.001110358153734257	IMPLEMENTATION
if all fields are null we might need to delete existing row	WITHOUT_CLASSIFICATION	0.999994264881053	WITHOUT_CLASSIFICATION	5.7351189470375775E-6	IMPLEMENTATION
there is probably a row there so try to update if no rows were updated we will find out	WITHOUT_CLASSIFICATION	0.9999997280463364	WITHOUT_CLASSIFICATION	2.719536635869177E-7	IMPLEMENTATION
note updates to joined tables can't be batched	WITHOUT_CLASSIFICATION	0.9998143428431703	WITHOUT_CLASSIFICATION	1.8565715682963678E-4	IMPLEMENTATION
starting index	WITHOUT_CLASSIFICATION	0.9989594404217468	WITHOUT_CLASSIFICATION	0.001040559578253246	IMPLEMENTATION
now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999947444182904	WITHOUT_CLASSIFICATION	5.255581709668154E-6	IMPLEMENTATION
write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999589291720015	WITHOUT_CLASSIFICATION	4.1070827998483726E-5	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.9999738913164995	WITHOUT_CLASSIFICATION	2.610868350050341E-5	IMPLEMENTATION
do the key. the key is immutable so we can use the _current_ object state - not necessarily the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999970915791792	WITHOUT_CLASSIFICATION	2.908420820887292E-6	IMPLEMENTATION
we should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999068884576893	WITHOUT_CLASSIFICATION	9.311154231075449E-5	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9955702421462431	WITHOUT_CLASSIFICATION	0.004429757853756903	IMPLEMENTATION
note dirtyfields==null means we had no snapshot and we couldn't get one using select-before-update oldfields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyfields)	WITHOUT_CLASSIFICATION	0.9999908714539787	WITHOUT_CLASSIFICATION	9.128546021332753E-6	IMPLEMENTATION
more specifically "datetime [op] ?" 1) if the operator is minus we really cannot determine the expected type as either another datetime or numeric would be valid 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9999743332279181	WITHOUT_CLASSIFICATION	2.566677208187444E-5	IMPLEMENTATION
for the case of dynamic-update="true" we need to generate the update sql	WITHOUT_CLASSIFICATION	0.9999966514922622	WITHOUT_CLASSIFICATION	3.3485077377964784E-6	IMPLEMENTATION
don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9945457710281486	WITHOUT_CLASSIFICATION	0.0054542289718514285	IMPLEMENTATION
for the case of dynamic-update="false" or no snapshot we use the static sql	WITHOUT_CLASSIFICATION	0.9999964998037117	WITHOUT_CLASSIFICATION	3.5001962881980194E-6	IMPLEMENTATION
if not "get" then try "is"	WITHOUT_CLASSIFICATION	0.9994676128275588	WITHOUT_CLASSIFICATION	5.32387172441164E-4	IMPLEMENTATION
now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999408489887123	WITHOUT_CLASSIFICATION	5.915101128761055E-5	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999912838754925	WITHOUT_CLASSIFICATION	8.716124507462785E-6	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999912838754925	WITHOUT_CLASSIFICATION	8.716124507462785E-6	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999935646546391	WITHOUT_CLASSIFICATION	6.435345360909261E-6	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999935646546391	WITHOUT_CLASSIFICATION	6.435345360909261E-6	IMPLEMENTATION
not supported	WITHOUT_CLASSIFICATION	0.9973517587480746	WITHOUT_CLASSIFICATION	0.0026482412519255303	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9955702421462431	WITHOUT_CLASSIFICATION	0.004429757853756903	IMPLEMENTATION
we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9996963117418107	WITHOUT_CLASSIFICATION	3.036882581892961E-4	IMPLEMENTATION
otherwise utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9997561633265467	WITHOUT_CLASSIFICATION	2.438366734533495E-4	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999087317363621	WITHOUT_CLASSIFICATION	9.126826363790291E-5	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999087317363621	WITHOUT_CLASSIFICATION	9.126826363790291E-5	IMPLEMENTATION
all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999233422974726	WITHOUT_CLASSIFICATION	7.66577025273794E-5	IMPLEMENTATION
notice that we skip the first table it is the driving table!	WITHOUT_CLASSIFICATION	0.9994127589302558	WITHOUT_CLASSIFICATION	5.872410697442266E-4	IMPLEMENTATION
we can inner join to superclass tables (the row must be there) we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9968609261291784	WITHOUT_CLASSIFICATION	0.0031390738708216336	IMPLEMENTATION
skip the driving table	WITHOUT_CLASSIFICATION	0.9998448873500313	WITHOUT_CLASSIFICATION	1.551126499688272E-4	IMPLEMENTATION
get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999874981823557	WITHOUT_CLASSIFICATION	1.2501817644333788E-5	IMPLEMENTATION
here we work under the following assumptions ------------ valid cases -------------------------------------- 1) datetime + {something other than datetime} always results in a datetime ( db will catch invalid conversions ) 2) datetime - datetime always results in a double 3) datetime - {something other than datetime} always results in a datetime ( db will catch invalid conversions ) ------------ invalid cases ------------------------------------ 4) datetime + datetime 5) {something other than datetime} - datetime 6) datetime {any type} 7) datetime / {any type} 8) {any type} / datetime doing so allows us to properly handle parameters as either the left or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999999754784619	WITHOUT_CLASSIFICATION	2.4521538050064492E-8	IMPLEMENTATION
render the where and from parts	WITHOUT_CLASSIFICATION	0.9999605243965365	WITHOUT_CLASSIFICATION	3.947560346361604E-5	IMPLEMENTATION
we could regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999373917497835	WITHOUT_CLASSIFICATION	6.260825021652187E-5	IMPLEMENTATION
now render the joins	WITHOUT_CLASSIFICATION	0.9998079696698114	WITHOUT_CLASSIFICATION	1.920303301885252E-4	IMPLEMENTATION
this will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999860297189869	WITHOUT_CLASSIFICATION	1.397028101310286E-5	IMPLEMENTATION
now render the select clause	WITHOUT_CLASSIFICATION	0.9998061834798408	WITHOUT_CLASSIFICATION	1.938165201591757E-4	IMPLEMENTATION
now tie it all together	WITHOUT_CLASSIFICATION	0.9995857265743322	WITHOUT_CLASSIFICATION	4.1427342566776514E-4	IMPLEMENTATION
insert/update/delete sql	WITHOUT_CLASSIFICATION	0.9999753816543571	WITHOUT_CLASSIFICATION	2.461834564293928E-5	IMPLEMENTATION
select sql	WITHOUT_CLASSIFICATION	0.9999926814857107	WITHOUT_CLASSIFICATION	7.3185142892568805E-6	IMPLEMENTATION
no need to check laziness dirty checking handles that	WITHOUT_CLASSIFICATION	0.9843461922743102	WITHOUT_CLASSIFICATION	0.015653807725689913	IMPLEMENTATION
fully resolve the map reference create implicit joins.	WITHOUT_CLASSIFICATION	0.9999649958909826	WITHOUT_CLASSIFICATION	3.500410901733209E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999022350936658	WITHOUT_CLASSIFICATION	9.776490633406621E-5	IMPLEMENTATION
the basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.99871123293437	WITHOUT_CLASSIFICATION	0.001288767065630002	IMPLEMENTATION
for dialects which are known to not support ansi-sql row-value-constructor syntax we should mutate the tree.	WITHOUT_CLASSIFICATION	0.959074212689983	WITHOUT_CLASSIFICATION	0.04092578731001695	IMPLEMENTATION
due to the complexity in initializing the selectclause do not generate one here. if it is not found simply return null also do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999983219202476	WITHOUT_CLASSIFICATION	1.67807975234176E-6	IMPLEMENTATION
check the version unsaved-value if appropriate	WITHOUT_CLASSIFICATION	0.9998939553552348	WITHOUT_CLASSIFICATION	1.0604464476517837E-4	IMPLEMENTATION
let this take precedence if defined since it works for assigned identifiers	WITHOUT_CLASSIFICATION	0.9999990954667914	WITHOUT_CLASSIFICATION	9.045332084208476E-7	IMPLEMENTATION
check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9982151907718428	WITHOUT_CLASSIFICATION	0.0017848092281571176	IMPLEMENTATION
check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999981827882992	WITHOUT_CLASSIFICATION	1.8172117007992783E-6	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999861152765468	WITHOUT_CLASSIFICATION	1.3884723453167649E-5	IMPLEMENTATION
for property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999524942649801	WITHOUT_CLASSIFICATION	4.750573501985347E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999996335215733	WITHOUT_CLASSIFICATION	3.6647842668345214E-7	IMPLEMENTATION
force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999299786440715	WITHOUT_CLASSIFICATION	7.002135592855461E-5	IMPLEMENTATION
if this from element is a collection and the path is a collection property (maxindex etc.) then generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999994968442507	WITHOUT_CLASSIFICATION	5.03155749291808E-7	IMPLEMENTATION
entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998683780365583	WITHOUT_CLASSIFICATION	1.3162196344172755E-4	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.9999817025165592	WITHOUT_CLASSIFICATION	1.8297483440772285E-5	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.9999817025165592	WITHOUT_CLASSIFICATION	1.8297483440772285E-5	IMPLEMENTATION
only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999602860527137	WITHOUT_CLASSIFICATION	3.971394728628693E-5	IMPLEMENTATION
try "get"	WITHOUT_CLASSIFICATION	0.9999521550936827	WITHOUT_CLASSIFICATION	4.7844906317263546E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999909545686818	WITHOUT_CLASSIFICATION	9.045431318292047E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999909545686818	WITHOUT_CLASSIFICATION	9.045431318292047E-6	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9982917261698238	WITHOUT_CLASSIFICATION	0.0017082738301762036	IMPLEMENTATION
this page intentionally left blank )	WITHOUT_CLASSIFICATION	0.9997673631042515	WITHOUT_CLASSIFICATION	2.32636895748548E-4	IMPLEMENTATION
do not do anything	WITHOUT_CLASSIFICATION	0.9460047150474991	WITHOUT_CLASSIFICATION	0.05399528495250099	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999315861271421	WITHOUT_CLASSIFICATION	6.841387285803872E-5	IMPLEMENTATION
cant instantiate	WITHOUT_CLASSIFICATION	0.9998190977148959	WITHOUT_CLASSIFICATION	1.8090228510405696E-4	IMPLEMENTATION
if it is a property of an embedded component invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999985066751645	WITHOUT_CLASSIFICATION	1.4933248353711255E-6	IMPLEMENTATION
otherwise	WITHOUT_CLASSIFICATION	0.9996430470500725	WITHOUT_CLASSIFICATION	3.5695294992743403E-4	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.999878616778256	WITHOUT_CLASSIFICATION	1.2138322174399788E-4	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999124937170466	WITHOUT_CLASSIFICATION	8.750628295347148E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999124937170466	WITHOUT_CLASSIFICATION	8.750628295347148E-5	IMPLEMENTATION
hhh-2481 make sure the callback gets cleared otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999565643214599	WITHOUT_CLASSIFICATION	4.343567854015687E-5	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999308565190025	WITHOUT_CLASSIFICATION	6.91434809974636E-5	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999308565190025	WITHOUT_CLASSIFICATION	6.91434809974636E-5	IMPLEMENTATION
note interface is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999393295164857	WITHOUT_CLASSIFICATION	6.06704835142394E-5	IMPLEMENTATION
interfaces arguments	WITHOUT_CLASSIFICATION	0.9998509261413973	WITHOUT_CLASSIFICATION	1.490738586026366E-4	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
get the caller	WITHOUT_CLASSIFICATION	0.9999629273466414	WITHOUT_CLASSIFICATION	3.707265335871592E-5	IMPLEMENTATION
get the caller principals	WITHOUT_CLASSIFICATION	0.9999792632899943	WITHOUT_CLASSIFICATION	2.0736710005677345E-5	IMPLEMENTATION
private static final alias default_alias = new alias(10 null)	WITHOUT_CLASSIFICATION	0.9999196812994884	WITHOUT_CLASSIFICATION	8.03187005116391E-5	IMPLEMENTATION
needed to bump this up to dotnode because that is the only thing which currently knows about the property-ref path in the correct format it is either this or recurse over the dotnodes constructing the property path just like dotnode does internally	WITHOUT_CLASSIFICATION	0.9997780501283073	WITHOUT_CLASSIFICATION	2.2194987169262733E-4	IMPLEMENTATION
if the identifier is quoted remove the quotes	WITHOUT_CLASSIFICATION	0.9999955812256294	WITHOUT_CLASSIFICATION	4.418774370532388E-6	IMPLEMENTATION
truncate the identifier to the max alias length less the suffix length	WITHOUT_CLASSIFICATION	0.9999257335080384	WITHOUT_CLASSIFICATION	7.426649196156993E-5	IMPLEMENTATION
full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9983435665046384	WITHOUT_CLASSIFICATION	0.0016564334953616596	IMPLEMENTATION
null is not considered the same type as integer. $non-nls-1 $non-nls-1	WITHOUT_CLASSIFICATION	0.9985639005338598	WITHOUT_CLASSIFICATION	0.0014360994661401227	IMPLEMENTATION
the outerjoinsafterwhere needs to come before where clause to properly handle dynamic filters	WITHOUT_CLASSIFICATION	0.9965933657160885	WITHOUT_CLASSIFICATION	0.0034066342839114585	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999848831148417	WITHOUT_CLASSIFICATION	1.5116885158424296E-5	IMPLEMENTATION
if the condition is not already there	WITHOUT_CLASSIFICATION	0.9999709916151144	WITHOUT_CLASSIFICATION	2.9008384885618894E-5	IMPLEMENTATION
dontspace.add("'")	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
for mysql	WITHOUT_CLASSIFICATION	0.9999924062391178	WITHOUT_CLASSIFICATION	7.593760882213056E-6	IMPLEMENTATION
hashmap columnsunique = new hashmap()	WITHOUT_CLASSIFICATION	0.999871309593091	WITHOUT_CLASSIFICATION	1.2869040690898097E-4	IMPLEMENTATION
null caused some problems	WITHOUT_CLASSIFICATION	0.99984440873731	WITHOUT_CLASSIFICATION	1.5559126269009608E-4	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999473687648642	WITHOUT_CLASSIFICATION	5.263123513578086E-5	IMPLEMENTATION
not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999801335147587	WITHOUT_CLASSIFICATION	1.986648524129642E-5	IMPLEMENTATION
even on inverse="true"	WITHOUT_CLASSIFICATION	0.9997925429949811	WITHOUT_CLASSIFICATION	2.0745700501888318E-4	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999473687648642	WITHOUT_CLASSIFICATION	5.263123513578086E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999473687648642	WITHOUT_CLASSIFICATION	5.263123513578086E-5	IMPLEMENTATION
if true then execute db updates otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999943104715319	WITHOUT_CLASSIFICATION	5.689528468036724E-6	IMPLEMENTATION
we only release the connection	WITHOUT_CLASSIFICATION	0.9893093898256078	WITHOUT_CLASSIFICATION	0.010690610174392202	IMPLEMENTATION
deprecated option	WITHOUT_CLASSIFICATION	0.9998320425193177	WITHOUT_CLASSIFICATION	1.6795748068224503E-4	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999978364056584	WITHOUT_CLASSIFICATION	2.1635943416005354E-6	IMPLEMENTATION
actually this last test is probably unnecessary since beforecompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999999444657715	WITHOUT_CLASSIFICATION	5.553422848300886E-8	IMPLEMENTATION
this one only really needed for badly-behaved applications! (if the transactionmanager has a sychronization registered its a noop) (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9746990340819858	IMPLEMENTATION	0.02530096591801419	WITHOUT_CLASSIFICATION
create an dotnode ast for the path and resolve it.	WITHOUT_CLASSIFICATION	0.999988197768245	WITHOUT_CLASSIFICATION	1.1802231755129717E-5	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999978364056584	WITHOUT_CLASSIFICATION	2.1635943416005354E-6	IMPLEMENTATION
if we could not register a synchronization do the before/after completion callbacks ourself (but we need to let jdbccontext know that this is what we are going to do so it doesn't keep trying to register synchronizations)	WITHOUT_CLASSIFICATION	0.8697497467909153	IMPLEMENTATION	0.13025025320908473	WITHOUT_CLASSIFICATION
swallow it and continue to roll back jta transaction	WITHOUT_CLASSIFICATION	0.9982295983948262	WITHOUT_CLASSIFICATION	0.0017704016051738364	IMPLEMENTATION
so the transaction is already rolled back by jta spec	WITHOUT_CLASSIFICATION	0.9999716719944933	WITHOUT_CLASSIFICATION	2.8328005506632097E-5	IMPLEMENTATION
this method is a noop if there is a synchronization!	WITHOUT_CLASSIFICATION	0.9999921959124921	WITHOUT_CLASSIFICATION	7.804087507856293E-6	IMPLEMENTATION
two conditions where we need to transform this to a theta-join syntax 1) 'elem' is the "root from-element" in correlated subqueries 2) the dotnode.usethetastyleimplicitjoins has been set to true and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999822730138449	WITHOUT_CLASSIFICATION	1.7726986155044244E-5	IMPLEMENTATION
websphere however is not a sane jee/jta container	WITHOUT_CLASSIFICATION	0.998184942166202	WITHOUT_CLASSIFICATION	0.0018150578337979373	IMPLEMENTATION
for sane jee/jta containers the transaction itself functions as its identifier	WITHOUT_CLASSIFICATION	0.9999819842259062	WITHOUT_CLASSIFICATION	1.8015774093706283E-5	IMPLEMENTATION
swallow the transaction was finished	WITHOUT_CLASSIFICATION	0.999993360153845	WITHOUT_CLASSIFICATION	6.6398461550470385E-6	IMPLEMENTATION
all aliastoentitymapresulttransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999350831218664	WITHOUT_CLASSIFICATION	6.491687813358934E-5	IMPLEMENTATION
create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999880518571564	WITHOUT_CLASSIFICATION	1.194814284353317E-5	IMPLEMENTATION
all distinctrootentityresulttransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999350831218664	WITHOUT_CLASSIFICATION	6.491687813358934E-5	IMPLEMENTATION
map of entitymode -> tuplizer	WITHOUT_CLASSIFICATION	0.9999872543404325	WITHOUT_CLASSIFICATION	1.2745659567553998E-5	IMPLEMENTATION
this is a virtual id property	WITHOUT_CLASSIFICATION	0.9993018008409501	WITHOUT_CLASSIFICATION	6.981991590498336E-4	IMPLEMENTATION
this one needed only for guessentitymode()	WITHOUT_CLASSIFICATION	0.5742838986653248	WITHOUT_CLASSIFICATION	0.4257161013346752	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999858090557716	WITHOUT_CLASSIFICATION	1.4190944228398191E-5	IMPLEMENTATION
todo move this to sf per hhh-3517 also see hhh-1907 and componentmetamodel	WITHOUT_CLASSIFICATION	0.6198046327556156	WITHOUT_CLASSIFICATION	0.3801953672443844	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.999996317853072	WITHOUT_CLASSIFICATION	3.682146928089698E-6	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999525526945554	WITHOUT_CLASSIFICATION	4.744730544463848E-5	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999946060257613	WITHOUT_CLASSIFICATION	5.393974238735622E-6	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999525526945554	WITHOUT_CLASSIFICATION	4.744730544463848E-5	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9992187200794924	WITHOUT_CLASSIFICATION	7.812799205077063E-4	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999670474813059	WITHOUT_CLASSIFICATION	3.295251869399063E-5	IMPLEMENTATION
private final sessionfactoryimplementor sessionfactory	WITHOUT_CLASSIFICATION	0.9999250335871165	WITHOUT_CLASSIFICATION	7.496641288354201E-5	IMPLEMENTATION
cached for efficiency	WITHOUT_CLASSIFICATION	0.9999714362700935	WITHOUT_CLASSIFICATION	2.8563729906506178E-5	IMPLEMENTATION
public componentmetamodel(component component sessionfactoryimplementor sessionfactory) {	WITHOUT_CLASSIFICATION	0.9999886869918835	WITHOUT_CLASSIFICATION	1.131300811644185E-5	IMPLEMENTATION
this.sessionfactory = sessionfactory	WITHOUT_CLASSIFICATION	0.999760200845213	WITHOUT_CLASSIFICATION	2.3979915478707586E-4	IMPLEMENTATION
it was not embedded so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999845089599276	WITHOUT_CLASSIFICATION	1.54910400723646E-5	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.999996317853072	WITHOUT_CLASSIFICATION	3.682146928089698E-6	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999946060257613	WITHOUT_CLASSIFICATION	5.393974238735622E-6	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9992187200794924	WITHOUT_CLASSIFICATION	7.812799205077063E-4	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9999056745735188	WITHOUT_CLASSIFICATION	9.432542648121043E-5	IMPLEMENTATION
return currentid	WITHOUT_CLASSIFICATION	0.9999083972624424	WITHOUT_CLASSIFICATION	9.16027375576431E-5	IMPLEMENTATION
reset the id	WITHOUT_CLASSIFICATION	0.9972065905980916	WITHOUT_CLASSIFICATION	0.0027934094019083874	IMPLEMENTATION
origin.adddestination( destination ) this was the cause of hhh-242 origin.settype( from_fragment ) set the parent node type so that the ast is properly formed. the destination node will have all the from text. the parent node is a collection join too (voodoo - see joinprocessor)	WITHOUT_CLASSIFICATION	0.9999964966053246	WITHOUT_CLASSIFICATION	3.503394675416973E-6	IMPLEMENTATION
reset the version	WITHOUT_CLASSIFICATION	0.9988973189345167	WITHOUT_CLASSIFICATION	0.0011026810654833012	IMPLEMENTATION
the default is to simply not lazy fetch properties for now	WITHOUT_CLASSIFICATION	0.9998985370838928	WITHOUT_CLASSIFICATION	1.0146291610715555E-4	IMPLEMENTATION
add the second join the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999630064191054	WITHOUT_CLASSIFICATION	3.69935808945054E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999022350936658	WITHOUT_CLASSIFICATION	9.776490633406621E-5	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999670474813059	WITHOUT_CLASSIFICATION	3.295251869399063E-5	IMPLEMENTATION
determine the id getter and setter methods from the proxy interface (if any) determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9549671822758397	IMPLEMENTATION	0.04503281772416033	WITHOUT_CLASSIFICATION
return getfactory().getsettings().getbytecodeprovider().getproxyfactoryfactory().buildproxyfactory()	WITHOUT_CLASSIFICATION	0.9999506273750659	WITHOUT_CLASSIFICATION	4.937262493409843E-5	IMPLEMENTATION
not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.992239313827219	WITHOUT_CLASSIFICATION	0.007760686172781108	IMPLEMENTATION
superclass entity-name	WITHOUT_CLASSIFICATION	0.9999224134098825	WITHOUT_CLASSIFICATION	7.758659011744704E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999022350936658	WITHOUT_CLASSIFICATION	9.776490633406621E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
init the aliases after initing the constructornode	WITHOUT_CLASSIFICATION	0.9998807709717156	WITHOUT_CLASSIFICATION	1.1922902828442154E-4	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999022350936658	WITHOUT_CLASSIFICATION	9.776490633406621E-5	IMPLEMENTATION
legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.999945700431901	WITHOUT_CLASSIFICATION	5.429956809897939E-5	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9997997198637164	WITHOUT_CLASSIFICATION	2.0028013628357584E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
note this affects the return value!	WITHOUT_CLASSIFICATION	0.9998729323818574	WITHOUT_CLASSIFICATION	1.2706761814269924E-4	IMPLEMENTATION
need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9995201927154691	WITHOUT_CLASSIFICATION	4.798072845308996E-4	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999347815523987	WITHOUT_CLASSIFICATION	6.521844760136085E-5	IMPLEMENTATION
collection types	WITHOUT_CLASSIFICATION	0.9994320686139022	WITHOUT_CLASSIFICATION	5.679313860976978E-4	IMPLEMENTATION
convenience methods relating to operations across arrays of types	WITHOUT_CLASSIFICATION	0.9996327304704055	WITHOUT_CLASSIFICATION	3.6726952959457385E-4	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.999988679205665	WITHOUT_CLASSIFICATION	1.1320794334942027E-5	IMPLEMENTATION
blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9994594989916425	WITHOUT_CLASSIFICATION	5.405010083573867E-4	IMPLEMENTATION
value is the entity name	WITHOUT_CLASSIFICATION	0.9999729409810817	WITHOUT_CLASSIFICATION	2.705901891840776E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.999907570057376	WITHOUT_CLASSIFICATION	9.242994262406018E-5	IMPLEMENTATION
generate id select fragment and then property select fragment for each expression just like generateselectfragments().	WITHOUT_CLASSIFICATION	0.9965094331672134	WITHOUT_CLASSIFICATION	0.003490566832786624	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
xml is the entity name	WITHOUT_CLASSIFICATION	0.9999304514337629	WITHOUT_CLASSIFICATION	6.95485662370272E-5	IMPLEMENTATION
special case this is the leaf of the containment graph even though not immutable	WITHOUT_CLASSIFICATION	0.9992540873308806	WITHOUT_CLASSIFICATION	7.459126691193871E-4	IMPLEMENTATION
tolerates nulls	WITHOUT_CLASSIFICATION	0.9998484296696121	WITHOUT_CLASSIFICATION	1.5157033038783996E-4	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
metatype is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999165035306786	WITHOUT_CLASSIFICATION	8.349646932135789E-5	IMPLEMENTATION
get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999711787979397	WITHOUT_CLASSIFICATION	2.8821202060288305E-5	IMPLEMENTATION
look through the fromelement's children to find any collections of values that should be fetched	WITHOUT_CLASSIFICATION	0.9996258646495775	WITHOUT_CLASSIFICATION	3.741353504225136E-4	IMPLEMENTATION
return associationtype.foreign_key_to_parent this is better but causes a transient object exception	WITHOUT_CLASSIFICATION	0.9999992379506786	WITHOUT_CLASSIFICATION	7.620493215023745E-7	IMPLEMENTATION
use the lower case function name. remember whether we're in a select clause or not.	WITHOUT_CLASSIFICATION	0.9999984814173393	WITHOUT_CLASSIFICATION	1.5185826606908377E-6	IMPLEMENTATION
ident might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999736527458072	WITHOUT_CLASSIFICATION	2.634725419271487E-5	IMPLEMENTATION
todo!!!	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
st.settimestamp( index new timestamp( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9991702147595819	WITHOUT_CLASSIFICATION	8.297852404181477E-4	IMPLEMENTATION
st.setdate( index new date( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9991702147595819	WITHOUT_CLASSIFICATION	8.297852404181477E-4	IMPLEMENTATION
both are timestamps	WITHOUT_CLASSIFICATION	0.9999210909593468	WITHOUT_CLASSIFICATION	7.890904065321377E-5	IMPLEMENTATION
at least one is a plain old date	WITHOUT_CLASSIFICATION	0.9999692386926313	WITHOUT_CLASSIFICATION	3.0761307368556055E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999635460642358	WITHOUT_CLASSIFICATION	3.645393576419916E-5	IMPLEMENTATION
if the corresponding sql value is null the reader we got is null as well	WITHOUT_CLASSIFICATION	0.9999999185131259	WITHOUT_CLASSIFICATION	8.148687404207532E-8	IMPLEMENTATION
fetch reader content up to the end - and put characters in a stringbuffer	WITHOUT_CLASSIFICATION	0.9997679235980785	WITHOUT_CLASSIFICATION	2.3207640192149354E-4	IMPLEMENTATION
return stringbuffer content as a large string	WITHOUT_CLASSIFICATION	0.9997385833615843	WITHOUT_CLASSIFICATION	2.614166384157217E-4	IMPLEMENTATION
or types.longvarchar?	WITHOUT_CLASSIFICATION	0.9999353260939234	WITHOUT_CLASSIFICATION	6.467390607665928E-5	IMPLEMENTATION
not called at runtime so doesn't matter if its slow )	WITHOUT_CLASSIFICATION	0.9999688524700507	WITHOUT_CLASSIFICATION	3.114752994924807E-5	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.8465197101873373	WITHOUT_CLASSIFICATION	0.1534802898126627	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999685680475617	WITHOUT_CLASSIFICATION	3.143195243830746E-5	IMPLEMENTATION
different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999665927004595	WITHOUT_CLASSIFICATION	3.3407299540531194E-5	IMPLEMENTATION
cache this	WITHOUT_CLASSIFICATION	0.9998975856967093	WITHOUT_CLASSIFICATION	1.0241430329073641E-4	IMPLEMENTATION
only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9995454153403011	WITHOUT_CLASSIFICATION	4.545846596989405E-4	IMPLEMENTATION
forcefully remove leading ands from where fragments the grammar will handle adding them	WITHOUT_CLASSIFICATION	0.9999793490747315	WITHOUT_CLASSIFICATION	2.0650925268508927E-5	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
create a new filters node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999291244564291	WITHOUT_CLASSIFICATION	7.087554357086742E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
public object instantiate(object parent sessionimplementor session) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999784419817865	WITHOUT_CLASSIFICATION	2.155801821346456E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999297080521495	WITHOUT_CLASSIFICATION	7.029194785052346E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999297080521495	WITHOUT_CLASSIFICATION	7.029194785052346E-5	IMPLEMENTATION
versiontype impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ note simply returns null for seed() and next() as the only known application of binary types for versioning is for use with the timestamp datatype supported by sybase and sql server which are completely db-generated values	WITHOUT_CLASSIFICATION	0.9999809456170836	WITHOUT_CLASSIFICATION	1.9054382916310548E-5	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.999988679205665	WITHOUT_CLASSIFICATION	1.1320794334942027E-5	IMPLEMENTATION
not really necessary i guess	WITHOUT_CLASSIFICATION	0.9837240688663617	WITHOUT_CLASSIFICATION	0.016275931133638375	IMPLEMENTATION
clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9998927950189398	WITHOUT_CLASSIFICATION	1.0720498106018064E-4	IMPLEMENTATION
we do not have to worry about queued additions to uninitialized collections since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.998634336207831	WITHOUT_CLASSIFICATION	0.0013656637921689676	IMPLEMENTATION
collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999854094786944	WITHOUT_CLASSIFICATION	1.4590521305560838E-5	IMPLEMENTATION
remember the uk value	WITHOUT_CLASSIFICATION	0.9998405490374557	WITHOUT_CLASSIFICATION	1.594509625442896E-4	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999635460642358	WITHOUT_CLASSIFICATION	3.645393576419916E-5	IMPLEMENTATION
processcollectionproperty(token q.getcollectionpersister(collectionrole) collectionname)	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
we must use the "remembered" uk value since it is not available from the entityentry during assembly	WITHOUT_CLASSIFICATION	0.9997032250732122	WITHOUT_CLASSIFICATION	2.9677492678781346E-4	IMPLEMENTATION
collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9994861035522787	WITHOUT_CLASSIFICATION	5.13896447721338E-4	IMPLEMENTATION
return false	WITHOUT_CLASSIFICATION	0.9999559368430797	WITHOUT_CLASSIFICATION	4.406315692028539E-5	IMPLEMENTATION
this just handles a particular case of component projection perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999977115638126	WITHOUT_CLASSIFICATION	2.2884361874146015E-6	IMPLEMENTATION
note we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999959840339513	WITHOUT_CLASSIFICATION	4.0159660487264915E-6	IMPLEMENTATION
the key is the owning entity itself so get the id from the key	WITHOUT_CLASSIFICATION	0.9999935249508666	WITHOUT_CLASSIFICATION	6.475049133399495E-6	IMPLEMENTATION
if the original is a persistentcollection and that original was not flagged as dirty then reset the target's dirty flag here after the copy operation. </p> one thing to be careful of here is a "bare" original collection in which case we should never ever ever reset the dirty flag on the target because we simply do not know	WITHOUT_CLASSIFICATION	0.734934843486473	WITHOUT_CLASSIFICATION	0.2650651565135271	IMPLEMENTATION
ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9998104724907485	WITHOUT_CLASSIFICATION	1.89527509251606E-4	IMPLEMENTATION
copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.998759055401091	WITHOUT_CLASSIFICATION	0.0012409445989090817	IMPLEMENTATION
for a null target or a target which is the same as the original we need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999886706257121	WITHOUT_CLASSIFICATION	1.1329374288007485E-5	IMPLEMENTATION
by default just use an unanticipated capacity since we don't know how to extract the capacity to use from original here	WITHOUT_CLASSIFICATION	0.9989684790167731	WITHOUT_CLASSIFICATION	0.001031520983226906	IMPLEMENTATION
get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.995824482067048	WITHOUT_CLASSIFICATION	0.004175517932951948	IMPLEMENTATION
check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999979655863619	WITHOUT_CLASSIFICATION	2.03441363818193E-6	IMPLEMENTATION
check if it is already completely loaded but unowned	WITHOUT_CLASSIFICATION	0.9999992155514787	WITHOUT_CLASSIFICATION	7.844485213073654E-7	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9969213452776561	WITHOUT_CLASSIFICATION	0.003078654722343819	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
create a new collection wrapper to be initialized later	WITHOUT_CLASSIFICATION	0.9998136603587842	WITHOUT_CLASSIFICATION	1.863396412158176E-4	IMPLEMENTATION
some jdbc drivers erroneously return an empty array here for a null db value /	WITHOUT_CLASSIFICATION	0.999993129877291	WITHOUT_CLASSIFICATION	6.870122708935645E-6	IMPLEMENTATION
our column span is the number of columns in the pk	WITHOUT_CLASSIFICATION	0.9999998961166109	WITHOUT_CLASSIFICATION	1.0388338912070474E-7	IMPLEMENTATION
cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999863428009835	WITHOUT_CLASSIFICATION	1.3657199016375824E-5	IMPLEMENTATION
we already know current is not null	WITHOUT_CLASSIFICATION	0.9727320003284858	WITHOUT_CLASSIFICATION	0.02726799967151414	IMPLEMENTATION
the ids are fully resolved so compare them with isdirty() not ismodified()	WITHOUT_CLASSIFICATION	0.9990850030180765	WITHOUT_CLASSIFICATION	9.149969819235115E-4	IMPLEMENTATION
the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9969040275600434	WITHOUT_CLASSIFICATION	0.003095972439956578	IMPLEMENTATION
----------------------------------------------------------- constructors	WITHOUT_CLASSIFICATION	0.9997437635399617	WITHOUT_CLASSIFICATION	2.5623646003814746E-4	IMPLEMENTATION
----------------------------------------------------- instance variables	WITHOUT_CLASSIFICATION	0.9999521391571677	WITHOUT_CLASSIFICATION	4.786084283222317E-5	IMPLEMENTATION
public static jdbcexception newjdbcexception(string string sqlexception root string sql) { string = string + " [" + sql + ']' log.error(string root) logexceptions(root) return new jdbcexception(string root sql) } public static jdbcexception newjdbcexception(string string sqlexception root) { log.error(string root) logexceptions(root) return new jdbcexception(string root) }	WITHOUT_CLASSIFICATION	0.9999915895267945	WITHOUT_CLASSIFICATION	8.410473205511968E-6	IMPLEMENTATION
--------------------------------------------------------- public methods	WITHOUT_CLASSIFICATION	0.9999909266907334	WITHOUT_CLASSIFICATION	9.073309266585395E-6	IMPLEMENTATION
compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999049554735848	WITHOUT_CLASSIFICATION	9.504452641508366E-5	IMPLEMENTATION
simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9995233219896371	WITHOUT_CLASSIFICATION	4.7667801036286385E-4	IMPLEMENTATION
sybase fail if we don't do that sigh	WITHOUT_CLASSIFICATION	0.9998355258587796	WITHOUT_CLASSIFICATION	1.6447414122046396E-4	IMPLEMENTATION
handles things like a and b or c a and ( b or c ) not a and not b not ( a and b ) x between y and z (overloaded "and") x in ( a b c ) (overloaded brackets) not not a a is not null (overloaded "not") etc and expressions like foo = bar (maps to foo.id = bar.id) foo.bar = 'foo' (maps to foo.bar = 'foo') foo.bar.baz = 1.0 (maps to foo.bar = bar.id and bar.baz = 1.0) 1.0 = foo.bar.baz (maps to bar.baz = 1.0 and foo.bar = bar.id) foo.bar.baz = a.b.c (maps to bar.baz = b.c and foo.bar = bar.id and a.b = b.id) foo.bar.baz + a.b.c (maps to bar.baz + b.c and foo.bar = bar.id and a.b = b.id) ( foo.bar.baz + 1.0 ) < 2.0 (maps to ( bar.baz + 1.0 ) < 2.0 and foo.bar = bar.id)	WITHOUT_CLASSIFICATION	0.9995776113221805	WITHOUT_CLASSIFICATION	4.223886778194947E-4	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9995895883933908	WITHOUT_CLASSIFICATION	4.104116066091811E-4	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9995895883933908	WITHOUT_CLASSIFICATION	4.104116066091811E-4	IMPLEMENTATION
try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9996527644274757	WITHOUT_CLASSIFICATION	3.4723557252425163E-4	IMPLEMENTATION
otherwise just dump it	WITHOUT_CLASSIFICATION	0.9992501954734049	WITHOUT_CLASSIFICATION	7.498045265951149E-4	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999856611669576	WITHOUT_CLASSIFICATION	1.4338833042398028E-5	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999856611669576	WITHOUT_CLASSIFICATION	1.4338833042398028E-5	IMPLEMENTATION
use default behavior	WITHOUT_CLASSIFICATION	0.9999660513736793	WITHOUT_CLASSIFICATION	3.3948626320631556E-5	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999543979117881	WITHOUT_CLASSIFICATION	4.5602088211969726E-5	IMPLEMENTATION
the mru cache used to keep hard references to the most recently used query plans note lru here is a bit of a misnomer it indicates that lru entries are removed the actual kept entries are the mru entries	WITHOUT_CLASSIFICATION	0.9986608633864236	WITHOUT_CLASSIFICATION	0.0013391366135763842	IMPLEMENTATION
we want to be able to just use the defaults if jndi environment properties are not supplied so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999704406072962	WITHOUT_CLASSIFICATION	2.9559392703780203E-5	IMPLEMENTATION
clone -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999921093794685	WITHOUT_CLASSIFICATION	7.890620531551967E-6	IMPLEMENTATION
serialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999944872196719	WITHOUT_CLASSIFICATION	5.512780328135924E-6	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999944872196719	WITHOUT_CLASSIFICATION	5.512780328135924E-6	IMPLEMENTATION
deserialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
static methods only - hide constructor	WITHOUT_CLASSIFICATION	0.9998477373670818	WITHOUT_CLASSIFICATION	1.5226263291819833E-4	IMPLEMENTATION
&& !('_'==character)	WITHOUT_CLASSIFICATION	0.9998129423182495	WITHOUT_CLASSIFICATION	1.8705768175060944E-4	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
includes last '.'	WITHOUT_CLASSIFICATION	0.9998226156849975	WITHOUT_CLASSIFICATION	1.7738431500232722E-4	IMPLEMENTATION
+1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999466684999164	WITHOUT_CLASSIFICATION	5.3331500083679194E-5	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9998255643931313	WITHOUT_CLASSIFICATION	1.744356068687445E-4	IMPLEMENTATION
first time we find match!	WITHOUT_CLASSIFICATION	0.9996755179718787	WITHOUT_CLASSIFICATION	3.2448202812136143E-4	IMPLEMENTATION
entitynames may now include slashes for the representations classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999987473936169	WITHOUT_CLASSIFICATION	1.2526063831602381E-6	IMPLEMENTATION
wrapped iterators	WITHOUT_CLASSIFICATION	0.9997701987670401	WITHOUT_CLASSIFICATION	2.2980123295995272E-4	IMPLEMENTATION
index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999554487538608	WITHOUT_CLASSIFICATION	4.455124613930419E-5	IMPLEMENTATION
the current iterator	WITHOUT_CLASSIFICATION	0.9995871148362137	WITHOUT_CLASSIFICATION	4.128851637863728E-4	IMPLEMENTATION
the last used iterator	WITHOUT_CLASSIFICATION	0.9999179134845901	WITHOUT_CLASSIFICATION	8.208651540985607E-5	IMPLEMENTATION
it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999644128069852	WITHOUT_CLASSIFICATION	3.5587193014757196E-5	IMPLEMENTATION
public static object[] clone(class elementclass object[] array) {object[] result = (object[]) array.newinstance( elementclass array.length )system.arraycopy(array 0 result 0 array.length)return result}	WITHOUT_CLASSIFICATION	0.999976074559717	WITHOUT_CLASSIFICATION	2.392544028288606E-5	IMPLEMENTATION
call this before any iterator method to make sure that the current iterator is not exhausted	WITHOUT_CLASSIFICATION	0.9093679382645107	WITHOUT_CLASSIFICATION	0.09063206173548932	IMPLEMENTATION
doable if needed	WITHOUT_CLASSIFICATION	0.8084108082426541	WITHOUT_CLASSIFICATION	0.19158919175734596	IMPLEMENTATION
set last used iterator here in case the user calls remove before calling hasnext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.999984366434766	WITHOUT_CLASSIFICATION	1.5633565233968515E-5	IMPLEMENTATION
peek ahead	WITHOUT_CLASSIFICATION	0.999963565114395	WITHOUT_CLASSIFICATION	3.6434885604951424E-5	IMPLEMENTATION
if we reach the end of the string w/o finding the matching end that is an exception	WITHOUT_CLASSIFICATION	0.9999982315528958	WITHOUT_CLASSIFICATION	1.7684471042366695E-6	IMPLEMENTATION
we have a placeholder spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9994719795498082	WITHOUT_CLASSIFICATION	5.280204501918826E-4	IMPLEMENTATION
make sure spinning forward did not put us past the end of the buffer	WITHOUT_CLASSIFICATION	0.971952802109273	WITHOUT_CLASSIFICATION	0.02804719789072698	IMPLEMENTATION
first try to locate this resource through the current context classloader.	WITHOUT_CLASSIFICATION	0.9977548406147524	WITHOUT_CLASSIFICATION	0.002245159385247666	IMPLEMENTATION
next try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9991612174393646	WITHOUT_CLASSIFICATION	8.387825606354427E-4	IMPLEMENTATION
next try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9973601163202257	WITHOUT_CLASSIFICATION	0.0026398836797743228	IMPLEMENTATION
anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9997015439582113	WITHOUT_CLASSIFICATION	2.984560417887409E-4	IMPLEMENTATION
would need an identityset for this!	WITHOUT_CLASSIFICATION	0.9998253921255474	WITHOUT_CLASSIFICATION	1.7460787445248443E-4	IMPLEMENTATION
arrays.aslist doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9998942428347092	WITHOUT_CLASSIFICATION	1.057571652909125E-4	IMPLEMENTATION
faster?	WITHOUT_CLASSIFICATION	0.99996348204549	WITHOUT_CLASSIFICATION	3.651795450995116E-5	IMPLEMENTATION
the name of a class	WITHOUT_CLASSIFICATION	0.9999679411484719	WITHOUT_CLASSIFICATION	3.205885152821003E-5	IMPLEMENTATION
its the listener class name	WITHOUT_CLASSIFICATION	0.9999269462190675	WITHOUT_CLASSIFICATION	7.305378093242038E-5	IMPLEMENTATION
allow 987654321	WITHOUT_CLASSIFICATION	0.9994487634847158	WITHOUT_CLASSIFICATION	5.512365152842552E-4	IMPLEMENTATION
default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999993154768821	WITHOUT_CLASSIFICATION	6.845231177359525E-7	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999587373190288	WITHOUT_CLASSIFICATION	4.126268097120889E-5	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999996435152537	WITHOUT_CLASSIFICATION	3.5648474625895744E-7	IMPLEMENTATION
first lets determine whether to apply cglib or javassist based instrumentation	WITHOUT_CLASSIFICATION	0.9999878226800579	WITHOUT_CLASSIFICATION	1.2177319942010668E-5	IMPLEMENTATION
make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9998925705467769	WITHOUT_CLASSIFICATION	1.0742945322300739E-4	IMPLEMENTATION
entirely optional!!	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9997527479374096	WITHOUT_CLASSIFICATION	2.472520625903226E-4	IMPLEMENTATION
context.unbind(boundname)	WITHOUT_CLASSIFICATION	0.9998940102578118	WITHOUT_CLASSIFICATION	1.0598974218819274E-4	IMPLEMENTATION
readresolveobject	WITHOUT_CLASSIFICATION	0.9998105264968471	WITHOUT_CLASSIFICATION	1.8947350315296583E-4	IMPLEMENTATION
cfg.setproperty("hibernate.show_sql" "true")	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
defensive convenience methods	WITHOUT_CLASSIFICATION	0.9999366873219352	WITHOUT_CLASSIFICATION	6.331267806475989E-5	IMPLEMENTATION
create the sessionfactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999830128011384	WITHOUT_CLASSIFICATION	1.6987198861524E-5	IMPLEMENTATION
make sure you log the exception as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999596521209867	WITHOUT_CLASSIFICATION	4.034787901322794E-5	IMPLEMENTATION
begin unit of work	WITHOUT_CLASSIFICATION	0.999705565006863	WITHOUT_CLASSIFICATION	2.9443499313696513E-4	IMPLEMENTATION
write html header	WITHOUT_CLASSIFICATION	0.9998956266074696	WITHOUT_CLASSIFICATION	1.043733925303761E-4	IMPLEMENTATION
handle actions	WITHOUT_CLASSIFICATION	0.9996550422922126	WITHOUT_CLASSIFICATION	3.449577077874178E-4	IMPLEMENTATION
print page	WITHOUT_CLASSIFICATION	0.9999857313088927	WITHOUT_CLASSIFICATION	1.4268691107255011E-5	IMPLEMENTATION
write html footer	WITHOUT_CLASSIFICATION	0.9998578160551546	WITHOUT_CLASSIFICATION	1.4218394484553364E-4	IMPLEMENTATION
end unit of work	WITHOUT_CLASSIFICATION	0.9993446444667928	WITHOUT_CLASSIFICATION	6.553555332072097E-4	IMPLEMENTATION
start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999645188315074	WITHOUT_CLASSIFICATION	3.548116849270184E-5	IMPLEMENTATION
make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9988859978584563	WITHOUT_CLASSIFICATION	0.001114002141543567	IMPLEMENTATION
pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9994374845040427	WITHOUT_CLASSIFICATION	5.625154959573613E-4	IMPLEMENTATION
remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999747900496359	WITHOUT_CLASSIFICATION	2.520995036409623E-5	IMPLEMENTATION
eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9996096363323923	WITHOUT_CLASSIFICATION	3.9036366760763016E-4	IMPLEMENTATION
if we want to handle it bidirectional and detached we also need to load this collection with an eager outer-join fetch this time with criteria and not hql	WITHOUT_CLASSIFICATION	0.9308503869736517	WITHOUT_CLASSIFICATION	0.06914961302634821	IMPLEMENTATION
event anevent = (event) session .createcriteria(event.class).setfetchmode("participants" fetchmode.join) .add( expression.eq("id" eventid) ) .uniqueresult() eager fetch the colleciton so we can use it detached	WITHOUT_CLASSIFICATION	0.9978813926315008	WITHOUT_CLASSIFICATION	0.002118607368499184	IMPLEMENTATION
end of first unit of work	WITHOUT_CLASSIFICATION	0.9995823716649898	WITHOUT_CLASSIFICATION	4.176283350102779E-4	IMPLEMENTATION
or bidirectional safety method setting both sides aperson.addtoevent(anevent)	WITHOUT_CLASSIFICATION	0.9999328484677883	WITHOUT_CLASSIFICATION	6.715153221170314E-5	IMPLEMENTATION
begin second unit of work	WITHOUT_CLASSIFICATION	0.9998902307654979	WITHOUT_CLASSIFICATION	1.097692345021135E-4	IMPLEMENTATION
reattachment of aperson	WITHOUT_CLASSIFICATION	0.9999502842540499	WITHOUT_CLASSIFICATION	4.971574595011364E-5	IMPLEMENTATION
the getemailaddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999606243043243	WITHOUT_CLASSIFICATION	3.9375695675641356E-5	IMPLEMENTATION
we need our tm so get it now and avoid doing other work if there is a problem	WITHOUT_CLASSIFICATION	0.9999617588499661	WITHOUT_CLASSIFICATION	3.824115003385496E-5	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.995937830279817	WITHOUT_CLASSIFICATION	0.0040621697201830564	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.995937830279817	WITHOUT_CLASSIFICATION	0.0040621697201830564	IMPLEMENTATION
jbc put a version in the node when it created as part of some internal operation. we are always newer but if the jbc version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999999986232575	WITHOUT_CLASSIFICATION	1.3767425331665752E-9	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for properties with hibernate-specific overrides to detect and warn about conflicting declarations	WITHOUT_CLASSIFICATION	0.9999948764805832	WITHOUT_CLASSIFICATION	5.123519416747125E-6	IMPLEMENTATION
not null if the isolation level has been specified in the configuration file. otherwise it is left to the driver's default value.	WITHOUT_CLASSIFICATION	0.9999400558592079	WITHOUT_CLASSIFICATION	5.994414079208445E-5	IMPLEMENTATION
configured outside of hibernate (i.e. servlet container or java bean container already has proxool pools running and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999879549511091	WITHOUT_CLASSIFICATION	1.204504889082774E-5	IMPLEMENTATION
if you're closing down the connectionprovider chances are an is not a real big deal just warn	WITHOUT_CLASSIFICATION	0.9999805198194622	WITHOUT_CLASSIFICATION	1.948018053773522E-5	IMPLEMENTATION
(as is always optional for consistency with sql/oql)	WITHOUT_CLASSIFICATION	0.9999728804869733	WITHOUT_CLASSIFICATION	2.7119513026722445E-5	IMPLEMENTATION
process the "new" hql style where aliases are assigned _after_ the class name or path expression ie. using the as construction	WITHOUT_CLASSIFICATION	0.9999239092402743	WITHOUT_CLASSIFICATION	7.60907597257586E-5	IMPLEMENTATION
the loaded owner will be set to null after the collection is removed so capture its value as the affected owner so it is accessible to both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999793045429012	WITHOUT_CLASSIFICATION	2.0695457098780116E-5	IMPLEMENTATION
is a primitive type invokespecial	WITHOUT_CLASSIFICATION	0.9999529559037342	WITHOUT_CLASSIFICATION	4.704409626576564E-5	IMPLEMENTATION
array of primitive type do nothing	WITHOUT_CLASSIFICATION	0.9999892680148338	WITHOUT_CLASSIFICATION	1.0731985166203589E-5	IMPLEMENTATION
handle a path expression or class name that appears at the start in the "new" hql style or an alias that appears at the start in the "old" hql style	WITHOUT_CLASSIFICATION	0.9999986197928089	WITHOUT_CLASSIFICATION	1.3802071910772336E-6	IMPLEMENTATION
handle <= >= != is not not between not in	WITHOUT_CLASSIFICATION	0.9997948064989463	WITHOUT_CLASSIFICATION	2.0519350105376158E-4	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999998230199965	WITHOUT_CLASSIFICATION	1.769800035177196E-7	IMPLEMENTATION
transfer an explicitly defined entity name handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999603725357282	WITHOUT_CLASSIFICATION	3.962746427173526E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999900287025232	WITHOUT_CLASSIFICATION	9.971297476770496E-6	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999900287025232	WITHOUT_CLASSIFICATION	9.971297476770496E-6	IMPLEMENTATION
get meta's from <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999879925935206	WITHOUT_CLASSIFICATION	1.2007406479510257E-5	IMPLEMENTATION
parameters on the property mapping should override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999328082999183	WITHOUT_CLASSIFICATION	6.719170008175189E-5	IMPLEMENTATION
fetch="join" overrides default laziness fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999904357540664	WITHOUT_CLASSIFICATION	9.564245933628887E-6	IMPLEMENTATION
note special case default to join and non-lazy for the "second join" of the many-to-many	WITHOUT_CLASSIFICATION	0.9999979213038729	WITHOUT_CLASSIFICATION	2.078696127083335E-6	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.999904782098978	WITHOUT_CLASSIFICATION	9.521790102190579E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999556598435	WITHOUT_CLASSIFICATION	4.434015649998999E-5	IMPLEMENTATION
void setcomponenttuplizerfactory(componenttuplizerfactory componenttuplizerfactory) { this.componenttuplizerfactory = componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9990897941847016	WITHOUT_CLASSIFICATION	9.102058152985041E-4	IMPLEMENTATION
element index -> id	WITHOUT_CLASSIFICATION	0.9997141824164624	WITHOUT_CLASSIFICATION	2.858175835376601E-4	IMPLEMENTATION
note that it might be better to iterate the snapshot but this is safe assuming the user implements equals() properly as required by the set contract!	WITHOUT_CLASSIFICATION	0.9994947858076232	WITHOUT_CLASSIFICATION	5.052141923768206E-4	IMPLEMENTATION
collections detect changes made via their public interface and mark themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9939688802776263	WITHOUT_CLASSIFICATION	0.006031119722373697	IMPLEMENTATION
essentially if the real session is closed allow any method call to pass through since the real session will complain by throwing an appropriate exception note that allowing close() above has the same basic effect but we capture that there simply to perform the unbind	WITHOUT_CLASSIFICATION	0.9999975058182781	WITHOUT_CLASSIFICATION	2.4941817219956223E-6	IMPLEMENTATION
the default sqlexceptionconverter for all dialects is based on sqlstate since sqlerrorcode is extremely vendor-specific. specific dialects may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999315251133194	WITHOUT_CLASSIFICATION	6.847488668065175E-5	IMPLEMENTATION
only necessary for postgre < 7.4 httpanoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999354884947818	WITHOUT_CLASSIFICATION	6.451150521824833E-5	IMPLEMENTATION
select topic syntax from information_schema.help where section like 'function%' order by section topic see also -> httpwww.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999670300172404	WITHOUT_CLASSIFICATION	3.2969982759539216E-5	IMPLEMENTATION
registercolumntype(types.varbinary "character($l)") registercolumntype(types.blob "character($l)" ) for use prior to cp 11.0 registercolumntype(types.clob "character($l)" )	WITHOUT_CLASSIFICATION	0.9997938226041917	WITHOUT_CLASSIFICATION	2.0617739580832577E-4	IMPLEMENTATION
the blob type requires a size arguement - this defaults to bytes - no arg defaults to 1 whole byte! other argument mods include k - kilobyte m - megabyte g - gigabyte. refer to the pbdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9998911024171796	WITHOUT_CLASSIFICATION	1.0889758282038311E-4	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9997894740190448	WITHOUT_CLASSIFICATION	2.1052598095515178E-4	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999995878274139	WITHOUT_CLASSIFICATION	4.1217258604331867E-7	IMPLEMENTATION
add the comment nest the main query in an outer select add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999987170855353	WITHOUT_CLASSIFICATION	1.2829144646819225E-6	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999258646772862	WITHOUT_CLASSIFICATION	7.41353227138191E-5	IMPLEMENTATION
note for object <-> sql datatype mappings see configuration manager | advanced | sql | system ddl datatype mappings tbdregistercolumntype(types.binary "binary($1)") changed 08-11-2005 jsl	WITHOUT_CLASSIFICATION	0.9999999871984766	WITHOUT_CLASSIFICATION	1.2801523358209489E-8	IMPLEMENTATION
trim(end_keyword string-expression-1 from string-expression-2) use hibernate implementation "from" is one of the parameters they pass in position ?3 registerfunction( "trim" new sqlfunctiontemplate(hibernate.string "trim(?1 ?2 from ?3)") )	WITHOUT_CLASSIFICATION	0.9999943958169081	WITHOUT_CLASSIFICATION	5.6041830919577124E-6	IMPLEMENTATION
whether this dialect has an identity clause added to the data type or a completely seperate identity data type	WITHOUT_CLASSIFICATION	0.9999996470440798	WITHOUT_CLASSIFICATION	3.5295592012052773E-7	IMPLEMENTATION
according to both the ansi-sql and jpa specs trim takes a variable number of parameters between 1 and 4. at least one paramer (trimsource) is required. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if <trim specification> is omitted both is assumed. if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.9999999804112643	WITHOUT_CLASSIFICATION	1.958873575666025E-8	IMPLEMENTATION
/ prepare persisters and link them up with their cache region/access-strategy	WITHOUT_CLASSIFICATION	0.9999902697042286	WITHOUT_CLASSIFICATION	9.730295771438859E-6	IMPLEMENTATION
named queries	WITHOUT_CLASSIFICATION	0.9998928502469169	WITHOUT_CLASSIFICATION	1.0714975308310178E-4	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999965788361428	WITHOUT_CLASSIFICATION	3.421163857234687E-6	IMPLEMENTATION
does not handle arrays (thats ok cos they can't be lazy) or newly instantiated collections so we can do the cast	WITHOUT_CLASSIFICATION	0.9390039601118383	WITHOUT_CLASSIFICATION	0.06099603988816171	IMPLEMENTATION
collection deletions are a special case since update() can add deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9992641243966106	WITHOUT_CLASSIFICATION	7.358756033893799E-4	IMPLEMENTATION
we can do the cast since orphan-delete does not apply to 1. newly instantiated collections 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9959591018901011	WITHOUT_CLASSIFICATION	0.004040898109898971	IMPLEMENTATION
if the natural-id is marked as non-mutable it is not retrieved during a normal database-snapshot operation	WITHOUT_CLASSIFICATION	0.9998795156740409	WITHOUT_CLASSIFICATION	1.2048432595916158E-4	IMPLEMENTATION
watch out for a case where old is still referenced somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999995116422187	WITHOUT_CLASSIFICATION	4.883577813510443E-7	IMPLEMENTATION
slice to get the columns for this component property	WITHOUT_CLASSIFICATION	0.9999981090158979	WITHOUT_CLASSIFICATION	1.8909841021518638E-6	IMPLEMENTATION
int result = 17 result = 37 result + type.hashcode() result = 37 result + ( value==null ? 0 value.hashcode() ) return result	WITHOUT_CLASSIFICATION	0.9999458470054622	WITHOUT_CLASSIFICATION	5.41529945377016E-5	IMPLEMENTATION
the collectionentry.isreached() stuff is just to detect any silly users who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999884835097588	WITHOUT_CLASSIFICATION	1.1516490241165506E-5	IMPLEMENTATION
detached collection wrappers that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9927992448065744	WITHOUT_CLASSIFICATION	0.007200755193425531	IMPLEMENTATION
the unique property value represented here may or may not be serializable so we do an explicit check here in order to generate a better error message	WITHOUT_CLASSIFICATION	0.9987083024607467	WITHOUT_CLASSIFICATION	0.0012916975392532933	IMPLEMENTATION
if the version of a newly instantiated object is not the same as the version seed value use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9998141534523654	WITHOUT_CLASSIFICATION	1.858465476346336E-4	IMPLEMENTATION
ie. we never have to null out a reference to an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999386409438652	WITHOUT_CLASSIFICATION	6.13590561347974E-5	IMPLEMENTATION
ignore this row the collection is in process of being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999986064761448	WITHOUT_CLASSIFICATION	1.3935238551442452E-6	IMPLEMENTATION
entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currently not yet used	WITHOUT_CLASSIFICATION	0.9992446820625825	WITHOUT_CLASSIFICATION	7.553179374175204E-4	IMPLEMENTATION
should be ok performance-wise to generate new delegate instances for each request since these are locally stack-scoped. besides it makes the code much easier to read than the old transactionhelper stuff	WITHOUT_CLASSIFICATION	0.999986248841812	WITHOUT_CLASSIFICATION	1.3751158188115245E-5	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999290092347967	WITHOUT_CLASSIFICATION	7.099076520332166E-5	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999290092347967	WITHOUT_CLASSIFICATION	7.099076520332166E-5	IMPLEMENTATION
wrap up any new collections directly referenced by the object or its components	WITHOUT_CLASSIFICATION	0.9999989570132743	WITHOUT_CLASSIFICATION	1.0429867257061182E-6	IMPLEMENTATION
remove any snapshot not really for memory management purposes but rather because it might now be stale and there is no longer any entityentry to take precedence this is now handled by removeentity() session.getpersistencecontext().removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.9999995350803518	WITHOUT_CLASSIFICATION	4.649196481930933E-7	IMPLEMENTATION
skip this check for composite-ids relating to dom4j entity-mode alternatively we could add a check to make sure the incoming id value is an instance of element	WITHOUT_CLASSIFICATION	0.9999816372904111	WITHOUT_CLASSIFICATION	1.8362709588913654E-5	IMPLEMENTATION
upgrade the lock if necessary lock(result lockmode)	WITHOUT_CLASSIFICATION	0.9999796090389923	WITHOUT_CLASSIFICATION	2.039096100774906E-5	IMPLEMENTATION
now any collections that are initialized inside this block do not get updated - they are ignored until the next flush	WITHOUT_CLASSIFICATION	0.7842498259926941	WITHOUT_CLASSIFICATION	0.2157501740073059	IMPLEMENTATION
we must clone embedded composite identifiers or we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999985304662031	WITHOUT_CLASSIFICATION	1.4695337968936603E-6	IMPLEMENTATION
sub-insertions should occur before containing insertion so try to do the callback now	WITHOUT_CLASSIFICATION	0.9996582640718861	WITHOUT_CLASSIFICATION	3.417359281139803E-4	IMPLEMENTATION
the entity is not associated with the session so try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9984628012758207	WITHOUT_CLASSIFICATION	0.0015371987241793686	IMPLEMENTATION
scan the query string for class names appearing in the from clause and replace with all persistent implementors of the class/interface returning multiple query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999998961319432	WITHOUT_CLASSIFICATION	1.0386805674852519E-7	IMPLEMENTATION
save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997321625692537	WITHOUT_CLASSIFICATION	2.6783743074622937E-4	IMPLEMENTATION
evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997321625692537	WITHOUT_CLASSIFICATION	2.6783743074622937E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999896848623449	WITHOUT_CLASSIFICATION	1.031513765504597E-5	IMPLEMENTATION
if it is an uninitialized proxy pointing with this session then when it is accessed the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999990988087072	WITHOUT_CLASSIFICATION	9.011912927596061E-7	IMPLEMENTATION
generate an explicit join for the root dot node. the implied joins will be collected and passed up to the root dot node.	WITHOUT_CLASSIFICATION	0.9999967402263744	WITHOUT_CLASSIFICATION	3.2597736256182824E-6	IMPLEMENTATION
a session is considered to contain an entity only if the entity has an entry in the session's persistence context and the entry reports that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9968382269228009	WITHOUT_CLASSIFICATION	0.0031617730771992232	IMPLEMENTATION
does the collection referenced by this fromelement specify an order-by attribute? if so attach it to the query's order-by	WITHOUT_CLASSIFICATION	0.9999986813316251	WITHOUT_CLASSIFICATION	1.318668375039581E-6	IMPLEMENTATION
and the token could be an identifer and the error is a mismatched token error	WITHOUT_CLASSIFICATION	0.9999875967077035	WITHOUT_CLASSIFICATION	1.2403292296500204E-5	IMPLEMENTATION
if a where clause was specified in the update/delete query use it to limit the returned ids here	WITHOUT_CLASSIFICATION	0.9999995324651071	WITHOUT_CLASSIFICATION	4.6753489295640064E-7	IMPLEMENTATION
int parameterstart = getwalker().getnumberofparametersinsetclause() list allparams = getidselectparameterspecifications() iterator whereparams = allparams.sublist( parameterstart allparams.size() ).iterator()	WITHOUT_CLASSIFICATION	0.9998253105975228	WITHOUT_CLASSIFICATION	1.746894024771511E-4	IMPLEMENTATION
default implementation if this node has a data type and that data type is not an association then this is scalar.	WITHOUT_CLASSIFICATION	0.9999836110479264	WITHOUT_CLASSIFICATION	1.6388952073529047E-5	IMPLEMENTATION
resolve the lhs fully generate implicit joins. pass in the property name so that the resolver can discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999607893478296	WITHOUT_CLASSIFICATION	3.921065217040471E-5	IMPLEMENTATION
if the propertytype is null and there isn't a parent just stop now there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.999999504396706	WITHOUT_CLASSIFICATION	4.956032939385619E-7	IMPLEMENTATION
we do not look for an existing join on the same path because it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9989664465017423	WITHOUT_CLASSIFICATION	0.001033553498257771	IMPLEMENTATION
our parent is another dot node meaning we are being further dereferenced. thus we need to generate a join unless the parent refers to the associated entity's pk (because 'our' table would know the fk).	WITHOUT_CLASSIFICATION	0.9914175568171	WITHOUT_CLASSIFICATION	0.008582443182900029	IMPLEMENTATION
public final currency getcurrency(int col) throws hibernateexception {return (currency) get(col)}	WITHOUT_CLASSIFICATION	0.9998120850066514	WITHOUT_CLASSIFICATION	1.8791499334860199E-4	IMPLEMENTATION
here we have two possibilities 1) the property-name matches the explicitly identifier property name 2) the property-name matches the implicit 'id' property name	WITHOUT_CLASSIFICATION	0.9995392800475772	WITHOUT_CLASSIFICATION	4.607199524229162E-4	IMPLEMENTATION
set the unresolved path in this node and the parent. set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999749001199771	WITHOUT_CLASSIFICATION	2.509988002279745E-5	IMPLEMENTATION
get the first child to be considered. sub-classes may do this differently in order to skip nodes that are not select expressions (e.g. distinct).	WITHOUT_CLASSIFICATION	0.9992506707690134	WITHOUT_CLASSIFICATION	7.493292309865574E-4	IMPLEMENTATION
if this is an entity and the property is the identifier property then use getidentifiertype(). note that the propertyname.equals( propertypath ) checks whether we have a component key reference where the component class property name is the same as the entity id property name if the two are not equal this is the case and we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9981242692999454	WITHOUT_CLASSIFICATION	0.0018757307000545657	IMPLEMENTATION
for a subquery the alias to use depends on a few things (we already know this is not an overall select) 1) if this from_element represents a correlation to the outer-most query a) if the outer query represents a multi-table persister we need to use the given alias in anticipation of one of the multi-table executors being used (as this subquery will actually be used in the "id select" phase of that multi-table executor) b) otherwise we need to use the persister's table name as the column qualification 2) otherwise (not correlated) use the given alias	WITHOUT_CLASSIFICATION	0.9988298563325142	WITHOUT_CLASSIFICATION	0.0011701436674858333	IMPLEMENTATION
not a collection? return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9979926520150582	WITHOUT_CLASSIFICATION	0.0020073479849418404	IMPLEMENTATION
collection of <many-to-any/> mappings used to circumvent the component-collection check below	WITHOUT_CLASSIFICATION	0.9999759018533971	WITHOUT_CLASSIFICATION	2.409814660279152E-5	IMPLEMENTATION
otherwise the destination node was implied by the from clause and the from clause processor will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999630611998453	WITHOUT_CLASSIFICATION	3.693880015468176E-5	IMPLEMENTATION
if the first identifier in the path referrs to the class alias (not the class name) then this is a correlated subselect. if it's a correlated sub-select use the existing table alias. otherwise generate a new one.	WITHOUT_CLASSIFICATION	0.9999989155554685	WITHOUT_CLASSIFICATION	1.0844445315799832E-6	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999890229555446	WITHOUT_CLASSIFICATION	1.0977044455374332E-5	IMPLEMENTATION
an ident node can represent an index expression if the ident represents a naked property ref note this makes the assumption (which is currently the case in the hql-sql grammar) that the ident is first resolved itself (addrexpr -> resolve()). the other option if that changes is to call resolve from here but it is currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999992409431926	WITHOUT_CLASSIFICATION	7.590568074496543E-7	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9999642734684665	WITHOUT_CLASSIFICATION	3.572653153357068E-5	IMPLEMENTATION
if this is an implied join in a from clause then use ansi-style joining and set the flag on the fromelement that indicates that it was implied in the from clause itself.	WITHOUT_CLASSIFICATION	0.9999962644127631	WITHOUT_CLASSIFICATION	3.7355872370126327E-6	IMPLEMENTATION
origin.adddestination(destination) add the query spaces.	WITHOUT_CLASSIFICATION	0.9999161569440972	WITHOUT_CLASSIFICATION	8.384305590277793E-5	IMPLEMENTATION
for an explicit many-to-many relationship add a second join from the intermediate (many-to-many) table to the destination table. also make sure that the from element's idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999913575991997	WITHOUT_CLASSIFICATION	8.64240080039017E-6	IMPLEMENTATION
reset the node type because the rest of the system is expecting from_fragment all we wanted was for the factory to create the right sub-class. this might get reset again later on anyway to make the sql generation simpler.	WITHOUT_CLASSIFICATION	0.9999600239429912	WITHOUT_CLASSIFICATION	3.997605700870689E-5	IMPLEMENTATION
explicit = true this is an explict select. arraylist sqlresulttypelist = new arraylist()	WITHOUT_CLASSIFICATION	0.9999710771103777	WITHOUT_CLASSIFICATION	2.8922889622358936E-5	IMPLEMENTATION
sqlresulttypelist.add( type ) generate the select expression.	WITHOUT_CLASSIFICATION	0.9998893222449428	WITHOUT_CLASSIFICATION	1.1067775505721753E-4	IMPLEMENTATION
if the expression list has exactly one expression and the type of the expression is a collection then this might be a collection function such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999951751884676	WITHOUT_CLASSIFICATION	4.824811532444858E-6	IMPLEMENTATION
need to parse off the column qualifiers this is assuming (which is true as of now) that this is only used from update and delete hql statement parsing	WITHOUT_CLASSIFICATION	0.9998196964011807	WITHOUT_CLASSIFICATION	1.8030359881916132E-4	IMPLEMENTATION
for regression testing against output from the old parser found it easiest to simply reorder the fromelements here into ascending order in terms of injecting them into the resulting sql ast in orders relative to those expected by the old parser this is definitely another of those "only needed for regression purposes". the syntheticandfactory then simply injects them as it encounters them.	WITHOUT_CLASSIFICATION	0.9983313621601868	WITHOUT_CLASSIFICATION	0.0016686378398132196	IMPLEMENTATION
the uber-rule here is that we need to include subclass joins if the fromelement is in any way dereferenced by a property from the subclass table otherwise we end up with column references qualified by a non-existent table reference in the resulting sql	WITHOUT_CLASSIFICATION	0.9999980248856695	WITHOUT_CLASSIFICATION	1.975114330612997E-6	IMPLEMENTATION
classic translator does not support collection of ordinal param metadata	WITHOUT_CLASSIFICATION	0.9986059990183419	WITHOUT_CLASSIFICATION	0.0013940009816581546	IMPLEMENTATION
the following variables are stacks that keep information about each subexpression in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999999068406897	WITHOUT_CLASSIFICATION	9.3159310287048E-8	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999998230199965	WITHOUT_CLASSIFICATION	1.769800035177196E-7	IMPLEMENTATION
should not be able to reach last without maxposition being set unless there are no results	WITHOUT_CLASSIFICATION	0.9993613116495629	WITHOUT_CLASSIFICATION	6.386883504371798E-4	IMPLEMENTATION
we found it in the temp pc. should indicate we are in the midst of processing a result set containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999632087190292	WITHOUT_CLASSIFICATION	3.6791280970721774E-5	IMPLEMENTATION
do not use proxiesbykey since not all proxies that point to this session's instances are in that collection!	WITHOUT_CLASSIFICATION	0.9959135371544848	WITHOUT_CLASSIFICATION	0.004086462845515144	IMPLEMENTATION
if there is no tm configured we will not be able to access the javax.transaction.transaction object in order to register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999962465756222	WITHOUT_CLASSIFICATION	3.7534243776783876E-6	IMPLEMENTATION
since the result set cursor is always left at the first physical row after the "last processed" we need to jump back one position to get the key value we are interested in skipping	WITHOUT_CLASSIFICATION	0.9999995840751345	WITHOUT_CLASSIFICATION	4.159248656171337E-7	IMPLEMENTATION
true if this is a query and we are loading multiple instances of the same collection role otherwise this is a collectioninitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999777734368807	WITHOUT_CLASSIFICATION	2.2226563119349545E-5	IMPLEMENTATION
we don't need to worry about existing version being uninitialized because this block isn't called by a re-entrant load (re-entrant loads _always_ have lock mode none)	WITHOUT_CLASSIFICATION	0.9997697231955482	WITHOUT_CLASSIFICATION	2.3027680445166627E-4	IMPLEMENTATION
add temp entry so that the next step is circular-reference safe - only needed because some types don't take proper advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.8598726228820622	IMPLEMENTATION	0.14012737711793782	WITHOUT_CLASSIFICATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999997347645504	WITHOUT_CLASSIFICATION	2.652354495915807E-7	IMPLEMENTATION
log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9629931981565387	WITHOUT_CLASSIFICATION	0.03700680184346129	IMPLEMENTATION
ps.close() just close it do not try to return it to the pool! note early exit!	WITHOUT_CLASSIFICATION	0.9991235755210953	WITHOUT_CLASSIFICATION	8.76424478904775E-4	IMPLEMENTATION
this has been shown to happen occasionally in rare cases when using a transaction manager + transaction-timeout where the timeout calls back through hibernate's registered transaction synchronization on a separate "reaping" thread. in cases where that reaping thread executes through this block at the same time the main application thread does we can get into situations where these cmes occur. and though it is not "allowed" per-se the end result without handling it specifically is infinite looping. so here we simply break the loop	WITHOUT_CLASSIFICATION	0.9974908650387505	WITHOUT_CLASSIFICATION	0.0025091349612496217	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9988970268094468	WITHOUT_CLASSIFICATION	0.0011029731905532634	IMPLEMENTATION
can't cache this stuff either (per-invocation) we are given a map of user-alias -> lock mode create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999805572984133	WITHOUT_CLASSIFICATION	1.9442701586684918E-5	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns getcollectiontable().createuniquekey( getidentifier().getconstraintcolumns() )	WITHOUT_CLASSIFICATION	0.9968892132718605	WITHOUT_CLASSIFICATION	0.003110786728139418	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998640517707383	WITHOUT_CLASSIFICATION	1.3594822926177796E-4	IMPLEMENTATION
isset = collection.isset() issorted = collection.issorted()	WITHOUT_CLASSIFICATION	0.999760200845213	WITHOUT_CLASSIFICATION	2.3979915478707586E-4	IMPLEMENTATION
lists arrays sets maps bags	WITHOUT_CLASSIFICATION	0.9999728729346193	WITHOUT_CLASSIFICATION	2.712706538065456E-5	IMPLEMENTATION
we finish all the "removes" first to take care of possible unique constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9993508189877836	WITHOUT_CLASSIFICATION	6.491810122165203E-4	IMPLEMENTATION
use a combination of foreign key columns and pk columns since the ordering of removal and addition is not guaranteed when a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.999508408594878	WITHOUT_CLASSIFICATION	4.915914051220876E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998640517707383	WITHOUT_CLASSIFICATION	1.3594822926177796E-4	IMPLEMENTATION
information about properties of this class including inherited properties (only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9859721748350532	WITHOUT_CLASSIFICATION	0.014027825164946791	IMPLEMENTATION
all this only really needs to consider properties of this class not its subclasses but since we are reusing code used for sequential selects we use the subclass closure	WITHOUT_CLASSIFICATION	0.9999854812332801	WITHOUT_CLASSIFICATION	1.451876671984729E-5	IMPLEMENTATION
here we render the select column list based on the properties defined as being generated. for partial component generation we currently just re-select the whole component rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.999999217265812	WITHOUT_CLASSIFICATION	7.827341878905149E-7	IMPLEMENTATION
this is the root (versioned) table and we are using version-based optimistic locking if we are not updating the version also don't check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9868234064929148	WITHOUT_CLASSIFICATION	0.013176593507085143	IMPLEMENTATION
optimistic-lock="all" include all updatable properties optimistic-lock="dirty" include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999482982925243	WITHOUT_CLASSIFICATION	5.1701707475662105E-5	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9955702421462431	WITHOUT_CLASSIFICATION	0.004429757853756903	IMPLEMENTATION
check to see if the connection is in auto-commit mode (no connection means aggressive connection release outside a jta transaction context so must be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999334145920219	WITHOUT_CLASSIFICATION	6.658540797811292E-5	IMPLEMENTATION
need to treat this as if it where optimistic-lock="all" (dirty does not make sense) first we need to locate the "loaded" state note it potentially could be a proxy so perform the location the safe way	WITHOUT_CLASSIFICATION	0.9981561274197168	WITHOUT_CLASSIFICATION	0.001843872580283118	IMPLEMENTATION
we always assume an instance with a null identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999969857150739	WITHOUT_CLASSIFICATION	3.0142849261769133E-6	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9999883316609176	WITHOUT_CLASSIFICATION	1.1668339082474542E-5	IMPLEMENTATION
allow any identifier quoted with backtick only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9998723333960786	WITHOUT_CLASSIFICATION	1.2766660392140891E-4	IMPLEMENTATION
following doesn't handle (null not null) but unnecessary since this would mean all rows	WITHOUT_CLASSIFICATION	0.9998844418206926	WITHOUT_CLASSIFICATION	1.1555817930741322E-4	IMPLEMENTATION
impl note due to the delayed population of setters (setters cached for performance) we really cannot pro0perly define equality for this transformer	WITHOUT_CLASSIFICATION	0.9999984144949995	WITHOUT_CLASSIFICATION	1.585505000598077E-6	IMPLEMENTATION
we need to dirty check collections since they can cause an owner version number increment	WITHOUT_CLASSIFICATION	0.996001183607023	WITHOUT_CLASSIFICATION	0.003998816392977025	IMPLEMENTATION
return the id so we can use it to reset the proxy id return result	WITHOUT_CLASSIFICATION	0.996837101202295	WITHOUT_CLASSIFICATION	0.003162898797705103	IMPLEMENTATION
optimizer = getfactory().getsettings().getbytecodeprovider().getreflectionoptimizer( mappedclass getternames setternames proptypes )	WITHOUT_CLASSIFICATION	0.9994884768205103	WITHOUT_CLASSIFICATION	5.115231794895848E-4	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9969213452776561	WITHOUT_CLASSIFICATION	0.003078654722343819	IMPLEMENTATION
we now have the value of the property-ref we reference. however we need to dig a little deeper as that property might also be an entity type in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999645170818778	WITHOUT_CLASSIFICATION	3.548291812211317E-5	IMPLEMENTATION
retrieve the value of the designated column in the current row of this resultset object as a java.io.reader object	WITHOUT_CLASSIFICATION	0.9999997589736271	WITHOUT_CLASSIFICATION	2.410263728963381E-7	IMPLEMENTATION
not absolutely necessary but helps for some equals()/hashcode() implementations	WITHOUT_CLASSIFICATION	0.999241304275644	WITHOUT_CLASSIFICATION	7.586957243560012E-4	IMPLEMENTATION
this should be a call to resolve() not resolveidentifier() 'cos it might be a property-ref and we did not cache the referenced value	WITHOUT_CLASSIFICATION	0.9906309053488264	WITHOUT_CLASSIFICATION	0.00936909465117374	IMPLEMENTATION
if we have <tt>not-found="ignore"</tt> association mapped to a formula we always need to dirty check it so we can update the second-level cache	WITHOUT_CLASSIFICATION	0.9979478202546225	WITHOUT_CLASSIFICATION	0.0020521797453775395	IMPLEMENTATION
can't just return null here since that would cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999926538695056	WITHOUT_CLASSIFICATION	7.346130494375031E-6	IMPLEMENTATION
for arrays replaceelements() may return a different reference since the array length might not match	WITHOUT_CLASSIFICATION	0.9999444170031726	WITHOUT_CLASSIFICATION	5.558299682748632E-5	IMPLEMENTATION
actual cache of the entries. soft references are used for both the keys and the values here since the values pertaining to the mru entries are kept in a seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999990275245	WITHOUT_CLASSIFICATION	9.724755603601323E-10	IMPLEMENTATION
as soon as we encounter our first letter return the substring from that position	WITHOUT_CLASSIFICATION	0.9999892978086636	WITHOUT_CLASSIFICATION	1.0702191336404181E-5	IMPLEMENTATION
note expected in the syntax type=listenerclass ({sep}type=listenerclass) where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999984197208344	WITHOUT_CLASSIFICATION	1.5802791656536677E-6	IMPLEMENTATION
istransactioncallbackregistered denotes whether any hibernate transaction has registered as a callback against this jdbccontext only one such callback is allowed. directly serializing this value causes problems with jdbctransaction or really any transaction impl where the callback is local to the transaction instance itself since that transaction is not serialized along with the jdbccontext. thus we handle that fact here explicitly	WITHOUT_CLASSIFICATION	0.9999649573654195	WITHOUT_CLASSIFICATION	3.50426345805445E-5	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9998656826529123	WITHOUT_CLASSIFICATION	1.3431734708761742E-4	IMPLEMENTATION
we call getkeyfromresultset() here so that we can know the key value upon which to perform the breaking logic. however it is also then called from getrowfromresultset() which is certainly not the most efficient. but the call here is needed and there currently is no other way without refactoring of the doquery()/getrowfromresultset() methods	WITHOUT_CLASSIFICATION	0.9602799891559767	IMPLEMENTATION	0.039720010844023323	WITHOUT_CLASSIFICATION
this check is needed since processing leaves the cursor after the last physical row for the current logical row thus if we are after the last physical row this might be caused by either 1) scrolling to the last logical row 2) scrolling past the last logical row in the latter scenario the previous logical row really is the last logical row. in all other cases we should process back two logical records (the current logic row plus the previous logical row).	WITHOUT_CLASSIFICATION	0.8696448345102717	WITHOUT_CLASSIFICATION	0.13035516548972823	IMPLEMENTATION
and perform the load	WITHOUT_CLASSIFICATION	0.9996520136731069	WITHOUT_CLASSIFICATION	3.47986326893145E-4	IMPLEMENTATION
important reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999501508044933	WITHOUT_CLASSIFICATION	4.984919550665055E-5	IMPLEMENTATION
this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999602126174119	WITHOUT_CLASSIFICATION	3.978738258811441E-5	IMPLEMENTATION
we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999974464914689	WITHOUT_CLASSIFICATION	2.5535085311459123E-6	IMPLEMENTATION
we did not find a collection element in the result set so we ensure that a collection is created with the owner's identifier since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9988328748578793	WITHOUT_CLASSIFICATION	0.0011671251421206382	IMPLEMENTATION
this is a collection initializer so we must create a collection for each of the passed-in keys to account for the possibility that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999836347224693	WITHOUT_CLASSIFICATION	1.6365277530714027E-5	IMPLEMENTATION
grab its state from the resultset and keep it in the session (but don't yet initialize the object itself) note that we acquire lockmode.read even if it was not requested	WITHOUT_CLASSIFICATION	0.999999308347975	WITHOUT_CLASSIFICATION	6.9165202504929E-7	IMPLEMENTATION
a many-to-many decrement currentdepth here to allow join across the association table without exceeding max_fetch_depth (i.e. the "currentdepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999014828975122	WITHOUT_CLASSIFICATION	9.851710248775052E-5	IMPLEMENTATION
if not a composite key use "foo in (? ? ?)" for batching if no batch and not a composite key use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999006240901435	WITHOUT_CLASSIFICATION	9.937590985652865E-5	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9986468974806179	WITHOUT_CLASSIFICATION	0.0013531025193822045	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999872080010855	WITHOUT_CLASSIFICATION	1.2791998914382953E-5	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999872080010855	WITHOUT_CLASSIFICATION	1.2791998914382953E-5	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999531481066334	WITHOUT_CLASSIFICATION	4.6851893366657434E-5	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999991737086283	WITHOUT_CLASSIFICATION	8.262913715981783E-7	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999795847365116	WITHOUT_CLASSIFICATION	2.0415263488323465E-5	IMPLEMENTATION
translates an ast join type (i.e. the token type) into a joinfragment.xxx join type. @param astjointype the ast join type (from hqlsqltokentypes or sqltokentypes) @return a joinfragment.xxx join type. @see joinfragment @see sqltokentypes	WITHOUT_CLASSIFICATION	0.999982518388541	WITHOUT_CLASSIFICATION	1.748161145898419E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999315861271421	WITHOUT_CLASSIFICATION	6.841387285803872E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999315861271421	WITHOUT_CLASSIFICATION	6.841387285803872E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999250990259764	WITHOUT_CLASSIFICATION	7.49009740235585E-5	IMPLEMENTATION
public list getcollectionaliases() { return collectionaliases } public list getcollectionowners() { return collectionowners } public list getcollectionowneraliases() { return collectionowneraliases } public list getcollectionpersisters() { return collectionpersisters } public map getalias2persister() { return alias2persister } public boolean iscollectioninitializer() { return iscollectioninitializer } public list getpersisters() { return persisters } public map getalias2owneralias() { return alias2owneralias } public list getscalartypes() { return scalartypes } public list getscalarcolumnaliases() { return scalarcolumnaliases } public list getpropertyresults() { return propertyresults } public list getcollectionpropertyresults() { return collectionresults } public map getalias2return() { return alias2return }	WITHOUT_CLASSIFICATION	0.9999778477347546	WITHOUT_CLASSIFICATION	2.215226524538414E-5	IMPLEMENTATION
sqlqueryparser parser = new sqlqueryparser( sqlquery processor.getalias2persister() processor.getalias2return() aliases collaliases collpersisters suffixes collsuffixes ) sql = parser.process() namedparameterbindpoints = parser.getnamedparameters()	WITHOUT_CLASSIFICATION	0.9999241577070177	WITHOUT_CLASSIFICATION	7.584229298228661E-5	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998523335817365	WITHOUT_CLASSIFICATION	1.4766641826349672E-4	IMPLEMENTATION
sqlaliassuffixes[i] = element.getcolumnaliassuffix()	WITHOUT_CLASSIFICATION	0.999760200845213	WITHOUT_CLASSIFICATION	2.3979915478707586E-4	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9993206411433582	WITHOUT_CLASSIFICATION	6.793588566418518E-4	IMPLEMENTATION
at this point we have (drivingsqlalias) the sql alias of the driving table corresponding to the given user alias. however the driving table is not (necessarily) the table against which we want to apply locks. mainly the exception case here is joined-subclass hierarchies where we instead want to apply the lock against the root table (for all other strategies it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9241626881204296	WITHOUT_CLASSIFICATION	0.07583731187957041	IMPLEMENTATION
the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999756885512572	WITHOUT_CLASSIFICATION	2.4311448742787417E-5	IMPLEMENTATION
we have a mapped identifier property and the root of the incoming property path matched that identifier property	WITHOUT_CLASSIFICATION	0.9997171325932838	WITHOUT_CLASSIFICATION	2.828674067162486E-4	IMPLEMENTATION
we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9998996359063655	WITHOUT_CLASSIFICATION	1.0036409363443837E-4	IMPLEMENTATION
both many-to-one and one-to-one are represented as a property. entitypersister is relying on this value to determine "lazy fetch groups" in terms of field-level interception. so we need to make sure that we return true here for the case of many-to-one and one-to-one with lazy="no-proxy" impl note - lazy="no-proxy" currently forces both lazy and unwrap to be set to true. the other case we are extremely interested in here is that of lazy="proxy" where lazy is set to true but unwrap is set to false. thus we use both here under the assumption that this return is really only ever used during persister construction to determine the lazy property/field fetch groupings. if that assertion changes then this check needs to change as well. partially this is an issue with the overloading of the term "lazy" here	WITHOUT_CLASSIFICATION	0.999999967813452	WITHOUT_CLASSIFICATION	3.21865480343778E-8	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999864480361922	WITHOUT_CLASSIFICATION	1.3551963807900109E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999864480361922	WITHOUT_CLASSIFICATION	1.3551963807900109E-5	IMPLEMENTATION
roottablename = persistentclass.getroottable().getqualifiedname( factory.getdialect() factory.getdefaultcatalog() factory.getdefaultschema() )	WITHOUT_CLASSIFICATION	0.9994884768205103	WITHOUT_CLASSIFICATION	5.115231794895848E-4	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999740959592482	WITHOUT_CLASSIFICATION	2.5904040751742453E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999924068328114	WITHOUT_CLASSIFICATION	7.593167188620978E-6	IMPLEMENTATION
protected void initpropertypaths(final string pathfinal type typefinal string[] columnsfinal string[] formulatemplatesfinal mapping factory)throws mappingexception {addformulapropertypath(path type formulatemplates)initpropertypaths(path type columns formulatemplates factory)}	WITHOUT_CLASSIFICATION	0.9999916114016014	WITHOUT_CLASSIFICATION	8.3885983985264E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
custom sql (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999740363226611	WITHOUT_CLASSIFICATION	2.5963677338940126E-5	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999894406182507	WITHOUT_CLASSIFICATION	1.055938174931591E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
aliases for identifier ( alias.id ) skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999937692820566	WITHOUT_CLASSIFICATION	6.230717943394041E-6	IMPLEMENTATION
decide which resultset to get the property value from	WITHOUT_CLASSIFICATION	0.9999841227839517	WITHOUT_CLASSIFICATION	1.5877216048306907E-5	IMPLEMENTATION
note it is conceptually possible that a usertype could map null to a non-null value so the following is arguable	WITHOUT_CLASSIFICATION	0.9999903396586718	WITHOUT_CLASSIFICATION	9.660341328140906E-6	IMPLEMENTATION
the contract of entitytuplizer.determineconcretesubclassentityname says that returning null is an indication that the specified entity-name (this.getentityname) should be used.	WITHOUT_CLASSIFICATION	0.9999010484473165	WITHOUT_CLASSIFICATION	9.895155268345611E-5	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9999883316609176	WITHOUT_CLASSIFICATION	1.1668339082474542E-5	IMPLEMENTATION
cache these since they are stateless this one could even be static	WITHOUT_CLASSIFICATION	0.9999843639386874	WITHOUT_CLASSIFICATION	1.5636061312532533E-5	IMPLEMENTATION
"as" is not in keywords	WITHOUT_CLASSIFICATION	0.9997695464055116	WITHOUT_CLASSIFICATION	2.3045359448842942E-4	IMPLEMENTATION
--commented out by inspection (12/4/04 910 am) public abstract void addcondition(string alias string[] columns string condition)	WITHOUT_CLASSIFICATION	0.9999994810356684	WITHOUT_CLASSIFICATION	5.189643314894948E-7	IMPLEMENTATION
use the id column alias	WITHOUT_CLASSIFICATION	0.9993352751895562	WITHOUT_CLASSIFICATION	6.647248104437371E-4	IMPLEMENTATION
private list aliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999587177032293	WITHOUT_CLASSIFICATION	4.128229677071766E-5	IMPLEMENTATION
columns.add(columnname) aliases.add(tablealias)	WITHOUT_CLASSIFICATION	0.9998978717601702	WITHOUT_CLASSIFICATION	1.0212823982976654E-4	IMPLEMENTATION
where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9998706829468564	WITHOUT_CLASSIFICATION	1.2931705314359957E-4	IMPLEMENTATION
revert to traditional hibernate behavior of setting initialpoolsize to minpoolsize unless otherwise specified with a c3p0.-style parameter.	WITHOUT_CLASSIFICATION	0.9999049500619641	WITHOUT_CLASSIFICATION	9.504993803588432E-5	IMPLEMENTATION
arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9992857130794955	WITHOUT_CLASSIFICATION	7.142869205045275E-4	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9965475574162087	WITHOUT_CLASSIFICATION	0.003452442583791257	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9965475574162087	WITHOUT_CLASSIFICATION	0.003452442583791257	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999978364056584	WITHOUT_CLASSIFICATION	2.1635943416005354E-6	IMPLEMENTATION
essentially 1) if we have a local (hibernate) transaction in progress and it already has the usertransaction cached use that usertransaction to determine the status. 2) if a transaction manager has been located use that transaction manager to determine the status. 3) finally as the last resort try to lookup the usertransaction via jndi and use that to determine the status.	WITHOUT_CLASSIFICATION	0.9999994259460568	WITHOUT_CLASSIFICATION	5.74053943275958E-7	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999473687648642	WITHOUT_CLASSIFICATION	5.263123513578086E-5	IMPLEMENTATION
swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9998843559199412	WITHOUT_CLASSIFICATION	1.1564408005890339E-4	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9998857487838877	WITHOUT_CLASSIFICATION	1.1425121611226127E-4	IMPLEMENTATION
we need to dirty check many-to-ones with not-found="ignore" in order to update the cache (not the database) since in this case a null entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999901299212112	WITHOUT_CLASSIFICATION	9.87007878890178E-6	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999858090557716	WITHOUT_CLASSIFICATION	1.4190944228398191E-5	IMPLEMENTATION
regions can get instantiated in the course of normal work (e.g. a named query region will be created the first time the query is executed) so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999999136879407	WITHOUT_CLASSIFICATION	8.631205936854519E-8	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9999056745735188	WITHOUT_CLASSIFICATION	9.432542648121043E-5	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9995954875135601	WITHOUT_CLASSIFICATION	4.045124864399057E-4	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999022350936658	WITHOUT_CLASSIFICATION	9.776490633406621E-5	IMPLEMENTATION
note this is being used from the process of shutting down a sessionfactory. specific things to consider (1) this clearing of the region should not propagate to other nodes on the cluster (if any) this is the cache-mode-local option bit (2) really just trying a best effort to cleanup after ourselves lock failures etc are not critical here this is the fail-silently option bit	WITHOUT_CLASSIFICATION	0.8328067623181509	WITHOUT_CLASSIFICATION	0.16719323768184904	IMPLEMENTATION
need to extract the component values and check for subtype replacements	WITHOUT_CLASSIFICATION	0.9998310653489388	WITHOUT_CLASSIFICATION	1.6893465106126423E-4	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999140476114371	WITHOUT_CLASSIFICATION	8.595238856300632E-5	IMPLEMENTATION
for now just "re-flatten" the metamodel since this is temporary stuff anyway (hhh-1907)	WITHOUT_CLASSIFICATION	0.9999976949630487	WITHOUT_CLASSIFICATION	2.3050369512129338E-6	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9998022812651755	WITHOUT_CLASSIFICATION	1.9771873482450365E-4	IMPLEMENTATION
this solution would allow us to eliminate the owner arg to disassemble() but what if the collection was null and then later had elements added? seems unsafe session.getpersistencecontext().getcollectionentry( (persistentcollection) value ).getkey()	WITHOUT_CLASSIFICATION	0.9999995837357916	WITHOUT_CLASSIFICATION	4.1626420841063455E-7	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9998923543984625	WITHOUT_CLASSIFICATION	1.0764560153751242E-4	IMPLEMENTATION
some collections are not lazy	WITHOUT_CLASSIFICATION	0.9928596139937973	WITHOUT_CLASSIFICATION	0.00714038600620263	IMPLEMENTATION
here we don't want to suspend the tx. if we do 1) we might be caching query results that reflect uncommitted changes. no tx == no wl on cache node so other threads can prematurely see those query results 2) no tx == immediate replication. more overhead plus we spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.6466761192418711	WITHOUT_CLASSIFICATION	0.3533238807581289	IMPLEMENTATION
return the (fully resolved) identifier value but do not resolve to the actual referenced entity instance note the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999890643796301	WITHOUT_CLASSIFICATION	1.0935620369996614E-5	IMPLEMENTATION
add a zero (or quite low) timeout option so we don't block. ignore any timeoutexception. basically we forego caching the query result in order to avoid blocking. reads are done with suspended tx so they should not hold the lock for long. not caching the query result is ok since any subsequent read will just see the old result with its out-of-date timestamp that result will be discarded and the db query performed again.	WITHOUT_CLASSIFICATION	0.9999999627359509	WITHOUT_CLASSIFICATION	3.7264049075107895E-8	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9998255643931313	WITHOUT_CLASSIFICATION	1.744356068687445E-4	IMPLEMENTATION
we have the jbcwritemutex so no other local thread will be trying to write this key. it's possible here some remote thread has come in and changed the values again but since we are reading the values to write to jbc right now we know we are writing the latest values i.e. we don't assume that what we cached in entry.update() above is what we should write to jbc now. our write could be redundant i.e. we are writing what some remote thread just came in an wrote. there is a chance that yet another remote thread will update us and we'll then overwrite that later data in jbc. but all remote nodes will ignore that change in their localcache the only place it will live will be in jbc where it can only effect the initial state transfer values on newly joined nodes (i.e. populatelocalcache()).	WITHOUT_CLASSIFICATION	0.9999935280111316	WITHOUT_CLASSIFICATION	6.4719888684259135E-6	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999056674452292	WITHOUT_CLASSIFICATION	9.433255477071922E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999056674452292	WITHOUT_CLASSIFICATION	9.433255477071922E-5	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9999172849250614	WITHOUT_CLASSIFICATION	8.271507493861962E-5	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9959103695153213	WITHOUT_CLASSIFICATION	0.004089630484678766	IMPLEMENTATION
we need to obtain the lock before any actions are executed since this may be an inverse="true" bidirectional association and it is one of the earlier entity actions which actually updates the database (this action is resposible for second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999870731939788	WITHOUT_CLASSIFICATION	1.2926806021255285E-5	IMPLEMENTATION
postdelete after actually deleting a row record the fact that the instance no longer exists on the database (needed for identity-column key generation) and remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999712342016892	WITHOUT_CLASSIFICATION	2.8765798310904527E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.994713079594217	WITHOUT_CLASSIFICATION	0.005286920405783018	IMPLEMENTATION
