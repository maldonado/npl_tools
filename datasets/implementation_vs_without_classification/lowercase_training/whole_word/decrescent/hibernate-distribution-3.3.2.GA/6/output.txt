todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.8046184092779186	IMPLEMENTATION	0.19538159072208133	WITHOUT_CLASSIFICATION
todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.8046184092779186	IMPLEMENTATION	0.19538159072208133	WITHOUT_CLASSIFICATION
todo return new lock(ts)	IMPLEMENTATION	0.8183686375289659	WITHOUT_CLASSIFICATION	0.18163136247103406	IMPLEMENTATION
todo if lock.gettimestamp().equals(ts)	IMPLEMENTATION	0.9029784080510843	WITHOUT_CLASSIFICATION	0.09702159194891571	IMPLEMENTATION
todo mappings.getlogicaltablename(ownertable)	IMPLEMENTATION	0.596882011381485	WITHOUT_CLASSIFICATION	0.403117988618515	IMPLEMENTATION
todo handle typedefs	IMPLEMENTATION	0.8454350388007722	IMPLEMENTATION	0.15456496119922775	WITHOUT_CLASSIFICATION
todo check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.9327345980703785	WITHOUT_CLASSIFICATION	0.0672654019296215	IMPLEMENTATION
todo bindpropertyresults(alias returnelem)	IMPLEMENTATION	0.596882011381485	WITHOUT_CLASSIFICATION	0.403117988618515	IMPLEMENTATION
todo validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.5657771381709804	WITHOUT_CLASSIFICATION	0.4342228618290195	IMPLEMENTATION
todo native ids	IMPLEMENTATION	0.6657304172504412	WITHOUT_CLASSIFICATION	0.3342695827495589	IMPLEMENTATION
todo if we are using identity columns fetch the identifier	IMPLEMENTATION	0.9988205630350302	WITHOUT_CLASSIFICATION	0.0011794369649698636	IMPLEMENTATION
todo handle property-ref	IMPLEMENTATION	0.8025437868361504	IMPLEMENTATION	0.1974562131638497	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.9005485698642338	IMPLEMENTATION	0.09945143013576623	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.9005485698642338	IMPLEMENTATION	0.09945143013576623	WITHOUT_CLASSIFICATION
todo check if mimer sql cannot handle the way db2 does	IMPLEMENTATION	0.9920344912535365	WITHOUT_CLASSIFICATION	0.007965508746463556	IMPLEMENTATION
todo restrict violation	IMPLEMENTATION	0.7958775953279155	WITHOUT_CLASSIFICATION	0.2041224046720845	IMPLEMENTATION
todo lowercasing done here. was done "at random" before maybe not needed at all ?	IMPLEMENTATION	0.9999996020341522	IMPLEMENTATION	3.9796584779406044E-7	WITHOUT_CLASSIFICATION
todo tolowercase was not done before. only used in template.	IMPLEMENTATION	0.7818201050553761	WITHOUT_CLASSIFICATION	0.21817989494462384	IMPLEMENTATION
add an entry for this type of entity. we can be assured that all referenced entities have already been processed so specify that this entity is with the latest batch. doing the batch number before adding the name to the list is a faster way to get an accurate number.	IMPLEMENTATION	0.9999936422197252	WITHOUT_CLASSIFICATION	6.35778027477217E-6	IMPLEMENTATION
todo avoid this for non-new instances where mightbedirty==false	IMPLEMENTATION	0.707465269292823	WITHOUT_CLASSIFICATION	0.29253473070717684	IMPLEMENTATION
todo optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.7036792939715415	IMPLEMENTATION	0.2963207060284584	WITHOUT_CLASSIFICATION
we could move this inside if we wanted to tolerate collection initializations during collection dirty checking	IMPLEMENTATION	0.9990427077465363	WITHOUT_CLASSIFICATION	9.572922534636699E-4	IMPLEMENTATION
todo assertion only could be optimized away	IMPLEMENTATION	0.5442409381130374	IMPLEMENTATION	0.45575906188696264	WITHOUT_CLASSIFICATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.8947388966561333	IMPLEMENTATION	0.10526110334386676	WITHOUT_CLASSIFICATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.8947388966561333	IMPLEMENTATION	0.10526110334386676	WITHOUT_CLASSIFICATION
todo why aren't these the same?	IMPLEMENTATION	0.911598297185545	IMPLEMENTATION	0.08840170281445495	WITHOUT_CLASSIFICATION
todo always true for now but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.9277441858822651	WITHOUT_CLASSIFICATION	0.0722558141177348	IMPLEMENTATION
todo or should we return 'containstablealias'??	IMPLEMENTATION	0.7174370595627958	WITHOUT_CLASSIFICATION	0.28256294043720426	IMPLEMENTATION
todo arithmetic expressions multiple new foo()	IMPLEMENTATION	0.6148710687013703	WITHOUT_CLASSIFICATION	0.38512893129862963	IMPLEMENTATION
todo for some dialects it would be appropriate to add the renderorderbypropertiesselect() to other select strings	IMPLEMENTATION	0.9909448586122193	IMPLEMENTATION	0.009055141387780654	WITHOUT_CLASSIFICATION
todo cache the persister this shows up in yourkit	IMPLEMENTATION	0.549947025357728	WITHOUT_CLASSIFICATION	0.4500529746422719	IMPLEMENTATION
todo theoretically non-threadsafe	IMPLEMENTATION	0.596882011381485	WITHOUT_CLASSIFICATION	0.403117988618515	IMPLEMENTATION
todo look at optimizing these	IMPLEMENTATION	0.6063557050679119	WITHOUT_CLASSIFICATION	0.3936442949320879	IMPLEMENTATION
todo maybe call it getrowselection() ?	IMPLEMENTATION	0.9682461925665085	IMPLEMENTATION	0.03175380743349159	WITHOUT_CLASSIFICATION
todo make this handle multiple collection roles!	IMPLEMENTATION	0.9983380647098592	IMPLEMENTATION	0.0016619352901408144	WITHOUT_CLASSIFICATION
todo can we limit stored procedures ?!	IMPLEMENTATION	0.7827394113028366	WITHOUT_CLASSIFICATION	0.21726058869716336	IMPLEMENTATION
todo not visible to the user!	IMPLEMENTATION	0.8906293311492655	IMPLEMENTATION	0.10937066885073449	WITHOUT_CLASSIFICATION
todo unnecessary for databases with ansi-style joins	IMPLEMENTATION	0.7007227335226869	WITHOUT_CLASSIFICATION	0.299277266477313	IMPLEMENTATION
todo use these in methods above	IMPLEMENTATION	0.7669238467180798	WITHOUT_CLASSIFICATION	0.2330761532819203	IMPLEMENTATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.906829620181108	IMPLEMENTATION	0.09317037981889201	WITHOUT_CLASSIFICATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.906829620181108	IMPLEMENTATION	0.09317037981889201	WITHOUT_CLASSIFICATION
todo temporary initial step towards hhh-1907	IMPLEMENTATION	0.937902873140458	WITHOUT_CLASSIFICATION	0.062097126859542	IMPLEMENTATION
todo remove this once componentmetamodel is complete and merged	IMPLEMENTATION	0.5354375824448379	WITHOUT_CLASSIFICATION	0.4645624175551622	IMPLEMENTATION
todo handle supportsnotnullunique=false but such a case does not exist in the wild so far	IMPLEMENTATION	0.9981310628197962	WITHOUT_CLASSIFICATION	0.001868937180203649	IMPLEMENTATION
todo still need to make collectionpersisters entitymode-aware	IMPLEMENTATION	0.9983596929797944	IMPLEMENTATION	0.0016403070202055457	WITHOUT_CLASSIFICATION
todo add owner argument!!	IMPLEMENTATION	0.6993213398329493	WITHOUT_CLASSIFICATION	0.30067866016705075	IMPLEMENTATION
todo formulas ?	IMPLEMENTATION	0.546918144408662	WITHOUT_CLASSIFICATION	0.45308185559133796	IMPLEMENTATION
todo include the rowids!!!!	IMPLEMENTATION	0.9229939771448781	WITHOUT_CLASSIFICATION	0.07700602285512198	IMPLEMENTATION
todo cache this sql	IMPLEMENTATION	0.5937837675212001	WITHOUT_CLASSIFICATION	0.40621623247879995	IMPLEMENTATION
todo create uk loaders for component properties	IMPLEMENTATION	0.9453980249784706	WITHOUT_CLASSIFICATION	0.05460197502152942	IMPLEMENTATION
todo cache this in an instvar	IMPLEMENTATION	0.9490809840791403	WITHOUT_CLASSIFICATION	0.05091901592085956	IMPLEMENTATION
/ todo look at perhaps caching this	IMPLEMENTATION	0.9042969317263575	IMPLEMENTATION	0.0957030682736425	WITHOUT_CLASSIFICATION
todo eventually put this back in once we think all is fixed object otheralias = columnsunique.put(qualifiedcolumn columnalias)	IMPLEMENTATION	0.9248248549555322	WITHOUT_CLASSIFICATION	0.07517514504446775	IMPLEMENTATION
todo if we support multiple fetch groups we would need to clone the set of lazy properties!	IMPLEMENTATION	0.9004330115889003	IMPLEMENTATION	0.0995669884110997	WITHOUT_CLASSIFICATION
todo proxies!	IMPLEMENTATION	0.6171049735069516	WITHOUT_CLASSIFICATION	0.38289502649304835	IMPLEMENTATION
todo terrible implementation!	IMPLEMENTATION	0.684438581123917	WITHOUT_CLASSIFICATION	0.31556141887608313	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.6171049735069516	WITHOUT_CLASSIFICATION	0.38289502649304835	IMPLEMENTATION
todo i don't really like this implementation it would be better if this was handled by searchfordirtycollections()	IMPLEMENTATION	0.9965792667210819	IMPLEMENTATION	0.0034207332789181672	WITHOUT_CLASSIFICATION
todo check if key contains the owner id	IMPLEMENTATION	0.534986631546877	IMPLEMENTATION	0.4650133684531229	WITHOUT_CLASSIFICATION
todo proxies!	IMPLEMENTATION	0.6171049735069516	WITHOUT_CLASSIFICATION	0.38289502649304835	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9999652391995392	WITHOUT_CLASSIFICATION	3.476080046075942E-5	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9999652391995392	WITHOUT_CLASSIFICATION	3.476080046075942E-5	IMPLEMENTATION
if we are still not resolved we might represent a constant. needed to add this here because the allowance of naked-prop-refs in the grammar collides with the definition of literals/constants ("nondeterminism"). todo cleanup the grammar so that "processconstants" is always just handled from here	IMPLEMENTATION	0.9998400514880617	IMPLEMENTATION	1.599485119382949E-4	WITHOUT_CLASSIFICATION
todo add referencedclass to disambiguate to fks on the same columns pointing to different tables	IMPLEMENTATION	0.768939967857098	IMPLEMENTATION	0.2310600321429021	WITHOUT_CLASSIFICATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999985665521083	WITHOUT_CLASSIFICATION	1.4334478916945017E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999900482531356	WITHOUT_CLASSIFICATION	9.95174686430363E-6	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999900482531356	WITHOUT_CLASSIFICATION	9.95174686430363E-6	IMPLEMENTATION
| this | bean | args | raw bean |	WITHOUT_CLASSIFICATION	0.9999318484581902	WITHOUT_CLASSIFICATION	6.815154180981734E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
astore 4 store the raw bean	WITHOUT_CLASSIFICATION	0.9999654042883598	WITHOUT_CLASSIFICATION	3.4595711640274504E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999895319403733	WITHOUT_CLASSIFICATION	1.0468059626654058E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999895319403733	WITHOUT_CLASSIFICATION	1.0468059626654058E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999908955022289	WITHOUT_CLASSIFICATION	9.10449777117907E-6	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999595698388641	WITHOUT_CLASSIFICATION	4.043016113587317E-5	IMPLEMENTATION
putfield new value of the field	WITHOUT_CLASSIFICATION	0.9999836337293899	WITHOUT_CLASSIFICATION	1.6366270610109755E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999941426316067	WITHOUT_CLASSIFICATION	5.857368393330059E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999993332280994	WITHOUT_CLASSIFICATION	6.667719004697522E-7	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999993332280994	WITHOUT_CLASSIFICATION	6.667719004697522E-7	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.999969237568573	WITHOUT_CLASSIFICATION	3.076243142692238E-5	IMPLEMENTATION
just decrement the lock don't recache (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9991851089700728	WITHOUT_CLASSIFICATION	8.148910299271796E-4	IMPLEMENTATION
decode row selection	WITHOUT_CLASSIFICATION	0.999988094866302	WITHOUT_CLASSIFICATION	1.190513369795984E-5	IMPLEMENTATION
disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999963519938657	WITHOUT_CLASSIFICATION	3.6480061343968918E-6	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999958554882277	WITHOUT_CLASSIFICATION	4.144511772322658E-6	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9999058349662401	WITHOUT_CLASSIFICATION	9.416503375986467E-5	IMPLEMENTATION
row id	WITHOUT_CLASSIFICATION	0.9999077040849272	WITHOUT_CLASSIFICATION	9.22959150727605E-5	IMPLEMENTATION
composite-id	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999607610651707	WITHOUT_CLASSIFICATION	3.923893482924464E-5	IMPLEMENTATION
property prop = new property() prop.setname("id") prop.setpropertyaccessorname("embedded") prop.setvalue(id) entity.setidentifierproperty(prop)	WITHOUT_CLASSIFICATION	0.9999509886916742	WITHOUT_CLASSIFICATION	4.901130832573245E-5	IMPLEMENTATION
dynamic insert	WITHOUT_CLASSIFICATION	0.9999921229214023	WITHOUT_CLASSIFICATION	7.877078597769463E-6	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999724316519406	WITHOUT_CLASSIFICATION	2.7568348059371866E-5	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999983389674194	WITHOUT_CLASSIFICATION	1.6610325806519505E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.999965195896375	WITHOUT_CLASSIFICATION	3.480410362501336E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.999965195896375	WITHOUT_CLASSIFICATION	3.480410362501336E-5	IMPLEMENTATION
generated properties can never be insertable	WITHOUT_CLASSIFICATION	0.9991564654549302	WITHOUT_CLASSIFICATION	8.435345450698758E-4	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999864310521166	WITHOUT_CLASSIFICATION	1.356894788343106E-5	IMPLEMENTATION
by default natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999993499121169	WITHOUT_CLASSIFICATION	6.500878830868558E-7	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999793433436768	WITHOUT_CLASSIFICATION	2.065665632319948E-5	IMPLEMENTATION
we found some extends attributes referencing entities which were not already processed. here we need to locate all entity-names and class-names contained in this document itself making sure that these get removed from the extendz list such that only extends names which require us to delay processing (i.e. external to this document and not yet processed) are contained in the returned result	WITHOUT_CLASSIFICATION	0.9254086869765902	WITHOUT_CLASSIFICATION	0.07459131302340982	IMPLEMENTATION
build a resultsetmappingdefinition given a containing element for the "return-xxx" elements @param resultsetelem the element containing the return definitions. @param path no clue @param mappings the current processing state. @return the description of the mappings	WITHOUT_CLASSIFICATION	0.9999550626212772	WITHOUT_CLASSIFICATION	4.493737872274778E-5	IMPLEMENTATION
private boolean showsql private boolean formatsql	WITHOUT_CLASSIFICATION	0.999995759502202	WITHOUT_CLASSIFICATION	4.240497798057772E-6	IMPLEMENTATION
public boolean isshowsqlenabled() { return showsql } public boolean isformatsqlenabled() { return formatsql }	WITHOUT_CLASSIFICATION	0.9999914202207705	WITHOUT_CLASSIFICATION	8.579779229567562E-6	IMPLEMENTATION
set a custom entity resolver. this entity resolver must be set before addxxx(misc) call. default value is {@link org.hibernate.util.dtdentityresolver} @param entityresolver entity resolver to use	WITHOUT_CLASSIFICATION	0.999985353345228	WITHOUT_CLASSIFICATION	1.464665477213502E-5	IMPLEMENTATION
final list extendsqueue	WITHOUT_CLASSIFICATION	0.9999925224823751	WITHOUT_CLASSIFICATION	7.477517624758926E-6	IMPLEMENTATION
if close() is called guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999995617447811	WITHOUT_CLASSIFICATION	4.3825521886439874E-7	IMPLEMENTATION
if a threadlocalsessioncontext-bound session happens to get serialized to be completely correct we need to make sure that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999711338178656	WITHOUT_CLASSIFICATION	2.8866182134364012E-5	IMPLEMENTATION
on the inverse it makes sense that if a threadlocalsessioncontext- bound session then gets deserialized to go ahead and re-bind it to the threadlocalsessioncontext session map.	WITHOUT_CLASSIFICATION	0.9999950558584447	WITHOUT_CLASSIFICATION	4.944141555199889E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999985678384281	WITHOUT_CLASSIFICATION	1.432161571869387E-6	IMPLEMENTATION
60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999854378129742	WITHOUT_CLASSIFICATION	1.4562187025720327E-5	IMPLEMENTATION
optimisticcache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999583269415074	WITHOUT_CLASSIFICATION	4.1673058492648813E-5	IMPLEMENTATION
cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999937730858033	WITHOUT_CLASSIFICATION	6.226914196715973E-5	IMPLEMENTATION
option.setdataversion( nonlockingdataversion.instance )	WITHOUT_CLASSIFICATION	0.9999354420963775	WITHOUT_CLASSIFICATION	6.455790362247926E-5	IMPLEMENTATION
do the put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9988082547920679	WITHOUT_CLASSIFICATION	0.001191745207932165	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
tree cache in optimistic mode seems to have as very difficult time with remove calls on non-existent nodes (npes)	WITHOUT_CLASSIFICATION	0.9998144372021577	WITHOUT_CLASSIFICATION	1.8556279784237708E-4	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999840514996491	WITHOUT_CLASSIFICATION	1.5948500350867462E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999840514996491	WITHOUT_CLASSIFICATION	1.5948500350867462E-5	IMPLEMENTATION
do the failfast put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9988082547920679	WITHOUT_CLASSIFICATION	0.001191745207932165	IMPLEMENTATION
note evict() operates locally only (i.e. does not propogate to any other nodes in the potential cluster). this is exactly what is needed when we destroy() here destroy() is used as part of the process of shutting down a sessionfactory thus these removals should not be propogated	WITHOUT_CLASSIFICATION	0.8987494108980547	WITHOUT_CLASSIFICATION	0.10125058910194534	IMPLEMENTATION
protected regionrootlistener listener	WITHOUT_CLASSIFICATION	0.9998688448770593	WITHOUT_CLASSIFICATION	1.3115512294067228E-4	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.999903184504949	WITHOUT_CLASSIFICATION	9.681549505098316E-5	IMPLEMENTATION
if we've been blocking for the mutex perhaps another thread has already reestablished the root. in case the node was reestablised via replication confirm it's marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999997635646397	WITHOUT_CLASSIFICATION	2.3643536041688534E-7	IMPLEMENTATION
for pessimistic locking we just want to toss out our ref to any old invalid root node and get the latest (may be null)	WITHOUT_CLASSIFICATION	0.9999998348856268	WITHOUT_CLASSIFICATION	1.6511437304215972E-7	IMPLEMENTATION
the rest only matters for optimistic locking where we need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9914406084377761	WITHOUT_CLASSIFICATION	0.00855939156222378	IMPLEMENTATION
don't hold a transactional lock for this	WITHOUT_CLASSIFICATION	0.9999709157225293	WITHOUT_CLASSIFICATION	2.9084277470632775E-5	IMPLEMENTATION
make sure the root node for the region exists and has a dataversion that never complains	WITHOUT_CLASSIFICATION	0.9990339526212699	WITHOUT_CLASSIFICATION	9.660473787300134E-4	IMPLEMENTATION
never evict this node	WITHOUT_CLASSIFICATION	0.9987612562600041	WITHOUT_CLASSIFICATION	0.001238743739995869	IMPLEMENTATION
fix up the resident flag	WITHOUT_CLASSIFICATION	0.9874664382472527	WITHOUT_CLASSIFICATION	0.012533561752747441	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999840514996491	WITHOUT_CLASSIFICATION	1.5948500350867462E-5	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999952053999146	WITHOUT_CLASSIFICATION	4.794600085405222E-6	IMPLEMENTATION
no-op. we don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9983005832108154	WITHOUT_CLASSIFICATION	0.001699416789184665	IMPLEMENTATION
this should only be possible if the caches are constructor injected	WITHOUT_CLASSIFICATION	0.9999948450930374	WITHOUT_CLASSIFICATION	5.154906962582899E-6	IMPLEMENTATION
we only build caches if none were passed in. passing in caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999985674603928	WITHOUT_CLASSIFICATION	1.4325396071029306E-6	IMPLEMENTATION
set up the cache factory	WITHOUT_CLASSIFICATION	0.9999894184467506	WITHOUT_CLASSIFICATION	1.0581553249418638E-5	IMPLEMENTATION
see if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.999999835263315	WITHOUT_CLASSIFICATION	1.6473668504249982E-7	IMPLEMENTATION
default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999994820225817	WITHOUT_CLASSIFICATION	5.17977418281705E-7	IMPLEMENTATION
default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999997252275518	WITHOUT_CLASSIFICATION	2.747724481650807E-7	IMPLEMENTATION
for timestamps we default to a separate config	WITHOUT_CLASSIFICATION	0.9999957130296545	WITHOUT_CLASSIFICATION	4.286970345527223E-6	IMPLEMENTATION
we can't change the tm on a running cache just check if the cache has no tm and we're ok with that	WITHOUT_CLASSIFICATION	0.9999991400399996	WITHOUT_CLASSIFICATION	8.599600003855481E-7	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9999197945417677	WITHOUT_CLASSIFICATION	8.020545823227925E-5	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9998723662957361	WITHOUT_CLASSIFICATION	1.276337042639999E-4	IMPLEMENTATION
this method should be implemented assuming it's valid to do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.7472894780419759	WITHOUT_CLASSIFICATION	0.2527105219580241	IMPLEMENTATION
make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9994514981179745	WITHOUT_CLASSIFICATION	5.485018820254067E-4	IMPLEMENTATION
we use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999883456822555	WITHOUT_CLASSIFICATION	1.165431774455622E-5	IMPLEMENTATION
following methods we don't delegate since they have so little logic it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9943703814598297	WITHOUT_CLASSIFICATION	0.005629618540170352	IMPLEMENTATION
if jbc is using invalidation we don't want to propagate changes. we use the timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999885311634056	WITHOUT_CLASSIFICATION	1.1468836594357838E-5	IMPLEMENTATION
we don't want to waste effort setting an option if jbc is already in local mode. if jbc is repl_(a)sync then check if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999938351725695	WITHOUT_CLASSIFICATION	6.1648274305359216E-6	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents updates add a zero (or low) timeout option so we don't block waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.999972372509257	WITHOUT_CLASSIFICATION	2.7627490743088146E-5	IMPLEMENTATION
double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999901826195515	WITHOUT_CLASSIFICATION	9.817380448547875E-6	IMPLEMENTATION
get an exclusive right to update jbc for this key from this node.	WITHOUT_CLASSIFICATION	0.9999994005855686	WITHOUT_CLASSIFICATION	5.994144313706856E-7	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9999902237370596	WITHOUT_CLASSIFICATION	9.776262940444255E-6	IMPLEMENTATION
initial load from jbc	WITHOUT_CLASSIFICATION	0.9999991828333145	WITHOUT_CLASSIFICATION	8.171666854649273E-7	IMPLEMENTATION
see if we had a 2nd invalidation from the same initial preinvalidation timestamp. if so only increment if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999999997719567	WITHOUT_CLASSIFICATION	2.2804316004091515E-10	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9999902237370596	WITHOUT_CLASSIFICATION	9.776262940444255E-6	IMPLEMENTATION
if the workspace node has null as well ok if not we've been modified in a non-comparable manner which we have to treat as us being newer	WITHOUT_CLASSIFICATION	0.9999738018524987	WITHOUT_CLASSIFICATION	2.619814750131075E-5	IMPLEMENTATION
the standard comparator types are not serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999771693554806	WITHOUT_CLASSIFICATION	2.2830644519466823E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999843720004501	WITHOUT_CLASSIFICATION	1.562799954990912E-5	IMPLEMENTATION
construct the cache	WITHOUT_CLASSIFICATION	0.9999644273642828	WITHOUT_CLASSIFICATION	3.557263571709347E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999869562041483	WITHOUT_CLASSIFICATION	1.3043795851528497E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999869562041483	WITHOUT_CLASSIFICATION	1.3043795851528497E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.999961484167389	WITHOUT_CLASSIFICATION	3.8515832610975384E-5	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for initialpoolsize which hibernate sensibly lets default to minpoolsize but we'll let users override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999999574584232	WITHOUT_CLASSIFICATION	4.2541576868085735E-8	IMPLEMENTATION
datasource unpooled = datasources.unpooleddatasource(jdbcurl props.getproperty(environment.user) props.getproperty(environment.pass))	WITHOUT_CLASSIFICATION	0.9999325920819337	WITHOUT_CLASSIFICATION	6.740791806627011E-5	IMPLEMENTATION
true if the pool is borrowed from the outside false if we used to create it	WITHOUT_CLASSIFICATION	0.9999998189813898	WITHOUT_CLASSIFICATION	1.8101861027693933E-7	IMPLEMENTATION
get a connection from the pool (thru drivermanager cfr. proxool doc)	WITHOUT_CLASSIFICATION	0.9998621142521805	WITHOUT_CLASSIFICATION	1.3788574781941783E-4	IMPLEMENTATION
set the transaction isolation if defined	WITHOUT_CLASSIFICATION	0.999998726492865	WITHOUT_CLASSIFICATION	1.2735071349818846E-6	IMPLEMENTATION
toggle autocommit to false if set	WITHOUT_CLASSIFICATION	0.9999920247318402	WITHOUT_CLASSIFICATION	7.975268159850127E-6	IMPLEMENTATION
return the connection	WITHOUT_CLASSIFICATION	0.9993926868572476	WITHOUT_CLASSIFICATION	6.073131427524443E-4	IMPLEMENTATION
get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999660726236992	WITHOUT_CLASSIFICATION	3.392737630089475E-5	IMPLEMENTATION
default the proxool alias setting	WITHOUT_CLASSIFICATION	0.9999989672635682	WITHOUT_CLASSIFICATION	1.0327364318179564E-6	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999978654398547	WITHOUT_CLASSIFICATION	2.134560145273005E-6	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999978654398547	WITHOUT_CLASSIFICATION	2.134560145273005E-6	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9997938760823384	WITHOUT_CLASSIFICATION	2.0612391766167815E-4	IMPLEMENTATION
set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999567411767983	WITHOUT_CLASSIFICATION	4.3258823201684626E-5	IMPLEMENTATION
configured using the jaxp configurator	WITHOUT_CLASSIFICATION	0.999988401630735	WITHOUT_CLASSIFICATION	1.1598369265045978E-5	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999978654398547	WITHOUT_CLASSIFICATION	2.134560145273005E-6	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9997938760823384	WITHOUT_CLASSIFICATION	2.0612391766167815E-4	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9997938760823384	WITHOUT_CLASSIFICATION	2.0612391766167815E-4	IMPLEMENTATION
configured using the properties file configurator	WITHOUT_CLASSIFICATION	0.9999653825689401	WITHOUT_CLASSIFICATION	3.461743105991475E-5	IMPLEMENTATION
remember isolation level	WITHOUT_CLASSIFICATION	0.9991589770621427	WITHOUT_CLASSIFICATION	8.41022937857288E-4	IMPLEMENTATION
if the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999999961653759	WITHOUT_CLASSIFICATION	3.834624012819019E-9	IMPLEMENTATION
we have created the pool ourselves so shut it down	WITHOUT_CLASSIFICATION	0.9999973425080656	WITHOUT_CLASSIFICATION	2.657491934440606E-6	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9989766231324572	WITHOUT_CLASSIFICATION	0.0010233768675427851	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9989766231324572	WITHOUT_CLASSIFICATION	0.0010233768675427851	IMPLEMENTATION
always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999933787547276	WITHOUT_CLASSIFICATION	6.621245272377387E-6	IMPLEMENTATION
public currency getcurrency(int col) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999761693888303	WITHOUT_CLASSIFICATION	2.3830611169719587E-5	IMPLEMENTATION
default is pojo	WITHOUT_CLASSIFICATION	0.9999978742471948	WITHOUT_CLASSIFICATION	2.1257528052938347E-6	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999991022816964	WITHOUT_CLASSIFICATION	8.977183035403918E-7	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999991022816964	WITHOUT_CLASSIFICATION	8.977183035403918E-7	IMPLEMENTATION
private cacheentry cacheentry	WITHOUT_CLASSIFICATION	0.9999929735111477	WITHOUT_CLASSIFICATION	7.026488852236246E-6	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9983434046792723	WITHOUT_CLASSIFICATION	0.001656595320727789	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9999351634286593	WITHOUT_CLASSIFICATION	6.483657134073064E-5	IMPLEMENTATION
get the updated snapshot of the entity state by cloning current state it is safe to copy in place since by this time no-one else (should have) has a reference to the array	WITHOUT_CLASSIFICATION	0.9999999974601955	WITHOUT_CLASSIFICATION	2.539804461961907E-9	IMPLEMENTATION
this entity defines proeprty generation so process those generated values	WITHOUT_CLASSIFICATION	0.9999991782582451	WITHOUT_CLASSIFICATION	8.217417549322795E-7	IMPLEMENTATION
have the entity entry perform post-update processing passing it the update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999467226489814	WITHOUT_CLASSIFICATION	5.3277351018640924E-5	IMPLEMENTATION
!persister.iscacheinvalidationrequired()	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.999834663570556	WITHOUT_CLASSIFICATION	1.6533642944406725E-4	IMPLEMENTATION
sort first by role name	WITHOUT_CLASSIFICATION	0.9999724094587206	WITHOUT_CLASSIFICATION	2.7590541279383062E-5	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9999351634286593	WITHOUT_CLASSIFICATION	6.483657134073064E-5	IMPLEMENTATION
then by fk	WITHOUT_CLASSIFICATION	0.9999944258742841	WITHOUT_CLASSIFICATION	5.574125715916371E-6	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999849857251152	WITHOUT_CLASSIFICATION	1.5014274884887353E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999849857251152	WITHOUT_CLASSIFICATION	1.5014274884887353E-5	IMPLEMENTATION
an existing collection that was either non-empty or uninitialized is replaced by null or a different collection (if the collection is uninitialized hibernate has no way of knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999998624862841	WITHOUT_CLASSIFICATION	1.375137159228422E-7	IMPLEMENTATION
this method is called when a new non-null collection is persisted or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999988629111869	WITHOUT_CLASSIFICATION	1.1370888130552929E-6	IMPLEMENTATION
boolean put = persister.getcache().insert(ck cacheentry)	WITHOUT_CLASSIFICATION	0.9998786499356579	WITHOUT_CLASSIFICATION	1.2135006434206885E-4	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9855131183140441	WITHOUT_CLASSIFICATION	0.014486881685956002	IMPLEMENTATION
do nothing - we only need to notify the cache	WITHOUT_CLASSIFICATION	0.999965023833297	WITHOUT_CLASSIFICATION	3.49761667029853E-5	IMPLEMENTATION
sort first by entity name	WITHOUT_CLASSIFICATION	0.9999730427786374	WITHOUT_CLASSIFICATION	2.695722136253089E-5	IMPLEMENTATION
then by id	WITHOUT_CLASSIFICATION	0.9999758090200547	WITHOUT_CLASSIFICATION	2.419097994525571E-5	IMPLEMENTATION
to be safe	WITHOUT_CLASSIFICATION	0.9999870052680552	WITHOUT_CLASSIFICATION	1.29947319449047E-5	IMPLEMENTATION
no transformations took place so handle it as we would a non-instrumented class	WITHOUT_CLASSIFICATION	0.9998757607549079	WITHOUT_CLASSIFICATION	1.2423924509205077E-4	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999411564003	WITHOUT_CLASSIFICATION	5.884359968814667E-8	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999999411564003	WITHOUT_CLASSIFICATION	5.884359968814667E-8	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9993533616504017	WITHOUT_CLASSIFICATION	6.466383495983858E-4	IMPLEMENTATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999985665521083	WITHOUT_CLASSIFICATION	1.4334478916945017E-6	IMPLEMENTATION
set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999963826739152	WITHOUT_CLASSIFICATION	3.617326084763621E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
invokespecial	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999900482531356	WITHOUT_CLASSIFICATION	9.95174686430363E-6	IMPLEMENTATION
aload_1 load bean	WITHOUT_CLASSIFICATION	0.9999605665741979	WITHOUT_CLASSIFICATION	3.9433425802159896E-5	IMPLEMENTATION
checkcast cast bean	WITHOUT_CLASSIFICATION	0.9999726780712858	WITHOUT_CLASSIFICATION	2.732192871423518E-5	IMPLEMENTATION
astore_3 store bean	WITHOUT_CLASSIFICATION	0.9999129081469806	WITHOUT_CLASSIFICATION	8.709185301935055E-5	IMPLEMENTATION
aload_2 args	WITHOUT_CLASSIFICATION	0.9999594983691785	WITHOUT_CLASSIFICATION	4.05016308214744E-5	IMPLEMENTATION
iconst_i continue to aastore growing stack is 1	WITHOUT_CLASSIFICATION	0.9999839013742405	WITHOUT_CLASSIFICATION	1.6098625759431482E-5	IMPLEMENTATION
new	WITHOUT_CLASSIFICATION	0.9999872272010998	WITHOUT_CLASSIFICATION	1.2772798900222915E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999840018836218	WITHOUT_CLASSIFICATION	1.5998116378246722E-5	IMPLEMENTATION
aload_3 load the raw bean	WITHOUT_CLASSIFICATION	0.9999812333340597	WITHOUT_CLASSIFICATION	1.8766665940288092E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
aastore args	WITHOUT_CLASSIFICATION	0.9999594983691785	WITHOUT_CLASSIFICATION	4.05016308214744E-5	IMPLEMENTATION
| this | bean | args | i | raw bean | exception |	WITHOUT_CLASSIFICATION	0.999934289260279	WITHOUT_CLASSIFICATION	6.571073972086549E-5	IMPLEMENTATION
required to exception table iconst_0 i	WITHOUT_CLASSIFICATION	0.9998547036484303	WITHOUT_CLASSIFICATION	1.452963515696665E-4	IMPLEMENTATION
istore_3 store i	WITHOUT_CLASSIFICATION	0.9997269556425658	WITHOUT_CLASSIFICATION	2.7304435743418615E-4	IMPLEMENTATION
aload_1 load the bean	WITHOUT_CLASSIFICATION	0.9999809571584053	WITHOUT_CLASSIFICATION	1.9042841594668245E-5	IMPLEMENTATION
checkcast cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.999993511421288	WITHOUT_CLASSIFICATION	6.488578712036386E-6	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999895319403733	WITHOUT_CLASSIFICATION	1.0468059626654058E-5	IMPLEMENTATION
start region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9999024211244965	WITHOUT_CLASSIFICATION	9.757887550356286E-5	IMPLEMENTATION
iinc 3 1	WITHOUT_CLASSIFICATION	0.9999218360685371	WITHOUT_CLASSIFICATION	7.816393146286608E-5	IMPLEMENTATION
aload 4 load the raw bean	WITHOUT_CLASSIFICATION	0.999984336212994	WITHOUT_CLASSIFICATION	1.5663787006029918E-5	IMPLEMENTATION
aload_2 load the args	WITHOUT_CLASSIFICATION	0.9999803150583869	WITHOUT_CLASSIFICATION	1.968494161301995E-5	IMPLEMENTATION
iconst_i	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
aaload	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999838969698842	WITHOUT_CLASSIFICATION	1.6103030115726534E-5	IMPLEMENTATION
checkcast (case of primitive type) invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999902158872352	WITHOUT_CLASSIFICATION	9.784112764780794E-6	IMPLEMENTATION
checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999960816204506	WITHOUT_CLASSIFICATION	3.918379549394848E-6	IMPLEMENTATION
current stack len = 2	WITHOUT_CLASSIFICATION	0.9999839590118524	WITHOUT_CLASSIFICATION	1.6040988147548672E-5	IMPLEMENTATION
end region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9984492749108397	WITHOUT_CLASSIFICATION	0.0015507250891603362	IMPLEMENTATION
register in exception table	WITHOUT_CLASSIFICATION	0.9999976145299009	WITHOUT_CLASSIFICATION	2.385470099155366E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999900482531356	WITHOUT_CLASSIFICATION	9.95174686430363E-6	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999900482531356	WITHOUT_CLASSIFICATION	9.95174686430363E-6	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999840018836218	WITHOUT_CLASSIFICATION	1.5998116378246722E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999838969698842	WITHOUT_CLASSIFICATION	1.6103030115726534E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999908955022289	WITHOUT_CLASSIFICATION	9.10449777117907E-6	IMPLEMENTATION
astore 5 store exception	WITHOUT_CLASSIFICATION	0.999987458933178	WITHOUT_CLASSIFICATION	1.2541066821910712E-5	IMPLEMENTATION
new bulkaccessorexception	WITHOUT_CLASSIFICATION	0.9999770786788739	WITHOUT_CLASSIFICATION	2.292132112611948E-5	IMPLEMENTATION
aload 5 load exception	WITHOUT_CLASSIFICATION	0.9999943218907976	WITHOUT_CLASSIFICATION	5.678109202301481E-6	IMPLEMENTATION
iload_3 i	WITHOUT_CLASSIFICATION	0.999949128732293	WITHOUT_CLASSIFICATION	5.0871267706904226E-5	IMPLEMENTATION
invokespecial bulkaccessorexception.<init>	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
athrow	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
warning classfile only	WITHOUT_CLASSIFICATION	0.9999966391067999	WITHOUT_CLASSIFICATION	3.360893200197395E-6	IMPLEMENTATION
swallow	WITHOUT_CLASSIFICATION	0.9999837726978449	WITHOUT_CLASSIFICATION	1.6227302155092283E-5	IMPLEMENTATION
local variable | this |	WITHOUT_CLASSIFICATION	0.9999208642870585	WITHOUT_CLASSIFICATION	7.913571294148976E-5	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9999083681061468	WITHOUT_CLASSIFICATION	9.163189385317837E-5	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9999083681061468	WITHOUT_CLASSIFICATION	9.163189385317837E-5	IMPLEMENTATION
getfield get field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9999953098004506	WITHOUT_CLASSIFICATION	4.690199549337253E-6	IMPLEMENTATION
areturn return the value of the field	WITHOUT_CLASSIFICATION	0.9999872484400039	WITHOUT_CLASSIFICATION	1.2751559996032154E-5	IMPLEMENTATION
local variables | this | callback |	WITHOUT_CLASSIFICATION	0.9999555493813442	WITHOUT_CLASSIFICATION	4.4450618655821094E-5	IMPLEMENTATION
aload_1 load callback	WITHOUT_CLASSIFICATION	0.9999437293071745	WITHOUT_CLASSIFICATION	5.6270692825501696E-5	IMPLEMENTATION
putfield put field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9999184002147035	WITHOUT_CLASSIFICATION	8.15997852964578E-5	IMPLEMENTATION
case of non-static field	WITHOUT_CLASSIFICATION	0.9999928620954681	WITHOUT_CLASSIFICATION	7.137904531963769E-6	IMPLEMENTATION
getfield get each field	WITHOUT_CLASSIFICATION	0.9999944868640367	WITHOUT_CLASSIFICATION	5.513135963369607E-6	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999595698388641	WITHOUT_CLASSIFICATION	4.043016113587317E-5	IMPLEMENTATION
ifnonnull	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.9999805200712725	WITHOUT_CLASSIFICATION	1.9479928727556497E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.9999805200712725	WITHOUT_CLASSIFICATION	1.9479928727556497E-5	IMPLEMENTATION
store_1 each type	WITHOUT_CLASSIFICATION	0.9999681924823784	WITHOUT_CLASSIFICATION	3.1807517621625245E-5	IMPLEMENTATION
ldc name of the field	WITHOUT_CLASSIFICATION	0.999994738223087	WITHOUT_CLASSIFICATION	5.261776912904973E-6	IMPLEMENTATION
load_1 each type	WITHOUT_CLASSIFICATION	0.9999681924823784	WITHOUT_CLASSIFICATION	3.1807517621625245E-5	IMPLEMENTATION
invokeinterface invoke callback.read() each type	WITHOUT_CLASSIFICATION	0.9999672303546803	WITHOUT_CLASSIFICATION	3.2769645319645645E-5	IMPLEMENTATION
int	WITHOUT_CLASSIFICATION	0.9999929384090502	WITHOUT_CLASSIFICATION	7.061590949751552E-6	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999900482531356	WITHOUT_CLASSIFICATION	9.95174686430363E-6	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999840018836218	WITHOUT_CLASSIFICATION	1.5998116378246722E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999838969698842	WITHOUT_CLASSIFICATION	1.6103030115726534E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999838969698842	WITHOUT_CLASSIFICATION	1.6103030115726534E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
putfield	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999900482531356	WITHOUT_CLASSIFICATION	9.95174686430363E-6	IMPLEMENTATION
ldc field name	WITHOUT_CLASSIFICATION	0.9999806393648273	WITHOUT_CLASSIFICATION	1.9360635172762305E-5	IMPLEMENTATION
getfield old value of the field	WITHOUT_CLASSIFICATION	0.9999965656008698	WITHOUT_CLASSIFICATION	3.4343991302990417E-6	IMPLEMENTATION
invokeinterface callback.write(..)	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999941426316067	WITHOUT_CLASSIFICATION	5.857368393330059E-6	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999941426316067	WITHOUT_CLASSIFICATION	5.857368393330059E-6	IMPLEMENTATION
not array	WITHOUT_CLASSIFICATION	0.999090481626938	WITHOUT_CLASSIFICATION	9.095183730619263E-4	IMPLEMENTATION
array of reference type	WITHOUT_CLASSIFICATION	0.9999981624204644	WITHOUT_CLASSIFICATION	1.8375795355290343E-6	IMPLEMENTATION
boolean	WITHOUT_CLASSIFICATION	0.9999934123182558	WITHOUT_CLASSIFICATION	6.58768174415807E-6	IMPLEMENTATION
byte	WITHOUT_CLASSIFICATION	0.9999846746483089	WITHOUT_CLASSIFICATION	1.5325351691139345E-5	IMPLEMENTATION
char	WITHOUT_CLASSIFICATION	0.9999977502265899	WITHOUT_CLASSIFICATION	2.249773410080543E-6	IMPLEMENTATION
short	WITHOUT_CLASSIFICATION	0.9999840507488641	WITHOUT_CLASSIFICATION	1.5949251135915167E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999993332280994	WITHOUT_CLASSIFICATION	6.667719004697522E-7	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999855296488077	WITHOUT_CLASSIFICATION	1.4470351192338242E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999855296488077	WITHOUT_CLASSIFICATION	1.4470351192338242E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.999969237568573	WITHOUT_CLASSIFICATION	3.076243142692238E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.999969237568573	WITHOUT_CLASSIFICATION	3.076243142692238E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.999980581293437	WITHOUT_CLASSIFICATION	1.9418706562965175E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.999980581293437	WITHOUT_CLASSIFICATION	1.9418706562965175E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999993415887625	WITHOUT_CLASSIFICATION	6.584112376411519E-7	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999993415887625	WITHOUT_CLASSIFICATION	6.584112376411519E-7	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999941426316067	WITHOUT_CLASSIFICATION	5.857368393330059E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999993332280994	WITHOUT_CLASSIFICATION	6.667719004697522E-7	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999855296488077	WITHOUT_CLASSIFICATION	1.4470351192338242E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999855296488077	WITHOUT_CLASSIFICATION	1.4470351192338242E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.999969237568573	WITHOUT_CLASSIFICATION	3.076243142692238E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.999980581293437	WITHOUT_CLASSIFICATION	1.9418706562965175E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.999980581293437	WITHOUT_CLASSIFICATION	1.9418706562965175E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999993415887625	WITHOUT_CLASSIFICATION	6.584112376411519E-7	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.999966563147041	WITHOUT_CLASSIFICATION	3.3436852959010934E-5	IMPLEMENTATION
mainly for oscache	WITHOUT_CLASSIFICATION	0.9999879326380952	WITHOUT_CLASSIFICATION	1.2067361904814424E-5	IMPLEMENTATION
decrement the lock	WITHOUT_CLASSIFICATION	0.9999793773311777	WITHOUT_CLASSIFICATION	2.0622668822276506E-5	IMPLEMENTATION
create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999235756510755	WITHOUT_CLASSIFICATION	7.642434892462697E-5	IMPLEMENTATION
recache the updated state	WITHOUT_CLASSIFICATION	0.9999906124483313	WITHOUT_CLASSIFICATION	9.387551668677996E-6	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999857676866224	WITHOUT_CLASSIFICATION	1.4232313377544724E-5	IMPLEMENTATION
null clientlock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999999471274306	WITHOUT_CLASSIFICATION	5.287256949092007E-8	IMPLEMENTATION
we really could refresh the item if it is not a lock but it might be slower return freshtimestamp < txtimestamp	WITHOUT_CLASSIFICATION	0.9999928708786959	WITHOUT_CLASSIFICATION	7.129121304081305E-6	IMPLEMENTATION
by requiring < we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999997211384946	WITHOUT_CLASSIFICATION	2.788615053868192E-7	IMPLEMENTATION
the user provided resulttransformer not the one used with "select new". here to avoid mangling transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9964353569020322	WITHOUT_CLASSIFICATION	0.0035646430979676554	IMPLEMENTATION
disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999309969124609	WITHOUT_CLASSIFICATION	6.900308753909394E-5	IMPLEMENTATION
disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999776262021675	WITHOUT_CLASSIFICATION	2.2373797832558636E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.999961484167389	WITHOUT_CLASSIFICATION	3.8515832610975384E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999857676866224	WITHOUT_CLASSIFICATION	1.4232313377544724E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999857676866224	WITHOUT_CLASSIFICATION	1.4232313377544724E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999857676866224	WITHOUT_CLASSIFICATION	1.4232313377544724E-5	IMPLEMENTATION
this is called from settingsfactory irregardless trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999948487648233	WITHOUT_CLASSIFICATION	5.1512351768208025E-6	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9999921626322549	WITHOUT_CLASSIFICATION	7.83736774516327E-6	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9999921626322549	WITHOUT_CLASSIFICATION	7.83736774516327E-6	IMPLEMENTATION
throw new unsupportedoperationexception("can't write to a readonly object")	WITHOUT_CLASSIFICATION	0.9997920081461735	WITHOUT_CLASSIFICATION	2.079918538264478E-4	IMPLEMENTATION
assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999999567247747	WITHOUT_CLASSIFICATION	4.3275225250725006E-8	IMPLEMENTATION
persister.setidentifier(result id) before calling interceptor for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999903130827963	WITHOUT_CLASSIFICATION	9.686917203678635E-6	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9995755874302799	WITHOUT_CLASSIFICATION	4.244125697200492E-4	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9995755874302799	WITHOUT_CLASSIFICATION	4.244125697200492E-4	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999958554882277	WITHOUT_CLASSIFICATION	4.144511772322658E-6	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999435693530239	WITHOUT_CLASSIFICATION	5.64306469761223E-5	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999435693530239	WITHOUT_CLASSIFICATION	5.64306469761223E-5	IMPLEMENTATION
classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9998929424909337	WITHOUT_CLASSIFICATION	1.0705750906633322E-4	IMPLEMENTATION
get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999975668320578	WITHOUT_CLASSIFICATION	2.433167942276747E-6	IMPLEMENTATION
get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999983389674194	WITHOUT_CLASSIFICATION	1.6610325806519505E-6	IMPLEMENTATION
db-objectname	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
mutable	WITHOUT_CLASSIFICATION	0.999983805126529	WITHOUT_CLASSIFICATION	1.6194873471022475E-5	IMPLEMENTATION
where	WITHOUT_CLASSIFICATION	0.9999550162682885	WITHOUT_CLASSIFICATION	4.498373171143475E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9999058349662401	WITHOUT_CLASSIFICATION	9.416503375986467E-5	IMPLEMENTATION
polymorphism	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.7955980071111416	WITHOUT_CLASSIFICATION	0.20440199288885846	IMPLEMENTATION
id	WITHOUT_CLASSIFICATION	0.9998868425814875	WITHOUT_CLASSIFICATION	1.1315741851256079E-4	IMPLEMENTATION
version / timestamp	WITHOUT_CLASSIFICATION	0.9999919570439204	WITHOUT_CLASSIFICATION	8.04295607954497E-6	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999607610651707	WITHOUT_CLASSIFICATION	3.923893482924464E-5	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999873217441001	WITHOUT_CLASSIFICATION	1.2678255899880814E-5	IMPLEMENTATION
this is either a <version/> tag with no type attribute or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999877871398997	WITHOUT_CLASSIFICATION	1.221286010030821E-5	IMPLEMENTATION
for version properties marked as being generated make sure they are "always" generated aka "insert" is invalid this is dis-allowed by the dtd but just to make sure	WITHOUT_CLASSIFICATION	0.999999786779761	WITHOUT_CLASSIFICATION	2.1322023914744778E-7	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999607610651707	WITHOUT_CLASSIFICATION	3.923893482924464E-5	IMPLEMENTATION
( (column) discrim.getcolumniterator().next() ).settype(type)	WITHOUT_CLASSIFICATION	0.9999793433436768	WITHOUT_CLASSIFICATION	2.065665632319948E-5	IMPLEMENTATION
go ahead and set the lazy here since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9997875806304602	WITHOUT_CLASSIFICATION	2.1241936953981022E-4	IMPLEMENTATION
dynamic update	WITHOUT_CLASSIFICATION	0.9999965983559648	WITHOUT_CLASSIFICATION	3.4016440352090553E-6	IMPLEMENTATION
import	WITHOUT_CLASSIFICATION	0.9999652682434567	WITHOUT_CLASSIFICATION	3.4731756543282505E-5	IMPLEMENTATION
batch size	WITHOUT_CLASSIFICATION	0.9999842955956862	WITHOUT_CLASSIFICATION	1.5704404313791903E-5	IMPLEMENTATION
select before update	WITHOUT_CLASSIFICATION	0.9999978652786828	WITHOUT_CLASSIFICATION	2.1347213170972222E-6	IMPLEMENTATION
optimistic lock mode	WITHOUT_CLASSIFICATION	0.9999126591845598	WITHOUT_CLASSIFICATION	8.734081544012374E-5	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999724316519406	WITHOUT_CLASSIFICATION	2.7568348059371866E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999950805470462	WITHOUT_CLASSIFICATION	4.919452953826718E-6	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999983389674194	WITHOUT_CLASSIFICATION	1.6610325806519505E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.999965195896375	WITHOUT_CLASSIFICATION	3.480410362501336E-5	IMPLEMENTATION
joined subclasses	WITHOUT_CLASSIFICATION	0.9999875631461678	WITHOUT_CLASSIFICATION	1.2436853832262447E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999861470329758	WITHOUT_CLASSIFICATION	1.3852967024176737E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9999058349662401	WITHOUT_CLASSIFICATION	9.416503375986467E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999950805470462	WITHOUT_CLASSIFICATION	4.919452953826718E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.999965195896375	WITHOUT_CLASSIFICATION	3.480410362501336E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999861470329758	WITHOUT_CLASSIFICATION	1.3852967024176737E-5	IMPLEMENTATION
model.getkey().settype( new type( model.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9999492547226487	WITHOUT_CLASSIFICATION	5.074527735128056E-5	IMPLEMENTATION
tablename	WITHOUT_CLASSIFICATION	0.9999838725003662	WITHOUT_CLASSIFICATION	1.612749963376495E-5	IMPLEMENTATION
join.getkey().settype( new type( lazz.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9999492547226487	WITHOUT_CLASSIFICATION	5.074527735128056E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.999965195896375	WITHOUT_CLASSIFICATION	3.480410362501336E-5	IMPLEMENTATION
column(s)	WITHOUT_CLASSIFICATION	0.9999837805762655	WITHOUT_CLASSIFICATION	1.6219423734535898E-5	IMPLEMENTATION
column index	WITHOUT_CLASSIFICATION	0.9996836317658541	WITHOUT_CLASSIFICATION	3.1636823414597445E-4	IMPLEMENTATION
column unique-key	WITHOUT_CLASSIFICATION	0.999913755952961	WITHOUT_CLASSIFICATION	8.62440470390416E-5	IMPLEMENTATION
automatically makes a column with the default name if none is specifed by xml	WITHOUT_CLASSIFICATION	0.9999999347625512	WITHOUT_CLASSIFICATION	6.523744878872276E-8	IMPLEMENTATION
for an any	WITHOUT_CLASSIFICATION	0.9999992726869086	WITHOUT_CLASSIFICATION	7.273130914430196E-7	IMPLEMENTATION
insertable simply because that is the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9900558400726691	WITHOUT_CLASSIFICATION	0.0099441599273309	IMPLEMENTATION
the user specifically supplied insert="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999937367117765	WITHOUT_CLASSIFICATION	6.263288223535582E-6	IMPLEMENTATION
properties generated on update can never be updateable	WITHOUT_CLASSIFICATION	0.9994724167297178	WITHOUT_CLASSIFICATION	5.275832702821717E-4	IMPLEMENTATION
updateable only because the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9964600552327363	WITHOUT_CLASSIFICATION	0.003539944767263768	IMPLEMENTATION
the user specifically supplied update="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999937367117765	WITHOUT_CLASSIFICATION	6.263288223535582E-6	IMPLEMENTATION
rolename	WITHOUT_CLASSIFICATION	0.9999849662994768	WITHOUT_CLASSIFICATION	1.5033700523172061E-5	IMPLEMENTATION
fetch strategy	WITHOUT_CLASSIFICATION	0.9999591940021854	WITHOUT_CLASSIFICATION	4.080599781455648E-5	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999864310521166	WITHOUT_CLASSIFICATION	1.356894788343106E-5	IMPLEMENTATION
tablename = mappings.getnamingstrategy().propertytotablename( classname path )	WITHOUT_CLASSIFICATION	0.9995777110899556	WITHOUT_CLASSIFICATION	4.222889100443462E-4	IMPLEMENTATION
sort	WITHOUT_CLASSIFICATION	0.9999531639407839	WITHOUT_CLASSIFICATION	4.683605921613108E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999950805470462	WITHOUT_CLASSIFICATION	4.919452953826718E-6	IMPLEMENTATION
unsorted natural comparator.class.name	WITHOUT_CLASSIFICATION	0.9999572916865289	WITHOUT_CLASSIFICATION	4.2708313471128644E-5	IMPLEMENTATION
orphan delete (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999427749270863	WITHOUT_CLASSIFICATION	5.72250729137788E-5	IMPLEMENTATION
set up second pass	WITHOUT_CLASSIFICATION	0.9999725075966571	WITHOUT_CLASSIFICATION	2.7492403342778343E-5	IMPLEMENTATION
an "embedded" component (composite ids and unique) note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9993160444419372	WITHOUT_CLASSIFICATION	6.839555580627925E-4	IMPLEMENTATION
a nested composite element	WITHOUT_CLASSIFICATION	0.9999547480396823	WITHOUT_CLASSIFICATION	4.52519603178012E-5	IMPLEMENTATION
for an any we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999884947128374	WITHOUT_CLASSIFICATION	1.150528716258691E-5	IMPLEMENTATION
note special case one-to-one constrained=false cannot be proxied so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999999325027016	WITHOUT_CLASSIFICATION	6.749729846162611E-8	IMPLEMENTATION
use old (hb 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999994105790219	WITHOUT_CLASSIFICATION	5.894209782548684E-7	IMPLEMENTATION
lazy = !join	WITHOUT_CLASSIFICATION	0.9999319870779068	WITHOUT_CLASSIFICATION	6.801292209326574E-5	IMPLEMENTATION
generator	WITHOUT_CLASSIFICATION	0.9999872682693879	WITHOUT_CLASSIFICATION	1.2731730612161264E-5	IMPLEMENTATION
id unsaved-value	WITHOUT_CLASSIFICATION	0.999726760970143	WITHOUT_CLASSIFICATION	2.7323902985690166E-4	IMPLEMENTATION
version unsaved-value	WITHOUT_CLASSIFICATION	0.999930486436674	WITHOUT_CLASSIFICATION	6.951356332596373E-5	IMPLEMENTATION
not necessarily a unique property reference	WITHOUT_CLASSIFICATION	0.9992167647859463	WITHOUT_CLASSIFICATION	7.832352140536454E-4	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999793433436768	WITHOUT_CLASSIFICATION	2.065665632319948E-5	IMPLEMENTATION
contained elements	WITHOUT_CLASSIFICATION	0.9999828471042338	WITHOUT_CLASSIFICATION	1.715289576623182E-5	IMPLEMENTATION
for non-inverse one-to-many with a not-null fk add a backref!	WITHOUT_CLASSIFICATION	0.9999444692641597	WITHOUT_CLASSIFICATION	5.5530735840367695E-5	IMPLEMENTATION
bind the where	WITHOUT_CLASSIFICATION	0.9999322619698332	WITHOUT_CLASSIFICATION	6.773803016679396E-5	IMPLEMENTATION
bind the order-by	WITHOUT_CLASSIFICATION	0.9999755303505489	WITHOUT_CLASSIFICATION	2.4469649451136495E-5	IMPLEMENTATION
bind the filters	WITHOUT_CLASSIFICATION	0.9999760114698016	WITHOUT_CLASSIFICATION	2.3988530198421955E-5	IMPLEMENTATION
overriding inherited meta attribute. hbx-621 & hbx-793	WITHOUT_CLASSIFICATION	0.9999692844295767	WITHOUT_CLASSIFICATION	3.071557042341297E-5	IMPLEMENTATION
first iterate over all elements capable of defining an extends attribute collecting all found extends references if they cannot be resolved against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999840055477	WITHOUT_CLASSIFICATION	1.5994452423472808E-8	IMPLEMENTATION
mappings might contain either the "raw" extends name (in the case of an entity-name mapping) or a fqn (in the case of a pojo mapping).	WITHOUT_CLASSIFICATION	0.9999995019364423	WITHOUT_CLASSIFICATION	4.980635577291045E-7	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9974340047472182	WITHOUT_CLASSIFICATION	0.0025659952527818347	IMPLEMENTATION
sessionfactory name	WITHOUT_CLASSIFICATION	0.999976628484299	WITHOUT_CLASSIFICATION	2.3371515701016074E-5	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9998151945445274	WITHOUT_CLASSIFICATION	1.8480545547263982E-4	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9998151945445274	WITHOUT_CLASSIFICATION	1.8480545547263982E-4	IMPLEMENTATION
interrogate jdbc metadata	WITHOUT_CLASSIFICATION	0.9999825068752305	WITHOUT_CLASSIFICATION	1.7493124769461656E-5	IMPLEMENTATION
user supplied jdbc connections	WITHOUT_CLASSIFICATION	0.9999882185448725	WITHOUT_CLASSIFICATION	1.1781455127546466E-5	IMPLEMENTATION
use dialect default properties	WITHOUT_CLASSIFICATION	0.9999825875002191	WITHOUT_CLASSIFICATION	1.7412499780931665E-5	IMPLEMENTATION
transaction settings	WITHOUT_CLASSIFICATION	0.9999942946225988	WITHOUT_CLASSIFICATION	5.705377401242802E-6	IMPLEMENTATION
sql generation settings	WITHOUT_CLASSIFICATION	0.9999988113859803	WITHOUT_CLASSIFICATION	1.188614019630098E-6	IMPLEMENTATION
query parser settings	WITHOUT_CLASSIFICATION	0.9999918544266126	WITHOUT_CLASSIFICATION	8.145573387266655E-6	IMPLEMENTATION
second-level / query cache	WITHOUT_CLASSIFICATION	0.9999955784224094	WITHOUT_CLASSIFICATION	4.421577590570137E-6	IMPLEMENTATION
the cache provider is needed when we either have second-level cache enabled or query cache enabled. note that usesecondlevelcache is enabled by default	WITHOUT_CLASSIFICATION	0.9980861878092633	WITHOUT_CLASSIFICATION	0.0019138121907367551	IMPLEMENTATION
sql exception converter	WITHOUT_CLASSIFICATION	0.9999975563744435	WITHOUT_CLASSIFICATION	2.443625556500164E-6	IMPLEMENTATION
statistics and logging	WITHOUT_CLASSIFICATION	0.9999967344607475	WITHOUT_CLASSIFICATION	3.2655392524887007E-6	IMPLEMENTATION
settings.setshowsqlenabled(showsql)	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
settings.setformatsqlenabled(formatsql)	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
schema export	WITHOUT_CLASSIFICATION	0.9999734468150593	WITHOUT_CLASSIFICATION	2.655318494080968E-5	IMPLEMENTATION
string provider = properties.getproperty( environment.bytecode_provider ) log.info( "bytecode provider name " + provider ) bytecodeprovider bytecodeprovider = buildbytecodeprovider( provider ) settings.setbytecodeprovider( bytecodeprovider )	WITHOUT_CLASSIFICATION	0.9999542310044044	WITHOUT_CLASSIFICATION	4.5768995595535206E-5	IMPLEMENTATION
legacy behavior apply the bridge	WITHOUT_CLASSIFICATION	0.9999704417693864	WITHOUT_CLASSIFICATION	2.9558230613612198E-5	IMPLEMENTATION
maybe a concrete sqlpropertyresult type but map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9995139921621181	WITHOUT_CLASSIFICATION	4.860078378817883E-4	IMPLEMENTATION
if dotted and not load-collection nor return-join regular property	WITHOUT_CLASSIFICATION	0.9993240864519771	WITHOUT_CLASSIFICATION	6.759135480230154E-4	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907 private bytecodeprovider bytecodeprovider	WITHOUT_CLASSIFICATION	0.8279974649986211	WITHOUT_CLASSIFICATION	0.17200253500137894	IMPLEMENTATION
public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999837296278751	WITHOUT_CLASSIFICATION	1.627037212487024E-5	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999788365441553	WITHOUT_CLASSIFICATION	2.1163455844707274E-5	IMPLEMENTATION
package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999190073934331	WITHOUT_CLASSIFICATION	8.099260656691304E-5	IMPLEMENTATION
void setshowsqlenabled(boolean b) { showsql = b } void setformatsqlenabled(boolean b) { formatsql = b }	WITHOUT_CLASSIFICATION	0.9998469940137862	WITHOUT_CLASSIFICATION	1.5300598621392753E-4	IMPLEMENTATION
public bytecodeprovider getbytecodeprovider() { return bytecodeprovider } void setbytecodeprovider(bytecodeprovider bytecodeprovider) { this.bytecodeprovider = bytecodeprovider }	WITHOUT_CLASSIFICATION	0.9999792940093223	WITHOUT_CLASSIFICATION	2.0705990677736473E-5	IMPLEMENTATION
using local since the inheritedmetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9991514211079436	WITHOUT_CLASSIFICATION	8.485788920564168E-4	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907	WITHOUT_CLASSIFICATION	0.8279974649986211	WITHOUT_CLASSIFICATION	0.17200253500137894	IMPLEMENTATION
protected list extendsqueue	WITHOUT_CLASSIFICATION	0.9999821551452288	WITHOUT_CLASSIFICATION	1.7844854771096464E-5	IMPLEMENTATION
extendsqueue = new arraylist()	WITHOUT_CLASSIFICATION	0.9999638572835909	WITHOUT_CLASSIFICATION	3.614271640908039E-5	IMPLEMENTATION
componenttuplizerfactory = new componenttuplizerfactory()	WITHOUT_CLASSIFICATION	0.999947009246064	WITHOUT_CLASSIFICATION	5.299075393611654E-5	IMPLEMENTATION
if doc is null then for whatever reason the cached file cannot be used	WITHOUT_CLASSIFICATION	0.9999999984694659	WITHOUT_CLASSIFICATION	1.5305341650201554E-9	IMPLEMENTATION
drop them in reverse order in case db needs it done that way	WITHOUT_CLASSIFICATION	0.9999841434134269	WITHOUT_CLASSIFICATION	1.5856586573060434E-5	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999788365441553	WITHOUT_CLASSIFICATION	2.1163455844707274E-5	IMPLEMENTATION
this method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999501321476024	WITHOUT_CLASSIFICATION	4.98678523975167E-5	IMPLEMENTATION
iterator iterator = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9998838243975674	WITHOUT_CLASSIFICATION	1.1617560243268486E-4	IMPLEMENTATION
iterator iter = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9998839112829883	WITHOUT_CLASSIFICATION	1.160887170117772E-4	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.999979618100544	WITHOUT_CLASSIFICATION	2.038189945595359E-5	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.999979618100544	WITHOUT_CLASSIFICATION	2.038189945595359E-5	IMPLEMENTATION
settings.setcomponenttuplizerfactory( this.getcomponenttuplizerfactory() )	WITHOUT_CLASSIFICATION	0.9999354420963775	WITHOUT_CLASSIFICATION	6.455790362247926E-5	IMPLEMENTATION
private final list extendsqueue	WITHOUT_CLASSIFICATION	0.999997317839502	WITHOUT_CLASSIFICATION	2.682160498008172E-6	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9999607838517675	WITHOUT_CLASSIFICATION	3.9216148232503656E-5	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9999607838517675	WITHOUT_CLASSIFICATION	3.9216148232503656E-5	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9974340047472182	WITHOUT_CLASSIFICATION	0.0025659952527818347	IMPLEMENTATION
set use_reflection_optimizer to false to fix hhh-227	WITHOUT_CLASSIFICATION	0.9920305406739708	WITHOUT_CLASSIFICATION	0.007969459326029271	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9994995280212592	WITHOUT_CLASSIFICATION	5.004719787408364E-4	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9999578511603866	WITHOUT_CLASSIFICATION	4.2148839613456624E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9993533616504017	WITHOUT_CLASSIFICATION	6.466383495983858E-4	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9994995280212592	WITHOUT_CLASSIFICATION	5.004719787408364E-4	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9999578511603866	WITHOUT_CLASSIFICATION	4.2148839613456624E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.9070852083343541	WITHOUT_CLASSIFICATION	0.09291479166564588	IMPLEMENTATION
maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999998799216807	WITHOUT_CLASSIFICATION	1.2007831930363054E-7	IMPLEMENTATION
the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999799673601273	WITHOUT_CLASSIFICATION	2.0032639872713108E-5	IMPLEMENTATION
the element has changed	WITHOUT_CLASSIFICATION	0.999999605294636	WITHOUT_CLASSIFICATION	3.9470536394612863E-7	IMPLEMENTATION
careful these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.997004250033877	WITHOUT_CLASSIFICATION	0.0029957499661229996	IMPLEMENTATION
needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9050141433105193	WITHOUT_CLASSIFICATION	0.09498585668948069	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9991416544712854	WITHOUT_CLASSIFICATION	8.583455287146598E-4	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9991416544712854	WITHOUT_CLASSIFICATION	8.583455287146598E-4	IMPLEMENTATION
do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999813629922273	WITHOUT_CLASSIFICATION	1.863700777264503E-5	IMPLEMENTATION
short-circuit(s) no new elements the old list contains only orphans no old elements so no orphans neither	WITHOUT_CLASSIFICATION	0.9999999677583639	WITHOUT_CLASSIFICATION	3.2241636129929985E-8	IMPLEMENTATION
create the collection holding the orphans	WITHOUT_CLASSIFICATION	0.9999665607323027	WITHOUT_CLASSIFICATION	3.343926769728172E-5	IMPLEMENTATION
collect entityidentifier(s) of the current elements - add them into a hashset for fast access	WITHOUT_CLASSIFICATION	0.9999998971180336	WITHOUT_CLASSIFICATION	1.0288196634731408E-7	IMPLEMENTATION
iterate over the old list	WITHOUT_CLASSIFICATION	0.9999996715830196	WITHOUT_CLASSIFICATION	3.284169803896575E-7	IMPLEMENTATION
(array==null) ? templist.size()	WITHOUT_CLASSIFICATION	0.9999429687947935	WITHOUT_CLASSIFICATION	5.70312052063636E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9993533616504017	WITHOUT_CLASSIFICATION	6.466383495983858E-4	IMPLEMENTATION
(array==null) ? templist.get(i)	WITHOUT_CLASSIFICATION	0.9999429687947935	WITHOUT_CLASSIFICATION	5.70312052063636E-5	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9999953855713392	WITHOUT_CLASSIFICATION	4.6144286607735745E-6	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.9999953855713392	WITHOUT_CLASSIFICATION	4.6144286607735745E-6	IMPLEMENTATION
amazingly these two will work because abstractcollection uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999945671995722	WITHOUT_CLASSIFICATION	5.432800427808115E-6	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.9070852083343541	WITHOUT_CLASSIFICATION	0.09291479166564588	IMPLEMENTATION
finally what it's all about	WITHOUT_CLASSIFICATION	0.9988347847793989	WITHOUT_CLASSIFICATION	0.0011652152206011075	IMPLEMENTATION
note that if we load this collection from a cartesian product the multiplicity would be broken so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999989386878366	WITHOUT_CLASSIFICATION	1.0613121633742629E-6	IMPLEMENTATION
anyway here we implement <set> semantics for a <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9974484808129772	WITHOUT_CLASSIFICATION	0.0025515191870227553	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999988642663393	WITHOUT_CLASSIFICATION	1.1357336606266175E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999372832725099	WITHOUT_CLASSIFICATION	6.271672749015422E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.9070852083343541	WITHOUT_CLASSIFICATION	0.09291479166564588	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999988642663393	WITHOUT_CLASSIFICATION	1.1357336606266175E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999372832725099	WITHOUT_CLASSIFICATION	6.271672749015422E-5	IMPLEMENTATION
public boolean equals(object other) {read()return bag.equals(other)}public int hashcode(object other) {read()return bag.hashcode()}	WITHOUT_CLASSIFICATION	0.9999985695162905	WITHOUT_CLASSIFICATION	1.4304837094706716E-6	IMPLEMENTATION
list operations	WITHOUT_CLASSIFICATION	0.9999361347293441	WITHOUT_CLASSIFICATION	6.386527065598012E-5	IMPLEMENTATION
pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999911801450172	WITHOUT_CLASSIFICATION	8.819854982862957E-6	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.9070852083343541	WITHOUT_CLASSIFICATION	0.09291479166564588	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.9070852083343541	WITHOUT_CLASSIFICATION	0.09291479166564588	IMPLEMENTATION
from map	WITHOUT_CLASSIFICATION	0.9999955270539924	WITHOUT_CLASSIFICATION	4.472946007583825E-6	IMPLEMENTATION
from sortedmap	WITHOUT_CLASSIFICATION	0.9999912410575317	WITHOUT_CLASSIFICATION	8.758942468348235E-6	IMPLEMENTATION
inject the data	WITHOUT_CLASSIFICATION	0.9999953990127126	WITHOUT_CLASSIFICATION	4.600987287325458E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999985678384281	WITHOUT_CLASSIFICATION	1.432161571869387E-6	IMPLEMENTATION
default pool size 20	WITHOUT_CLASSIFICATION	0.9999904789215698	WITHOUT_CLASSIFICATION	9.521078430295811E-6	IMPLEMENTATION
trying via forname() first to be as close to drivermanager's semantics	WITHOUT_CLASSIFICATION	0.9999944050329972	WITHOUT_CLASSIFICATION	5.59496700274092E-6	IMPLEMENTATION
if debug level is enabled then log the password otherwise mask it	WITHOUT_CLASSIFICATION	0.9999602851648329	WITHOUT_CLASSIFICATION	3.9714835167021504E-5	IMPLEMENTATION
register a cleanup synch	WITHOUT_CLASSIFICATION	0.999990739397886	WITHOUT_CLASSIFICATION	9.260602113936402E-6	IMPLEMENTATION
wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999942385513269	WITHOUT_CLASSIFICATION	5.761448673078299E-6	IMPLEMENTATION
then bind it	WITHOUT_CLASSIFICATION	0.9999851211734156	WITHOUT_CLASSIFICATION	1.4878826584431497E-5	IMPLEMENTATION
try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9985919715893297	WITHOUT_CLASSIFICATION	0.0014080284106703274	IMPLEMENTATION
allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9989612125453483	WITHOUT_CLASSIFICATION	0.001038787454651712	IMPLEMENTATION
limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999997814210897	WITHOUT_CLASSIFICATION	2.185789103348225E-7	IMPLEMENTATION
allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9993753547436717	WITHOUT_CLASSIFICATION	6.246452563284288E-4	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998919637366215	WITHOUT_CLASSIFICATION	1.0803626337841103E-4	IMPLEMENTATION
we could register the session against the transaction even though it is not started but we'd have no guarentee of ever getting the map entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999977859894451	WITHOUT_CLASSIFICATION	2.214010554833963E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999985678384281	WITHOUT_CLASSIFICATION	1.432161571869387E-6	IMPLEMENTATION
private string propertyname	WITHOUT_CLASSIFICATION	0.9999969387107933	WITHOUT_CLASSIFICATION	3.061289206685747E-6	IMPLEMENTATION
public propertyprojection project() {return projections.property(getpropertyname())}	WITHOUT_CLASSIFICATION	0.9999918830533007	WITHOUT_CLASSIFICATION	8.116946699303135E-6	IMPLEMENTATION
string[] fk = stringhelper.qualify( "collection_" cp.getkeycolumnnames() )	WITHOUT_CLASSIFICATION	0.9998385787033448	WITHOUT_CLASSIFICATION	1.6142129665520366E-4	IMPLEMENTATION
" collection_ where " +	WITHOUT_CLASSIFICATION	0.9998538555945494	WITHOUT_CLASSIFICATION	1.461444054506016E-4	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9999607720738596	WITHOUT_CLASSIFICATION	3.922792614036534E-5	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9999607720738596	WITHOUT_CLASSIFICATION	3.922792614036534E-5	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999985678384281	WITHOUT_CLASSIFICATION	1.432161571869387E-6	IMPLEMENTATION
the following two lines were added to ensure that this.params is not null which can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9998011790141138	WITHOUT_CLASSIFICATION	1.98820985886287E-4	IMPLEMENTATION
with two-deep subqueries the same alias would get generated for both using the old method (criteriaquery.generatesqlalias()) so that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999998825913072	WITHOUT_CLASSIFICATION	1.1740869279592128E-7	IMPLEMENTATION
implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9828886033331923	WITHOUT_CLASSIFICATION	0.0171113966668077	IMPLEMENTATION
pull off the last " "	WITHOUT_CLASSIFICATION	0.9999905870682462	WITHOUT_CLASSIFICATION	9.41293175391366E-6	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999837742338661	WITHOUT_CLASSIFICATION	1.62257661338912E-5	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999965778512947	WITHOUT_CLASSIFICATION	3.4221487053139284E-6	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource)	WITHOUT_CLASSIFICATION	0.9998551420814709	WITHOUT_CLASSIFICATION	1.4485791852917525E-4	IMPLEMENTATION
not_supported_should_use_jdbc3_preparedstatement.getgeneratedkeys_method	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999809457404858	WITHOUT_CLASSIFICATION	1.905425951414039E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
oracle did add support for ansi case statements in 9i	WITHOUT_CLASSIFICATION	0.9999969786612418	WITHOUT_CLASSIFICATION	3.0213387582761285E-6	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999993146776852	WITHOUT_CLASSIFICATION	6.853223149060563E-7	IMPLEMENTATION
informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999876106735421	WITHOUT_CLASSIFICATION	1.238932645790885E-5	IMPLEMENTATION
or byte or text? or money	WITHOUT_CLASSIFICATION	0.9999825768010348	WITHOUT_CLASSIFICATION	1.7423198965247902E-5	IMPLEMENTATION
strip table-owner because informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999424365744999	WITHOUT_CLASSIFICATION	5.7563425500084654E-5	IMPLEMENTATION
build the map of standard ansi sql aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999981286319573	WITHOUT_CLASSIFICATION	1.8713680428292E-6	IMPLEMENTATION
pre h3.2 behavior super.getreturntype(ct m)	WITHOUT_CLASSIFICATION	0.9999688201479604	WITHOUT_CLASSIFICATION	3.1179852039596864E-5	IMPLEMENTATION
finally use the sqltype if == on hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9942929142379511	WITHOUT_CLASSIFICATION	0.005707085762048865	IMPLEMENTATION
because numeric can be anything	WITHOUT_CLASSIFICATION	0.9998409674445725	WITHOUT_CLASSIFICATION	1.5903255542744645E-4	IMPLEMENTATION
constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999436968680415	WITHOUT_CLASSIFICATION	5.6303131958407044E-5	IMPLEMENTATION
standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999986642421297	WITHOUT_CLASSIFICATION	1.3357578703113279E-6	IMPLEMENTATION
map second/minute/hour/day/month/year to ansi extract() override on subclasses	WITHOUT_CLASSIFICATION	0.9994402735206664	WITHOUT_CLASSIFICATION	5.597264793336555E-4	IMPLEMENTATION
register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999907332885194	WITHOUT_CLASSIFICATION	9.266711480652833E-6	IMPLEMENTATION
database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.998843938605304	WITHOUT_CLASSIFICATION	0.0011560613946960203	IMPLEMENTATION
hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993234285693879	WITHOUT_CLASSIFICATION	6.765714306121008E-4	IMPLEMENTATION
keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994018548329539	WITHOUT_CLASSIFICATION	5.98145167046154E-4	IMPLEMENTATION
native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681487933083	WITHOUT_CLASSIFICATION	3.185120669176039E-5	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992749823663715	WITHOUT_CLASSIFICATION	7.250176336286151E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992615069697334	WITHOUT_CLASSIFICATION	7.384930302666364E-4	IMPLEMENTATION
guid support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992112858023899	WITHOUT_CLASSIFICATION	7.887141976099493E-4	IMPLEMENTATION
limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992112858023899	WITHOUT_CLASSIFICATION	7.887141976099493E-4	IMPLEMENTATION
by default we report no support	WITHOUT_CLASSIFICATION	0.9999394508875146	WITHOUT_CLASSIFICATION	6.0549112485389736E-5	IMPLEMENTATION
by default we report no support for nowait lock semantics	WITHOUT_CLASSIFICATION	0.9999832972646343	WITHOUT_CLASSIFICATION	1.6702735365682664E-5	IMPLEMENTATION
table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999341316432569	WITHOUT_CLASSIFICATION	6.58683567431115E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993766940255469	WITHOUT_CLASSIFICATION	6.233059744530776E-4	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9987157370897308	WITHOUT_CLASSIFICATION	0.0012842629102691055	IMPLEMENTATION
current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996054333496605	WITHOUT_CLASSIFICATION	3.9456665033954687E-4	IMPLEMENTATION
sqlexception support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992486794709938	WITHOUT_CLASSIFICATION	7.513205290061917E-4	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992112858023899	WITHOUT_CLASSIFICATION	7.887141976099493E-4	IMPLEMENTATION
identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990960595617911	WITHOUT_CLASSIFICATION	9.039404382089009E-4	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992112858023899	WITHOUT_CLASSIFICATION	7.887141976099493E-4	IMPLEMENTATION
grrr for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.999996175906905	WITHOUT_CLASSIFICATION	3.824093095009796E-6	IMPLEMENTATION
informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999582870324846	WITHOUT_CLASSIFICATION	4.171296751548585E-5	IMPLEMENTATION
return false here as most databases do not properly support this construct	WITHOUT_CLASSIFICATION	0.8806567224737694	IMPLEMENTATION	0.11934327752623053	WITHOUT_CLASSIFICATION
mckoi has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999992316584185	WITHOUT_CLASSIFICATION	7.683415815255483E-7	IMPLEMENTATION
oracle8 and previous define only a "date" type which is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999980444660013	WITHOUT_CLASSIFICATION	1.9555339987573788E-6	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.999972338721298	WITHOUT_CLASSIFICATION	2.7661278701978594E-5	IMPLEMENTATION
" cascade"	WITHOUT_CLASSIFICATION	0.9999696673216899	WITHOUT_CLASSIFICATION	3.0332678310069765E-5	IMPLEMENTATION
trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999877634280417	WITHOUT_CLASSIFICATION	1.2236571958160634E-5	IMPLEMENTATION
public boolean droptemporarytableafteruse() {we have to because postgres sets current txto rollback only after a failed create tablereturn true}	WITHOUT_CLASSIFICATION	0.9999978485771331	WITHOUT_CLASSIFICATION	2.1514228667820554E-6	IMPLEMENTATION
check violation	WITHOUT_CLASSIFICATION	0.9997727441178673	WITHOUT_CLASSIFICATION	2.272558821326612E-4	IMPLEMENTATION
unique violation	WITHOUT_CLASSIFICATION	0.9999122719495165	WITHOUT_CLASSIFICATION	8.772805048345669E-5	IMPLEMENTATION
foreign key violation	WITHOUT_CLASSIFICATION	0.9999453917636242	WITHOUT_CLASSIFICATION	5.4608236375837926E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
not null violation	WITHOUT_CLASSIFICATION	0.9994131774881105	WITHOUT_CLASSIFICATION	5.868225118894916E-4	IMPLEMENTATION
all other	WITHOUT_CLASSIFICATION	0.9999727162780372	WITHOUT_CLASSIFICATION	2.7283721962814083E-5	IMPLEMENTATION
register the type of the out param - postgresql uses types.other	WITHOUT_CLASSIFICATION	0.9999959707950586	WITHOUT_CLASSIFICATION	4.02920494132741E-6	IMPLEMENTATION
seems to not really public boolean supportsrowvalueconstructorsyntax() { return true }	WITHOUT_CLASSIFICATION	0.9998312523716527	WITHOUT_CLASSIFICATION	1.6874762834733715E-4	IMPLEMENTATION
seems to have spotty lob suppport	WITHOUT_CLASSIFICATION	0.999938258747615	WITHOUT_CLASSIFICATION	6.174125238510528E-5	IMPLEMENTATION
hhh-2300	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
ignore (probably h2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9997309042350282	WITHOUT_CLASSIFICATION	2.6909576497172633E-4	IMPLEMENTATION
numeric functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999216914859375	WITHOUT_CLASSIFICATION	7.830851406257065E-5	IMPLEMENTATION
string functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999879818030986	WITHOUT_CLASSIFICATION	1.2018196901487208E-5	IMPLEMENTATION
time and date functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999279202136917	WITHOUT_CLASSIFICATION	7.207978630838577E-5	IMPLEMENTATION
system functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999076751324384	WITHOUT_CLASSIFICATION	9.232486756162785E-5	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9996267131289278	WITHOUT_CLASSIFICATION	3.732868710722671E-4	IMPLEMENTATION
23000 check constraint violation {0} 23001 unique index or primary key violation {0}	WITHOUT_CLASSIFICATION	0.9995107838986041	WITHOUT_CLASSIFICATION	4.892161013958743E-4	IMPLEMENTATION
display the dialect version.	WITHOUT_CLASSIFICATION	0.9999946939066848	WITHOUT_CLASSIFICATION	5.306093315083555E-6	IMPLEMENTATION
the rdms concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999598663999726	WITHOUT_CLASSIFICATION	4.01336000275103E-5	IMPLEMENTATION
dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999554777268153	WITHOUT_CLASSIFICATION	4.452227318471981E-5	IMPLEMENTATION
original dialect.java returns " for update"	WITHOUT_CLASSIFICATION	0.9999077331623362	WITHOUT_CLASSIFICATION	9.226683766395014E-5	IMPLEMENTATION
verify the state of this new method in hibernate 3.0 dialect.java	WITHOUT_CLASSIFICATION	0.9999991961500633	WITHOUT_CLASSIFICATION	8.038499366192013E-7	IMPLEMENTATION
origial dialect.java returns true	WITHOUT_CLASSIFICATION	0.9999625888465354	WITHOUT_CLASSIFICATION	3.7411153464597324E-5	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.999953759499635	WITHOUT_CLASSIFICATION	4.6240500364872926E-5	IMPLEMENTATION
sequence methods - start. the rdms dialect needs these	WITHOUT_CLASSIFICATION	0.9999657936626318	WITHOUT_CLASSIFICATION	3.420633736811772E-5	IMPLEMENTATION
methods to make it possible to use the native id generator	WITHOUT_CLASSIFICATION	0.9950880917271012	WITHOUT_CLASSIFICATION	0.0049119082728987734	IMPLEMENTATION
the where clause was added to eliminate this statement from brute force searches.	WITHOUT_CLASSIFICATION	0.999986736602105	WITHOUT_CLASSIFICATION	1.326339789503145E-5	IMPLEMENTATION
sequence methods - end	WITHOUT_CLASSIFICATION	0.9999515856492461	WITHOUT_CLASSIFICATION	4.8414350753806893E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.999972338721298	WITHOUT_CLASSIFICATION	2.7661278701978594E-5	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9997587109730671	WITHOUT_CLASSIFICATION	2.4128902693292925E-4	IMPLEMENTATION
used with drop table to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999953929259514	WITHOUT_CLASSIFICATION	4.607074048520605E-6	IMPLEMENTATION
rdms supports the union all clause.	WITHOUT_CLASSIFICATION	0.9998878064226526	WITHOUT_CLASSIFICATION	1.1219357734731818E-4	IMPLEMENTATION
rdms has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999992315118671	WITHOUT_CLASSIFICATION	7.684881328930304E-7	IMPLEMENTATION
multi-param dialect functions	WITHOUT_CLASSIFICATION	0.9999814550978312	WITHOUT_CLASSIFICATION	1.8544902168765102E-5	IMPLEMENTATION
function templates	WITHOUT_CLASSIFICATION	0.9999773559332956	WITHOUT_CLASSIFICATION	2.264406670441779E-5	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9996267131289278	WITHOUT_CLASSIFICATION	3.732868710722671E-4	IMPLEMENTATION
this assumes schema support which is present in 1.8.0 and later	WITHOUT_CLASSIFICATION	0.9999406848381412	WITHOUT_CLASSIFICATION	5.9315161858759865E-5	IMPLEMENTATION
hsqldb only supports read_uncommitted transaction isolation	WITHOUT_CLASSIFICATION	0.9999086008150168	WITHOUT_CLASSIFICATION	9.139918498320434E-5	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999883537220577	WITHOUT_CLASSIFICATION	1.1646277942209782E-5	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.999924114690545	WITHOUT_CLASSIFICATION	7.588530945500444E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9998260768760634	WITHOUT_CLASSIFICATION	1.7392312393656306E-4	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999751692847096	WITHOUT_CLASSIFICATION	2.4830715290278937E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9998785027936955	WITHOUT_CLASSIFICATION	1.2149720630446284E-4	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.99999921116272	WITHOUT_CLASSIFICATION	7.888372799982459E-7	IMPLEMENTATION
timesten has no blob/clob support but these types may be suitable for some applications. the length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.999993188766984	WITHOUT_CLASSIFICATION	6.81123301610588E-6	IMPLEMENTATION
new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999980164790725	WITHOUT_CLASSIFICATION	1.983520927520167E-6	IMPLEMENTATION
public boolean supportsforupdatenowait() {return false}	WITHOUT_CLASSIFICATION	0.9999967098517888	WITHOUT_CLASSIFICATION	3.290148211067049E-6	IMPLEMENTATION
timesten has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999992273814313	WITHOUT_CLASSIFICATION	7.726185687591865E-7	IMPLEMENTATION
iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999737816255947	WITHOUT_CLASSIFICATION	2.621837440529319E-5	IMPLEMENTATION
add new ordered map	WITHOUT_CLASSIFICATION	0.9999482272904646	WITHOUT_CLASSIFICATION	5.177270953541752E-5	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" )	WITHOUT_CLASSIFICATION	0.9999354984198398	WITHOUT_CLASSIFICATION	6.450158016022513E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999911298431388	WITHOUT_CLASSIFICATION	8.870156861133142E-6	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999378112504227	WITHOUT_CLASSIFICATION	6.218874957734167E-5	IMPLEMENTATION
return "select current_timestamp from rdb$database"	WITHOUT_CLASSIFICATION	0.9999942248797188	WITHOUT_CLASSIFICATION	5.775120281196474E-6	IMPLEMENTATION
registercolumntype data types	WITHOUT_CLASSIFICATION	0.9999887175458501	WITHOUT_CLASSIFICATION	1.1282454150049178E-5	IMPLEMENTATION
hibernate seems to ignore this type	WITHOUT_CLASSIFICATION	0.999913060852884	WITHOUT_CLASSIFICATION	8.693914711597785E-5	IMPLEMENTATION
ibid for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999819039191615	WITHOUT_CLASSIFICATION	1.8096080838463596E-5	IMPLEMENTATION
tell hibernate to use getbytes instead of getbinarystream	WITHOUT_CLASSIFICATION	0.9999312220477575	WITHOUT_CLASSIFICATION	6.877795224244651E-5	IMPLEMENTATION
no batch statements	WITHOUT_CLASSIFICATION	0.999978500163933	WITHOUT_CLASSIFICATION	2.149983606696407E-5	IMPLEMENTATION
we might want a special case for 192. this is very common for money types and here it is converted to 181	WITHOUT_CLASSIFICATION	0.9994277285146763	WITHOUT_CLASSIFICATION	5.722714853237031E-4	IMPLEMENTATION
no pointbase bit	WITHOUT_CLASSIFICATION	0.9999803864499409	WITHOUT_CLASSIFICATION	1.9613550059061223E-5	IMPLEMENTATION
no pointbase tinyint	WITHOUT_CLASSIFICATION	0.99998053535789	WITHOUT_CLASSIFICATION	1.9464642110003926E-5	IMPLEMENTATION
pointbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999992316378407	WITHOUT_CLASSIFICATION	7.683621593747286E-7	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.999972338721298	WITHOUT_CLASSIFICATION	2.7661278701978594E-5	IMPLEMENTATION
the current_timestamp is more accurate but only known to be supported in sql server 7.0 and later (i.e. sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999515478050364	WITHOUT_CLASSIFICATION	4.845219496356773E-5	IMPLEMENTATION
sql server (at least up through 2005) does not support defining cascade delete constraints which can circel back to the mutating table	WITHOUT_CLASSIFICATION	0.9966748711835136	WITHOUT_CLASSIFICATION	0.0033251288164863483	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9935868288306934	WITHOUT_CLASSIFICATION	0.006413171169306528	IMPLEMENTATION
registercolumntype( types.blob 16777215 "mediumblob" ) registercolumntype( types.blob 65535 "blob" )	WITHOUT_CLASSIFICATION	0.9999354984198398	WITHOUT_CLASSIFICATION	6.450158016022513E-5	IMPLEMENTATION
registercolumntype( types.clob 16777215 "mediumtext" ) registercolumntype( types.clob 65535 "text" )	WITHOUT_CLASSIFICATION	0.9999358696817767	WITHOUT_CLASSIFICATION	6.413031822324171E-5	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" ) registercolumntype( types.varchar 65535 "text" )	WITHOUT_CLASSIFICATION	0.9999358696817767	WITHOUT_CLASSIFICATION	6.413031822324171E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.999972338721298	WITHOUT_CLASSIFICATION	2.7661278701978594E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999607861657607	WITHOUT_CLASSIFICATION	3.92138342392426E-5	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999378112504227	WITHOUT_CLASSIFICATION	6.218874957734167E-5	IMPLEMENTATION
sybase bit type does not support null values	WITHOUT_CLASSIFICATION	0.999912820488694	WITHOUT_CLASSIFICATION	8.717951130607658E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999911298431388	WITHOUT_CLASSIFICATION	8.870156861133142E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999928610951361	WITHOUT_CLASSIFICATION	7.1389048639429585E-6	IMPLEMENTATION
not null (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9987727564032537	WITHOUT_CLASSIFICATION	0.0012272435967463156	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999995391667209	WITHOUT_CLASSIFICATION	4.608332790899117E-7	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999883537220577	WITHOUT_CLASSIFICATION	1.1646277942209782E-5	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.999924114690545	WITHOUT_CLASSIFICATION	7.588530945500444E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.9998260768760634	WITHOUT_CLASSIFICATION	1.7392312393656306E-4	IMPLEMENTATION
add another (inner) nested select add the main query close off the inner nested select	WITHOUT_CLASSIFICATION	0.999995486729121	WITHOUT_CLASSIFICATION	4.513270879011128E-6	IMPLEMENTATION
add the main query	WITHOUT_CLASSIFICATION	0.9999232448340659	WITHOUT_CLASSIFICATION	7.675516593400385E-5	IMPLEMENTATION
add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999724623524618	WITHOUT_CLASSIFICATION	2.7537647538186507E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999911298431388	WITHOUT_CLASSIFICATION	8.870156861133142E-6	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999928610951361	WITHOUT_CLASSIFICATION	7.1389048639429585E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.999972338721298	WITHOUT_CLASSIFICATION	2.7661278701978594E-5	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999751692847096	WITHOUT_CLASSIFICATION	2.4830715290278937E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9998785027936955	WITHOUT_CLASSIFICATION	1.2149720630446284E-4	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.99999921116272	WITHOUT_CLASSIFICATION	7.888372799982459E-7	IMPLEMENTATION
features which change between 8i 9i and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935242507433	WITHOUT_CLASSIFICATION	6.475749256750889E-6	IMPLEMENTATION
features which remain constant across 8i 9i and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999089676501238	WITHOUT_CLASSIFICATION	9.103234987616101E-5	IMPLEMENTATION
binary %stream character %stream	WITHOUT_CLASSIFICATION	0.9999658623907821	WITHOUT_CLASSIFICATION	3.413760921792714E-5	IMPLEMENTATION
getdefaultproperties().setproperty(environment.statement_batch_size no_batch)	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
hibernate impelemnts cast in dialect.java	WITHOUT_CLASSIFICATION	0.9999963893311891	WITHOUT_CLASSIFICATION	3.6106688110296276E-6	IMPLEMENTATION
aggregate functions shouldn't be registered right? registerfunction( "list" new standardsqlfunction("list"hibernate.string) ) stopped on $list	WITHOUT_CLASSIFICATION	0.9978661401311603	WITHOUT_CLASSIFICATION	0.0021338598688397225	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992112858023899	WITHOUT_CLASSIFICATION	7.887141976099493E-4	IMPLEMENTATION
below is for cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999988402338454	WITHOUT_CLASSIFICATION	1.1597661545205625E-6	IMPLEMENTATION
note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999690440547013	WITHOUT_CLASSIFICATION	3.095594529859058E-5	IMPLEMENTATION
%upper is deprecated	WITHOUT_CLASSIFICATION	0.9999818320630348	WITHOUT_CLASSIFICATION	1.8167936965143063E-5	IMPLEMENTATION
the syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999514653881736	WITHOUT_CLASSIFICATION	4.853461182641394E-5	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992749823663715	WITHOUT_CLASSIFICATION	7.250176336286151E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992615069697334	WITHOUT_CLASSIFICATION	7.384930302666364E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993766940255469	WITHOUT_CLASSIFICATION	6.233059744530776E-4	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
the syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.999948443130703	WITHOUT_CLASSIFICATION	5.155686929712146E-5	IMPLEMENTATION
completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999802116017655	WITHOUT_CLASSIFICATION	1.978839823441024E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993545901703398	WITHOUT_CLASSIFICATION	6.454098296601067E-4	IMPLEMENTATION
limit support (ala top) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9995634249893355	WITHOUT_CLASSIFICATION	4.3657501066446933E-4	IMPLEMENTATION
intersystems cache' does not current support "select for update" syntax set your transaction mode to read_committed before using	WITHOUT_CLASSIFICATION	0.9996276900155159	WITHOUT_CLASSIFICATION	3.723099844841462E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
<string>	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9987157370897308	WITHOUT_CLASSIFICATION	0.0012842629102691055	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992112858023899	WITHOUT_CLASSIFICATION	7.887141976099493E-4	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.999953759499635	WITHOUT_CLASSIFICATION	4.6240500364872926E-5	IMPLEMENTATION
does the limit clause come at the start of the select statement rather than at the end?	WITHOUT_CLASSIFICATION	0.9999995102262291	WITHOUT_CLASSIFICATION	4.897737708002619E-7	IMPLEMENTATION
does the limit clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.999998561245322	WITHOUT_CLASSIFICATION	1.4387546778826375E-6	IMPLEMENTATION
the name of the sql function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999972674530065	WITHOUT_CLASSIFICATION	2.732546993433275E-6	IMPLEMENTATION
create an outerjoingenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999949572355042	WITHOUT_CLASSIFICATION	5.042764495775394E-6	IMPLEMENTATION
the keyword used to insert a row without specifying any column values	WITHOUT_CLASSIFICATION	0.9999982616019466	WITHOUT_CLASSIFICATION	1.7383980533028736E-6	IMPLEMENTATION
registerfunction( "trim" new standardsqlfunction( "trim" hibernate.string ) )	WITHOUT_CLASSIFICATION	0.9999492547226487	WITHOUT_CLASSIFICATION	5.074527735128056E-5	IMPLEMENTATION
skip the from keyword in params	WITHOUT_CLASSIFICATION	0.9999990125263406	WITHOUT_CLASSIFICATION	9.874736593625033E-7	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999767920930022	WITHOUT_CLASSIFICATION	2.3207906997825932E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999809457404858	WITHOUT_CLASSIFICATION	1.905425951414039E-5	IMPLEMENTATION
sqlfunction implementation	WITHOUT_CLASSIFICATION	0.999870642454814	WITHOUT_CLASSIFICATION	1.2935754518595267E-4	IMPLEMENTATION
conceivable that the dialect ctor could throw hibernateexceptions so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999038669562292	WITHOUT_CLASSIFICATION	9.613304377075626E-5	IMPLEMENTATION
register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999695458749606	WITHOUT_CLASSIFICATION	3.045412503941094E-5	IMPLEMENTATION
register resolvers set via environment property	WITHOUT_CLASSIFICATION	0.9999383610172989	WITHOUT_CLASSIFICATION	6.163898270103167E-5	IMPLEMENTATION
kept for backward compatibility until after the 3.1beta5 release of ha	WITHOUT_CLASSIFICATION	0.9999472102265256	WITHOUT_CLASSIFICATION	5.278977347445345E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9999624030851751	WITHOUT_CLASSIFICATION	3.7596914824827935E-5	IMPLEMENTATION
the cascadingaction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999559287601905	WITHOUT_CLASSIFICATION	4.4071239809453544E-5	IMPLEMENTATION
the cascadingaction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999387628121117	WITHOUT_CLASSIFICATION	6.12371878883385E-5	IMPLEMENTATION
delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999940707576112	WITHOUT_CLASSIFICATION	5.929242388812116E-6	IMPLEMENTATION
orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9998110319967172	WITHOUT_CLASSIFICATION	1.88968003282857E-4	IMPLEMENTATION
(lockmode) anything	WITHOUT_CLASSIFICATION	0.9998949993887029	WITHOUT_CLASSIFICATION	1.0500061129721798E-4	IMPLEMENTATION
lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999845421706386	WITHOUT_CLASSIFICATION	1.5457829361331444E-5	IMPLEMENTATION
refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998185947977293	WITHOUT_CLASSIFICATION	1.8140520227071457E-4	IMPLEMENTATION
evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998792003767085	WITHOUT_CLASSIFICATION	1.2079962329139886E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999792056585199	WITHOUT_CLASSIFICATION	2.079434148009652E-5	IMPLEMENTATION
orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9998694201907541	WITHOUT_CLASSIFICATION	1.3057980924589891E-4	IMPLEMENTATION
for deprecated saveorupdatecopy()	WITHOUT_CLASSIFICATION	0.999982018692675	WITHOUT_CLASSIFICATION	1.798130732505441E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999879218962992	WITHOUT_CLASSIFICATION	1.2078103700793478E-4	IMPLEMENTATION
a proxy cannot be transient and it breaks foreignkeys.istransient	WITHOUT_CLASSIFICATION	0.9999989211045535	WITHOUT_CLASSIFICATION	1.0788954465516098E-6	IMPLEMENTATION
replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999959030336731	WITHOUT_CLASSIFICATION	4.096966326886927E-6	IMPLEMENTATION
static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999875514725812	WITHOUT_CLASSIFICATION	1.2448527418873585E-5	IMPLEMENTATION
handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999538548737839	WITHOUT_CLASSIFICATION	4.6145126216164506E-5	IMPLEMENTATION
actually the semantics of the next three are really "bag" note that unlike objects collection insertions updates deletions are not really remembered between flushes. we just re-use the same lists for convenience.	WITHOUT_CLASSIFICATION	0.9999766325069925	WITHOUT_CLASSIFICATION	2.3367493007450797E-5	IMPLEMENTATION
add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999679262802552	WITHOUT_CLASSIFICATION	3.2073719744812526E-5	IMPLEMENTATION
continue loop	WITHOUT_CLASSIFICATION	0.9999922613776969	WITHOUT_CLASSIFICATION	7.738622303039448E-6	IMPLEMENTATION
sort the updates by fk	WITHOUT_CLASSIFICATION	0.999958997058475	WITHOUT_CLASSIFICATION	4.100294152510341E-5	IMPLEMENTATION
sort the updates by pk	WITHOUT_CLASSIFICATION	0.999974482863811	WITHOUT_CLASSIFICATION	2.5517136189073355E-5	IMPLEMENTATION
the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999808878300492	WITHOUT_CLASSIFICATION	1.9112169950784985E-5	IMPLEMENTATION
the map of batch numbers to entityinsertaction lists	WITHOUT_CLASSIFICATION	0.9999877795820963	WITHOUT_CLASSIFICATION	1.2220417903787239E-5	IMPLEMENTATION
optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.999766441149151	WITHOUT_CLASSIFICATION	2.3355885084887703E-4	IMPLEMENTATION
the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.999890647009665	WITHOUT_CLASSIFICATION	1.0935299033492423E-4	IMPLEMENTATION
remove the current element from insertions. it will be added back later.	WITHOUT_CLASSIFICATION	0.9999999157508566	WITHOUT_CLASSIFICATION	8.424914346772325E-8	IMPLEMENTATION
the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999493779467512	WITHOUT_CLASSIFICATION	5.062205324889769E-5	IMPLEMENTATION
there is already an existing batch for this type of entity. check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999999446304771	WITHOUT_CLASSIFICATION	5.536952280264322E-8	IMPLEMENTATION
now rebuild the insertions list. there is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999989352919918	WITHOUT_CLASSIFICATION	1.0647080081820064E-6	IMPLEMENTATION
the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999954386404815	WITHOUT_CLASSIFICATION	4.5613595185371095E-6	IMPLEMENTATION
loop through all the associations of the current entity and make sure that they are processed before the current batch number	WITHOUT_CLASSIFICATION	0.9999945171061371	WITHOUT_CLASSIFICATION	5.4828938628429795E-6	IMPLEMENTATION
find the batch number associated with the current association if any.	WITHOUT_CLASSIFICATION	0.9999905035081733	WITHOUT_CLASSIFICATION	9.49649182659248E-6	IMPLEMENTATION
create a new batch for this type. the batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999990238855984	WITHOUT_CLASSIFICATION	9.761144016132596E-7	IMPLEMENTATION
loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9997681395846446	WITHOUT_CLASSIFICATION	2.3186041535544716E-4	IMPLEMENTATION
since this entity will now be processed in the latest possible batch we can be assured that it will come after all other associations there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9937372916661308	WITHOUT_CLASSIFICATION	0.006262708333869218	IMPLEMENTATION
cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999575295053399	WITHOUT_CLASSIFICATION	4.247049466021728E-5	IMPLEMENTATION
not really necessary but good for consistency	WITHOUT_CLASSIFICATION	0.9998078739960279	WITHOUT_CLASSIFICATION	1.9212600397222322E-4	IMPLEMENTATION
we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999540026436694	WITHOUT_CLASSIFICATION	4.599735633053261E-5	IMPLEMENTATION
a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9994278204915261	WITHOUT_CLASSIFICATION	5.721795084739027E-4	IMPLEMENTATION
handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9997429922190166	WITHOUT_CLASSIFICATION	2.570077809834282E-4	IMPLEMENTATION
loaded entity instances by entityuniquekey	WITHOUT_CLASSIFICATION	0.999987615821105	WITHOUT_CLASSIFICATION	1.2384178895031401E-5	IMPLEMENTATION
identity map of entityentry instances by the entity instance	WITHOUT_CLASSIFICATION	0.9999960917231845	WITHOUT_CLASSIFICATION	3.908276815520852E-6	IMPLEMENTATION
entity proxies by entitykey	WITHOUT_CLASSIFICATION	0.9999875160017461	WITHOUT_CLASSIFICATION	1.2483998253891667E-5	IMPLEMENTATION
snapshots of current database state for entities that have not been loaded	WITHOUT_CLASSIFICATION	0.9989704334538888	WITHOUT_CLASSIFICATION	0.0010295665461111222	IMPLEMENTATION
identity map of array holder arrayholder instances by the array instance	WITHOUT_CLASSIFICATION	0.9999994075440232	WITHOUT_CLASSIFICATION	5.924559768596096E-7	IMPLEMENTATION
collection wrappers by the collectionkey key=collectionkey value=persistentcollection	WITHOUT_CLASSIFICATION	0.9999729739508157	WITHOUT_CLASSIFICATION	2.7026049184208618E-5	IMPLEMENTATION
set of entitykeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999621692361871	WITHOUT_CLASSIFICATION	3.7830763812927975E-5	IMPLEMENTATION
properties that we have tried to load and not found in the database	WITHOUT_CLASSIFICATION	0.9941412286574199	WITHOUT_CLASSIFICATION	0.005858771342580058	IMPLEMENTATION
a list of collection wrappers that were instantiating during result set processing that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999794028540523	WITHOUT_CLASSIFICATION	2.0597145947687332E-5	IMPLEMENTATION
a container for collections we load up when the owning entity is not yet loaded for now this is purely transient!	WITHOUT_CLASSIFICATION	0.9987115900357921	WITHOUT_CLASSIFICATION	0.0012884099642078125	IMPLEMENTATION
downgrade locks	WITHOUT_CLASSIFICATION	0.9999125746811962	WITHOUT_CLASSIFICATION	8.742531880378557E-5	IMPLEMENTATION
any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999901031895058	WITHOUT_CLASSIFICATION	9.89681049428861E-6	IMPLEMENTATION
unwrap the object	WITHOUT_CLASSIFICATION	0.9999946284581588	WITHOUT_CLASSIFICATION	5.371541841157444E-6	IMPLEMENTATION
initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999970631964604	WITHOUT_CLASSIFICATION	2.9368035395737283E-6	IMPLEMENTATION
return the proxied object	WITHOUT_CLASSIFICATION	0.9999976285441732	WITHOUT_CLASSIFICATION	2.3714558268238655E-6	IMPLEMENTATION
overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999978588263663	WITHOUT_CLASSIFICATION	2.141173633789607E-6	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999553176571795	WITHOUT_CLASSIFICATION	4.4682342820450945E-5	IMPLEMENTATION
or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.999979694704356	WITHOUT_CLASSIFICATION	2.0305295644056785E-5	IMPLEMENTATION
treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9988332491685628	WITHOUT_CLASSIFICATION	0.001166750831437267	IMPLEMENTATION
do this work only at the very highest level of the load don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999637722238265	WITHOUT_CLASSIFICATION	3.622777617351797E-5	IMPLEMENTATION
note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999972868625661	WITHOUT_CLASSIFICATION	2.713137433800524E-6	IMPLEMENTATION
it might be an unwrapped collection reference! try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999764722659372	WITHOUT_CLASSIFICATION	2.3527734062800796E-5	IMPLEMENTATION
public boolean isnonexistant(entitykey key) {return nonexistantentitykeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999967093715241	WITHOUT_CLASSIFICATION	3.290628476050661E-6	IMPLEMENTATION
public boolean isnonexistant(entityuniquekey key) {return nonexistententityuniquekeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999967093715241	WITHOUT_CLASSIFICATION	3.290628476050661E-6	IMPLEMENTATION
iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999903192330908	WITHOUT_CLASSIFICATION	9.680766909252112E-6	IMPLEMENTATION
does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999996855741993	WITHOUT_CLASSIFICATION	3.144258007194965E-7	IMPLEMENTATION
check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999970043768139	WITHOUT_CLASSIFICATION	2.995623186167527E-6	IMPLEMENTATION
otherwise the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999927135337872	WITHOUT_CLASSIFICATION	7.286466212855008E-6	IMPLEMENTATION
adds remove as a sort-of alias for delete	WITHOUT_CLASSIFICATION	0.9999960496857971	WITHOUT_CLASSIFICATION	3.950314202918153E-6	IMPLEMENTATION
bad cast	WITHOUT_CLASSIFICATION	0.9999849235913297	WITHOUT_CLASSIFICATION	1.5076408670368582E-5	IMPLEMENTATION
return lhspersister.getsubclasspropertycolumnnames(property)	WITHOUT_CLASSIFICATION	0.9999738395909807	WITHOUT_CLASSIFICATION	2.6160409019279292E-5	IMPLEMENTATION
property-refs for associations defined on a component are not supported so no need to slice	WITHOUT_CLASSIFICATION	0.9999334252079494	WITHOUT_CLASSIFICATION	6.657479205061028E-5	IMPLEMENTATION
if there is no property-ref assume the join is to the subclass table (ie. the table of the subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999998164975347	WITHOUT_CLASSIFICATION	1.8350246539794809E-7	IMPLEMENTATION
handle a property-ref	WITHOUT_CLASSIFICATION	0.9997903093850147	WITHOUT_CLASSIFICATION	2.0969061498529265E-4	IMPLEMENTATION
nativesqlqueryreturn	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999903085228844	WITHOUT_CLASSIFICATION	9.691477115537494E-6	IMPLEMENTATION
why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999557278482948	WITHOUT_CLASSIFICATION	4.4272151705314E-5	IMPLEMENTATION
this.forcecacherefresh = forcecacherefresh	WITHOUT_CLASSIFICATION	0.999932585452814	WITHOUT_CLASSIFICATION	6.741454718589854E-5	IMPLEMENTATION
hella important optimization!!!	WITHOUT_CLASSIFICATION	0.9999360645570711	WITHOUT_CLASSIFICATION	6.393544292891783E-5	IMPLEMENTATION
return that.type.equals(type) && equalshelper.equals(that.value value)	WITHOUT_CLASSIFICATION	0.9999741952926856	WITHOUT_CLASSIFICATION	2.5804707314379158E-5	IMPLEMENTATION
must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999626935219167	WITHOUT_CLASSIFICATION	3.730647808338616E-5	IMPLEMENTATION
take a snapshot	WITHOUT_CLASSIFICATION	0.999967713387728	WITHOUT_CLASSIFICATION	3.2286612271913497E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9998453723100194	WITHOUT_CLASSIFICATION	1.5462768998073193E-4	IMPLEMENTATION
the owning entity may have been deleted and its identifier unset due to identifier-rollback in which case try to look up its identifier from the persistence context	WITHOUT_CLASSIFICATION	0.9993873361980894	WITHOUT_CLASSIFICATION	6.126638019106164E-4	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.999927678851128	WITHOUT_CLASSIFICATION	7.232114887208995E-5	IMPLEMENTATION
we've been here before	WITHOUT_CLASSIFICATION	0.9998654876805418	WITHOUT_CLASSIFICATION	1.3451231945808283E-4	IMPLEMENTATION
it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.999999705806902	WITHOUT_CLASSIFICATION	2.9419309794901807E-7	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.999927678851128	WITHOUT_CLASSIFICATION	7.232114887208995E-5	IMPLEMENTATION
if either its role changed	WITHOUT_CLASSIFICATION	0.9999998333857167	WITHOUT_CLASSIFICATION	1.6661428331932973E-7	IMPLEMENTATION
or its key changed	WITHOUT_CLASSIFICATION	0.9999973678858978	WITHOUT_CLASSIFICATION	2.6321141022520193E-6	IMPLEMENTATION
we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999132509909243	WITHOUT_CLASSIFICATION	8.674900907570592E-5	IMPLEMENTATION
we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9998863077365097	WITHOUT_CLASSIFICATION	1.1369226349035681E-4	IMPLEMENTATION
force initialize!	WITHOUT_CLASSIFICATION	0.9997803490608375	WITHOUT_CLASSIFICATION	2.196509391624477E-4	IMPLEMENTATION
else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999987259441971	WITHOUT_CLASSIFICATION	1.2740558029491758E-6	IMPLEMENTATION
attributes maintained between flush cycles	WITHOUT_CLASSIFICATION	0.9999620390204265	WITHOUT_CLASSIFICATION	3.7960979573574026E-5	IMPLEMENTATION
session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999876336358015	WITHOUT_CLASSIFICATION	1.2366364198577973E-5	IMPLEMENTATION
allow the collectionsnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999108248038132	WITHOUT_CLASSIFICATION	8.917519618675974E-5	IMPLEMENTATION
attributes used only during flush cycle	WITHOUT_CLASSIFICATION	0.999992975980429	WITHOUT_CLASSIFICATION	7.024019571024829E-6	IMPLEMENTATION
"current" means the reference that was found during flush()	WITHOUT_CLASSIFICATION	0.9999998824238219	WITHOUT_CLASSIFICATION	1.1757617816057143E-7	IMPLEMENTATION
"loaded" means the reference that is consistent with the current database state	WITHOUT_CLASSIFICATION	0.9999982822166741	WITHOUT_CLASSIFICATION	1.7177833259617854E-6	IMPLEMENTATION
during flush we navigate the object graph to collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9997974854338645	WITHOUT_CLASSIFICATION	2.025145661355559E-4	IMPLEMENTATION
if we instantiate a collection during the flush() process we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999995080025597	WITHOUT_CLASSIFICATION	4.919974402931542E-7	IMPLEMENTATION
new collections that get found + wrapped during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.998264663417991	WITHOUT_CLASSIFICATION	0.0017353365820089544	IMPLEMENTATION
a newly wrapped collection is not dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.994501739127766	WITHOUT_CLASSIFICATION	0.005498260872234021	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.9999708393820069	WITHOUT_CLASSIFICATION	2.9160617993068806E-5	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.9999708393820069	WITHOUT_CLASSIFICATION	2.9160617993068806E-5	IMPLEMENTATION
detached collections that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9976310980622872	WITHOUT_CLASSIFICATION	0.0023689019377128033	IMPLEMENTATION
optimization	WITHOUT_CLASSIFICATION	0.9999723408611008	WITHOUT_CLASSIFICATION	2.7659138899253326E-5	IMPLEMENTATION
optimization optimization	WITHOUT_CLASSIFICATION	0.9999794472243886	WITHOUT_CLASSIFICATION	2.0552775611328932E-5	IMPLEMENTATION
re-snapshot	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999499271383159	WITHOUT_CLASSIFICATION	5.007286168419876E-5	IMPLEMENTATION
note this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9987353230338598	WITHOUT_CLASSIFICATION	0.001264676966140133	IMPLEMENTATION
memory optimization	WITHOUT_CLASSIFICATION	0.9999459189262028	WITHOUT_CLASSIFICATION	5.408107379725923E-5	IMPLEMENTATION
use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9998999202601637	WITHOUT_CLASSIFICATION	1.0007973983624275E-4	IMPLEMENTATION
copied from session	WITHOUT_CLASSIFICATION	0.9999469913919133	WITHOUT_CLASSIFICATION	5.3008608086715155E-5	IMPLEMENTATION
this should not happen since the dtd prevents it	WITHOUT_CLASSIFICATION	0.9976878498355132	WITHOUT_CLASSIFICATION	0.002312150164486842	IMPLEMENTATION
joinprocessor needs to know if the where clause fragment came from a dynamic filter or not so it can put the where clause fragment in the right place in the sql ast. 'hasfiltercondition' keeps track of that fact.	WITHOUT_CLASSIFICATION	0.693687864097946	WITHOUT_CLASSIFICATION	0.3063121359020539	IMPLEMENTATION
the current join represents the join between a many-to-many association table and its "target" table. here we need to apply any additional filters defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9993999260469547	WITHOUT_CLASSIFICATION	6.000739530451764E-4	IMPLEMENTATION
check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9992529294276893	WITHOUT_CLASSIFICATION	7.470705723106144E-4	IMPLEMENTATION
values is not null and is checkable we'll look deeper	WITHOUT_CLASSIFICATION	0.999942323797182	WITHOUT_CLASSIFICATION	5.767620281794768E-5	IMPLEMENTATION
for non null args check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999855409100042	WITHOUT_CLASSIFICATION	1.445908999582085E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9999624030851751	WITHOUT_CLASSIFICATION	3.7596914824827935E-5	IMPLEMENTATION
persistent collections may have components	WITHOUT_CLASSIFICATION	0.9998846883444793	WITHOUT_CLASSIFICATION	1.1531165552067846E-4	IMPLEMENTATION
check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999985442888717	WITHOUT_CLASSIFICATION	1.4557111282433109E-6	IMPLEMENTATION
will check current level if some of them are not null or sublevels if they exist	WITHOUT_CLASSIFICATION	0.9999008110293216	WITHOUT_CLASSIFICATION	9.918897067845205E-5	IMPLEMENTATION
do the test	WITHOUT_CLASSIFICATION	0.9999935433314635	WITHOUT_CLASSIFICATION	6.456668536503914E-6	IMPLEMENTATION
if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999991080985692	WITHOUT_CLASSIFICATION	8.919014308659659E-7	IMPLEMENTATION
unwrap it	WITHOUT_CLASSIFICATION	0.9999866285279686	WITHOUT_CLASSIFICATION	1.337147203139605E-5	IMPLEMENTATION
see if the entity is already bound to this session if not look at the entity identifier and assume that the entity is persistent if the id is not "unsaved" (that is we rely on foreign keys to keep database integrity)	WITHOUT_CLASSIFICATION	0.9729020991330782	WITHOUT_CLASSIFICATION	0.027097900866921806	IMPLEMENTATION
an unfetched association can only point to an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999989937781875	WITHOUT_CLASSIFICATION	1.0062218126158746E-6	IMPLEMENTATION
let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999842108271839	WITHOUT_CLASSIFICATION	1.5789172816103642E-5	IMPLEMENTATION
let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999732128870773	WITHOUT_CLASSIFICATION	2.6787112922730726E-5	IMPLEMENTATION
we use the assumed value if there is one to avoid hitting the database	WITHOUT_CLASSIFICATION	0.9999988291542758	WITHOUT_CLASSIFICATION	1.1708457241836185E-6	IMPLEMENTATION
hit the database after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999283204977003	WITHOUT_CLASSIFICATION	7.167950229967655E-5	IMPLEMENTATION
context-entity-identifier returns null explicitly if the entity is not associated with the persistence context so make some deeper checks	WITHOUT_CLASSIFICATION	0.9882665493978496	WITHOUT_CLASSIFICATION	0.011733450602150426	IMPLEMENTATION
int count = 0	WITHOUT_CLASSIFICATION	0.999993230318076	WITHOUT_CLASSIFICATION	6.769681924097919E-6	IMPLEMENTATION
the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999457040963793	WITHOUT_CLASSIFICATION	5.429590362070291E-5	IMPLEMENTATION
checkforend = false	WITHOUT_CLASSIFICATION	0.9999179688016884	WITHOUT_CLASSIFICATION	8.203119831165277E-5	IMPLEMENTATION
count++	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999888810163684	WITHOUT_CLASSIFICATION	1.111898363168898E-5	IMPLEMENTATION
we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999743315466146	WITHOUT_CLASSIFICATION	2.5668453385361574E-5	IMPLEMENTATION
first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.999999859550717	WITHOUT_CLASSIFICATION	1.4044928304738822E-7	IMPLEMENTATION
the first id found after the given id	WITHOUT_CLASSIFICATION	0.9995566145833054	WITHOUT_CLASSIFICATION	4.433854166945272E-4	IMPLEMENTATION
we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999822839913426	WITHOUT_CLASSIFICATION	1.7716008657477266E-5	IMPLEMENTATION
look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999896588200128	WITHOUT_CLASSIFICATION	1.0341179987294191E-5	IMPLEMENTATION
ignore this row of results! note the early exit	WITHOUT_CLASSIFICATION	0.9999320969275	WITHOUT_CLASSIFICATION	6.79030724999915E-5	IMPLEMENTATION
initialize this collection	WITHOUT_CLASSIFICATION	0.9998887163347021	WITHOUT_CLASSIFICATION	1.1128366529781417E-4	IMPLEMENTATION
create one	WITHOUT_CLASSIFICATION	0.9999853233263226	WITHOUT_CLASSIFICATION	1.467667367746898E-5	IMPLEMENTATION
warning can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999840692682265	WITHOUT_CLASSIFICATION	1.5930731773542036E-5	IMPLEMENTATION
there were no queued additions and the role has a cache	WITHOUT_CLASSIFICATION	0.9999992051547142	WITHOUT_CLASSIFICATION	7.948452857325019E-7	IMPLEMENTATION
and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9981237871487487	WITHOUT_CLASSIFICATION	0.0018762128512512892	IMPLEMENTATION
some filters affecting the collection are enabled on the session so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.91608220572587	WITHOUT_CLASSIFICATION	0.08391779427413014	IMPLEMENTATION
cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999983705168997	WITHOUT_CLASSIFICATION	1.629483100294665E-5	IMPLEMENTATION
loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999500075157541	WITHOUT_CLASSIFICATION	4.999248424582554E-5	IMPLEMENTATION
collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999104031621281	WITHOUT_CLASSIFICATION	8.959683787196192E-5	IMPLEMENTATION
simple cache of param metadata based on query string. ideally the original "user-supplied query" string should be used to retreive this metadata (i.e. not the para-list-expanded query string) to avoid unnecessary cache entries. used solely for caching param metadata for native-sql queries see getsqlparametermetadata() for a discussion as to why	WITHOUT_CLASSIFICATION	0.9999162070267043	WITHOUT_CLASSIFICATION	8.379297329581596E-5	IMPLEMENTATION
the cache of the actual plans	WITHOUT_CLASSIFICATION	0.9999877162503821	WITHOUT_CLASSIFICATION	1.2283749617921568E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999767920930022	WITHOUT_CLASSIFICATION	2.3207906997825932E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999767920930022	WITHOUT_CLASSIFICATION	2.3207906997825932E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999963600556504	WITHOUT_CLASSIFICATION	3.639944349463544E-6	IMPLEMENTATION
for native-sql queries the param metadata is determined outside any relation to a query plan because query plan creation and/or retreival for a native-sql query depends on all of the return types having been set which might not be the case up-front when param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9979380099196311	WITHOUT_CLASSIFICATION	0.0020619900803688115	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999724649661662	WITHOUT_CLASSIFICATION	2.753503383382779E-5	IMPLEMENTATION
recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999527405038884	WITHOUT_CLASSIFICATION	4.725949611161096E-5	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999724649661662	WITHOUT_CLASSIFICATION	2.753503383382779E-5	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999922037379845	WITHOUT_CLASSIFICATION	7.796262015479921E-6	IMPLEMENTATION
break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999977327033778	WITHOUT_CLASSIFICATION	2.267296622140659E-6	IMPLEMENTATION
named parameter	WITHOUT_CLASSIFICATION	0.9999938369460909	WITHOUT_CLASSIFICATION	6.163053909135007E-6	IMPLEMENTATION
could be either an ordinal or jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999991155318175	WITHOUT_CLASSIFICATION	8.844681824966986E-7	IMPLEMENTATION
a peek ahead showed this as an jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999960804828764	WITHOUT_CLASSIFICATION	3.919517123593476E-6	IMPLEMENTATION
make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.999981344024501	WITHOUT_CLASSIFICATION	1.865597549894779E-5	IMPLEMENTATION
pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999485955863634	WITHOUT_CLASSIFICATION	5.140441363657497E-5	IMPLEMENTATION
perform the actual work	WITHOUT_CLASSIFICATION	0.999957757005957	WITHOUT_CLASSIFICATION	4.224299404291544E-5	IMPLEMENTATION
if everything went ok commit the transaction and close the obtained connection handle	WITHOUT_CLASSIFICATION	0.9997063131373649	WITHOUT_CLASSIFICATION	2.936868626350347E-4	IMPLEMENTATION
at some point the processing went bad so we need to 1) make sure the connection handle gets released 2) try to cleanup the jta context as much as possible	WITHOUT_CLASSIFICATION	0.6906488845608199	WITHOUT_CLASSIFICATION	0.30935111543918026	IMPLEMENTATION
finally handle the exception	WITHOUT_CLASSIFICATION	0.9999557891830237	WITHOUT_CLASSIFICATION	4.421081697627272E-5	IMPLEMENTATION
a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.999470636471142	WITHOUT_CLASSIFICATION	5.293635288580097E-4	IMPLEMENTATION
saveorupdatecopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999841561122023	WITHOUT_CLASSIFICATION	1.584388779772909E-5	IMPLEMENTATION
collectionpersister should not be null but we don't want to throw an exception if it is null	WITHOUT_CLASSIFICATION	0.9999991603430431	WITHOUT_CLASSIFICATION	8.396569569497806E-7	IMPLEMENTATION
otherwise a null or brand new collection this will also (inefficiently) handle arrays which have no snapshot so we can't do any better processarrayornewcollection(collection type)	WITHOUT_CLASSIFICATION	0.993676018239121	WITHOUT_CLASSIFICATION	0.00632398176087906	IMPLEMENTATION
a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9997338588318292	WITHOUT_CLASSIFICATION	2.661411681708484E-4	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999960020965133	WITHOUT_CLASSIFICATION	3.99790348664363E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999960020965133	WITHOUT_CLASSIFICATION	3.99790348664363E-6	IMPLEMENTATION
force a substitution!	WITHOUT_CLASSIFICATION	0.9998668284253583	WITHOUT_CLASSIFICATION	1.3317157464163705E-4	IMPLEMENTATION
the user requested a "greater" (i.e. more restrictive) form of pessimistic lock	WITHOUT_CLASSIFICATION	0.9999757990533833	WITHOUT_CLASSIFICATION	2.4200946616674392E-5	IMPLEMENTATION
the database now holds a lock + the object is flushed from the cache so release the soft lock	WITHOUT_CLASSIFICATION	0.9999996115845641	WITHOUT_CLASSIFICATION	3.884154358280603E-7	IMPLEMENTATION
now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999993889337415	WITHOUT_CLASSIFICATION	6.110662584509291E-7	IMPLEMENTATION
search for collections by reachability updating their role. we don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999737306578015	WITHOUT_CLASSIFICATION	2.6269342198399454E-5	IMPLEMENTATION
this is a situation where the entity id is assigned by a post-insert generator and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999940963258999	WITHOUT_CLASSIFICATION	5.903674100163673E-6	IMPLEMENTATION
note we need to do the wrap here even if its not "dirty" because collections need wrapping but changes to _them_ don't dirty the container. also for versioned data we need to wrap before calling searchfordirtycollections	WITHOUT_CLASSIFICATION	0.9999144965537995	WITHOUT_CLASSIFICATION	8.550344620044341E-5	IMPLEMENTATION
grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999995458342137	WITHOUT_CLASSIFICATION	4.5416578629172504E-7	IMPLEMENTATION
grab its current state	WITHOUT_CLASSIFICATION	0.9999937173803564	WITHOUT_CLASSIFICATION	6.2826196437224395E-6	IMPLEMENTATION
schedule the update note that we intentionally do _not_ pass in currentpersistentstate!	WITHOUT_CLASSIFICATION	0.999997635198008	WITHOUT_CLASSIFICATION	2.3648019919159813E-6	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999987367725963	WITHOUT_CLASSIFICATION	1.2632274036907543E-6	IMPLEMENTATION
give the interceptor a chance to process property values if the properties were modified by the interceptor we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999977494680011	WITHOUT_CLASSIFICATION	2.2505319988206315E-6	IMPLEMENTATION
compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999680854703822	WITHOUT_CLASSIFICATION	3.191452961783585E-5	IMPLEMENTATION
if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999998345430308	WITHOUT_CLASSIFICATION	1.6545696934245456E-7	IMPLEMENTATION
increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.99954134658847	WITHOUT_CLASSIFICATION	4.586534115298826E-4	IMPLEMENTATION
check nullability but do not perform command execute we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999078413214937	WITHOUT_CLASSIFICATION	9.215867850625066E-5	IMPLEMENTATION
give the interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999970811779662	WITHOUT_CLASSIFICATION	2.9188220338533227E-6	IMPLEMENTATION
now we might need to recalculate the dirtyproperties array	WITHOUT_CLASSIFICATION	0.9997511883012259	WITHOUT_CLASSIFICATION	2.488116987741302E-4	IMPLEMENTATION
use the current version	WITHOUT_CLASSIFICATION	0.9999140598789767	WITHOUT_CLASSIFICATION	8.594012102320981E-5	IMPLEMENTATION
interceptor returned null so do the dirtycheck ourself if possible	WITHOUT_CLASSIFICATION	0.9999993392343626	WITHOUT_CLASSIFICATION	6.607656374049566E-7	IMPLEMENTATION
object loaded by update()	WITHOUT_CLASSIFICATION	0.9999984621185958	WITHOUT_CLASSIFICATION	1.53788140422921E-6	IMPLEMENTATION
dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9990098656741594	WITHOUT_CLASSIFICATION	9.901343258406693E-4	IMPLEMENTATION
dirty check against the database snapshot if possible/necessary	WITHOUT_CLASSIFICATION	0.9995302716008294	WITHOUT_CLASSIFICATION	4.697283991705862E-4	IMPLEMENTATION
the interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9907031984798559	WITHOUT_CLASSIFICATION	0.009296801520144027	IMPLEMENTATION
even process null collections	WITHOUT_CLASSIFICATION	0.9999976904144734	WITHOUT_CLASSIFICATION	2.30958552664736E-6	IMPLEMENTATION
get the id from the object	WITHOUT_CLASSIFICATION	0.9999984030591206	WITHOUT_CLASSIFICATION	1.5969408795120114E-6	IMPLEMENTATION
always do an insert and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999959629458838	WITHOUT_CLASSIFICATION	4.037054116241806E-6	IMPLEMENTATION
what is the version on the database?	WITHOUT_CLASSIFICATION	0.9979117708126194	WITHOUT_CLASSIFICATION	0.002088229187380726	IMPLEMENTATION
/ hhh-2378	WITHOUT_CLASSIFICATION	0.9999973021147852	WITHOUT_CLASSIFICATION	2.6978852148450322E-6	IMPLEMENTATION
will result in a sql update	WITHOUT_CLASSIFICATION	0.9999999808127774	WITHOUT_CLASSIFICATION	1.9187222560617074E-8	IMPLEMENTATION
else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999906533900547	WITHOUT_CLASSIFICATION	9.346609945412562E-6	IMPLEMENTATION
no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999995833012053	WITHOUT_CLASSIFICATION	4.16698794799885E-7	IMPLEMENTATION
refresh() does not pass an entityname	WITHOUT_CLASSIFICATION	0.9999108286729902	WITHOUT_CLASSIFICATION	8.917132700988798E-5	IMPLEMENTATION
do not return a proxy! (this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9894438299898255	WITHOUT_CLASSIFICATION	0.010556170010174499	IMPLEMENTATION
return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.999986620137582	WITHOUT_CLASSIFICATION	1.3379862418053313E-5	IMPLEMENTATION
return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999984933914835	WITHOUT_CLASSIFICATION	1.506608516502191E-6	IMPLEMENTATION
return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999916620627791	WITHOUT_CLASSIFICATION	8.337937220877356E-6	IMPLEMENTATION
this object was already loaded	WITHOUT_CLASSIFICATION	0.9999995496445016	WITHOUT_CLASSIFICATION	4.503554984157362E-7	IMPLEMENTATION
entity was found in second-level cache	WITHOUT_CLASSIFICATION	0.9999994168916312	WITHOUT_CLASSIFICATION	5.831083688389423E-7	IMPLEMENTATION
make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9993102952788679	WITHOUT_CLASSIFICATION	6.897047211320634E-4	IMPLEMENTATION
intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999932785798614	WITHOUT_CLASSIFICATION	6.721420138568283E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pre-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999581133477052	WITHOUT_CLASSIFICATION	4.188665229475487E-5	IMPLEMENTATION
some statistics	WITHOUT_CLASSIFICATION	0.9998311697631205	WITHOUT_CLASSIFICATION	1.6883023687950453E-4	IMPLEMENTATION
safe from concurrent modification because of how entrylist() is implemented on identitymap	WITHOUT_CLASSIFICATION	0.9496067643453064	WITHOUT_CLASSIFICATION	0.0503932356546936	IMPLEMENTATION
initialize dirty flags for arrays + collections with composite elements and reset reached doupdate etc.	WITHOUT_CLASSIFICATION	0.9986547201417836	WITHOUT_CLASSIFICATION	0.001345279858216397	IMPLEMENTATION
among other things updatereachables() will recursively load all collections that are moving roles. this might cause entities to be loaded.	WITHOUT_CLASSIFICATION	0.9999873882572223	WITHOUT_CLASSIFICATION	1.2611742777623124E-5	IMPLEMENTATION
so this needs to be safe from concurrent modification problems. it is safe because of how identitymap implements entryset()	WITHOUT_CLASSIFICATION	0.9999729859414019	WITHOUT_CLASSIFICATION	2.7014058598140482E-5	IMPLEMENTATION
update the status of the object and if necessary schedule an update	WITHOUT_CLASSIFICATION	0.9999998789894613	WITHOUT_CLASSIFICATION	1.2101053858386112E-7	IMPLEMENTATION
schedule updates to collections	WITHOUT_CLASSIFICATION	0.9999153322574375	WITHOUT_CLASSIFICATION	8.466774256253375E-5	IMPLEMENTATION
we need to lock the collection caches before executing entity inserts/updates in order to account for bidi associations	WITHOUT_CLASSIFICATION	0.9999901314794666	WITHOUT_CLASSIFICATION	9.868520533359835E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ post-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999581133477052	WITHOUT_CLASSIFICATION	4.188665229475487E-5	IMPLEMENTATION
the database has changed now so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999936140650675	WITHOUT_CLASSIFICATION	6.385934932566288E-6	IMPLEMENTATION
if the collection is dereferenced remove from the session cache iter.remove() does not work since the entryset is not backed by the set	WITHOUT_CLASSIFICATION	0.999998790771585	WITHOUT_CLASSIFICATION	1.209228414941786E-6	IMPLEMENTATION
otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9995301324877357	WITHOUT_CLASSIFICATION	4.6986751226430547E-4	IMPLEMENTATION
get a snapshot	WITHOUT_CLASSIFICATION	0.9999920248491205	WITHOUT_CLASSIFICATION	7.975150879407954E-6	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999607861657607	WITHOUT_CLASSIFICATION	3.92138342392426E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9999607861657607	WITHOUT_CLASSIFICATION	3.92138342392426E-5	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999982074738719	WITHOUT_CLASSIFICATION	1.7925261281161374E-6	IMPLEMENTATION
early exit!!!	WITHOUT_CLASSIFICATION	0.9999765832251906	WITHOUT_CLASSIFICATION	2.3416774809378712E-5	IMPLEMENTATION
ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999992440794729	WITHOUT_CLASSIFICATION	7.559205269913616E-7	IMPLEMENTATION
before any callbacks etc so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999998804901238	WITHOUT_CLASSIFICATION	1.1950987628926987E-7	IMPLEMENTATION
ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9998825788402729	WITHOUT_CLASSIFICATION	1.1742115972708539E-4	IMPLEMENTATION
typefactory.deepcopy( currentstate proptypes persister.getpropertyupdateability() deletedstate session )	WITHOUT_CLASSIFICATION	0.9998159314899716	WITHOUT_CLASSIFICATION	1.8406851002828706E-4	IMPLEMENTATION
cascade-delete to collections before the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9998644751883745	WITHOUT_CLASSIFICATION	1.3552481162557338E-4	IMPLEMENTATION
cascade-delete to many-to-one after the parent was deleted	WITHOUT_CLASSIFICATION	0.9999672388854217	WITHOUT_CLASSIFICATION	3.276111457819661E-5	IMPLEMENTATION
if it is an initialized proxy let cascade handle it later on	WITHOUT_CLASSIFICATION	0.9999755482824843	WITHOUT_CLASSIFICATION	2.4451717515748985E-5	IMPLEMENTATION
assign the requested id to the proxy before reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999492596398714	WITHOUT_CLASSIFICATION	5.074036012869602E-5	IMPLEMENTATION
an uninitialized proxy noop don't even need to return an id since it is never a save()	WITHOUT_CLASSIFICATION	0.9995654121795996	WITHOUT_CLASSIFICATION	4.345878204004578E-4	IMPLEMENTATION
initialize properties of the event	WITHOUT_CLASSIFICATION	0.99997915687797	WITHOUT_CLASSIFICATION	2.0843122030071737E-5	IMPLEMENTATION
return the id in the event object	WITHOUT_CLASSIFICATION	0.9999973940769916	WITHOUT_CLASSIFICATION	2.6059230083222655E-6	IMPLEMENTATION
transient or deleted	WITHOUT_CLASSIFICATION	0.999797480515011	WITHOUT_CLASSIFICATION	2.0251948498899866E-4	IMPLEMENTATION
use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.999834585442218	WITHOUT_CLASSIFICATION	1.6541455778195627E-4	IMPLEMENTATION
assume this is a newly instantiated transient object which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999721440676793	WITHOUT_CLASSIFICATION	2.7855932320636312E-5	IMPLEMENTATION
this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999396999005379	WITHOUT_CLASSIFICATION	6.030009946220358E-5	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9991931382807161	WITHOUT_CLASSIFICATION	8.068617192840084E-4	IMPLEMENTATION
cachedstate	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
assume true since we don't really know and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999243564074904	WITHOUT_CLASSIFICATION	7.564359250959509E-5	IMPLEMENTATION
a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999762090807558	WITHOUT_CLASSIFICATION	2.3790919244280295E-5	IMPLEMENTATION
if the collection belonged to a different entity clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999879626320689	WITHOUT_CLASSIFICATION	1.2037367931019345E-5	IMPLEMENTATION
log.debug( "calling onload()" )	WITHOUT_CLASSIFICATION	0.9999354420963775	WITHOUT_CLASSIFICATION	6.455790362247926E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999871905227875	WITHOUT_CLASSIFICATION	1.2809477212390681E-5	IMPLEMENTATION
note performexecutions() clears all collectionxxxxtion collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999710269812186	WITHOUT_CLASSIFICATION	2.897301878137625E-5	IMPLEMENTATION
if no array holder we found an unwrappered array (this can't occur because we now always call wrap() before getting to here) return (ah==null) ? true searchfordirtycollections(ah type)	WITHOUT_CLASSIFICATION	0.9999998842382593	WITHOUT_CLASSIFICATION	1.1576174069748261E-7	IMPLEMENTATION
if not wrappered yet its dirty (this can't occur because we now always call wrap() before getting to here) return ( ! (obj instanceof persistentcollection) ) ? true searchfordirtycollections( (persistentcollection) obj type )	WITHOUT_CLASSIFICATION	0.9721169252111737	WITHOUT_CLASSIFICATION	0.027883074788826352	IMPLEMENTATION
we need to check even if it was not initialized because of delayed adds!	WITHOUT_CLASSIFICATION	0.9993118420167232	WITHOUT_CLASSIFICATION	6.881579832768433E-4	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999907668816606	WITHOUT_CLASSIFICATION	9.2331183394433E-6	IMPLEMENTATION
find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.999921487990858	WITHOUT_CLASSIFICATION	7.851200914195077E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999871905227875	WITHOUT_CLASSIFICATION	1.2809477212390681E-5	IMPLEMENTATION
check the persistence context for an entry relating to this entity to be merged	WITHOUT_CLASSIFICATION	0.9998669311010927	WITHOUT_CLASSIFICATION	1.3306889890721239E-4	IMPLEMENTATION
we have specialized case of a detached entity from the perspective of the merge operation. specifically we have an incoming entity instance which has a corresponding entry in the current persistence context but registered under a different entity instance	WITHOUT_CLASSIFICATION	0.9999999795473424	WITHOUT_CLASSIFICATION	2.0452657487648926E-8	IMPLEMENTATION
deleted	WITHOUT_CLASSIFICATION	0.9998671194872035	WITHOUT_CLASSIFICATION	1.328805127965065E-4	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999764252310981	WITHOUT_CLASSIFICATION	2.3574768901945235E-5	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy cascadeonmerge(event persister entity copycache cascades.cascade_before_merge)	WITHOUT_CLASSIFICATION	0.9999998036271187	WITHOUT_CLASSIFICATION	1.9637288123709527E-7	IMPLEMENTATION
this bit is only really absolutely necessary for handling requestedid but is also good if we merge multiple object graphs since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999999289257804	WITHOUT_CLASSIFICATION	7.107421959507889E-8	IMPLEMENTATION
continue we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.999908050130995	WITHOUT_CLASSIFICATION	9.194986900492594E-5	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999998806959484	WITHOUT_CLASSIFICATION	1.193040515521711E-7	IMPLEMENTATION
check that entity id = requestedid	WITHOUT_CLASSIFICATION	0.9942993995322031	WITHOUT_CLASSIFICATION	0.005700600467796907	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999764252310981	WITHOUT_CLASSIFICATION	2.3574768901945235E-5	IMPLEMENTATION
we got here because we assumed that an instance with an assigned id was detached when it was really persistent	WITHOUT_CLASSIFICATION	0.9999948262418221	WITHOUT_CLASSIFICATION	5.173758177897116E-6	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999998806959484	WITHOUT_CLASSIFICATION	1.193040515521711E-7	IMPLEMENTATION
copyvalues works by reflection so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999462446651421	WITHOUT_CLASSIFICATION	5.375533485785163E-5	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999553176571795	WITHOUT_CLASSIFICATION	4.4682342820450945E-5	IMPLEMENTATION
source.getbatcher().executebatch() found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9997616099162812	WITHOUT_CLASSIFICATION	2.3839008371883704E-4	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999987367725963	WITHOUT_CLASSIFICATION	1.2632274036907543E-6	IMPLEMENTATION
now done in entityidentityinsertaction persister.setidentifier( entity id source.getentitymode() )	WITHOUT_CLASSIFICATION	0.9998818690492156	WITHOUT_CLASSIFICATION	1.1813095078432857E-4	IMPLEMENTATION
source.getpersistencecontext().removenonexist( new entitykey( id persister source.getentitymode() ) )	WITHOUT_CLASSIFICATION	0.9994007481070839	WITHOUT_CLASSIFICATION	5.992518929160844E-4	IMPLEMENTATION
keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.999999615225246	WITHOUT_CLASSIFICATION	3.847747539592171E-7	IMPLEMENTATION
cascade-save to many-to-one before the parent is saved	WITHOUT_CLASSIFICATION	0.9999914333672159	WITHOUT_CLASSIFICATION	8.566632784091434E-6	IMPLEMENTATION
pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999999683241539	WITHOUT_CLASSIFICATION	3.1675846060039736E-8	IMPLEMENTATION
the object is persistent	WITHOUT_CLASSIFICATION	0.9999985071675282	WITHOUT_CLASSIFICATION	1.4928324717067606E-6	IMPLEMENTATION
the entity is associated with the session so check its status	WITHOUT_CLASSIFICATION	0.9998829934945263	WITHOUT_CLASSIFICATION	1.1700650547375866E-4	IMPLEMENTATION
do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999957353572447	WITHOUT_CLASSIFICATION	4.264642755292005E-6	IMPLEMENTATION
ie. e.status==deleted	WITHOUT_CLASSIFICATION	0.9999708393820069	WITHOUT_CLASSIFICATION	2.9160617993068806E-5	IMPLEMENTATION
the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999986204536948	WITHOUT_CLASSIFICATION	1.3795463051554113E-6	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999907668816606	WITHOUT_CLASSIFICATION	9.2331183394433E-6	IMPLEMENTATION
private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999977128347332	WITHOUT_CLASSIFICATION	2.287165266952126E-6	IMPLEMENTATION
first try to find a matching constructor accepting a violatedconstraintnameextracter param	WITHOUT_CLASSIFICATION	0.9995663879401832	WITHOUT_CLASSIFICATION	4.336120598168474E-4	IMPLEMENTATION
eat it and try next	WITHOUT_CLASSIFICATION	0.9999251358580958	WITHOUT_CLASSIFICATION	7.48641419042695E-5	IMPLEMENTATION
otherwise try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9968975634581537	WITHOUT_CLASSIFICATION	0.003102436541846201	IMPLEMENTATION
oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999898914458891	WITHOUT_CLASSIFICATION	1.0108554110889573E-5	IMPLEMENTATION
collectionpropertymapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999118889487337	WITHOUT_CLASSIFICATION	8.811105126624223E-5	IMPLEMENTATION
remove initial " "	WITHOUT_CLASSIFICATION	0.9999945924372179	WITHOUT_CLASSIFICATION	5.407562782144508E-6	IMPLEMENTATION
remove initial " and "	WITHOUT_CLASSIFICATION	0.9999949526705323	WITHOUT_CLASSIFICATION	5.047329467777334E-6	IMPLEMENTATION
beforeclasstokens.add("new") definitely don't have this!!	WITHOUT_CLASSIFICATION	0.9998935374968255	WITHOUT_CLASSIFICATION	1.0646250317444398E-4	IMPLEMENTATION
notafterclasstokens.add("")	WITHOUT_CLASSIFICATION	0.9999708393820069	WITHOUT_CLASSIFICATION	2.9160617993068806E-5	IMPLEMENTATION
just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999203282612125	WITHOUT_CLASSIFICATION	7.967173878753746E-5	IMPLEMENTATION
update last non-whitespace token if necessary	WITHOUT_CLASSIFICATION	0.9999983885523269	WITHOUT_CLASSIFICATION	1.6114476730739315E-6	IMPLEMENTATION
select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999975774485901	WITHOUT_CLASSIFICATION	2.422551409993407E-6	IMPLEMENTATION
scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999803079753379	WITHOUT_CLASSIFICATION	1.96920246621333E-5	IMPLEMENTATION
note this!!	WITHOUT_CLASSIFICATION	0.9999717784929815	WITHOUT_CLASSIFICATION	2.8221507018454883E-5	IMPLEMENTATION
error message constants.	WITHOUT_CLASSIFICATION	0.9998027796698836	WITHOUT_CLASSIFICATION	1.9722033011644743E-4	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998940438875003	WITHOUT_CLASSIFICATION	1.0595611249971278E-4	IMPLEMENTATION
semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9980663266151244	WITHOUT_CLASSIFICATION	0.0019336733848756573	IMPLEMENTATION
handle collection-fiter compilation. important note this is modifying the input (hql) tree not the output tree!	WITHOUT_CLASSIFICATION	0.9912861770187986	WITHOUT_CLASSIFICATION	0.008713822981201338	IMPLEMENTATION
show the modified ast.	WITHOUT_CLASSIFICATION	0.9998174663735518	WITHOUT_CLASSIFICATION	1.8253362644817927E-4	IMPLEMENTATION
create a parameter specification for the collection filter	WITHOUT_CLASSIFICATION	0.9999175579267242	WITHOUT_CLASSIFICATION	8.24420732757811E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999497964407642	WITHOUT_CLASSIFICATION	5.020355923574846E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999497964407642	WITHOUT_CLASSIFICATION	5.020355923574846E-5	IMPLEMENTATION
get the names of the columns used to link between the collection owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999987213976594	WITHOUT_CLASSIFICATION	1.278602340633858E-6	IMPLEMENTATION
the path ast should be a dotnode and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9997436975462681	WITHOUT_CLASSIFICATION	2.5630245373194663E-4	IMPLEMENTATION
tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999858638167994	WITHOUT_CLASSIFICATION	1.413618320056609E-5	IMPLEMENTATION
re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999716901023938	WITHOUT_CLASSIFICATION	2.830989760608526E-5	IMPLEMENTATION
don't forget to resolve the argument! resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9998359707120218	WITHOUT_CLASSIFICATION	1.6402928797814868E-4	IMPLEMENTATION
resolve everything up to this dot but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999710501869236	WITHOUT_CLASSIFICATION	2.894981307648291E-5	IMPLEMENTATION
should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999978478111865	WITHOUT_CLASSIFICATION	2.152188813544444E-6	IMPLEMENTATION
was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999998633825463	WITHOUT_CLASSIFICATION	1.3661745378800165E-7	IMPLEMENTATION
attach any mapping-defined "order by" fragments	WITHOUT_CLASSIFICATION	0.9999787455651106	WITHOUT_CLASSIFICATION	2.1254434889366584E-5	IMPLEMENTATION
use the explicitly declared select expression determine the return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999970887418509	WITHOUT_CLASSIFICATION	2.911258149050293E-6	IMPLEMENTATION
after that process the joins. invoke a delegate to do the work as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999464463910708	WITHOUT_CLASSIFICATION	5.355360892928396E-5	IMPLEMENTATION
make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999941316737753	WITHOUT_CLASSIFICATION	5.868326224778311E-6	IMPLEMENTATION
we need to generate ids as part of this bulk insert. note that this is only supported for sequence-style generators and post-insert-style generators basically only in-db generators	WITHOUT_CLASSIFICATION	0.9999941246364181	WITHOUT_CLASSIFICATION	5.875363581868832E-6	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999497964407642	WITHOUT_CLASSIFICATION	5.020355923574846E-5	IMPLEMENTATION
we need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9998606008791391	WITHOUT_CLASSIFICATION	1.3939912086087403E-4	IMPLEMENTATION
we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999603683988922	WITHOUT_CLASSIFICATION	3.9631601107857846E-5	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.999911195353652	WITHOUT_CLASSIFICATION	8.880464634797637E-5	IMPLEMENTATION
generate implicit joins only if necessary.	WITHOUT_CLASSIFICATION	0.9999925949016693	WITHOUT_CLASSIFICATION	7.405098330719776E-6	IMPLEMENTATION
notify the from element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999997753652503	WITHOUT_CLASSIFICATION	2.2463474966605868E-7	IMPLEMENTATION
turn off includesubclasses on all fromelements.	WITHOUT_CLASSIFICATION	0.9998729789681207	WITHOUT_CLASSIFICATION	1.270210318793968E-4	IMPLEMENTATION
create the node initially with the param name so that it shows appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999941949000787	WITHOUT_CLASSIFICATION	5.805099921375752E-6	IMPLEMENTATION
use the delegate resolve identifiers as from element aliases.	WITHOUT_CLASSIFICATION	0.9999957733487203	WITHOUT_CLASSIFICATION	4.226651279729801E-6	IMPLEMENTATION
select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999985986881055	WITHOUT_CLASSIFICATION	1.4013118945346226E-6	IMPLEMENTATION
no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999902928950368	WITHOUT_CLASSIFICATION	9.707104963155332E-6	IMPLEMENTATION
make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9998215804375625	WITHOUT_CLASSIFICATION	1.784195624374275E-4	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998940438875003	WITHOUT_CLASSIFICATION	1.0595611249971278E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999497964407642	WITHOUT_CLASSIFICATION	5.020355923574846E-5	IMPLEMENTATION
--commented out by inspection (12/11/04 1056 am) int getwarningcount()	WITHOUT_CLASSIFICATION	0.9999950460471412	WITHOUT_CLASSIFICATION	4.953952858781535E-6	IMPLEMENTATION
alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9993642837275355	WITHOUT_CLASSIFICATION	6.357162724644792E-4	IMPLEMENTATION
switch	WITHOUT_CLASSIFICATION	0.9999881621344686	WITHOUT_CLASSIFICATION	1.1837865531459901E-5	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9993604097170022	WITHOUT_CLASSIFICATION	6.395902829977385E-4	IMPLEMENTATION
just do the regular thing if you can't find the ctor your ast must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999986842128772	WITHOUT_CLASSIFICATION	1.3157871228927628E-6	IMPLEMENTATION
initialize sql nodes here.	WITHOUT_CLASSIFICATION	0.9999622580000648	WITHOUT_CLASSIFICATION	3.774199993530454E-5	IMPLEMENTATION
semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996951168154146	WITHOUT_CLASSIFICATION	3.0488318458536223E-4	IMPLEMENTATION
if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999999829064954	WITHOUT_CLASSIFICATION	1.7093504620569535E-8	IMPLEMENTATION
this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999992905951286	WITHOUT_CLASSIFICATION	7.094048714172118E-7	IMPLEMENTATION
--- inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999827637772385	WITHOUT_CLASSIFICATION	1.7236222761456293E-5	IMPLEMENTATION
check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9997097388743919	WITHOUT_CLASSIFICATION	2.9026112560810225E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999973021147852	WITHOUT_CLASSIFICATION	2.6978852148450322E-6	IMPLEMENTATION
these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999817182264018	WITHOUT_CLASSIFICATION	1.8281773598149278E-5	IMPLEMENTATION
again both should be fromelements	WITHOUT_CLASSIFICATION	0.9999525288493186	WITHOUT_CLASSIFICATION	4.747115068136737E-5	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999922037379845	WITHOUT_CLASSIFICATION	7.796262015479921E-6	IMPLEMENTATION
right represents a joins originating from left or both right and left reprersent joins originating from the same fromelement	WITHOUT_CLASSIFICATION	0.9999949552949012	WITHOUT_CLASSIFICATION	5.0447050987596105E-6	IMPLEMENTATION
check a set of parent/child nodes in the from-clause tree to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999998547456755	WITHOUT_CLASSIFICATION	1.4525432452295525E-7	IMPLEMENTATION
right represents a joins originating from left	WITHOUT_CLASSIFICATION	0.9999962789436628	WITHOUT_CLASSIFICATION	3.7210563372519484E-6	IMPLEMENTATION
all clear	WITHOUT_CLASSIFICATION	0.9999924654920066	WITHOUT_CLASSIFICATION	7.534507993400083E-6	IMPLEMENTATION
ignore the token class name parameter and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999982184080387	WITHOUT_CLASSIFICATION	1.7815919613178283E-6	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999893498677583	WITHOUT_CLASSIFICATION	1.0650132241714078E-5	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999893498677583	WITHOUT_CLASSIFICATION	1.0650132241714078E-5	IMPLEMENTATION
remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9996854726325782	WITHOUT_CLASSIFICATION	3.1452736742179844E-4	IMPLEMENTATION
don't care about other param types here just those explicitly user-defined	WITHOUT_CLASSIFICATION	0.9999043806612892	WITHOUT_CLASSIFICATION	9.561933871092238E-5	IMPLEMENTATION
if the query is already compiled skip the compilation.	WITHOUT_CLASSIFICATION	0.9999985257205918	WITHOUT_CLASSIFICATION	1.4742794082319823E-6	IMPLEMENTATION
remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9998138677445861	WITHOUT_CLASSIFICATION	1.8613225541383243E-4	IMPLEMENTATION
phase 1 parse the hql into an ast.	WITHOUT_CLASSIFICATION	0.9999987792859611	WITHOUT_CLASSIFICATION	1.2207140387354034E-6	IMPLEMENTATION
phase 2 analyze the hql ast and produce an sql ast.	WITHOUT_CLASSIFICATION	0.9999997464498913	WITHOUT_CLASSIFICATION	2.5355010874414143E-7	IMPLEMENTATION
phase 3 generate the sql.	WITHOUT_CLASSIFICATION	0.9999819439889088	WITHOUT_CLASSIFICATION	1.805601109120785E-5	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9993383889079375	WITHOUT_CLASSIFICATION	6.616110920624938E-4	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9993383889079375	WITHOUT_CLASSIFICATION	6.616110920624938E-4	IMPLEMENTATION
only needed during compilation phase	WITHOUT_CLASSIFICATION	0.9740504209093205	WITHOUT_CLASSIFICATION	0.025949579090679485	IMPLEMENTATION
transform the tree.	WITHOUT_CLASSIFICATION	0.9999746981393635	WITHOUT_CLASSIFICATION	2.5301860636580876E-5	IMPLEMENTATION
parse the query string into an hql ast.	WITHOUT_CLASSIFICATION	0.9999985412539731	WITHOUT_CLASSIFICATION	1.4587460269583547E-6	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9999715770047882	WITHOUT_CLASSIFICATION	2.8422995211747187E-5	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9999715770047882	WITHOUT_CLASSIFICATION	2.8422995211747187E-5	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9999715770047882	WITHOUT_CLASSIFICATION	2.8422995211747187E-5	IMPLEMENTATION
note ( max - 1 ) because first is zero-based while max is not	WITHOUT_CLASSIFICATION	0.9999057168517113	WITHOUT_CLASSIFICATION	9.428314828886006E-5	IMPLEMENTATION
-- package local methods for the queryloader delegate --	WITHOUT_CLASSIFICATION	0.9999977858071664	WITHOUT_CLASSIFICATION	2.2141928336618204E-6	IMPLEMENTATION
if there are no collection fetches then no further checks are needed	WITHOUT_CLASSIFICATION	0.9974703203984591	WITHOUT_CLASSIFICATION	0.002529679601541004	IMPLEMENTATION
a shallow query is ok (although technically there should be no fetching here)	WITHOUT_CLASSIFICATION	0.999999404079908	WITHOUT_CLASSIFICATION	5.959200919784029E-7	IMPLEMENTATION
should be the first but just to be safe	WITHOUT_CLASSIFICATION	0.9999986981007389	WITHOUT_CLASSIFICATION	1.3018992610885424E-6	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999497964407642	WITHOUT_CLASSIFICATION	5.020355923574846E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999497964407642	WITHOUT_CLASSIFICATION	5.020355923574846E-5	IMPLEMENTATION
impl note allows multiple collection fetches as long as the entire fecthed graph still "points back" to a single root entity for return	WITHOUT_CLASSIFICATION	0.999825428029198	WITHOUT_CLASSIFICATION	1.745719708019623E-4	IMPLEMENTATION
otherwise we have a non-scalar select with defined collection fetch(es). make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999139909840288	WITHOUT_CLASSIFICATION	8.600901597116185E-5	IMPLEMENTATION
this is not strictly true. we actually just need to make sure that it is ordered by root-entity pk and that that order-by comes before any non-root-entity ordering	WITHOUT_CLASSIFICATION	0.9238812779061796	WITHOUT_CLASSIFICATION	0.07611872209382049	IMPLEMENTATION
paramtranslations = new parametertranslationsimpl( collectedparameterspecifications )	WITHOUT_CLASSIFICATION	0.9999199129809309	WITHOUT_CLASSIFICATION	8.008701906912323E-5	IMPLEMENTATION
we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999954615151823	WITHOUT_CLASSIFICATION	4.538484817693894E-6	IMPLEMENTATION
igndore it	WITHOUT_CLASSIFICATION	0.999986513836677	WITHOUT_CLASSIFICATION	1.3486163322919797E-5	IMPLEMENTATION
we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999946771523086	WITHOUT_CLASSIFICATION	5.322847691284519E-6	IMPLEMENTATION
[jsd] the fix for hhh-558	WITHOUT_CLASSIFICATION	0.9989787465351976	WITHOUT_CLASSIFICATION	0.0010212534648024764	IMPLEMENTATION
if the token can tell us if it could be an identifier	WITHOUT_CLASSIFICATION	0.9999870613556036	WITHOUT_CLASSIFICATION	1.2938644396488463E-5	IMPLEMENTATION
and the expected token type was an identifier then	WITHOUT_CLASSIFICATION	0.9999997762705847	WITHOUT_CLASSIFICATION	2.2372941520889318E-7	IMPLEMENTATION
use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999932672766962	WITHOUT_CLASSIFICATION	6.732723303787559E-6	IMPLEMENTATION
add the token to the ast.	WITHOUT_CLASSIFICATION	0.9999599519126973	WITHOUT_CLASSIFICATION	4.004808730268649E-5	IMPLEMENTATION
(not (eq a b) ) => (ne a b)	WITHOUT_CLASSIFICATION	0.9999897276256468	WITHOUT_CLASSIFICATION	1.0272374353183234E-5	IMPLEMENTATION
(not (ne a b) ) => (eq a b)	WITHOUT_CLASSIFICATION	0.9999897276256468	WITHOUT_CLASSIFICATION	1.0272374353183234E-5	IMPLEMENTATION
(not (lt a b) ) => (ge a b)	WITHOUT_CLASSIFICATION	0.9999897276256468	WITHOUT_CLASSIFICATION	1.0272374353183234E-5	IMPLEMENTATION
(not (ge a b) ) => (lt a b)	WITHOUT_CLASSIFICATION	0.9999897276256468	WITHOUT_CLASSIFICATION	1.0272374353183234E-5	IMPLEMENTATION
(not (le a b) ) => (gt a b)	WITHOUT_CLASSIFICATION	0.9999897276256468	WITHOUT_CLASSIFICATION	1.0272374353183234E-5	IMPLEMENTATION
(not (like a b) ) => (not_like a b)	WITHOUT_CLASSIFICATION	0.9999856791515248	WITHOUT_CLASSIFICATION	1.432084847520928E-5	IMPLEMENTATION
(not (not_like a b) ) => (like a b)	WITHOUT_CLASSIFICATION	0.9999856791515248	WITHOUT_CLASSIFICATION	1.432084847520928E-5	IMPLEMENTATION
(not (is_not_null a b) ) => (is_null a b)	WITHOUT_CLASSIFICATION	0.99998495254566	WITHOUT_CLASSIFICATION	1.5047454340060483E-5	IMPLEMENTATION
(not (between a b) ) => (not_between a b)	WITHOUT_CLASSIFICATION	0.99998495254566	WITHOUT_CLASSIFICATION	1.5047454340060483E-5	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.99970429160255	WITHOUT_CLASSIFICATION	2.957083974499584E-4	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999893498677583	WITHOUT_CLASSIFICATION	1.0650132241714078E-5	IMPLEMENTATION
if if otherwise handle the error normally.	WITHOUT_CLASSIFICATION	0.9986316598991553	WITHOUT_CLASSIFICATION	0.001368340100844758	IMPLEMENTATION
(not (not_between a b) ) => (between a b)	WITHOUT_CLASSIFICATION	0.99998495254566	WITHOUT_CLASSIFICATION	1.5047454340060483E-5	IMPLEMENTATION
this can never happen because this rule will always eliminate the child not.case notreturn x.getfirstchild() (not (not x) ) => (x)	WITHOUT_CLASSIFICATION	0.9999415171272779	WITHOUT_CLASSIFICATION	5.848287272207098E-5	IMPLEMENTATION
just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999837775098172	WITHOUT_CLASSIFICATION	1.622249018288909E-5	IMPLEMENTATION
(eq null b) => (is_null b)	WITHOUT_CLASSIFICATION	0.9999983213942251	WITHOUT_CLASSIFICATION	1.6786057749093922E-6	IMPLEMENTATION
(eq a null) => (is_null a)	WITHOUT_CLASSIFICATION	0.9999952787048498	WITHOUT_CLASSIFICATION	4.7212951502263945E-6	IMPLEMENTATION
note because we're using astutil.createparent() the tree must be created from the bottom up. is empty x => (exists (query (select_from (from x) ) ) )	WITHOUT_CLASSIFICATION	0.9999999034219909	WITHOUT_CLASSIFICATION	9.657800917617287E-8	IMPLEMENTATION
add not if it's negated.	WITHOUT_CLASSIFICATION	0.9981594958666554	WITHOUT_CLASSIFICATION	0.0018405041333445407	IMPLEMENTATION
create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9995635409995057	WITHOUT_CLASSIFICATION	4.3645900049423995E-4	IMPLEMENTATION
case 1 multi token keywords group by and order by the next token ( lt(2) ) should be 'by' otherwise this is just an ident.	WITHOUT_CLASSIFICATION	0.9999905358906531	WITHOUT_CLASSIFICATION	9.464109346846615E-6	IMPLEMENTATION
case 2 the current token is after from and before '.'.	WITHOUT_CLASSIFICATION	0.9999995193003958	WITHOUT_CLASSIFICATION	4.806996042959397E-7	IMPLEMENTATION
this handles hhh-354 where there is a strange property name in a where clause. if the lookahead contains a dot then something that isn't an ident	WITHOUT_CLASSIFICATION	0.9999999808149138	WITHOUT_CLASSIFICATION	1.9185086205608235E-8	IMPLEMENTATION
see if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999999572119699	WITHOUT_CLASSIFICATION	4.278803004031713E-8	IMPLEMENTATION
set it!	WITHOUT_CLASSIFICATION	0.9999938741036701	WITHOUT_CLASSIFICATION	6.125896329870268E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999811696177182	WITHOUT_CLASSIFICATION	1.8830382281842172E-5	IMPLEMENTATION
strip the " where "	WITHOUT_CLASSIFICATION	0.9998898022306654	WITHOUT_CLASSIFICATION	1.1019776933460663E-4	IMPLEMENTATION
don't really know all the codes required to adequately decipher returned jdbc exceptions here. simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9351251755454962	WITHOUT_CLASSIFICATION	0.06487482445450383	IMPLEMENTATION
at the very least cleanup the data )	WITHOUT_CLASSIFICATION	0.9999967552845695	WITHOUT_CLASSIFICATION	3.244715430521366E-6	IMPLEMENTATION
first save off the pertinent ids as the return value	WITHOUT_CLASSIFICATION	0.9999959061380642	WITHOUT_CLASSIFICATION	4.09386193578478E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999958884719069	WITHOUT_CLASSIFICATION	4.111528093087848E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999958884719069	WITHOUT_CLASSIFICATION	4.111528093087848E-6	IMPLEMENTATION
start performing the updates	WITHOUT_CLASSIFICATION	0.9999927268512389	WITHOUT_CLASSIFICATION	7.273148761198996E-6	IMPLEMENTATION
first save off the pertinent ids saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999992370524925	WITHOUT_CLASSIFICATION	7.62947507387787E-7	IMPLEMENTATION
start performing the deletes	WITHOUT_CLASSIFICATION	0.9999930927932128	WITHOUT_CLASSIFICATION	6.907206787202819E-6	IMPLEMENTATION
otherwise everything ok.	WITHOUT_CLASSIFICATION	0.9992188444599466	WITHOUT_CLASSIFICATION	7.811555400533164E-4	IMPLEMENTATION
visit width-first then depth	WITHOUT_CLASSIFICATION	0.9999862643263571	WITHOUT_CLASSIFICATION	1.373567364280771E-5	IMPLEMENTATION
if the types report logical equivalence return true	WITHOUT_CLASSIFICATION	0.9999928344404077	WITHOUT_CLASSIFICATION	7.165559592360744E-6	IMPLEMENTATION
otherwise perform a "deep equivalence" check	WITHOUT_CLASSIFICATION	0.9959355584509798	WITHOUT_CLASSIFICATION	0.004064441549020201	IMPLEMENTATION
if there is no where node make one.	WITHOUT_CLASSIFICATION	0.9999842520441242	WITHOUT_CLASSIFICATION	1.5747955875755925E-5	IMPLEMENTATION
inject the where after the parent	WITHOUT_CLASSIFICATION	0.9998802273313346	WITHOUT_CLASSIFICATION	1.1977266866533215E-4	IMPLEMENTATION
never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999980757846333	WITHOUT_CLASSIFICATION	1.924215366667235E-6	IMPLEMENTATION
moved here from selectclause [jsd]	WITHOUT_CLASSIFICATION	0.9999742469741842	WITHOUT_CLASSIFICATION	2.575302581578637E-5	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999973021147852	WITHOUT_CLASSIFICATION	2.6978852148450322E-6	IMPLEMENTATION
use the table fromelement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999862064508424	WITHOUT_CLASSIFICATION	1.379354915751919E-5	IMPLEMENTATION
set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999987952078963	WITHOUT_CLASSIFICATION	1.2047921036836917E-6	IMPLEMENTATION
if the uresolved property path isn't set yet just use the property name.	WITHOUT_CLASSIFICATION	0.9999363945715625	WITHOUT_CLASSIFICATION	6.360542843761458E-5	IMPLEMENTATION
the 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999806086158858	WITHOUT_CLASSIFICATION	1.939138411424517E-5	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999215043051	WITHOUT_CLASSIFICATION	7.84956949503714E-8	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999215043051	WITHOUT_CLASSIFICATION	7.84956949503714E-8	IMPLEMENTATION
if this dot has already been resolved stop now.	WITHOUT_CLASSIFICATION	0.9999938840028137	WITHOUT_CLASSIFICATION	6.11599718626911E-6	IMPLEMENTATION
if there is no data type for this node and we're at the end of the path (top most dot node) then this might be a java constant.	WITHOUT_CLASSIFICATION	0.9999999258799647	WITHOUT_CLASSIFICATION	7.412003541745816E-8	IMPLEMENTATION
the property is a collection	WITHOUT_CLASSIFICATION	0.9999884063298405	WITHOUT_CLASSIFICATION	1.1593670159378414E-5	IMPLEMENTATION
the property is a component	WITHOUT_CLASSIFICATION	0.9999988980264432	WITHOUT_CLASSIFICATION	1.1019735568844938E-6	IMPLEMENTATION
the property is another class..	WITHOUT_CLASSIFICATION	0.9999915610090643	WITHOUT_CLASSIFICATION	8.438990935694455E-6	IMPLEMENTATION
otherwise this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999090053205899	WITHOUT_CLASSIFICATION	9.099467941010912E-5	IMPLEMENTATION
foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999837551929696	WITHOUT_CLASSIFICATION	1.6244807030414713E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.999677111811247	WITHOUT_CLASSIFICATION	3.228881887530718E-4	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999622914396816	WITHOUT_CLASSIFICATION	3.770856031828315E-5	IMPLEMENTATION
in non-select queries the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999999058593917	WITHOUT_CLASSIFICATION	9.414060825488656E-8	IMPLEMENTATION
this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999810511687504	WITHOUT_CLASSIFICATION	1.8948831249726067E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.999677111811247	WITHOUT_CLASSIFICATION	3.228881887530718E-4	IMPLEMENTATION
even though we might find a pre-existing element by join path we may not be able to reuse it	WITHOUT_CLASSIFICATION	0.9996500911539646	WITHOUT_CLASSIFICATION	3.4990884603532433E-4	IMPLEMENTATION
note addduplicatealias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.999891711485697	WITHOUT_CLASSIFICATION	1.0828851430295639E-4	IMPLEMENTATION
if the from-clauses are the same we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999937116067077	WITHOUT_CLASSIFICATION	6.288393292290167E-6	IMPLEMENTATION
again null != null here	WITHOUT_CLASSIFICATION	0.9999928426296485	WITHOUT_CLASSIFICATION	7.157370351598691E-6	IMPLEMENTATION
if this is an implied join in a from element then use the impled join type which is part of the tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999999996986464	WITHOUT_CLASSIFICATION	3.0135350580298884E-10	IMPLEMENTATION
otherwise (subquery case) dont reuse the fromelement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999946853831485	WITHOUT_CLASSIFICATION	5.314616851473974E-6	IMPLEMENTATION
we know only the lhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9992512459973417	WITHOUT_CLASSIFICATION	7.487540026582118E-4	IMPLEMENTATION
the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999719515526081	WITHOUT_CLASSIFICATION	2.8048447391946064E-5	IMPLEMENTATION
only the identifier property field name can be a reference to the associated entity's pk	WITHOUT_CLASSIFICATION	0.9999982703269188	WITHOUT_CLASSIFICATION	1.7296730812635943E-6	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9992525329903805	WITHOUT_CLASSIFICATION	7.47467009619492E-4	IMPLEMENTATION
append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9997246942186993	WITHOUT_CLASSIFICATION	2.753057813008051E-4	IMPLEMENTATION
if the lhs is a collection use collectionpropertymapping	WITHOUT_CLASSIFICATION	0.9999943097485108	WITHOUT_CLASSIFICATION	5.6902514892587144E-6	IMPLEMENTATION
tell the destination fromelement to 'includesubclasses'.	WITHOUT_CLASSIFICATION	0.9998823223704961	WITHOUT_CLASSIFICATION	1.1767762950383242E-4	IMPLEMENTATION
use theta style (for regression) move the node up after the origin node.	WITHOUT_CLASSIFICATION	0.998343688242163	WITHOUT_CLASSIFICATION	0.0016563117578369377	IMPLEMENTATION
don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999469063746208	WITHOUT_CLASSIFICATION	5.309362537917842E-5	IMPLEMENTATION
for expected parameter type injection we expect that the lhs represents some form of property ref and that the children of the in-list represent one-or-more params.	WITHOUT_CLASSIFICATION	0.9999926444913118	WITHOUT_CLASSIFICATION	7.3555086882458686E-6	IMPLEMENTATION
we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999903948331268	WITHOUT_CLASSIFICATION	9.605166873262841E-6	IMPLEMENTATION
we have something like "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9996030508947966	WITHOUT_CLASSIFICATION	3.969491052033103E-4	IMPLEMENTATION
we have something like "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9996030508947966	WITHOUT_CLASSIFICATION	3.969491052033103E-4	IMPLEMENTATION
we know only the rhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9992512459973417	WITHOUT_CLASSIFICATION	7.487540026582118E-4	IMPLEMENTATION
handle the (assumed) valid cases #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9971135075021398	WITHOUT_CLASSIFICATION	0.0028864924978602127	IMPLEMENTATION
one or the other needs to be a datetime for us to get into this method in the first place	WITHOUT_CLASSIFICATION	0.9999820060480887	WITHOUT_CLASSIFICATION	1.799395191125766E-5	IMPLEMENTATION
#3 - note that this is also true of "datetime - param"	WITHOUT_CLASSIFICATION	0.999990218434154	WITHOUT_CLASSIFICATION	9.781565845927384E-6	IMPLEMENTATION
#2	WITHOUT_CLASSIFICATION	0.9999843247446223	WITHOUT_CLASSIFICATION	1.5675255377717815E-5	IMPLEMENTATION
generate the inner join -- the elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999937449397776	WITHOUT_CLASSIFICATION	6.255060222466103E-6	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999849857251152	WITHOUT_CLASSIFICATION	1.5014274884887353E-5	IMPLEMENTATION
the 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.999994931851941	WITHOUT_CLASSIFICATION	5.06814805898983E-6	IMPLEMENTATION
add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9993264412926208	WITHOUT_CLASSIFICATION	6.73558707379175E-4	IMPLEMENTATION
sometimes use the element table alias sometimes use the umm collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.999970785416605	WITHOUT_CLASSIFICATION	2.921458339498655E-5	IMPLEMENTATION
now set the text for this node. it should be the element columns.	WITHOUT_CLASSIFICATION	0.9999744206370983	WITHOUT_CLASSIFICATION	2.5579362901800875E-5	IMPLEMENTATION
get the function return value type based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999672372789763	WITHOUT_CLASSIFICATION	3.2762721023755643E-5	IMPLEMENTATION
this will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999230002321389	WITHOUT_CLASSIFICATION	7.699976786120025E-5	IMPLEMENTATION
mutation depends on the types of nodes invloved	WITHOUT_CLASSIFICATION	0.9995631485068659	WITHOUT_CLASSIFICATION	4.3685149313403424E-4	IMPLEMENTATION
"pass along" our initial embedded parameter node(s) to the first generated sql fragment so that it can be handled later for parameter binding	WITHOUT_CLASSIFICATION	0.9999988484007001	WITHOUT_CLASSIFICATION	1.151599299991607E-6	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999559135195801	WITHOUT_CLASSIFICATION	4.4086480419848E-5	IMPLEMENTATION
generated select expressions are already resolved nothing to do.	WITHOUT_CLASSIFICATION	0.9999988733708335	WITHOUT_CLASSIFICATION	1.1266291664328445E-6	IMPLEMENTATION
the path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999995171744216	WITHOUT_CLASSIFICATION	4.828255784921724E-7	IMPLEMENTATION
the hql class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999941028790055	WITHOUT_CLASSIFICATION	5.897120994501855E-6	IMPLEMENTATION
associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9998908905026165	WITHOUT_CLASSIFICATION	1.0910949738350994E-4	IMPLEMENTATION
try the parent fromclause	WITHOUT_CLASSIFICATION	0.9999633698492048	WITHOUT_CLASSIFICATION	3.663015079523818E-5	IMPLEMENTATION
add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999608476752331	WITHOUT_CLASSIFICATION	3.915232476697915E-5	IMPLEMENTATION
make sure that all from elements registered with this from clause are actually in the ast.	WITHOUT_CLASSIFICATION	0.9999916961856389	WITHOUT_CLASSIFICATION	8.303814361062236E-6	IMPLEMENTATION
invoke setscalarcolumntext on each constructor argument.	WITHOUT_CLASSIFICATION	0.999441013584979	WITHOUT_CLASSIFICATION	5.589864150209084E-4	IMPLEMENTATION
collect the select expressions skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999989404450529	WITHOUT_CLASSIFICATION	1.0595549472038005E-6	IMPLEMENTATION
return an empty type array	WITHOUT_CLASSIFICATION	0.9999465752163348	WITHOUT_CLASSIFICATION	5.342478366529602E-5	IMPLEMENTATION
constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999860715168122	WITHOUT_CLASSIFICATION	1.3928483187732714E-5	IMPLEMENTATION
this is the exception returned by reflecthelper.getconstructor() if it cannot locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999997648562519	WITHOUT_CLASSIFICATION	2.3514374804636623E-7	IMPLEMENTATION
if there is no order by make one	WITHOUT_CLASSIFICATION	0.9999964466026634	WITHOUT_CLASSIFICATION	3.5533973366396007E-6	IMPLEMENTATION
find the where if there is no where find the from	WITHOUT_CLASSIFICATION	0.9999996384543803	WITHOUT_CLASSIFICATION	3.615456196635663E-7	IMPLEMENTATION
now inject the newly built order by into the tree	WITHOUT_CLASSIFICATION	0.9999859400585008	WITHOUT_CLASSIFICATION	1.4059941499060807E-5	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999583269415074	WITHOUT_CLASSIFICATION	4.1673058492648813E-5	IMPLEMENTATION
logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999559579381543	WITHOUT_CLASSIFICATION	4.404206184562271E-5	IMPLEMENTATION
render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999947209470955	WITHOUT_CLASSIFICATION	5.279052904515923E-6	IMPLEMENTATION
class names in the from clause result in a joinsequence (the old fromparser does this).	WITHOUT_CLASSIFICATION	0.9999999976214915	WITHOUT_CLASSIFICATION	2.3785084911393507E-9	IMPLEMENTATION
for many-to-many joins use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999987149990767	WITHOUT_CLASSIFICATION	1.285000923401942E-6	IMPLEMENTATION
otherwise use the property mapping.	WITHOUT_CLASSIFICATION	0.9993592882201496	WITHOUT_CLASSIFICATION	6.407117798502658E-4	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9998793756804204	WITHOUT_CLASSIFICATION	1.20624319579628E-4	IMPLEMENTATION
if the property is a special collection property name return a collectionpropertymapping.	WITHOUT_CLASSIFICATION	0.9999988162272425	WITHOUT_CLASSIFICATION	1.1837727574607554E-6	IMPLEMENTATION
collection of components.	WITHOUT_CLASSIFICATION	0.9999651440941254	WITHOUT_CLASSIFICATION	3.485590587459325E-5	IMPLEMENTATION
make sure the lhs is "assignable"	WITHOUT_CLASSIFICATION	0.9999517279106508	WITHOUT_CLASSIFICATION	4.8272089349166976E-5	IMPLEMENTATION
false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9976928803800861	WITHOUT_CLASSIFICATION	0.0023071196199139295	IMPLEMENTATION
register the fromelement with the from clause now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9995989966427372	WITHOUT_CLASSIFICATION	4.010033572628281E-4	IMPLEMENTATION
currently allowed	WITHOUT_CLASSIFICATION	0.999951448555629	WITHOUT_CLASSIFICATION	4.855144437106957E-5	IMPLEMENTATION
hhh-276 implied joins in a subselect where clause - the destination needs to be added to the destination's from clause. not sure if this is will fix everything but it works.	WITHOUT_CLASSIFICATION	0.9999488434741279	WITHOUT_CLASSIFICATION	5.11565258719887E-5	IMPLEMENTATION
return classalias == null ? classname classalias	WITHOUT_CLASSIFICATION	0.9999807576670375	WITHOUT_CLASSIFICATION	1.9242332962502692E-5	IMPLEMENTATION
this is an explicit from element.	WITHOUT_CLASSIFICATION	0.9999921602094729	WITHOUT_CLASSIFICATION	7.839790527109721E-6	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999583269415074	WITHOUT_CLASSIFICATION	4.1673058492648813E-5	IMPLEMENTATION
fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999554593904108	WITHOUT_CLASSIFICATION	4.4540609589198154E-5	IMPLEMENTATION
if it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9970504278022687	WITHOUT_CLASSIFICATION	0.002949572197731192	IMPLEMENTATION
since this is an explicit from element it can't be implied in the from clause.	WITHOUT_CLASSIFICATION	0.9999999665220096	WITHOUT_CLASSIFICATION	3.347799045414522E-8	IMPLEMENTATION
do nothing eplicit from elements are always in the projection list.	WITHOUT_CLASSIFICATION	0.9999997832357825	WITHOUT_CLASSIFICATION	2.1676421745341257E-7	IMPLEMENTATION
propertyname refers to something like collection.size	WITHOUT_CLASSIFICATION	0.9993106287434708	WITHOUT_CLASSIFICATION	6.893712565291915E-4	IMPLEMENTATION
property name is a sub-path of a component	WITHOUT_CLASSIFICATION	0.9999991674686345	WITHOUT_CLASSIFICATION	8.325313654336145E-7	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999622914396816	WITHOUT_CLASSIFICATION	3.770856031828315E-5	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999975844279766	WITHOUT_CLASSIFICATION	2.4155720233096855E-6	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999559135195801	WITHOUT_CLASSIFICATION	4.4086480419848E-5	IMPLEMENTATION
dotnode uses null here	WITHOUT_CLASSIFICATION	0.999975811220104	WITHOUT_CLASSIFICATION	2.4188779896036975E-5	IMPLEMENTATION
we represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999859078719312	WITHOUT_CLASSIFICATION	1.4092128068669398E-5	IMPLEMENTATION
we are the lhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999944071813928	WITHOUT_CLASSIFICATION	5.59281860734364E-6	IMPLEMENTATION
we are the rhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999943887868825	WITHOUT_CLASSIFICATION	5.6112131174066146E-6	IMPLEMENTATION
we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.999977932376978	WITHOUT_CLASSIFICATION	2.206762302206035E-5	IMPLEMENTATION
early exit!!! return so the resolve call explicitly coming from dotnode can resolve this	WITHOUT_CLASSIFICATION	0.9999891700078144	WITHOUT_CLASSIFICATION	1.082999218566793E-5	IMPLEMENTATION
assume this ident's text does not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9923355740894332	WITHOUT_CLASSIFICATION	0.007664425910566755	IMPLEMENTATION
just ignore it for now it'll get resolved later	WITHOUT_CLASSIFICATION	0.9999980707674679	WITHOUT_CLASSIFICATION	1.929232532115609E-6	IMPLEMENTATION
this is not actually a constant but a reference to from element.	WITHOUT_CLASSIFICATION	0.9998589882599674	WITHOUT_CLASSIFICATION	1.410117400326248E-4	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.999994128793667	WITHOUT_CLASSIFICATION	5.871206333046194E-6	IMPLEMENTATION
these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9981373500639811	WITHOUT_CLASSIFICATION	0.0018626499360188517	IMPLEMENTATION
used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999802579917474	WITHOUT_CLASSIFICATION	1.9742008252565134E-5	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.951553303654134	WITHOUT_CLASSIFICATION	0.04844669634586593	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.951553303654134	WITHOUT_CLASSIFICATION	0.04844669634586593	IMPLEMENTATION
naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999999385737095	WITHOUT_CLASSIFICATION	6.142629054951017E-8	IMPLEMENTATION
this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9925816118601044	WITHOUT_CLASSIFICATION	0.007418388139895566	IMPLEMENTATION
do not over-write the column text as that has already been "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9906718196802345	WITHOUT_CLASSIFICATION	0.009328180319765372	IMPLEMENTATION
for some reason the antlr.commonast initialization routines force this method to get called twice. the first time with an empty string	WITHOUT_CLASSIFICATION	0.9999394729689448	WITHOUT_CLASSIFICATION	6.0527031055188794E-5	IMPLEMENTATION
look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999987441720792	WITHOUT_CLASSIFICATION	1.2558279208228217E-6	IMPLEMENTATION
add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999741026745661	WITHOUT_CLASSIFICATION	2.5897325433843762E-5	IMPLEMENTATION
if the from element isn't in the same clause create a new from element.	WITHOUT_CLASSIFICATION	0.9999994892055698	WITHOUT_CLASSIFICATION	5.107944301102953E-7	IMPLEMENTATION
this is the root level node. generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999887848171657	WITHOUT_CLASSIFICATION	1.1215182834307493E-5	IMPLEMENTATION
correlated subqueries create 'special' implied from nodes because correlated subselects can't use an ansi-style join	WITHOUT_CLASSIFICATION	0.9999943702880351	WITHOUT_CLASSIFICATION	5.629711964883308E-6	IMPLEMENTATION
super-duper-classic-parser-regression-testing-mojo-magic	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
a collection of entities	WITHOUT_CLASSIFICATION	0.9999718414262914	WITHOUT_CLASSIFICATION	2.815857370861821E-5	IMPLEMENTATION
a collection of components	WITHOUT_CLASSIFICATION	0.9999834921423314	WITHOUT_CLASSIFICATION	1.650785766850219E-5	IMPLEMENTATION
a collection of scalar elements	WITHOUT_CLASSIFICATION	0.9999867712381652	WITHOUT_CLASSIFICATION	1.3228761834863365E-5	IMPLEMENTATION
according to both the ansi-sql and ejb3 specs trim can either take exactly one parameter or a variable number of parameters between 1 and 4. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if only <trim specification> is omitted both is assumed if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.999999998921994	WITHOUT_CLASSIFICATION	1.0780060571909438E-9	IMPLEMENTATION
don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999953688015503	WITHOUT_CLASSIFICATION	4.631198449710656E-6	IMPLEMENTATION
treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999969165221656	WITHOUT_CLASSIFICATION	3.08347783442898E-6	IMPLEMENTATION
( implied && dotnode.usethetastyleimplicitjoins ) ) {	WITHOUT_CLASSIFICATION	0.9999364848824488	WITHOUT_CLASSIFICATION	6.351511755122357E-5	IMPLEMENTATION
the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.999802109261654	WITHOUT_CLASSIFICATION	1.9789073834604854E-4	IMPLEMENTATION
create the from element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999998765252863	WITHOUT_CLASSIFICATION	1.2347471373909133E-7	IMPLEMENTATION
if the join is implied then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999975398811247	WITHOUT_CLASSIFICATION	2.4601188752953434E-6	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
the associated entity is implied but it must be included in the from. the collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999997719931365	WITHOUT_CLASSIFICATION	2.280068635936647E-7	IMPLEMENTATION
tag this node as a join. don't include subclasses in the join. this is a clollection join.	WITHOUT_CLASSIFICATION	0.9999990276193549	WITHOUT_CLASSIFICATION	9.723806451518057E-7	IMPLEMENTATION
get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999993909478112	WITHOUT_CLASSIFICATION	6.090521888029167E-7	IMPLEMENTATION
origin path implied columns classalias	WITHOUT_CLASSIFICATION	0.999963719094157	WITHOUT_CLASSIFICATION	3.6280905842887934E-5	IMPLEMENTATION
implied	WITHOUT_CLASSIFICATION	0.9999838437839148	WITHOUT_CLASSIFICATION	1.615621608512128E-5	IMPLEMENTATION
for implied many-to-many just add the end join.	WITHOUT_CLASSIFICATION	0.9999617869487483	WITHOUT_CLASSIFICATION	3.821305125174673E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737720381164	WITHOUT_CLASSIFICATION	2.622796188358804E-5	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999993146776852	WITHOUT_CLASSIFICATION	6.853223149060563E-7	IMPLEMENTATION
this causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999520217073831	WITHOUT_CLASSIFICATION	4.797829261693124E-5	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9999928593581491	WITHOUT_CLASSIFICATION	7.140641850878447E-6	IMPLEMENTATION
frontbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999992347278588	WITHOUT_CLASSIFICATION	7.652721412411285E-7	IMPLEMENTATION
the types represented in the sql result set. @return the types represented in the sql result set.	WITHOUT_CLASSIFICATION	0.9999976535179609	WITHOUT_CLASSIFICATION	2.346482039096187E-6	IMPLEMENTATION
public type[] getsqlresulttypes() {return sqlresulttypes}	WITHOUT_CLASSIFICATION	0.9999918830533007	WITHOUT_CLASSIFICATION	8.116946699303135E-6	IMPLEMENTATION
first collect all of the select expressions. note this must be done before invoking setscalarcolumntext() because setscalarcolumntext() changes the ast!!!	WITHOUT_CLASSIFICATION	0.9999931551447184	WITHOUT_CLASSIFICATION	6.8448552816839674E-6	IMPLEMENTATION
first allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9985228405368455	WITHOUT_CLASSIFICATION	0.0014771594631545978	IMPLEMENTATION
sqlresulttypelist.addall( constructorargumenttypelist )	WITHOUT_CLASSIFICATION	0.9999354420963775	WITHOUT_CLASSIFICATION	6.455790362247926E-5	IMPLEMENTATION
if the data type is not an association type it could not have been in the from clause.	WITHOUT_CLASSIFICATION	0.9999990209236259	WITHOUT_CLASSIFICATION	9.790763740933042E-7	IMPLEMENTATION
sqlresulttypelist.add( type )	WITHOUT_CLASSIFICATION	0.9999600549740463	WITHOUT_CLASSIFICATION	3.994502595368932E-5	IMPLEMENTATION
always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.99946247795316	WITHOUT_CLASSIFICATION	5.375220468401143E-4	IMPLEMENTATION
add the fetched entities	WITHOUT_CLASSIFICATION	0.9999743653246173	WITHOUT_CLASSIFICATION	2.5634675382723247E-5	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999750529674551	WITHOUT_CLASSIFICATION	2.4947032544941507E-5	IMPLEMENTATION
function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993827393443568	WITHOUT_CLASSIFICATION	6.17260655643266E-4	IMPLEMENTATION
if there are any scalars (non-entities) selected render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999996936870594	WITHOUT_CLASSIFICATION	3.063129405030532E-7	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
arraylist sqlresulttypelist	WITHOUT_CLASSIFICATION	0.99997113351476	WITHOUT_CLASSIFICATION	2.886648524008205E-5	IMPLEMENTATION
sqlresulttypes = ( type[] ) sqlresulttypelist.toarray( new type[sqlresulttypelist.size()] )	WITHOUT_CLASSIFICATION	0.9999612701844917	WITHOUT_CLASSIFICATION	3.872981550831998E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993545901703398	WITHOUT_CLASSIFICATION	6.454098296601067E-4	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.7955980071111416	WITHOUT_CLASSIFICATION	0.20440199288885846	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999889585716384	WITHOUT_CLASSIFICATION	1.1041428361490611E-5	IMPLEMENTATION
generate an 2d array of column names the first dimension is parallel with the return types array. the second dimension is the list of column names for each type.	WITHOUT_CLASSIFICATION	0.9999995817714811	WITHOUT_CLASSIFICATION	4.182285189816003E-7	IMPLEMENTATION
generate the select expression.	WITHOUT_CLASSIFICATION	0.9999898655485985	WITHOUT_CLASSIFICATION	1.0134451401506008E-5	IMPLEMENTATION
union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9992473376000784	WITHOUT_CLASSIFICATION	7.526623999216297E-4	IMPLEMENTATION
skip 'distinct' and 'all' so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999052703995697	WITHOUT_CLASSIFICATION	9.472960043031336E-5	IMPLEMENTATION
create sql_token nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999918488905336	WITHOUT_CLASSIFICATION	8.151109466478664E-6	IMPLEMENTATION
generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999906017169046	WITHOUT_CLASSIFICATION	9.39828309535255E-6	IMPLEMENTATION
get the function name node.	WITHOUT_CLASSIFICATION	0.999991792433658	WITHOUT_CLASSIFICATION	8.207566342007434E-6	IMPLEMENTATION
method expressions in a select should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999979396970113	WITHOUT_CLASSIFICATION	2.0603029885904966E-6	IMPLEMENTATION
if this is 'elements' then create a new from element.	WITHOUT_CLASSIFICATION	0.9999991538011349	WITHOUT_CLASSIFICATION	8.461988650911388E-7	IMPLEMENTATION
not elements(x)	WITHOUT_CLASSIFICATION	0.9970778657496102	WITHOUT_CLASSIFICATION	0.0029221342503898766	IMPLEMENTATION
dialect function	WITHOUT_CLASSIFICATION	0.9999702429535569	WITHOUT_CLASSIFICATION	2.9757046443041964E-5	IMPLEMENTATION
collection 'property function'	WITHOUT_CLASSIFICATION	0.9999367683252409	WITHOUT_CLASSIFICATION	6.323167475907621E-5	IMPLEMENTATION
if the constant is an ident figure out what it means	WITHOUT_CLASSIFICATION	0.9999761349953286	WITHOUT_CLASSIFICATION	2.3865004671423868E-5	IMPLEMENTATION
ident is a class alias in the from.	WITHOUT_CLASSIFICATION	0.9999991527877692	WITHOUT_CLASSIFICATION	8.4721223083902E-7	IMPLEMENTATION
resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999815586565568	WITHOUT_CLASSIFICATION	1.8441343443190972E-5	IMPLEMENTATION
otherwise it's a literal.	WITHOUT_CLASSIFICATION	0.9988942726541956	WITHOUT_CLASSIFICATION	0.0011057273458042925	IMPLEMENTATION
the name of an entity class	WITHOUT_CLASSIFICATION	0.9999995613153805	WITHOUT_CLASSIFICATION	4.386846194635424E-7	IMPLEMENTATION
the class discriminator value	WITHOUT_CLASSIFICATION	0.9999918416224183	WITHOUT_CLASSIFICATION	8.158377581669843E-6	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999910357591837	WITHOUT_CLASSIFICATION	8.964240816326828E-6	IMPLEMENTATION
add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999978486299553	WITHOUT_CLASSIFICATION	2.151370044748308E-6	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9998479811301771	WITHOUT_CLASSIFICATION	1.5201886982286927E-4	IMPLEMENTATION
child == parent.getfirstchild()	WITHOUT_CLASSIFICATION	0.9997789031186584	WITHOUT_CLASSIFICATION	2.210968813416385E-4	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9998479811301771	WITHOUT_CLASSIFICATION	1.5201886982286927E-4	IMPLEMENTATION
filter conditions need to be inserted before the hql where condition and the theta join node. this is because org.hibernate.loader.loader binds the filter parameters first then it binds all the hql query parameters see org.hibernate.loader.loader.processfilterparameters().	WITHOUT_CLASSIFICATION	0.9998453517055591	WITHOUT_CLASSIFICATION	1.5464829444089212E-4	IMPLEMENTATION
put the filters node before the hql condition and theta joins	WITHOUT_CLASSIFICATION	0.9998325090997566	WITHOUT_CLASSIFICATION	1.6749090024340034E-4	IMPLEMENTATION
add the current fragment to the filters node	WITHOUT_CLASSIFICATION	0.999909028516712	WITHOUT_CLASSIFICATION	9.097148328791142E-5	IMPLEMENTATION
create a new theta_joins node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999841487178336	WITHOUT_CLASSIFICATION	1.5851282166492257E-5	IMPLEMENTATION
put the theta_joins node before the hql condition after the filters.	WITHOUT_CLASSIFICATION	0.9998572693293137	WITHOUT_CLASSIFICATION	1.4273067068626367E-4	IMPLEMENTATION
add the current fragment to the theta_joins node	WITHOUT_CLASSIFICATION	0.9999072040972454	WITHOUT_CLASSIFICATION	9.279590275463791E-5	IMPLEMENTATION
first try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999976043268552	WITHOUT_CLASSIFICATION	2.3956731448535316E-6	IMPLEMENTATION
unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999707265958232	WITHOUT_CLASSIFICATION	2.9273404176782946E-5	IMPLEMENTATION
if that didn't work try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999961857405596	WITHOUT_CLASSIFICATION	3.8142594403955346E-6	IMPLEMENTATION
implicit joins use theta style (where pk = fk) explicit joins use join (after from)	WITHOUT_CLASSIFICATION	0.9995826955836196	WITHOUT_CLASSIFICATION	4.1730441638037795E-4	IMPLEMENTATION
locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999930741189927	WITHOUT_CLASSIFICATION	6.925881007269936E-6	IMPLEMENTATION
determine the type of the first argument	WITHOUT_CLASSIFICATION	0.9999996336312493	WITHOUT_CLASSIFICATION	3.663687506940207E-7	IMPLEMENTATION
use the dot node to emit the first column name. create the column names folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999005354893945	WITHOUT_CLASSIFICATION	9.946451060551872E-5	IMPLEMENTATION
note this simply constructs a "raw" sql_token representing the where fragment and injects this into the tree. this "works" however it is probably not the best long-term solution. at some point we probably want to apply an additional grammar to properly tokenize this where fragment into constituent parts focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.8051183759227307	WITHOUT_CLASSIFICATION	0.19488162407726933	IMPLEMENTATION
append the text of the current node.	WITHOUT_CLASSIFICATION	0.9996162866525781	WITHOUT_CLASSIFICATION	3.8371334742188915E-4	IMPLEMENTATION
if the node has a first child recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999978214161972	WITHOUT_CLASSIFICATION	2.17858380272643E-6	IMPLEMENTATION
if there is a second child (rhs) recurse into that child.	WITHOUT_CLASSIFICATION	0.9999991436700549	WITHOUT_CLASSIFICATION	8.563299449615775E-7	IMPLEMENTATION
iterate through the aliasjoinsequence pairs and generate sql token nodes.	WITHOUT_CLASSIFICATION	0.9999960853663621	WITHOUT_CLASSIFICATION	3.914633637948026E-6	IMPLEMENTATION
if the from element represents a join_fragment and it is a theta-style join convert its type from join_fragment to from_fragment	WITHOUT_CLASSIFICATION	0.9999995642388525	WITHOUT_CLASSIFICATION	4.357611475111994E-7	IMPLEMENTATION
this is used during sqlgenerator processing	WITHOUT_CLASSIFICATION	0.9999929496808616	WITHOUT_CLASSIFICATION	7.050319138381721E-6	IMPLEMENTATION
if there is a from fragment and the from element is an explicit then add the from part.	WITHOUT_CLASSIFICATION	0.9999999935507898	WITHOUT_CLASSIFICATION	6.44921021170436E-9	IMPLEMENTATION
&& stringhelper.isnotempty( frag )	WITHOUT_CLASSIFICATION	0.9999362393647703	WITHOUT_CLASSIFICATION	6.376063522976896E-5	IMPLEMENTATION
the from fragment will probably begin with ' '. remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999998145029582	WITHOUT_CLASSIFICATION	1.8549704173924655E-7	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9999128201080082	WITHOUT_CLASSIFICATION	8.717989199184692E-5	IMPLEMENTATION
select p from p in class eg.person order by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999999057652926	WITHOUT_CLASSIFICATION	9.423470735356588E-8	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.999999284269623	WITHOUT_CLASSIFICATION	7.157303770002255E-7	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.999997201042732	WITHOUT_CLASSIFICATION	2.7989572679844843E-6	IMPLEMENTATION
default mode	WITHOUT_CLASSIFICATION	0.9999844065671106	WITHOUT_CLASSIFICATION	1.5593432889370066E-5	IMPLEMENTATION
queryjoinfragment join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9999444951991067	WITHOUT_CLASSIFICATION	5.550480089328743E-5	IMPLEMENTATION
reset the dotcount (but not the path) after reset!	WITHOUT_CLASSIFICATION	0.9966632895343043	WITHOUT_CLASSIFICATION	0.0033367104656957373	IMPLEMENTATION
after reset!	WITHOUT_CLASSIFICATION	0.999958875562337	WITHOUT_CLASSIFICATION	4.1124437662947273E-5	IMPLEMENTATION
we don't need to worry about any condition in the on clause here (tofromfragmentstring) since anything in the on condition is already applied to the whole query	WITHOUT_CLASSIFICATION	0.99986702208017	WITHOUT_CLASSIFICATION	1.3297791982999976E-4	IMPLEMENTATION
bit_length feels a bit broken to me. we have to cast to char in order to pass when a numeric value is supplied. but of course the answers given will be wildly different for these two datatypes. 1234.5678 will be 9 bytes as a char string but will be 8 or 16 bytes as a true numeric. jay nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999999999693518	WITHOUT_CLASSIFICATION	3.0648103505756504E-11	IMPLEMENTATION
dotcount>=2	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
do the corresponding rhs	WITHOUT_CLASSIFICATION	0.9999149411356365	WITHOUT_CLASSIFICATION	8.505886436349657E-5	IMPLEMENTATION
if its "id"	WITHOUT_CLASSIFICATION	0.9999951678525709	WITHOUT_CLASSIFICATION	4.832147429078832E-6	IMPLEMENTATION
or its the id property name	WITHOUT_CLASSIFICATION	0.9999640126348873	WITHOUT_CLASSIFICATION	3.598736511262065E-5	IMPLEMENTATION
join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9999444951991067	WITHOUT_CLASSIFICATION	5.550480089328743E-5	IMPLEMENTATION
important!!	WITHOUT_CLASSIFICATION	0.9999607713766688	WITHOUT_CLASSIFICATION	3.922862333103672E-5	IMPLEMENTATION
string[] keycols = collpersister.getkeycolumnnames()	WITHOUT_CLASSIFICATION	0.9999334370972401	WITHOUT_CLASSIFICATION	6.656290275989846E-5	IMPLEMENTATION
an association	WITHOUT_CLASSIFICATION	0.9999945876110683	WITHOUT_CLASSIFICATION	5.4123889317873855E-6	IMPLEMENTATION
allow index() function	WITHOUT_CLASSIFICATION	0.9998879758372953	WITHOUT_CLASSIFICATION	1.120241627046647E-4	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9935868288306934	WITHOUT_CLASSIFICATION	0.006413171169306528	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.999999284269623	WITHOUT_CLASSIFICATION	7.157303770002255E-7	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
collections of values	WITHOUT_CLASSIFICATION	0.9999968273875853	WITHOUT_CLASSIFICATION	3.17261241462998E-6	IMPLEMENTATION
opening paren in new foo ( )	WITHOUT_CLASSIFICATION	0.9999981636616461	WITHOUT_CLASSIFICATION	1.8363383538093281E-6	IMPLEMENTATION
if we are inside a new result() but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999950998098766	WITHOUT_CLASSIFICATION	4.90019012344036E-6	IMPLEMENTATION
special case	WITHOUT_CLASSIFICATION	0.9999731671036591	WITHOUT_CLASSIFICATION	2.683289634089814E-5	IMPLEMENTATION
the name of an sql function	WITHOUT_CLASSIFICATION	0.9999995795335885	WITHOUT_CLASSIFICATION	4.204664115203384E-7	IMPLEMENTATION
null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999974869979809	WITHOUT_CLASSIFICATION	2.5130020191004383E-6	IMPLEMENTATION
this is basically a copy/paste of orderbyparser might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999954487808717	WITHOUT_CLASSIFICATION	4.551219128352654E-6	IMPLEMENTATION
select p from p in class eg.person group by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999998173556032	WITHOUT_CLASSIFICATION	1.8264439690579785E-7	IMPLEMENTATION
return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999242085235531	WITHOUT_CLASSIFICATION	7.579147644685137E-5	IMPLEMENTATION
register collection role	WITHOUT_CLASSIFICATION	0.9998417381202521	WITHOUT_CLASSIFICATION	1.5826187974785308E-4	IMPLEMENTATION
the keyword used to specify an identity column if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999983954589043	WITHOUT_CLASSIFICATION	1.6045410957224301E-6	IMPLEMENTATION
.getelementpropertymapping()	WITHOUT_CLASSIFICATION	0.9999708393820069	WITHOUT_CLASSIFICATION	2.9160617993068806E-5	IMPLEMENTATION
crossjoins.add(name)	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
ie no select clause in hql	WITHOUT_CLASSIFICATION	0.9999971417337024	WITHOUT_CLASSIFICATION	2.8582662977248267E-6	IMPLEMENTATION
initialize the set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999940340898321	WITHOUT_CLASSIFICATION	5.9659101678991476E-6	IMPLEMENTATION
ie. no select clause	WITHOUT_CLASSIFICATION	0.9999694806074784	WITHOUT_CLASSIFICATION	3.0519392521695876E-5	IMPLEMENTATION
there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999878937781598	WITHOUT_CLASSIFICATION	1.2106221840287075E-5	IMPLEMENTATION
return the concrete type or the underlying type if a concrete type was not specified	WITHOUT_CLASSIFICATION	0.9999974966965284	WITHOUT_CLASSIFICATION	2.5033034715006285E-6	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
q.addcollection(collectionname collectionrole)	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9924424826325629	WITHOUT_CLASSIFICATION	0.007557517367437149	IMPLEMENTATION
can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999483520343821	WITHOUT_CLASSIFICATION	5.1647965617904364E-5	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9996207606044493	WITHOUT_CLASSIFICATION	3.792393955506819E-4	IMPLEMENTATION
this is the legacy behaviour for hql queries	WITHOUT_CLASSIFICATION	0.9999928269979103	WITHOUT_CLASSIFICATION	7.17300208980754E-6	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9987879650298702	WITHOUT_CLASSIFICATION	0.0012120349701298483	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9987879650298702	WITHOUT_CLASSIFICATION	0.0012120349701298483	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces early exit!!!!	WITHOUT_CLASSIFICATION	0.9999979579984039	WITHOUT_CLASSIFICATION	2.042001596136825E-6	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9987879650298702	WITHOUT_CLASSIFICATION	0.0012120349701298483	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9987879650298702	WITHOUT_CLASSIFICATION	0.0012120349701298483	IMPLEMENTATION
need this since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.999487605322024	WITHOUT_CLASSIFICATION	5.123946779759412E-4	IMPLEMENTATION
tokens that close a sub expression tokens that open a sub expression tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9998802232190671	WITHOUT_CLASSIFICATION	1.197767809328941E-4	IMPLEMENTATION
expressionterminators.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999578466674219	WITHOUT_CLASSIFICATION	4.215333257805711E-5	IMPLEMENTATION
expressionopeners.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999578466674219	WITHOUT_CLASSIFICATION	4.215333257805711E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource) early exit!!!!	WITHOUT_CLASSIFICATION	0.9999135581180062	WITHOUT_CLASSIFICATION	8.644188199387067E-5	IMPLEMENTATION
otherwise a trim-specification and/or a trim-character have been specified we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character (what is to be trimmed off?) the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9988647099253933	WITHOUT_CLASSIFICATION	0.0011352900746066548	IMPLEMENTATION
inside a between and expression	WITHOUT_CLASSIFICATION	0.9998944225834908	WITHOUT_CLASSIFICATION	1.0557741650923808E-4	IMPLEMENTATION
were an odd or even number of nots encountered the join string built up by compound paths inside this expression a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999999645326509	WITHOUT_CLASSIFICATION	3.5467348998701655E-8	IMPLEMENTATION
ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999679831271653	WITHOUT_CLASSIFICATION	3.201687283476879E-5	IMPLEMENTATION
cope with []	WITHOUT_CLASSIFICATION	0.9999412542461261	WITHOUT_CLASSIFICATION	5.874575387387995E-5	IMPLEMENTATION
cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.999186918677194	WITHOUT_CLASSIFICATION	8.130813228060647E-4	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999896628590887	WITHOUT_CLASSIFICATION	1.0337140911316296E-5	IMPLEMENTATION
cope with a subselect	WITHOUT_CLASSIFICATION	0.9999512673945394	WITHOUT_CLASSIFICATION	4.8732605460461864E-5	IMPLEMENTATION
cope with special cases of and not ()	WITHOUT_CLASSIFICATION	0.9990183397476782	WITHOUT_CLASSIFICATION	9.816602523217612E-4	IMPLEMENTATION
close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999974590609002	WITHOUT_CLASSIFICATION	2.5409390999358195E-6	IMPLEMENTATION
take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999801168505587	WITHOUT_CLASSIFICATION	1.988314944129132E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999963600556504	WITHOUT_CLASSIFICATION	3.639944349463544E-6	IMPLEMENTATION
process a token mapping oo path expressions to sql expressions	WITHOUT_CLASSIFICATION	0.9999638609158499	WITHOUT_CLASSIFICATION	3.613908415010274E-5	IMPLEMENTATION
open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999816934293525	WITHOUT_CLASSIFICATION	1.8306570647485727E-5	IMPLEMENTATION
cope with special cases of and not )	WITHOUT_CLASSIFICATION	0.9851409709078841	WITHOUT_CLASSIFICATION	0.014859029092115795	IMPLEMENTATION
the next one up must also be	WITHOUT_CLASSIFICATION	0.9999644523939937	WITHOUT_CLASSIFICATION	3.5547606006266155E-5	IMPLEMENTATION
add any joins	WITHOUT_CLASSIFICATION	0.9999718531780245	WITHOUT_CLASSIFICATION	2.8146821975466327E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999963600556504	WITHOUT_CLASSIFICATION	3.639944349463544E-6	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.999997201042732	WITHOUT_CLASSIFICATION	2.7989572679844843E-6	IMPLEMENTATION
path expression	WITHOUT_CLASSIFICATION	0.9995309894426921	WITHOUT_CLASSIFICATION	4.6901055730789657E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999792056585199	WITHOUT_CLASSIFICATION	2.079434148009652E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999879218962992	WITHOUT_CLASSIFICATION	1.2078103700793478E-4	IMPLEMENTATION
anything else	WITHOUT_CLASSIFICATION	0.9998436643013807	WITHOUT_CLASSIFICATION	1.5633569861919227E-4	IMPLEMENTATION
the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9997373381312905	WITHOUT_CLASSIFICATION	2.626618687094635E-4	IMPLEMENTATION
careful with this!	WITHOUT_CLASSIFICATION	0.9998314846846823	WITHOUT_CLASSIFICATION	1.6851531531777118E-4	IMPLEMENTATION
the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9998054285695024	WITHOUT_CLASSIFICATION	1.9457143049772025E-4	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.999984748015824	WITHOUT_CLASSIFICATION	1.5251984176060318E-5	IMPLEMENTATION
notice no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999994741580576	WITHOUT_CLASSIFICATION	5.258419424075901E-7	IMPLEMENTATION
cannot instantiate	WITHOUT_CLASSIFICATION	0.9999960433315586	WITHOUT_CLASSIFICATION	3.956668441383103E-6	IMPLEMENTATION
start by looking for hql keywords	WITHOUT_CLASSIFICATION	0.9999984989242036	WITHOUT_CLASSIFICATION	1.5010757965051181E-6	IMPLEMENTATION
inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999518578959069	WITHOUT_CLASSIFICATION	4.814210409314116E-5	IMPLEMENTATION
'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9997047183602351	WITHOUT_CLASSIFICATION	2.952816397649732E-4	IMPLEMENTATION
now anything that is not a hql keyword	WITHOUT_CLASSIFICATION	0.9957302176608522	WITHOUT_CLASSIFICATION	0.004269782339147709	IMPLEMENTATION
process the "old" hql style where aliases appear _first_ ie. using the in or in class constructions	WITHOUT_CLASSIFICATION	0.9999994293909987	WITHOUT_CLASSIFICATION	5.706090013732424E-7	IMPLEMENTATION
treat it as a classname	WITHOUT_CLASSIFICATION	0.9999099646314847	WITHOUT_CLASSIFICATION	9.003536851524684E-5	IMPLEMENTATION
treat it as a path expression	WITHOUT_CLASSIFICATION	0.9989126997910549	WITHOUT_CLASSIFICATION	0.0010873002089450761	IMPLEMENTATION
starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999975870315456	WITHOUT_CLASSIFICATION	2.4129684543693916E-6	IMPLEMENTATION
starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9995023847885388	WITHOUT_CLASSIFICATION	4.976152114612371E-4	IMPLEMENTATION
allow odmg oql style from person p p.cars c	WITHOUT_CLASSIFICATION	0.9999723341970603	WITHOUT_CLASSIFICATION	2.7665802939597027E-5	IMPLEMENTATION
handle quoted strings	WITHOUT_CLASSIFICATION	0.9993679901783747	WITHOUT_CLASSIFICATION	6.320098216252667E-4	IMPLEMENTATION
object insertions updates and deletions have list semantics because they must happen in the right order so as to respect referential integrity	WITHOUT_CLASSIFICATION	0.9999998924408083	WITHOUT_CLASSIFICATION	1.0755919166774105E-7	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.999984748015824	WITHOUT_CLASSIFICATION	1.5251984176060318E-5	IMPLEMENTATION
ignore whitespace	WITHOUT_CLASSIFICATION	0.9999549460827497	WITHOUT_CLASSIFICATION	4.505391725021998E-5	IMPLEMENTATION
do replacements	WITHOUT_CLASSIFICATION	0.9999210320239572	WITHOUT_CLASSIFICATION	7.89679760427553E-5	IMPLEMENTATION
handle hql2 collection syntax	WITHOUT_CLASSIFICATION	0.9994463696861826	WITHOUT_CLASSIFICATION	5.536303138174258E-4	IMPLEMENTATION
uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999864999187954	WITHOUT_CLASSIFICATION	1.3500081204542844E-5	IMPLEMENTATION
abstractselectingdelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999583269415074	WITHOUT_CLASSIFICATION	4.1673058492648813E-5	IMPLEMENTATION
hilo params	WITHOUT_CLASSIFICATION	0.9999611868306472	WITHOUT_CLASSIFICATION	3.881316935292416E-5	IMPLEMENTATION
sql = query	WITHOUT_CLASSIFICATION	0.99998796087385	WITHOUT_CLASSIFICATION	1.2039126150016124E-5	IMPLEMENTATION
performance opt	WITHOUT_CLASSIFICATION	0.9990394595168693	WITHOUT_CLASSIFICATION	9.605404831305308E-4	IMPLEMENTATION
sql = update	WITHOUT_CLASSIFICATION	0.9999972160954853	WITHOUT_CLASSIFICATION	2.7839045146055784E-6	IMPLEMENTATION
hilo config	WITHOUT_CLASSIFICATION	0.9997836963377679	WITHOUT_CLASSIFICATION	2.1630366223218282E-4	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999692546140828	WITHOUT_CLASSIFICATION	3.0745385917189174E-5	IMPLEMENTATION
don't allow comments on these insert statements as comments totally blow up the oracle getgeneratedkeys "support" (	WITHOUT_CLASSIFICATION	0.9999921675282972	WITHOUT_CLASSIFICATION	7.832471702821137E-6	IMPLEMENTATION
abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999998659691065	WITHOUT_CLASSIFICATION	1.3403089348762967E-7	IMPLEMENTATION
throw new identifiergenerationexception("save associated object first or disable cascade for inverse association")	WITHOUT_CLASSIFICATION	0.9999984769569183	WITHOUT_CLASSIFICATION	1.5230430816357846E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9993533616504017	WITHOUT_CLASSIFICATION	6.466383495983858E-4	IMPLEMENTATION
do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999949916289402	WITHOUT_CLASSIFICATION	5.008371059691771E-6	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999976790829559	WITHOUT_CLASSIFICATION	2.3209170440820903E-6	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999692546140828	WITHOUT_CLASSIFICATION	3.0745385917189174E-5	IMPLEMENTATION
do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.999894815785636	WITHOUT_CLASSIFICATION	1.0518421436388878E-4	IMPLEMENTATION
column and table should be renamed but it would break the public api	WITHOUT_CLASSIFICATION	0.9999957224378007	WITHOUT_CLASSIFICATION	4.277562199266862E-6	IMPLEMENTATION
loaded entity instances by entitykey	WITHOUT_CLASSIFICATION	0.999987615821105	WITHOUT_CLASSIFICATION	1.2384178895031401E-5	IMPLEMENTATION
if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999971031861267	WITHOUT_CLASSIFICATION	2.8968138733605326E-6	IMPLEMENTATION
the default	WITHOUT_CLASSIFICATION	0.9999962754248863	WITHOUT_CLASSIFICATION	3.7245751136503584E-6	IMPLEMENTATION
unfortunately not really safe to normalize this to 1 as an initial value like we do the others because we would not be able to control this if we are using a sequence	WITHOUT_CLASSIFICATION	0.9999112082559508	WITHOUT_CLASSIFICATION	8.879174404913095E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9993533616504017	WITHOUT_CLASSIFICATION	6.466383495983858E-4	IMPLEMENTATION
identity map of collectionentry instances by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999818728490579	WITHOUT_CLASSIFICATION	1.812715094210061E-5	IMPLEMENTATION
general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999526501262096	WITHOUT_CLASSIFICATION	4.734987379032178E-5	IMPLEMENTATION
table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999309969124609	WITHOUT_CLASSIFICATION	6.900308753909394E-5	IMPLEMENTATION
configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9595039488422346	WITHOUT_CLASSIFICATION	0.04049605115776549	IMPLEMENTATION
identifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998105215073536	WITHOUT_CLASSIFICATION	1.894784926463966E-4	IMPLEMENTATION
persistentidentifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998105215073536	WITHOUT_CLASSIFICATION	1.894784926463966E-4	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999962867925428	WITHOUT_CLASSIFICATION	3.713207457206611E-6	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999962867925428	WITHOUT_CLASSIFICATION	3.713207457206611E-6	IMPLEMENTATION
fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999944831393407	WITHOUT_CLASSIFICATION	5.5168606593911465E-6	IMPLEMENTATION
we just hit the last position	WITHOUT_CLASSIFICATION	0.9999960369405677	WITHOUT_CLASSIFICATION	3.963059432226866E-6	IMPLEMENTATION
scroll ahead	WITHOUT_CLASSIFICATION	0.9999631572094362	WITHOUT_CLASSIFICATION	3.6842790563896266E-5	IMPLEMENTATION
scroll backward	WITHOUT_CLASSIFICATION	0.999920858987699	WITHOUT_CLASSIFICATION	7.914101230097246E-5	IMPLEMENTATION
we have not yet hit the last result	WITHOUT_CLASSIFICATION	0.9956772819141353	WITHOUT_CLASSIFICATION	0.004322718085864695	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999212831574684	WITHOUT_CLASSIFICATION	7.871684253163484E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999876310005467	WITHOUT_CLASSIFICATION	1.2368999453245258E-5	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999961274922088	WITHOUT_CLASSIFICATION	3.872507791198334E-5	IMPLEMENTATION
do this when all the properties are updateable since there is a certain likelihood that the information will already be snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999993263589357	WITHOUT_CLASSIFICATION	6.73641064238365E-7	IMPLEMENTATION
inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999767455376581	WITHOUT_CLASSIFICATION	2.325446234188143E-5	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999212831574684	WITHOUT_CLASSIFICATION	7.871684253163484E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999876310005467	WITHOUT_CLASSIFICATION	1.2368999453245258E-5	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999961274922088	WITHOUT_CLASSIFICATION	3.872507791198334E-5	IMPLEMENTATION
caches	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
generators	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
cache region is defined by the root-class in the hierarchy	WITHOUT_CLASSIFICATION	0.9999992760003491	WITHOUT_CLASSIFICATION	7.239996507987675E-7	IMPLEMENTATION
check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999983820986912	WITHOUT_CLASSIFICATION	1.6179013087522107E-6	IMPLEMENTATION
after all persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999945175310738	WITHOUT_CLASSIFICATION	5.482468926214836E-6	IMPLEMENTATION
if we get here it is possible that we have a proxy 'in the way' of the merge map resolution note decided to put this here rather than in the above loop as i was nervous about the performance of the loop-in-loop especially considering this is far more likely the 'edge case'	WITHOUT_CLASSIFICATION	0.9999994400889085	WITHOUT_CLASSIFICATION	5.59911091413073E-7	IMPLEMENTATION
jndi + serialization	WITHOUT_CLASSIFICATION	0.9999037298150008	WITHOUT_CLASSIFICATION	9.62701849993021E-5	IMPLEMENTATION
checking for named queries	WITHOUT_CLASSIFICATION	0.9999929523130061	WITHOUT_CLASSIFICATION	7.047686993823599E-6	IMPLEMENTATION
stats	WITHOUT_CLASSIFICATION	0.9999892129887633	WITHOUT_CLASSIFICATION	1.0787011236757837E-5	IMPLEMENTATION
entitynotfounddelegate	WITHOUT_CLASSIFICATION	0.9999708393820069	WITHOUT_CLASSIFICATION	2.9160617993068806E-5	IMPLEMENTATION
check named hql queries	WITHOUT_CLASSIFICATION	0.9999237164675223	WITHOUT_CLASSIFICATION	7.628353247763779E-5	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999955110890184	WITHOUT_CLASSIFICATION	4.4889109816101376E-6	IMPLEMENTATION
prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9999015148934468	WITHOUT_CLASSIFICATION	9.848510655326573E-5	IMPLEMENTATION
from javax.naming.referenceable	WITHOUT_CLASSIFICATION	0.9999904660175872	WITHOUT_CLASSIFICATION	9.533982412732572E-6	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999973998536142	WITHOUT_CLASSIFICATION	2.6001463857562453E-6	IMPLEMENTATION
for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999892019417373	WITHOUT_CLASSIFICATION	1.0798058262590393E-5	IMPLEMENTATION
test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9999999156483836	WITHOUT_CLASSIFICATION	8.435161626869207E-8	IMPLEMENTATION
note early exit	WITHOUT_CLASSIFICATION	0.999922220303509	WITHOUT_CLASSIFICATION	7.777969649097372E-5	IMPLEMENTATION
for backward-compatability	WITHOUT_CLASSIFICATION	0.9999901652651205	WITHOUT_CLASSIFICATION	9.834734879353006E-6	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.9999253144665508	WITHOUT_CLASSIFICATION	7.468553344917995E-5	IMPLEMENTATION
to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999988366477215	WITHOUT_CLASSIFICATION	1.1633522785229707E-6	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999968159467746	WITHOUT_CLASSIFICATION	3.184053225390173E-6	IMPLEMENTATION
must add to jndi _after_ adding to hashmaps because some jndi servers use serialization	WITHOUT_CLASSIFICATION	0.9972679397232128	WITHOUT_CLASSIFICATION	0.0027320602767871007	IMPLEMENTATION
make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9996925444782702	WITHOUT_CLASSIFICATION	3.074555217298586E-4	IMPLEMENTATION
for each of the defined parameters make sure its value has been set	WITHOUT_CLASSIFICATION	0.9999914939770578	WITHOUT_CLASSIFICATION	8.506022942264897E-6	IMPLEMENTATION
we never need to apply locks to the sql	WITHOUT_CLASSIFICATION	0.9952324662851967	WITHOUT_CLASSIFICATION	0.004767533714803368	IMPLEMENTATION
inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999581190857827	WITHOUT_CLASSIFICATION	4.188091421735611E-5	IMPLEMENTATION
deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999577326109569	WITHOUT_CLASSIFICATION	4.226738904311091E-5	IMPLEMENTATION
during deserialization we need to reconnect all proxies and collections to this session as well as the entityentry and collectionentry instances these associations are transient because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999978688620406	WITHOUT_CLASSIFICATION	2.1311379594907577E-6	IMPLEMENTATION
updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999554933793329	WITHOUT_CLASSIFICATION	4.4506620667264034E-5	IMPLEMENTATION
loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999769450779051	WITHOUT_CLASSIFICATION	2.3054922094917477E-5	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999903085228844	WITHOUT_CLASSIFICATION	9.691477115537494E-6	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9999903085228844	WITHOUT_CLASSIFICATION	9.691477115537494E-6	IMPLEMENTATION
first try to load it from the temp pc associated to this ss	WITHOUT_CLASSIFICATION	0.9999745721136967	WITHOUT_CLASSIFICATION	2.5427886303319218E-5	IMPLEMENTATION
if the metadata allowed proxy creation and caller did not request forceful eager loading generate a proxy	WITHOUT_CLASSIFICATION	0.9999546246054374	WITHOUT_CLASSIFICATION	4.537539456255051E-5	IMPLEMENTATION
otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9995892382230006	WITHOUT_CLASSIFICATION	4.107617769994093E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999973021147852	WITHOUT_CLASSIFICATION	2.6978852148450322E-6	IMPLEMENTATION
no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9997809474538112	WITHOUT_CLASSIFICATION	2.190525461888579E-4	IMPLEMENTATION
after setting values to object entitymode	WITHOUT_CLASSIFICATION	0.9999990692081038	WITHOUT_CLASSIFICATION	9.307918961986496E-7	IMPLEMENTATION
for ejb3	WITHOUT_CLASSIFICATION	0.9999945196717804	WITHOUT_CLASSIFICATION	5.4803282194517225E-6	IMPLEMENTATION
just ignore	WITHOUT_CLASSIFICATION	0.9999783198645273	WITHOUT_CLASSIFICATION	2.1680135472647202E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9998453723100194	WITHOUT_CLASSIFICATION	1.5462768998073193E-4	IMPLEMENTATION
saveorupdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998482932961917	WITHOUT_CLASSIFICATION	1.517067038082862E-4	IMPLEMENTATION
update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998483166211056	WITHOUT_CLASSIFICATION	1.5168337889442582E-4	IMPLEMENTATION
lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998482932961917	WITHOUT_CLASSIFICATION	1.517067038082862E-4	IMPLEMENTATION
persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998482932961917	WITHOUT_CLASSIFICATION	1.517067038082862E-4	IMPLEMENTATION
persistonflush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998482932961917	WITHOUT_CLASSIFICATION	1.517067038082862E-4	IMPLEMENTATION
merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998482932961917	WITHOUT_CLASSIFICATION	1.517067038082862E-4	IMPLEMENTATION
saveorupdatecopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998482932961917	WITHOUT_CLASSIFICATION	1.517067038082862E-4	IMPLEMENTATION
delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998482932961917	WITHOUT_CLASSIFICATION	1.517067038082862E-4	IMPLEMENTATION
load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998482932961917	WITHOUT_CLASSIFICATION	1.517067038082862E-4	IMPLEMENTATION
refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998482932961917	WITHOUT_CLASSIFICATION	1.517067038082862E-4	IMPLEMENTATION
replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998482932961917	WITHOUT_CLASSIFICATION	1.517067038082862E-4	IMPLEMENTATION
do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9930940216269468	WITHOUT_CLASSIFICATION	0.0069059783730531605	IMPLEMENTATION
this is an internal error of some sort	WITHOUT_CLASSIFICATION	0.9996450180086298	WITHOUT_CLASSIFICATION	3.5498199137012974E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999967225116416	WITHOUT_CLASSIFICATION	3.2774883584018924E-6	IMPLEMENTATION
only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999951744640468	WITHOUT_CLASSIFICATION	4.8255359532226656E-6	IMPLEMENTATION
if it was previously unreferenced we need to flush in order to get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999999954291582	WITHOUT_CLASSIFICATION	4.570841778160658E-9	IMPLEMENTATION
not for internal use	WITHOUT_CLASSIFICATION	0.9963967105785447	WITHOUT_CLASSIFICATION	0.003603289421455195	IMPLEMENTATION
otherwise we only need to flush if there are in-memory changes to the queried tables	WITHOUT_CLASSIFICATION	0.9999640124672722	WITHOUT_CLASSIFICATION	3.5987532727771604E-5	IMPLEMENTATION
might need to run a different filter entirely after the flush because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9977871037433845	WITHOUT_CLASSIFICATION	0.002212896256615454	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999967225116416	WITHOUT_CLASSIFICATION	3.2774883584018924E-6	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999967225116416	WITHOUT_CLASSIFICATION	3.2774883584018924E-6	IMPLEMENTATION
if it is initialized see if the underlying instance is contained since we need to account for the fact that it might have been evicted	WITHOUT_CLASSIFICATION	0.9999995217148289	WITHOUT_CLASSIFICATION	4.782851711662188E-7	IMPLEMENTATION
basically just an adapted copy of find(criteriaimpl)	WITHOUT_CLASSIFICATION	0.9999877294774092	WITHOUT_CLASSIFICATION	1.2270522590666461E-5	IMPLEMENTATION
it is possible for this method to be called during flush processing so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9998895793272796	WITHOUT_CLASSIFICATION	1.1042067272041674E-4	IMPLEMENTATION
nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999952023112362	WITHOUT_CLASSIFICATION	4.797688763810834E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999811696177182	WITHOUT_CLASSIFICATION	1.8830382281842172E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.9999253144665508	WITHOUT_CLASSIFICATION	7.468553344917995E-5	IMPLEMENTATION
we need to writeobject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.999446964088875	WITHOUT_CLASSIFICATION	5.530359111249605E-4	IMPLEMENTATION
the old-time stand-by	WITHOUT_CLASSIFICATION	0.9999810490577012	WITHOUT_CLASSIFICATION	1.895094229876891E-5	IMPLEMENTATION
parameter bind values	WITHOUT_CLASSIFICATION	0.9999985401678931	WITHOUT_CLASSIFICATION	1.4598321069246677E-6	IMPLEMENTATION
parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999215222987432	WITHOUT_CLASSIFICATION	7.847770125675637E-5	IMPLEMENTATION
prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999976399548997	WITHOUT_CLASSIFICATION	2.3600451004387325E-6	IMPLEMENTATION
execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999715634275442	WITHOUT_CLASSIFICATION	2.8436572455827963E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999737767899725	WITHOUT_CLASSIFICATION	2.6223210027513115E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.9999737767899725	WITHOUT_CLASSIFICATION	2.6223210027513115E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999737767899725	WITHOUT_CLASSIFICATION	2.6223210027513115E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999737767899725	WITHOUT_CLASSIFICATION	2.6223210027513115E-5	IMPLEMENTATION
fieldinterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999583269415074	WITHOUT_CLASSIFICATION	4.1673058492648813E-5	IMPLEMENTATION
subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999599720530297	WITHOUT_CLASSIFICATION	4.002794697029217E-5	IMPLEMENTATION
let's assume that there is only one lazy fetch group for now!	WITHOUT_CLASSIFICATION	0.9999960079746163	WITHOUT_CLASSIFICATION	3.992025383703786E-6	IMPLEMENTATION
fieldhandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999583269415074	WITHOUT_CLASSIFICATION	4.1673058492648813E-5	IMPLEMENTATION
should not need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.997794483766908	WITHOUT_CLASSIFICATION	0.0022055162330919162	IMPLEMENTATION
should probably no-op commit/rollback here at least in jta scenarios	WITHOUT_CLASSIFICATION	0.9999900958382509	WITHOUT_CLASSIFICATION	9.904161749097013E-6	IMPLEMENTATION
base expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999861889457254	WITHOUT_CLASSIFICATION	1.3811054274481548E-5	IMPLEMENTATION
various expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999533989189907	WITHOUT_CLASSIFICATION	4.6601081009334416E-5	IMPLEMENTATION
explicitly perform no checking	WITHOUT_CLASSIFICATION	0.9999636192747918	WITHOUT_CLASSIFICATION	3.638072520816051E-5	IMPLEMENTATION
used from testsuite	WITHOUT_CLASSIFICATION	0.9999956607552742	WITHOUT_CLASSIFICATION	4.339244725717563E-6	IMPLEMENTATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999998964351373	WITHOUT_CLASSIFICATION	1.0356486263893582E-7	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999767920930022	WITHOUT_CLASSIFICATION	2.3207906997825932E-5	IMPLEMENTATION
register synch stats.connect()	WITHOUT_CLASSIFICATION	0.9999670792700304	WITHOUT_CLASSIFICATION	3.292072996957438E-5	IMPLEMENTATION
noncritical swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999529579032915	WITHOUT_CLASSIFICATION	4.704209670845918E-5	IMPLEMENTATION
calls executebatch()	WITHOUT_CLASSIFICATION	0.9999272222783986	WITHOUT_CLASSIFICATION	7.277772160141732E-5	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9999365119302381	WITHOUT_CLASSIFICATION	6.348806976187577E-5	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9999365119302381	WITHOUT_CLASSIFICATION	6.348806976187577E-5	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9999365119302381	WITHOUT_CLASSIFICATION	6.348806976187577E-5	IMPLEMENTATION
sybase driver (jconnect) throwing npe here in certain cases but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999962657847489	WITHOUT_CLASSIFICATION	3.7342152510509873E-6	IMPLEMENTATION
see explanation above	WITHOUT_CLASSIFICATION	0.9999837338832919	WITHOUT_CLASSIFICATION	1.6266116708074377E-5	IMPLEMENTATION
if we are in the process of releasing no sense checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999999940755105	WITHOUT_CLASSIFICATION	5.924489455501314E-9	IMPLEMENTATION
early exit!!!!	WITHOUT_CLASSIFICATION	0.9999765832251906	WITHOUT_CLASSIFICATION	2.3416774809378712E-5	IMPLEMENTATION
resultset impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999604218557147	WITHOUT_CLASSIFICATION	3.9578144285301886E-5	IMPLEMENTATION
resultset impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999604218557147	WITHOUT_CLASSIFICATION	3.9578144285301886E-5	IMPLEMENTATION
refer to comment in statefulpersistencecontext.addcollection()	WITHOUT_CLASSIFICATION	0.9999931276484952	WITHOUT_CLASSIFICATION	6.872351504784548E-6	IMPLEMENTATION
connectionmanager.callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998105215073536	WITHOUT_CLASSIFICATION	1.894784926463966E-4	IMPLEMENTATION
note success = false because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9993222547888162	WITHOUT_CLASSIFICATION	6.777452111838263E-4	IMPLEMENTATION
we already have a callback registered either a local (org.hibernate.transaction) transaction has accepted callback responsibilities or we have previously registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999982310187085	WITHOUT_CLASSIFICATION	1.7689812913525928E-6	IMPLEMENTATION
the configured transaction-factory says it only supports local callback mode so no sense attempting to register a jta synchronization	WITHOUT_CLASSIFICATION	0.9999097093014621	WITHOUT_CLASSIFICATION	9.029069853787027E-5	IMPLEMENTATION
transactions marked for rollback-only cause some tm impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999549851504443	WITHOUT_CLASSIFICATION	4.5014849555551186E-5	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998919637366215	WITHOUT_CLASSIFICATION	1.0803626337841103E-4	IMPLEMENTATION
postinitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999977491819746	WITHOUT_CLASSIFICATION	2.250818025353752E-6	IMPLEMENTATION
cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999256110229314	WITHOUT_CLASSIFICATION	7.438897706854817E-5	IMPLEMENTATION
todo for 4.0 private static final logger log = loggerfactory.getlogger( sqlstatementlogger.class ) this is the legacy logging 'category'	WITHOUT_CLASSIFICATION	0.9982877203078514	WITHOUT_CLASSIFICATION	0.00171227969214859	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999578420483501	WITHOUT_CLASSIFICATION	4.2157951649921134E-5	IMPLEMENTATION
don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999601411764542	WITHOUT_CLASSIFICATION	3.9858823545865295E-5	IMPLEMENTATION
don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999801132968832	WITHOUT_CLASSIFICATION	1.9886703116824084E-5	IMPLEMENTATION
position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999755209272831	WITHOUT_CLASSIFICATION	2.4479072716825563E-5	IMPLEMENTATION
sequentially read the result set in reverse until we recognize a change in the key value. at that point we are pointed at the last physical sequential row for the logical row in which we are interested in processing	WITHOUT_CLASSIFICATION	0.9999999995307138	WITHOUT_CLASSIFICATION	4.692862518236487E-10	IMPLEMENTATION
read backwards until we read past the first physical sequential row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999998677405078	WITHOUT_CLASSIFICATION	1.3225949224638002E-7	IMPLEMENTATION
finally read ahead one row to position result set cursor at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999999761797643	WITHOUT_CLASSIFICATION	2.3820235706266547E-8	IMPLEMENTATION
now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999999216524093	WITHOUT_CLASSIFICATION	7.834759072480647E-8	IMPLEMENTATION
force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9997886022724823	WITHOUT_CLASSIFICATION	2.1139772751770054E-4	IMPLEMENTATION
this is equivalent to the old behavior	WITHOUT_CLASSIFICATION	0.9999816651103657	WITHOUT_CLASSIFICATION	1.8334889634322855E-5	IMPLEMENTATION
if null owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999999027922701	WITHOUT_CLASSIFICATION	9.720772987996777E-8	IMPLEMENTATION
final string querystring	WITHOUT_CLASSIFICATION	0.9999930042693986	WITHOUT_CLASSIFICATION	6.995730601306556E-6	IMPLEMENTATION
if it was a reference to self don't need to nullify unless we are using native id generation in which case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.999999972154669	WITHOUT_CLASSIFICATION	2.7845330961577684E-8	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999888810163684	WITHOUT_CLASSIFICATION	1.111898363168898E-5	IMPLEMENTATION
in an effort to avoid concurrent-modification-exceptions (from potential recursive calls back through here as a result of the eventual call to persistentcollection#endread) we scan the internal loadingcollections map for matches and store those matches in a temp collection. the temp collection is then used to "drive" the #endread processing.	WITHOUT_CLASSIFICATION	0.9999997632045984	WITHOUT_CLASSIFICATION	2.367954014801461E-7	IMPLEMENTATION
we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999874812180085	WITHOUT_CLASSIFICATION	1.2518781991430361E-5	IMPLEMENTATION
can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999814695820402	WITHOUT_CLASSIFICATION	1.853041795987265E-5	IMPLEMENTATION
first we need to suspend any current jta transaction and obtain a jdbc connection	WITHOUT_CLASSIFICATION	0.991071483805441	WITHOUT_CLASSIFICATION	0.008928516194559045	IMPLEMENTATION
getresultlist(results)	WITHOUT_CLASSIFICATION	0.9999708393820069	WITHOUT_CLASSIFICATION	2.9160617993068806E-5	IMPLEMENTATION
if we only returned one entity query by key is more efficient	WITHOUT_CLASSIFICATION	0.9999977085850628	WITHOUT_CLASSIFICATION	2.2914149372598075E-6	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9991931382807161	WITHOUT_CLASSIFICATION	8.068617192840084E-4	IMPLEMENTATION
handle empty collection	WITHOUT_CLASSIFICATION	0.9908634128114346	WITHOUT_CLASSIFICATION	0.009136587188565363	IMPLEMENTATION
else no collection element but also no owner	WITHOUT_CLASSIFICATION	0.9999981641358485	WITHOUT_CLASSIFICATION	1.835864151551383E-6	IMPLEMENTATION
handle empty collections	WITHOUT_CLASSIFICATION	0.994817631081316	WITHOUT_CLASSIFICATION	0.005182368918683932	IMPLEMENTATION
else this is not a collection initializer (and empty collections will be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999260048790917	WITHOUT_CLASSIFICATION	7.399512090836492E-5	IMPLEMENTATION
validate() instances of validatable	WITHOUT_CLASSIFICATION	0.999971068388405	WITHOUT_CLASSIFICATION	2.8931611595037894E-5	IMPLEMENTATION
if we know there is exactly 1 row we can skip. it would be great if we could _always_ skip this it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9949436773722892	WITHOUT_CLASSIFICATION	0.005056322627710847	IMPLEMENTATION
remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999976000063376	WITHOUT_CLASSIFICATION	2.399993662328759E-6	IMPLEMENTATION
null version means the object is in the process of being loaded somewhere else in the resultset	WITHOUT_CLASSIFICATION	0.9999999918908435	WITHOUT_CLASSIFICATION	8.109156481110575E-9	IMPLEMENTATION
problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999855936174965	WITHOUT_CLASSIFICATION	1.4406382503383656E-5	IMPLEMENTATION
use the id passed in	WITHOUT_CLASSIFICATION	0.999969311283165	WITHOUT_CLASSIFICATION	3.0688716834858706E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999960020965133	WITHOUT_CLASSIFICATION	3.99790348664363E-6	IMPLEMENTATION
prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999759736682399	WITHOUT_CLASSIFICATION	2.4026331760143395E-5	IMPLEMENTATION
no point doing this if none was requested	WITHOUT_CLASSIFICATION	0.9999998557869112	WITHOUT_CLASSIFICATION	1.44213088833644E-7	IMPLEMENTATION
if the object is already loaded return the loaded one	WITHOUT_CLASSIFICATION	0.9999998234941755	WITHOUT_CLASSIFICATION	1.7650582450226698E-7	IMPLEMENTATION
its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9998853009439348	WITHOUT_CLASSIFICATION	1.1469905606521959E-4	IMPLEMENTATION
cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9990994514874278	WITHOUT_CLASSIFICATION	9.005485125720983E-4	IMPLEMENTATION
the load() which takes an entity does not pass an entityname	WITHOUT_CLASSIFICATION	0.9999118056467798	WITHOUT_CLASSIFICATION	8.819435322013038E-5	IMPLEMENTATION
we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9998080665822905	WITHOUT_CLASSIFICATION	1.9193341770943557E-4	IMPLEMENTATION
look for a proxy	WITHOUT_CLASSIFICATION	0.9999861029970474	WITHOUT_CLASSIFICATION	1.3897002952674002E-5	IMPLEMENTATION
we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9994773809198693	WITHOUT_CLASSIFICATION	5.226190801306444E-4	IMPLEMENTATION
its the given optional object	WITHOUT_CLASSIFICATION	0.9999953033495164	WITHOUT_CLASSIFICATION	4.696650483654708E-6	IMPLEMENTATION
instantiate a new instance	WITHOUT_CLASSIFICATION	0.999993374279182	WITHOUT_CLASSIFICATION	6.62572081812331E-6	IMPLEMENTATION
need to hydrate it.	WITHOUT_CLASSIFICATION	0.9981070056272985	WITHOUT_CLASSIFICATION	0.0018929943727014331	IMPLEMENTATION
return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999973058643065	WITHOUT_CLASSIFICATION	2.694135693566028E-6	IMPLEMENTATION
will be ignored using the existing entry instead	WITHOUT_CLASSIFICATION	0.9999792018573063	WITHOUT_CLASSIFICATION	2.0798142693706196E-5	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999679656163	WITHOUT_CLASSIFICATION	3.2034383747756405E-8	IMPLEMENTATION
materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999806927056389	WITHOUT_CLASSIFICATION	1.930729436105954E-5	IMPLEMENTATION
get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999959462678298	WITHOUT_CLASSIFICATION	4.053732170102137E-6	IMPLEMENTATION
ok in normal hibernate usage to delete a detached entity jpa however forbids it thus this is a hook for hem to affect this behavior	WITHOUT_CLASSIFICATION	0.9999996530659157	WITHOUT_CLASSIFICATION	3.4693408427459346E-7	IMPLEMENTATION
the entry will be removed after the flush and will no longer override the stale snapshot this is now handled by removeentity() in entitydeleteaction persistencecontext.removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.999718012035843	WITHOUT_CLASSIFICATION	2.819879641570385E-4	IMPLEMENTATION
addinitializedcollection(collection persister id)	WITHOUT_CLASSIFICATION	0.9999278725305181	WITHOUT_CLASSIFICATION	7.212746948199078E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999871905227875	WITHOUT_CLASSIFICATION	1.2809477212390681E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999871905227875	WITHOUT_CLASSIFICATION	1.2809477212390681E-5	IMPLEMENTATION
|| oj.getjoinable().consumescollectionalias()	WITHOUT_CLASSIFICATION	0.9999582706961625	WITHOUT_CLASSIFICATION	4.172930383749973E-5	IMPLEMENTATION
here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.979405184059759	WITHOUT_CLASSIFICATION	0.020594815940240995	IMPLEMENTATION
code to handle subclasses of topclass	WITHOUT_CLASSIFICATION	0.9998844374134996	WITHOUT_CLASSIFICATION	1.1556258650034638E-4	IMPLEMENTATION
woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.999998816778259	WITHOUT_CLASSIFICATION	1.1832217410470401E-6	IMPLEMENTATION
we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999524014307111	WITHOUT_CLASSIFICATION	4.7598569288972626E-5	IMPLEMENTATION
we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999172619893847	WITHOUT_CLASSIFICATION	8.273801061532038E-5	IMPLEMENTATION
synchronized to avoid multi-thread access issues defined as method synch to avoid potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999971521409913	WITHOUT_CLASSIFICATION	2.8478590087267257E-6	IMPLEMENTATION
allows various loaders (ok mainly the queryloader ) to check whether scrolling of their result set should be allowed. by default it is allowed.	WITHOUT_CLASSIFICATION	0.9999999129008676	WITHOUT_CLASSIFICATION	8.709913232368596E-8	IMPLEMENTATION
before adding to collection!	WITHOUT_CLASSIFICATION	0.9999432521963421	WITHOUT_CLASSIFICATION	5.674780365784599E-5	IMPLEMENTATION
if the current depth is 0 the root thing being loaded is the many-to-many collection itself. here it is alright to use an inner join	WITHOUT_CLASSIFICATION	0.9999998431652484	WITHOUT_CLASSIFICATION	1.568347515961743E-7	IMPLEMENTATION
operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999002199787113	WITHOUT_CLASSIFICATION	9.978002128882641E-5	IMPLEMENTATION
simple because we can't have a one-to-one or a collection (or even a property-ref) in a composite-element	WITHOUT_CLASSIFICATION	0.9999961822326965	WITHOUT_CLASSIFICATION	3.817767303591889E-6	IMPLEMENTATION
a composite key	WITHOUT_CLASSIFICATION	0.9999535865283959	WITHOUT_CLASSIFICATION	4.641347160403952E-5	IMPLEMENTATION
if no batch use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999729176919585	WITHOUT_CLASSIFICATION	2.7082308041474973E-5	IMPLEMENTATION
it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999749178407257	WITHOUT_CLASSIFICATION	2.5082159274255366E-5	IMPLEMENTATION
needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.7361328412933354	IMPLEMENTATION	0.2638671587066645	WITHOUT_CLASSIFICATION
&& etype.isreferencetoprimarykey()	WITHOUT_CLASSIFICATION	0.9999578120710849	WITHOUT_CLASSIFICATION	4.218792891510162E-5	IMPLEMENTATION
it might still need to apply a collection ordering based on a many-to-many defined order-by	WITHOUT_CLASSIFICATION	0.9583010047478374	WITHOUT_CLASSIFICATION	0.041698995252162634	IMPLEMENTATION
if a composite key use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching todo unnecessary for databases with ansi-style joins	WITHOUT_CLASSIFICATION	0.7385952618524486	WITHOUT_CLASSIFICATION	0.26140473814755144	IMPLEMENTATION
belong to other persister belong to other persister	WITHOUT_CLASSIFICATION	0.9999401578553234	WITHOUT_CLASSIFICATION	5.984214467662944E-5	IMPLEMENTATION
we found it	WITHOUT_CLASSIFICATION	0.9999695581484187	WITHOUT_CLASSIFICATION	3.044185158128609E-5	IMPLEMENTATION
we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999948925647225	WITHOUT_CLASSIFICATION	5.107435277522294E-6	IMPLEMENTATION
disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9996720246115448	WITHOUT_CLASSIFICATION	3.2797538845530296E-4	IMPLEMENTATION
note unlike all other loaders this one is not multithreaded or cacheable!!	WITHOUT_CLASSIFICATION	0.9967330947945545	WITHOUT_CLASSIFICATION	0.0032669052054454875	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9999367294070969	WITHOUT_CLASSIFICATION	6.327059290312148E-5	IMPLEMENTATION
root entity comes last	WITHOUT_CLASSIFICATION	0.9999837219058717	WITHOUT_CLASSIFICATION	1.6278094128282665E-5	IMPLEMENTATION
deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.999970232926841	WITHOUT_CLASSIFICATION	2.976707315895452E-5	IMPLEMENTATION
alias may be null early exit	WITHOUT_CLASSIFICATION	0.999989682880189	WITHOUT_CLASSIFICATION	1.0317119811092806E-5	IMPLEMENTATION
if it is a compound path	WITHOUT_CLASSIFICATION	0.9999951001140324	WITHOUT_CLASSIFICATION	4.8998859676567E-6	IMPLEMENTATION
otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9997206756232291	WITHOUT_CLASSIFICATION	2.7932437677093656E-4	IMPLEMENTATION
if its the root criteria we are done	WITHOUT_CLASSIFICATION	0.9999988670061188	WITHOUT_CLASSIFICATION	1.1329938811185854E-6	IMPLEMENTATION
otherwise recurse	WITHOUT_CLASSIFICATION	0.9995069728355747	WITHOUT_CLASSIFICATION	4.930271644252892E-4	IMPLEMENTATION
the criteria instance	WITHOUT_CLASSIFICATION	0.9999925867308166	WITHOUT_CLASSIFICATION	7.4132691833784665E-6	IMPLEMENTATION
the entity name	WITHOUT_CLASSIFICATION	0.9999852641454245	WITHOUT_CLASSIFICATION	1.473585457540533E-5	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9998637335963729	WITHOUT_CLASSIFICATION	1.3626640362698412E-4	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9998637335963729	WITHOUT_CLASSIFICATION	1.3626640362698412E-4	IMPLEMENTATION
it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999941019996091	WITHOUT_CLASSIFICATION	5.898000390817877E-6	IMPLEMENTATION
should never happen i think	WITHOUT_CLASSIFICATION	0.9988740628651256	WITHOUT_CLASSIFICATION	0.0011259371348744966	IMPLEMENTATION
detect discriminator values	WITHOUT_CLASSIFICATION	0.9999828056768453	WITHOUT_CLASSIFICATION	1.7194323154740866E-5	IMPLEMENTATION
convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.999902838269817	WITHOUT_CLASSIFICATION	9.716173018309468E-5	IMPLEMENTATION
and the qualifier is not the alias of this criteria -> check to see if we belong to some criteria other than the one that created us	WITHOUT_CLASSIFICATION	0.9999425620561239	WITHOUT_CLASSIFICATION	5.7437943876118546E-5	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999898631540034	WITHOUT_CLASSIFICATION	1.0136845996583396E-5	IMPLEMENTATION
otherwise this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999372683153067	WITHOUT_CLASSIFICATION	6.273168469330338E-5	IMPLEMENTATION
currently not cachable if autodiscover types is in effect (e.g. "select ")	WITHOUT_CLASSIFICATION	0.9999923836052442	WITHOUT_CLASSIFICATION	7.616394755790642E-6	IMPLEMENTATION
private final string[] sqlaliases private final string[] sqlaliassuffixes	WITHOUT_CLASSIFICATION	0.9999942201464117	WITHOUT_CLASSIFICATION	5.779853588284932E-6	IMPLEMENTATION
this is only needed (afaict) for resulttransformer processing	WITHOUT_CLASSIFICATION	0.950907930391007	WITHOUT_CLASSIFICATION	0.04909206960899317	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999999227298779	WITHOUT_CLASSIFICATION	7.727012199920687E-8	IMPLEMENTATION
build an array with indices equal to the total number of actual returns in the result hibernate will return for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999998903797171	WITHOUT_CLASSIFICATION	1.0962028297362471E-7	IMPLEMENTATION
replace {.} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9959408952202534	WITHOUT_CLASSIFICATION	0.0040591047797465885	IMPLEMENTATION
no additional open braces found in the string append the rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999964551526617	WITHOUT_CLASSIFICATION	3.5448473383124636E-6	IMPLEMENTATION
apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999058651005166	WITHOUT_CLASSIFICATION	9.413489948344459E-5	IMPLEMENTATION
it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999948309593982	WITHOUT_CLASSIFICATION	5.1690406017763745E-6	IMPLEMENTATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9470696152015737	IMPLEMENTATION	0.0529303847984263	WITHOUT_CLASSIFICATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9470696152015737	IMPLEMENTATION	0.0529303847984263	WITHOUT_CLASSIFICATION
the current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999911279397136	WITHOUT_CLASSIFICATION	8.872060286456643E-6	IMPLEMENTATION
it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999983529470998	WITHOUT_CLASSIFICATION	1.6470529001041667E-6	IMPLEMENTATION
possibly handle something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9998449342243517	WITHOUT_CLASSIFICATION	1.5506577564823576E-4	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999787995330125	WITHOUT_CLASSIFICATION	2.1200466987523714E-5	IMPLEMENTATION
private final list persisters = new arraylist()	WITHOUT_CLASSIFICATION	0.9999966756129489	WITHOUT_CLASSIFICATION	3.324387051084441E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999767920930022	WITHOUT_CLASSIFICATION	2.3207906997825932E-5	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999907668816606	WITHOUT_CLASSIFICATION	9.2331183394433E-6	IMPLEMENTATION
private final list scalartypes = new arraylist() private final list scalarcolumnaliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999966756129489	WITHOUT_CLASSIFICATION	3.324387051084441E-6	IMPLEMENTATION
now process the returns	WITHOUT_CLASSIFICATION	0.9999741072683657	WITHOUT_CLASSIFICATION	2.5892731634282186E-5	IMPLEMENTATION
private list collectionowneraliases = new arraylist() private list collectionaliases = new arraylist() private list collectionpersisters = new arraylist() private list collectionresults = new arraylist()	WITHOUT_CLASSIFICATION	0.9999940597601347	WITHOUT_CLASSIFICATION	5.9402398653793915E-6	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999562054448061	WITHOUT_CLASSIFICATION	4.3794555193914715E-5	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999562054448061	WITHOUT_CLASSIFICATION	4.3794555193914715E-5	IMPLEMENTATION
make sure the owner alias is known	WITHOUT_CLASSIFICATION	0.9999847871277933	WITHOUT_CLASSIFICATION	1.5212872206741149E-5	IMPLEMENTATION
first break down the returns into maps keyed by alias so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999881359233728	WITHOUT_CLASSIFICATION	1.18640766271474E-5	IMPLEMENTATION
scalarcolumnaliases.add( typereturn.getcolumnalias() ) scalartypes.add( typereturn.gettype() )	WITHOUT_CLASSIFICATION	0.9999354420963775	WITHOUT_CLASSIFICATION	6.455790362247926E-5	IMPLEMENTATION
if this return's alias has not been processed yet do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9995090542959748	WITHOUT_CLASSIFICATION	4.90945704025193E-4	IMPLEMENTATION
collectionowneraliases.add( owneralias )	WITHOUT_CLASSIFICATION	0.9999354420963775	WITHOUT_CLASSIFICATION	6.455790362247926E-5	IMPLEMENTATION
for merging of versioned entities we consider the version having been changed only when 1) the two version values are different and 2) the target actually represents database state! this second condition is a special case which allows an entity to be merged during the same transaction (though during a seperate operation) in which it was originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999999998923271	WITHOUT_CLASSIFICATION	1.0767288954117684E-10	IMPLEMENTATION
this is the second pass through on a merge op so here we limit the replacement to associations types (value types were already replaced during the first pass)	WITHOUT_CLASSIFICATION	0.9999262818638887	WITHOUT_CLASSIFICATION	7.37181361113221E-5	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999553176571795	WITHOUT_CLASSIFICATION	4.4682342820450945E-5	IMPLEMENTATION
cascade-save to collections after the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999972252739211	WITHOUT_CLASSIFICATION	2.774726078979032E-6	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.99970429160255	WITHOUT_CLASSIFICATION	2.957083974499584E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9999497964407642	WITHOUT_CLASSIFICATION	5.020355923574846E-5	IMPLEMENTATION
currently only the hibernate-supplied dbtimestamptype is supported here	WITHOUT_CLASSIFICATION	0.9999973349918597	WITHOUT_CLASSIFICATION	2.6650081403884288E-6	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.999911195353652	WITHOUT_CLASSIFICATION	8.880464634797637E-5	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9993604097170022	WITHOUT_CLASSIFICATION	6.395902829977385E-4	IMPLEMENTATION
not so sure this is even valid subtree. but if it was it'd represent two unrelated table references	WITHOUT_CLASSIFICATION	0.9999997454776468	WITHOUT_CLASSIFICATION	2.5452235319185587E-7	IMPLEMENTATION
(not (gt a b) ) => (le a b)	WITHOUT_CLASSIFICATION	0.9999897276256468	WITHOUT_CLASSIFICATION	1.0272374353183234E-5	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9999928593581491	WITHOUT_CLASSIFICATION	7.140641850878447E-6	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9999027939114095	WITHOUT_CLASSIFICATION	9.720608859046496E-5	IMPLEMENTATION
sqlresulttypes = selectclause.getsqlresulttypes()	WITHOUT_CLASSIFICATION	0.999932585452814	WITHOUT_CLASSIFICATION	6.741454718589854E-5	IMPLEMENTATION
by default	WITHOUT_CLASSIFICATION	0.9999989345643294	WITHOUT_CLASSIFICATION	1.0654356705641858E-6	IMPLEMENTATION
this is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9998550294164429	WITHOUT_CLASSIFICATION	1.44970583557173E-4	IMPLEMENTATION
-- loader implementation --	WITHOUT_CLASSIFICATION	0.9999360815392949	WITHOUT_CLASSIFICATION	6.391846070507956E-5	IMPLEMENTATION
-- loader overrides --	WITHOUT_CLASSIFICATION	0.9999866376133969	WITHOUT_CLASSIFICATION	1.3362386603096026E-5	IMPLEMENTATION
(not (is_null a b) ) => (is_not_null a b)	WITHOUT_CLASSIFICATION	0.99998495254566	WITHOUT_CLASSIFICATION	1.5047454340060483E-5	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.999064377664668	WITHOUT_CLASSIFICATION	9.356223353319873E-4	IMPLEMENTATION
meant to handle dynamic instantiation queries	WITHOUT_CLASSIFICATION	0.9996941767528805	WITHOUT_CLASSIFICATION	3.058232471195258E-4	IMPLEMENTATION
--- query translator methods ---	WITHOUT_CLASSIFICATION	0.9999823272414865	WITHOUT_CLASSIFICATION	1.7672758513430705E-5	IMPLEMENTATION
-- implementation private methods --	WITHOUT_CLASSIFICATION	0.9999842200725071	WITHOUT_CLASSIFICATION	1.577992749288193E-5	IMPLEMENTATION
deduplicate unique constraints sharing the same columns this is needed by hibernate annotations since it creates automagically unique constraints for the user	WITHOUT_CLASSIFICATION	0.9977463384427884	WITHOUT_CLASSIFICATION	0.002253661557211674	IMPLEMENTATION
try to find out the name of the primary key to create it as identity if the identitygenerator is used	WITHOUT_CLASSIFICATION	0.9999999066868284	WITHOUT_CLASSIFICATION	9.331317165279791E-8	IMPLEMENTATION
to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9992283347706659	WITHOUT_CLASSIFICATION	7.716652293341105E-4	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999999215043051	WITHOUT_CLASSIFICATION	7.84956949503714E-8	IMPLEMENTATION
used also for generation of fk names!	WITHOUT_CLASSIFICATION	0.9999886714369131	WITHOUT_CLASSIFICATION	1.1328563086949237E-5	IMPLEMENTATION
usually useless	WITHOUT_CLASSIFICATION	0.9999637542598293	WITHOUT_CLASSIFICATION	3.624574017066666E-5	IMPLEMENTATION
added this caching as i noticed that gettype() is being called multiple times	WITHOUT_CLASSIFICATION	0.9999730799771271	WITHOUT_CLASSIFICATION	2.692002287289148E-5	IMPLEMENTATION
do not add unique constraint on db not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9841633487414606	WITHOUT_CLASSIFICATION	0.015836651258539423	IMPLEMENTATION
for backward compatibility disable this	WITHOUT_CLASSIFICATION	0.999847851607067	WITHOUT_CLASSIFICATION	1.5214839293292741E-4	IMPLEMENTATION
may be final may be final may be final	WITHOUT_CLASSIFICATION	0.9999759732410276	WITHOUT_CLASSIFICATION	2.402675897245158E-5	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9999779264069961	WITHOUT_CLASSIFICATION	2.207359300381042E-5	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9999779264069961	WITHOUT_CLASSIFICATION	2.207359300381042E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999950805470462	WITHOUT_CLASSIFICATION	4.919452953826718E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999873217441001	WITHOUT_CLASSIFICATION	1.2678255899880814E-5	IMPLEMENTATION
the root of the incoming property path matched one of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9993554150441083	WITHOUT_CLASSIFICATION	6.445849558917767E-4	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999843720004501	WITHOUT_CLASSIFICATION	1.562799954990912E-5	IMPLEMENTATION
flat recursive algorithm	WITHOUT_CLASSIFICATION	0.999938596925321	WITHOUT_CLASSIFICATION	6.140307467900436E-5	IMPLEMENTATION
an identifier mapper => getkey will be included in the getnonduplicatedpropertyiterator() and checked later so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999997168280228	WITHOUT_CLASSIFICATION	2.8317197723772905E-7	IMPLEMENTATION
if the hibernate-mapping did not specify a schema/catalog use the defaults specified by properties - but note that if the schema/catalog were specified in hibernate-mapping or as params they will already be initialized and will override the values set here (they are in identifiergeneratorproperties)	WITHOUT_CLASSIFICATION	0.9999999196797718	WITHOUT_CLASSIFICATION	8.032022816684547E-8	IMPLEMENTATION
pass the entity-name if not a collection-id	WITHOUT_CLASSIFICATION	0.9994503502080283	WITHOUT_CLASSIFICATION	5.496497919716219E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999950805470462	WITHOUT_CLASSIFICATION	4.919452953826718E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999873217441001	WITHOUT_CLASSIFICATION	1.2678255899880814E-5	IMPLEMENTATION
pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9993980356702794	WITHOUT_CLASSIFICATION	6.019643297205607E-4	IMPLEMENTATION
needed to satisfy keyvalue	WITHOUT_CLASSIFICATION	0.7367716340269175	WITHOUT_CLASSIFICATION	0.2632283659730825	IMPLEMENTATION
empty means no scoping	WITHOUT_CLASSIFICATION	0.9999394282599606	WITHOUT_CLASSIFICATION	6.057174003940063E-5	IMPLEMENTATION
index should be last column listed	WITHOUT_CLASSIFICATION	0.9998320959443843	WITHOUT_CLASSIFICATION	1.679040556156724E-4	IMPLEMENTATION
if it is a formula index use the element columns in the pk	WITHOUT_CLASSIFICATION	0.9999999153090366	WITHOUT_CLASSIFICATION	8.46909632992148E-8	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns	WITHOUT_CLASSIFICATION	0.9989804966494866	WITHOUT_CLASSIFICATION	0.0010195033505133889	IMPLEMENTATION
arraylist list = new arraylist()list.addall( getkey().getconstraintcolumns() )list.addall( getindex().getconstraintcolumns() )getcollectiontable().createuniquekey(list)	WITHOUT_CLASSIFICATION	0.9999759644219489	WITHOUT_CLASSIFICATION	2.403557805098498E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999666211455027	WITHOUT_CLASSIFICATION	3.3378854497269036E-5	IMPLEMENTATION
no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999974565004094	WITHOUT_CLASSIFICATION	2.5434995906264523E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.5026480626381047	IMPLEMENTATION	0.4973519373618954	WITHOUT_CLASSIFICATION
the case of a foreign key to something other than the pk is handled in createpropertyrefconstraints	WITHOUT_CLASSIFICATION	0.9998578052323329	WITHOUT_CLASSIFICATION	1.4219476766713665E-4	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.5026480626381047	IMPLEMENTATION	0.4973519373618954	WITHOUT_CLASSIFICATION
if the property mapping consists of all formulas make it non-updateable	WITHOUT_CLASSIFICATION	0.9999662844737983	WITHOUT_CLASSIFICATION	3.371552620161976E-5	IMPLEMENTATION
columnupdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999582706961625	WITHOUT_CLASSIFICATION	4.172930383749973E-5	IMPLEMENTATION
if the property mapping consists of all formulas make it insertable	WITHOUT_CLASSIFICATION	0.9999662844737983	WITHOUT_CLASSIFICATION	3.371552620161976E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999864835991212	WITHOUT_CLASSIFICATION	1.3516400878754799E-5	IMPLEMENTATION
expected type is intrinsic here	WITHOUT_CLASSIFICATION	0.9999590919116563	WITHOUT_CLASSIFICATION	4.090808834360691E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999666211455027	WITHOUT_CLASSIFICATION	3.3378854497269036E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999666211455027	WITHOUT_CLASSIFICATION	3.3378854497269036E-5	IMPLEMENTATION
return memberpersister.getpropertytype(propertyname)	WITHOUT_CLASSIFICATION	0.9999738395909807	WITHOUT_CLASSIFICATION	2.6160409019279292E-5	IMPLEMENTATION
return memberpersister.tocolumns(alias propertyname)	WITHOUT_CLASSIFICATION	0.999973873943898	WITHOUT_CLASSIFICATION	2.612605610193574E-5	IMPLEMENTATION
return memberpersister.gettype()	WITHOUT_CLASSIFICATION	0.9999738395909807	WITHOUT_CLASSIFICATION	2.6160409019279292E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999612415245652	WITHOUT_CLASSIFICATION	3.8758475434763584E-5	IMPLEMENTATION
return !isonetomany()	WITHOUT_CLASSIFICATION	0.9999821411345531	WITHOUT_CLASSIFICATION	1.7858865446919388E-5	IMPLEMENTATION
instanceof associationtype	WITHOUT_CLASSIFICATION	0.9999711581615072	WITHOUT_CLASSIFICATION	2.8841838492861536E-5	IMPLEMENTATION
we need to determine the best way to know that two joinables represent a single many-to-many	WITHOUT_CLASSIFICATION	0.9906641483780156	WITHOUT_CLASSIFICATION	0.00933585162198432	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9999809702394926	WITHOUT_CLASSIFICATION	1.9029760507391132E-5	IMPLEMENTATION
public boolean issubselectloadable()	WITHOUT_CLASSIFICATION	0.9999967082420456	WITHOUT_CLASSIFICATION	3.291757954483792E-6	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999861470329758	WITHOUT_CLASSIFICATION	1.3852967024176737E-5	IMPLEMENTATION
columns	WITHOUT_CLASSIFICATION	0.9999967057829925	WITHOUT_CLASSIFICATION	3.294217007470521E-6	IMPLEMENTATION
sql statements	WITHOUT_CLASSIFICATION	0.9999877729731859	WITHOUT_CLASSIFICATION	1.222702681416245E-5	IMPLEMENTATION
extra information about the element type	WITHOUT_CLASSIFICATION	0.9999941587176651	WITHOUT_CLASSIFICATION	5.8412823349039146E-6	IMPLEMENTATION
types	WITHOUT_CLASSIFICATION	0.9999651761123313	WITHOUT_CLASSIFICATION	3.482388766869622E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999950805470462	WITHOUT_CLASSIFICATION	4.919452953826718E-6	IMPLEMENTATION
private final string unquotedidentifiercolumnname	WITHOUT_CLASSIFICATION	0.9999974903952141	WITHOUT_CLASSIFICATION	2.5096047859208065E-6	IMPLEMENTATION
dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999918934997466	WITHOUT_CLASSIFICATION	8.10650025337563E-6	IMPLEMENTATION
dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999877933011333	WITHOUT_CLASSIFICATION	1.2206698866781116E-5	IMPLEMENTATION
nativesql collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999351860871338	WITHOUT_CLASSIFICATION	6.481391286621666E-5	IMPLEMENTATION
unquotedkeycolumnnames = stringhelper.unquote(keycolumnaliases)	WITHOUT_CLASSIFICATION	0.999932585452814	WITHOUT_CLASSIFICATION	6.741454718589854E-5	IMPLEMENTATION
element	WITHOUT_CLASSIFICATION	0.9999932780431742	WITHOUT_CLASSIFICATION	6.721956825848753E-6	IMPLEMENTATION
nativesql collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999685491380483	WITHOUT_CLASSIFICATION	3.145086195161956E-5	IMPLEMENTATION
index and row select	WITHOUT_CLASSIFICATION	0.9999054886728841	WITHOUT_CLASSIFICATION	9.451132711590553E-5	IMPLEMENTATION
nativesql collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9997211044738321	WITHOUT_CLASSIFICATION	2.7889552616798714E-4	IMPLEMENTATION
unquotedidentifiercolumnname = identifiercolumnalias	WITHOUT_CLASSIFICATION	0.999932585452814	WITHOUT_CLASSIFICATION	6.741454718589854E-5	IMPLEMENTATION
unquotedidentifiercolumnname = null	WITHOUT_CLASSIFICATION	0.9999864850762631	WITHOUT_CLASSIFICATION	1.3514923736851472E-5	IMPLEMENTATION
generate the sql	WITHOUT_CLASSIFICATION	0.9999953784159993	WITHOUT_CLASSIFICATION	4.621584000780556E-6	IMPLEMENTATION
for non-arrays we don't need to know the element class elementtype.returnedclass()	WITHOUT_CLASSIFICATION	0.9988020528299834	WITHOUT_CLASSIFICATION	0.0011979471700167032	IMPLEMENTATION
not all classpersisters implement propertymapping!	WITHOUT_CLASSIFICATION	0.702454491618574	WITHOUT_CLASSIFICATION	0.2975455083814259	IMPLEMENTATION
handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9992877931709413	WITHOUT_CLASSIFICATION	7.122068290586858E-4	IMPLEMENTATION
handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9997596917315122	WITHOUT_CLASSIFICATION	2.4030826848779423E-4	IMPLEMENTATION
if there is a user-specified loader return that todo filters!?	WITHOUT_CLASSIFICATION	0.9862154389133183	WITHOUT_CLASSIFICATION	0.013784561086681635	IMPLEMENTATION
take care of any entities that might have been evicted!	WITHOUT_CLASSIFICATION	0.9999209410056942	WITHOUT_CLASSIFICATION	7.905899430591061E-5	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9999809702394926	WITHOUT_CLASSIFICATION	1.9029760507391132E-5	IMPLEMENTATION
run a subquery loader	WITHOUT_CLASSIFICATION	0.9999888991603809	WITHOUT_CLASSIFICATION	1.1100839619217589E-5	IMPLEMENTATION
needed by arrays	WITHOUT_CLASSIFICATION	0.8462786472615074	WITHOUT_CLASSIFICATION	0.15372135273849263	IMPLEMENTATION
todo something with formulas	WITHOUT_CLASSIFICATION	0.5425685847594209	IMPLEMENTATION	0.457431415240579	WITHOUT_CLASSIFICATION
an assertion	WITHOUT_CLASSIFICATION	0.9999896643104589	WITHOUT_CLASSIFICATION	1.033568954106469E-5	IMPLEMENTATION
remove all the old entries	WITHOUT_CLASSIFICATION	0.9999984060177859	WITHOUT_CLASSIFICATION	1.5939822142260769E-6	IMPLEMENTATION
create all the new entries	WITHOUT_CLASSIFICATION	0.9999926266095047	WITHOUT_CLASSIFICATION	7.373390495339803E-6	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999612415245652	WITHOUT_CLASSIFICATION	3.8758475434763584E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9999612415245652	WITHOUT_CLASSIFICATION	3.8758475434763584E-5	IMPLEMENTATION
delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9998067356952725	WITHOUT_CLASSIFICATION	1.9326430472760468E-4	IMPLEMENTATION
insert all the new entries	WITHOUT_CLASSIFICATION	0.9999957988084571	WITHOUT_CLASSIFICATION	4.201191542925392E-6	IMPLEMENTATION
==elementtype ??	WITHOUT_CLASSIFICATION	0.9999810673899201	WITHOUT_CLASSIFICATION	1.893261007985145E-5	IMPLEMENTATION
update all the modified entries	WITHOUT_CLASSIFICATION	0.9999857267839444	WITHOUT_CLASSIFICATION	1.4273216055594275E-5	IMPLEMENTATION
identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9995195160518099	WITHOUT_CLASSIFICATION	4.8048394819009277E-4	IMPLEMENTATION
update removed rows fks to null	WITHOUT_CLASSIFICATION	0.999974061070281	WITHOUT_CLASSIFICATION	2.5938929719071188E-5	IMPLEMENTATION
will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999975515967294	WITHOUT_CLASSIFICATION	2.4484032705331966E-6	IMPLEMENTATION
now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999999291513436	WITHOUT_CLASSIFICATION	7.08486563662289E-8	IMPLEMENTATION
buf.append( selectfragment( lhsalias "" ) )ignore suffix for collection columns!	WITHOUT_CLASSIFICATION	0.9999735090161634	WITHOUT_CLASSIFICATION	2.6490983836644974E-5	IMPLEMENTATION
use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999964343140939	WITHOUT_CLASSIFICATION	3.5656859061146285E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999960956906851	WITHOUT_CLASSIFICATION	3.904309314848665E-6	IMPLEMENTATION
private final string roottablename	WITHOUT_CLASSIFICATION	0.9999974903952141	WITHOUT_CLASSIFICATION	2.5096047859208065E-6	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9999386964124559	WITHOUT_CLASSIFICATION	6.130358754407167E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999950805470462	WITHOUT_CLASSIFICATION	4.919452953826718E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999960956906851	WITHOUT_CLASSIFICATION	3.904309314848665E-6	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999959241008474	WITHOUT_CLASSIFICATION	4.075899152709381E-6	IMPLEMENTATION
this could also just be true all the time	WITHOUT_CLASSIFICATION	0.9999847134170151	WITHOUT_CLASSIFICATION	1.5286582984902628E-5	IMPLEMENTATION
chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999888979936896	WITHOUT_CLASSIFICATION	1.1102006310371164E-5	IMPLEMENTATION
todo check this.	WITHOUT_CLASSIFICATION	0.5681073798286231	IMPLEMENTATION	0.4318926201713768	WITHOUT_CLASSIFICATION
initialization	WITHOUT_CLASSIFICATION	0.9999386964124559	WITHOUT_CLASSIFICATION	6.130358754407167E-5	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.999925559821325	WITHOUT_CLASSIFICATION	7.444017867502954E-5	IMPLEMENTATION
the closure of all properties in the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.999998578415781	WITHOUT_CLASSIFICATION	1.4215842189338553E-6	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999997327280272	WITHOUT_CLASSIFICATION	2.6727197281759934E-7	IMPLEMENTATION
subclass discrimination works by assigning particular values to certain combinations of null primary key values in the outer join using an sql case	WITHOUT_CLASSIFICATION	0.9999999998261385	WITHOUT_CLASSIFICATION	1.7386150122608926E-10	IMPLEMENTATION
multitables	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999950805470462	WITHOUT_CLASSIFICATION	4.919452953826718E-6	IMPLEMENTATION
subclass closure properties	WITHOUT_CLASSIFICATION	0.9999469309679921	WITHOUT_CLASSIFICATION	5.306903200794793E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999948493436819	WITHOUT_CLASSIFICATION	5.15065631816243E-6	IMPLEMENTATION
( (column) model.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999793433436768	WITHOUT_CLASSIFICATION	2.065665632319948E-5	IMPLEMENTATION
( (column) sc.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999793433436768	WITHOUT_CLASSIFICATION	2.065665632319948E-5	IMPLEMENTATION
don't need subclass tables because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.999909429137646	WITHOUT_CLASSIFICATION	9.057086235395914E-5	IMPLEMENTATION
special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9933963357628179	WITHOUT_CLASSIFICATION	0.006603664237182124	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999960956906851	WITHOUT_CLASSIFICATION	3.904309314848665E-6	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.999925559821325	WITHOUT_CLASSIFICATION	7.444017867502954E-5	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999997327280272	WITHOUT_CLASSIFICATION	2.6727197281759934E-7	IMPLEMENTATION
get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999836618549228	WITHOUT_CLASSIFICATION	1.6338145077240564E-5	IMPLEMENTATION
now look up the object we are really interested in! (this lets us correctly handle proxies and multi-row or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999752924515437	WITHOUT_CLASSIFICATION	2.470754845621015E-5	IMPLEMENTATION
discriminator column	WITHOUT_CLASSIFICATION	0.9999137651655332	WITHOUT_CLASSIFICATION	8.623483446682202E-5	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9999386964124559	WITHOUT_CLASSIFICATION	6.130358754407167E-5	IMPLEMENTATION
private final map propertytablenumbersbyname = new hashmap()	WITHOUT_CLASSIFICATION	0.9999924688642544	WITHOUT_CLASSIFICATION	7.531135745530253E-6	IMPLEMENTATION
class + table	WITHOUT_CLASSIFICATION	0.9999914939398663	WITHOUT_CLASSIFICATION	8.506060133778073E-6	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9999607610651707	WITHOUT_CLASSIFICATION	3.923893482924464E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.999965195896375	WITHOUT_CLASSIFICATION	3.480410362501336E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999948493436819	WITHOUT_CLASSIFICATION	5.15065631816243E-6	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999959241008474	WITHOUT_CLASSIFICATION	4.075899152709381E-6	IMPLEMENTATION
joins	WITHOUT_CLASSIFICATION	0.9999837532597731	WITHOUT_CLASSIFICATION	1.624674022687454E-5	IMPLEMENTATION
propertytablenumbersbyname.put( prop.getname() join )	WITHOUT_CLASSIFICATION	0.9999468472024547	WITHOUT_CLASSIFICATION	5.3152797545189086E-5	IMPLEMENTATION
access cached sql	WITHOUT_CLASSIFICATION	0.9999873016714678	WITHOUT_CLASSIFICATION	1.2698328532330519E-5	IMPLEMENTATION
figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9990866689577109	WITHOUT_CLASSIFICATION	9.13331042288984E-4	IMPLEMENTATION
figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9453209392197209	WITHOUT_CLASSIFICATION	0.05467906078027915	IMPLEMENTATION
figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.778013455810536	WITHOUT_CLASSIFICATION	0.22198654418946404	IMPLEMENTATION
render the sql	WITHOUT_CLASSIFICATION	0.9999921347215105	WITHOUT_CLASSIFICATION	7.865278489556179E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999864835991212	WITHOUT_CLASSIFICATION	1.3516400878754799E-5	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999939343171516	WITHOUT_CLASSIFICATION	6.065682848431502E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
the optional sql string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999993016084817	WITHOUT_CLASSIFICATION	6.983915181761906E-7	IMPLEMENTATION
information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999824101083797	WITHOUT_CLASSIFICATION	1.7589891620332637E-5	IMPLEMENTATION
information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999989790842531	WITHOUT_CLASSIFICATION	1.0209157469953E-6	IMPLEMENTATION
information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999995233539702	WITHOUT_CLASSIFICATION	4.766460297649138E-7	IMPLEMENTATION
dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999782902982438	WITHOUT_CLASSIFICATION	2.1709701756217103E-5	IMPLEMENTATION
sql strings	WITHOUT_CLASSIFICATION	0.9999687657962022	WITHOUT_CLASSIFICATION	3.1234203797756705E-5	IMPLEMENTATION
for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999985622408641	WITHOUT_CLASSIFICATION	1.4377591358376969E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.999965195896375	WITHOUT_CLASSIFICATION	3.480410362501336E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
identifier	WITHOUT_CLASSIFICATION	0.9999815709035381	WITHOUT_CLASSIFICATION	1.84290964618549E-5	IMPLEMENTATION
version	WITHOUT_CLASSIFICATION	0.9999612630931182	WITHOUT_CLASSIFICATION	3.873690688189599E-5	IMPLEMENTATION
where string	WITHOUT_CLASSIFICATION	0.9999534253750338	WITHOUT_CLASSIFICATION	4.6574624966114035E-5	IMPLEMENTATION
subclass property closure	WITHOUT_CLASSIFICATION	0.999976899730213	WITHOUT_CLASSIFICATION	2.3100269787044957E-5	IMPLEMENTATION
before add -)	WITHOUT_CLASSIFICATION	0.9999664009609582	WITHOUT_CLASSIFICATION	3.359903904179953E-5	IMPLEMENTATION
handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999422731465101	WITHOUT_CLASSIFICATION	5.7726853489891916E-5	IMPLEMENTATION
only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999895220248528	WITHOUT_CLASSIFICATION	1.0477975147188121E-5	IMPLEMENTATION
note early exit here	WITHOUT_CLASSIFICATION	0.9997397003821927	WITHOUT_CLASSIFICATION	2.6029961780723215E-4	IMPLEMENTATION
object have been loaded with setreadonly(true) hhh-2236	WITHOUT_CLASSIFICATION	0.999966951123265	WITHOUT_CLASSIFICATION	3.304887673513373E-5	IMPLEMENTATION
note this assumes something about how propertyselectfragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9898552208267852	WITHOUT_CLASSIFICATION	0.010144779173214647	IMPLEMENTATION
strip leading " "	WITHOUT_CLASSIFICATION	0.999944124229196	WITHOUT_CLASSIFICATION	5.587577080398983E-5	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999999594674369	WITHOUT_CLASSIFICATION	4.0532563102807664E-8	IMPLEMENTATION
otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9991976118825596	WITHOUT_CLASSIFICATION	8.023881174404141E-4	IMPLEMENTATION
null owner ok??	WITHOUT_CLASSIFICATION	0.999994897512019	WITHOUT_CLASSIFICATION	5.102487981043974E-6	IMPLEMENTATION
null sql means that the only lazy properties are shared pk one-to-one associations which are handled differently in the type#nullsafeget code	WITHOUT_CLASSIFICATION	0.9999987807016117	WITHOUT_CLASSIFICATION	1.2192983882619547E-6	IMPLEMENTATION
create a new from node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999990164931326	WITHOUT_CLASSIFICATION	9.835068674142453E-7	IMPLEMENTATION
the difficulty here is exactly what do we update in order to force the version to be incremented in the db	WITHOUT_CLASSIFICATION	0.9997784312034957	WITHOUT_CLASSIFICATION	2.2156879650426413E-4	IMPLEMENTATION
performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999848709734958	WITHOUT_CLASSIFICATION	1.5129026504241881E-5	IMPLEMENTATION
properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9993644300219645	WITHOUT_CLASSIFICATION	6.355699780355473E-4	IMPLEMENTATION
enable for hhh-440 which we don't like	WITHOUT_CLASSIFICATION	0.9998146413355885	WITHOUT_CLASSIFICATION	1.8535866441135313E-4	IMPLEMENTATION
aliases	WITHOUT_CLASSIFICATION	0.9999844640584511	WITHOUT_CLASSIFICATION	1.5535941548917547E-5	IMPLEMENTATION
aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999839219057748	WITHOUT_CLASSIFICATION	1.6078094225131757E-5	IMPLEMENTATION
aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999905972311295	WITHOUT_CLASSIFICATION	9.402768870574603E-6	IMPLEMENTATION
fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999986836346985	WITHOUT_CLASSIFICATION	1.3163653015274546E-6	IMPLEMENTATION
embedded composite ids ( alias.idname1 alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999375260209438	WITHOUT_CLASSIFICATION	6.24739790562509E-5	IMPLEMENTATION
todo skip formulas?	WITHOUT_CLASSIFICATION	0.511000521288355	IMPLEMENTATION	0.488999478711645	WITHOUT_CLASSIFICATION
don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9998987956687286	WITHOUT_CLASSIFICATION	1.0120433127140835E-4	IMPLEMENTATION
do two passes for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999205775180818	WITHOUT_CLASSIFICATION	7.942248191823409E-5	IMPLEMENTATION
select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999900665432385	WITHOUT_CLASSIFICATION	9.933456761483767E-6	IMPLEMENTATION
todo eventually rowidname[j]	WITHOUT_CLASSIFICATION	0.9350547057280398	WITHOUT_CLASSIFICATION	0.06494529427196014	IMPLEMENTATION
this is a property of the table which we are updating	WITHOUT_CLASSIFICATION	0.9999934714735123	WITHOUT_CLASSIFICATION	6.528526487683068E-6	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9992525329903805	WITHOUT_CLASSIFICATION	7.47467009619492E-4	IMPLEMENTATION
we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999964802168846	WITHOUT_CLASSIFICATION	3.5197831153573857E-6	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999975844279766	WITHOUT_CLASSIFICATION	2.4155720233096855E-6	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999461872344385	WITHOUT_CLASSIFICATION	5.381276556163158E-5	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9998471730286849	WITHOUT_CLASSIFICATION	1.5282697131500665E-4	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9999727547857302	WITHOUT_CLASSIFICATION	2.7245214269667253E-5	IMPLEMENTATION
more specifically "? [op] datetime" 1) if the operator is minus the param needs to be of some datetime type 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9998247431243654	WITHOUT_CLASSIFICATION	1.7525687563457333E-4	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9998471730286849	WITHOUT_CLASSIFICATION	1.5282697131500665E-4	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999461872344385	WITHOUT_CLASSIFICATION	5.381276556163158E-5	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9999727547857302	WITHOUT_CLASSIFICATION	2.7245214269667253E-5	IMPLEMENTATION
add the primary key	WITHOUT_CLASSIFICATION	0.9999830995659009	WITHOUT_CLASSIFICATION	1.6900434099089104E-5	IMPLEMENTATION
delegate already handles pk columns	WITHOUT_CLASSIFICATION	0.9999969616646323	WITHOUT_CLASSIFICATION	3.0383353676308043E-6	IMPLEMENTATION
we can't batch joined inserts especially not if it is an identity insert nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9995637735026219	WITHOUT_CLASSIFICATION	4.3622649737808583E-4	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.9999951928736862	WITHOUT_CLASSIFICATION	4.807126313798318E-6	IMPLEMENTATION
write the values of fields onto the prepared statement - we must use the state at the time the insert was issued (cos of foreign key constraints). not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999989034953931	WITHOUT_CLASSIFICATION	1.0965046069153296E-6	IMPLEMENTATION
todo shouldnt inserts be expectations.none?	WITHOUT_CLASSIFICATION	0.7794986292729708	WITHOUT_CLASSIFICATION	0.22050137072702933	IMPLEMENTATION
don't bother trying to update we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9993272730020357	WITHOUT_CLASSIFICATION	6.727269979642927E-4	IMPLEMENTATION
if all fields are null we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999984383586404	WITHOUT_CLASSIFICATION	1.5616413596009974E-6	IMPLEMENTATION
there is probably a row there so try to update if no rows were updated we will find out	WITHOUT_CLASSIFICATION	0.999999995550522	WITHOUT_CLASSIFICATION	4.4494779860642045E-9	IMPLEMENTATION
note updates to joined tables can't be batched	WITHOUT_CLASSIFICATION	0.9999476833268792	WITHOUT_CLASSIFICATION	5.2316673120672365E-5	IMPLEMENTATION
starting index	WITHOUT_CLASSIFICATION	0.999860319805168	WITHOUT_CLASSIFICATION	1.396801948319936E-4	IMPLEMENTATION
now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999899755371957	WITHOUT_CLASSIFICATION	1.0024462804284707E-5	IMPLEMENTATION
write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9987852310760433	WITHOUT_CLASSIFICATION	0.0012147689239566774	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.9999951928736862	WITHOUT_CLASSIFICATION	4.807126313798318E-6	IMPLEMENTATION
do the key. the key is immutable so we can use the _current_ object state - not necessarily the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999992978410495	WITHOUT_CLASSIFICATION	7.02158950493718E-7	IMPLEMENTATION
we should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999962496466132	WITHOUT_CLASSIFICATION	3.750353386897973E-6	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997504857602556	WITHOUT_CLASSIFICATION	2.4951423974441773E-4	IMPLEMENTATION
note dirtyfields==null means we had no snapshot and we couldn't get one using select-before-update oldfields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyfields)	WITHOUT_CLASSIFICATION	0.9999997726156821	WITHOUT_CLASSIFICATION	2.2738431785571883E-7	IMPLEMENTATION
more specifically "datetime [op] ?" 1) if the operator is minus we really cannot determine the expected type as either another datetime or numeric would be valid 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9999985542970907	WITHOUT_CLASSIFICATION	1.4457029092533315E-6	IMPLEMENTATION
for the case of dynamic-update="true" we need to generate the update sql	WITHOUT_CLASSIFICATION	0.9999989196769808	WITHOUT_CLASSIFICATION	1.080323019226974E-6	IMPLEMENTATION
don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9904779063607787	WITHOUT_CLASSIFICATION	0.009522093639221251	IMPLEMENTATION
for the case of dynamic-update="false" or no snapshot we use the static sql	WITHOUT_CLASSIFICATION	0.9999997422584037	WITHOUT_CLASSIFICATION	2.577415962198258E-7	IMPLEMENTATION
if not "get" then try "is"	WITHOUT_CLASSIFICATION	0.99978582821998	WITHOUT_CLASSIFICATION	2.1417178001997646E-4	IMPLEMENTATION
now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9998805782469546	WITHOUT_CLASSIFICATION	1.1942175304532986E-4	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999974983228006	WITHOUT_CLASSIFICATION	2.501677199366615E-6	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999974983228006	WITHOUT_CLASSIFICATION	2.501677199366615E-6	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.999998874185194	WITHOUT_CLASSIFICATION	1.1258148060574778E-6	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.999998874185194	WITHOUT_CLASSIFICATION	1.1258148060574778E-6	IMPLEMENTATION
not supported	WITHOUT_CLASSIFICATION	0.9990583925407474	WITHOUT_CLASSIFICATION	9.416074592525052E-4	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997504857602556	WITHOUT_CLASSIFICATION	2.4951423974441773E-4	IMPLEMENTATION
we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.999477826275856	WITHOUT_CLASSIFICATION	5.221737241440578E-4	IMPLEMENTATION
otherwise utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9997035431149442	WITHOUT_CLASSIFICATION	2.9645688505580486E-4	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999722613925875	WITHOUT_CLASSIFICATION	2.7738607412378968E-5	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999722613925875	WITHOUT_CLASSIFICATION	2.7738607412378968E-5	IMPLEMENTATION
all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999817736294091	WITHOUT_CLASSIFICATION	1.8226370590922046E-5	IMPLEMENTATION
notice that we skip the first table it is the driving table!	WITHOUT_CLASSIFICATION	0.9999766742967213	WITHOUT_CLASSIFICATION	2.3325703278670937E-5	IMPLEMENTATION
we can inner join to superclass tables (the row must be there) we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9998800843530494	WITHOUT_CLASSIFICATION	1.1991564695050583E-4	IMPLEMENTATION
skip the driving table	WITHOUT_CLASSIFICATION	0.9999733485776805	WITHOUT_CLASSIFICATION	2.6651422319542282E-5	IMPLEMENTATION
get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.999998153079303	WITHOUT_CLASSIFICATION	1.8469206970454137E-6	IMPLEMENTATION
here we work under the following assumptions ------------ valid cases -------------------------------------- 1) datetime + {something other than datetime} always results in a datetime ( db will catch invalid conversions ) 2) datetime - datetime always results in a double 3) datetime - {something other than datetime} always results in a datetime ( db will catch invalid conversions ) ------------ invalid cases ------------------------------------ 4) datetime + datetime 5) {something other than datetime} - datetime 6) datetime {any type} 7) datetime / {any type} 8) {any type} / datetime doing so allows us to properly handle parameters as either the left or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999999547460534	WITHOUT_CLASSIFICATION	4.525394669911526E-8	IMPLEMENTATION
render the where and from parts	WITHOUT_CLASSIFICATION	0.9999808885610041	WITHOUT_CLASSIFICATION	1.91114389958607E-5	IMPLEMENTATION
we could regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999514600427519	WITHOUT_CLASSIFICATION	4.853995724818518E-5	IMPLEMENTATION
now render the joins	WITHOUT_CLASSIFICATION	0.9999750440227239	WITHOUT_CLASSIFICATION	2.4955977276191305E-5	IMPLEMENTATION
this will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999957609658047	WITHOUT_CLASSIFICATION	4.239034195378004E-6	IMPLEMENTATION
now render the select clause	WITHOUT_CLASSIFICATION	0.9999709234607799	WITHOUT_CLASSIFICATION	2.907653922007381E-5	IMPLEMENTATION
now tie it all together	WITHOUT_CLASSIFICATION	0.9999671789437145	WITHOUT_CLASSIFICATION	3.28210562854969E-5	IMPLEMENTATION
insert/update/delete sql	WITHOUT_CLASSIFICATION	0.9999907258191288	WITHOUT_CLASSIFICATION	9.274180871095272E-6	IMPLEMENTATION
select sql	WITHOUT_CLASSIFICATION	0.9999966888477377	WITHOUT_CLASSIFICATION	3.311152262136777E-6	IMPLEMENTATION
no need to check laziness dirty checking handles that	WITHOUT_CLASSIFICATION	0.9799838412543611	WITHOUT_CLASSIFICATION	0.0200161587456389	IMPLEMENTATION
fully resolve the map reference create implicit joins.	WITHOUT_CLASSIFICATION	0.9999853250705772	WITHOUT_CLASSIFICATION	1.4674929422773173E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999595801041369	WITHOUT_CLASSIFICATION	4.041989586320372E-5	IMPLEMENTATION
the basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9995306507806685	WITHOUT_CLASSIFICATION	4.6934921933154005E-4	IMPLEMENTATION
for dialects which are known to not support ansi-sql row-value-constructor syntax we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9912322020343547	WITHOUT_CLASSIFICATION	0.008767797965645321	IMPLEMENTATION
due to the complexity in initializing the selectclause do not generate one here. if it is not found simply return null also do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999997622017065	WITHOUT_CLASSIFICATION	2.3779829359647E-7	IMPLEMENTATION
check the version unsaved-value if appropriate	WITHOUT_CLASSIFICATION	0.9994089415138021	WITHOUT_CLASSIFICATION	5.91058486197866E-4	IMPLEMENTATION
let this take precedence if defined since it works for assigned identifiers	WITHOUT_CLASSIFICATION	0.9999997264914247	WITHOUT_CLASSIFICATION	2.7350857534808373E-7	IMPLEMENTATION
check the id unsaved-value	WITHOUT_CLASSIFICATION	0.999235694646504	WITHOUT_CLASSIFICATION	7.643053534959418E-4	IMPLEMENTATION
check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999998612077393	WITHOUT_CLASSIFICATION	1.3879226058323704E-7	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999973021147852	WITHOUT_CLASSIFICATION	2.6978852148450322E-6	IMPLEMENTATION
for property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999869865396255	WITHOUT_CLASSIFICATION	1.301346037453342E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999999594674369	WITHOUT_CLASSIFICATION	4.0532563102807664E-8	IMPLEMENTATION
force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999806431403424	WITHOUT_CLASSIFICATION	1.9356859657678538E-5	IMPLEMENTATION
if this from element is a collection and the path is a collection property (maxindex etc.) then generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999991672061738	WITHOUT_CLASSIFICATION	8.327938261998657E-7	IMPLEMENTATION
entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999585727677749	WITHOUT_CLASSIFICATION	4.1427232225189214E-5	IMPLEMENTATION
collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999476702895467	WITHOUT_CLASSIFICATION	5.232971045333078E-5	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.999998066821721	WITHOUT_CLASSIFICATION	1.9331782790388014E-6	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.999998066821721	WITHOUT_CLASSIFICATION	1.9331782790388014E-6	IMPLEMENTATION
only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.999996447744831	WITHOUT_CLASSIFICATION	3.5522551689533E-6	IMPLEMENTATION
try "get"	WITHOUT_CLASSIFICATION	0.9999788978461374	WITHOUT_CLASSIFICATION	2.110215386258393E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999960020965133	WITHOUT_CLASSIFICATION	3.99790348664363E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.9999960020965133	WITHOUT_CLASSIFICATION	3.99790348664363E-6	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9998793756804204	WITHOUT_CLASSIFICATION	1.20624319579628E-4	IMPLEMENTATION
this page intentionally left blank )	WITHOUT_CLASSIFICATION	0.9999629794287868	WITHOUT_CLASSIFICATION	3.702057121320815E-5	IMPLEMENTATION
do not do anything	WITHOUT_CLASSIFICATION	0.9844604710376097	WITHOUT_CLASSIFICATION	0.01553952896239038	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999811696177182	WITHOUT_CLASSIFICATION	1.8830382281842172E-5	IMPLEMENTATION
cant instantiate	WITHOUT_CLASSIFICATION	0.9999669704816293	WITHOUT_CLASSIFICATION	3.302951837076557E-5	IMPLEMENTATION
if it is a property of an embedded component invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999998719338679	WITHOUT_CLASSIFICATION	1.280661321674031E-7	IMPLEMENTATION
otherwise	WITHOUT_CLASSIFICATION	0.9997957020632555	WITHOUT_CLASSIFICATION	2.042979367444942E-4	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.999966563147041	WITHOUT_CLASSIFICATION	3.3436852959010934E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999636683803111	WITHOUT_CLASSIFICATION	3.633161968887719E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9999636683803111	WITHOUT_CLASSIFICATION	3.633161968887719E-5	IMPLEMENTATION
hhh-2481 make sure the callback gets cleared otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.999928918454864	WITHOUT_CLASSIFICATION	7.108154513611124E-5	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999921168145017	WITHOUT_CLASSIFICATION	7.883185498224732E-6	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999921168145017	WITHOUT_CLASSIFICATION	7.883185498224732E-6	IMPLEMENTATION
note interface is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.999982238456958	WITHOUT_CLASSIFICATION	1.7761543041968304E-5	IMPLEMENTATION
interfaces arguments	WITHOUT_CLASSIFICATION	0.9999808364951662	WITHOUT_CLASSIFICATION	1.9163504833731807E-5	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
get the caller	WITHOUT_CLASSIFICATION	0.9999959693334791	WITHOUT_CLASSIFICATION	4.03066652093845E-6	IMPLEMENTATION
get the caller principals	WITHOUT_CLASSIFICATION	0.9999970049363449	WITHOUT_CLASSIFICATION	2.99506365502282E-6	IMPLEMENTATION
private static final alias default_alias = new alias(10 null)	WITHOUT_CLASSIFICATION	0.999998080222086	WITHOUT_CLASSIFICATION	1.9197779139408394E-6	IMPLEMENTATION
needed to bump this up to dotnode because that is the only thing which currently knows about the property-ref path in the correct format it is either this or recurse over the dotnodes constructing the property path just like dotnode does internally	WITHOUT_CLASSIFICATION	0.9999861807282653	WITHOUT_CLASSIFICATION	1.3819271734596964E-5	IMPLEMENTATION
if the identifier is quoted remove the quotes	WITHOUT_CLASSIFICATION	0.9999990924126487	WITHOUT_CLASSIFICATION	9.075873513372958E-7	IMPLEMENTATION
truncate the identifier to the max alias length less the suffix length	WITHOUT_CLASSIFICATION	0.9999725717744751	WITHOUT_CLASSIFICATION	2.742822552496042E-5	IMPLEMENTATION
full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9993411078753783	WITHOUT_CLASSIFICATION	6.588921246217441E-4	IMPLEMENTATION
null is not considered the same type as integer. $non-nls-1 $non-nls-1	WITHOUT_CLASSIFICATION	0.9999037693333681	WITHOUT_CLASSIFICATION	9.623066663182023E-5	IMPLEMENTATION
the outerjoinsafterwhere needs to come before where clause to properly handle dynamic filters	WITHOUT_CLASSIFICATION	0.9888688978061059	WITHOUT_CLASSIFICATION	0.01113110219389417	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999837742338661	WITHOUT_CLASSIFICATION	1.62257661338912E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999837742338661	WITHOUT_CLASSIFICATION	1.62257661338912E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999837742338661	WITHOUT_CLASSIFICATION	1.62257661338912E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999837742338661	WITHOUT_CLASSIFICATION	1.62257661338912E-5	IMPLEMENTATION
strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999929387855083	WITHOUT_CLASSIFICATION	7.0612144916463475E-6	IMPLEMENTATION
if the condition is not already there	WITHOUT_CLASSIFICATION	0.9999652836076947	WITHOUT_CLASSIFICATION	3.471639230539016E-5	IMPLEMENTATION
dontspace.add("'")	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
for mysql	WITHOUT_CLASSIFICATION	0.9999954613749713	WITHOUT_CLASSIFICATION	4.538625028721788E-6	IMPLEMENTATION
hashmap columnsunique = new hashmap()	WITHOUT_CLASSIFICATION	0.9999562327764515	WITHOUT_CLASSIFICATION	4.3767223548466986E-5	IMPLEMENTATION
null caused some problems	WITHOUT_CLASSIFICATION	0.999975871128703	WITHOUT_CLASSIFICATION	2.4128871297037263E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999767920930022	WITHOUT_CLASSIFICATION	2.3207906997825932E-5	IMPLEMENTATION
not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999960279995483	WITHOUT_CLASSIFICATION	3.9720004516372825E-6	IMPLEMENTATION
even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999221924800771	WITHOUT_CLASSIFICATION	7.780751992288022E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999767920930022	WITHOUT_CLASSIFICATION	2.3207906997825932E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999767920930022	WITHOUT_CLASSIFICATION	2.3207906997825932E-5	IMPLEMENTATION
if true then execute db updates otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999988672552986	WITHOUT_CLASSIFICATION	1.1327447012988523E-6	IMPLEMENTATION
we only release the connection	WITHOUT_CLASSIFICATION	0.9991575920011697	WITHOUT_CLASSIFICATION	8.424079988302446E-4	IMPLEMENTATION
deprecated option	WITHOUT_CLASSIFICATION	0.9997214901893157	WITHOUT_CLASSIFICATION	2.78509810684319E-4	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999995763533138	WITHOUT_CLASSIFICATION	4.236466862343416E-7	IMPLEMENTATION
actually this last test is probably unnecessary since beforecompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.99999999598872	WITHOUT_CLASSIFICATION	4.01127997189988E-9	IMPLEMENTATION
this one only really needed for badly-behaved applications! (if the transactionmanager has a sychronization registered its a noop) (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.7576154533527665	IMPLEMENTATION	0.24238454664723352	WITHOUT_CLASSIFICATION
create an dotnode ast for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999661009001786	WITHOUT_CLASSIFICATION	3.3899099821366554E-5	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999995763533138	WITHOUT_CLASSIFICATION	4.236466862343416E-7	IMPLEMENTATION
if we could not register a synchronization do the before/after completion callbacks ourself (but we need to let jdbccontext know that this is what we are going to do so it doesn't keep trying to register synchronizations)	WITHOUT_CLASSIFICATION	0.6782687189732789	IMPLEMENTATION	0.32173128102672116	WITHOUT_CLASSIFICATION
swallow it and continue to roll back jta transaction	WITHOUT_CLASSIFICATION	0.999833195434692	WITHOUT_CLASSIFICATION	1.668045653079849E-4	IMPLEMENTATION
so the transaction is already rolled back by jta spec	WITHOUT_CLASSIFICATION	0.9999979311725755	WITHOUT_CLASSIFICATION	2.0688274245361464E-6	IMPLEMENTATION
this method is a noop if there is a synchronization!	WITHOUT_CLASSIFICATION	0.9999984268518363	WITHOUT_CLASSIFICATION	1.5731481637543372E-6	IMPLEMENTATION
two conditions where we need to transform this to a theta-join syntax 1) 'elem' is the "root from-element" in correlated subqueries 2) the dotnode.usethetastyleimplicitjoins has been set to true and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999960351330444	WITHOUT_CLASSIFICATION	3.9648669555766E-6	IMPLEMENTATION
websphere however is not a sane jee/jta container	WITHOUT_CLASSIFICATION	0.9993362933808103	WITHOUT_CLASSIFICATION	6.637066191896593E-4	IMPLEMENTATION
for sane jee/jta containers the transaction itself functions as its identifier	WITHOUT_CLASSIFICATION	0.9999976649554342	WITHOUT_CLASSIFICATION	2.3350445657846874E-6	IMPLEMENTATION
swallow the transaction was finished	WITHOUT_CLASSIFICATION	0.9999962649833382	WITHOUT_CLASSIFICATION	3.735016661786416E-6	IMPLEMENTATION
all aliastoentitymapresulttransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999982196461574	WITHOUT_CLASSIFICATION	1.7803538425696519E-6	IMPLEMENTATION
create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999947863089498	WITHOUT_CLASSIFICATION	5.213691050218516E-6	IMPLEMENTATION
all distinctrootentityresulttransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999982196461574	WITHOUT_CLASSIFICATION	1.7803538425696519E-6	IMPLEMENTATION
map of entitymode -> tuplizer	WITHOUT_CLASSIFICATION	0.9999973398197571	WITHOUT_CLASSIFICATION	2.6601802427767327E-6	IMPLEMENTATION
this is a virtual id property	WITHOUT_CLASSIFICATION	0.9995929581678107	WITHOUT_CLASSIFICATION	4.0704183218940573E-4	IMPLEMENTATION
this one needed only for guessentitymode()	WITHOUT_CLASSIFICATION	0.7831750098768507	WITHOUT_CLASSIFICATION	0.2168249901231494	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999872213525897	WITHOUT_CLASSIFICATION	1.277864741031159E-5	IMPLEMENTATION
todo move this to sf per hhh-3517 also see hhh-1907 and componentmetamodel	WITHOUT_CLASSIFICATION	0.5074035504405019	IMPLEMENTATION	0.4925964495594982	WITHOUT_CLASSIFICATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999998252881829	WITHOUT_CLASSIFICATION	1.7471181705425464E-7	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999785400608048	WITHOUT_CLASSIFICATION	2.145993919526014E-5	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999987061538013	WITHOUT_CLASSIFICATION	1.2938461987345526E-6	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999785400608048	WITHOUT_CLASSIFICATION	2.145993919526014E-5	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999215212735223	WITHOUT_CLASSIFICATION	7.847872647777171E-5	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999874001441695	WITHOUT_CLASSIFICATION	1.2599855830399271E-5	IMPLEMENTATION
private final sessionfactoryimplementor sessionfactory	WITHOUT_CLASSIFICATION	0.9999941461910562	WITHOUT_CLASSIFICATION	5.853808943794266E-6	IMPLEMENTATION
cached for efficiency	WITHOUT_CLASSIFICATION	0.9999873945586805	WITHOUT_CLASSIFICATION	1.260544131948286E-5	IMPLEMENTATION
public componentmetamodel(component component sessionfactoryimplementor sessionfactory) {	WITHOUT_CLASSIFICATION	0.9999965325839261	WITHOUT_CLASSIFICATION	3.467416073841813E-6	IMPLEMENTATION
this.sessionfactory = sessionfactory	WITHOUT_CLASSIFICATION	0.999932585452814	WITHOUT_CLASSIFICATION	6.741454718589854E-5	IMPLEMENTATION
it was not embedded so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999983855065426	WITHOUT_CLASSIFICATION	1.6144934573539054E-6	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999998252881829	WITHOUT_CLASSIFICATION	1.7471181705425464E-7	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999987061538013	WITHOUT_CLASSIFICATION	1.2938461987345526E-6	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999215212735223	WITHOUT_CLASSIFICATION	7.847872647777171E-5	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9998524916813943	WITHOUT_CLASSIFICATION	1.4750831860574636E-4	IMPLEMENTATION
return currentid	WITHOUT_CLASSIFICATION	0.9999759661999221	WITHOUT_CLASSIFICATION	2.40338000779499E-5	IMPLEMENTATION
reset the id	WITHOUT_CLASSIFICATION	0.9996010714908459	WITHOUT_CLASSIFICATION	3.9892850915410077E-4	IMPLEMENTATION
origin.adddestination( destination ) this was the cause of hhh-242 origin.settype( from_fragment ) set the parent node type so that the ast is properly formed. the destination node will have all the from text. the parent node is a collection join too (voodoo - see joinprocessor)	WITHOUT_CLASSIFICATION	0.9999999272309524	WITHOUT_CLASSIFICATION	7.276904765016291E-8	IMPLEMENTATION
reset the version	WITHOUT_CLASSIFICATION	0.9998634100889476	WITHOUT_CLASSIFICATION	1.3658991105233758E-4	IMPLEMENTATION
the default is to simply not lazy fetch properties for now	WITHOUT_CLASSIFICATION	0.9996644607344732	WITHOUT_CLASSIFICATION	3.355392655267455E-4	IMPLEMENTATION
add the second join the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999723171141395	WITHOUT_CLASSIFICATION	2.768288586046879E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999595801041369	WITHOUT_CLASSIFICATION	4.041989586320372E-5	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999874001441695	WITHOUT_CLASSIFICATION	1.2599855830399271E-5	IMPLEMENTATION
determine the id getter and setter methods from the proxy interface (if any) determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.7472015137325361	WITHOUT_CLASSIFICATION	0.25279848626746393	IMPLEMENTATION
return getfactory().getsettings().getbytecodeprovider().getproxyfactoryfactory().buildproxyfactory()	WITHOUT_CLASSIFICATION	0.9999738395909807	WITHOUT_CLASSIFICATION	2.6160409019279292E-5	IMPLEMENTATION
not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9991567590934571	WITHOUT_CLASSIFICATION	8.432409065427816E-4	IMPLEMENTATION
superclass entity-name	WITHOUT_CLASSIFICATION	0.9999855126547553	WITHOUT_CLASSIFICATION	1.4487345244785131E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999595801041369	WITHOUT_CLASSIFICATION	4.041989586320372E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
init the aliases after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999756498324569	WITHOUT_CLASSIFICATION	2.435016754317374E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999595801041369	WITHOUT_CLASSIFICATION	4.041989586320372E-5	IMPLEMENTATION
legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999832712193315	WITHOUT_CLASSIFICATION	1.6728780668578582E-5	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999750529674551	WITHOUT_CLASSIFICATION	2.4947032544941507E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
note this affects the return value!	WITHOUT_CLASSIFICATION	0.9999356311523501	WITHOUT_CLASSIFICATION	6.436884764986134E-5	IMPLEMENTATION
need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9998026731554328	WITHOUT_CLASSIFICATION	1.9732684456723315E-4	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999889585716384	WITHOUT_CLASSIFICATION	1.1041428361490611E-5	IMPLEMENTATION
collection types	WITHOUT_CLASSIFICATION	0.9998176544468993	WITHOUT_CLASSIFICATION	1.8234555310069983E-4	IMPLEMENTATION
convenience methods relating to operations across arrays of types	WITHOUT_CLASSIFICATION	0.9996975552378891	WITHOUT_CLASSIFICATION	3.024447621109549E-4	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999985107559263	WITHOUT_CLASSIFICATION	1.4892440738290561E-6	IMPLEMENTATION
blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.999957805174621	WITHOUT_CLASSIFICATION	4.2194825379002E-5	IMPLEMENTATION
value is the entity name	WITHOUT_CLASSIFICATION	0.9999934660376771	WITHOUT_CLASSIFICATION	6.53396232277298E-6	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999871905227875	WITHOUT_CLASSIFICATION	1.2809477212390681E-5	IMPLEMENTATION
generate id select fragment and then property select fragment for each expression just like generateselectfragments().	WITHOUT_CLASSIFICATION	0.9998852909101442	WITHOUT_CLASSIFICATION	1.147090898557392E-4	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
xml is the entity name	WITHOUT_CLASSIFICATION	0.9999962410631007	WITHOUT_CLASSIFICATION	3.7589368993174813E-6	IMPLEMENTATION
special case this is the leaf of the containment graph even though not immutable	WITHOUT_CLASSIFICATION	0.9996933818655979	WITHOUT_CLASSIFICATION	3.0661813440215226E-4	IMPLEMENTATION
tolerates nulls	WITHOUT_CLASSIFICATION	0.9999665673181805	WITHOUT_CLASSIFICATION	3.343268181950649E-5	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
metatype is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999905225364958	WITHOUT_CLASSIFICATION	9.477463504304627E-6	IMPLEMENTATION
get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999982909344638	WITHOUT_CLASSIFICATION	1.7090655362487213E-6	IMPLEMENTATION
look through the fromelement's children to find any collections of values that should be fetched	WITHOUT_CLASSIFICATION	0.9999768934438531	WITHOUT_CLASSIFICATION	2.310655614694224E-5	IMPLEMENTATION
return associationtype.foreign_key_to_parent this is better but causes a transient object exception	WITHOUT_CLASSIFICATION	0.9999997659123135	WITHOUT_CLASSIFICATION	2.3408768644477162E-7	IMPLEMENTATION
use the lower case function name. remember whether we're in a select clause or not.	WITHOUT_CLASSIFICATION	0.9999972671963682	WITHOUT_CLASSIFICATION	2.732803631894583E-6	IMPLEMENTATION
ident might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999970602494258	WITHOUT_CLASSIFICATION	2.9397505742244708E-6	IMPLEMENTATION
todo!!!	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
st.settimestamp( index new timestamp( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9998888713046672	WITHOUT_CLASSIFICATION	1.111286953328578E-4	IMPLEMENTATION
st.setdate( index new date( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9998888713046672	WITHOUT_CLASSIFICATION	1.111286953328578E-4	IMPLEMENTATION
both are timestamps	WITHOUT_CLASSIFICATION	0.9999904284647763	WITHOUT_CLASSIFICATION	9.571535223712754E-6	IMPLEMENTATION
at least one is a plain old date	WITHOUT_CLASSIFICATION	0.9999894414069725	WITHOUT_CLASSIFICATION	1.0558593027360043E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999857676866224	WITHOUT_CLASSIFICATION	1.4232313377544724E-5	IMPLEMENTATION
if the corresponding sql value is null the reader we got is null as well	WITHOUT_CLASSIFICATION	0.999999989852682	WITHOUT_CLASSIFICATION	1.0147317954532405E-8	IMPLEMENTATION
fetch reader content up to the end - and put characters in a stringbuffer	WITHOUT_CLASSIFICATION	0.9991217675391648	WITHOUT_CLASSIFICATION	8.782324608353049E-4	IMPLEMENTATION
return stringbuffer content as a large string	WITHOUT_CLASSIFICATION	0.9998959421957098	WITHOUT_CLASSIFICATION	1.0405780429017439E-4	IMPLEMENTATION
or types.longvarchar?	WITHOUT_CLASSIFICATION	0.9999814962593965	WITHOUT_CLASSIFICATION	1.850374060361222E-5	IMPLEMENTATION
not called at runtime so doesn't matter if its slow )	WITHOUT_CLASSIFICATION	0.9999890473781824	WITHOUT_CLASSIFICATION	1.0952621817686982E-5	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.7955980071111416	WITHOUT_CLASSIFICATION	0.20440199288885846	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999910357591837	WITHOUT_CLASSIFICATION	8.964240816326828E-6	IMPLEMENTATION
different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999730879665565	WITHOUT_CLASSIFICATION	2.6912033443553E-5	IMPLEMENTATION
cache this	WITHOUT_CLASSIFICATION	0.999943666722859	WITHOUT_CLASSIFICATION	5.633327714104454E-5	IMPLEMENTATION
only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999286091812887	WITHOUT_CLASSIFICATION	7.139081871140257E-5	IMPLEMENTATION
forcefully remove leading ands from where fragments the grammar will handle adding them	WITHOUT_CLASSIFICATION	0.9999575374505887	WITHOUT_CLASSIFICATION	4.246254941127669E-5	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
create a new filters node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999841487178336	WITHOUT_CLASSIFICATION	1.5851282166492257E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
public object instantiate(object parent sessionimplementor session) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999924718211461	WITHOUT_CLASSIFICATION	7.528178853751887E-6	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999849857251152	WITHOUT_CLASSIFICATION	1.5014274884887353E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999849857251152	WITHOUT_CLASSIFICATION	1.5014274884887353E-5	IMPLEMENTATION
versiontype impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ note simply returns null for seed() and next() as the only known application of binary types for versioning is for use with the timestamp datatype supported by sybase and sql server which are completely db-generated values	WITHOUT_CLASSIFICATION	0.9999995525719143	WITHOUT_CLASSIFICATION	4.474280857351698E-7	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999985107559263	WITHOUT_CLASSIFICATION	1.4892440738290561E-6	IMPLEMENTATION
not really necessary i guess	WITHOUT_CLASSIFICATION	0.9836617144762051	WITHOUT_CLASSIFICATION	0.016338285523794887	IMPLEMENTATION
clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999894806867119	WITHOUT_CLASSIFICATION	1.0519313288077347E-5	IMPLEMENTATION
we do not have to worry about queued additions to uninitialized collections since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9997064825548895	WITHOUT_CLASSIFICATION	2.935174451104816E-4	IMPLEMENTATION
collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999981755450856	WITHOUT_CLASSIFICATION	1.8244549143699196E-6	IMPLEMENTATION
remember the uk value	WITHOUT_CLASSIFICATION	0.9996244192108857	WITHOUT_CLASSIFICATION	3.755807891142537E-4	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999857676866224	WITHOUT_CLASSIFICATION	1.4232313377544724E-5	IMPLEMENTATION
processcollectionproperty(token q.getcollectionpersister(collectionrole) collectionname)	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
we must use the "remembered" uk value since it is not available from the entityentry during assembly	WITHOUT_CLASSIFICATION	0.9999292111423377	WITHOUT_CLASSIFICATION	7.078885766234818E-5	IMPLEMENTATION
collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9995199864586765	WITHOUT_CLASSIFICATION	4.800135413234895E-4	IMPLEMENTATION
return false	WITHOUT_CLASSIFICATION	0.9999681672727015	WITHOUT_CLASSIFICATION	3.1832727298470936E-5	IMPLEMENTATION
this just handles a particular case of component projection perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999996812873118	WITHOUT_CLASSIFICATION	3.1871268821758136E-7	IMPLEMENTATION
note we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999997626368425	WITHOUT_CLASSIFICATION	2.373631576064E-7	IMPLEMENTATION
the key is the owning entity itself so get the id from the key	WITHOUT_CLASSIFICATION	0.9999992144738421	WITHOUT_CLASSIFICATION	7.855261579763503E-7	IMPLEMENTATION
if the original is a persistentcollection and that original was not flagged as dirty then reset the target's dirty flag here after the copy operation. </p> one thing to be careful of here is a "bare" original collection in which case we should never ever ever reset the dirty flag on the target because we simply do not know	WITHOUT_CLASSIFICATION	0.9752528506585548	WITHOUT_CLASSIFICATION	0.024747149341445146	IMPLEMENTATION
ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999664530078097	WITHOUT_CLASSIFICATION	3.354699219021814E-5	IMPLEMENTATION
copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9997485149401529	WITHOUT_CLASSIFICATION	2.5148505984698725E-4	IMPLEMENTATION
for a null target or a target which is the same as the original we need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999953565586202	WITHOUT_CLASSIFICATION	4.643441379893318E-6	IMPLEMENTATION
by default just use an unanticipated capacity since we don't know how to extract the capacity to use from original here	WITHOUT_CLASSIFICATION	0.9996740899028845	WITHOUT_CLASSIFICATION	3.259100971154729E-4	IMPLEMENTATION
get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9996920739902582	WITHOUT_CLASSIFICATION	3.079260097418179E-4	IMPLEMENTATION
check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999963177180385	WITHOUT_CLASSIFICATION	3.682281961557282E-6	IMPLEMENTATION
check if it is already completely loaded but unowned	WITHOUT_CLASSIFICATION	0.9999996972472736	WITHOUT_CLASSIFICATION	3.02752726484734E-7	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9954802798156994	WITHOUT_CLASSIFICATION	0.004519720184300526	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
create a new collection wrapper to be initialized later	WITHOUT_CLASSIFICATION	0.9999567121730616	WITHOUT_CLASSIFICATION	4.328782693842203E-5	IMPLEMENTATION
some jdbc drivers erroneously return an empty array here for a null db value /	WITHOUT_CLASSIFICATION	0.9999899764915717	WITHOUT_CLASSIFICATION	1.0023508428163701E-5	IMPLEMENTATION
our column span is the number of columns in the pk	WITHOUT_CLASSIFICATION	0.99999980825688	WITHOUT_CLASSIFICATION	1.9174312005744073E-7	IMPLEMENTATION
cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999945450089959	WITHOUT_CLASSIFICATION	5.454991004106756E-6	IMPLEMENTATION
we already know current is not null	WITHOUT_CLASSIFICATION	0.9912568036452584	WITHOUT_CLASSIFICATION	0.008743196354741682	IMPLEMENTATION
the ids are fully resolved so compare them with isdirty() not ismodified()	WITHOUT_CLASSIFICATION	0.9995603376854554	WITHOUT_CLASSIFICATION	4.396623145446156E-4	IMPLEMENTATION
the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.998987552647625	WITHOUT_CLASSIFICATION	0.0010124473523750387	IMPLEMENTATION
----------------------------------------------------------- constructors	WITHOUT_CLASSIFICATION	0.9999212831574684	WITHOUT_CLASSIFICATION	7.871684253163484E-5	IMPLEMENTATION
----------------------------------------------------- instance variables	WITHOUT_CLASSIFICATION	0.9999876973084652	WITHOUT_CLASSIFICATION	1.2302691534819402E-5	IMPLEMENTATION
public static jdbcexception newjdbcexception(string string sqlexception root string sql) { string = string + " [" + sql + ']' log.error(string root) logexceptions(root) return new jdbcexception(string root sql) } public static jdbcexception newjdbcexception(string string sqlexception root) { log.error(string root) logexceptions(root) return new jdbcexception(string root) }	WITHOUT_CLASSIFICATION	0.999996714001475	WITHOUT_CLASSIFICATION	3.285998524890281E-6	IMPLEMENTATION
--------------------------------------------------------- public methods	WITHOUT_CLASSIFICATION	0.999994435194751	WITHOUT_CLASSIFICATION	5.564805248996684E-6	IMPLEMENTATION
compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999884921556909	WITHOUT_CLASSIFICATION	1.1507844309127937E-5	IMPLEMENTATION
simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999341501141825	WITHOUT_CLASSIFICATION	6.584988581740327E-5	IMPLEMENTATION
sybase fail if we don't do that sigh	WITHOUT_CLASSIFICATION	0.9999699814508087	WITHOUT_CLASSIFICATION	3.0018549191227467E-5	IMPLEMENTATION
handles things like a and b or c a and ( b or c ) not a and not b not ( a and b ) x between y and z (overloaded "and") x in ( a b c ) (overloaded brackets) not not a a is not null (overloaded "not") etc and expressions like foo = bar (maps to foo.id = bar.id) foo.bar = 'foo' (maps to foo.bar = 'foo') foo.bar.baz = 1.0 (maps to foo.bar = bar.id and bar.baz = 1.0) 1.0 = foo.bar.baz (maps to bar.baz = 1.0 and foo.bar = bar.id) foo.bar.baz = a.b.c (maps to bar.baz = b.c and foo.bar = bar.id and a.b = b.id) foo.bar.baz + a.b.c (maps to bar.baz + b.c and foo.bar = bar.id and a.b = b.id) ( foo.bar.baz + 1.0 ) < 2.0 (maps to ( bar.baz + 1.0 ) < 2.0 and foo.bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999899977991614	WITHOUT_CLASSIFICATION	1.0002200838610974E-5	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9997928865435017	WITHOUT_CLASSIFICATION	2.0711345649823535E-4	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9997928865435017	WITHOUT_CLASSIFICATION	2.0711345649823535E-4	IMPLEMENTATION
try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999511276561664	WITHOUT_CLASSIFICATION	4.887234383351255E-5	IMPLEMENTATION
otherwise just dump it	WITHOUT_CLASSIFICATION	0.9998658923196094	WITHOUT_CLASSIFICATION	1.341076803906553E-4	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999956753999116	WITHOUT_CLASSIFICATION	4.324600088427085E-6	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.9999956753999116	WITHOUT_CLASSIFICATION	4.324600088427085E-6	IMPLEMENTATION
use default behavior	WITHOUT_CLASSIFICATION	0.999988783541185	WITHOUT_CLASSIFICATION	1.1216458815008942E-5	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.9999896628590887	WITHOUT_CLASSIFICATION	1.0337140911316296E-5	IMPLEMENTATION
the mru cache used to keep hard references to the most recently used query plans note lru here is a bit of a misnomer it indicates that lru entries are removed the actual kept entries are the mru entries	WITHOUT_CLASSIFICATION	0.9995306837880875	WITHOUT_CLASSIFICATION	4.693162119124657E-4	IMPLEMENTATION
we want to be able to just use the defaults if jndi environment properties are not supplied so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999965320303396	WITHOUT_CLASSIFICATION	3.467969660297793E-6	IMPLEMENTATION
clone -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999951015690819	WITHOUT_CLASSIFICATION	4.898430918173248E-6	IMPLEMENTATION
serialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999615970346875	WITHOUT_CLASSIFICATION	3.840296531253887E-5	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999970637219207	WITHOUT_CLASSIFICATION	2.936278079433786E-6	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999970637219207	WITHOUT_CLASSIFICATION	2.936278079433786E-6	IMPLEMENTATION
deserialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999615923839872	WITHOUT_CLASSIFICATION	3.8407616012818805E-5	IMPLEMENTATION
static methods only - hide constructor	WITHOUT_CLASSIFICATION	0.9999835529788794	WITHOUT_CLASSIFICATION	1.644702112061953E-5	IMPLEMENTATION
&& !('_'==character)	WITHOUT_CLASSIFICATION	0.9999612415245652	WITHOUT_CLASSIFICATION	3.8758475434763584E-5	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9999545337698372	WITHOUT_CLASSIFICATION	4.546623016277914E-5	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9999545337698372	WITHOUT_CLASSIFICATION	4.546623016277914E-5	IMPLEMENTATION
includes last '.'	WITHOUT_CLASSIFICATION	0.9999786482771207	WITHOUT_CLASSIFICATION	2.135172287928863E-5	IMPLEMENTATION
+1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999818483494893	WITHOUT_CLASSIFICATION	1.815165051066132E-5	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999293637170584	WITHOUT_CLASSIFICATION	7.063628294153556E-5	IMPLEMENTATION
first time we find match!	WITHOUT_CLASSIFICATION	0.9999809462170602	WITHOUT_CLASSIFICATION	1.9053782939672386E-5	IMPLEMENTATION
entitynames may now include slashes for the representations classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999998602921542	WITHOUT_CLASSIFICATION	1.3970784589743725E-7	IMPLEMENTATION
wrapped iterators	WITHOUT_CLASSIFICATION	0.9999596705320505	WITHOUT_CLASSIFICATION	4.032946794964727E-5	IMPLEMENTATION
index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999907187057204	WITHOUT_CLASSIFICATION	9.281294279597984E-6	IMPLEMENTATION
the current iterator	WITHOUT_CLASSIFICATION	0.9999575547752043	WITHOUT_CLASSIFICATION	4.244522479573404E-5	IMPLEMENTATION
the last used iterator	WITHOUT_CLASSIFICATION	0.9999891187407162	WITHOUT_CLASSIFICATION	1.0881259283797648E-5	IMPLEMENTATION
it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999986518692703	WITHOUT_CLASSIFICATION	1.3481307297357464E-6	IMPLEMENTATION
public static object[] clone(class elementclass object[] array) {object[] result = (object[]) array.newinstance( elementclass array.length )system.arraycopy(array 0 result 0 array.length)return result}	WITHOUT_CLASSIFICATION	0.9999991400118496	WITHOUT_CLASSIFICATION	8.599881503348704E-7	IMPLEMENTATION
call this before any iterator method to make sure that the current iterator is not exhausted	WITHOUT_CLASSIFICATION	0.9695500730686819	WITHOUT_CLASSIFICATION	0.0304499269313181	IMPLEMENTATION
doable if needed	WITHOUT_CLASSIFICATION	0.949691262876172	WITHOUT_CLASSIFICATION	0.05030873712382799	IMPLEMENTATION
set last used iterator here in case the user calls remove before calling hasnext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999945345816655	WITHOUT_CLASSIFICATION	5.465418334416596E-6	IMPLEMENTATION
peek ahead	WITHOUT_CLASSIFICATION	0.999983993621701	WITHOUT_CLASSIFICATION	1.6006378299062915E-5	IMPLEMENTATION
if we reach the end of the string w/o finding the matching end that is an exception	WITHOUT_CLASSIFICATION	0.9999992351473415	WITHOUT_CLASSIFICATION	7.648526585908243E-7	IMPLEMENTATION
we have a placeholder spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999172751752535	WITHOUT_CLASSIFICATION	8.272482474653409E-5	IMPLEMENTATION
make sure spinning forward did not put us past the end of the buffer	WITHOUT_CLASSIFICATION	0.8662461359472268	WITHOUT_CLASSIFICATION	0.13375386405277323	IMPLEMENTATION
first try to locate this resource through the current context classloader.	WITHOUT_CLASSIFICATION	0.9991733702928809	WITHOUT_CLASSIFICATION	8.266297071192249E-4	IMPLEMENTATION
next try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9996521383019208	WITHOUT_CLASSIFICATION	3.4786169807912064E-4	IMPLEMENTATION
next try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9992552790833685	WITHOUT_CLASSIFICATION	7.447209166314802E-4	IMPLEMENTATION
anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999398654804481	WITHOUT_CLASSIFICATION	6.013451955198098E-5	IMPLEMENTATION
would need an identityset for this!	WITHOUT_CLASSIFICATION	0.9994410832203007	WITHOUT_CLASSIFICATION	5.589167796992399E-4	IMPLEMENTATION
arrays.aslist doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999898132065287	WITHOUT_CLASSIFICATION	1.0186793471295755E-5	IMPLEMENTATION
faster?	WITHOUT_CLASSIFICATION	0.9999837503372371	WITHOUT_CLASSIFICATION	1.6249662762836372E-5	IMPLEMENTATION
the name of a class	WITHOUT_CLASSIFICATION	0.9999981336330367	WITHOUT_CLASSIFICATION	1.8663669632301216E-6	IMPLEMENTATION
its the listener class name	WITHOUT_CLASSIFICATION	0.9999946253513454	WITHOUT_CLASSIFICATION	5.374648654651978E-6	IMPLEMENTATION
allow 987654321	WITHOUT_CLASSIFICATION	0.9998073479998252	WITHOUT_CLASSIFICATION	1.9265200017472276E-4	IMPLEMENTATION
default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999998769581675	WITHOUT_CLASSIFICATION	1.2304183252353788E-7	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999973998536142	WITHOUT_CLASSIFICATION	2.6001463857562453E-6	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999968159467746	WITHOUT_CLASSIFICATION	3.184053225390173E-6	IMPLEMENTATION
first lets determine whether to apply cglib or javassist based instrumentation	WITHOUT_CLASSIFICATION	0.9999979206208114	WITHOUT_CLASSIFICATION	2.0793791886376323E-6	IMPLEMENTATION
make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.999932316495569	WITHOUT_CLASSIFICATION	6.76835044309582E-5	IMPLEMENTATION
entirely optional!!	WITHOUT_CLASSIFICATION	0.99996076493165	WITHOUT_CLASSIFICATION	3.923506834999476E-5	IMPLEMENTATION
its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999560445057819	WITHOUT_CLASSIFICATION	4.395549421803567E-5	IMPLEMENTATION
context.unbind(boundname)	WITHOUT_CLASSIFICATION	0.9999708393820069	WITHOUT_CLASSIFICATION	2.9160617993068806E-5	IMPLEMENTATION
readresolveobject	WITHOUT_CLASSIFICATION	0.9999607568730307	WITHOUT_CLASSIFICATION	3.924312696940547E-5	IMPLEMENTATION
cfg.setproperty("hibernate.show_sql" "true")	WITHOUT_CLASSIFICATION	0.9999574269650491	WITHOUT_CLASSIFICATION	4.2573034950846125E-5	IMPLEMENTATION
defensive convenience methods	WITHOUT_CLASSIFICATION	0.9999737559331154	WITHOUT_CLASSIFICATION	2.6244066884660897E-5	IMPLEMENTATION
create the sessionfactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999964411766413	WITHOUT_CLASSIFICATION	3.5588233585829395E-6	IMPLEMENTATION
make sure you log the exception as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999953793309462	WITHOUT_CLASSIFICATION	4.620669053855026E-6	IMPLEMENTATION
begin unit of work	WITHOUT_CLASSIFICATION	0.9999609108449777	WITHOUT_CLASSIFICATION	3.908915502227284E-5	IMPLEMENTATION
write html header	WITHOUT_CLASSIFICATION	0.9999299455516099	WITHOUT_CLASSIFICATION	7.005444839013518E-5	IMPLEMENTATION
handle actions	WITHOUT_CLASSIFICATION	0.9998477367418077	WITHOUT_CLASSIFICATION	1.5226325819231256E-4	IMPLEMENTATION
print page	WITHOUT_CLASSIFICATION	0.9999969612967246	WITHOUT_CLASSIFICATION	3.038703275576394E-6	IMPLEMENTATION
write html footer	WITHOUT_CLASSIFICATION	0.9998597587098459	WITHOUT_CLASSIFICATION	1.402412901541223E-4	IMPLEMENTATION
end unit of work	WITHOUT_CLASSIFICATION	0.9998316534109285	WITHOUT_CLASSIFICATION	1.6834658907149107E-4	IMPLEMENTATION
start the session to be used for this request	WITHOUT_CLASSIFICATION	0.999992874890727	WITHOUT_CLASSIFICATION	7.125109272986709E-6	IMPLEMENTATION
make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.998223557832736	WITHOUT_CLASSIFICATION	0.0017764421672640802	IMPLEMENTATION
pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9994990810991663	WITHOUT_CLASSIFICATION	5.00918900833796E-4	IMPLEMENTATION
remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999839131270479	WITHOUT_CLASSIFICATION	1.60868729520232E-5	IMPLEMENTATION
eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999008109221655	WITHOUT_CLASSIFICATION	9.918907783442117E-5	IMPLEMENTATION
if we want to handle it bidirectional and detached we also need to load this collection with an eager outer-join fetch this time with criteria and not hql	WITHOUT_CLASSIFICATION	0.5526187574315437	IMPLEMENTATION	0.4473812425684565	WITHOUT_CLASSIFICATION
event anevent = (event) session .createcriteria(event.class).setfetchmode("participants" fetchmode.join) .add( expression.eq("id" eventid) ) .uniqueresult() eager fetch the colleciton so we can use it detached	WITHOUT_CLASSIFICATION	0.9997445721134219	WITHOUT_CLASSIFICATION	2.554278865780399E-4	IMPLEMENTATION
end of first unit of work	WITHOUT_CLASSIFICATION	0.9998453366145134	WITHOUT_CLASSIFICATION	1.546633854866351E-4	IMPLEMENTATION
or bidirectional safety method setting both sides aperson.addtoevent(anevent)	WITHOUT_CLASSIFICATION	0.9999619188842018	WITHOUT_CLASSIFICATION	3.808111579810517E-5	IMPLEMENTATION
begin second unit of work	WITHOUT_CLASSIFICATION	0.9999778767817997	WITHOUT_CLASSIFICATION	2.2123218200246003E-5	IMPLEMENTATION
reattachment of aperson	WITHOUT_CLASSIFICATION	0.9999835884131075	WITHOUT_CLASSIFICATION	1.641158689245751E-5	IMPLEMENTATION
the getemailaddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999542032773777	WITHOUT_CLASSIFICATION	4.579672262218835E-5	IMPLEMENTATION
we need our tm so get it now and avoid doing other work if there is a problem	WITHOUT_CLASSIFICATION	0.9999996134278067	WITHOUT_CLASSIFICATION	3.8657219319261663E-7	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9998649524324801	WITHOUT_CLASSIFICATION	1.3504756751992828E-4	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9998649524324801	WITHOUT_CLASSIFICATION	1.3504756751992828E-4	IMPLEMENTATION
jbc put a version in the node when it created as part of some internal operation. we are always newer but if the jbc version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999999997192999	WITHOUT_CLASSIFICATION	2.8070019116292194E-10	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for properties with hibernate-specific overrides to detect and warn about conflicting declarations	WITHOUT_CLASSIFICATION	0.9988122917371943	WITHOUT_CLASSIFICATION	0.0011877082628056533	IMPLEMENTATION
not null if the isolation level has been specified in the configuration file. otherwise it is left to the driver's default value.	WITHOUT_CLASSIFICATION	0.9999956089616825	WITHOUT_CLASSIFICATION	4.391038317574964E-6	IMPLEMENTATION
configured outside of hibernate (i.e. servlet container or java bean container already has proxool pools running and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999986606474283	WITHOUT_CLASSIFICATION	1.3393525717281168E-6	IMPLEMENTATION
if you're closing down the connectionprovider chances are an is not a real big deal just warn	WITHOUT_CLASSIFICATION	0.9999805491158259	WITHOUT_CLASSIFICATION	1.9450884174080887E-5	IMPLEMENTATION
(as is always optional for consistency with sql/oql)	WITHOUT_CLASSIFICATION	0.9999907509127295	WITHOUT_CLASSIFICATION	9.249087270457102E-6	IMPLEMENTATION
process the "new" hql style where aliases are assigned _after_ the class name or path expression ie. using the as construction	WITHOUT_CLASSIFICATION	0.9999948944774434	WITHOUT_CLASSIFICATION	5.105522556627113E-6	IMPLEMENTATION
the loaded owner will be set to null after the collection is removed so capture its value as the affected owner so it is accessible to both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999985765277982	WITHOUT_CLASSIFICATION	1.423472201872775E-6	IMPLEMENTATION
is a primitive type invokespecial	WITHOUT_CLASSIFICATION	0.9999951825119714	WITHOUT_CLASSIFICATION	4.817488028571799E-6	IMPLEMENTATION
array of primitive type do nothing	WITHOUT_CLASSIFICATION	0.9999983463613141	WITHOUT_CLASSIFICATION	1.6536386858598384E-6	IMPLEMENTATION
handle a path expression or class name that appears at the start in the "new" hql style or an alias that appears at the start in the "old" hql style	WITHOUT_CLASSIFICATION	0.9999852123484787	WITHOUT_CLASSIFICATION	1.4787651521382466E-5	IMPLEMENTATION
handle <= >= != is not not between not in	WITHOUT_CLASSIFICATION	0.9996234891836541	WITHOUT_CLASSIFICATION	3.765108163458466E-4	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.999999989524573	WITHOUT_CLASSIFICATION	1.0475427014213405E-8	IMPLEMENTATION
transfer an explicitly defined entity name handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999865156182343	WITHOUT_CLASSIFICATION	1.3484381765671954E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999976790829559	WITHOUT_CLASSIFICATION	2.3209170440820903E-6	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999976790829559	WITHOUT_CLASSIFICATION	2.3209170440820903E-6	IMPLEMENTATION
get meta's from <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999975668320578	WITHOUT_CLASSIFICATION	2.433167942276747E-6	IMPLEMENTATION
parameters on the property mapping should override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9997721168179473	WITHOUT_CLASSIFICATION	2.2788318205271553E-4	IMPLEMENTATION
fetch="join" overrides default laziness fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999942144649642	WITHOUT_CLASSIFICATION	5.785535035891831E-6	IMPLEMENTATION
note special case default to join and non-lazy for the "second join" of the many-to-many	WITHOUT_CLASSIFICATION	0.9999993900819291	WITHOUT_CLASSIFICATION	6.099180710075773E-7	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999692546140828	WITHOUT_CLASSIFICATION	3.0745385917189174E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999876310005467	WITHOUT_CLASSIFICATION	1.2368999453245258E-5	IMPLEMENTATION
void setcomponenttuplizerfactory(componenttuplizerfactory componenttuplizerfactory) { this.componenttuplizerfactory = componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.999822158166434	WITHOUT_CLASSIFICATION	1.778418335659304E-4	IMPLEMENTATION
element index -> id	WITHOUT_CLASSIFICATION	0.9999454827641894	WITHOUT_CLASSIFICATION	5.4517235810651035E-5	IMPLEMENTATION
note that it might be better to iterate the snapshot but this is safe assuming the user implements equals() properly as required by the set contract!	WITHOUT_CLASSIFICATION	0.9999969092863035	WITHOUT_CLASSIFICATION	3.0907136965592595E-6	IMPLEMENTATION
collections detect changes made via their public interface and mark themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9987173274055312	WITHOUT_CLASSIFICATION	0.0012826725944687688	IMPLEMENTATION
essentially if the real session is closed allow any method call to pass through since the real session will complain by throwing an appropriate exception note that allowing close() above has the same basic effect but we capture that there simply to perform the unbind	WITHOUT_CLASSIFICATION	0.9999887806267084	WITHOUT_CLASSIFICATION	1.1219373291624054E-5	IMPLEMENTATION
the default sqlexceptionconverter for all dialects is based on sqlstate since sqlerrorcode is extremely vendor-specific. specific dialects may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9982885365379041	WITHOUT_CLASSIFICATION	0.001711463462095892	IMPLEMENTATION
only necessary for postgre < 7.4 httpanoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999746921682866	WITHOUT_CLASSIFICATION	2.5307831713385948E-5	IMPLEMENTATION
select topic syntax from information_schema.help where section like 'function%' order by section topic see also -> httpwww.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999994564929001	WITHOUT_CLASSIFICATION	5.435070999138621E-7	IMPLEMENTATION
registercolumntype(types.varbinary "character($l)") registercolumntype(types.blob "character($l)" ) for use prior to cp 11.0 registercolumntype(types.clob "character($l)" )	WITHOUT_CLASSIFICATION	0.9999344853680889	WITHOUT_CLASSIFICATION	6.551463191100767E-5	IMPLEMENTATION
the blob type requires a size arguement - this defaults to bytes - no arg defaults to 1 whole byte! other argument mods include k - kilobyte m - megabyte g - gigabyte. refer to the pbdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999928629150997	WITHOUT_CLASSIFICATION	7.137084900250781E-6	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9997587109730671	WITHOUT_CLASSIFICATION	2.4128902693292925E-4	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999995391667209	WITHOUT_CLASSIFICATION	4.608332790899117E-7	IMPLEMENTATION
add the comment nest the main query in an outer select add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999997819957536	WITHOUT_CLASSIFICATION	2.180042464557276E-7	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999928610951361	WITHOUT_CLASSIFICATION	7.1389048639429585E-6	IMPLEMENTATION
note for object <-> sql datatype mappings see configuration manager | advanced | sql | system ddl datatype mappings tbdregistercolumntype(types.binary "binary($1)") changed 08-11-2005 jsl	WITHOUT_CLASSIFICATION	0.9999999993126364	WITHOUT_CLASSIFICATION	6.873636449582282E-10	IMPLEMENTATION
trim(end_keyword string-expression-1 from string-expression-2) use hibernate implementation "from" is one of the parameters they pass in position ?3 registerfunction( "trim" new sqlfunctiontemplate(hibernate.string "trim(?1 ?2 from ?3)") )	WITHOUT_CLASSIFICATION	0.9999891649120941	WITHOUT_CLASSIFICATION	1.0835087905845594E-5	IMPLEMENTATION
whether this dialect has an identity clause added to the data type or a completely seperate identity data type	WITHOUT_CLASSIFICATION	0.9999999603782592	WITHOUT_CLASSIFICATION	3.962174072430177E-8	IMPLEMENTATION
according to both the ansi-sql and jpa specs trim takes a variable number of parameters between 1 and 4. at least one paramer (trimsource) is required. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if <trim specification> is omitted both is assumed. if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.9999999979564109	WITHOUT_CLASSIFICATION	2.0435891261679212E-9	IMPLEMENTATION
/ prepare persisters and link them up with their cache region/access-strategy	WITHOUT_CLASSIFICATION	0.9999945716776081	WITHOUT_CLASSIFICATION	5.428322391984364E-6	IMPLEMENTATION
named queries	WITHOUT_CLASSIFICATION	0.9999822647136823	WITHOUT_CLASSIFICATION	1.7735286317669242E-5	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999955110890184	WITHOUT_CLASSIFICATION	4.4889109816101376E-6	IMPLEMENTATION
does not handle arrays (thats ok cos they can't be lazy) or newly instantiated collections so we can do the cast	WITHOUT_CLASSIFICATION	0.9993042255140987	WITHOUT_CLASSIFICATION	6.957744859012536E-4	IMPLEMENTATION
collection deletions are a special case since update() can add deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9998648716140871	WITHOUT_CLASSIFICATION	1.3512838591286174E-4	IMPLEMENTATION
we can do the cast since orphan-delete does not apply to 1. newly instantiated collections 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9995144447552562	WITHOUT_CLASSIFICATION	4.8555524474383927E-4	IMPLEMENTATION
if the natural-id is marked as non-mutable it is not retrieved during a normal database-snapshot operation	WITHOUT_CLASSIFICATION	0.999994820004628	WITHOUT_CLASSIFICATION	5.179995372042039E-6	IMPLEMENTATION
watch out for a case where old is still referenced somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999999738745182	WITHOUT_CLASSIFICATION	2.612548171320492E-8	IMPLEMENTATION
slice to get the columns for this component property	WITHOUT_CLASSIFICATION	0.999999664183312	WITHOUT_CLASSIFICATION	3.358166879371975E-7	IMPLEMENTATION
int result = 17 result = 37 result + type.hashcode() result = 37 result + ( value==null ? 0 value.hashcode() ) return result	WITHOUT_CLASSIFICATION	0.9999980826322103	WITHOUT_CLASSIFICATION	1.91736778970517E-6	IMPLEMENTATION
the collectionentry.isreached() stuff is just to detect any silly users who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999977129218981	WITHOUT_CLASSIFICATION	2.2870781018336767E-6	IMPLEMENTATION
detached collection wrappers that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9958145617839288	WITHOUT_CLASSIFICATION	0.004185438216071237	IMPLEMENTATION
the unique property value represented here may or may not be serializable so we do an explicit check here in order to generate a better error message	WITHOUT_CLASSIFICATION	0.9855806603025647	WITHOUT_CLASSIFICATION	0.014419339697435148	IMPLEMENTATION
if the version of a newly instantiated object is not the same as the version seed value use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9995883341987075	WITHOUT_CLASSIFICATION	4.116658012924441E-4	IMPLEMENTATION
ie. we never have to null out a reference to an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999980927930519	WITHOUT_CLASSIFICATION	1.907206948220461E-6	IMPLEMENTATION
ignore this row the collection is in process of being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999995133817053	WITHOUT_CLASSIFICATION	4.866182946238519E-7	IMPLEMENTATION
entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currently not yet used	WITHOUT_CLASSIFICATION	0.9937156145705854	WITHOUT_CLASSIFICATION	0.0062843854294144935	IMPLEMENTATION
should be ok performance-wise to generate new delegate instances for each request since these are locally stack-scoped. besides it makes the code much easier to read than the old transactionhelper stuff	WITHOUT_CLASSIFICATION	0.9999999992033725	WITHOUT_CLASSIFICATION	7.966275695246626E-10	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998000686706043	WITHOUT_CLASSIFICATION	1.999313293956812E-4	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998000686706043	WITHOUT_CLASSIFICATION	1.999313293956812E-4	IMPLEMENTATION
wrap up any new collections directly referenced by the object or its components	WITHOUT_CLASSIFICATION	0.9999999041791394	WITHOUT_CLASSIFICATION	9.582086067647462E-8	IMPLEMENTATION
remove any snapshot not really for memory management purposes but rather because it might now be stale and there is no longer any entityentry to take precedence this is now handled by removeentity() session.getpersistencecontext().removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.9999965319675054	WITHOUT_CLASSIFICATION	3.4680324945666985E-6	IMPLEMENTATION
skip this check for composite-ids relating to dom4j entity-mode alternatively we could add a check to make sure the incoming id value is an instance of element	WITHOUT_CLASSIFICATION	0.9986697612203049	WITHOUT_CLASSIFICATION	0.001330238779695059	IMPLEMENTATION
upgrade the lock if necessary lock(result lockmode)	WITHOUT_CLASSIFICATION	0.9999895676743248	WITHOUT_CLASSIFICATION	1.0432325675259773E-5	IMPLEMENTATION
now any collections that are initialized inside this block do not get updated - they are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9489090654412639	WITHOUT_CLASSIFICATION	0.05109093455873612	IMPLEMENTATION
we must clone embedded composite identifiers or we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999995635888685	WITHOUT_CLASSIFICATION	4.364111315611697E-7	IMPLEMENTATION
sub-insertions should occur before containing insertion so try to do the callback now	WITHOUT_CLASSIFICATION	0.9998539369490408	WITHOUT_CLASSIFICATION	1.4606305095926858E-4	IMPLEMENTATION
the entity is not associated with the session so try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.998113308067396	WITHOUT_CLASSIFICATION	0.0018866919326040118	IMPLEMENTATION
scan the query string for class names appearing in the from clause and replace with all persistent implementors of the class/interface returning multiple query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999784765159104	WITHOUT_CLASSIFICATION	2.1523484089491085E-5	IMPLEMENTATION
save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998482932961917	WITHOUT_CLASSIFICATION	1.517067038082862E-4	IMPLEMENTATION
evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998482932961917	WITHOUT_CLASSIFICATION	1.517067038082862E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999967225116416	WITHOUT_CLASSIFICATION	3.2774883584018924E-6	IMPLEMENTATION
if it is an uninitialized proxy pointing with this session then when it is accessed the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999999486580385	WITHOUT_CLASSIFICATION	5.1341961467650975E-8	IMPLEMENTATION
generate an explicit join for the root dot node. the implied joins will be collected and passed up to the root dot node.	WITHOUT_CLASSIFICATION	0.9999993230980689	WITHOUT_CLASSIFICATION	6.769019310484357E-7	IMPLEMENTATION
a session is considered to contain an entity only if the entity has an entry in the session's persistence context and the entry reports that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9970376027191534	WITHOUT_CLASSIFICATION	0.0029623972808465347	IMPLEMENTATION
does the collection referenced by this fromelement specify an order-by attribute? if so attach it to the query's order-by	WITHOUT_CLASSIFICATION	0.9999998852070194	WITHOUT_CLASSIFICATION	1.1479298065110354E-7	IMPLEMENTATION
and the token could be an identifer and the error is a mismatched token error	WITHOUT_CLASSIFICATION	0.9999844839970874	WITHOUT_CLASSIFICATION	1.551600291267183E-5	IMPLEMENTATION
if a where clause was specified in the update/delete query use it to limit the returned ids here	WITHOUT_CLASSIFICATION	0.9999996637204169	WITHOUT_CLASSIFICATION	3.362795830384503E-7	IMPLEMENTATION
int parameterstart = getwalker().getnumberofparametersinsetclause() list allparams = getidselectparameterspecifications() iterator whereparams = allparams.sublist( parameterstart allparams.size() ).iterator()	WITHOUT_CLASSIFICATION	0.9999768658046521	WITHOUT_CLASSIFICATION	2.3134195347856837E-5	IMPLEMENTATION
default implementation if this node has a data type and that data type is not an association then this is scalar.	WITHOUT_CLASSIFICATION	0.9999957334952326	WITHOUT_CLASSIFICATION	4.266504767425387E-6	IMPLEMENTATION
resolve the lhs fully generate implicit joins. pass in the property name so that the resolver can discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999919829262716	WITHOUT_CLASSIFICATION	8.017073728394793E-6	IMPLEMENTATION
if the propertytype is null and there isn't a parent just stop now there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999999199305317	WITHOUT_CLASSIFICATION	8.006946822605857E-8	IMPLEMENTATION
we do not look for an existing join on the same path because it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9937085988631127	WITHOUT_CLASSIFICATION	0.006291401136887384	IMPLEMENTATION
our parent is another dot node meaning we are being further dereferenced. thus we need to generate a join unless the parent refers to the associated entity's pk (because 'our' table would know the fk).	WITHOUT_CLASSIFICATION	0.9964775215643267	WITHOUT_CLASSIFICATION	0.0035224784356733254	IMPLEMENTATION
public final currency getcurrency(int col) throws hibernateexception {return (currency) get(col)}	WITHOUT_CLASSIFICATION	0.9999866679430088	WITHOUT_CLASSIFICATION	1.33320569910789E-5	IMPLEMENTATION
here we have two possibilities 1) the property-name matches the explicitly identifier property name 2) the property-name matches the implicit 'id' property name	WITHOUT_CLASSIFICATION	0.9999150961473544	WITHOUT_CLASSIFICATION	8.490385264562191E-5	IMPLEMENTATION
set the unresolved path in this node and the parent. set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999109100805722	WITHOUT_CLASSIFICATION	8.908991942775019E-5	IMPLEMENTATION
get the first child to be considered. sub-classes may do this differently in order to skip nodes that are not select expressions (e.g. distinct).	WITHOUT_CLASSIFICATION	0.9998997575828887	WITHOUT_CLASSIFICATION	1.0024241711133181E-4	IMPLEMENTATION
if this is an entity and the property is the identifier property then use getidentifiertype(). note that the propertyname.equals( propertypath ) checks whether we have a component key reference where the component class property name is the same as the entity id property name if the two are not equal this is the case and we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999961832707822	WITHOUT_CLASSIFICATION	3.816729217790872E-6	IMPLEMENTATION
for a subquery the alias to use depends on a few things (we already know this is not an overall select) 1) if this from_element represents a correlation to the outer-most query a) if the outer query represents a multi-table persister we need to use the given alias in anticipation of one of the multi-table executors being used (as this subquery will actually be used in the "id select" phase of that multi-table executor) b) otherwise we need to use the persister's table name as the column qualification 2) otherwise (not correlated) use the given alias	WITHOUT_CLASSIFICATION	0.9953064111053163	WITHOUT_CLASSIFICATION	0.004693588894683735	IMPLEMENTATION
not a collection? return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9990639619146765	WITHOUT_CLASSIFICATION	9.360380853234902E-4	IMPLEMENTATION
collection of <many-to-any/> mappings used to circumvent the component-collection check below	WITHOUT_CLASSIFICATION	0.999882560217273	WITHOUT_CLASSIFICATION	1.1743978272707888E-4	IMPLEMENTATION
otherwise the destination node was implied by the from clause and the from clause processor will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999974165583326	WITHOUT_CLASSIFICATION	2.5834416673002835E-6	IMPLEMENTATION
if the first identifier in the path referrs to the class alias (not the class name) then this is a correlated subselect. if it's a correlated sub-select use the existing table alias. otherwise generate a new one.	WITHOUT_CLASSIFICATION	0.9999979979739738	WITHOUT_CLASSIFICATION	2.0020260261121283E-6	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.999994128793667	WITHOUT_CLASSIFICATION	5.871206333046194E-6	IMPLEMENTATION
an ident node can represent an index expression if the ident represents a naked property ref note this makes the assumption (which is currently the case in the hql-sql grammar) that the ident is first resolved itself (addrexpr -> resolve()). the other option if that changes is to call resolve from here but it is currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999585157167	WITHOUT_CLASSIFICATION	4.1484283329461734E-8	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9999128201080082	WITHOUT_CLASSIFICATION	8.717989199184692E-5	IMPLEMENTATION
if this is an implied join in a from clause then use ansi-style joining and set the flag on the fromelement that indicates that it was implied in the from clause itself.	WITHOUT_CLASSIFICATION	0.9999998519473658	WITHOUT_CLASSIFICATION	1.480526341445158E-7	IMPLEMENTATION
origin.adddestination(destination) add the query spaces.	WITHOUT_CLASSIFICATION	0.9999756049206691	WITHOUT_CLASSIFICATION	2.4395079331004503E-5	IMPLEMENTATION
for an explicit many-to-many relationship add a second join from the intermediate (many-to-many) table to the destination table. also make sure that the from element's idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.999994041672594	WITHOUT_CLASSIFICATION	5.958327405947585E-6	IMPLEMENTATION
reset the node type because the rest of the system is expecting from_fragment all we wanted was for the factory to create the right sub-class. this might get reset again later on anyway to make the sql generation simpler.	WITHOUT_CLASSIFICATION	0.9999849555605486	WITHOUT_CLASSIFICATION	1.5044439451412743E-5	IMPLEMENTATION
explicit = true this is an explict select. arraylist sqlresulttypelist = new arraylist()	WITHOUT_CLASSIFICATION	0.9999959619147052	WITHOUT_CLASSIFICATION	4.038085294851735E-6	IMPLEMENTATION
sqlresulttypelist.add( type ) generate the select expression.	WITHOUT_CLASSIFICATION	0.9999861174487816	WITHOUT_CLASSIFICATION	1.3882551218331698E-5	IMPLEMENTATION
if the expression list has exactly one expression and the type of the expression is a collection then this might be a collection function such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999998952675018	WITHOUT_CLASSIFICATION	1.0473249830759098E-7	IMPLEMENTATION
need to parse off the column qualifiers this is assuming (which is true as of now) that this is only used from update and delete hql statement parsing	WITHOUT_CLASSIFICATION	0.9999726319085892	WITHOUT_CLASSIFICATION	2.736809141081595E-5	IMPLEMENTATION
for regression testing against output from the old parser found it easiest to simply reorder the fromelements here into ascending order in terms of injecting them into the resulting sql ast in orders relative to those expected by the old parser this is definitely another of those "only needed for regression purposes". the syntheticandfactory then simply injects them as it encounters them.	WITHOUT_CLASSIFICATION	0.9999947374399552	WITHOUT_CLASSIFICATION	5.262560044900141E-6	IMPLEMENTATION
the uber-rule here is that we need to include subclass joins if the fromelement is in any way dereferenced by a property from the subclass table otherwise we end up with column references qualified by a non-existent table reference in the resulting sql	WITHOUT_CLASSIFICATION	0.9999850053301321	WITHOUT_CLASSIFICATION	1.4994669867830917E-5	IMPLEMENTATION
classic translator does not support collection of ordinal param metadata	WITHOUT_CLASSIFICATION	0.9977847011060503	WITHOUT_CLASSIFICATION	0.0022152988939495924	IMPLEMENTATION
the following variables are stacks that keep information about each subexpression in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.999999942030243	WITHOUT_CLASSIFICATION	5.796975710160703E-8	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.999999989524573	WITHOUT_CLASSIFICATION	1.0475427014213405E-8	IMPLEMENTATION
should not be able to reach last without maxposition being set unless there are no results	WITHOUT_CLASSIFICATION	0.9999818897838697	WITHOUT_CLASSIFICATION	1.8110216130320934E-5	IMPLEMENTATION
we found it in the temp pc. should indicate we are in the midst of processing a result set containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999963025563714	WITHOUT_CLASSIFICATION	3.6974436285601596E-6	IMPLEMENTATION
do not use proxiesbykey since not all proxies that point to this session's instances are in that collection!	WITHOUT_CLASSIFICATION	0.9987518302784657	WITHOUT_CLASSIFICATION	0.0012481697215343554	IMPLEMENTATION
if there is no tm configured we will not be able to access the javax.transaction.transaction object in order to register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999999720514084	WITHOUT_CLASSIFICATION	2.7948591615144975E-8	IMPLEMENTATION
since the result set cursor is always left at the first physical row after the "last processed" we need to jump back one position to get the key value we are interested in skipping	WITHOUT_CLASSIFICATION	0.9999986176740212	WITHOUT_CLASSIFICATION	1.382325978770066E-6	IMPLEMENTATION
true if this is a query and we are loading multiple instances of the same collection role otherwise this is a collectioninitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999929234834625	WITHOUT_CLASSIFICATION	7.076516537486712E-6	IMPLEMENTATION
we don't need to worry about existing version being uninitialized because this block isn't called by a re-entrant load (re-entrant loads _always_ have lock mode none)	WITHOUT_CLASSIFICATION	0.9997410839631139	WITHOUT_CLASSIFICATION	2.5891603688614424E-4	IMPLEMENTATION
add temp entry so that the next step is circular-reference safe - only needed because some types don't take proper advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.6632211031356421	WITHOUT_CLASSIFICATION	0.3367788968643579	IMPLEMENTATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999998964351373	WITHOUT_CLASSIFICATION	1.0356486263893582E-7	IMPLEMENTATION
log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9916662505327295	WITHOUT_CLASSIFICATION	0.00833374946727057	IMPLEMENTATION
ps.close() just close it do not try to return it to the pool! note early exit!	WITHOUT_CLASSIFICATION	0.9999493275217987	WITHOUT_CLASSIFICATION	5.067247820128363E-5	IMPLEMENTATION
this has been shown to happen occasionally in rare cases when using a transaction manager + transaction-timeout where the timeout calls back through hibernate's registered transaction synchronization on a separate "reaping" thread. in cases where that reaping thread executes through this block at the same time the main application thread does we can get into situations where these cmes occur. and though it is not "allowed" per-se the end result without handling it specifically is infinite looping. so here we simply break the loop	WITHOUT_CLASSIFICATION	0.9989154522226271	WITHOUT_CLASSIFICATION	0.0010845477773728939	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9996207606044493	WITHOUT_CLASSIFICATION	3.792393955506819E-4	IMPLEMENTATION
can't cache this stuff either (per-invocation) we are given a map of user-alias -> lock mode create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999990565759206	WITHOUT_CLASSIFICATION	9.434240795110777E-7	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns getcollectiontable().createuniquekey( getidentifier().getconstraintcolumns() )	WITHOUT_CLASSIFICATION	0.998459945485408	WITHOUT_CLASSIFICATION	0.0015400545145920431	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999866983675206	WITHOUT_CLASSIFICATION	1.330163247933825E-5	IMPLEMENTATION
isset = collection.isset() issorted = collection.issorted()	WITHOUT_CLASSIFICATION	0.999932585452814	WITHOUT_CLASSIFICATION	6.741454718589854E-5	IMPLEMENTATION
lists arrays sets maps bags	WITHOUT_CLASSIFICATION	0.9999916795290276	WITHOUT_CLASSIFICATION	8.320470972529497E-6	IMPLEMENTATION
we finish all the "removes" first to take care of possible unique constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9994456171023791	WITHOUT_CLASSIFICATION	5.54382897620842E-4	IMPLEMENTATION
use a combination of foreign key columns and pk columns since the ordering of removal and addition is not guaranteed when a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9998423102820709	WITHOUT_CLASSIFICATION	1.5768971792915818E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999866983675206	WITHOUT_CLASSIFICATION	1.330163247933825E-5	IMPLEMENTATION
information about properties of this class including inherited properties (only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.5590628012950738	WITHOUT_CLASSIFICATION	0.4409371987049263	IMPLEMENTATION
all this only really needs to consider properties of this class not its subclasses but since we are reusing code used for sequential selects we use the subclass closure	WITHOUT_CLASSIFICATION	0.9999939404018671	WITHOUT_CLASSIFICATION	6.059598132897081E-6	IMPLEMENTATION
here we render the select column list based on the properties defined as being generated. for partial component generation we currently just re-select the whole component rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999260445056802	WITHOUT_CLASSIFICATION	7.395549431977384E-5	IMPLEMENTATION
this is the root (versioned) table and we are using version-based optimistic locking if we are not updating the version also don't check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9971615803422121	WITHOUT_CLASSIFICATION	0.002838419657787931	IMPLEMENTATION
optimistic-lock="all" include all updatable properties optimistic-lock="dirty" include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999901377833099	WITHOUT_CLASSIFICATION	9.86221669021282E-6	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9997504857602556	WITHOUT_CLASSIFICATION	2.4951423974441773E-4	IMPLEMENTATION
check to see if the connection is in auto-commit mode (no connection means aggressive connection release outside a jta transaction context so must be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999916412330212	WITHOUT_CLASSIFICATION	8.358766978918133E-6	IMPLEMENTATION
need to treat this as if it where optimistic-lock="all" (dirty does not make sense) first we need to locate the "loaded" state note it potentially could be a proxy so perform the location the safe way	WITHOUT_CLASSIFICATION	0.9944987948668035	WITHOUT_CLASSIFICATION	0.00550120513319649	IMPLEMENTATION
we always assume an instance with a null identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999996776118267	WITHOUT_CLASSIFICATION	3.2238817324738207E-7	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9993566690815164	WITHOUT_CLASSIFICATION	6.433309184835068E-4	IMPLEMENTATION
allow any identifier quoted with backtick only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999078526351425	WITHOUT_CLASSIFICATION	9.214736485751349E-5	IMPLEMENTATION
following doesn't handle (null not null) but unnecessary since this would mean all rows	WITHOUT_CLASSIFICATION	0.99688281064056	WITHOUT_CLASSIFICATION	0.003117189359440174	IMPLEMENTATION
impl note due to the delayed population of setters (setters cached for performance) we really cannot pro0perly define equality for this transformer	WITHOUT_CLASSIFICATION	0.9999994786826935	WITHOUT_CLASSIFICATION	5.213173065410869E-7	IMPLEMENTATION
we need to dirty check collections since they can cause an owner version number increment	WITHOUT_CLASSIFICATION	0.9877420537468674	WITHOUT_CLASSIFICATION	0.012257946253132545	IMPLEMENTATION
return the id so we can use it to reset the proxy id return result	WITHOUT_CLASSIFICATION	0.9999342759407747	WITHOUT_CLASSIFICATION	6.572405922533958E-5	IMPLEMENTATION
optimizer = getfactory().getsettings().getbytecodeprovider().getreflectionoptimizer( mappedclass getternames setternames proptypes )	WITHOUT_CLASSIFICATION	0.9998981144840776	WITHOUT_CLASSIFICATION	1.0188551592229498E-4	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9954802798156994	WITHOUT_CLASSIFICATION	0.004519720184300526	IMPLEMENTATION
we now have the value of the property-ref we reference. however we need to dig a little deeper as that property might also be an entity type in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999911626588508	WITHOUT_CLASSIFICATION	8.83734114912768E-6	IMPLEMENTATION
retrieve the value of the designated column in the current row of this resultset object as a java.io.reader object	WITHOUT_CLASSIFICATION	0.9999989387554526	WITHOUT_CLASSIFICATION	1.0612445472836066E-6	IMPLEMENTATION
not absolutely necessary but helps for some equals()/hashcode() implementations	WITHOUT_CLASSIFICATION	0.9985985855600197	WITHOUT_CLASSIFICATION	0.001401414439980326	IMPLEMENTATION
this should be a call to resolve() not resolveidentifier() 'cos it might be a property-ref and we did not cache the referenced value	WITHOUT_CLASSIFICATION	0.9975935500188249	WITHOUT_CLASSIFICATION	0.002406449981175185	IMPLEMENTATION
if we have <tt>not-found="ignore"</tt> association mapped to a formula we always need to dirty check it so we can update the second-level cache	WITHOUT_CLASSIFICATION	0.9997177793513717	WITHOUT_CLASSIFICATION	2.8222064862820905E-4	IMPLEMENTATION
can't just return null here since that would cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999805547455066	WITHOUT_CLASSIFICATION	1.944525449335475E-5	IMPLEMENTATION
for arrays replaceelements() may return a different reference since the array length might not match	WITHOUT_CLASSIFICATION	0.9999163494543605	WITHOUT_CLASSIFICATION	8.365054563946903E-5	IMPLEMENTATION
actual cache of the entries. soft references are used for both the keys and the values here since the values pertaining to the mru entries are kept in a seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999999992776929	WITHOUT_CLASSIFICATION	7.223071544792027E-10	IMPLEMENTATION
as soon as we encounter our first letter return the substring from that position	WITHOUT_CLASSIFICATION	0.9999955587028703	WITHOUT_CLASSIFICATION	4.441297129782738E-6	IMPLEMENTATION
note expected in the syntax type=listenerclass ({sep}type=listenerclass) where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999993179214648	WITHOUT_CLASSIFICATION	6.820785351660638E-7	IMPLEMENTATION
istransactioncallbackregistered denotes whether any hibernate transaction has registered as a callback against this jdbccontext only one such callback is allowed. directly serializing this value causes problems with jdbctransaction or really any transaction impl where the callback is local to the transaction instance itself since that transaction is not serialized along with the jdbccontext. thus we handle that fact here explicitly	WITHOUT_CLASSIFICATION	0.9995926659503063	WITHOUT_CLASSIFICATION	4.073340496937643E-4	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999578420483501	WITHOUT_CLASSIFICATION	4.2157951649921134E-5	IMPLEMENTATION
we call getkeyfromresultset() here so that we can know the key value upon which to perform the breaking logic. however it is also then called from getrowfromresultset() which is certainly not the most efficient. but the call here is needed and there currently is no other way without refactoring of the doquery()/getrowfromresultset() methods	WITHOUT_CLASSIFICATION	0.9520281004628743	IMPLEMENTATION	0.047971899537125724	WITHOUT_CLASSIFICATION
this check is needed since processing leaves the cursor after the last physical row for the current logical row thus if we are after the last physical row this might be caused by either 1) scrolling to the last logical row 2) scrolling past the last logical row in the latter scenario the previous logical row really is the last logical row. in all other cases we should process back two logical records (the current logic row plus the previous logical row).	WITHOUT_CLASSIFICATION	0.9998736231416335	WITHOUT_CLASSIFICATION	1.26376858366494E-4	IMPLEMENTATION
and perform the load	WITHOUT_CLASSIFICATION	0.999948193227587	WITHOUT_CLASSIFICATION	5.1806772413003226E-5	IMPLEMENTATION
important reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999568162967815	WITHOUT_CLASSIFICATION	4.3183703218498186E-5	IMPLEMENTATION
this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999937119846262	WITHOUT_CLASSIFICATION	6.288015373859455E-6	IMPLEMENTATION
we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999995204725719	WITHOUT_CLASSIFICATION	4.79527428111942E-7	IMPLEMENTATION
we did not find a collection element in the result set so we ensure that a collection is created with the owner's identifier since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999720876835069	WITHOUT_CLASSIFICATION	2.7912316493092215E-5	IMPLEMENTATION
this is a collection initializer so we must create a collection for each of the passed-in keys to account for the possibility that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999995185341262	WITHOUT_CLASSIFICATION	4.814658738492349E-7	IMPLEMENTATION
grab its state from the resultset and keep it in the session (but don't yet initialize the object itself) note that we acquire lockmode.read even if it was not requested	WITHOUT_CLASSIFICATION	0.9999999188020631	WITHOUT_CLASSIFICATION	8.119793689002108E-8	IMPLEMENTATION
a many-to-many decrement currentdepth here to allow join across the association table without exceeding max_fetch_depth (i.e. the "currentdepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9998999491438759	WITHOUT_CLASSIFICATION	1.0005085612403983E-4	IMPLEMENTATION
if not a composite key use "foo in (? ? ?)" for batching if no batch and not a composite key use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999255202314676	WITHOUT_CLASSIFICATION	7.447976853244992E-5	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9999367294070969	WITHOUT_CLASSIFICATION	6.327059290312148E-5	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.999994864414785	WITHOUT_CLASSIFICATION	5.135585215017364E-6	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.999994864414785	WITHOUT_CLASSIFICATION	5.135585215017364E-6	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999898631540034	WITHOUT_CLASSIFICATION	1.0136845996583396E-5	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999999227298779	WITHOUT_CLASSIFICATION	7.727012199920687E-8	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999787995330125	WITHOUT_CLASSIFICATION	2.1200466987523714E-5	IMPLEMENTATION
translates an ast join type (i.e. the token type) into a joinfragment.xxx join type. @param astjointype the ast join type (from hqlsqltokentypes or sqltokentypes) @return a joinfragment.xxx join type. @see joinfragment @see sqltokentypes	WITHOUT_CLASSIFICATION	0.9999974055331149	WITHOUT_CLASSIFICATION	2.594466885150872E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999811696177182	WITHOUT_CLASSIFICATION	1.8830382281842172E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999811696177182	WITHOUT_CLASSIFICATION	1.8830382281842172E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999666211455027	WITHOUT_CLASSIFICATION	3.3378854497269036E-5	IMPLEMENTATION
public list getcollectionaliases() { return collectionaliases } public list getcollectionowners() { return collectionowners } public list getcollectionowneraliases() { return collectionowneraliases } public list getcollectionpersisters() { return collectionpersisters } public map getalias2persister() { return alias2persister } public boolean iscollectioninitializer() { return iscollectioninitializer } public list getpersisters() { return persisters } public map getalias2owneralias() { return alias2owneralias } public list getscalartypes() { return scalartypes } public list getscalarcolumnaliases() { return scalarcolumnaliases } public list getpropertyresults() { return propertyresults } public list getcollectionpropertyresults() { return collectionresults } public map getalias2return() { return alias2return }	WITHOUT_CLASSIFICATION	0.9999951516726547	WITHOUT_CLASSIFICATION	4.848327345244151E-6	IMPLEMENTATION
sqlqueryparser parser = new sqlqueryparser( sqlquery processor.getalias2persister() processor.getalias2return() aliases collaliases collpersisters suffixes collsuffixes ) sql = parser.process() namedparameterbindpoints = parser.getnamedparameters()	WITHOUT_CLASSIFICATION	0.9999291382409147	WITHOUT_CLASSIFICATION	7.086175908534743E-5	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9999027939114095	WITHOUT_CLASSIFICATION	9.720608859046496E-5	IMPLEMENTATION
sqlaliassuffixes[i] = element.getcolumnaliassuffix()	WITHOUT_CLASSIFICATION	0.999932585452814	WITHOUT_CLASSIFICATION	6.741454718589854E-5	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.999064377664668	WITHOUT_CLASSIFICATION	9.356223353319873E-4	IMPLEMENTATION
at this point we have (drivingsqlalias) the sql alias of the driving table corresponding to the given user alias. however the driving table is not (necessarily) the table against which we want to apply locks. mainly the exception case here is joined-subclass hierarchies where we instead want to apply the lock against the root table (for all other strategies it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.994193470675559	WITHOUT_CLASSIFICATION	0.005806529324441008	IMPLEMENTATION
the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999679659620654	WITHOUT_CLASSIFICATION	3.2034037934543045E-5	IMPLEMENTATION
we have a mapped identifier property and the root of the incoming property path matched that identifier property	WITHOUT_CLASSIFICATION	0.9996801032079424	WITHOUT_CLASSIFICATION	3.198967920574997E-4	IMPLEMENTATION
we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999742740358615	WITHOUT_CLASSIFICATION	2.5725964138497936E-5	IMPLEMENTATION
both many-to-one and one-to-one are represented as a property. entitypersister is relying on this value to determine "lazy fetch groups" in terms of field-level interception. so we need to make sure that we return true here for the case of many-to-one and one-to-one with lazy="no-proxy" impl note - lazy="no-proxy" currently forces both lazy and unwrap to be set to true. the other case we are extremely interested in here is that of lazy="proxy" where lazy is set to true but unwrap is set to false. thus we use both here under the assumption that this return is really only ever used during persister construction to determine the lazy property/field fetch groupings. if that assertion changes then this check needs to change as well. partially this is an issue with the overloading of the term "lazy" here	WITHOUT_CLASSIFICATION	0.9999999999098689	WITHOUT_CLASSIFICATION	9.013105008947451E-11	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989200909319	WITHOUT_CLASSIFICATION	1.0799090680243286E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989200909319	WITHOUT_CLASSIFICATION	1.0799090680243286E-6	IMPLEMENTATION
roottablename = persistentclass.getroottable().getqualifiedname( factory.getdialect() factory.getdefaultcatalog() factory.getdefaultschema() )	WITHOUT_CLASSIFICATION	0.9998981144840776	WITHOUT_CLASSIFICATION	1.0188551592229498E-4	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999948493436819	WITHOUT_CLASSIFICATION	5.15065631816243E-6	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999950805470462	WITHOUT_CLASSIFICATION	4.919452953826718E-6	IMPLEMENTATION
protected void initpropertypaths(final string pathfinal type typefinal string[] columnsfinal string[] formulatemplatesfinal mapping factory)throws mappingexception {addformulapropertypath(path type formulatemplates)initpropertypaths(path type columns formulatemplates factory)}	WITHOUT_CLASSIFICATION	0.9999966419861094	WITHOUT_CLASSIFICATION	3.35801389054842E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
custom sql (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999967799194187	WITHOUT_CLASSIFICATION	3.220080581270191E-6	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999939343171516	WITHOUT_CLASSIFICATION	6.065682848431502E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
aliases for identifier ( alias.id ) skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999993158617002	WITHOUT_CLASSIFICATION	6.84138299718486E-7	IMPLEMENTATION
decide which resultset to get the property value from	WITHOUT_CLASSIFICATION	0.9999944526820091	WITHOUT_CLASSIFICATION	5.547317990840745E-6	IMPLEMENTATION
note it is conceptually possible that a usertype could map null to a non-null value so the following is arguable	WITHOUT_CLASSIFICATION	0.9999487031381582	WITHOUT_CLASSIFICATION	5.129686184174847E-5	IMPLEMENTATION
the contract of entitytuplizer.determineconcretesubclassentityname says that returning null is an indication that the specified entity-name (this.getentityname) should be used.	WITHOUT_CLASSIFICATION	0.9999897085054258	WITHOUT_CLASSIFICATION	1.0291494574242542E-5	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9993566690815164	WITHOUT_CLASSIFICATION	6.433309184835068E-4	IMPLEMENTATION
cache these since they are stateless this one could even be static	WITHOUT_CLASSIFICATION	0.999982550784561	WITHOUT_CLASSIFICATION	1.744921543899719E-5	IMPLEMENTATION
"as" is not in keywords	WITHOUT_CLASSIFICATION	0.9998988257860024	WITHOUT_CLASSIFICATION	1.011742139976584E-4	IMPLEMENTATION
--commented out by inspection (12/4/04 910 am) public abstract void addcondition(string alias string[] columns string condition)	WITHOUT_CLASSIFICATION	0.9999999319694745	WITHOUT_CLASSIFICATION	6.803052564672561E-8	IMPLEMENTATION
use the id column alias	WITHOUT_CLASSIFICATION	0.9996352340669785	WITHOUT_CLASSIFICATION	3.647659330214869E-4	IMPLEMENTATION
private list aliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999943206712106	WITHOUT_CLASSIFICATION	5.679328789312632E-6	IMPLEMENTATION
columns.add(columnname) aliases.add(tablealias)	WITHOUT_CLASSIFICATION	0.9999572845381192	WITHOUT_CLASSIFICATION	4.2715461880808475E-5	IMPLEMENTATION
where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999669604163848	WITHOUT_CLASSIFICATION	3.3039583615210026E-5	IMPLEMENTATION
revert to traditional hibernate behavior of setting initialpoolsize to minpoolsize unless otherwise specified with a c3p0.-style parameter.	WITHOUT_CLASSIFICATION	0.9998472682303832	WITHOUT_CLASSIFICATION	1.527317696167552E-4	IMPLEMENTATION
arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9996852817742202	WITHOUT_CLASSIFICATION	3.147182257796826E-4	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9987015276102891	WITHOUT_CLASSIFICATION	0.0012984723897108885	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9987015276102891	WITHOUT_CLASSIFICATION	0.0012984723897108885	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999995763533138	WITHOUT_CLASSIFICATION	4.236466862343416E-7	IMPLEMENTATION
essentially 1) if we have a local (hibernate) transaction in progress and it already has the usertransaction cached use that usertransaction to determine the status. 2) if a transaction manager has been located use that transaction manager to determine the status. 3) finally as the last resort try to lookup the usertransaction via jndi and use that to determine the status.	WITHOUT_CLASSIFICATION	0.9999999253399168	WITHOUT_CLASSIFICATION	7.466008319636682E-8	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999767920930022	WITHOUT_CLASSIFICATION	2.3207906997825932E-5	IMPLEMENTATION
swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999741952441503	WITHOUT_CLASSIFICATION	2.5804755849667898E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999843720004501	WITHOUT_CLASSIFICATION	1.562799954990912E-5	IMPLEMENTATION
we need to dirty check many-to-ones with not-found="ignore" in order to update the cache (not the database) since in this case a null entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999820981550065	WITHOUT_CLASSIFICATION	1.7901844993466203E-5	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999872213525897	WITHOUT_CLASSIFICATION	1.277864741031159E-5	IMPLEMENTATION
regions can get instantiated in the course of normal work (e.g. a named query region will be created the first time the query is executed) so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999999997292441	WITHOUT_CLASSIFICATION	2.707558403046864E-10	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9998524916813943	WITHOUT_CLASSIFICATION	1.4750831860574636E-4	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.999903184504949	WITHOUT_CLASSIFICATION	9.681549505098316E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999595801041369	WITHOUT_CLASSIFICATION	4.041989586320372E-5	IMPLEMENTATION
note this is being used from the process of shutting down a sessionfactory. specific things to consider (1) this clearing of the region should not propagate to other nodes on the cluster (if any) this is the cache-mode-local option bit (2) really just trying a best effort to cleanup after ourselves lock failures etc are not critical here this is the fail-silently option bit	WITHOUT_CLASSIFICATION	0.968469728761485	WITHOUT_CLASSIFICATION	0.031530271238514984	IMPLEMENTATION
need to extract the component values and check for subtype replacements	WITHOUT_CLASSIFICATION	0.9999122368606734	WITHOUT_CLASSIFICATION	8.77631393265941E-5	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999952053999146	WITHOUT_CLASSIFICATION	4.794600085405222E-6	IMPLEMENTATION
for now just "re-flatten" the metamodel since this is temporary stuff anyway (hhh-1907)	WITHOUT_CLASSIFICATION	0.9999995509404647	WITHOUT_CLASSIFICATION	4.490595352822672E-7	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9999197945417677	WITHOUT_CLASSIFICATION	8.020545823227925E-5	IMPLEMENTATION
this solution would allow us to eliminate the owner arg to disassemble() but what if the collection was null and then later had elements added? seems unsafe session.getpersistencecontext().getcollectionentry( (persistentcollection) value ).getkey()	WITHOUT_CLASSIFICATION	0.9999789493011793	WITHOUT_CLASSIFICATION	2.1050698820757202E-5	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9998723662957361	WITHOUT_CLASSIFICATION	1.276337042639999E-4	IMPLEMENTATION
some collections are not lazy	WITHOUT_CLASSIFICATION	0.9970798637018811	WITHOUT_CLASSIFICATION	0.0029201362981189256	IMPLEMENTATION
here we don't want to suspend the tx. if we do 1) we might be caching query results that reflect uncommitted changes. no tx == no wl on cache node so other threads can prematurely see those query results 2) no tx == immediate replication. more overhead plus we spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9951993748063424	WITHOUT_CLASSIFICATION	0.004800625193657638	IMPLEMENTATION
return the (fully resolved) identifier value but do not resolve to the actual referenced entity instance note the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999934679481988	WITHOUT_CLASSIFICATION	6.5320518012410966E-6	IMPLEMENTATION
add a zero (or quite low) timeout option so we don't block. ignore any timeoutexception. basically we forego caching the query result in order to avoid blocking. reads are done with suspended tx so they should not hold the lock for long. not caching the query result is ok since any subsequent read will just see the old result with its out-of-date timestamp that result will be discarded and the db query performed again.	WITHOUT_CLASSIFICATION	0.9999999999767951	WITHOUT_CLASSIFICATION	2.320484221013045E-11	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999293637170584	WITHOUT_CLASSIFICATION	7.063628294153556E-5	IMPLEMENTATION
we have the jbcwritemutex so no other local thread will be trying to write this key. it's possible here some remote thread has come in and changed the values again but since we are reading the values to write to jbc right now we know we are writing the latest values i.e. we don't assume that what we cached in entry.update() above is what we should write to jbc now. our write could be redundant i.e. we are writing what some remote thread just came in an wrote. there is a chance that yet another remote thread will update us and we'll then overwrite that later data in jbc. but all remote nodes will ignore that change in their localcache the only place it will live will be in jbc where it can only effect the initial state transfer values on newly joined nodes (i.e. populatelocalcache()).	WITHOUT_CLASSIFICATION	0.9999988749385943	WITHOUT_CLASSIFICATION	1.1250614056877347E-6	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999869562041483	WITHOUT_CLASSIFICATION	1.3043795851528497E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999869562041483	WITHOUT_CLASSIFICATION	1.3043795851528497E-5	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9983434046792723	WITHOUT_CLASSIFICATION	0.001656595320727789	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9855131183140441	WITHOUT_CLASSIFICATION	0.014486881685956002	IMPLEMENTATION
we need to obtain the lock before any actions are executed since this may be an inverse="true" bidirectional association and it is one of the earlier entity actions which actually updates the database (this action is resposible for second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999828657922541	WITHOUT_CLASSIFICATION	1.7134207745831113E-5	IMPLEMENTATION
postdelete after actually deleting a row record the fact that the instance no longer exists on the database (needed for identity-column key generation) and remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999966319681831	WITHOUT_CLASSIFICATION	3.3680318167911177E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9993533616504017	WITHOUT_CLASSIFICATION	6.466383495983858E-4	IMPLEMENTATION
