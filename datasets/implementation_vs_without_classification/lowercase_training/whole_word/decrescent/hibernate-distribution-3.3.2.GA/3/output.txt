todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.6828153737817491	IMPLEMENTATION	0.31718462621825094	WITHOUT_CLASSIFICATION
todo add support for read_write ( + nonstrict_read_write ??? )	IMPLEMENTATION	0.6828153737817491	IMPLEMENTATION	0.31718462621825094	WITHOUT_CLASSIFICATION
todo return new lock(ts)	IMPLEMENTATION	0.9201797931643829	WITHOUT_CLASSIFICATION	0.07982020683561716	IMPLEMENTATION
todo if lock.gettimestamp().equals(ts)	IMPLEMENTATION	0.9344740085726386	WITHOUT_CLASSIFICATION	0.06552599142736143	IMPLEMENTATION
todo mappings.getlogicaltablename(ownertable)	IMPLEMENTATION	0.6204112716724279	WITHOUT_CLASSIFICATION	0.37958872832757207	IMPLEMENTATION
todo handle typedefs	IMPLEMENTATION	0.6687894532136702	IMPLEMENTATION	0.33121054678632983	WITHOUT_CLASSIFICATION
todo check there is no actual definition elemnents when a ref is defined	IMPLEMENTATION	0.80167028014348	WITHOUT_CLASSIFICATION	0.19832971985652004	IMPLEMENTATION
todo bindpropertyresults(alias returnelem)	IMPLEMENTATION	0.6204112716724279	WITHOUT_CLASSIFICATION	0.37958872832757207	IMPLEMENTATION
todo validate existing of property with the chosen name. (secondpass )	IMPLEMENTATION	0.8750372555892906	WITHOUT_CLASSIFICATION	0.12496274441070937	IMPLEMENTATION
todo native ids	IMPLEMENTATION	0.5485434693722334	WITHOUT_CLASSIFICATION	0.45145653062776664	IMPLEMENTATION
todo if we are using identity columns fetch the identifier	IMPLEMENTATION	0.9969750328007662	WITHOUT_CLASSIFICATION	0.003024967199233857	IMPLEMENTATION
todo handle property-ref	IMPLEMENTATION	0.5376608319781732	WITHOUT_CLASSIFICATION	0.4623391680218268	IMPLEMENTATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.9219923037623912	IMPLEMENTATION	0.07800769623760888	WITHOUT_CLASSIFICATION
todo get all properties not just the fetched ones!	IMPLEMENTATION	0.9219923037623912	IMPLEMENTATION	0.07800769623760888	WITHOUT_CLASSIFICATION
todo check if mimer sql cannot handle the way db2 does	IMPLEMENTATION	0.9962905066147743	WITHOUT_CLASSIFICATION	0.0037094933852257154	IMPLEMENTATION
todo restrict violation	IMPLEMENTATION	0.8558401999491018	WITHOUT_CLASSIFICATION	0.14415980005089818	IMPLEMENTATION
todo lowercasing done here. was done "at random" before maybe not needed at all ?	IMPLEMENTATION	0.9999971312518232	IMPLEMENTATION	2.8687481767623153E-6	WITHOUT_CLASSIFICATION
todo tolowercase was not done before. only used in template.	IMPLEMENTATION	0.9316382410862593	WITHOUT_CLASSIFICATION	0.06836175891374072	IMPLEMENTATION
add an entry for this type of entity. we can be assured that all referenced entities have already been processed so specify that this entity is with the latest batch. doing the batch number before adding the name to the list is a faster way to get an accurate number.	IMPLEMENTATION	0.9999824265710738	WITHOUT_CLASSIFICATION	1.7573428926119296E-5	IMPLEMENTATION
todo avoid this for non-new instances where mightbedirty==false	IMPLEMENTATION	0.5821703961916613	IMPLEMENTATION	0.41782960380833856	WITHOUT_CLASSIFICATION
todo optimize away this lookup for entities w/o unsaved-value="undefined"	IMPLEMENTATION	0.8055551059080606	WITHOUT_CLASSIFICATION	0.19444489409193946	IMPLEMENTATION
we could move this inside if we wanted to tolerate collection initializations during collection dirty checking	IMPLEMENTATION	0.9999217126657884	WITHOUT_CLASSIFICATION	7.828733421161432E-5	IMPLEMENTATION
todo assertion only could be optimized away	IMPLEMENTATION	0.7916575905823575	WITHOUT_CLASSIFICATION	0.20834240941764257	IMPLEMENTATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.8517402315635623	IMPLEMENTATION	0.14825976843643765	WITHOUT_CLASSIFICATION
todo check that entry.getidentifier().equals(requestedid)	IMPLEMENTATION	0.8517402315635623	IMPLEMENTATION	0.14825976843643765	WITHOUT_CLASSIFICATION
todo why aren't these the same?	IMPLEMENTATION	0.9655269755150531	IMPLEMENTATION	0.03447302448494688	WITHOUT_CLASSIFICATION
todo always true for now but not if we later decide to support elements() in the from clause	IMPLEMENTATION	0.9593540238980246	WITHOUT_CLASSIFICATION	0.04064597610197544	IMPLEMENTATION
todo or should we return 'containstablealias'??	IMPLEMENTATION	0.7844504257585924	WITHOUT_CLASSIFICATION	0.2155495742414077	IMPLEMENTATION
todo arithmetic expressions multiple new foo()	IMPLEMENTATION	0.7423797398009208	WITHOUT_CLASSIFICATION	0.25762026019907935	IMPLEMENTATION
todo for some dialects it would be appropriate to add the renderorderbypropertiesselect() to other select strings	IMPLEMENTATION	0.9567068341977065	IMPLEMENTATION	0.04329316580229341	WITHOUT_CLASSIFICATION
todo cache the persister this shows up in yourkit	IMPLEMENTATION	0.8827549518719552	WITHOUT_CLASSIFICATION	0.11724504812804475	IMPLEMENTATION
todo theoretically non-threadsafe	IMPLEMENTATION	0.6204112716724279	WITHOUT_CLASSIFICATION	0.37958872832757207	IMPLEMENTATION
todo look at optimizing these	IMPLEMENTATION	0.7821362993193516	WITHOUT_CLASSIFICATION	0.21786370068064845	IMPLEMENTATION
todo maybe call it getrowselection() ?	IMPLEMENTATION	0.9736135789471317	IMPLEMENTATION	0.026386421052868227	WITHOUT_CLASSIFICATION
todo make this handle multiple collection roles!	IMPLEMENTATION	0.9613408979654794	IMPLEMENTATION	0.03865910203452063	WITHOUT_CLASSIFICATION
todo can we limit stored procedures ?!	IMPLEMENTATION	0.5861133010074278	IMPLEMENTATION	0.4138866989925723	WITHOUT_CLASSIFICATION
todo not visible to the user!	IMPLEMENTATION	0.8628055180312529	IMPLEMENTATION	0.13719448196874703	WITHOUT_CLASSIFICATION
todo unnecessary for databases with ansi-style joins	IMPLEMENTATION	0.8872380845128023	WITHOUT_CLASSIFICATION	0.11276191548719774	IMPLEMENTATION
todo use these in methods above	IMPLEMENTATION	0.8491075268639072	WITHOUT_CLASSIFICATION	0.15089247313609278	IMPLEMENTATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.7620813729333722	IMPLEMENTATION	0.2379186270666279	WITHOUT_CLASSIFICATION
todo better error message since we actually support composites if names are explicitly listed.	IMPLEMENTATION	0.7620813729333722	IMPLEMENTATION	0.2379186270666279	WITHOUT_CLASSIFICATION
todo temporary initial step towards hhh-1907	IMPLEMENTATION	0.8948623791776352	WITHOUT_CLASSIFICATION	0.10513762082236477	IMPLEMENTATION
todo remove this once componentmetamodel is complete and merged	IMPLEMENTATION	0.7778548123202677	WITHOUT_CLASSIFICATION	0.22214518767973238	IMPLEMENTATION
todo handle supportsnotnullunique=false but such a case does not exist in the wild so far	IMPLEMENTATION	0.9965067633407275	WITHOUT_CLASSIFICATION	0.0034932366592724073	IMPLEMENTATION
todo still need to make collectionpersisters entitymode-aware	IMPLEMENTATION	0.98672111436415	IMPLEMENTATION	0.013278885635849998	WITHOUT_CLASSIFICATION
todo add owner argument!!	IMPLEMENTATION	0.7519226213037493	WITHOUT_CLASSIFICATION	0.24807737869625063	IMPLEMENTATION
todo formulas ?	IMPLEMENTATION	0.5475060267817092	IMPLEMENTATION	0.4524939732182909	WITHOUT_CLASSIFICATION
todo include the rowids!!!!	IMPLEMENTATION	0.8913839327922878	WITHOUT_CLASSIFICATION	0.10861606720771218	IMPLEMENTATION
todo cache this sql	IMPLEMENTATION	0.6135755890955138	WITHOUT_CLASSIFICATION	0.3864244109044863	IMPLEMENTATION
todo create uk loaders for component properties	IMPLEMENTATION	0.9622119472881572	WITHOUT_CLASSIFICATION	0.03778805271184281	IMPLEMENTATION
todo cache this in an instvar	IMPLEMENTATION	0.9859343208866927	WITHOUT_CLASSIFICATION	0.014065679113307184	IMPLEMENTATION
/ todo look at perhaps caching this	IMPLEMENTATION	0.8345367801109446	IMPLEMENTATION	0.16546321988905546	WITHOUT_CLASSIFICATION
todo eventually put this back in once we think all is fixed object otheralias = columnsunique.put(qualifiedcolumn columnalias)	IMPLEMENTATION	0.5623550101625182	WITHOUT_CLASSIFICATION	0.43764498983748173	IMPLEMENTATION
todo if we support multiple fetch groups we would need to clone the set of lazy properties!	IMPLEMENTATION	0.5334908762046982	WITHOUT_CLASSIFICATION	0.4665091237953018	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.5825557912412478	WITHOUT_CLASSIFICATION	0.4174442087587523	IMPLEMENTATION
todo terrible implementation!	IMPLEMENTATION	0.7661894458679361	WITHOUT_CLASSIFICATION	0.23381055413206397	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.5825557912412478	WITHOUT_CLASSIFICATION	0.4174442087587523	IMPLEMENTATION
todo i don't really like this implementation it would be better if this was handled by searchfordirtycollections()	IMPLEMENTATION	0.7647450563528976	IMPLEMENTATION	0.2352549436471024	WITHOUT_CLASSIFICATION
todo check if key contains the owner id	IMPLEMENTATION	0.7097991488578316	WITHOUT_CLASSIFICATION	0.2902008511421684	IMPLEMENTATION
todo proxies!	IMPLEMENTATION	0.5825557912412478	WITHOUT_CLASSIFICATION	0.4174442087587523	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9999005806243225	WITHOUT_CLASSIFICATION	9.941937567757098E-5	IMPLEMENTATION
table=null -> an association - fill it in later todo fill in the mappings for table == null	IMPLEMENTATION	0.9999005806243225	WITHOUT_CLASSIFICATION	9.941937567757098E-5	IMPLEMENTATION
if we are still not resolved we might represent a constant. needed to add this here because the allowance of naked-prop-refs in the grammar collides with the definition of literals/constants ("nondeterminism"). todo cleanup the grammar so that "processconstants" is always just handled from here	IMPLEMENTATION	0.9586569436711017	IMPLEMENTATION	0.041343056328898314	WITHOUT_CLASSIFICATION
todo add referencedclass to disambiguate to fks on the same columns pointing to different tables	IMPLEMENTATION	0.758918274825829	WITHOUT_CLASSIFICATION	0.24108172517417098	IMPLEMENTATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999947277945845	WITHOUT_CLASSIFICATION	5.272205415400645E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999908136350087	WITHOUT_CLASSIFICATION	9.186364991351646E-6	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999908136350087	WITHOUT_CLASSIFICATION	9.186364991351646E-6	IMPLEMENTATION
| this | bean | args | raw bean |	WITHOUT_CLASSIFICATION	0.9998977841954292	WITHOUT_CLASSIFICATION	1.0221580457083772E-4	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
astore 4 store the raw bean	WITHOUT_CLASSIFICATION	0.999959267911226	WITHOUT_CLASSIFICATION	4.07320887740288E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999202226386575	WITHOUT_CLASSIFICATION	7.977736134241857E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999202226386575	WITHOUT_CLASSIFICATION	7.977736134241857E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999432708878175	WITHOUT_CLASSIFICATION	5.6729112182462835E-5	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999181672736077	WITHOUT_CLASSIFICATION	8.183272639227871E-5	IMPLEMENTATION
putfield new value of the field	WITHOUT_CLASSIFICATION	0.9999927423740019	WITHOUT_CLASSIFICATION	7.257625997993461E-6	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999734735006548	WITHOUT_CLASSIFICATION	2.6526499345213453E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999981191890198	WITHOUT_CLASSIFICATION	1.8808109800861397E-6	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999981191890198	WITHOUT_CLASSIFICATION	1.8808109800861397E-6	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999778649535997	WITHOUT_CLASSIFICATION	2.2135046400246944E-5	IMPLEMENTATION
just decrement the lock don't recache (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9968656766502245	WITHOUT_CLASSIFICATION	0.0031343233497754873	IMPLEMENTATION
decode row selection	WITHOUT_CLASSIFICATION	0.9999651585934108	WITHOUT_CLASSIFICATION	3.4841406589140185E-5	IMPLEMENTATION
disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999977881375908	WITHOUT_CLASSIFICATION	2.2118624092458516E-6	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999831061412553	WITHOUT_CLASSIFICATION	1.6893858744761426E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9999043729048349	WITHOUT_CLASSIFICATION	9.562709516499937E-5	IMPLEMENTATION
row id	WITHOUT_CLASSIFICATION	0.9998947981055432	WITHOUT_CLASSIFICATION	1.052018944568494E-4	IMPLEMENTATION
composite-id	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9998987043564639	WITHOUT_CLASSIFICATION	1.0129564353608998E-4	IMPLEMENTATION
property prop = new property() prop.setname("id") prop.setpropertyaccessorname("embedded") prop.setvalue(id) entity.setidentifierproperty(prop)	WITHOUT_CLASSIFICATION	0.9998146315067855	WITHOUT_CLASSIFICATION	1.8536849321450317E-4	IMPLEMENTATION
dynamic insert	WITHOUT_CLASSIFICATION	0.9999518804264568	WITHOUT_CLASSIFICATION	4.8119573543249404E-5	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999588719923327	WITHOUT_CLASSIFICATION	4.112800766728611E-5	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999960295048892	WITHOUT_CLASSIFICATION	3.9704951107675505E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999504996870707	WITHOUT_CLASSIFICATION	4.950031292934469E-5	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999504996870707	WITHOUT_CLASSIFICATION	4.950031292934469E-5	IMPLEMENTATION
generated properties can never be insertable	WITHOUT_CLASSIFICATION	0.9939792369409852	WITHOUT_CLASSIFICATION	0.006020763059014766	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999767059253621	WITHOUT_CLASSIFICATION	2.329407463786872E-5	IMPLEMENTATION
by default natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999980173308565	WITHOUT_CLASSIFICATION	1.982669143473006E-6	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999573961060887	WITHOUT_CLASSIFICATION	4.260389391137655E-5	IMPLEMENTATION
we found some extends attributes referencing entities which were not already processed. here we need to locate all entity-names and class-names contained in this document itself making sure that these get removed from the extendz list such that only extends names which require us to delay processing (i.e. external to this document and not yet processed) are contained in the returned result	WITHOUT_CLASSIFICATION	0.6068984897328465	WITHOUT_CLASSIFICATION	0.39310151026715345	IMPLEMENTATION
build a resultsetmappingdefinition given a containing element for the "return-xxx" elements @param resultsetelem the element containing the return definitions. @param path no clue @param mappings the current processing state. @return the description of the mappings	WITHOUT_CLASSIFICATION	0.9999888409224211	WITHOUT_CLASSIFICATION	1.1159077578837266E-5	IMPLEMENTATION
private boolean showsql private boolean formatsql	WITHOUT_CLASSIFICATION	0.9999738503748803	WITHOUT_CLASSIFICATION	2.6149625119705725E-5	IMPLEMENTATION
public boolean isshowsqlenabled() { return showsql } public boolean isformatsqlenabled() { return formatsql }	WITHOUT_CLASSIFICATION	0.9999792755881505	WITHOUT_CLASSIFICATION	2.07244118496227E-5	IMPLEMENTATION
set a custom entity resolver. this entity resolver must be set before addxxx(misc) call. default value is {@link org.hibernate.util.dtdentityresolver} @param entityresolver entity resolver to use	WITHOUT_CLASSIFICATION	0.9999811469133609	WITHOUT_CLASSIFICATION	1.885308663899944E-5	IMPLEMENTATION
final list extendsqueue	WITHOUT_CLASSIFICATION	0.9999511240282828	WITHOUT_CLASSIFICATION	4.887597171729445E-5	IMPLEMENTATION
if close() is called guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999981569527144	WITHOUT_CLASSIFICATION	1.8430472855887903E-6	IMPLEMENTATION
if a threadlocalsessioncontext-bound session happens to get serialized to be completely correct we need to make sure that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9998956047776802	WITHOUT_CLASSIFICATION	1.0439522231981975E-4	IMPLEMENTATION
on the inverse it makes sense that if a threadlocalsessioncontext- bound session then gets deserialized to go ahead and re-bind it to the threadlocalsessioncontext session map.	WITHOUT_CLASSIFICATION	0.9999779271564457	WITHOUT_CLASSIFICATION	2.20728435543057E-5	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999964223960228	WITHOUT_CLASSIFICATION	3.577603977121295E-6	IMPLEMENTATION
60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999721805068187	WITHOUT_CLASSIFICATION	2.7819493181343782E-5	IMPLEMENTATION
optimisticcache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999136886038719	WITHOUT_CLASSIFICATION	8.631139612812532E-5	IMPLEMENTATION
cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998439058493882	WITHOUT_CLASSIFICATION	1.5609415061182673E-4	IMPLEMENTATION
option.setdataversion( nonlockingdataversion.instance )	WITHOUT_CLASSIFICATION	0.9998590469322924	WITHOUT_CLASSIFICATION	1.4095306770751172E-4	IMPLEMENTATION
do the put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9993366873620346	WITHOUT_CLASSIFICATION	6.633126379654655E-4	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
tree cache in optimistic mode seems to have as very difficult time with remove calls on non-existent nodes (npes)	WITHOUT_CLASSIFICATION	0.9999698910911556	WITHOUT_CLASSIFICATION	3.0108908844390083E-5	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999731459763516	WITHOUT_CLASSIFICATION	2.6854023648403E-5	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999731459763516	WITHOUT_CLASSIFICATION	2.6854023648403E-5	IMPLEMENTATION
do the failfast put outside the scope of the jta txn	WITHOUT_CLASSIFICATION	0.9993366873620346	WITHOUT_CLASSIFICATION	6.633126379654655E-4	IMPLEMENTATION
note evict() operates locally only (i.e. does not propogate to any other nodes in the potential cluster). this is exactly what is needed when we destroy() here destroy() is used as part of the process of shutting down a sessionfactory thus these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9640561787250315	IMPLEMENTATION	0.03594382127496854	WITHOUT_CLASSIFICATION
protected regionrootlistener listener	WITHOUT_CLASSIFICATION	0.9998721121986743	WITHOUT_CLASSIFICATION	1.2788780132560746E-4	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.999701482700995	WITHOUT_CLASSIFICATION	2.985172990049426E-4	IMPLEMENTATION
if we've been blocking for the mutex perhaps another thread has already reestablished the root. in case the node was reestablised via replication confirm it's marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999983674410413	WITHOUT_CLASSIFICATION	1.6325589587268324E-6	IMPLEMENTATION
for pessimistic locking we just want to toss out our ref to any old invalid root node and get the latest (may be null)	WITHOUT_CLASSIFICATION	0.9999979462205294	WITHOUT_CLASSIFICATION	2.053779470614056E-6	IMPLEMENTATION
the rest only matters for optimistic locking where we need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9840462610576555	WITHOUT_CLASSIFICATION	0.01595373894234454	IMPLEMENTATION
don't hold a transactional lock for this	WITHOUT_CLASSIFICATION	0.9999537246358077	WITHOUT_CLASSIFICATION	4.627536419227864E-5	IMPLEMENTATION
make sure the root node for the region exists and has a dataversion that never complains	WITHOUT_CLASSIFICATION	0.995887612116013	WITHOUT_CLASSIFICATION	0.004112387883987047	IMPLEMENTATION
never evict this node	WITHOUT_CLASSIFICATION	0.9978957416230494	WITHOUT_CLASSIFICATION	0.0021042583769505557	IMPLEMENTATION
fix up the resident flag	WITHOUT_CLASSIFICATION	0.9986872179995655	WITHOUT_CLASSIFICATION	0.001312782000434448	IMPLEMENTATION
60 seconds	WITHOUT_CLASSIFICATION	0.9999731459763516	WITHOUT_CLASSIFICATION	2.6854023648403E-5	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999516503379992	WITHOUT_CLASSIFICATION	4.83496620007424E-5	IMPLEMENTATION
no-op. we don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9954422233667969	WITHOUT_CLASSIFICATION	0.004557776633203075	IMPLEMENTATION
this should only be possible if the caches are constructor injected	WITHOUT_CLASSIFICATION	0.9999907144570773	WITHOUT_CLASSIFICATION	9.285542922641745E-6	IMPLEMENTATION
we only build caches if none were passed in. passing in caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.99999644674563	WITHOUT_CLASSIFICATION	3.5532543698639E-6	IMPLEMENTATION
set up the cache factory	WITHOUT_CLASSIFICATION	0.9999673393845624	WITHOUT_CLASSIFICATION	3.266061543767244E-5	IMPLEMENTATION
see if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999983920245616	WITHOUT_CLASSIFICATION	1.6079754383852712E-6	IMPLEMENTATION
default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999980471281636	WITHOUT_CLASSIFICATION	1.9528718363686587E-6	IMPLEMENTATION
default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999986951829566	WITHOUT_CLASSIFICATION	1.3048170433321374E-6	IMPLEMENTATION
for timestamps we default to a separate config	WITHOUT_CLASSIFICATION	0.9999968520376284	WITHOUT_CLASSIFICATION	3.147962371478615E-6	IMPLEMENTATION
we can't change the tm on a running cache just check if the cache has no tm and we're ok with that	WITHOUT_CLASSIFICATION	0.999937368178264	WITHOUT_CLASSIFICATION	6.263182173605898E-5	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9999003959067723	WITHOUT_CLASSIFICATION	9.960409322779415E-5	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9999060862891909	WITHOUT_CLASSIFICATION	9.391371080916026E-5	IMPLEMENTATION
this method should be implemented assuming it's valid to do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9144354235846541	WITHOUT_CLASSIFICATION	0.08556457641534586	IMPLEMENTATION
make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9996252205951132	WITHOUT_CLASSIFICATION	3.747794048868975E-4	IMPLEMENTATION
we use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999837372678132	WITHOUT_CLASSIFICATION	1.626273218684813E-5	IMPLEMENTATION
following methods we don't delegate since they have so little logic it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9995069275993866	WITHOUT_CLASSIFICATION	4.9307240061347E-4	IMPLEMENTATION
if jbc is using invalidation we don't want to propagate changes. we use the timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9998988660096687	WITHOUT_CLASSIFICATION	1.0113399033127862E-4	IMPLEMENTATION
we don't want to waste effort setting an option if jbc is already in local mode. if jbc is repl_(a)sync then check if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999992313414763	WITHOUT_CLASSIFICATION	7.686585237825889E-7	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents updates add a zero (or low) timeout option so we don't block waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999301457336425	WITHOUT_CLASSIFICATION	6.985426635755765E-5	IMPLEMENTATION
double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999686149221401	WITHOUT_CLASSIFICATION	3.138507785990906E-5	IMPLEMENTATION
get an exclusive right to update jbc for this key from this node.	WITHOUT_CLASSIFICATION	0.9999995929218595	WITHOUT_CLASSIFICATION	4.0707814046639216E-7	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9998288369412367	WITHOUT_CLASSIFICATION	1.7116305876324907E-4	IMPLEMENTATION
initial load from jbc	WITHOUT_CLASSIFICATION	0.9999965488356386	WITHOUT_CLASSIFICATION	3.4511643614182957E-6	IMPLEMENTATION
see if we had a 2nd invalidation from the same initial preinvalidation timestamp. if so only increment if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999999981657135	WITHOUT_CLASSIFICATION	1.834286558356349E-9	IMPLEMENTATION
we ensure async semantics (jbcache-1175)	WITHOUT_CLASSIFICATION	0.9998288369412367	WITHOUT_CLASSIFICATION	1.7116305876324907E-4	IMPLEMENTATION
if the workspace node has null as well ok if not we've been modified in a non-comparable manner which we have to treat as us being newer	WITHOUT_CLASSIFICATION	0.9980074592431905	WITHOUT_CLASSIFICATION	0.001992540756809574	IMPLEMENTATION
the standard comparator types are not serializable but are singletons	WITHOUT_CLASSIFICATION	0.999866455403987	WITHOUT_CLASSIFICATION	1.3354459601296975E-4	IMPLEMENTATION
ignore!	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999167885256005	WITHOUT_CLASSIFICATION	8.321147439951327E-5	IMPLEMENTATION
construct the cache	WITHOUT_CLASSIFICATION	0.9998555930578144	WITHOUT_CLASSIFICATION	1.4440694218570063E-4	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999326789674642	WITHOUT_CLASSIFICATION	6.732103253582806E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999326789674642	WITHOUT_CLASSIFICATION	6.732103253582806E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999011863543036	WITHOUT_CLASSIFICATION	9.88136456964688E-5	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for initialpoolsize which hibernate sensibly lets default to minpoolsize but we'll let users override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999999786490856	WITHOUT_CLASSIFICATION	2.1350914329604656E-8	IMPLEMENTATION
datasource unpooled = datasources.unpooleddatasource(jdbcurl props.getproperty(environment.user) props.getproperty(environment.pass))	WITHOUT_CLASSIFICATION	0.9998307994426365	WITHOUT_CLASSIFICATION	1.6920055736352027E-4	IMPLEMENTATION
true if the pool is borrowed from the outside false if we used to create it	WITHOUT_CLASSIFICATION	0.999999686597658	WITHOUT_CLASSIFICATION	3.134023420417129E-7	IMPLEMENTATION
get a connection from the pool (thru drivermanager cfr. proxool doc)	WITHOUT_CLASSIFICATION	0.9995291160218331	WITHOUT_CLASSIFICATION	4.708839781668803E-4	IMPLEMENTATION
set the transaction isolation if defined	WITHOUT_CLASSIFICATION	0.99999550681178	WITHOUT_CLASSIFICATION	4.493188220059208E-6	IMPLEMENTATION
toggle autocommit to false if set	WITHOUT_CLASSIFICATION	0.9999927250972142	WITHOUT_CLASSIFICATION	7.2749027858607395E-6	IMPLEMENTATION
return the connection	WITHOUT_CLASSIFICATION	0.9990446809416019	WITHOUT_CLASSIFICATION	9.553190583980638E-4	IMPLEMENTATION
get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.999929462101504	WITHOUT_CLASSIFICATION	7.05378984959776E-5	IMPLEMENTATION
default the proxool alias setting	WITHOUT_CLASSIFICATION	0.9999980171531836	WITHOUT_CLASSIFICATION	1.982846816397248E-6	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999908224559285	WITHOUT_CLASSIFICATION	9.177544071498568E-6	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999908224559285	WITHOUT_CLASSIFICATION	9.177544071498568E-6	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998266565962984	WITHOUT_CLASSIFICATION	1.7334340370155912E-4	IMPLEMENTATION
set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9997110442014858	WITHOUT_CLASSIFICATION	2.8895579851425616E-4	IMPLEMENTATION
configured using the jaxp configurator	WITHOUT_CLASSIFICATION	0.9999345545884181	WITHOUT_CLASSIFICATION	6.544541158194884E-5	IMPLEMENTATION
validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999908224559285	WITHOUT_CLASSIFICATION	9.177544071498568E-6	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998266565962984	WITHOUT_CLASSIFICATION	1.7334340370155912E-4	IMPLEMENTATION
append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998266565962984	WITHOUT_CLASSIFICATION	1.7334340370155912E-4	IMPLEMENTATION
configured using the properties file configurator	WITHOUT_CLASSIFICATION	0.9998184637702641	WITHOUT_CLASSIFICATION	1.8153622973579494E-4	IMPLEMENTATION
remember isolation level	WITHOUT_CLASSIFICATION	0.9995756775507597	WITHOUT_CLASSIFICATION	4.2432244924033675E-4	IMPLEMENTATION
if the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999999895978016	WITHOUT_CLASSIFICATION	1.0402198493722075E-8	IMPLEMENTATION
we have created the pool ourselves so shut it down	WITHOUT_CLASSIFICATION	0.9999873155360237	WITHOUT_CLASSIFICATION	1.2684463976200719E-5	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9987292913496543	WITHOUT_CLASSIFICATION	0.0012707086503457054	IMPLEMENTATION
not really a many-to-one association necessarily	WITHOUT_CLASSIFICATION	0.9987292913496543	WITHOUT_CLASSIFICATION	0.0012707086503457054	IMPLEMENTATION
always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999761771930149	WITHOUT_CLASSIFICATION	2.3822806985127864E-5	IMPLEMENTATION
public currency getcurrency(int col) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999063640094736	WITHOUT_CLASSIFICATION	9.363599052626193E-5	IMPLEMENTATION
default is pojo	WITHOUT_CLASSIFICATION	0.9999935702990044	WITHOUT_CLASSIFICATION	6.429700995586236E-6	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999953350646912	WITHOUT_CLASSIFICATION	4.664935308808513E-6	IMPLEMENTATION
use setparameter for null values	WITHOUT_CLASSIFICATION	0.9999953350646912	WITHOUT_CLASSIFICATION	4.664935308808513E-6	IMPLEMENTATION
private cacheentry cacheentry	WITHOUT_CLASSIFICATION	0.9999830607470207	WITHOUT_CLASSIFICATION	1.6939252979255137E-5	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9999390442168076	WITHOUT_CLASSIFICATION	6.09557831924574E-5	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9998622366990022	WITHOUT_CLASSIFICATION	1.37763300997823E-4	IMPLEMENTATION
get the updated snapshot of the entity state by cloning current state it is safe to copy in place since by this time no-one else (should have) has a reference to the array	WITHOUT_CLASSIFICATION	0.9999999494103998	WITHOUT_CLASSIFICATION	5.05896001643997E-8	IMPLEMENTATION
this entity defines proeprty generation so process those generated values	WITHOUT_CLASSIFICATION	0.9999953496938884	WITHOUT_CLASSIFICATION	4.650306111592546E-6	IMPLEMENTATION
have the entity entry perform post-update processing passing it the update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9996242286356616	WITHOUT_CLASSIFICATION	3.7577136433839626E-4	IMPLEMENTATION
!persister.iscacheinvalidationrequired()	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9996199516341051	WITHOUT_CLASSIFICATION	3.800483658948696E-4	IMPLEMENTATION
sort first by role name	WITHOUT_CLASSIFICATION	0.9999496929274033	WITHOUT_CLASSIFICATION	5.0307072596707784E-5	IMPLEMENTATION
make 100% certain that this is called before any subsequent scheduledupdate.aftertransactioncompletion()!!	WITHOUT_CLASSIFICATION	0.9998622366990022	WITHOUT_CLASSIFICATION	1.37763300997823E-4	IMPLEMENTATION
then by fk	WITHOUT_CLASSIFICATION	0.9999836187041447	WITHOUT_CLASSIFICATION	1.6381295855352923E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999653529698349	WITHOUT_CLASSIFICATION	3.464703016505204E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999653529698349	WITHOUT_CLASSIFICATION	3.464703016505204E-5	IMPLEMENTATION
an existing collection that was either non-empty or uninitialized is replaced by null or a different collection (if the collection is uninitialized hibernate has no way of knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999956829861557	WITHOUT_CLASSIFICATION	4.3170138442452314E-6	IMPLEMENTATION
this method is called when a new non-null collection is persisted or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999973267280897	WITHOUT_CLASSIFICATION	2.6732719102937924E-6	IMPLEMENTATION
boolean put = persister.getcache().insert(ck cacheentry)	WITHOUT_CLASSIFICATION	0.9995226428680656	WITHOUT_CLASSIFICATION	4.7735713193448453E-4	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9989563747019308	WITHOUT_CLASSIFICATION	0.0010436252980692707	IMPLEMENTATION
do nothing - we only need to notify the cache	WITHOUT_CLASSIFICATION	0.9997379867252375	WITHOUT_CLASSIFICATION	2.6201327476258206E-4	IMPLEMENTATION
sort first by entity name	WITHOUT_CLASSIFICATION	0.9999495750774551	WITHOUT_CLASSIFICATION	5.042492254496366E-5	IMPLEMENTATION
then by id	WITHOUT_CLASSIFICATION	0.9999555784857117	WITHOUT_CLASSIFICATION	4.4421514288334216E-5	IMPLEMENTATION
to be safe	WITHOUT_CLASSIFICATION	0.9999762988969393	WITHOUT_CLASSIFICATION	2.3701103060628915E-5	IMPLEMENTATION
no transformations took place so handle it as we would a non-instrumented class	WITHOUT_CLASSIFICATION	0.9994008909064177	WITHOUT_CLASSIFICATION	5.991090935823454E-4	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999988847987644	WITHOUT_CLASSIFICATION	1.1152012355400535E-6	IMPLEMENTATION
see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999988847987644	WITHOUT_CLASSIFICATION	1.1152012355400535E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9972566883453845	WITHOUT_CLASSIFICATION	0.00274331165461551	IMPLEMENTATION
test out the optimizer	WITHOUT_CLASSIFICATION	0.9999947277945845	WITHOUT_CLASSIFICATION	5.272205415400645E-6	IMPLEMENTATION
set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999708328143102	WITHOUT_CLASSIFICATION	2.9167185689849467E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
invokespecial	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999908136350087	WITHOUT_CLASSIFICATION	9.186364991351646E-6	IMPLEMENTATION
aload_1 load bean	WITHOUT_CLASSIFICATION	0.9998975143339041	WITHOUT_CLASSIFICATION	1.0248566609586253E-4	IMPLEMENTATION
checkcast cast bean	WITHOUT_CLASSIFICATION	0.9999003687223541	WITHOUT_CLASSIFICATION	9.963127764591629E-5	IMPLEMENTATION
astore_3 store bean	WITHOUT_CLASSIFICATION	0.9999146757898874	WITHOUT_CLASSIFICATION	8.532421011254069E-5	IMPLEMENTATION
aload_2 args	WITHOUT_CLASSIFICATION	0.9999006893321831	WITHOUT_CLASSIFICATION	9.931066781689355E-5	IMPLEMENTATION
iconst_i continue to aastore growing stack is 1	WITHOUT_CLASSIFICATION	0.9999380757666597	WITHOUT_CLASSIFICATION	6.192423334032945E-5	IMPLEMENTATION
new	WITHOUT_CLASSIFICATION	0.9999765419150398	WITHOUT_CLASSIFICATION	2.3458084960148283E-5	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
aload_3 load the raw bean	WITHOUT_CLASSIFICATION	0.9999632188651877	WITHOUT_CLASSIFICATION	3.678113481231487E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
aastore args	WITHOUT_CLASSIFICATION	0.9999006893321831	WITHOUT_CLASSIFICATION	9.931066781689355E-5	IMPLEMENTATION
| this | bean | args | i | raw bean | exception |	WITHOUT_CLASSIFICATION	0.9998789145362241	WITHOUT_CLASSIFICATION	1.2108546377589868E-4	IMPLEMENTATION
required to exception table iconst_0 i	WITHOUT_CLASSIFICATION	0.9997810405250132	WITHOUT_CLASSIFICATION	2.1895947498687708E-4	IMPLEMENTATION
istore_3 store i	WITHOUT_CLASSIFICATION	0.999786630917946	WITHOUT_CLASSIFICATION	2.1336908205405835E-4	IMPLEMENTATION
aload_1 load the bean	WITHOUT_CLASSIFICATION	0.9999630991975866	WITHOUT_CLASSIFICATION	3.6900802413405695E-5	IMPLEMENTATION
checkcast cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999687885323837	WITHOUT_CLASSIFICATION	3.121146761635435E-5	IMPLEMENTATION
current stack len = 0	WITHOUT_CLASSIFICATION	0.9999202226386575	WITHOUT_CLASSIFICATION	7.977736134241857E-5	IMPLEMENTATION
start region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9994061883422283	WITHOUT_CLASSIFICATION	5.938116577716611E-4	IMPLEMENTATION
iinc 3 1	WITHOUT_CLASSIFICATION	0.9999794091455947	WITHOUT_CLASSIFICATION	2.0590854405214484E-5	IMPLEMENTATION
aload 4 load the raw bean	WITHOUT_CLASSIFICATION	0.9999510749330366	WITHOUT_CLASSIFICATION	4.8925066963384934E-5	IMPLEMENTATION
aload_2 load the args	WITHOUT_CLASSIFICATION	0.9999636361326082	WITHOUT_CLASSIFICATION	3.636386739175043E-5	IMPLEMENTATION
iconst_i	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
aaload	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
checkcast (case of primitive type) invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.999954116810774	WITHOUT_CLASSIFICATION	4.588318922604083E-5	IMPLEMENTATION
checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.999986164284239	WITHOUT_CLASSIFICATION	1.3835715761094948E-5	IMPLEMENTATION
current stack len = 2	WITHOUT_CLASSIFICATION	0.9999644080194466	WITHOUT_CLASSIFICATION	3.5591980553354596E-5	IMPLEMENTATION
end region to handling exception (bulkaccessorexception)	WITHOUT_CLASSIFICATION	0.9981235124656193	WITHOUT_CLASSIFICATION	0.0018764875343807393	IMPLEMENTATION
register in exception table	WITHOUT_CLASSIFICATION	0.9999974883258421	WITHOUT_CLASSIFICATION	2.511674157872165E-6	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
aload_0	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999908136350087	WITHOUT_CLASSIFICATION	9.186364991351646E-6	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999908136350087	WITHOUT_CLASSIFICATION	9.186364991351646E-6	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
invokevirtual	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
local variables | target obj | each oldvalue |	WITHOUT_CLASSIFICATION	0.9999432708878175	WITHOUT_CLASSIFICATION	5.6729112182462835E-5	IMPLEMENTATION
astore 5 store exception	WITHOUT_CLASSIFICATION	0.9999894207993879	WITHOUT_CLASSIFICATION	1.0579200612075518E-5	IMPLEMENTATION
new bulkaccessorexception	WITHOUT_CLASSIFICATION	0.999963238551465	WITHOUT_CLASSIFICATION	3.6761448535130684E-5	IMPLEMENTATION
aload 5 load exception	WITHOUT_CLASSIFICATION	0.9999872927892164	WITHOUT_CLASSIFICATION	1.2707210783576756E-5	IMPLEMENTATION
iload_3 i	WITHOUT_CLASSIFICATION	0.9999315061961976	WITHOUT_CLASSIFICATION	6.849380380232935E-5	IMPLEMENTATION
invokespecial bulkaccessorexception.<init>	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
athrow	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
warning classfile only	WITHOUT_CLASSIFICATION	0.9999494254982143	WITHOUT_CLASSIFICATION	5.057450178575563E-5	IMPLEMENTATION
swallow	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
local variable | this |	WITHOUT_CLASSIFICATION	0.9999625239679618	WITHOUT_CLASSIFICATION	3.747603203815805E-5	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9998156908300502	WITHOUT_CLASSIFICATION	1.8430916994978793E-4	IMPLEMENTATION
aload_0 load this	WITHOUT_CLASSIFICATION	0.9998156908300502	WITHOUT_CLASSIFICATION	1.8430916994978793E-4	IMPLEMENTATION
getfield get field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9999907204495332	WITHOUT_CLASSIFICATION	9.279550466931523E-6	IMPLEMENTATION
areturn return the value of the field	WITHOUT_CLASSIFICATION	0.9999971578863165	WITHOUT_CLASSIFICATION	2.8421136834290756E-6	IMPLEMENTATION
local variables | this | callback |	WITHOUT_CLASSIFICATION	0.9999299936027821	WITHOUT_CLASSIFICATION	7.000639721795402E-5	IMPLEMENTATION
aload_1 load callback	WITHOUT_CLASSIFICATION	0.9999562039655938	WITHOUT_CLASSIFICATION	4.379603440613762E-5	IMPLEMENTATION
putfield put field "$javassist_callback" defined already	WITHOUT_CLASSIFICATION	0.9998963207816987	WITHOUT_CLASSIFICATION	1.0367921830129544E-4	IMPLEMENTATION
case of non-static field	WITHOUT_CLASSIFICATION	0.9999903313179304	WITHOUT_CLASSIFICATION	9.668682069603213E-6	IMPLEMENTATION
getfield get each field	WITHOUT_CLASSIFICATION	0.9999889522731508	WITHOUT_CLASSIFICATION	1.104772684913493E-5	IMPLEMENTATION
invokeinterface invoke enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.9999181672736077	WITHOUT_CLASSIFICATION	8.183272639227871E-5	IMPLEMENTATION
ifnonnull	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.999953593385218	WITHOUT_CLASSIFICATION	4.6406614781886324E-5	IMPLEMENTATION
return each type	WITHOUT_CLASSIFICATION	0.999953593385218	WITHOUT_CLASSIFICATION	4.6406614781886324E-5	IMPLEMENTATION
store_1 each type	WITHOUT_CLASSIFICATION	0.9998609211595721	WITHOUT_CLASSIFICATION	1.3907884042776395E-4	IMPLEMENTATION
ldc name of the field	WITHOUT_CLASSIFICATION	0.9999883590322625	WITHOUT_CLASSIFICATION	1.1640967737448096E-5	IMPLEMENTATION
load_1 each type	WITHOUT_CLASSIFICATION	0.9998609211595721	WITHOUT_CLASSIFICATION	1.3907884042776395E-4	IMPLEMENTATION
invokeinterface invoke callback.read() each type	WITHOUT_CLASSIFICATION	0.9998876618366788	WITHOUT_CLASSIFICATION	1.1233816332132469E-4	IMPLEMENTATION
int	WITHOUT_CLASSIFICATION	0.9999836504546658	WITHOUT_CLASSIFICATION	1.634954533423379E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999908136350087	WITHOUT_CLASSIFICATION	9.186364991351646E-6	IMPLEMENTATION
dup	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
invokeinterface	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
checkcast	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
invokeinterface enabled.getinterceptfieldcallback()	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
load_1	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
putfield	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
return	WITHOUT_CLASSIFICATION	0.9999908136350087	WITHOUT_CLASSIFICATION	9.186364991351646E-6	IMPLEMENTATION
ldc field name	WITHOUT_CLASSIFICATION	0.9999480824768424	WITHOUT_CLASSIFICATION	5.191752315749187E-5	IMPLEMENTATION
getfield old value of the field	WITHOUT_CLASSIFICATION	0.9999959437933981	WITHOUT_CLASSIFICATION	4.0562066019969924E-6	IMPLEMENTATION
invokeinterface callback.write(..)	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999734735006548	WITHOUT_CLASSIFICATION	2.6526499345213453E-5	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999734735006548	WITHOUT_CLASSIFICATION	2.6526499345213453E-5	IMPLEMENTATION
not array	WITHOUT_CLASSIFICATION	0.9986720883554275	WITHOUT_CLASSIFICATION	0.0013279116445724082	IMPLEMENTATION
array of reference type	WITHOUT_CLASSIFICATION	0.9999921934873168	WITHOUT_CLASSIFICATION	7.806512683115414E-6	IMPLEMENTATION
boolean	WITHOUT_CLASSIFICATION	0.999978800313783	WITHOUT_CLASSIFICATION	2.1199686217129904E-5	IMPLEMENTATION
byte	WITHOUT_CLASSIFICATION	0.9999725773054822	WITHOUT_CLASSIFICATION	2.7422694517788755E-5	IMPLEMENTATION
char	WITHOUT_CLASSIFICATION	0.9999886165818533	WITHOUT_CLASSIFICATION	1.138341814660416E-5	IMPLEMENTATION
short	WITHOUT_CLASSIFICATION	0.9999735876242288	WITHOUT_CLASSIFICATION	2.6412375771078337E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999981191890198	WITHOUT_CLASSIFICATION	1.8808109800861397E-6	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999725057039655	WITHOUT_CLASSIFICATION	2.7494296034497342E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999725057039655	WITHOUT_CLASSIFICATION	2.7494296034497342E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999778649535997	WITHOUT_CLASSIFICATION	2.2135046400246944E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999778649535997	WITHOUT_CLASSIFICATION	2.2135046400246944E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999624508500837	WITHOUT_CLASSIFICATION	3.754914991637562E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999624508500837	WITHOUT_CLASSIFICATION	3.754914991637562E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999922071548801	WITHOUT_CLASSIFICATION	7.792845119936888E-6	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999922071548801	WITHOUT_CLASSIFICATION	7.792845119936888E-6	IMPLEMENTATION
reference type	WITHOUT_CLASSIFICATION	0.9999734735006548	WITHOUT_CLASSIFICATION	2.6526499345213453E-5	IMPLEMENTATION
double	WITHOUT_CLASSIFICATION	0.9999981191890198	WITHOUT_CLASSIFICATION	1.8808109800861397E-6	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999725057039655	WITHOUT_CLASSIFICATION	2.7494296034497342E-5	IMPLEMENTATION
float	WITHOUT_CLASSIFICATION	0.9999725057039655	WITHOUT_CLASSIFICATION	2.7494296034497342E-5	IMPLEMENTATION
long	WITHOUT_CLASSIFICATION	0.9999778649535997	WITHOUT_CLASSIFICATION	2.2135046400246944E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999624508500837	WITHOUT_CLASSIFICATION	3.754914991637562E-5	IMPLEMENTATION
bad type	WITHOUT_CLASSIFICATION	0.9999624508500837	WITHOUT_CLASSIFICATION	3.754914991637562E-5	IMPLEMENTATION
boolean byte char int short	WITHOUT_CLASSIFICATION	0.9999922071548801	WITHOUT_CLASSIFICATION	7.792845119936888E-6	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.9999632369340716	WITHOUT_CLASSIFICATION	3.6763065928373445E-5	IMPLEMENTATION
mainly for oscache	WITHOUT_CLASSIFICATION	0.999974270326555	WITHOUT_CLASSIFICATION	2.572967344506074E-5	IMPLEMENTATION
decrement the lock	WITHOUT_CLASSIFICATION	0.9999189704006469	WITHOUT_CLASSIFICATION	8.102959935304937E-5	IMPLEMENTATION
create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.99991961743257	WITHOUT_CLASSIFICATION	8.038256743008872E-5	IMPLEMENTATION
recache the updated state	WITHOUT_CLASSIFICATION	0.9999768680851798	WITHOUT_CLASSIFICATION	2.3131914820132173E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999726070492237	WITHOUT_CLASSIFICATION	2.739295077625719E-5	IMPLEMENTATION
null clientlock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999991230881408	WITHOUT_CLASSIFICATION	8.769118592868736E-7	IMPLEMENTATION
we really could refresh the item if it is not a lock but it might be slower return freshtimestamp < txtimestamp	WITHOUT_CLASSIFICATION	0.9999965749135785	WITHOUT_CLASSIFICATION	3.4250864214031273E-6	IMPLEMENTATION
by requiring < we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999993250590842	WITHOUT_CLASSIFICATION	6.749409157956197E-7	IMPLEMENTATION
the user provided resulttransformer not the one used with "select new". here to avoid mangling transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9913955814202086	WITHOUT_CLASSIFICATION	0.008604418579791422	IMPLEMENTATION
disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999155812762421	WITHOUT_CLASSIFICATION	8.441872375784587E-5	IMPLEMENTATION
disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999770367321906	WITHOUT_CLASSIFICATION	2.2963267809406243E-5	IMPLEMENTATION
ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999011863543036	WITHOUT_CLASSIFICATION	9.88136456964688E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999726070492237	WITHOUT_CLASSIFICATION	2.739295077625719E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999726070492237	WITHOUT_CLASSIFICATION	2.739295077625719E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999726070492237	WITHOUT_CLASSIFICATION	2.739295077625719E-5	IMPLEMENTATION
this is called from settingsfactory irregardless trivial to simply disregard	WITHOUT_CLASSIFICATION	0.999977808836564	WITHOUT_CLASSIFICATION	2.2191163436158614E-5	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9999586211616509	WITHOUT_CLASSIFICATION	4.13788383491368E-5	IMPLEMENTATION
do nothing subclasses may override.	WITHOUT_CLASSIFICATION	0.9999586211616509	WITHOUT_CLASSIFICATION	4.13788383491368E-5	IMPLEMENTATION
throw new unsupportedoperationexception("can't write to a readonly object")	WITHOUT_CLASSIFICATION	0.9999076779693518	WITHOUT_CLASSIFICATION	9.232203064827056E-5	IMPLEMENTATION
assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999998393538073	WITHOUT_CLASSIFICATION	1.606461927362908E-7	IMPLEMENTATION
persister.setidentifier(result id) before calling interceptor for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999786690779213	WITHOUT_CLASSIFICATION	2.1330922078716086E-5	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9972305717353027	WITHOUT_CLASSIFICATION	0.0027694282646972346	IMPLEMENTATION
no-op ccs did not have such a concept	WITHOUT_CLASSIFICATION	0.9972305717353027	WITHOUT_CLASSIFICATION	0.0027694282646972346	IMPLEMENTATION
again ccs did not have such a concept but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not jta aware.	WITHOUT_CLASSIFICATION	0.9999831061412553	WITHOUT_CLASSIFICATION	1.6893858744761426E-5	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999056867496579	WITHOUT_CLASSIFICATION	9.431325034226375E-5	IMPLEMENTATION
again ccs did not have such a concept however a reasonable proximity is to clear the cache. for non-transaction aware caches we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999056867496579	WITHOUT_CLASSIFICATION	9.431325034226375E-5	IMPLEMENTATION
classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9996237453237642	WITHOUT_CLASSIFICATION	3.762546762358365E-4	IMPLEMENTATION
get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999920393484399	WITHOUT_CLASSIFICATION	7.960651560099085E-6	IMPLEMENTATION
get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999960295048892	WITHOUT_CLASSIFICATION	3.9704951107675505E-6	IMPLEMENTATION
db-objectname	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
mutable	WITHOUT_CLASSIFICATION	0.9999724752986797	WITHOUT_CLASSIFICATION	2.7524701320181602E-5	IMPLEMENTATION
where	WITHOUT_CLASSIFICATION	0.9999544221138448	WITHOUT_CLASSIFICATION	4.557788615534538E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9999043729048349	WITHOUT_CLASSIFICATION	9.562709516499937E-5	IMPLEMENTATION
polymorphism	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.8370125777149637	WITHOUT_CLASSIFICATION	0.16298742228503618	IMPLEMENTATION
id	WITHOUT_CLASSIFICATION	0.999869744727956	WITHOUT_CLASSIFICATION	1.3025527204410308E-4	IMPLEMENTATION
version / timestamp	WITHOUT_CLASSIFICATION	0.999926088092779	WITHOUT_CLASSIFICATION	7.391190722086289E-5	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9998987043564639	WITHOUT_CLASSIFICATION	1.0129564353608998E-4	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999877653320006	WITHOUT_CLASSIFICATION	1.2234667999366429E-5	IMPLEMENTATION
this is either a <version/> tag with no type attribute or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999363061622033	WITHOUT_CLASSIFICATION	6.369383779664279E-5	IMPLEMENTATION
for version properties marked as being generated make sure they are "always" generated aka "insert" is invalid this is dis-allowed by the dtd but just to make sure	WITHOUT_CLASSIFICATION	0.999999714983583	WITHOUT_CLASSIFICATION	2.8501641703341806E-7	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9998987043564639	WITHOUT_CLASSIFICATION	1.0129564353608998E-4	IMPLEMENTATION
( (column) discrim.getcolumniterator().next() ).settype(type)	WITHOUT_CLASSIFICATION	0.9999573961060887	WITHOUT_CLASSIFICATION	4.260389391137655E-5	IMPLEMENTATION
go ahead and set the lazy here since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9998510850204541	WITHOUT_CLASSIFICATION	1.4891497954608074E-4	IMPLEMENTATION
dynamic update	WITHOUT_CLASSIFICATION	0.9999855190794378	WITHOUT_CLASSIFICATION	1.4480920562169711E-5	IMPLEMENTATION
import	WITHOUT_CLASSIFICATION	0.9999670024032884	WITHOUT_CLASSIFICATION	3.299759671172842E-5	IMPLEMENTATION
batch size	WITHOUT_CLASSIFICATION	0.9999738463624188	WITHOUT_CLASSIFICATION	2.6153637581185474E-5	IMPLEMENTATION
select before update	WITHOUT_CLASSIFICATION	0.9999942032713188	WITHOUT_CLASSIFICATION	5.796728681229702E-6	IMPLEMENTATION
optimistic lock mode	WITHOUT_CLASSIFICATION	0.999906007012829	WITHOUT_CLASSIFICATION	9.399298717109635E-5	IMPLEMENTATION
persister	WITHOUT_CLASSIFICATION	0.9999588719923327	WITHOUT_CLASSIFICATION	4.112800766728611E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999930892995278	WITHOUT_CLASSIFICATION	6.910700472268065E-6	IMPLEMENTATION
get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999960295048892	WITHOUT_CLASSIFICATION	3.9704951107675505E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999504996870707	WITHOUT_CLASSIFICATION	4.950031292934469E-5	IMPLEMENTATION
joined subclasses	WITHOUT_CLASSIFICATION	0.9999248705346105	WITHOUT_CLASSIFICATION	7.512946538947861E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999795883184176	WITHOUT_CLASSIFICATION	2.0411681582458867E-5	IMPLEMENTATION
check	WITHOUT_CLASSIFICATION	0.9999043729048349	WITHOUT_CLASSIFICATION	9.562709516499937E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999930892995278	WITHOUT_CLASSIFICATION	6.910700472268065E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999504996870707	WITHOUT_CLASSIFICATION	4.950031292934469E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999795883184176	WITHOUT_CLASSIFICATION	2.0411681582458867E-5	IMPLEMENTATION
model.getkey().settype( new type( model.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9998799071292238	WITHOUT_CLASSIFICATION	1.2009287077616407E-4	IMPLEMENTATION
tablename	WITHOUT_CLASSIFICATION	0.9999727992239514	WITHOUT_CLASSIFICATION	2.7200776048461404E-5	IMPLEMENTATION
join.getkey().settype( new type( lazz.getidentifier() ) )	WITHOUT_CLASSIFICATION	0.9998799071292238	WITHOUT_CLASSIFICATION	1.2009287077616407E-4	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999504996870707	WITHOUT_CLASSIFICATION	4.950031292934469E-5	IMPLEMENTATION
column(s)	WITHOUT_CLASSIFICATION	0.9999725642801962	WITHOUT_CLASSIFICATION	2.7435719803829697E-5	IMPLEMENTATION
column index	WITHOUT_CLASSIFICATION	0.9994804373032101	WITHOUT_CLASSIFICATION	5.195626967898438E-4	IMPLEMENTATION
column unique-key	WITHOUT_CLASSIFICATION	0.9999063035585682	WITHOUT_CLASSIFICATION	9.369644143184768E-5	IMPLEMENTATION
automatically makes a column with the default name if none is specifed by xml	WITHOUT_CLASSIFICATION	0.999999947896429	WITHOUT_CLASSIFICATION	5.2103570925334926E-8	IMPLEMENTATION
for an any	WITHOUT_CLASSIFICATION	0.9999992784658336	WITHOUT_CLASSIFICATION	7.215341663743446E-7	IMPLEMENTATION
insertable simply because that is the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.980219327037894	WITHOUT_CLASSIFICATION	0.019780672962106	IMPLEMENTATION
the user specifically supplied insert="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999678060092259	WITHOUT_CLASSIFICATION	3.219399077413208E-5	IMPLEMENTATION
properties generated on update can never be updateable	WITHOUT_CLASSIFICATION	0.9974477651187112	WITHOUT_CLASSIFICATION	0.002552234881288684	IMPLEMENTATION
updateable only because the user did not specify anything just override it	WITHOUT_CLASSIFICATION	0.9915017920825571	WITHOUT_CLASSIFICATION	0.008498207917443046	IMPLEMENTATION
the user specifically supplied update="true" which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999678060092259	WITHOUT_CLASSIFICATION	3.219399077413208E-5	IMPLEMENTATION
rolename	WITHOUT_CLASSIFICATION	0.9999764625197315	WITHOUT_CLASSIFICATION	2.3537480268525177E-5	IMPLEMENTATION
fetch strategy	WITHOUT_CLASSIFICATION	0.9999326941325161	WITHOUT_CLASSIFICATION	6.730586748392116E-5	IMPLEMENTATION
table	WITHOUT_CLASSIFICATION	0.9999767059253621	WITHOUT_CLASSIFICATION	2.329407463786872E-5	IMPLEMENTATION
tablename = mappings.getnamingstrategy().propertytotablename( classname path )	WITHOUT_CLASSIFICATION	0.9998105072479941	WITHOUT_CLASSIFICATION	1.894927520057258E-4	IMPLEMENTATION
sort	WITHOUT_CLASSIFICATION	0.9999239656564569	WITHOUT_CLASSIFICATION	7.603434354317436E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999930892995278	WITHOUT_CLASSIFICATION	6.910700472268065E-6	IMPLEMENTATION
unsorted natural comparator.class.name	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
orphan delete (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999782028175725	WITHOUT_CLASSIFICATION	2.1797182427437138E-5	IMPLEMENTATION
set up second pass	WITHOUT_CLASSIFICATION	0.999961689629695	WITHOUT_CLASSIFICATION	3.8310370305065885E-5	IMPLEMENTATION
an "embedded" component (composite ids and unique) note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9989419493827522	WITHOUT_CLASSIFICATION	0.0010580506172478236	IMPLEMENTATION
a nested composite element	WITHOUT_CLASSIFICATION	0.9999108872112796	WITHOUT_CLASSIFICATION	8.911278872035961E-5	IMPLEMENTATION
for an any we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999839509604525	WITHOUT_CLASSIFICATION	1.6049039547551897E-5	IMPLEMENTATION
note special case one-to-one constrained=false cannot be proxied so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.999999629303141	WITHOUT_CLASSIFICATION	3.7069685892295975E-7	IMPLEMENTATION
use old (hb 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999969477954884	WITHOUT_CLASSIFICATION	3.0522045115352576E-6	IMPLEMENTATION
lazy = !join	WITHOUT_CLASSIFICATION	0.999786564156718	WITHOUT_CLASSIFICATION	2.1343584328194107E-4	IMPLEMENTATION
generator	WITHOUT_CLASSIFICATION	0.9999726277557887	WITHOUT_CLASSIFICATION	2.7372244211337728E-5	IMPLEMENTATION
id unsaved-value	WITHOUT_CLASSIFICATION	0.9995208378057091	WITHOUT_CLASSIFICATION	4.791621942909235E-4	IMPLEMENTATION
version unsaved-value	WITHOUT_CLASSIFICATION	0.999911260237894	WITHOUT_CLASSIFICATION	8.873976210601864E-5	IMPLEMENTATION
not necessarily a unique property reference	WITHOUT_CLASSIFICATION	0.998955856450937	WITHOUT_CLASSIFICATION	0.001044143549062992	IMPLEMENTATION
( (column) ( (simplevalue) ic.getindex() ).getcolumniterator().next() ).setnullable(false)	WITHOUT_CLASSIFICATION	0.9999573961060887	WITHOUT_CLASSIFICATION	4.260389391137655E-5	IMPLEMENTATION
contained elements	WITHOUT_CLASSIFICATION	0.9999532313423367	WITHOUT_CLASSIFICATION	4.6768657663222306E-5	IMPLEMENTATION
for non-inverse one-to-many with a not-null fk add a backref!	WITHOUT_CLASSIFICATION	0.9999519560350761	WITHOUT_CLASSIFICATION	4.804396492388439E-5	IMPLEMENTATION
bind the where	WITHOUT_CLASSIFICATION	0.9998648655262653	WITHOUT_CLASSIFICATION	1.3513447373469099E-4	IMPLEMENTATION
bind the order-by	WITHOUT_CLASSIFICATION	0.9999183634719507	WITHOUT_CLASSIFICATION	8.16365280492627E-5	IMPLEMENTATION
bind the filters	WITHOUT_CLASSIFICATION	0.9999185557270609	WITHOUT_CLASSIFICATION	8.14442729390008E-5	IMPLEMENTATION
overriding inherited meta attribute. hbx-621 & hbx-793	WITHOUT_CLASSIFICATION	0.9999493658338985	WITHOUT_CLASSIFICATION	5.063416610147051E-5	IMPLEMENTATION
first iterate over all elements capable of defining an extends attribute collecting all found extends references if they cannot be resolved against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999999663444396	WITHOUT_CLASSIFICATION	3.3655560364573786E-8	IMPLEMENTATION
mappings might contain either the "raw" extends name (in the case of an entity-name mapping) or a fqn (in the case of a pojo mapping).	WITHOUT_CLASSIFICATION	0.9999918193129909	WITHOUT_CLASSIFICATION	8.180687009156229E-6	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9973696922558198	WITHOUT_CLASSIFICATION	0.0026303077441801755	IMPLEMENTATION
sessionfactory name	WITHOUT_CLASSIFICATION	0.9999102041755792	WITHOUT_CLASSIFICATION	8.979582442070448E-5	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9996041148413387	WITHOUT_CLASSIFICATION	3.9588515866133104E-4	IMPLEMENTATION
jdbc and connection settings	WITHOUT_CLASSIFICATION	0.9996041148413387	WITHOUT_CLASSIFICATION	3.9588515866133104E-4	IMPLEMENTATION
interrogate jdbc metadata	WITHOUT_CLASSIFICATION	0.9999778139888048	WITHOUT_CLASSIFICATION	2.2186011195239242E-5	IMPLEMENTATION
user supplied jdbc connections	WITHOUT_CLASSIFICATION	0.9999802598227931	WITHOUT_CLASSIFICATION	1.9740177206866637E-5	IMPLEMENTATION
use dialect default properties	WITHOUT_CLASSIFICATION	0.9999818104160116	WITHOUT_CLASSIFICATION	1.818958398828227E-5	IMPLEMENTATION
transaction settings	WITHOUT_CLASSIFICATION	0.9999888390437653	WITHOUT_CLASSIFICATION	1.1160956234657993E-5	IMPLEMENTATION
sql generation settings	WITHOUT_CLASSIFICATION	0.9999982081160268	WITHOUT_CLASSIFICATION	1.7918839732984757E-6	IMPLEMENTATION
query parser settings	WITHOUT_CLASSIFICATION	0.999995214320466	WITHOUT_CLASSIFICATION	4.785679533972444E-6	IMPLEMENTATION
second-level / query cache	WITHOUT_CLASSIFICATION	0.999978796771771	WITHOUT_CLASSIFICATION	2.120322822899724E-5	IMPLEMENTATION
the cache provider is needed when we either have second-level cache enabled or query cache enabled. note that usesecondlevelcache is enabled by default	WITHOUT_CLASSIFICATION	0.9454693125522152	WITHOUT_CLASSIFICATION	0.05453068744778481	IMPLEMENTATION
sql exception converter	WITHOUT_CLASSIFICATION	0.9999950335695206	WITHOUT_CLASSIFICATION	4.966430479451226E-6	IMPLEMENTATION
statistics and logging	WITHOUT_CLASSIFICATION	0.9999745072010576	WITHOUT_CLASSIFICATION	2.549279894232744E-5	IMPLEMENTATION
settings.setshowsqlenabled(showsql)	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
settings.setformatsqlenabled(formatsql)	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
schema export	WITHOUT_CLASSIFICATION	0.9999048638924066	WITHOUT_CLASSIFICATION	9.513610759342764E-5	IMPLEMENTATION
string provider = properties.getproperty( environment.bytecode_provider ) log.info( "bytecode provider name " + provider ) bytecodeprovider bytecodeprovider = buildbytecodeprovider( provider ) settings.setbytecodeprovider( bytecodeprovider )	WITHOUT_CLASSIFICATION	0.9999332211995461	WITHOUT_CLASSIFICATION	6.677880045394063E-5	IMPLEMENTATION
legacy behavior apply the bridge	WITHOUT_CLASSIFICATION	0.9999680310453318	WITHOUT_CLASSIFICATION	3.196895466822555E-5	IMPLEMENTATION
maybe a concrete sqlpropertyresult type but map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9993390761280943	WITHOUT_CLASSIFICATION	6.609238719058298E-4	IMPLEMENTATION
if dotted and not load-collection nor return-join regular property	WITHOUT_CLASSIFICATION	0.9989975140385415	WITHOUT_CLASSIFICATION	0.0010024859614584103	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907 private bytecodeprovider bytecodeprovider	WITHOUT_CLASSIFICATION	0.7818972373580692	WITHOUT_CLASSIFICATION	0.21810276264193085	IMPLEMENTATION
public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999745026437227	WITHOUT_CLASSIFICATION	2.5497356277368606E-5	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999730840325466	WITHOUT_CLASSIFICATION	2.6915967453511402E-5	IMPLEMENTATION
package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99987378463726	WITHOUT_CLASSIFICATION	1.2621536273996857E-4	IMPLEMENTATION
void setshowsqlenabled(boolean b) { showsql = b } void setformatsqlenabled(boolean b) { formatsql = b }	WITHOUT_CLASSIFICATION	0.9993598071110674	WITHOUT_CLASSIFICATION	6.401928889324655E-4	IMPLEMENTATION
public bytecodeprovider getbytecodeprovider() { return bytecodeprovider } void setbytecodeprovider(bytecodeprovider bytecodeprovider) { this.bytecodeprovider = bytecodeprovider }	WITHOUT_CLASSIFICATION	0.9999517615838603	WITHOUT_CLASSIFICATION	4.8238416139548345E-5	IMPLEMENTATION
using local since the inheritedmetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9974248169105472	WITHOUT_CLASSIFICATION	0.0025751830894528696	IMPLEMENTATION
private componenttuplizerfactory componenttuplizerfactory todo hhh-3517 and hhh-1907	WITHOUT_CLASSIFICATION	0.7818972373580692	WITHOUT_CLASSIFICATION	0.21810276264193085	IMPLEMENTATION
protected list extendsqueue	WITHOUT_CLASSIFICATION	0.9999801685293901	WITHOUT_CLASSIFICATION	1.9831470609866063E-5	IMPLEMENTATION
extendsqueue = new arraylist()	WITHOUT_CLASSIFICATION	0.9999282301127126	WITHOUT_CLASSIFICATION	7.176988728743452E-5	IMPLEMENTATION
componenttuplizerfactory = new componenttuplizerfactory()	WITHOUT_CLASSIFICATION	0.9998558394935315	WITHOUT_CLASSIFICATION	1.4416050646851562E-4	IMPLEMENTATION
if doc is null then for whatever reason the cached file cannot be used	WITHOUT_CLASSIFICATION	0.9999999749125457	WITHOUT_CLASSIFICATION	2.5087454330691093E-8	IMPLEMENTATION
drop them in reverse order in case db needs it done that way	WITHOUT_CLASSIFICATION	0.9999520943974142	WITHOUT_CLASSIFICATION	4.79056025858276E-5	IMPLEMENTATION
public componenttuplizerfactory getcomponenttuplizerfactory() { return componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9999730840325466	WITHOUT_CLASSIFICATION	2.6915967453511402E-5	IMPLEMENTATION
this method may be called many times!!	WITHOUT_CLASSIFICATION	0.9997800597228701	WITHOUT_CLASSIFICATION	2.1994027712995856E-4	IMPLEMENTATION
iterator iterator = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9997298187632311	WITHOUT_CLASSIFICATION	2.701812367688732E-4	IMPLEMENTATION
iterator iter = extendsqueue.iterator()	WITHOUT_CLASSIFICATION	0.9997298187632311	WITHOUT_CLASSIFICATION	2.701812367688732E-4	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999548128963546	WITHOUT_CLASSIFICATION	4.518710364544588E-5	IMPLEMENTATION
found	WITHOUT_CLASSIFICATION	0.9999548128963546	WITHOUT_CLASSIFICATION	4.518710364544588E-5	IMPLEMENTATION
settings.setcomponenttuplizerfactory( this.getcomponenttuplizerfactory() )	WITHOUT_CLASSIFICATION	0.9998590469322924	WITHOUT_CLASSIFICATION	1.4095306770751172E-4	IMPLEMENTATION
private final list extendsqueue	WITHOUT_CLASSIFICATION	0.9999615291068321	WITHOUT_CLASSIFICATION	3.847089316778453E-5	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9998989107652964	WITHOUT_CLASSIFICATION	1.010892347035829E-4	IMPLEMENTATION
<string string>	WITHOUT_CLASSIFICATION	0.9998989107652964	WITHOUT_CLASSIFICATION	1.010892347035829E-4	IMPLEMENTATION
+ "_" + referencedcolumnname not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9973696922558198	WITHOUT_CLASSIFICATION	0.0026303077441801755	IMPLEMENTATION
set use_reflection_optimizer to false to fix hhh-227	WITHOUT_CLASSIFICATION	0.999075410302772	WITHOUT_CLASSIFICATION	9.245896972279189E-4	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9999434163464975	WITHOUT_CLASSIFICATION	5.658365350251701E-5	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9999223747313937	WITHOUT_CLASSIFICATION	7.762526860630201E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9972566883453845	WITHOUT_CLASSIFICATION	0.00274331165461551	IMPLEMENTATION
orphan delete not supported for entitymode.dom4j	WITHOUT_CLASSIFICATION	0.9999434163464975	WITHOUT_CLASSIFICATION	5.658365350251701E-5	IMPLEMENTATION
element = xmlhelper.generatedom4jelement( persister.getnodename() )	WITHOUT_CLASSIFICATION	0.9999223747313937	WITHOUT_CLASSIFICATION	7.762526860630201E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8836566958367504	WITHOUT_CLASSIFICATION	0.11634330416324958	IMPLEMENTATION
maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999999101348035	WITHOUT_CLASSIFICATION	8.986519644872715E-8	IMPLEMENTATION
the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999475388540483	WITHOUT_CLASSIFICATION	5.246114595169011E-5	IMPLEMENTATION
the element has changed	WITHOUT_CLASSIFICATION	0.9999993824032616	WITHOUT_CLASSIFICATION	6.175967384129474E-7	IMPLEMENTATION
careful these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9947280250771285	WITHOUT_CLASSIFICATION	0.005271974922871426	IMPLEMENTATION
needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.5919813489159487	WITHOUT_CLASSIFICATION	0.4080186510840513	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9996609841728836	WITHOUT_CLASSIFICATION	3.390158271163108E-4	IMPLEMENTATION
override on some subclasses	WITHOUT_CLASSIFICATION	0.9996609841728836	WITHOUT_CLASSIFICATION	3.390158271163108E-4	IMPLEMENTATION
do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9998512851005881	WITHOUT_CLASSIFICATION	1.487148994119441E-4	IMPLEMENTATION
short-circuit(s) no new elements the old list contains only orphans no old elements so no orphans neither	WITHOUT_CLASSIFICATION	0.9999990051848355	WITHOUT_CLASSIFICATION	9.94815164444006E-7	IMPLEMENTATION
create the collection holding the orphans	WITHOUT_CLASSIFICATION	0.999929558454398	WITHOUT_CLASSIFICATION	7.044154560202215E-5	IMPLEMENTATION
collect entityidentifier(s) of the current elements - add them into a hashset for fast access	WITHOUT_CLASSIFICATION	0.99999596826432	WITHOUT_CLASSIFICATION	4.031735680010093E-6	IMPLEMENTATION
iterate over the old list	WITHOUT_CLASSIFICATION	0.999997421589754	WITHOUT_CLASSIFICATION	2.578410245866345E-6	IMPLEMENTATION
(array==null) ? templist.size()	WITHOUT_CLASSIFICATION	0.9998539396352302	WITHOUT_CLASSIFICATION	1.460603647697702E-4	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9972566883453845	WITHOUT_CLASSIFICATION	0.00274331165461551	IMPLEMENTATION
(array==null) ? templist.get(i)	WITHOUT_CLASSIFICATION	0.9998539396352302	WITHOUT_CLASSIFICATION	1.460603647697702E-4	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.999974977508887	WITHOUT_CLASSIFICATION	2.5022491113009847E-5	IMPLEMENTATION
write() -- doesn't	WITHOUT_CLASSIFICATION	0.999974977508887	WITHOUT_CLASSIFICATION	2.5022491113009847E-5	IMPLEMENTATION
amazingly these two will work because abstractcollection uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9998368042185746	WITHOUT_CLASSIFICATION	1.6319578142529934E-4	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8836566958367504	WITHOUT_CLASSIFICATION	0.11634330416324958	IMPLEMENTATION
finally what it's all about	WITHOUT_CLASSIFICATION	0.9982474440268743	WITHOUT_CLASSIFICATION	0.0017525559731258332	IMPLEMENTATION
note that if we load this collection from a cartesian product the multiplicity would be broken so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999986110445386	WITHOUT_CLASSIFICATION	1.388955461359018E-6	IMPLEMENTATION
anyway here we implement <set> semantics for a <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9977603255530322	WITHOUT_CLASSIFICATION	0.002239674446967882	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.999998092225264	WITHOUT_CLASSIFICATION	1.9077747358832916E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9995572614591898	WITHOUT_CLASSIFICATION	4.427385408103022E-4	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8836566958367504	WITHOUT_CLASSIFICATION	0.11634330416324958	IMPLEMENTATION
a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.999998092225264	WITHOUT_CLASSIFICATION	1.9077747358832916E-6	IMPLEMENTATION
search for it note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9995572614591898	WITHOUT_CLASSIFICATION	4.427385408103022E-4	IMPLEMENTATION
public boolean equals(object other) {read()return bag.equals(other)}public int hashcode(object other) {read()return bag.hashcode()}	WITHOUT_CLASSIFICATION	0.9999928341411076	WITHOUT_CLASSIFICATION	7.165858892419171E-6	IMPLEMENTATION
list operations	WITHOUT_CLASSIFICATION	0.9998639529684864	WITHOUT_CLASSIFICATION	1.3604703151359767E-4	IMPLEMENTATION
pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999867672382694	WITHOUT_CLASSIFICATION	1.323276173069815E-5	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8836566958367504	WITHOUT_CLASSIFICATION	0.11634330416324958	IMPLEMENTATION
needed for soap libraries etc	WITHOUT_CLASSIFICATION	0.8836566958367504	WITHOUT_CLASSIFICATION	0.11634330416324958	IMPLEMENTATION
from map	WITHOUT_CLASSIFICATION	0.9999891482862869	WITHOUT_CLASSIFICATION	1.0851713713126515E-5	IMPLEMENTATION
from sortedmap	WITHOUT_CLASSIFICATION	0.9999715772023755	WITHOUT_CLASSIFICATION	2.8422797624446797E-5	IMPLEMENTATION
inject the data	WITHOUT_CLASSIFICATION	0.999970613874334	WITHOUT_CLASSIFICATION	2.9386125665995675E-5	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999964223960228	WITHOUT_CLASSIFICATION	3.577603977121295E-6	IMPLEMENTATION
default pool size 20	WITHOUT_CLASSIFICATION	0.9999894101850321	WITHOUT_CLASSIFICATION	1.058981496785614E-5	IMPLEMENTATION
trying via forname() first to be as close to drivermanager's semantics	WITHOUT_CLASSIFICATION	0.9999653053233122	WITHOUT_CLASSIFICATION	3.469467668780464E-5	IMPLEMENTATION
if debug level is enabled then log the password otherwise mask it	WITHOUT_CLASSIFICATION	0.9996752269868932	WITHOUT_CLASSIFICATION	3.2477301310680854E-4	IMPLEMENTATION
register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999148655276978	WITHOUT_CLASSIFICATION	8.513447230217402E-5	IMPLEMENTATION
wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999907038216608	WITHOUT_CLASSIFICATION	9.296178339328582E-6	IMPLEMENTATION
then bind it	WITHOUT_CLASSIFICATION	0.9998764565206201	WITHOUT_CLASSIFICATION	1.2354347937989786E-4	IMPLEMENTATION
try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.998774902827208	WITHOUT_CLASSIFICATION	0.001225097172791909	IMPLEMENTATION
allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9888186809772719	WITHOUT_CLASSIFICATION	0.011181319022728188	IMPLEMENTATION
limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999990352649116	WITHOUT_CLASSIFICATION	9.647350882842285E-7	IMPLEMENTATION
allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.999772802734781	WITHOUT_CLASSIFICATION	2.2719726521899317E-4	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999135028655338	WITHOUT_CLASSIFICATION	8.649713446615003E-5	IMPLEMENTATION
we could register the session against the transaction even though it is not started but we'd have no guarentee of ever getting the map entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999930071480269	WITHOUT_CLASSIFICATION	6.992851973096384E-6	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999964223960228	WITHOUT_CLASSIFICATION	3.577603977121295E-6	IMPLEMENTATION
private string propertyname	WITHOUT_CLASSIFICATION	0.9999963746820348	WITHOUT_CLASSIFICATION	3.62531796507774E-6	IMPLEMENTATION
public propertyprojection project() {return projections.property(getpropertyname())}	WITHOUT_CLASSIFICATION	0.9999843360315138	WITHOUT_CLASSIFICATION	1.566396848611738E-5	IMPLEMENTATION
string[] fk = stringhelper.qualify( "collection_" cp.getkeycolumnnames() )	WITHOUT_CLASSIFICATION	0.9995361056890063	WITHOUT_CLASSIFICATION	4.6389431099374764E-4	IMPLEMENTATION
" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999068410873824	WITHOUT_CLASSIFICATION	9.31589126176136E-5	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
unsupported	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999964223960228	WITHOUT_CLASSIFICATION	3.577603977121295E-6	IMPLEMENTATION
the following two lines were added to ensure that this.params is not null which can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9292143911126437	WITHOUT_CLASSIFICATION	0.07078560888735627	IMPLEMENTATION
with two-deep subqueries the same alias would get generated for both using the old method (criteriaquery.generatesqlalias()) so that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999998056421183	WITHOUT_CLASSIFICATION	1.943578816775141E-7	IMPLEMENTATION
implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9938583020133741	WITHOUT_CLASSIFICATION	0.006141697986625886	IMPLEMENTATION
pull off the last " "	WITHOUT_CLASSIFICATION	0.9999883598420295	WITHOUT_CLASSIFICATION	1.164015797054429E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999509304737172	WITHOUT_CLASSIFICATION	4.9069526282849935E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource)	WITHOUT_CLASSIFICATION	0.9993519793577623	WITHOUT_CLASSIFICATION	6.480206422376853E-4	IMPLEMENTATION
not_supported_should_use_jdbc3_preparedstatement.getgeneratedkeys_method	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999301369512809	WITHOUT_CLASSIFICATION	6.986304871918936E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
oracle did add support for ansi case statements in 9i	WITHOUT_CLASSIFICATION	0.999992356740661	WITHOUT_CLASSIFICATION	7.643259338924367E-6	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999941505450629	WITHOUT_CLASSIFICATION	5.84945493708381E-6	IMPLEMENTATION
informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.999961842878008	WITHOUT_CLASSIFICATION	3.815712199198601E-5	IMPLEMENTATION
or byte or text? or money	WITHOUT_CLASSIFICATION	0.9999726090353516	WITHOUT_CLASSIFICATION	2.7390964648440896E-5	IMPLEMENTATION
strip table-owner because informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999259152256395	WITHOUT_CLASSIFICATION	7.40847743605231E-5	IMPLEMENTATION
build the map of standard ansi sql aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960082970465	WITHOUT_CLASSIFICATION	3.991702953463951E-6	IMPLEMENTATION
pre h3.2 behavior super.getreturntype(ct m)	WITHOUT_CLASSIFICATION	0.9999358260489025	WITHOUT_CLASSIFICATION	6.417395109745972E-5	IMPLEMENTATION
finally use the sqltype if == on hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9940864169196832	WITHOUT_CLASSIFICATION	0.005913583080316823	IMPLEMENTATION
because numeric can be anything	WITHOUT_CLASSIFICATION	0.9997740594508977	WITHOUT_CLASSIFICATION	2.2594054910218128E-4	IMPLEMENTATION
constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999067534416178	WITHOUT_CLASSIFICATION	9.324655838217312E-5	IMPLEMENTATION
standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999905958081552	WITHOUT_CLASSIFICATION	9.404191844787345E-6	IMPLEMENTATION
map second/minute/hour/day/month/year to ansi extract() override on subclasses	WITHOUT_CLASSIFICATION	0.9995925357965539	WITHOUT_CLASSIFICATION	4.0746420344614113E-4	IMPLEMENTATION
register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999613899733836	WITHOUT_CLASSIFICATION	3.861002661643553E-5	IMPLEMENTATION
database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9985113657862495	WITHOUT_CLASSIFICATION	0.001488634213750442	IMPLEMENTATION
hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988418995053184	WITHOUT_CLASSIFICATION	0.0011581004946815826	IMPLEMENTATION
keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9991097857555259	WITHOUT_CLASSIFICATION	8.902142444741891E-4	IMPLEMENTATION
native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998896535114561	WITHOUT_CLASSIFICATION	1.1034648854392818E-4	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990147181802219	WITHOUT_CLASSIFICATION	9.852818197780954E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99897256966469	WITHOUT_CLASSIFICATION	0.0010274303353099768	IMPLEMENTATION
guid support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988338677983996	WITHOUT_CLASSIFICATION	0.0011661322016004744	IMPLEMENTATION
limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988338677983996	WITHOUT_CLASSIFICATION	0.0011661322016004744	IMPLEMENTATION
by default we report no support	WITHOUT_CLASSIFICATION	0.9997866991382967	WITHOUT_CLASSIFICATION	2.13300861703442E-4	IMPLEMENTATION
by default we report no support for nowait lock semantics	WITHOUT_CLASSIFICATION	0.9999483905476325	WITHOUT_CLASSIFICATION	5.1609452367463225E-5	IMPLEMENTATION
table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990132383966851	WITHOUT_CLASSIFICATION	9.867616033149517E-4	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990666119391024	WITHOUT_CLASSIFICATION	9.333880608975818E-4	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989332851494807	WITHOUT_CLASSIFICATION	0.0010667148505193107	IMPLEMENTATION
current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9983916386967405	WITHOUT_CLASSIFICATION	0.0016083613032594492	IMPLEMENTATION
sqlexception support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988373352271347	WITHOUT_CLASSIFICATION	0.0011626647728653586	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988338677983996	WITHOUT_CLASSIFICATION	0.0011661322016004744	IMPLEMENTATION
identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9982749917031503	WITHOUT_CLASSIFICATION	0.0017250082968497263	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988338677983996	WITHOUT_CLASSIFICATION	0.0011661322016004744	IMPLEMENTATION
grrr for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999923194764364	WITHOUT_CLASSIFICATION	7.680523563496847E-6	IMPLEMENTATION
informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999151637631677	WITHOUT_CLASSIFICATION	8.483623683230042E-5	IMPLEMENTATION
return false here as most databases do not properly support this construct	WITHOUT_CLASSIFICATION	0.8385896570705117	WITHOUT_CLASSIFICATION	0.1614103429294883	IMPLEMENTATION
mckoi has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999967469344807	WITHOUT_CLASSIFICATION	3.2530655192475426E-6	IMPLEMENTATION
oracle8 and previous define only a "date" type which is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.999957095042086	WITHOUT_CLASSIFICATION	4.290495791391425E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999644860099881	WITHOUT_CLASSIFICATION	3.551399001182617E-5	IMPLEMENTATION
" cascade"	WITHOUT_CLASSIFICATION	0.9999605739779436	WITHOUT_CLASSIFICATION	3.942602205650234E-5	IMPLEMENTATION
trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999819376098535	WITHOUT_CLASSIFICATION	1.8062390146439783E-5	IMPLEMENTATION
public boolean droptemporarytableafteruse() {we have to because postgres sets current txto rollback only after a failed create tablereturn true}	WITHOUT_CLASSIFICATION	0.9999960110543407	WITHOUT_CLASSIFICATION	3.988945659294556E-6	IMPLEMENTATION
check violation	WITHOUT_CLASSIFICATION	0.999648189749538	WITHOUT_CLASSIFICATION	3.518102504620749E-4	IMPLEMENTATION
unique violation	WITHOUT_CLASSIFICATION	0.9998729777611302	WITHOUT_CLASSIFICATION	1.2702223886979606E-4	IMPLEMENTATION
foreign key violation	WITHOUT_CLASSIFICATION	0.9999312911898816	WITHOUT_CLASSIFICATION	6.870881011846756E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
not null violation	WITHOUT_CLASSIFICATION	0.9970358584319752	WITHOUT_CLASSIFICATION	0.0029641415680249665	IMPLEMENTATION
all other	WITHOUT_CLASSIFICATION	0.9997716593600017	WITHOUT_CLASSIFICATION	2.2834063999820615E-4	IMPLEMENTATION
register the type of the out param - postgresql uses types.other	WITHOUT_CLASSIFICATION	0.9999724541078431	WITHOUT_CLASSIFICATION	2.7545892156888277E-5	IMPLEMENTATION
seems to not really public boolean supportsrowvalueconstructorsyntax() { return true }	WITHOUT_CLASSIFICATION	0.9998139082077402	WITHOUT_CLASSIFICATION	1.8609179225990562E-4	IMPLEMENTATION
seems to have spotty lob suppport	WITHOUT_CLASSIFICATION	0.9999325494906602	WITHOUT_CLASSIFICATION	6.745050933981295E-5	IMPLEMENTATION
hhh-2300	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
ignore (probably h2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9996172454810006	WITHOUT_CLASSIFICATION	3.827545189993212E-4	IMPLEMENTATION
numeric functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999350613010304	WITHOUT_CLASSIFICATION	6.49386989696076E-5	IMPLEMENTATION
string functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999855768366727	WITHOUT_CLASSIFICATION	1.4423163327263076E-5	IMPLEMENTATION
time and date functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997606927110987	WITHOUT_CLASSIFICATION	2.393072889013737E-4	IMPLEMENTATION
system functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997609961670746	WITHOUT_CLASSIFICATION	2.390038329253755E-4	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9985562176794736	WITHOUT_CLASSIFICATION	0.00144378232052646	IMPLEMENTATION
23000 check constraint violation {0} 23001 unique index or primary key violation {0}	WITHOUT_CLASSIFICATION	0.9996702977621366	WITHOUT_CLASSIFICATION	3.297022378634018E-4	IMPLEMENTATION
display the dialect version.	WITHOUT_CLASSIFICATION	0.9999867255307282	WITHOUT_CLASSIFICATION	1.3274469271843794E-5	IMPLEMENTATION
the rdms concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9998885888281125	WITHOUT_CLASSIFICATION	1.1141117188754336E-4	IMPLEMENTATION
dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999261010077912	WITHOUT_CLASSIFICATION	7.38989922087661E-5	IMPLEMENTATION
original dialect.java returns " for update"	WITHOUT_CLASSIFICATION	0.9999146649526088	WITHOUT_CLASSIFICATION	8.5335047391139E-5	IMPLEMENTATION
verify the state of this new method in hibernate 3.0 dialect.java	WITHOUT_CLASSIFICATION	0.9999988346785196	WITHOUT_CLASSIFICATION	1.165321480454494E-6	IMPLEMENTATION
origial dialect.java returns true	WITHOUT_CLASSIFICATION	0.9998998536361586	WITHOUT_CLASSIFICATION	1.0014636384140392E-4	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9998692919823132	WITHOUT_CLASSIFICATION	1.307080176868245E-4	IMPLEMENTATION
sequence methods - start. the rdms dialect needs these	WITHOUT_CLASSIFICATION	0.999792881896784	WITHOUT_CLASSIFICATION	2.0711810321607588E-4	IMPLEMENTATION
methods to make it possible to use the native id generator	WITHOUT_CLASSIFICATION	0.9969172143635984	WITHOUT_CLASSIFICATION	0.003082785636401638	IMPLEMENTATION
the where clause was added to eliminate this statement from brute force searches.	WITHOUT_CLASSIFICATION	0.9999867147009311	WITHOUT_CLASSIFICATION	1.3285299068893168E-5	IMPLEMENTATION
sequence methods - end	WITHOUT_CLASSIFICATION	0.9999709302300082	WITHOUT_CLASSIFICATION	2.906976999175911E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999644860099881	WITHOUT_CLASSIFICATION	3.551399001182617E-5	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9999230761227278	WITHOUT_CLASSIFICATION	7.692387727214521E-5	IMPLEMENTATION
used with drop table to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999991126712152	WITHOUT_CLASSIFICATION	8.873287846953992E-7	IMPLEMENTATION
rdms supports the union all clause.	WITHOUT_CLASSIFICATION	0.9994542494534511	WITHOUT_CLASSIFICATION	5.457505465489502E-4	IMPLEMENTATION
rdms has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999967456185549	WITHOUT_CLASSIFICATION	3.254381445256621E-6	IMPLEMENTATION
multi-param dialect functions	WITHOUT_CLASSIFICATION	0.9999682076412176	WITHOUT_CLASSIFICATION	3.179235878236383E-5	IMPLEMENTATION
function templates	WITHOUT_CLASSIFICATION	0.9998943977706005	WITHOUT_CLASSIFICATION	1.056022293994726E-4	IMPLEMENTATION
not null is implicit	WITHOUT_CLASSIFICATION	0.9985562176794736	WITHOUT_CLASSIFICATION	0.00144378232052646	IMPLEMENTATION
this assumes schema support which is present in 1.8.0 and later	WITHOUT_CLASSIFICATION	0.9997633963198702	WITHOUT_CLASSIFICATION	2.366036801298037E-4	IMPLEMENTATION
hsqldb only supports read_uncommitted transaction isolation	WITHOUT_CLASSIFICATION	0.9998162528686054	WITHOUT_CLASSIFICATION	1.8374713139466807E-4	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999863578637412	WITHOUT_CLASSIFICATION	1.364213625884171E-5	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9999385776210733	WITHOUT_CLASSIFICATION	6.142237892669929E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.999686453011131	WITHOUT_CLASSIFICATION	3.135469888690015E-4	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999695377061696	WITHOUT_CLASSIFICATION	3.0462293830338144E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.999349708210114	WITHOUT_CLASSIFICATION	6.502917898859281E-4	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999930170447714	WITHOUT_CLASSIFICATION	6.982955228501639E-6	IMPLEMENTATION
timesten has no blob/clob support but these types may be suitable for some applications. the length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9998966864570489	WITHOUT_CLASSIFICATION	1.0331354295108571E-4	IMPLEMENTATION
new methods in dialect3	WITHOUT_CLASSIFICATION	0.999998883005337	WITHOUT_CLASSIFICATION	1.1169946629878102E-6	IMPLEMENTATION
public boolean supportsforupdatenowait() {return false}	WITHOUT_CLASSIFICATION	0.999987942201776	WITHOUT_CLASSIFICATION	1.205779822404044E-5	IMPLEMENTATION
timesten has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999966980725616	WITHOUT_CLASSIFICATION	3.301927438307047E-6	IMPLEMENTATION
iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9998965838849955	WITHOUT_CLASSIFICATION	1.0341611500464235E-4	IMPLEMENTATION
add new ordered map	WITHOUT_CLASSIFICATION	0.9998261073465408	WITHOUT_CLASSIFICATION	1.738926534592923E-4	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" )	WITHOUT_CLASSIFICATION	0.9998592753119572	WITHOUT_CLASSIFICATION	1.407246880427847E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999879864924934	WITHOUT_CLASSIFICATION	1.2013507506561993E-5	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999848259872832	WITHOUT_CLASSIFICATION	1.5174012716847265E-5	IMPLEMENTATION
return "select current_timestamp from rdb$database"	WITHOUT_CLASSIFICATION	0.9999920831835943	WITHOUT_CLASSIFICATION	7.916816405634321E-6	IMPLEMENTATION
registercolumntype data types	WITHOUT_CLASSIFICATION	0.9999497653137513	WITHOUT_CLASSIFICATION	5.023468624869615E-5	IMPLEMENTATION
hibernate seems to ignore this type	WITHOUT_CLASSIFICATION	0.9998770751205456	WITHOUT_CLASSIFICATION	1.2292487945436665E-4	IMPLEMENTATION
ibid for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999743672701816	WITHOUT_CLASSIFICATION	2.563272981838089E-5	IMPLEMENTATION
tell hibernate to use getbytes instead of getbinarystream	WITHOUT_CLASSIFICATION	0.9998781865702266	WITHOUT_CLASSIFICATION	1.2181342977337349E-4	IMPLEMENTATION
no batch statements	WITHOUT_CLASSIFICATION	0.9999061441906426	WITHOUT_CLASSIFICATION	9.385580935733118E-5	IMPLEMENTATION
we might want a special case for 192. this is very common for money types and here it is converted to 181	WITHOUT_CLASSIFICATION	0.9972170826339777	WITHOUT_CLASSIFICATION	0.002782917366022255	IMPLEMENTATION
no pointbase bit	WITHOUT_CLASSIFICATION	0.9999166540496562	WITHOUT_CLASSIFICATION	8.33459503437264E-5	IMPLEMENTATION
no pointbase tinyint	WITHOUT_CLASSIFICATION	0.9999158892821386	WITHOUT_CLASSIFICATION	8.411071786147718E-5	IMPLEMENTATION
pointbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999967458635295	WITHOUT_CLASSIFICATION	3.2541364705490064E-6	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999644860099881	WITHOUT_CLASSIFICATION	3.551399001182617E-5	IMPLEMENTATION
the current_timestamp is more accurate but only known to be supported in sql server 7.0 and later (i.e. sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.99996530558645	WITHOUT_CLASSIFICATION	3.4694413549904957E-5	IMPLEMENTATION
sql server (at least up through 2005) does not support defining cascade delete constraints which can circel back to the mutating table	WITHOUT_CLASSIFICATION	0.9993412268349628	WITHOUT_CLASSIFICATION	6.587731650371631E-4	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9922651990727716	WITHOUT_CLASSIFICATION	0.007734800927228467	IMPLEMENTATION
registercolumntype( types.blob 16777215 "mediumblob" ) registercolumntype( types.blob 65535 "blob" )	WITHOUT_CLASSIFICATION	0.9998592753119572	WITHOUT_CLASSIFICATION	1.407246880427847E-4	IMPLEMENTATION
registercolumntype( types.clob 16777215 "mediumtext" ) registercolumntype( types.clob 65535 "text" )	WITHOUT_CLASSIFICATION	0.9998596657789856	WITHOUT_CLASSIFICATION	1.4033422101448264E-4	IMPLEMENTATION
registercolumntype( types.varchar 16777215 "mediumtext" ) registercolumntype( types.varchar 65535 "text" )	WITHOUT_CLASSIFICATION	0.9998596657789856	WITHOUT_CLASSIFICATION	1.4033422101448264E-4	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999644860099881	WITHOUT_CLASSIFICATION	3.551399001182617E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999848259872832	WITHOUT_CLASSIFICATION	1.5174012716847265E-5	IMPLEMENTATION
sybase bit type does not support null values	WITHOUT_CLASSIFICATION	0.9993531258023164	WITHOUT_CLASSIFICATION	6.468741976837319E-4	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999879864924934	WITHOUT_CLASSIFICATION	1.2013507506561993E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999754789854851	WITHOUT_CLASSIFICATION	2.4521014514873872E-5	IMPLEMENTATION
not null (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9990448461277028	WITHOUT_CLASSIFICATION	9.551538722971197E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999978534296221	WITHOUT_CLASSIFICATION	2.1465703778051204E-6	IMPLEMENTATION
multi-param string dialect functions	WITHOUT_CLASSIFICATION	0.9999863578637412	WITHOUT_CLASSIFICATION	1.364213625884171E-5	IMPLEMENTATION
multi-param numeric dialect functions	WITHOUT_CLASSIFICATION	0.9999385776210733	WITHOUT_CLASSIFICATION	6.142237892669929E-5	IMPLEMENTATION
multi-param date dialect functions	WITHOUT_CLASSIFICATION	0.999686453011131	WITHOUT_CLASSIFICATION	3.135469888690015E-4	IMPLEMENTATION
add another (inner) nested select add the main query close off the inner nested select	WITHOUT_CLASSIFICATION	0.999939034579549	WITHOUT_CLASSIFICATION	6.096542045086271E-5	IMPLEMENTATION
add the main query	WITHOUT_CLASSIFICATION	0.9996496064450098	WITHOUT_CLASSIFICATION	3.503935549903132E-4	IMPLEMENTATION
add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999324426791496	WITHOUT_CLASSIFICATION	6.755732085046443E-5	IMPLEMENTATION
this assumes you will want to ignore any update counts	WITHOUT_CLASSIFICATION	0.9999879864924934	WITHOUT_CLASSIFICATION	1.2013507506561993E-5	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999754789854851	WITHOUT_CLASSIFICATION	2.4521014514873872E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
starts with 1 implicitly	WITHOUT_CLASSIFICATION	0.9999644860099881	WITHOUT_CLASSIFICATION	3.551399001182617E-5	IMPLEMENTATION
simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999695377061696	WITHOUT_CLASSIFICATION	3.0462293830338144E-5	IMPLEMENTATION
not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.999349708210114	WITHOUT_CLASSIFICATION	6.502917898859281E-4	IMPLEMENTATION
register the type of the out param - an oracle specific type	WITHOUT_CLASSIFICATION	0.9999930170447714	WITHOUT_CLASSIFICATION	6.982955228501639E-6	IMPLEMENTATION
features which change between 8i 9i and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999963515365824	WITHOUT_CLASSIFICATION	3.6484634176082584E-5	IMPLEMENTATION
features which remain constant across 8i 9i and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997544193770735	WITHOUT_CLASSIFICATION	2.4558062292649637E-4	IMPLEMENTATION
binary %stream character %stream	WITHOUT_CLASSIFICATION	0.99995367446068	WITHOUT_CLASSIFICATION	4.6325539319932444E-5	IMPLEMENTATION
getdefaultproperties().setproperty(environment.statement_batch_size no_batch)	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
hibernate impelemnts cast in dialect.java	WITHOUT_CLASSIFICATION	0.9999942442533918	WITHOUT_CLASSIFICATION	5.755746608195055E-6	IMPLEMENTATION
aggregate functions shouldn't be registered right? registerfunction( "list" new standardsqlfunction("list"hibernate.string) ) stopped on $list	WITHOUT_CLASSIFICATION	0.9992976840738195	WITHOUT_CLASSIFICATION	7.023159261804812E-4	IMPLEMENTATION
ddl support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988338677983996	WITHOUT_CLASSIFICATION	0.0011661322016004744	IMPLEMENTATION
below is for cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999986948325742	WITHOUT_CLASSIFICATION	1.3051674258333378E-6	IMPLEMENTATION
note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9998376737736981	WITHOUT_CLASSIFICATION	1.6232622630194286E-4	IMPLEMENTATION
%upper is deprecated	WITHOUT_CLASSIFICATION	0.9999292287483423	WITHOUT_CLASSIFICATION	7.077125165768646E-5	IMPLEMENTATION
the syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.999904231220688	WITHOUT_CLASSIFICATION	9.576877931206138E-5	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
identity support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990147181802219	WITHOUT_CLASSIFICATION	9.852818197780954E-4	IMPLEMENTATION
sequence support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99897256966469	WITHOUT_CLASSIFICATION	0.0010274303353099768	IMPLEMENTATION
temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9990666119391024	WITHOUT_CLASSIFICATION	9.333880608975818E-4	IMPLEMENTATION
identifier-commalist	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
the syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999386359458482	WITHOUT_CLASSIFICATION	6.136405415181627E-5	IMPLEMENTATION
completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999074817535214	WITHOUT_CLASSIFICATION	9.25182464785222E-5	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988942262499616	WITHOUT_CLASSIFICATION	0.001105773750038288	IMPLEMENTATION
limit support (ala top) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999124900883599	WITHOUT_CLASSIFICATION	8.750991164011083E-4	IMPLEMENTATION
intersystems cache' does not current support "select for update" syntax set your transaction mode to read_committed before using	WITHOUT_CLASSIFICATION	0.9991436105760575	WITHOUT_CLASSIFICATION	8.563894239425144E-4	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
<string>	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989332851494807	WITHOUT_CLASSIFICATION	0.0010667148505193107	IMPLEMENTATION
miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988338677983996	WITHOUT_CLASSIFICATION	0.0011661322016004744	IMPLEMENTATION
the keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9998692919823132	WITHOUT_CLASSIFICATION	1.307080176868245E-4	IMPLEMENTATION
does the limit clause come at the start of the select statement rather than at the end?	WITHOUT_CLASSIFICATION	0.9999996281427019	WITHOUT_CLASSIFICATION	3.71857298065109E-7	IMPLEMENTATION
does the limit clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999910292589861	WITHOUT_CLASSIFICATION	8.970741013983132E-6	IMPLEMENTATION
the name of the sql function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999917154680346	WITHOUT_CLASSIFICATION	8.284531965493329E-6	IMPLEMENTATION
create an outerjoingenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999963775073896	WITHOUT_CLASSIFICATION	3.622492610416853E-6	IMPLEMENTATION
the keyword used to insert a row without specifying any column values	WITHOUT_CLASSIFICATION	0.9999988636100205	WITHOUT_CLASSIFICATION	1.1363899793749967E-6	IMPLEMENTATION
registerfunction( "trim" new standardsqlfunction( "trim" hibernate.string ) )	WITHOUT_CLASSIFICATION	0.9998799071292238	WITHOUT_CLASSIFICATION	1.2009287077616407E-4	IMPLEMENTATION
skip the from keyword in params	WITHOUT_CLASSIFICATION	0.9999979471777743	WITHOUT_CLASSIFICATION	2.052822225627682E-6	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999549597436747	WITHOUT_CLASSIFICATION	4.5040256325463976E-5	IMPLEMENTATION
potentialtrimcharacterargindex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999301369512809	WITHOUT_CLASSIFICATION	6.986304871918936E-5	IMPLEMENTATION
sqlfunction implementation	WITHOUT_CLASSIFICATION	0.9998313391540149	WITHOUT_CLASSIFICATION	1.686608459851223E-4	IMPLEMENTATION
conceivable that the dialect ctor could throw hibernateexceptions so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999579958981932	WITHOUT_CLASSIFICATION	4.200410180676118E-5	IMPLEMENTATION
register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.999915994410177	WITHOUT_CLASSIFICATION	8.400558982301997E-5	IMPLEMENTATION
register resolvers set via environment property	WITHOUT_CLASSIFICATION	0.9995600330102239	WITHOUT_CLASSIFICATION	4.399669897760069E-4	IMPLEMENTATION
kept for backward compatibility until after the 3.1beta5 release of ha	WITHOUT_CLASSIFICATION	0.9999697594207356	WITHOUT_CLASSIFICATION	3.024057926432503E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9998454409453326	WITHOUT_CLASSIFICATION	1.5455905466750614E-4	IMPLEMENTATION
the cascadingaction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999880589900872	WITHOUT_CLASSIFICATION	1.1941009912806522E-4	IMPLEMENTATION
the cascadingaction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998040444138546	WITHOUT_CLASSIFICATION	1.9595558614534712E-4	IMPLEMENTATION
delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999954777701986	WITHOUT_CLASSIFICATION	4.5222298014175115E-6	IMPLEMENTATION
orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999102317877874	WITHOUT_CLASSIFICATION	8.9768212212657E-5	IMPLEMENTATION
(lockmode) anything	WITHOUT_CLASSIFICATION	0.9996652433913017	WITHOUT_CLASSIFICATION	3.3475660869829995E-4	IMPLEMENTATION
lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999636079265309	WITHOUT_CLASSIFICATION	3.639207346910251E-5	IMPLEMENTATION
refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9996901416036622	WITHOUT_CLASSIFICATION	3.098583963377259E-4	IMPLEMENTATION
evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998112207170132	WITHOUT_CLASSIFICATION	1.8877928298676507E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999255189745817	WITHOUT_CLASSIFICATION	7.448102541833234E-5	IMPLEMENTATION
orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9997000969547831	WITHOUT_CLASSIFICATION	2.999030452168681E-4	IMPLEMENTATION
for deprecated saveorupdatecopy()	WITHOUT_CLASSIFICATION	0.9999683095376147	WITHOUT_CLASSIFICATION	3.169046238526832E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998112618397953	WITHOUT_CLASSIFICATION	1.887381602046044E-4	IMPLEMENTATION
a proxy cannot be transient and it breaks foreignkeys.istransient	WITHOUT_CLASSIFICATION	0.999990715650773	WITHOUT_CLASSIFICATION	9.28434922705417E-6	IMPLEMENTATION
replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999848888468664	WITHOUT_CLASSIFICATION	1.5111153133588582E-5	IMPLEMENTATION
static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999661101056152	WITHOUT_CLASSIFICATION	3.388989438487992E-5	IMPLEMENTATION
handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999092199237969	WITHOUT_CLASSIFICATION	9.078007620303872E-5	IMPLEMENTATION
actually the semantics of the next three are really "bag" note that unlike objects collection insertions updates deletions are not really remembered between flushes. we just re-use the same lists for convenience.	WITHOUT_CLASSIFICATION	0.9999691031778576	WITHOUT_CLASSIFICATION	3.089682214238001E-5	IMPLEMENTATION
add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9998215285060402	WITHOUT_CLASSIFICATION	1.7847149395966877E-4	IMPLEMENTATION
continue loop	WITHOUT_CLASSIFICATION	0.9999622620422094	WITHOUT_CLASSIFICATION	3.7737957790641294E-5	IMPLEMENTATION
sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999187896107892	WITHOUT_CLASSIFICATION	8.121038921086706E-5	IMPLEMENTATION
sort the updates by pk	WITHOUT_CLASSIFICATION	0.999953602106977	WITHOUT_CLASSIFICATION	4.6397893022956124E-5	IMPLEMENTATION
the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999489895499697	WITHOUT_CLASSIFICATION	5.1010450030348654E-5	IMPLEMENTATION
the map of batch numbers to entityinsertaction lists	WITHOUT_CLASSIFICATION	0.9999551624736626	WITHOUT_CLASSIFICATION	4.483752633750777E-5	IMPLEMENTATION
optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9998815050292582	WITHOUT_CLASSIFICATION	1.1849497074181563E-4	IMPLEMENTATION
the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9994905934727143	WITHOUT_CLASSIFICATION	5.094065272855944E-4	IMPLEMENTATION
remove the current element from insertions. it will be added back later.	WITHOUT_CLASSIFICATION	0.9999983687602355	WITHOUT_CLASSIFICATION	1.6312397644508578E-6	IMPLEMENTATION
the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.999921335716976	WITHOUT_CLASSIFICATION	7.866428302409226E-5	IMPLEMENTATION
there is already an existing batch for this type of entity. check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999997826913496	WITHOUT_CLASSIFICATION	2.1730865041526315E-7	IMPLEMENTATION
now rebuild the insertions list. there is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999942847027449	WITHOUT_CLASSIFICATION	5.715297255035051E-6	IMPLEMENTATION
the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999856645085367	WITHOUT_CLASSIFICATION	1.4335491463386349E-5	IMPLEMENTATION
loop through all the associations of the current entity and make sure that they are processed before the current batch number	WITHOUT_CLASSIFICATION	0.9999205722607051	WITHOUT_CLASSIFICATION	7.942773929481503E-5	IMPLEMENTATION
find the batch number associated with the current association if any.	WITHOUT_CLASSIFICATION	0.9999828672861365	WITHOUT_CLASSIFICATION	1.7132713863537064E-5	IMPLEMENTATION
create a new batch for this type. the batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999969954040753	WITHOUT_CLASSIFICATION	3.0045959247458286E-6	IMPLEMENTATION
loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9998642804456593	WITHOUT_CLASSIFICATION	1.3571955434068874E-4	IMPLEMENTATION
since this entity will now be processed in the latest possible batch we can be assured that it will come after all other associations there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.8002248952803078	WITHOUT_CLASSIFICATION	0.19977510471969218	IMPLEMENTATION
cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9998771949885522	WITHOUT_CLASSIFICATION	1.2280501144776415E-4	IMPLEMENTATION
not really necessary but good for consistency	WITHOUT_CLASSIFICATION	0.9998610570077159	WITHOUT_CLASSIFICATION	1.3894299228415634E-4	IMPLEMENTATION
we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9998796171357877	WITHOUT_CLASSIFICATION	1.203828642123493E-4	IMPLEMENTATION
a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9984131100124207	WITHOUT_CLASSIFICATION	0.0015868899875793167	IMPLEMENTATION
handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9998784243818112	WITHOUT_CLASSIFICATION	1.2157561818877334E-4	IMPLEMENTATION
loaded entity instances by entityuniquekey	WITHOUT_CLASSIFICATION	0.9999476309654126	WITHOUT_CLASSIFICATION	5.2369034587391436E-5	IMPLEMENTATION
identity map of entityentry instances by the entity instance	WITHOUT_CLASSIFICATION	0.9999757453569253	WITHOUT_CLASSIFICATION	2.4254643074740562E-5	IMPLEMENTATION
entity proxies by entitykey	WITHOUT_CLASSIFICATION	0.9999801246209561	WITHOUT_CLASSIFICATION	1.9875379043860605E-5	IMPLEMENTATION
snapshots of current database state for entities that have not been loaded	WITHOUT_CLASSIFICATION	0.9985188092180702	WITHOUT_CLASSIFICATION	0.0014811907819297834	IMPLEMENTATION
identity map of array holder arrayholder instances by the array instance	WITHOUT_CLASSIFICATION	0.9999930925222519	WITHOUT_CLASSIFICATION	6.907477748108276E-6	IMPLEMENTATION
collection wrappers by the collectionkey key=collectionkey value=persistentcollection	WITHOUT_CLASSIFICATION	0.9999231811112811	WITHOUT_CLASSIFICATION	7.681888871885008E-5	IMPLEMENTATION
set of entitykeys of deleted objects	WITHOUT_CLASSIFICATION	0.9998494771495969	WITHOUT_CLASSIFICATION	1.505228504031021E-4	IMPLEMENTATION
properties that we have tried to load and not found in the database	WITHOUT_CLASSIFICATION	0.9944859506951316	WITHOUT_CLASSIFICATION	0.005514049304868377	IMPLEMENTATION
a list of collection wrappers that were instantiating during result set processing that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9997711541719672	WITHOUT_CLASSIFICATION	2.2884582803281162E-4	IMPLEMENTATION
a container for collections we load up when the owning entity is not yet loaded for now this is purely transient!	WITHOUT_CLASSIFICATION	0.9995068799394957	WITHOUT_CLASSIFICATION	4.931200605042213E-4	IMPLEMENTATION
downgrade locks	WITHOUT_CLASSIFICATION	0.999899696310353	WITHOUT_CLASSIFICATION	1.0030368964700787E-4	IMPLEMENTATION
any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999711577335598	WITHOUT_CLASSIFICATION	2.8842266440173512E-5	IMPLEMENTATION
unwrap the object	WITHOUT_CLASSIFICATION	0.9999812954256023	WITHOUT_CLASSIFICATION	1.870457439762834E-5	IMPLEMENTATION
initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999948000937451	WITHOUT_CLASSIFICATION	5.1999062549100285E-6	IMPLEMENTATION
return the proxied object	WITHOUT_CLASSIFICATION	0.9999973423339625	WITHOUT_CLASSIFICATION	2.6576660375435456E-6	IMPLEMENTATION
overwrite old proxy	WITHOUT_CLASSIFICATION	0.999980394277249	WITHOUT_CLASSIFICATION	1.9605722750875197E-5	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999877802382721	WITHOUT_CLASSIFICATION	1.2219761727939798E-5	IMPLEMENTATION
or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999654824760819	WITHOUT_CLASSIFICATION	3.451752391818542E-5	IMPLEMENTATION
treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9865938710668902	WITHOUT_CLASSIFICATION	0.01340612893310967	IMPLEMENTATION
do this work only at the very highest level of the load don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.999545655362674	WITHOUT_CLASSIFICATION	4.543446373259227E-4	IMPLEMENTATION
note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999516052239529	WITHOUT_CLASSIFICATION	4.839477604717615E-5	IMPLEMENTATION
it might be an unwrapped collection reference! try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9998510920444126	WITHOUT_CLASSIFICATION	1.4890795558731532E-4	IMPLEMENTATION
public boolean isnonexistant(entitykey key) {return nonexistantentitykeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999879392894048	WITHOUT_CLASSIFICATION	1.2060710595144E-5	IMPLEMENTATION
public boolean isnonexistant(entityuniquekey key) {return nonexistententityuniquekeys.contains(key)}	WITHOUT_CLASSIFICATION	0.9999879392894048	WITHOUT_CLASSIFICATION	1.2060710595144E-5	IMPLEMENTATION
iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999867916916578	WITHOUT_CLASSIFICATION	1.3208308342242526E-5	IMPLEMENTATION
does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.999997904764238	WITHOUT_CLASSIFICATION	2.0952357619744486E-6	IMPLEMENTATION
check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999967364663397	WITHOUT_CLASSIFICATION	3.26353366025595E-6	IMPLEMENTATION
otherwise the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999700009822103	WITHOUT_CLASSIFICATION	2.9999017789674544E-5	IMPLEMENTATION
adds remove as a sort-of alias for delete	WITHOUT_CLASSIFICATION	0.9999987193324446	WITHOUT_CLASSIFICATION	1.2806675554507929E-6	IMPLEMENTATION
bad cast	WITHOUT_CLASSIFICATION	0.9999634924923313	WITHOUT_CLASSIFICATION	3.6507507668663755E-5	IMPLEMENTATION
return lhspersister.getsubclasspropertycolumnnames(property)	WITHOUT_CLASSIFICATION	0.999971136654221	WITHOUT_CLASSIFICATION	2.8863345779078894E-5	IMPLEMENTATION
property-refs for associations defined on a component are not supported so no need to slice	WITHOUT_CLASSIFICATION	0.9998202113598968	WITHOUT_CLASSIFICATION	1.7978864010318688E-4	IMPLEMENTATION
if there is no property-ref assume the join is to the subclass table (ie. the table of the subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999982449517681	WITHOUT_CLASSIFICATION	1.7550482317709868E-6	IMPLEMENTATION
handle a property-ref	WITHOUT_CLASSIFICATION	0.9998915510047458	WITHOUT_CLASSIFICATION	1.0844899525419219E-4	IMPLEMENTATION
nativesqlqueryreturn	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9998519709886241	WITHOUT_CLASSIFICATION	1.4802901137594548E-4	IMPLEMENTATION
why is all others non final ?	WITHOUT_CLASSIFICATION	0.9987846829347686	WITHOUT_CLASSIFICATION	0.0012153170652313859	IMPLEMENTATION
this.forcecacherefresh = forcecacherefresh	WITHOUT_CLASSIFICATION	0.9998307994426365	WITHOUT_CLASSIFICATION	1.6920055736352027E-4	IMPLEMENTATION
hella important optimization!!!	WITHOUT_CLASSIFICATION	0.999890871537721	WITHOUT_CLASSIFICATION	1.0912846227906236E-4	IMPLEMENTATION
return that.type.equals(type) && equalshelper.equals(that.value value)	WITHOUT_CLASSIFICATION	0.999971482234327	WITHOUT_CLASSIFICATION	2.8517765673058534E-5	IMPLEMENTATION
must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.999876037649192	WITHOUT_CLASSIFICATION	1.2396235080801898E-4	IMPLEMENTATION
take a snapshot	WITHOUT_CLASSIFICATION	0.9999319023295463	WITHOUT_CLASSIFICATION	6.809767045365895E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9997826922418213	WITHOUT_CLASSIFICATION	2.173077581788332E-4	IMPLEMENTATION
the owning entity may have been deleted and its identifier unset due to identifier-rollback in which case try to look up its identifier from the persistence context	WITHOUT_CLASSIFICATION	0.999477290268787	WITHOUT_CLASSIFICATION	5.227097312129959E-4	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9993555459890802	WITHOUT_CLASSIFICATION	6.444540109197751E-4	IMPLEMENTATION
we've been here before	WITHOUT_CLASSIFICATION	0.9999495923523852	WITHOUT_CLASSIFICATION	5.04076476148138E-5	IMPLEMENTATION
it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999963391291605	WITHOUT_CLASSIFICATION	3.6608708393998014E-6	IMPLEMENTATION
do the work	WITHOUT_CLASSIFICATION	0.9993555459890802	WITHOUT_CLASSIFICATION	6.444540109197751E-4	IMPLEMENTATION
if either its role changed	WITHOUT_CLASSIFICATION	0.9999995339883841	WITHOUT_CLASSIFICATION	4.660116157978059E-7	IMPLEMENTATION
or its key changed	WITHOUT_CLASSIFICATION	0.9999934607609815	WITHOUT_CLASSIFICATION	6.539239018571132E-6	IMPLEMENTATION
we will need to create new entries	WITHOUT_CLASSIFICATION	0.9997186540557598	WITHOUT_CLASSIFICATION	2.8134594424020443E-4	IMPLEMENTATION
we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.999675300082623	WITHOUT_CLASSIFICATION	3.246999173770565E-4	IMPLEMENTATION
force initialize!	WITHOUT_CLASSIFICATION	0.9992779079766563	WITHOUT_CLASSIFICATION	7.220920233436075E-4	IMPLEMENTATION
else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999991912862018	WITHOUT_CLASSIFICATION	8.087137981520381E-7	IMPLEMENTATION
attributes maintained between flush cycles	WITHOUT_CLASSIFICATION	0.9999077683173381	WITHOUT_CLASSIFICATION	9.223168266193396E-5	IMPLEMENTATION
session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999707197497384	WITHOUT_CLASSIFICATION	2.9280250261599957E-5	IMPLEMENTATION
allow the collectionsnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9998952860518988	WITHOUT_CLASSIFICATION	1.0471394810113251E-4	IMPLEMENTATION
attributes used only during flush cycle	WITHOUT_CLASSIFICATION	0.9999508976067238	WITHOUT_CLASSIFICATION	4.9102393276180575E-5	IMPLEMENTATION
"current" means the reference that was found during flush()	WITHOUT_CLASSIFICATION	0.999996944538143	WITHOUT_CLASSIFICATION	3.0554618570144494E-6	IMPLEMENTATION
"loaded" means the reference that is consistent with the current database state	WITHOUT_CLASSIFICATION	0.9999852847650766	WITHOUT_CLASSIFICATION	1.4715234923324907E-5	IMPLEMENTATION
during flush we navigate the object graph to collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9991399319510686	WITHOUT_CLASSIFICATION	8.60068048931445E-4	IMPLEMENTATION
if we instantiate a collection during the flush() process we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.999977685548023	WITHOUT_CLASSIFICATION	2.231445197699425E-5	IMPLEMENTATION
new collections that get found + wrapped during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9963056534036993	WITHOUT_CLASSIFICATION	0.0036943465963008176	IMPLEMENTATION
a newly wrapped collection is not dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.989297468816489	WITHOUT_CLASSIFICATION	0.010702531183511011	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.9999568524432488	WITHOUT_CLASSIFICATION	4.3147556751217095E-5	IMPLEMENTATION
collection.cleardirty()	WITHOUT_CLASSIFICATION	0.9999568524432488	WITHOUT_CLASSIFICATION	4.3147556751217095E-5	IMPLEMENTATION
detached collections that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9956508120232584	WITHOUT_CLASSIFICATION	0.004349187976741548	IMPLEMENTATION
optimization	WITHOUT_CLASSIFICATION	0.9998987016720687	WITHOUT_CLASSIFICATION	1.0129832793134404E-4	IMPLEMENTATION
optimization optimization	WITHOUT_CLASSIFICATION	0.9999568585671454	WITHOUT_CLASSIFICATION	4.314143285463824E-5	IMPLEMENTATION
re-snapshot	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.999967274906232	WITHOUT_CLASSIFICATION	3.272509376792063E-5	IMPLEMENTATION
note this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9964458479438207	WITHOUT_CLASSIFICATION	0.003554152056179307	IMPLEMENTATION
memory optimization	WITHOUT_CLASSIFICATION	0.9998175304123356	WITHOUT_CLASSIFICATION	1.824695876644965E-4	IMPLEMENTATION
use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999377490153761	WITHOUT_CLASSIFICATION	6.225098462386344E-5	IMPLEMENTATION
copied from session	WITHOUT_CLASSIFICATION	0.999872158831894	WITHOUT_CLASSIFICATION	1.278411681061054E-4	IMPLEMENTATION
this should not happen since the dtd prevents it	WITHOUT_CLASSIFICATION	0.9958072876667237	WITHOUT_CLASSIFICATION	0.0041927123332762325	IMPLEMENTATION
joinprocessor needs to know if the where clause fragment came from a dynamic filter or not so it can put the where clause fragment in the right place in the sql ast. 'hasfiltercondition' keeps track of that fact.	WITHOUT_CLASSIFICATION	0.6610879346055509	IMPLEMENTATION	0.3389120653944492	WITHOUT_CLASSIFICATION
the current join represents the join between a many-to-many association table and its "target" table. here we need to apply any additional filters defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9993010523356762	WITHOUT_CLASSIFICATION	6.989476643237575E-4	IMPLEMENTATION
check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9989264010701508	WITHOUT_CLASSIFICATION	0.0010735989298491942	IMPLEMENTATION
values is not null and is checkable we'll look deeper	WITHOUT_CLASSIFICATION	0.999487238589525	WITHOUT_CLASSIFICATION	5.127614104749758E-4	IMPLEMENTATION
for non null args check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999722600874124	WITHOUT_CLASSIFICATION	2.7739912587644663E-5	IMPLEMENTATION
cache the hashcode	WITHOUT_CLASSIFICATION	0.9998454409453326	WITHOUT_CLASSIFICATION	1.5455905466750614E-4	IMPLEMENTATION
persistent collections may have components	WITHOUT_CLASSIFICATION	0.9997701329528098	WITHOUT_CLASSIFICATION	2.2986704719014665E-4	IMPLEMENTATION
check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999983396805443	WITHOUT_CLASSIFICATION	1.6603194557372591E-6	IMPLEMENTATION
will check current level if some of them are not null or sublevels if they exist	WITHOUT_CLASSIFICATION	0.9993660567405442	WITHOUT_CLASSIFICATION	6.339432594557673E-4	IMPLEMENTATION
do the test	WITHOUT_CLASSIFICATION	0.9999708215463687	WITHOUT_CLASSIFICATION	2.9178453631235414E-5	IMPLEMENTATION
if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999953806169021	WITHOUT_CLASSIFICATION	4.619383097999377E-6	IMPLEMENTATION
unwrap it	WITHOUT_CLASSIFICATION	0.999952366001053	WITHOUT_CLASSIFICATION	4.763399894709601E-5	IMPLEMENTATION
see if the entity is already bound to this session if not look at the entity identifier and assume that the entity is persistent if the id is not "unsaved" (that is we rely on foreign keys to keep database integrity)	WITHOUT_CLASSIFICATION	0.9818634555539392	WITHOUT_CLASSIFICATION	0.01813654444606087	IMPLEMENTATION
an unfetched association can only point to an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999938077141399	WITHOUT_CLASSIFICATION	6.192285860001325E-6	IMPLEMENTATION
let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999657626962233	WITHOUT_CLASSIFICATION	3.4237303776694837E-5	IMPLEMENTATION
let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999488578903516	WITHOUT_CLASSIFICATION	5.1142109648483035E-5	IMPLEMENTATION
we use the assumed value if there is one to avoid hitting the database	WITHOUT_CLASSIFICATION	0.9999944917860629	WITHOUT_CLASSIFICATION	5.50821393710231E-6	IMPLEMENTATION
hit the database after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999489107892897	WITHOUT_CLASSIFICATION	5.10892107102788E-5	IMPLEMENTATION
context-entity-identifier returns null explicitly if the entity is not associated with the persistence context so make some deeper checks	WITHOUT_CLASSIFICATION	0.9973810846694365	WITHOUT_CLASSIFICATION	0.0026189153305633908	IMPLEMENTATION
int count = 0	WITHOUT_CLASSIFICATION	0.9999149764249722	WITHOUT_CLASSIFICATION	8.502357502774581E-5	IMPLEMENTATION
the first key found after the given key	WITHOUT_CLASSIFICATION	0.9997939937781357	WITHOUT_CLASSIFICATION	2.06006221864374E-4	IMPLEMENTATION
checkforend = false	WITHOUT_CLASSIFICATION	0.9999188669626984	WITHOUT_CLASSIFICATION	8.11330373015377E-5	IMPLEMENTATION
count++	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999810038070588	WITHOUT_CLASSIFICATION	1.8996192941216873E-5	IMPLEMENTATION
we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999597794208377	WITHOUT_CLASSIFICATION	4.022057916236858E-5	IMPLEMENTATION
first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999997280201914	WITHOUT_CLASSIFICATION	2.7197980852956703E-7	IMPLEMENTATION
the first id found after the given id	WITHOUT_CLASSIFICATION	0.9986867019047329	WITHOUT_CLASSIFICATION	0.0013132980952672362	IMPLEMENTATION
we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999530161661486	WITHOUT_CLASSIFICATION	4.698383385140074E-5	IMPLEMENTATION
look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999655113998838	WITHOUT_CLASSIFICATION	3.448860011616554E-5	IMPLEMENTATION
ignore this row of results! note the early exit	WITHOUT_CLASSIFICATION	0.9999492932671756	WITHOUT_CLASSIFICATION	5.070673282433111E-5	IMPLEMENTATION
initialize this collection	WITHOUT_CLASSIFICATION	0.999873990803761	WITHOUT_CLASSIFICATION	1.2600919623895784E-4	IMPLEMENTATION
create one	WITHOUT_CLASSIFICATION	0.9999800245521894	WITHOUT_CLASSIFICATION	1.997544781072056E-5	IMPLEMENTATION
warning can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9994103301755008	WITHOUT_CLASSIFICATION	5.896698244991178E-4	IMPLEMENTATION
there were no queued additions and the role has a cache	WITHOUT_CLASSIFICATION	0.9999787477609762	WITHOUT_CLASSIFICATION	2.1252239023865824E-5	IMPLEMENTATION
and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9954416748638443	WITHOUT_CLASSIFICATION	0.0045583251361557085	IMPLEMENTATION
some filters affecting the collection are enabled on the session so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.8834373249441468	WITHOUT_CLASSIFICATION	0.11656267505585319	IMPLEMENTATION
cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999064924864601	WITHOUT_CLASSIFICATION	9.350751353991636E-5	IMPLEMENTATION
loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997022251631926	WITHOUT_CLASSIFICATION	2.9777483680731935E-4	IMPLEMENTATION
collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998257130244711	WITHOUT_CLASSIFICATION	1.7428697552888795E-4	IMPLEMENTATION
simple cache of param metadata based on query string. ideally the original "user-supplied query" string should be used to retreive this metadata (i.e. not the para-list-expanded query string) to avoid unnecessary cache entries. used solely for caching param metadata for native-sql queries see getsqlparametermetadata() for a discussion as to why	WITHOUT_CLASSIFICATION	0.9986371124557494	WITHOUT_CLASSIFICATION	0.001362887544250609	IMPLEMENTATION
the cache of the actual plans	WITHOUT_CLASSIFICATION	0.9999614603811107	WITHOUT_CLASSIFICATION	3.853961888931636E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999549597436747	WITHOUT_CLASSIFICATION	4.5040256325463976E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999549597436747	WITHOUT_CLASSIFICATION	4.5040256325463976E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999319734172126	WITHOUT_CLASSIFICATION	6.802658278736794E-5	IMPLEMENTATION
for native-sql queries the param metadata is determined outside any relation to a query plan because query plan creation and/or retreival for a native-sql query depends on all of the return types having been set which might not be the case up-front when param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9961824237270166	WITHOUT_CLASSIFICATION	0.0038175762729834263	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999624326479576	WITHOUT_CLASSIFICATION	3.756735204237036E-5	IMPLEMENTATION
recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999112989700613	WITHOUT_CLASSIFICATION	8.870102993873375E-5	IMPLEMENTATION
don't care	WITHOUT_CLASSIFICATION	0.9999624326479576	WITHOUT_CLASSIFICATION	3.756735204237036E-5	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999791378011761	WITHOUT_CLASSIFICATION	2.086219882395818E-5	IMPLEMENTATION
break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999934122023578	WITHOUT_CLASSIFICATION	6.587797642098446E-6	IMPLEMENTATION
named parameter	WITHOUT_CLASSIFICATION	0.9999551121517406	WITHOUT_CLASSIFICATION	4.48878482593679E-5	IMPLEMENTATION
could be either an ordinal or jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999983807490547	WITHOUT_CLASSIFICATION	1.6192509453949498E-6	IMPLEMENTATION
a peek ahead showed this as an jpa-positional parameter	WITHOUT_CLASSIFICATION	0.9999806566908398	WITHOUT_CLASSIFICATION	1.934330916015877E-5	IMPLEMENTATION
make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999614872661686	WITHOUT_CLASSIFICATION	3.851273383139552E-5	IMPLEMENTATION
pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9998467434914962	WITHOUT_CLASSIFICATION	1.5325650850383767E-4	IMPLEMENTATION
perform the actual work	WITHOUT_CLASSIFICATION	0.9998335780909596	WITHOUT_CLASSIFICATION	1.664219090403738E-4	IMPLEMENTATION
if everything went ok commit the transaction and close the obtained connection handle	WITHOUT_CLASSIFICATION	0.9956488593638426	WITHOUT_CLASSIFICATION	0.004351140636157366	IMPLEMENTATION
at some point the processing went bad so we need to 1) make sure the connection handle gets released 2) try to cleanup the jta context as much as possible	WITHOUT_CLASSIFICATION	0.865664653187502	WITHOUT_CLASSIFICATION	0.13433534681249804	IMPLEMENTATION
finally handle the exception	WITHOUT_CLASSIFICATION	0.9999538949064612	WITHOUT_CLASSIFICATION	4.6105093538820556E-5	IMPLEMENTATION
a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9991429225230649	WITHOUT_CLASSIFICATION	8.570774769349695E-4	IMPLEMENTATION
saveorupdatecopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999579123669241	WITHOUT_CLASSIFICATION	4.208763307584925E-5	IMPLEMENTATION
collectionpersister should not be null but we don't want to throw an exception if it is null	WITHOUT_CLASSIFICATION	0.9999816624826673	WITHOUT_CLASSIFICATION	1.8337517332718904E-5	IMPLEMENTATION
otherwise a null or brand new collection this will also (inefficiently) handle arrays which have no snapshot so we can't do any better processarrayornewcollection(collection type)	WITHOUT_CLASSIFICATION	0.9024569777935948	WITHOUT_CLASSIFICATION	0.09754302220640526	IMPLEMENTATION
a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9996553754830589	WITHOUT_CLASSIFICATION	3.446245169411048E-4	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.999992421672972	WITHOUT_CLASSIFICATION	7.578327027965915E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.999992421672972	WITHOUT_CLASSIFICATION	7.578327027965915E-6	IMPLEMENTATION
force a substitution!	WITHOUT_CLASSIFICATION	0.9997255726215701	WITHOUT_CLASSIFICATION	2.74427378429815E-4	IMPLEMENTATION
the user requested a "greater" (i.e. more restrictive) form of pessimistic lock	WITHOUT_CLASSIFICATION	0.9995034983834875	WITHOUT_CLASSIFICATION	4.965016165124578E-4	IMPLEMENTATION
the database now holds a lock + the object is flushed from the cache so release the soft lock	WITHOUT_CLASSIFICATION	0.9999990013311253	WITHOUT_CLASSIFICATION	9.986688746476094E-7	IMPLEMENTATION
now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999984380087861	WITHOUT_CLASSIFICATION	1.5619912140502294E-6	IMPLEMENTATION
search for collections by reachability updating their role. we don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999559681854315	WITHOUT_CLASSIFICATION	4.403181456852656E-5	IMPLEMENTATION
this is a situation where the entity id is assigned by a post-insert generator and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999687170088196	WITHOUT_CLASSIFICATION	3.1282991180422816E-5	IMPLEMENTATION
note we need to do the wrap here even if its not "dirty" because collections need wrapping but changes to _them_ don't dirty the container. also for versioned data we need to wrap before calling searchfordirtycollections	WITHOUT_CLASSIFICATION	0.999816045761831	WITHOUT_CLASSIFICATION	1.8395423816900967E-4	IMPLEMENTATION
grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.999999524915863	WITHOUT_CLASSIFICATION	4.7508413694894976E-7	IMPLEMENTATION
grab its current state	WITHOUT_CLASSIFICATION	0.9999790232081865	WITHOUT_CLASSIFICATION	2.0976791813453848E-5	IMPLEMENTATION
schedule the update note that we intentionally do _not_ pass in currentpersistentstate!	WITHOUT_CLASSIFICATION	0.9999952209174192	WITHOUT_CLASSIFICATION	4.779082580793989E-6	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999967887426584	WITHOUT_CLASSIFICATION	3.2112573415113447E-6	IMPLEMENTATION
give the interceptor a chance to process property values if the properties were modified by the interceptor we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999664364512788	WITHOUT_CLASSIFICATION	3.3563548721294365E-5	IMPLEMENTATION
compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999370189201597	WITHOUT_CLASSIFICATION	6.298107984021144E-5	IMPLEMENTATION
if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999988251767861	WITHOUT_CLASSIFICATION	1.1748232140129857E-6	IMPLEMENTATION
increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9990166338666416	WITHOUT_CLASSIFICATION	9.833661333583307E-4	IMPLEMENTATION
check nullability but do not perform command execute we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.999795861422203	WITHOUT_CLASSIFICATION	2.0413857779713512E-4	IMPLEMENTATION
give the interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999924103127276	WITHOUT_CLASSIFICATION	7.589687272547679E-6	IMPLEMENTATION
now we might need to recalculate the dirtyproperties array	WITHOUT_CLASSIFICATION	0.9992609136127245	WITHOUT_CLASSIFICATION	7.390863872754878E-4	IMPLEMENTATION
use the current version	WITHOUT_CLASSIFICATION	0.9997792260559455	WITHOUT_CLASSIFICATION	2.2077394405464534E-4	IMPLEMENTATION
interceptor returned null so do the dirtycheck ourself if possible	WITHOUT_CLASSIFICATION	0.9999957813305869	WITHOUT_CLASSIFICATION	4.218669413079579E-6	IMPLEMENTATION
object loaded by update()	WITHOUT_CLASSIFICATION	0.9999975844108735	WITHOUT_CLASSIFICATION	2.4155891265675552E-6	IMPLEMENTATION
dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9993293613592996	WITHOUT_CLASSIFICATION	6.706386407003378E-4	IMPLEMENTATION
dirty check against the database snapshot if possible/necessary	WITHOUT_CLASSIFICATION	0.999844696179439	WITHOUT_CLASSIFICATION	1.553038205608423E-4	IMPLEMENTATION
the interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9998412582355028	WITHOUT_CLASSIFICATION	1.5874176449725896E-4	IMPLEMENTATION
even process null collections	WITHOUT_CLASSIFICATION	0.9999711990107862	WITHOUT_CLASSIFICATION	2.880098921381043E-5	IMPLEMENTATION
get the id from the object	WITHOUT_CLASSIFICATION	0.9999965320271123	WITHOUT_CLASSIFICATION	3.467972887747674E-6	IMPLEMENTATION
always do an insert and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999771547145365	WITHOUT_CLASSIFICATION	2.2845285463502177E-5	IMPLEMENTATION
what is the version on the database?	WITHOUT_CLASSIFICATION	0.9949516124455701	WITHOUT_CLASSIFICATION	0.005048387554429843	IMPLEMENTATION
/ hhh-2378	WITHOUT_CLASSIFICATION	0.9999890397032709	WITHOUT_CLASSIFICATION	1.0960296728991044E-5	IMPLEMENTATION
will result in a sql update	WITHOUT_CLASSIFICATION	0.9999999482270349	WITHOUT_CLASSIFICATION	5.177296514798787E-8	IMPLEMENTATION
else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999768779991921	WITHOUT_CLASSIFICATION	2.312200080787824E-5	IMPLEMENTATION
no existing row - do an insert	WITHOUT_CLASSIFICATION	0.999996691025119	WITHOUT_CLASSIFICATION	3.308974881050929E-6	IMPLEMENTATION
refresh() does not pass an entityname	WITHOUT_CLASSIFICATION	0.9999136355364711	WITHOUT_CLASSIFICATION	8.636446352887837E-5	IMPLEMENTATION
do not return a proxy! (this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9977691680624838	WITHOUT_CLASSIFICATION	0.0022308319375162096	IMPLEMENTATION
return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999982195216139	WITHOUT_CLASSIFICATION	1.7804783860541086E-6	IMPLEMENTATION
return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999975549484829	WITHOUT_CLASSIFICATION	2.4450515171830903E-6	IMPLEMENTATION
return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999908006451386	WITHOUT_CLASSIFICATION	9.199354861380511E-6	IMPLEMENTATION
this object was already loaded	WITHOUT_CLASSIFICATION	0.9999993498173297	WITHOUT_CLASSIFICATION	6.501826702243811E-7	IMPLEMENTATION
entity was found in second-level cache	WITHOUT_CLASSIFICATION	0.9999986035014499	WITHOUT_CLASSIFICATION	1.3964985500709692E-6	IMPLEMENTATION
make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9990650434796511	WITHOUT_CLASSIFICATION	9.34956520348884E-4	IMPLEMENTATION
intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999740516746645	WITHOUT_CLASSIFICATION	2.5948325335618745E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pre-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999148919829007	WITHOUT_CLASSIFICATION	8.51080170992408E-5	IMPLEMENTATION
some statistics	WITHOUT_CLASSIFICATION	0.9997058020735078	WITHOUT_CLASSIFICATION	2.941979264922754E-4	IMPLEMENTATION
safe from concurrent modification because of how entrylist() is implemented on identitymap	WITHOUT_CLASSIFICATION	0.9186583183181005	WITHOUT_CLASSIFICATION	0.08134168168189945	IMPLEMENTATION
initialize dirty flags for arrays + collections with composite elements and reset reached doupdate etc.	WITHOUT_CLASSIFICATION	0.9995346390454984	WITHOUT_CLASSIFICATION	4.65360954501619E-4	IMPLEMENTATION
among other things updatereachables() will recursively load all collections that are moving roles. this might cause entities to be loaded.	WITHOUT_CLASSIFICATION	0.999530055135222	WITHOUT_CLASSIFICATION	4.699448647780271E-4	IMPLEMENTATION
so this needs to be safe from concurrent modification problems. it is safe because of how identitymap implements entryset()	WITHOUT_CLASSIFICATION	0.9997827409110583	WITHOUT_CLASSIFICATION	2.1725908894150312E-4	IMPLEMENTATION
update the status of the object and if necessary schedule an update	WITHOUT_CLASSIFICATION	0.9999999097233097	WITHOUT_CLASSIFICATION	9.027669029566848E-8	IMPLEMENTATION
schedule updates to collections	WITHOUT_CLASSIFICATION	0.9998637346426106	WITHOUT_CLASSIFICATION	1.3626535738950622E-4	IMPLEMENTATION
we need to lock the collection caches before executing entity inserts/updates in order to account for bidi associations	WITHOUT_CLASSIFICATION	0.9999637030943289	WITHOUT_CLASSIFICATION	3.6296905671171765E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ post-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999148919829007	WITHOUT_CLASSIFICATION	8.51080170992408E-5	IMPLEMENTATION
the database has changed now so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.999984947319289	WITHOUT_CLASSIFICATION	1.5052680710929394E-5	IMPLEMENTATION
if the collection is dereferenced remove from the session cache iter.remove() does not work since the entryset is not backed by the set	WITHOUT_CLASSIFICATION	0.9999899451491386	WITHOUT_CLASSIFICATION	1.0054850861385367E-5	IMPLEMENTATION
otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9986858312922965	WITHOUT_CLASSIFICATION	0.0013141687077035096	IMPLEMENTATION
get a snapshot	WITHOUT_CLASSIFICATION	0.9999726510294354	WITHOUT_CLASSIFICATION	2.7348970564586345E-5	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
package-private	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999997187480871	WITHOUT_CLASSIFICATION	2.812519129502504E-7	IMPLEMENTATION
early exit!!!	WITHOUT_CLASSIFICATION	0.9999464062453549	WITHOUT_CLASSIFICATION	5.359375464503315E-5	IMPLEMENTATION
ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999985885975511	WITHOUT_CLASSIFICATION	1.4114024488700821E-6	IMPLEMENTATION
before any callbacks etc so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999995876861355	WITHOUT_CLASSIFICATION	4.1231386452600773E-7	IMPLEMENTATION
ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9995826994914534	WITHOUT_CLASSIFICATION	4.1730050854656007E-4	IMPLEMENTATION
typefactory.deepcopy( currentstate proptypes persister.getpropertyupdateability() deletedstate session )	WITHOUT_CLASSIFICATION	0.9996497158784514	WITHOUT_CLASSIFICATION	3.5028412154863045E-4	IMPLEMENTATION
cascade-delete to collections before the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9997728533288992	WITHOUT_CLASSIFICATION	2.2714667110077053E-4	IMPLEMENTATION
cascade-delete to many-to-one after the parent was deleted	WITHOUT_CLASSIFICATION	0.9999691399210054	WITHOUT_CLASSIFICATION	3.086007899457576E-5	IMPLEMENTATION
if it is an initialized proxy let cascade handle it later on	WITHOUT_CLASSIFICATION	0.9999667648896503	WITHOUT_CLASSIFICATION	3.323511034977097E-5	IMPLEMENTATION
assign the requested id to the proxy before reassociating the proxy	WITHOUT_CLASSIFICATION	0.9998782247373533	WITHOUT_CLASSIFICATION	1.2177526264668152E-4	IMPLEMENTATION
an uninitialized proxy noop don't even need to return an id since it is never a save()	WITHOUT_CLASSIFICATION	0.9994115987626104	WITHOUT_CLASSIFICATION	5.884012373895296E-4	IMPLEMENTATION
initialize properties of the event	WITHOUT_CLASSIFICATION	0.9999477967672408	WITHOUT_CLASSIFICATION	5.2203232759266154E-5	IMPLEMENTATION
return the id in the event object	WITHOUT_CLASSIFICATION	0.9999984557568186	WITHOUT_CLASSIFICATION	1.5442431813691853E-6	IMPLEMENTATION
transient or deleted	WITHOUT_CLASSIFICATION	0.9997112886753805	WITHOUT_CLASSIFICATION	2.8871132461960315E-4	IMPLEMENTATION
use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9996640675438017	WITHOUT_CLASSIFICATION	3.359324561983618E-4	IMPLEMENTATION
assume this is a newly instantiated transient object which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.999955111160194	WITHOUT_CLASSIFICATION	4.488883980608111E-5	IMPLEMENTATION
this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999437510927005	WITHOUT_CLASSIFICATION	5.624890729942741E-5	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9930277196800382	WITHOUT_CLASSIFICATION	0.006972280319961692	IMPLEMENTATION
cachedstate	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
assume true since we don't really know and it doesn't matter	WITHOUT_CLASSIFICATION	0.9996334688864063	WITHOUT_CLASSIFICATION	3.665311135937941E-4	IMPLEMENTATION
a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999615114476205	WITHOUT_CLASSIFICATION	3.848855237951005E-5	IMPLEMENTATION
if the collection belonged to a different entity clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999904485367536	WITHOUT_CLASSIFICATION	9.551463246406674E-6	IMPLEMENTATION
log.debug( "calling onload()" )	WITHOUT_CLASSIFICATION	0.9998590469322924	WITHOUT_CLASSIFICATION	1.4095306770751172E-4	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999690968519893	WITHOUT_CLASSIFICATION	3.0903148010731545E-5	IMPLEMENTATION
note performexecutions() clears all collectionxxxxtion collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999061419015111	WITHOUT_CLASSIFICATION	9.385809848891132E-5	IMPLEMENTATION
if no array holder we found an unwrappered array (this can't occur because we now always call wrap() before getting to here) return (ah==null) ? true searchfordirtycollections(ah type)	WITHOUT_CLASSIFICATION	0.9999997542552203	WITHOUT_CLASSIFICATION	2.457447798099143E-7	IMPLEMENTATION
if not wrappered yet its dirty (this can't occur because we now always call wrap() before getting to here) return ( ! (obj instanceof persistentcollection) ) ? true searchfordirtycollections( (persistentcollection) obj type )	WITHOUT_CLASSIFICATION	0.9957383307725389	WITHOUT_CLASSIFICATION	0.0042616692274610735	IMPLEMENTATION
we need to check even if it was not initialized because of delayed adds!	WITHOUT_CLASSIFICATION	0.999441913223848	WITHOUT_CLASSIFICATION	5.580867761520609E-4	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999692882300029	WITHOUT_CLASSIFICATION	3.0711769997226154E-5	IMPLEMENTATION
find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9996648570820398	WITHOUT_CLASSIFICATION	3.351429179601537E-4	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999690968519893	WITHOUT_CLASSIFICATION	3.0903148010731545E-5	IMPLEMENTATION
check the persistence context for an entry relating to this entity to be merged	WITHOUT_CLASSIFICATION	0.9999271895988595	WITHOUT_CLASSIFICATION	7.281040114044245E-5	IMPLEMENTATION
we have specialized case of a detached entity from the perspective of the merge operation. specifically we have an incoming entity instance which has a corresponding entry in the current persistence context but registered under a different entity instance	WITHOUT_CLASSIFICATION	0.9999999481255252	WITHOUT_CLASSIFICATION	5.187447486539763E-8	IMPLEMENTATION
deleted	WITHOUT_CLASSIFICATION	0.9998760441828481	WITHOUT_CLASSIFICATION	1.2395581715181632E-4	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999403360793213	WITHOUT_CLASSIFICATION	5.9663920678662094E-5	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy cascadeonmerge(event persister entity copycache cascades.cascade_before_merge)	WITHOUT_CLASSIFICATION	0.9999994761883946	WITHOUT_CLASSIFICATION	5.238116054056945E-7	IMPLEMENTATION
this bit is only really absolutely necessary for handling requestedid but is also good if we merge multiple object graphs since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999998042941881	WITHOUT_CLASSIFICATION	1.9570581195809167E-7	IMPLEMENTATION
continue we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9990597198190619	WITHOUT_CLASSIFICATION	9.402801809381264E-4	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999996490521417	WITHOUT_CLASSIFICATION	3.5094785833792127E-7	IMPLEMENTATION
check that entity id = requestedid	WITHOUT_CLASSIFICATION	0.9925440288453345	WITHOUT_CLASSIFICATION	0.007455971154665487	IMPLEMENTATION
before cascade!	WITHOUT_CLASSIFICATION	0.9999403360793213	WITHOUT_CLASSIFICATION	5.9663920678662094E-5	IMPLEMENTATION
we got here because we assumed that an instance with an assigned id was detached when it was really persistent	WITHOUT_CLASSIFICATION	0.9999966304631108	WITHOUT_CLASSIFICATION	3.369536889049446E-6	IMPLEMENTATION
cascade first so that all unsaved objects get their copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999996490521417	WITHOUT_CLASSIFICATION	3.5094785833792127E-7	IMPLEMENTATION
copyvalues works by reflection so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999240524568819	WITHOUT_CLASSIFICATION	7.594754311812106E-5	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999877802382721	WITHOUT_CLASSIFICATION	1.2219761727939798E-5	IMPLEMENTATION
source.getbatcher().executebatch() found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9864938827289401	WITHOUT_CLASSIFICATION	0.013506117271059812	IMPLEMENTATION
substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999967887426584	WITHOUT_CLASSIFICATION	3.2112573415113447E-6	IMPLEMENTATION
now done in entityidentityinsertaction persister.setidentifier( entity id source.getentitymode() )	WITHOUT_CLASSIFICATION	0.9999620825932963	WITHOUT_CLASSIFICATION	3.791740670371503E-5	IMPLEMENTATION
source.getpersistencecontext().removenonexist( new entitykey( id persister source.getentitymode() ) )	WITHOUT_CLASSIFICATION	0.9991518550447588	WITHOUT_CLASSIFICATION	8.481449552412867E-4	IMPLEMENTATION
keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999977306803892	WITHOUT_CLASSIFICATION	2.269319610758704E-6	IMPLEMENTATION
cascade-save to many-to-one before the parent is saved	WITHOUT_CLASSIFICATION	0.9999774321051198	WITHOUT_CLASSIFICATION	2.256789488009995E-5	IMPLEMENTATION
pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999994642887983	WITHOUT_CLASSIFICATION	5.357112016923302E-7	IMPLEMENTATION
the object is persistent	WITHOUT_CLASSIFICATION	0.9999961422813153	WITHOUT_CLASSIFICATION	3.857718684729933E-6	IMPLEMENTATION
the entity is associated with the session so check its status	WITHOUT_CLASSIFICATION	0.9999162668071948	WITHOUT_CLASSIFICATION	8.373319280521822E-5	IMPLEMENTATION
do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999857116150236	WITHOUT_CLASSIFICATION	1.4288384976389954E-5	IMPLEMENTATION
ie. e.status==deleted	WITHOUT_CLASSIFICATION	0.9999568524432488	WITHOUT_CLASSIFICATION	4.3147556751217095E-5	IMPLEMENTATION
the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999950813225338	WITHOUT_CLASSIFICATION	4.918677466183211E-6	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999692882300029	WITHOUT_CLASSIFICATION	3.0711769997226154E-5	IMPLEMENTATION
private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999890143785322	WITHOUT_CLASSIFICATION	1.0985621467778076E-5	IMPLEMENTATION
first try to find a matching constructor accepting a violatedconstraintnameextracter param	WITHOUT_CLASSIFICATION	0.9992385415585282	WITHOUT_CLASSIFICATION	7.61458441471825E-4	IMPLEMENTATION
eat it and try next	WITHOUT_CLASSIFICATION	0.9995632578680825	WITHOUT_CLASSIFICATION	4.367421319174286E-4	IMPLEMENTATION
otherwise try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9967423958896742	WITHOUT_CLASSIFICATION	0.0032576041103258816	IMPLEMENTATION
oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999843643359483	WITHOUT_CLASSIFICATION	1.563566405170283E-5	IMPLEMENTATION
collectionpropertymapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9998210092096594	WITHOUT_CLASSIFICATION	1.789907903406374E-4	IMPLEMENTATION
remove initial " "	WITHOUT_CLASSIFICATION	0.9999823014438113	WITHOUT_CLASSIFICATION	1.7698556188656734E-5	IMPLEMENTATION
remove initial " and "	WITHOUT_CLASSIFICATION	0.999991246939099	WITHOUT_CLASSIFICATION	8.753060900920719E-6	IMPLEMENTATION
beforeclasstokens.add("new") definitely don't have this!!	WITHOUT_CLASSIFICATION	0.9997898248947178	WITHOUT_CLASSIFICATION	2.1017510528227514E-4	IMPLEMENTATION
notafterclasstokens.add("")	WITHOUT_CLASSIFICATION	0.9999568524432488	WITHOUT_CLASSIFICATION	4.3147556751217095E-5	IMPLEMENTATION
just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9998151002318578	WITHOUT_CLASSIFICATION	1.8489976814214698E-4	IMPLEMENTATION
update last non-whitespace token if necessary	WITHOUT_CLASSIFICATION	0.999997920671985	WITHOUT_CLASSIFICATION	2.079328014955434E-6	IMPLEMENTATION
select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999908719384623	WITHOUT_CLASSIFICATION	9.128061537785651E-6	IMPLEMENTATION
scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999639022896466	WITHOUT_CLASSIFICATION	3.609771035332738E-5	IMPLEMENTATION
note this!!	WITHOUT_CLASSIFICATION	0.999899314662375	WITHOUT_CLASSIFICATION	1.0068533762502133E-4	IMPLEMENTATION
error message constants.	WITHOUT_CLASSIFICATION	0.9997393479341834	WITHOUT_CLASSIFICATION	2.6065206581655094E-4	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999016855514826	WITHOUT_CLASSIFICATION	9.831444851744751E-5	IMPLEMENTATION
semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9964919271577404	WITHOUT_CLASSIFICATION	0.003508072842259547	IMPLEMENTATION
handle collection-fiter compilation. important note this is modifying the input (hql) tree not the output tree!	WITHOUT_CLASSIFICATION	0.9941089736837427	WITHOUT_CLASSIFICATION	0.005891026316257303	IMPLEMENTATION
show the modified ast.	WITHOUT_CLASSIFICATION	0.9997500048164233	WITHOUT_CLASSIFICATION	2.4999518357665337E-4	IMPLEMENTATION
create a parameter specification for the collection filter	WITHOUT_CLASSIFICATION	0.9997605351262064	WITHOUT_CLASSIFICATION	2.394648737936484E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9998372223594464	WITHOUT_CLASSIFICATION	1.6277764055369802E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9998372223594464	WITHOUT_CLASSIFICATION	1.6277764055369802E-4	IMPLEMENTATION
get the names of the columns used to link between the collection owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999960934749055	WITHOUT_CLASSIFICATION	3.906525094490656E-6	IMPLEMENTATION
the path ast should be a dotnode and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9997488525617434	WITHOUT_CLASSIFICATION	2.511474382566306E-4	IMPLEMENTATION
tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999736147548974	WITHOUT_CLASSIFICATION	2.6385245102514103E-5	IMPLEMENTATION
re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999232546306307	WITHOUT_CLASSIFICATION	7.67453693692594E-5	IMPLEMENTATION
don't forget to resolve the argument! resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9996971971579469	WITHOUT_CLASSIFICATION	3.0280284205302807E-4	IMPLEMENTATION
resolve everything up to this dot but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999853217616375	WITHOUT_CLASSIFICATION	1.4678238362465927E-5	IMPLEMENTATION
should mean that no such property was found	WITHOUT_CLASSIFICATION	0.999956821819792	WITHOUT_CLASSIFICATION	4.3178180207988904E-5	IMPLEMENTATION
was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999993509138781	WITHOUT_CLASSIFICATION	6.490861219235374E-7	IMPLEMENTATION
attach any mapping-defined "order by" fragments	WITHOUT_CLASSIFICATION	0.9999577819214678	WITHOUT_CLASSIFICATION	4.221807853221615E-5	IMPLEMENTATION
use the explicitly declared select expression determine the return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9998328233934817	WITHOUT_CLASSIFICATION	1.6717660651832745E-4	IMPLEMENTATION
after that process the joins. invoke a delegate to do the work as this is farily complex.	WITHOUT_CLASSIFICATION	0.9990175717141089	WITHOUT_CLASSIFICATION	9.824282858912057E-4	IMPLEMENTATION
make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999795020270005	WITHOUT_CLASSIFICATION	2.0497972999565735E-5	IMPLEMENTATION
we need to generate ids as part of this bulk insert. note that this is only supported for sequence-style generators and post-insert-style generators basically only in-db generators	WITHOUT_CLASSIFICATION	0.9999807217668487	WITHOUT_CLASSIFICATION	1.9278233151306324E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9998372223594464	WITHOUT_CLASSIFICATION	1.6277764055369802E-4	IMPLEMENTATION
we need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999099422028345	WITHOUT_CLASSIFICATION	9.005779716560675E-5	IMPLEMENTATION
we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999502832356476	WITHOUT_CLASSIFICATION	4.971676435232874E-5	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999197163092322	WITHOUT_CLASSIFICATION	8.028369076778121E-5	IMPLEMENTATION
generate implicit joins only if necessary.	WITHOUT_CLASSIFICATION	0.9999849939939854	WITHOUT_CLASSIFICATION	1.5006006014611035E-5	IMPLEMENTATION
notify the from element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999966573579826	WITHOUT_CLASSIFICATION	3.342642017472273E-6	IMPLEMENTATION
turn off includesubclasses on all fromelements.	WITHOUT_CLASSIFICATION	0.9998871833386822	WITHOUT_CLASSIFICATION	1.1281666131776482E-4	IMPLEMENTATION
create the node initially with the param name so that it shows appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999946583118883	WITHOUT_CLASSIFICATION	5.3416881117087555E-6	IMPLEMENTATION
use the delegate resolve identifiers as from element aliases.	WITHOUT_CLASSIFICATION	0.9999912842459231	WITHOUT_CLASSIFICATION	8.715754076898382E-6	IMPLEMENTATION
select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999936866876233	WITHOUT_CLASSIFICATION	6.313312376700821E-6	IMPLEMENTATION
no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999747072959972	WITHOUT_CLASSIFICATION	2.52927040026965E-5	IMPLEMENTATION
make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9996440146030876	WITHOUT_CLASSIFICATION	3.5598539691245577E-4	IMPLEMENTATION
handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999016855514826	WITHOUT_CLASSIFICATION	9.831444851744751E-5	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9998372223594464	WITHOUT_CLASSIFICATION	1.6277764055369802E-4	IMPLEMENTATION
--commented out by inspection (12/11/04 1056 am) int getwarningcount()	WITHOUT_CLASSIFICATION	0.9999743942019901	WITHOUT_CLASSIFICATION	2.5605798009925867E-5	IMPLEMENTATION
alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9996781094183173	WITHOUT_CLASSIFICATION	3.218905816826746E-4	IMPLEMENTATION
switch	WITHOUT_CLASSIFICATION	0.9999783919946125	WITHOUT_CLASSIFICATION	2.1608005387463703E-5	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9993797807655322	WITHOUT_CLASSIFICATION	6.202192344677395E-4	IMPLEMENTATION
just do the regular thing if you can't find the ctor your ast must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999834468990974	WITHOUT_CLASSIFICATION	1.65531009027279E-5	IMPLEMENTATION
initialize sql nodes here.	WITHOUT_CLASSIFICATION	0.9999759571314053	WITHOUT_CLASSIFICATION	2.4042868594714042E-5	IMPLEMENTATION
semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9993620024179769	WITHOUT_CLASSIFICATION	6.379975820230895E-4	IMPLEMENTATION
if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999998932366423	WITHOUT_CLASSIFICATION	1.0676335773740254E-7	IMPLEMENTATION
this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999925498020986	WITHOUT_CLASSIFICATION	7.450197901404755E-6	IMPLEMENTATION
--- inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999894586123838	WITHOUT_CLASSIFICATION	1.0541387616269564E-5	IMPLEMENTATION
check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9995982663861225	WITHOUT_CLASSIFICATION	4.0173361387742305E-4	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999890397032709	WITHOUT_CLASSIFICATION	1.0960296728991044E-5	IMPLEMENTATION
these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9997920152370883	WITHOUT_CLASSIFICATION	2.0798476291176494E-4	IMPLEMENTATION
again both should be fromelements	WITHOUT_CLASSIFICATION	0.9999102801252984	WITHOUT_CLASSIFICATION	8.971987470162442E-5	IMPLEMENTATION
note firstrow is zero-based	WITHOUT_CLASSIFICATION	0.9999791378011761	WITHOUT_CLASSIFICATION	2.086219882395818E-5	IMPLEMENTATION
right represents a joins originating from left or both right and left reprersent joins originating from the same fromelement	WITHOUT_CLASSIFICATION	0.9999869036841545	WITHOUT_CLASSIFICATION	1.3096315845508296E-5	IMPLEMENTATION
check a set of parent/child nodes in the from-clause tree to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999991472452823	WITHOUT_CLASSIFICATION	8.527547177637406E-7	IMPLEMENTATION
right represents a joins originating from left	WITHOUT_CLASSIFICATION	0.999977808931074	WITHOUT_CLASSIFICATION	2.2191068925944533E-5	IMPLEMENTATION
all clear	WITHOUT_CLASSIFICATION	0.9999587887349806	WITHOUT_CLASSIFICATION	4.121126501952E-5	IMPLEMENTATION
ignore the token class name parameter and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999379558063644	WITHOUT_CLASSIFICATION	6.204419363569877E-5	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999316210011784	WITHOUT_CLASSIFICATION	6.837899882156288E-5	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999316210011784	WITHOUT_CLASSIFICATION	6.837899882156288E-5	IMPLEMENTATION
remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9995773908068226	WITHOUT_CLASSIFICATION	4.2260919317731405E-4	IMPLEMENTATION
don't care about other param types here just those explicitly user-defined	WITHOUT_CLASSIFICATION	0.9997630951751145	WITHOUT_CLASSIFICATION	2.3690482488548107E-4	IMPLEMENTATION
if the query is already compiled skip the compilation.	WITHOUT_CLASSIFICATION	0.9999952841372259	WITHOUT_CLASSIFICATION	4.7158627740067855E-6	IMPLEMENTATION
remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9999202798586168	WITHOUT_CLASSIFICATION	7.972014138324707E-5	IMPLEMENTATION
phase 1 parse the hql into an ast.	WITHOUT_CLASSIFICATION	0.9999934705834823	WITHOUT_CLASSIFICATION	6.529416517721643E-6	IMPLEMENTATION
phase 2 analyze the hql ast and produce an sql ast.	WITHOUT_CLASSIFICATION	0.9999997963606371	WITHOUT_CLASSIFICATION	2.0363936302399857E-7	IMPLEMENTATION
phase 3 generate the sql.	WITHOUT_CLASSIFICATION	0.9999963696045492	WITHOUT_CLASSIFICATION	3.6303954507279975E-6	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9991873612555158	WITHOUT_CLASSIFICATION	8.126387444842625E-4	IMPLEMENTATION
we do not actually propogate antlrexceptions as a cause so log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9991873612555158	WITHOUT_CLASSIFICATION	8.126387444842625E-4	IMPLEMENTATION
only needed during compilation phase	WITHOUT_CLASSIFICATION	0.8731238824944452	WITHOUT_CLASSIFICATION	0.12687611750555486	IMPLEMENTATION
transform the tree.	WITHOUT_CLASSIFICATION	0.9999153715153641	WITHOUT_CLASSIFICATION	8.46284846358839E-5	IMPLEMENTATION
parse the query string into an hql ast.	WITHOUT_CLASSIFICATION	0.9999959934540795	WITHOUT_CLASSIFICATION	4.006545920500475E-6	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9999568636600411	WITHOUT_CLASSIFICATION	4.3136339958767586E-5	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9999568636600411	WITHOUT_CLASSIFICATION	4.3136339958767586E-5	IMPLEMENTATION
delegate to the queryloader	WITHOUT_CLASSIFICATION	0.9999568636600411	WITHOUT_CLASSIFICATION	4.3136339958767586E-5	IMPLEMENTATION
note ( max - 1 ) because first is zero-based while max is not	WITHOUT_CLASSIFICATION	0.9997204984293264	WITHOUT_CLASSIFICATION	2.7950157067360373E-4	IMPLEMENTATION
-- package local methods for the queryloader delegate --	WITHOUT_CLASSIFICATION	0.9999920122636867	WITHOUT_CLASSIFICATION	7.987736313326987E-6	IMPLEMENTATION
if there are no collection fetches then no further checks are needed	WITHOUT_CLASSIFICATION	0.9580956275931473	WITHOUT_CLASSIFICATION	0.041904372406852686	IMPLEMENTATION
a shallow query is ok (although technically there should be no fetching here)	WITHOUT_CLASSIFICATION	0.9998824155635878	WITHOUT_CLASSIFICATION	1.1758443641223871E-4	IMPLEMENTATION
should be the first but just to be safe	WITHOUT_CLASSIFICATION	0.9999961845212663	WITHOUT_CLASSIFICATION	3.815478733727827E-6	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9998372223594464	WITHOUT_CLASSIFICATION	1.6277764055369802E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9998372223594464	WITHOUT_CLASSIFICATION	1.6277764055369802E-4	IMPLEMENTATION
impl note allows multiple collection fetches as long as the entire fecthed graph still "points back" to a single root entity for return	WITHOUT_CLASSIFICATION	0.9998822567666682	WITHOUT_CLASSIFICATION	1.1774323333173249E-4	IMPLEMENTATION
otherwise we have a non-scalar select with defined collection fetch(es). make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9998624165812902	WITHOUT_CLASSIFICATION	1.3758341870988907E-4	IMPLEMENTATION
this is not strictly true. we actually just need to make sure that it is ordered by root-entity pk and that that order-by comes before any non-root-entity ordering	WITHOUT_CLASSIFICATION	0.9576881427398605	WITHOUT_CLASSIFICATION	0.042311857260139536	IMPLEMENTATION
paramtranslations = new parametertranslationsimpl( collectedparameterspecifications )	WITHOUT_CLASSIFICATION	0.9997651113614319	WITHOUT_CLASSIFICATION	2.348886385681192E-4	IMPLEMENTATION
we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999758354185014	WITHOUT_CLASSIFICATION	2.416458149862086E-5	IMPLEMENTATION
igndore it	WITHOUT_CLASSIFICATION	0.999952366001053	WITHOUT_CLASSIFICATION	4.763399894709601E-5	IMPLEMENTATION
we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999945702011989	WITHOUT_CLASSIFICATION	5.429798801168675E-6	IMPLEMENTATION
[jsd] the fix for hhh-558	WITHOUT_CLASSIFICATION	0.9998648900601997	WITHOUT_CLASSIFICATION	1.3510993980022214E-4	IMPLEMENTATION
if the token can tell us if it could be an identifier	WITHOUT_CLASSIFICATION	0.9999874543754756	WITHOUT_CLASSIFICATION	1.254562452424031E-5	IMPLEMENTATION
and the expected token type was an identifier then	WITHOUT_CLASSIFICATION	0.9999988283995531	WITHOUT_CLASSIFICATION	1.1716004468315795E-6	IMPLEMENTATION
use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999781916699152	WITHOUT_CLASSIFICATION	2.180833008476897E-5	IMPLEMENTATION
add the token to the ast.	WITHOUT_CLASSIFICATION	0.999928764870012	WITHOUT_CLASSIFICATION	7.123512998795531E-5	IMPLEMENTATION
(not (eq a b) ) => (ne a b)	WITHOUT_CLASSIFICATION	0.9999861019147777	WITHOUT_CLASSIFICATION	1.3898085222426121E-5	IMPLEMENTATION
(not (ne a b) ) => (eq a b)	WITHOUT_CLASSIFICATION	0.9999861019147777	WITHOUT_CLASSIFICATION	1.3898085222426121E-5	IMPLEMENTATION
(not (lt a b) ) => (ge a b)	WITHOUT_CLASSIFICATION	0.9999861019147777	WITHOUT_CLASSIFICATION	1.3898085222426121E-5	IMPLEMENTATION
(not (ge a b) ) => (lt a b)	WITHOUT_CLASSIFICATION	0.9999861019147777	WITHOUT_CLASSIFICATION	1.3898085222426121E-5	IMPLEMENTATION
(not (le a b) ) => (gt a b)	WITHOUT_CLASSIFICATION	0.9999861019147777	WITHOUT_CLASSIFICATION	1.3898085222426121E-5	IMPLEMENTATION
(not (like a b) ) => (not_like a b)	WITHOUT_CLASSIFICATION	0.9999754419267247	WITHOUT_CLASSIFICATION	2.455807327527668E-5	IMPLEMENTATION
(not (not_like a b) ) => (like a b)	WITHOUT_CLASSIFICATION	0.9999754419267247	WITHOUT_CLASSIFICATION	2.455807327527668E-5	IMPLEMENTATION
(not (is_not_null a b) ) => (is_null a b)	WITHOUT_CLASSIFICATION	0.999972135286174	WITHOUT_CLASSIFICATION	2.7864713826007618E-5	IMPLEMENTATION
(not (between a b) ) => (not_between a b)	WITHOUT_CLASSIFICATION	0.999972135286174	WITHOUT_CLASSIFICATION	2.7864713826007618E-5	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9991085682390071	WITHOUT_CLASSIFICATION	8.914317609929961E-4	IMPLEMENTATION
overriden to avoid system.exit	WITHOUT_CLASSIFICATION	0.9999316210011784	WITHOUT_CLASSIFICATION	6.837899882156288E-5	IMPLEMENTATION
if if otherwise handle the error normally.	WITHOUT_CLASSIFICATION	0.999216015566886	WITHOUT_CLASSIFICATION	7.839844331139588E-4	IMPLEMENTATION
(not (not_between a b) ) => (between a b)	WITHOUT_CLASSIFICATION	0.999972135286174	WITHOUT_CLASSIFICATION	2.7864713826007618E-5	IMPLEMENTATION
this can never happen because this rule will always eliminate the child not.case notreturn x.getfirstchild() (not (not x) ) => (x)	WITHOUT_CLASSIFICATION	0.9994187110948983	WITHOUT_CLASSIFICATION	5.812889051016512E-4	IMPLEMENTATION
just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999691317579783	WITHOUT_CLASSIFICATION	3.086824202165819E-5	IMPLEMENTATION
(eq null b) => (is_null b)	WITHOUT_CLASSIFICATION	0.9999929512565784	WITHOUT_CLASSIFICATION	7.048743421556381E-6	IMPLEMENTATION
(eq a null) => (is_null a)	WITHOUT_CLASSIFICATION	0.9999914480532427	WITHOUT_CLASSIFICATION	8.551946757352554E-6	IMPLEMENTATION
note because we're using astutil.createparent() the tree must be created from the bottom up. is empty x => (exists (query (select_from (from x) ) ) )	WITHOUT_CLASSIFICATION	0.9999954558493429	WITHOUT_CLASSIFICATION	4.544150657074664E-6	IMPLEMENTATION
add not if it's negated.	WITHOUT_CLASSIFICATION	0.9990870361311359	WITHOUT_CLASSIFICATION	9.129638688639488E-4	IMPLEMENTATION
create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.999698219511948	WITHOUT_CLASSIFICATION	3.0178048805189005E-4	IMPLEMENTATION
case 1 multi token keywords group by and order by the next token ( lt(2) ) should be 'by' otherwise this is just an ident.	WITHOUT_CLASSIFICATION	0.9999146666965456	WITHOUT_CLASSIFICATION	8.533330345431633E-5	IMPLEMENTATION
case 2 the current token is after from and before '.'.	WITHOUT_CLASSIFICATION	0.9999973764152802	WITHOUT_CLASSIFICATION	2.6235847198583094E-6	IMPLEMENTATION
this handles hhh-354 where there is a strange property name in a where clause. if the lookahead contains a dot then something that isn't an ident	WITHOUT_CLASSIFICATION	0.9999999813645908	WITHOUT_CLASSIFICATION	1.8635409138480635E-8	IMPLEMENTATION
see if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999993282831916	WITHOUT_CLASSIFICATION	6.717168083556497E-7	IMPLEMENTATION
set it!	WITHOUT_CLASSIFICATION	0.99996885045783	WITHOUT_CLASSIFICATION	3.1149542170003814E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999519016867634	WITHOUT_CLASSIFICATION	4.809831323659635E-5	IMPLEMENTATION
strip the " where "	WITHOUT_CLASSIFICATION	0.9998128291775652	WITHOUT_CLASSIFICATION	1.8717082243486423E-4	IMPLEMENTATION
don't really know all the codes required to adequately decipher returned jdbc exceptions here. simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.975175306095955	WITHOUT_CLASSIFICATION	0.02482469390404502	IMPLEMENTATION
at the very least cleanup the data )	WITHOUT_CLASSIFICATION	0.9999789822413486	WITHOUT_CLASSIFICATION	2.1017758651355535E-5	IMPLEMENTATION
first save off the pertinent ids as the return value	WITHOUT_CLASSIFICATION	0.9999994018298016	WITHOUT_CLASSIFICATION	5.981701983810233E-7	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999915004607505	WITHOUT_CLASSIFICATION	8.4995392496329E-6	IMPLEMENTATION
jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999915004607505	WITHOUT_CLASSIFICATION	8.4995392496329E-6	IMPLEMENTATION
start performing the updates	WITHOUT_CLASSIFICATION	0.9999750920525678	WITHOUT_CLASSIFICATION	2.4907947432196333E-5	IMPLEMENTATION
first save off the pertinent ids saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999997442290751	WITHOUT_CLASSIFICATION	2.557709248612088E-7	IMPLEMENTATION
start performing the deletes	WITHOUT_CLASSIFICATION	0.9999758986203533	WITHOUT_CLASSIFICATION	2.4101379646701783E-5	IMPLEMENTATION
otherwise everything ok.	WITHOUT_CLASSIFICATION	0.9990623987940952	WITHOUT_CLASSIFICATION	9.37601205904895E-4	IMPLEMENTATION
visit width-first then depth	WITHOUT_CLASSIFICATION	0.999968137799654	WITHOUT_CLASSIFICATION	3.1862200345995945E-5	IMPLEMENTATION
if the types report logical equivalence return true	WITHOUT_CLASSIFICATION	0.9999749940097504	WITHOUT_CLASSIFICATION	2.5005990249489425E-5	IMPLEMENTATION
otherwise perform a "deep equivalence" check	WITHOUT_CLASSIFICATION	0.9956266290569382	WITHOUT_CLASSIFICATION	0.004373370943061698	IMPLEMENTATION
if there is no where node make one.	WITHOUT_CLASSIFICATION	0.9999794872749894	WITHOUT_CLASSIFICATION	2.0512725010581823E-5	IMPLEMENTATION
inject the where after the parent	WITHOUT_CLASSIFICATION	0.9998846832751794	WITHOUT_CLASSIFICATION	1.1531672482053622E-4	IMPLEMENTATION
never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999807992587846	WITHOUT_CLASSIFICATION	1.920074121540005E-5	IMPLEMENTATION
moved here from selectclause [jsd]	WITHOUT_CLASSIFICATION	0.9999759316882623	WITHOUT_CLASSIFICATION	2.406831173777573E-5	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999890397032709	WITHOUT_CLASSIFICATION	1.0960296728991044E-5	IMPLEMENTATION
use the table fromelement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999521629401363	WITHOUT_CLASSIFICATION	4.783705986355635E-5	IMPLEMENTATION
set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.999976714141919	WITHOUT_CLASSIFICATION	2.3285858080975098E-5	IMPLEMENTATION
if the uresolved property path isn't set yet just use the property name.	WITHOUT_CLASSIFICATION	0.9999899214028599	WITHOUT_CLASSIFICATION	1.0078597140166049E-5	IMPLEMENTATION
the 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9998835256304381	WITHOUT_CLASSIFICATION	1.1647436956188208E-4	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999991627590277	WITHOUT_CLASSIFICATION	8.372409722282508E-7	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999991627590277	WITHOUT_CLASSIFICATION	8.372409722282508E-7	IMPLEMENTATION
if this dot has already been resolved stop now.	WITHOUT_CLASSIFICATION	0.9999894528732705	WITHOUT_CLASSIFICATION	1.0547126729509806E-5	IMPLEMENTATION
if there is no data type for this node and we're at the end of the path (top most dot node) then this might be a java constant.	WITHOUT_CLASSIFICATION	0.9999999857271	WITHOUT_CLASSIFICATION	1.4272900064629612E-8	IMPLEMENTATION
the property is a collection	WITHOUT_CLASSIFICATION	0.9999535328129744	WITHOUT_CLASSIFICATION	4.646718702565749E-5	IMPLEMENTATION
the property is a component	WITHOUT_CLASSIFICATION	0.9999935488044338	WITHOUT_CLASSIFICATION	6.451195566180521E-6	IMPLEMENTATION
the property is another class..	WITHOUT_CLASSIFICATION	0.9999124542889841	WITHOUT_CLASSIFICATION	8.754571101594267E-5	IMPLEMENTATION
otherwise this is a primitive type.	WITHOUT_CLASSIFICATION	0.9996293090784651	WITHOUT_CLASSIFICATION	3.706909215349367E-4	IMPLEMENTATION
foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999088697570832	WITHOUT_CLASSIFICATION	9.113024291680229E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.999004448275264	WITHOUT_CLASSIFICATION	9.955517247359372E-4	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998813281803607	WITHOUT_CLASSIFICATION	1.1867181963924873E-4	IMPLEMENTATION
in non-select queries the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999993785676611	WITHOUT_CLASSIFICATION	6.214323388466262E-7	IMPLEMENTATION
this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.999970122683275	WITHOUT_CLASSIFICATION	2.987731672492442E-5	IMPLEMENTATION
this 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.999004448275264	WITHOUT_CLASSIFICATION	9.955517247359372E-4	IMPLEMENTATION
even though we might find a pre-existing element by join path we may not be able to reuse it	WITHOUT_CLASSIFICATION	0.9995830594620432	WITHOUT_CLASSIFICATION	4.169405379568812E-4	IMPLEMENTATION
note addduplicatealias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9997808667143777	WITHOUT_CLASSIFICATION	2.1913328562234497E-4	IMPLEMENTATION
if the from-clauses are the same we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9998637468214951	WITHOUT_CLASSIFICATION	1.362531785048551E-4	IMPLEMENTATION
again null != null here	WITHOUT_CLASSIFICATION	0.9999915402535088	WITHOUT_CLASSIFICATION	8.45974649116098E-6	IMPLEMENTATION
if this is an implied join in a from element then use the impled join type which is part of the tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999999993097187	WITHOUT_CLASSIFICATION	6.90281285234802E-10	IMPLEMENTATION
otherwise (subquery case) dont reuse the fromelement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999729532176239	WITHOUT_CLASSIFICATION	2.704678237609043E-5	IMPLEMENTATION
we know only the lhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9952769242490696	WITHOUT_CLASSIFICATION	0.004723075750930438	IMPLEMENTATION
the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999000156719898	WITHOUT_CLASSIFICATION	9.998432801007876E-5	IMPLEMENTATION
only the identifier property field name can be a reference to the associated entity's pk	WITHOUT_CLASSIFICATION	0.9999625600804601	WITHOUT_CLASSIFICATION	3.743991953992011E-5	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9996389763919027	WITHOUT_CLASSIFICATION	3.6102360809733624E-4	IMPLEMENTATION
append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9993072297985857	WITHOUT_CLASSIFICATION	6.927702014144574E-4	IMPLEMENTATION
if the lhs is a collection use collectionpropertymapping	WITHOUT_CLASSIFICATION	0.9999842509475413	WITHOUT_CLASSIFICATION	1.5749052458676364E-5	IMPLEMENTATION
tell the destination fromelement to 'includesubclasses'.	WITHOUT_CLASSIFICATION	0.9998160890607629	WITHOUT_CLASSIFICATION	1.8391093923712944E-4	IMPLEMENTATION
use theta style (for regression) move the node up after the origin node.	WITHOUT_CLASSIFICATION	0.9997813006273245	WITHOUT_CLASSIFICATION	2.18699372675465E-4	IMPLEMENTATION
don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999464992796099	WITHOUT_CLASSIFICATION	5.3500720390001896E-5	IMPLEMENTATION
for expected parameter type injection we expect that the lhs represents some form of property ref and that the children of the in-list represent one-or-more params.	WITHOUT_CLASSIFICATION	0.9998053414434083	WITHOUT_CLASSIFICATION	1.946585565916581E-4	IMPLEMENTATION
we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999643922280975	WITHOUT_CLASSIFICATION	3.560777190252916E-5	IMPLEMENTATION
we have something like "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9991622251047558	WITHOUT_CLASSIFICATION	8.37774895244113E-4	IMPLEMENTATION
we have something like "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9991622251047558	WITHOUT_CLASSIFICATION	8.37774895244113E-4	IMPLEMENTATION
we know only the rhs-hand type so use that	WITHOUT_CLASSIFICATION	0.9952769242490696	WITHOUT_CLASSIFICATION	0.004723075750930438	IMPLEMENTATION
handle the (assumed) valid cases #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9976866038772312	WITHOUT_CLASSIFICATION	0.0023133961227688213	IMPLEMENTATION
one or the other needs to be a datetime for us to get into this method in the first place	WITHOUT_CLASSIFICATION	0.9999209850403387	WITHOUT_CLASSIFICATION	7.901495966126879E-5	IMPLEMENTATION
#3 - note that this is also true of "datetime - param"	WITHOUT_CLASSIFICATION	0.999909937383006	WITHOUT_CLASSIFICATION	9.006261699395635E-5	IMPLEMENTATION
#2	WITHOUT_CLASSIFICATION	0.9999759187574654	WITHOUT_CLASSIFICATION	2.4081242534578133E-5	IMPLEMENTATION
generate the inner join -- the elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999692450626342	WITHOUT_CLASSIFICATION	3.075493736582172E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999653529698349	WITHOUT_CLASSIFICATION	3.464703016505204E-5	IMPLEMENTATION
the 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999681862646765	WITHOUT_CLASSIFICATION	3.1813735323414864E-5	IMPLEMENTATION
add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9986432180460034	WITHOUT_CLASSIFICATION	0.0013567819539966259	IMPLEMENTATION
sometimes use the element table alias sometimes use the umm collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999531476377909	WITHOUT_CLASSIFICATION	4.685236220912625E-5	IMPLEMENTATION
now set the text for this node. it should be the element columns.	WITHOUT_CLASSIFICATION	0.9999323037059398	WITHOUT_CLASSIFICATION	6.769629406020392E-5	IMPLEMENTATION
get the function return value type based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999923898368936	WITHOUT_CLASSIFICATION	7.6101631064405564E-6	IMPLEMENTATION
this will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9998580647521367	WITHOUT_CLASSIFICATION	1.419352478632969E-4	IMPLEMENTATION
mutation depends on the types of nodes invloved	WITHOUT_CLASSIFICATION	0.9984963705261966	WITHOUT_CLASSIFICATION	0.0015036294738033573	IMPLEMENTATION
"pass along" our initial embedded parameter node(s) to the first generated sql fragment so that it can be handled later for parameter binding	WITHOUT_CLASSIFICATION	0.9999987776287884	WITHOUT_CLASSIFICATION	1.2223712116673855E-6	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.999947149648622	WITHOUT_CLASSIFICATION	5.2850351378097555E-5	IMPLEMENTATION
generated select expressions are already resolved nothing to do.	WITHOUT_CLASSIFICATION	0.9999977229286141	WITHOUT_CLASSIFICATION	2.2770713859644593E-6	IMPLEMENTATION
the path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999998841293327	WITHOUT_CLASSIFICATION	1.158706672161712E-7	IMPLEMENTATION
the hql class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999873765404522	WITHOUT_CLASSIFICATION	1.2623459547862128E-5	IMPLEMENTATION
associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999330451792207	WITHOUT_CLASSIFICATION	6.695482077933988E-5	IMPLEMENTATION
try the parent fromclause	WITHOUT_CLASSIFICATION	0.9999507742544561	WITHOUT_CLASSIFICATION	4.922574554386236E-5	IMPLEMENTATION
add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9996947646868797	WITHOUT_CLASSIFICATION	3.052353131203108E-4	IMPLEMENTATION
make sure that all from elements registered with this from clause are actually in the ast.	WITHOUT_CLASSIFICATION	0.9999964651431948	WITHOUT_CLASSIFICATION	3.534856805157214E-6	IMPLEMENTATION
invoke setscalarcolumntext on each constructor argument.	WITHOUT_CLASSIFICATION	0.9992685366040095	WITHOUT_CLASSIFICATION	7.31463395990421E-4	IMPLEMENTATION
collect the select expressions skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999922741894414	WITHOUT_CLASSIFICATION	7.725810558693414E-6	IMPLEMENTATION
return an empty type array	WITHOUT_CLASSIFICATION	0.999907471511102	WITHOUT_CLASSIFICATION	9.252848889802365E-5	IMPLEMENTATION
constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.999880706893898	WITHOUT_CLASSIFICATION	1.1929310610197513E-4	IMPLEMENTATION
this is the exception returned by reflecthelper.getconstructor() if it cannot locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.99999980734668	WITHOUT_CLASSIFICATION	1.926533199328673E-7	IMPLEMENTATION
if there is no order by make one	WITHOUT_CLASSIFICATION	0.9999900813513783	WITHOUT_CLASSIFICATION	9.918648621702225E-6	IMPLEMENTATION
find the where if there is no where find the from	WITHOUT_CLASSIFICATION	0.9999964525352343	WITHOUT_CLASSIFICATION	3.5474647656789667E-6	IMPLEMENTATION
now inject the newly built order by into the tree	WITHOUT_CLASSIFICATION	0.9999529980805728	WITHOUT_CLASSIFICATION	4.700191942727249E-5	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999136886038719	WITHOUT_CLASSIFICATION	8.631139612812532E-5	IMPLEMENTATION
logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999472703612403	WITHOUT_CLASSIFICATION	5.272963875965141E-5	IMPLEMENTATION
render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999633825049251	WITHOUT_CLASSIFICATION	3.6617495074959617E-5	IMPLEMENTATION
class names in the from clause result in a joinsequence (the old fromparser does this).	WITHOUT_CLASSIFICATION	0.9999999104590059	WITHOUT_CLASSIFICATION	8.95409940255052E-8	IMPLEMENTATION
for many-to-many joins use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999971964337316	WITHOUT_CLASSIFICATION	2.8035662683187315E-6	IMPLEMENTATION
otherwise use the property mapping.	WITHOUT_CLASSIFICATION	0.9982191833989589	WITHOUT_CLASSIFICATION	0.0017808166010410665	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9993269782092634	WITHOUT_CLASSIFICATION	6.730217907365061E-4	IMPLEMENTATION
if the property is a special collection property name return a collectionpropertymapping.	WITHOUT_CLASSIFICATION	0.9999957413818259	WITHOUT_CLASSIFICATION	4.2586181741508196E-6	IMPLEMENTATION
collection of components.	WITHOUT_CLASSIFICATION	0.9999399693564915	WITHOUT_CLASSIFICATION	6.003064350849895E-5	IMPLEMENTATION
make sure the lhs is "assignable"	WITHOUT_CLASSIFICATION	0.9999118209812123	WITHOUT_CLASSIFICATION	8.817901878767053E-5	IMPLEMENTATION
false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9988086292689861	WITHOUT_CLASSIFICATION	0.0011913707310138744	IMPLEMENTATION
register the fromelement with the from clause now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9992917259765847	WITHOUT_CLASSIFICATION	7.082740234153756E-4	IMPLEMENTATION
currently allowed	WITHOUT_CLASSIFICATION	0.999949211671645	WITHOUT_CLASSIFICATION	5.0788328355153616E-5	IMPLEMENTATION
hhh-276 implied joins in a subselect where clause - the destination needs to be added to the destination's from clause. not sure if this is will fix everything but it works.	WITHOUT_CLASSIFICATION	0.9999743668078716	WITHOUT_CLASSIFICATION	2.563319212846578E-5	IMPLEMENTATION
return classalias == null ? classname classalias	WITHOUT_CLASSIFICATION	0.999979824836376	WITHOUT_CLASSIFICATION	2.0175163624001236E-5	IMPLEMENTATION
this is an explicit from element.	WITHOUT_CLASSIFICATION	0.9999898209051806	WITHOUT_CLASSIFICATION	1.017909481941351E-5	IMPLEMENTATION
parametercontainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999136886038719	WITHOUT_CLASSIFICATION	8.631139612812532E-5	IMPLEMENTATION
fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.999962552545699	WITHOUT_CLASSIFICATION	3.7447454301093234E-5	IMPLEMENTATION
if it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9974935483613174	WITHOUT_CLASSIFICATION	0.0025064516386826656	IMPLEMENTATION
since this is an explicit from element it can't be implied in the from clause.	WITHOUT_CLASSIFICATION	0.9999999533139735	WITHOUT_CLASSIFICATION	4.668602653093502E-8	IMPLEMENTATION
do nothing eplicit from elements are always in the projection list.	WITHOUT_CLASSIFICATION	0.9999993356453027	WITHOUT_CLASSIFICATION	6.643546973179973E-7	IMPLEMENTATION
propertyname refers to something like collection.size	WITHOUT_CLASSIFICATION	0.9991742641897903	WITHOUT_CLASSIFICATION	8.257358102096175E-4	IMPLEMENTATION
property name is a sub-path of a component	WITHOUT_CLASSIFICATION	0.9999915556055559	WITHOUT_CLASSIFICATION	8.444394444168616E-6	IMPLEMENTATION
always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998813281803607	WITHOUT_CLASSIFICATION	1.1867181963924873E-4	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999997955851733	WITHOUT_CLASSIFICATION	2.0441482669675765E-7	IMPLEMENTATION
logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.999947149648622	WITHOUT_CLASSIFICATION	5.2850351378097555E-5	IMPLEMENTATION
dotnode uses null here	WITHOUT_CLASSIFICATION	0.9999670651999721	WITHOUT_CLASSIFICATION	3.293480002794657E-5	IMPLEMENTATION
we represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999628886216164	WITHOUT_CLASSIFICATION	3.7111378383523486E-5	IMPLEMENTATION
we are the lhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999792605422468	WITHOUT_CLASSIFICATION	2.073945775315536E-5	IMPLEMENTATION
we are the rhs of the dot representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999792605422468	WITHOUT_CLASSIFICATION	2.073945775315536E-5	IMPLEMENTATION
we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.999932691987994	WITHOUT_CLASSIFICATION	6.730801200605368E-5	IMPLEMENTATION
early exit!!! return so the resolve call explicitly coming from dotnode can resolve this	WITHOUT_CLASSIFICATION	0.9999854139630429	WITHOUT_CLASSIFICATION	1.4586036957146845E-5	IMPLEMENTATION
assume this ident's text does not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9915608342588185	WITHOUT_CLASSIFICATION	0.008439165741181606	IMPLEMENTATION
just ignore it for now it'll get resolved later	WITHOUT_CLASSIFICATION	0.9999791688089069	WITHOUT_CLASSIFICATION	2.0831191093066315E-5	IMPLEMENTATION
this is not actually a constant but a reference to from element.	WITHOUT_CLASSIFICATION	0.999959469327613	WITHOUT_CLASSIFICATION	4.053067238686636E-5	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999930970644186	WITHOUT_CLASSIFICATION	6.902935581268519E-6	IMPLEMENTATION
these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9952225206951227	WITHOUT_CLASSIFICATION	0.004777479304877292	IMPLEMENTATION
used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9998959101375691	WITHOUT_CLASSIFICATION	1.0408986243092545E-4	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9110675664386535	WITHOUT_CLASSIFICATION	0.08893243356134642	IMPLEMENTATION
assume we do not refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9110675664386535	WITHOUT_CLASSIFICATION	0.08893243356134642	IMPLEMENTATION
naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999999349084397	WITHOUT_CLASSIFICATION	6.509156021570307E-8	IMPLEMENTATION
this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9933512600689665	WITHOUT_CLASSIFICATION	0.006648739931033491	IMPLEMENTATION
do not over-write the column text as that has already been "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9918230746865158	WITHOUT_CLASSIFICATION	0.008176925313484336	IMPLEMENTATION
for some reason the antlr.commonast initialization routines force this method to get called twice. the first time with an empty string	WITHOUT_CLASSIFICATION	0.9998725001762915	WITHOUT_CLASSIFICATION	1.2749982370844688E-4	IMPLEMENTATION
look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999981840892285	WITHOUT_CLASSIFICATION	1.815910771618567E-6	IMPLEMENTATION
add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999502663787858	WITHOUT_CLASSIFICATION	4.9733621214219835E-5	IMPLEMENTATION
if the from element isn't in the same clause create a new from element.	WITHOUT_CLASSIFICATION	0.9999999665260546	WITHOUT_CLASSIFICATION	3.347394549062532E-8	IMPLEMENTATION
this is the root level node. generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999918377669017	WITHOUT_CLASSIFICATION	8.16223309831097E-6	IMPLEMENTATION
correlated subqueries create 'special' implied from nodes because correlated subselects can't use an ansi-style join	WITHOUT_CLASSIFICATION	0.9999946791582393	WITHOUT_CLASSIFICATION	5.320841760809914E-6	IMPLEMENTATION
super-duper-classic-parser-regression-testing-mojo-magic	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
a collection of entities	WITHOUT_CLASSIFICATION	0.9999471733500956	WITHOUT_CLASSIFICATION	5.282664990443876E-5	IMPLEMENTATION
a collection of components	WITHOUT_CLASSIFICATION	0.999971158175194	WITHOUT_CLASSIFICATION	2.8841824805942462E-5	IMPLEMENTATION
a collection of scalar elements	WITHOUT_CLASSIFICATION	0.9999635861371007	WITHOUT_CLASSIFICATION	3.6413862899371875E-5	IMPLEMENTATION
according to both the ansi-sql and ejb3 specs trim can either take exactly one parameter or a variable number of parameters between 1 and 4. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if only <trim specification> is omitted both is assumed if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.9999997414131834	WITHOUT_CLASSIFICATION	2.5858681662997094E-7	IMPLEMENTATION
don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999783667224568	WITHOUT_CLASSIFICATION	2.16332775431925E-5	IMPLEMENTATION
treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999949060706873	WITHOUT_CLASSIFICATION	5.0939293127143834E-6	IMPLEMENTATION
( implied && dotnode.usethetastyleimplicitjoins ) ) {	WITHOUT_CLASSIFICATION	0.9998422971721445	WITHOUT_CLASSIFICATION	1.5770282785546077E-4	IMPLEMENTATION
the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9997857433376841	WITHOUT_CLASSIFICATION	2.1425666231593491E-4	IMPLEMENTATION
create the from element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999997935952047	WITHOUT_CLASSIFICATION	2.0640479524599745E-7	IMPLEMENTATION
if the join is implied then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999883419484464	WITHOUT_CLASSIFICATION	1.1658051553527495E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
the associated entity is implied but it must be included in the from. the collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999988179800094	WITHOUT_CLASSIFICATION	1.1820199905758295E-6	IMPLEMENTATION
tag this node as a join. don't include subclasses in the join. this is a clollection join.	WITHOUT_CLASSIFICATION	0.9999907474256455	WITHOUT_CLASSIFICATION	9.252574354518419E-6	IMPLEMENTATION
get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999954796446551	WITHOUT_CLASSIFICATION	4.5203553449416175E-6	IMPLEMENTATION
origin path implied columns classalias	WITHOUT_CLASSIFICATION	0.9999878637409209	WITHOUT_CLASSIFICATION	1.2136259079077077E-5	IMPLEMENTATION
implied	WITHOUT_CLASSIFICATION	0.9999724770381068	WITHOUT_CLASSIFICATION	2.7522961893127004E-5	IMPLEMENTATION
for implied many-to-many just add the end join.	WITHOUT_CLASSIFICATION	0.9999677197087851	WITHOUT_CLASSIFICATION	3.228029121485626E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999184506368933	WITHOUT_CLASSIFICATION	8.15493631066459E-5	IMPLEMENTATION
the standard sql function name is current_timestamp	WITHOUT_CLASSIFICATION	0.9999941505450629	WITHOUT_CLASSIFICATION	5.84945493708381E-6	IMPLEMENTATION
this causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9998845974737026	WITHOUT_CLASSIFICATION	1.1540252629732186E-4	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9999830607470207	WITHOUT_CLASSIFICATION	1.6939252979255137E-5	IMPLEMENTATION
frontbase has no known variation of a "select for update" syntax	WITHOUT_CLASSIFICATION	0.9999967701987936	WITHOUT_CLASSIFICATION	3.2298012065227226E-6	IMPLEMENTATION
the types represented in the sql result set. @return the types represented in the sql result set.	WITHOUT_CLASSIFICATION	0.9999925585878616	WITHOUT_CLASSIFICATION	7.441412138357718E-6	IMPLEMENTATION
public type[] getsqlresulttypes() {return sqlresulttypes}	WITHOUT_CLASSIFICATION	0.9999843360315138	WITHOUT_CLASSIFICATION	1.566396848611738E-5	IMPLEMENTATION
first collect all of the select expressions. note this must be done before invoking setscalarcolumntext() because setscalarcolumntext() changes the ast!!!	WITHOUT_CLASSIFICATION	0.999948035230158	WITHOUT_CLASSIFICATION	5.196476984204649E-5	IMPLEMENTATION
first allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999734590061026	WITHOUT_CLASSIFICATION	2.6540993897381426E-5	IMPLEMENTATION
sqlresulttypelist.addall( constructorargumenttypelist )	WITHOUT_CLASSIFICATION	0.9998590469322924	WITHOUT_CLASSIFICATION	1.4095306770751172E-4	IMPLEMENTATION
if the data type is not an association type it could not have been in the from clause.	WITHOUT_CLASSIFICATION	0.9999995143556465	WITHOUT_CLASSIFICATION	4.856443535607648E-7	IMPLEMENTATION
sqlresulttypelist.add( type )	WITHOUT_CLASSIFICATION	0.9999285090027312	WITHOUT_CLASSIFICATION	7.14909972687496E-5	IMPLEMENTATION
always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9993323553578605	WITHOUT_CLASSIFICATION	6.676446421395098E-4	IMPLEMENTATION
add the fetched entities	WITHOUT_CLASSIFICATION	0.9999460121698811	WITHOUT_CLASSIFICATION	5.398783011903089E-5	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999419780121357	WITHOUT_CLASSIFICATION	5.8021987864288545E-5	IMPLEMENTATION
function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9986244511387588	WITHOUT_CLASSIFICATION	0.0013755488612412585	IMPLEMENTATION
if there are any scalars (non-entities) selected render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999993129934166	WITHOUT_CLASSIFICATION	6.870065833885856E-7	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
arraylist sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9999569034195834	WITHOUT_CLASSIFICATION	4.309658041655522E-5	IMPLEMENTATION
sqlresulttypes = ( type[] ) sqlresulttypelist.toarray( new type[sqlresulttypelist.size()] )	WITHOUT_CLASSIFICATION	0.9998843086326991	WITHOUT_CLASSIFICATION	1.1569136730087748E-4	IMPLEMENTATION
lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9988942262499616	WITHOUT_CLASSIFICATION	0.001105773750038288	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.8370125777149637	WITHOUT_CLASSIFICATION	0.16298742228503618	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999568065749235	WITHOUT_CLASSIFICATION	4.319342507664209E-5	IMPLEMENTATION
generate an 2d array of column names the first dimension is parallel with the return types array. the second dimension is the list of column names for each type.	WITHOUT_CLASSIFICATION	0.9999996389942053	WITHOUT_CLASSIFICATION	3.6100579468596197E-7	IMPLEMENTATION
generate the select expression.	WITHOUT_CLASSIFICATION	0.9999658429460251	WITHOUT_CLASSIFICATION	3.4157053974945897E-5	IMPLEMENTATION
union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9989018196700217	WITHOUT_CLASSIFICATION	0.0010981803299782392	IMPLEMENTATION
skip 'distinct' and 'all' so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9996749827171791	WITHOUT_CLASSIFICATION	3.2501728282082696E-4	IMPLEMENTATION
create sql_token nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999882062238433	WITHOUT_CLASSIFICATION	1.1793776156578413E-5	IMPLEMENTATION
generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999562054176817	WITHOUT_CLASSIFICATION	4.379458231836856E-5	IMPLEMENTATION
get the function name node.	WITHOUT_CLASSIFICATION	0.9999686598755922	WITHOUT_CLASSIFICATION	3.134012440778079E-5	IMPLEMENTATION
method expressions in a select should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999941747292397	WITHOUT_CLASSIFICATION	5.825270760307863E-6	IMPLEMENTATION
if this is 'elements' then create a new from element.	WITHOUT_CLASSIFICATION	0.9999986162830876	WITHOUT_CLASSIFICATION	1.3837169124033729E-6	IMPLEMENTATION
not elements(x)	WITHOUT_CLASSIFICATION	0.9956097859542218	WITHOUT_CLASSIFICATION	0.004390214045778222	IMPLEMENTATION
dialect function	WITHOUT_CLASSIFICATION	0.9998869424329342	WITHOUT_CLASSIFICATION	1.130575670657458E-4	IMPLEMENTATION
collection 'property function'	WITHOUT_CLASSIFICATION	0.999901717288539	WITHOUT_CLASSIFICATION	9.828271146102976E-5	IMPLEMENTATION
if the constant is an ident figure out what it means	WITHOUT_CLASSIFICATION	0.9998752863496276	WITHOUT_CLASSIFICATION	1.2471365037234713E-4	IMPLEMENTATION
ident is a class alias in the from.	WITHOUT_CLASSIFICATION	0.9999984106745501	WITHOUT_CLASSIFICATION	1.5893254498868188E-6	IMPLEMENTATION
resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999887492718232	WITHOUT_CLASSIFICATION	1.1250728176717978E-5	IMPLEMENTATION
otherwise it's a literal.	WITHOUT_CLASSIFICATION	0.9989897991699072	WITHOUT_CLASSIFICATION	0.0010102008300928666	IMPLEMENTATION
the name of an entity class	WITHOUT_CLASSIFICATION	0.9999982042331389	WITHOUT_CLASSIFICATION	1.7957668610116164E-6	IMPLEMENTATION
the class discriminator value	WITHOUT_CLASSIFICATION	0.9999949809781128	WITHOUT_CLASSIFICATION	5.019021887219785E-6	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999873586322569	WITHOUT_CLASSIFICATION	1.2641367743178123E-5	IMPLEMENTATION
add a space before the display text.	WITHOUT_CLASSIFICATION	0.999987675470062	WITHOUT_CLASSIFICATION	1.2324529938036017E-5	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9997691924892365	WITHOUT_CLASSIFICATION	2.3080751076353954E-4	IMPLEMENTATION
child == parent.getfirstchild()	WITHOUT_CLASSIFICATION	0.9998921260747757	WITHOUT_CLASSIFICATION	1.0787392522417836E-4	IMPLEMENTATION
find or create the where clause	WITHOUT_CLASSIFICATION	0.9997691924892365	WITHOUT_CLASSIFICATION	2.3080751076353954E-4	IMPLEMENTATION
filter conditions need to be inserted before the hql where condition and the theta join node. this is because org.hibernate.loader.loader binds the filter parameters first then it binds all the hql query parameters see org.hibernate.loader.loader.processfilterparameters().	WITHOUT_CLASSIFICATION	0.9990942453388704	WITHOUT_CLASSIFICATION	9.057546611296898E-4	IMPLEMENTATION
put the filters node before the hql condition and theta joins	WITHOUT_CLASSIFICATION	0.9996777651639988	WITHOUT_CLASSIFICATION	3.2223483600122904E-4	IMPLEMENTATION
add the current fragment to the filters node	WITHOUT_CLASSIFICATION	0.9996802025139131	WITHOUT_CLASSIFICATION	3.197974860868127E-4	IMPLEMENTATION
create a new theta_joins node as a parent of all filters	WITHOUT_CLASSIFICATION	0.999943956254597	WITHOUT_CLASSIFICATION	5.604374540298231E-5	IMPLEMENTATION
put the theta_joins node before the hql condition after the filters.	WITHOUT_CLASSIFICATION	0.9997476613866856	WITHOUT_CLASSIFICATION	2.5233861331439196E-4	IMPLEMENTATION
add the current fragment to the theta_joins node	WITHOUT_CLASSIFICATION	0.9996794477891382	WITHOUT_CLASSIFICATION	3.2055221086180565E-4	IMPLEMENTATION
first try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999706763823127	WITHOUT_CLASSIFICATION	2.9323617687204435E-5	IMPLEMENTATION
unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9997686668749599	WITHOUT_CLASSIFICATION	2.3133312504016753E-4	IMPLEMENTATION
if that didn't work try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999716688266973	WITHOUT_CLASSIFICATION	2.833117330259702E-5	IMPLEMENTATION
implicit joins use theta style (where pk = fk) explicit joins use join (after from)	WITHOUT_CLASSIFICATION	0.9997957707927346	WITHOUT_CLASSIFICATION	2.0422920726538495E-4	IMPLEMENTATION
locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.999932998808823	WITHOUT_CLASSIFICATION	6.700119117695811E-5	IMPLEMENTATION
determine the type of the first argument	WITHOUT_CLASSIFICATION	0.9999940814541839	WITHOUT_CLASSIFICATION	5.918545816084156E-6	IMPLEMENTATION
use the dot node to emit the first column name. create the column names folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999490158748785	WITHOUT_CLASSIFICATION	5.098412512138345E-5	IMPLEMENTATION
note this simply constructs a "raw" sql_token representing the where fragment and injects this into the tree. this "works" however it is probably not the best long-term solution. at some point we probably want to apply an additional grammar to properly tokenize this where fragment into constituent parts focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9724152509514568	WITHOUT_CLASSIFICATION	0.02758474904854316	IMPLEMENTATION
append the text of the current node.	WITHOUT_CLASSIFICATION	0.9993264739890586	WITHOUT_CLASSIFICATION	6.735260109414788E-4	IMPLEMENTATION
if the node has a first child recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999940855926522	WITHOUT_CLASSIFICATION	5.9144073477134975E-6	IMPLEMENTATION
if there is a second child (rhs) recurse into that child.	WITHOUT_CLASSIFICATION	0.9999948403745642	WITHOUT_CLASSIFICATION	5.159625435831539E-6	IMPLEMENTATION
iterate through the aliasjoinsequence pairs and generate sql token nodes.	WITHOUT_CLASSIFICATION	0.9999844317720613	WITHOUT_CLASSIFICATION	1.5568227938747498E-5	IMPLEMENTATION
if the from element represents a join_fragment and it is a theta-style join convert its type from join_fragment to from_fragment	WITHOUT_CLASSIFICATION	0.9999990620652811	WITHOUT_CLASSIFICATION	9.3793471889526E-7	IMPLEMENTATION
this is used during sqlgenerator processing	WITHOUT_CLASSIFICATION	0.9999702583595008	WITHOUT_CLASSIFICATION	2.9741640499205125E-5	IMPLEMENTATION
if there is a from fragment and the from element is an explicit then add the from part.	WITHOUT_CLASSIFICATION	0.9999999622430402	WITHOUT_CLASSIFICATION	3.775695977792011E-8	IMPLEMENTATION
&& stringhelper.isnotempty( frag )	WITHOUT_CLASSIFICATION	0.9998603721439028	WITHOUT_CLASSIFICATION	1.396278560972241E-4	IMPLEMENTATION
the from fragment will probably begin with ' '. remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999995647877096	WITHOUT_CLASSIFICATION	4.3521229039372033E-7	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9997731167783833	WITHOUT_CLASSIFICATION	2.2688322161677334E-4	IMPLEMENTATION
select p from p in class eg.person order by p.name p.address p	WITHOUT_CLASSIFICATION	0.999999736292405	WITHOUT_CLASSIFICATION	2.637075950281671E-7	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999984548006114	WITHOUT_CLASSIFICATION	1.545199388647489E-6	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9999869521446333	WITHOUT_CLASSIFICATION	1.3047855366679292E-5	IMPLEMENTATION
default mode	WITHOUT_CLASSIFICATION	0.9999870690058876	WITHOUT_CLASSIFICATION	1.2930994112341897E-5	IMPLEMENTATION
queryjoinfragment join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9998572661489042	WITHOUT_CLASSIFICATION	1.4273385109578587E-4	IMPLEMENTATION
reset the dotcount (but not the path) after reset!	WITHOUT_CLASSIFICATION	0.9922550452381792	WITHOUT_CLASSIFICATION	0.007744954761820812	IMPLEMENTATION
after reset!	WITHOUT_CLASSIFICATION	0.9999084723198279	WITHOUT_CLASSIFICATION	9.152768017205169E-5	IMPLEMENTATION
we don't need to worry about any condition in the on clause here (tofromfragmentstring) since anything in the on condition is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999883740314759	WITHOUT_CLASSIFICATION	1.1625968524162402E-5	IMPLEMENTATION
bit_length feels a bit broken to me. we have to cast to char in order to pass when a numeric value is supplied. but of course the answers given will be wildly different for these two datatypes. 1234.5678 will be 9 bytes as a char string but will be 8 or 16 bytes as a true numeric. jay nance 2006-09-22	WITHOUT_CLASSIFICATION	0.999999999170543	WITHOUT_CLASSIFICATION	8.294569886551627E-10	IMPLEMENTATION
dotcount>=2	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
do the corresponding rhs	WITHOUT_CLASSIFICATION	0.99982361333798	WITHOUT_CLASSIFICATION	1.7638666202015964E-4	IMPLEMENTATION
if its "id"	WITHOUT_CLASSIFICATION	0.9999892204731218	WITHOUT_CLASSIFICATION	1.0779526878138706E-5	IMPLEMENTATION
or its the id property name	WITHOUT_CLASSIFICATION	0.9998830318949026	WITHOUT_CLASSIFICATION	1.1696810509730023E-4	IMPLEMENTATION
join = q.createjoinfragment(usethetastylejoin)	WITHOUT_CLASSIFICATION	0.9998572661489042	WITHOUT_CLASSIFICATION	1.4273385109578587E-4	IMPLEMENTATION
important!!	WITHOUT_CLASSIFICATION	0.9998987543471989	WITHOUT_CLASSIFICATION	1.0124565280118054E-4	IMPLEMENTATION
string[] keycols = collpersister.getkeycolumnnames()	WITHOUT_CLASSIFICATION	0.9998367816222088	WITHOUT_CLASSIFICATION	1.632183777911828E-4	IMPLEMENTATION
an association	WITHOUT_CLASSIFICATION	0.9999848779491299	WITHOUT_CLASSIFICATION	1.5122050870067236E-5	IMPLEMENTATION
allow index() function	WITHOUT_CLASSIFICATION	0.9998921827304014	WITHOUT_CLASSIFICATION	1.0781726959863263E-4	IMPLEMENTATION
here assume sqlserver2005 using snapshot isolation which does not have this problem	WITHOUT_CLASSIFICATION	0.9922651990727716	WITHOUT_CLASSIFICATION	0.007734800927228467	IMPLEMENTATION
the reason for this is sql doesn't let you sort by an expression you are not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999984548006114	WITHOUT_CLASSIFICATION	1.545199388647489E-6	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
collections of values	WITHOUT_CLASSIFICATION	0.9999943919951353	WITHOUT_CLASSIFICATION	5.608004864636648E-6	IMPLEMENTATION
opening paren in new foo ( )	WITHOUT_CLASSIFICATION	0.9999979919513625	WITHOUT_CLASSIFICATION	2.0080486375389E-6	IMPLEMENTATION
if we are inside a new result() but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999712687063447	WITHOUT_CLASSIFICATION	2.873129365533946E-5	IMPLEMENTATION
special case	WITHOUT_CLASSIFICATION	0.9998921623244056	WITHOUT_CLASSIFICATION	1.0783767559444973E-4	IMPLEMENTATION
the name of an sql function	WITHOUT_CLASSIFICATION	0.9999986460495175	WITHOUT_CLASSIFICATION	1.3539504824916739E-6	IMPLEMENTATION
null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999976620513248	WITHOUT_CLASSIFICATION	2.337948675238255E-6	IMPLEMENTATION
this is basically a copy/paste of orderbyparser might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999829206042223	WITHOUT_CLASSIFICATION	1.707939577765E-5	IMPLEMENTATION
select p from p in class eg.person group by p.name p.address p	WITHOUT_CLASSIFICATION	0.9999995007746452	WITHOUT_CLASSIFICATION	4.992253548721697E-7	IMPLEMENTATION
return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.999983067349897	WITHOUT_CLASSIFICATION	1.693265010311188E-5	IMPLEMENTATION
register collection role	WITHOUT_CLASSIFICATION	0.9997944418711989	WITHOUT_CLASSIFICATION	2.0555812880105335E-4	IMPLEMENTATION
the keyword used to specify an identity column if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999990595505025	WITHOUT_CLASSIFICATION	9.404494973817293E-7	IMPLEMENTATION
.getelementpropertymapping()	WITHOUT_CLASSIFICATION	0.9999568524432488	WITHOUT_CLASSIFICATION	4.3147556751217095E-5	IMPLEMENTATION
crossjoins.add(name)	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
ie no select clause in hql	WITHOUT_CLASSIFICATION	0.9999966706482393	WITHOUT_CLASSIFICATION	3.329351760689282E-6	IMPLEMENTATION
initialize the set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999491799149337	WITHOUT_CLASSIFICATION	5.082008506623769E-5	IMPLEMENTATION
ie. no select clause	WITHOUT_CLASSIFICATION	0.999886230450849	WITHOUT_CLASSIFICATION	1.1376954915094876E-4	IMPLEMENTATION
there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999653119603007	WITHOUT_CLASSIFICATION	3.468803969937172E-5	IMPLEMENTATION
return the concrete type or the underlying type if a concrete type was not specified	WITHOUT_CLASSIFICATION	0.9999975608559332	WITHOUT_CLASSIFICATION	2.439144066850043E-6	IMPLEMENTATION
many-to-many	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
q.addcollection(collectionname collectionrole)	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9961932861378385	WITHOUT_CLASSIFICATION	0.0038067138621615923	IMPLEMENTATION
can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9995422787538363	WITHOUT_CLASSIFICATION	4.57721246163631E-4	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9996769355764583	WITHOUT_CLASSIFICATION	3.2306442354161597E-4	IMPLEMENTATION
this is the legacy behaviour for hql queries	WITHOUT_CLASSIFICATION	0.9999847602950134	WITHOUT_CLASSIFICATION	1.5239704986776297E-5	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9988031557581244	WITHOUT_CLASSIFICATION	0.0011968442418755678	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9988031557581244	WITHOUT_CLASSIFICATION	0.0011968442418755678	IMPLEMENTATION
we have the form trim(trimsource) so we trim leading and trailing spaces early exit!!!!	WITHOUT_CLASSIFICATION	0.9999740431824302	WITHOUT_CLASSIFICATION	2.595681756975526E-5	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9988031557581244	WITHOUT_CLASSIFICATION	0.0011968442418755678	IMPLEMENTATION
not known!	WITHOUT_CLASSIFICATION	0.9988031557581244	WITHOUT_CLASSIFICATION	0.0011968442418755678	IMPLEMENTATION
need this since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9991229987013578	WITHOUT_CLASSIFICATION	8.770012986420805E-4	IMPLEMENTATION
tokens that close a sub expression tokens that open a sub expression tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9993811440974151	WITHOUT_CLASSIFICATION	6.188559025849581E-4	IMPLEMENTATION
expressionterminators.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999139849950305	WITHOUT_CLASSIFICATION	8.601500496960441E-5	IMPLEMENTATION
expressionopeners.add("") deliberately excluded	WITHOUT_CLASSIFICATION	0.9999139849950305	WITHOUT_CLASSIFICATION	8.601500496960441E-5	IMPLEMENTATION
we have the form trim(from trimsource). this is functionally equivalent to trim(trimsource) early exit!!!!	WITHOUT_CLASSIFICATION	0.9996571130431686	WITHOUT_CLASSIFICATION	3.4288695683146354E-4	IMPLEMENTATION
otherwise a trim-specification and/or a trim-character have been specified we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character (what is to be trimmed off?) the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9297635282834785	WITHOUT_CLASSIFICATION	0.07023647171652149	IMPLEMENTATION
inside a between and expression	WITHOUT_CLASSIFICATION	0.999403450719067	WITHOUT_CLASSIFICATION	5.965492809330605E-4	IMPLEMENTATION
were an odd or even number of nots encountered the join string built up by compound paths inside this expression a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999994425536507	WITHOUT_CLASSIFICATION	5.574463493261574E-7	IMPLEMENTATION
ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999096263105216	WITHOUT_CLASSIFICATION	9.037368947830008E-5	IMPLEMENTATION
cope with []	WITHOUT_CLASSIFICATION	0.9999122162234029	WITHOUT_CLASSIFICATION	8.778377659715706E-5	IMPLEMENTATION
cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9996749198950631	WITHOUT_CLASSIFICATION	3.250801049369193E-4	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.999982229061628	WITHOUT_CLASSIFICATION	1.7770938371925242E-5	IMPLEMENTATION
cope with a subselect	WITHOUT_CLASSIFICATION	0.9999664709541195	WITHOUT_CLASSIFICATION	3.352904588044417E-5	IMPLEMENTATION
cope with special cases of and not ()	WITHOUT_CLASSIFICATION	0.9997641800245926	WITHOUT_CLASSIFICATION	2.3581997540739557E-4	IMPLEMENTATION
close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999916003306321	WITHOUT_CLASSIFICATION	8.399669368055974E-6	IMPLEMENTATION
take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9997218613669374	WITHOUT_CLASSIFICATION	2.781386330626501E-4	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999319734172126	WITHOUT_CLASSIFICATION	6.802658278736794E-5	IMPLEMENTATION
process a token mapping oo path expressions to sql expressions	WITHOUT_CLASSIFICATION	0.9999832299506429	WITHOUT_CLASSIFICATION	1.6770049357009416E-5	IMPLEMENTATION
open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999856925448434	WITHOUT_CLASSIFICATION	1.4307455156576253E-5	IMPLEMENTATION
cope with special cases of and not )	WITHOUT_CLASSIFICATION	0.9964541133563805	WITHOUT_CLASSIFICATION	0.003545886643619448	IMPLEMENTATION
the next one up must also be	WITHOUT_CLASSIFICATION	0.9999440567207639	WITHOUT_CLASSIFICATION	5.5943279236073584E-5	IMPLEMENTATION
add any joins	WITHOUT_CLASSIFICATION	0.999920273558297	WITHOUT_CLASSIFICATION	7.972644170296135E-5	IMPLEMENTATION
assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999319734172126	WITHOUT_CLASSIFICATION	6.802658278736794E-5	IMPLEMENTATION
named query parameter	WITHOUT_CLASSIFICATION	0.9999869521446333	WITHOUT_CLASSIFICATION	1.3047855366679292E-5	IMPLEMENTATION
path expression	WITHOUT_CLASSIFICATION	0.9994806638130156	WITHOUT_CLASSIFICATION	5.193361869843528E-4	IMPLEMENTATION
saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999255189745817	WITHOUT_CLASSIFICATION	7.448102541833234E-5	IMPLEMENTATION
persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998112618397953	WITHOUT_CLASSIFICATION	1.887381602046044E-4	IMPLEMENTATION
anything else	WITHOUT_CLASSIFICATION	0.9995752178723494	WITHOUT_CLASSIFICATION	4.24782127650567E-4	IMPLEMENTATION
the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9997192067765254	WITHOUT_CLASSIFICATION	2.807932234746331E-4	IMPLEMENTATION
careful with this!	WITHOUT_CLASSIFICATION	0.9998118429491023	WITHOUT_CLASSIFICATION	1.8815705089775413E-4	IMPLEMENTATION
the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999287292979342	WITHOUT_CLASSIFICATION	7.127070206575563E-5	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.9999708655073409	WITHOUT_CLASSIFICATION	2.9134492658997015E-5	IMPLEMENTATION
notice no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999993722862569	WITHOUT_CLASSIFICATION	6.277137430639153E-7	IMPLEMENTATION
cannot instantiate	WITHOUT_CLASSIFICATION	0.9999851115829297	WITHOUT_CLASSIFICATION	1.4888417070407006E-5	IMPLEMENTATION
start by looking for hql keywords	WITHOUT_CLASSIFICATION	0.9999942927333515	WITHOUT_CLASSIFICATION	5.707266648442919E-6	IMPLEMENTATION
inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.99977482136421	WITHOUT_CLASSIFICATION	2.2517863578991332E-4	IMPLEMENTATION
'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.999245069916962	WITHOUT_CLASSIFICATION	7.54930083037933E-4	IMPLEMENTATION
now anything that is not a hql keyword	WITHOUT_CLASSIFICATION	0.9895710622941463	WITHOUT_CLASSIFICATION	0.010428937705853823	IMPLEMENTATION
process the "old" hql style where aliases appear _first_ ie. using the in or in class constructions	WITHOUT_CLASSIFICATION	0.9999987214389845	WITHOUT_CLASSIFICATION	1.278561015410208E-6	IMPLEMENTATION
treat it as a classname	WITHOUT_CLASSIFICATION	0.9994988087785447	WITHOUT_CLASSIFICATION	5.011912214552654E-4	IMPLEMENTATION
treat it as a path expression	WITHOUT_CLASSIFICATION	0.9974296786061937	WITHOUT_CLASSIFICATION	0.0025703213938063287	IMPLEMENTATION
starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999886460934622	WITHOUT_CLASSIFICATION	1.1353906537738775E-5	IMPLEMENTATION
starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9997059776563783	WITHOUT_CLASSIFICATION	2.940223436218286E-4	IMPLEMENTATION
allow odmg oql style from person p p.cars c	WITHOUT_CLASSIFICATION	0.9999881231048064	WITHOUT_CLASSIFICATION	1.187689519358329E-5	IMPLEMENTATION
handle quoted strings	WITHOUT_CLASSIFICATION	0.9997737425301338	WITHOUT_CLASSIFICATION	2.2625746986606053E-4	IMPLEMENTATION
object insertions updates and deletions have list semantics because they must happen in the right order so as to respect referential integrity	WITHOUT_CLASSIFICATION	0.9999998048622759	WITHOUT_CLASSIFICATION	1.951377240331533E-7	IMPLEMENTATION
"finish off" the join	WITHOUT_CLASSIFICATION	0.9999708655073409	WITHOUT_CLASSIFICATION	2.9134492658997015E-5	IMPLEMENTATION
ignore whitespace	WITHOUT_CLASSIFICATION	0.9998245188238355	WITHOUT_CLASSIFICATION	1.754811761644512E-4	IMPLEMENTATION
do replacements	WITHOUT_CLASSIFICATION	0.9997419826255324	WITHOUT_CLASSIFICATION	2.5801737446772243E-4	IMPLEMENTATION
handle hql2 collection syntax	WITHOUT_CLASSIFICATION	0.9997346803706467	WITHOUT_CLASSIFICATION	2.65319629353298E-4	IMPLEMENTATION
uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999698601176424	WITHOUT_CLASSIFICATION	3.013988235754929E-5	IMPLEMENTATION
abstractselectingdelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999136886038719	WITHOUT_CLASSIFICATION	8.631139612812532E-5	IMPLEMENTATION
hilo params	WITHOUT_CLASSIFICATION	0.9999001072207783	WITHOUT_CLASSIFICATION	9.989277922181148E-5	IMPLEMENTATION
sql = query	WITHOUT_CLASSIFICATION	0.9999632560015325	WITHOUT_CLASSIFICATION	3.674399846743478E-5	IMPLEMENTATION
performance opt	WITHOUT_CLASSIFICATION	0.9997740443956113	WITHOUT_CLASSIFICATION	2.2595560438863236E-4	IMPLEMENTATION
sql = update	WITHOUT_CLASSIFICATION	0.9999923021265904	WITHOUT_CLASSIFICATION	7.697873409493581E-6	IMPLEMENTATION
hilo config	WITHOUT_CLASSIFICATION	0.999735136358226	WITHOUT_CLASSIFICATION	2.648636417740986E-4	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999301373657994	WITHOUT_CLASSIFICATION	6.986263420060408E-5	IMPLEMENTATION
don't allow comments on these insert statements as comments totally blow up the oracle getgeneratedkeys "support" (	WITHOUT_CLASSIFICATION	0.9999635006586542	WITHOUT_CLASSIFICATION	3.649934134575586E-5	IMPLEMENTATION
abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999994004001207	WITHOUT_CLASSIFICATION	5.995998793006703E-7	IMPLEMENTATION
throw new identifiergenerationexception("save associated object first or disable cascade for inverse association")	WITHOUT_CLASSIFICATION	0.9999981368243935	WITHOUT_CLASSIFICATION	1.863175606583931E-6	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9972566883453845	WITHOUT_CLASSIFICATION	0.00274331165461551	IMPLEMENTATION
do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999069233362397	WITHOUT_CLASSIFICATION	9.307666376040864E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999849609221817	WITHOUT_CLASSIFICATION	1.503907781832254E-5	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999301373657994	WITHOUT_CLASSIFICATION	6.986263420060408E-5	IMPLEMENTATION
do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9998237826020453	WITHOUT_CLASSIFICATION	1.762173979547976E-4	IMPLEMENTATION
column and table should be renamed but it would break the public api	WITHOUT_CLASSIFICATION	0.9999927653814372	WITHOUT_CLASSIFICATION	7.234618562788228E-6	IMPLEMENTATION
loaded entity instances by entitykey	WITHOUT_CLASSIFICATION	0.9999476309654126	WITHOUT_CLASSIFICATION	5.2369034587391436E-5	IMPLEMENTATION
if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999588021643336	WITHOUT_CLASSIFICATION	4.1197835666383645E-5	IMPLEMENTATION
the default	WITHOUT_CLASSIFICATION	0.9999888268987742	WITHOUT_CLASSIFICATION	1.1173101225732558E-5	IMPLEMENTATION
unfortunately not really safe to normalize this to 1 as an initial value like we do the others because we would not be able to control this if we are using a sequence	WITHOUT_CLASSIFICATION	0.9999448811941294	WITHOUT_CLASSIFICATION	5.511880587062554E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9972566883453845	WITHOUT_CLASSIFICATION	0.00274331165461551	IMPLEMENTATION
identity map of collectionentry instances by the collection wrapper	WITHOUT_CLASSIFICATION	0.9998701336987861	WITHOUT_CLASSIFICATION	1.2986630121382634E-4	IMPLEMENTATION
general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999223514892932	WITHOUT_CLASSIFICATION	7.764851070679379E-5	IMPLEMENTATION
table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999155812762421	WITHOUT_CLASSIFICATION	8.441872375784587E-5	IMPLEMENTATION
configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9994671886953153	WITHOUT_CLASSIFICATION	5.328113046846446E-4	IMPLEMENTATION
identifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996618990809311	WITHOUT_CLASSIFICATION	3.3810091906891557E-4	IMPLEMENTATION
persistentidentifiergenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996618990809311	WITHOUT_CLASSIFICATION	3.3810091906891557E-4	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999895443099038	WITHOUT_CLASSIFICATION	1.0455690096127252E-5	IMPLEMENTATION
prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999895443099038	WITHOUT_CLASSIFICATION	1.0455690096127252E-5	IMPLEMENTATION
fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999965182655318	WITHOUT_CLASSIFICATION	3.4817344681225065E-6	IMPLEMENTATION
we just hit the last position	WITHOUT_CLASSIFICATION	0.9999905619157032	WITHOUT_CLASSIFICATION	9.438084296798014E-6	IMPLEMENTATION
scroll ahead	WITHOUT_CLASSIFICATION	0.9999035577290061	WITHOUT_CLASSIFICATION	9.644227099392493E-5	IMPLEMENTATION
scroll backward	WITHOUT_CLASSIFICATION	0.9998404346049692	WITHOUT_CLASSIFICATION	1.5956539503086655E-4	IMPLEMENTATION
we have not yet hit the last result	WITHOUT_CLASSIFICATION	0.9934129535506572	WITHOUT_CLASSIFICATION	0.006587046449342805	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997867084257049	WITHOUT_CLASSIFICATION	2.1329157429512976E-4	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999705857600532	WITHOUT_CLASSIFICATION	2.941423994693974E-5	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999250774735787	WITHOUT_CLASSIFICATION	7.492252642126265E-5	IMPLEMENTATION
do this when all the properties are updateable since there is a certain likelihood that the information will already be snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999924690479741	WITHOUT_CLASSIFICATION	7.530952025766183E-6	IMPLEMENTATION
inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999634280246068	WITHOUT_CLASSIFICATION	3.6571975393257306E-5	IMPLEMENTATION
constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997867084257049	WITHOUT_CLASSIFICATION	2.1329157429512976E-4	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999705857600532	WITHOUT_CLASSIFICATION	2.941423994693974E-5	IMPLEMENTATION
criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999250774735787	WITHOUT_CLASSIFICATION	7.492252642126265E-5	IMPLEMENTATION
caches	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
generators	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
cache region is defined by the root-class in the hierarchy	WITHOUT_CLASSIFICATION	0.9999980293434353	WITHOUT_CLASSIFICATION	1.9706565647021984E-6	IMPLEMENTATION
check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.999997800129897	WITHOUT_CLASSIFICATION	2.1998701029052983E-6	IMPLEMENTATION
after all persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999730286639187	WITHOUT_CLASSIFICATION	2.6971336081424744E-5	IMPLEMENTATION
if we get here it is possible that we have a proxy 'in the way' of the merge map resolution note decided to put this here rather than in the above loop as i was nervous about the performance of the loop-in-loop especially considering this is far more likely the 'edge case'	WITHOUT_CLASSIFICATION	0.9999984193003334	WITHOUT_CLASSIFICATION	1.5806996666832735E-6	IMPLEMENTATION
jndi + serialization	WITHOUT_CLASSIFICATION	0.9999077257374538	WITHOUT_CLASSIFICATION	9.22742625461867E-5	IMPLEMENTATION
checking for named queries	WITHOUT_CLASSIFICATION	0.9999930326493761	WITHOUT_CLASSIFICATION	6.967350623900022E-6	IMPLEMENTATION
stats	WITHOUT_CLASSIFICATION	0.999972674706837	WITHOUT_CLASSIFICATION	2.732529316287133E-5	IMPLEMENTATION
entitynotfounddelegate	WITHOUT_CLASSIFICATION	0.9999568524432488	WITHOUT_CLASSIFICATION	4.3147556751217095E-5	IMPLEMENTATION
check named hql queries	WITHOUT_CLASSIFICATION	0.9999198386641609	WITHOUT_CLASSIFICATION	8.016133583900727E-5	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999938178595634	WITHOUT_CLASSIFICATION	6.182140436641916E-6	IMPLEMENTATION
prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9998990940482434	WITHOUT_CLASSIFICATION	1.0090595175659794E-4	IMPLEMENTATION
from javax.naming.referenceable	WITHOUT_CLASSIFICATION	0.9999757315891347	WITHOUT_CLASSIFICATION	2.4268410865401087E-5	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.999995958515855	WITHOUT_CLASSIFICATION	4.041484145051472E-6	IMPLEMENTATION
for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999769407374782	WITHOUT_CLASSIFICATION	2.3059262521758263E-5	IMPLEMENTATION
test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9999986097482383	WITHOUT_CLASSIFICATION	1.3902517617322959E-6	IMPLEMENTATION
note early exit	WITHOUT_CLASSIFICATION	0.9999553121472285	WITHOUT_CLASSIFICATION	4.468785277136676E-5	IMPLEMENTATION
for backward-compatability	WITHOUT_CLASSIFICATION	0.9999889910897348	WITHOUT_CLASSIFICATION	1.1008910265283927E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.999891237402094	WITHOUT_CLASSIFICATION	1.0876259790596732E-4	IMPLEMENTATION
to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999888282590299	WITHOUT_CLASSIFICATION	1.1171740970167444E-5	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999998440322947	WITHOUT_CLASSIFICATION	1.559677052979496E-7	IMPLEMENTATION
must add to jndi _after_ adding to hashmaps because some jndi servers use serialization	WITHOUT_CLASSIFICATION	0.9995538842081648	WITHOUT_CLASSIFICATION	4.4611579183516424E-4	IMPLEMENTATION
make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999039949400218	WITHOUT_CLASSIFICATION	9.600505997817999E-5	IMPLEMENTATION
for each of the defined parameters make sure its value has been set	WITHOUT_CLASSIFICATION	0.9999934054770605	WITHOUT_CLASSIFICATION	6.594522939490954E-6	IMPLEMENTATION
we never need to apply locks to the sql	WITHOUT_CLASSIFICATION	0.997063378373658	WITHOUT_CLASSIFICATION	0.0029366216263421053	IMPLEMENTATION
inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999170420096851	WITHOUT_CLASSIFICATION	8.295799031484285E-5	IMPLEMENTATION
deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999161226621279	WITHOUT_CLASSIFICATION	8.387733787204714E-5	IMPLEMENTATION
during deserialization we need to reconnect all proxies and collections to this session as well as the entityentry and collectionentry instances these associations are transient because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999694157601168	WITHOUT_CLASSIFICATION	3.058423988329678E-5	IMPLEMENTATION
updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999133158278216	WITHOUT_CLASSIFICATION	8.668417217847106E-5	IMPLEMENTATION
loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999869257831235	WITHOUT_CLASSIFICATION	1.3074216876487503E-4	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9998519709886241	WITHOUT_CLASSIFICATION	1.4802901137594548E-4	IMPLEMENTATION
final boolean forcecacherefresh	WITHOUT_CLASSIFICATION	0.9998519709886241	WITHOUT_CLASSIFICATION	1.4802901137594548E-4	IMPLEMENTATION
first try to load it from the temp pc associated to this ss	WITHOUT_CLASSIFICATION	0.9999168608661159	WITHOUT_CLASSIFICATION	8.31391338841739E-5	IMPLEMENTATION
if the metadata allowed proxy creation and caller did not request forceful eager loading generate a proxy	WITHOUT_CLASSIFICATION	0.9997519891454792	WITHOUT_CLASSIFICATION	2.480108545206828E-4	IMPLEMENTATION
otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.998664824363595	WITHOUT_CLASSIFICATION	0.0013351756364049833	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999890397032709	WITHOUT_CLASSIFICATION	1.0960296728991044E-5	IMPLEMENTATION
no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9997939186562897	WITHOUT_CLASSIFICATION	2.060813437102307E-4	IMPLEMENTATION
after setting values to object entitymode	WITHOUT_CLASSIFICATION	0.9999986816424158	WITHOUT_CLASSIFICATION	1.3183575841908963E-6	IMPLEMENTATION
for ejb3	WITHOUT_CLASSIFICATION	0.9999929750987563	WITHOUT_CLASSIFICATION	7.024901243695675E-6	IMPLEMENTATION
just ignore	WITHOUT_CLASSIFICATION	0.9999116404152798	WITHOUT_CLASSIFICATION	8.835958472011811E-5	IMPLEMENTATION
do a check	WITHOUT_CLASSIFICATION	0.9997826922418213	WITHOUT_CLASSIFICATION	2.173077581788332E-4	IMPLEMENTATION
saveorupdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997721016553741	WITHOUT_CLASSIFICATION	2.2789834462591673E-4	IMPLEMENTATION
update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997721448180484	WITHOUT_CLASSIFICATION	2.2785518195160887E-4	IMPLEMENTATION
lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997721016553741	WITHOUT_CLASSIFICATION	2.2789834462591673E-4	IMPLEMENTATION
persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997721016553741	WITHOUT_CLASSIFICATION	2.2789834462591673E-4	IMPLEMENTATION
persistonflush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997721016553741	WITHOUT_CLASSIFICATION	2.2789834462591673E-4	IMPLEMENTATION
merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997721016553741	WITHOUT_CLASSIFICATION	2.2789834462591673E-4	IMPLEMENTATION
saveorupdatecopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997721016553741	WITHOUT_CLASSIFICATION	2.2789834462591673E-4	IMPLEMENTATION
delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997721016553741	WITHOUT_CLASSIFICATION	2.2789834462591673E-4	IMPLEMENTATION
load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997721016553741	WITHOUT_CLASSIFICATION	2.2789834462591673E-4	IMPLEMENTATION
refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997721016553741	WITHOUT_CLASSIFICATION	2.2789834462591673E-4	IMPLEMENTATION
replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997721016553741	WITHOUT_CLASSIFICATION	2.2789834462591673E-4	IMPLEMENTATION
do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.993465597761574	WITHOUT_CLASSIFICATION	0.006534402238425987	IMPLEMENTATION
this is an internal error of some sort	WITHOUT_CLASSIFICATION	0.9995741257284463	WITHOUT_CLASSIFICATION	4.258742715536942E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999979478932973	WITHOUT_CLASSIFICATION	2.0521067026097724E-6	IMPLEMENTATION
only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999975721014239	WITHOUT_CLASSIFICATION	2.4278985760557445E-6	IMPLEMENTATION
if it was previously unreferenced we need to flush in order to get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.999999972680496	WITHOUT_CLASSIFICATION	2.731950401979069E-8	IMPLEMENTATION
not for internal use	WITHOUT_CLASSIFICATION	0.9965508034696254	WITHOUT_CLASSIFICATION	0.003449196530374649	IMPLEMENTATION
otherwise we only need to flush if there are in-memory changes to the queried tables	WITHOUT_CLASSIFICATION	0.9996061862841131	WITHOUT_CLASSIFICATION	3.938137158868326E-4	IMPLEMENTATION
might need to run a different filter entirely after the flush because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9978380098604085	WITHOUT_CLASSIFICATION	0.002161990139591474	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999979478932973	WITHOUT_CLASSIFICATION	2.0521067026097724E-6	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999979478932973	WITHOUT_CLASSIFICATION	2.0521067026097724E-6	IMPLEMENTATION
if it is initialized see if the underlying instance is contained since we need to account for the fact that it might have been evicted	WITHOUT_CLASSIFICATION	0.9999978544652279	WITHOUT_CLASSIFICATION	2.145534772084853E-6	IMPLEMENTATION
basically just an adapted copy of find(criteriaimpl)	WITHOUT_CLASSIFICATION	0.9999907062148643	WITHOUT_CLASSIFICATION	9.293785135683934E-6	IMPLEMENTATION
it is possible for this method to be called during flush processing so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9996035702006723	WITHOUT_CLASSIFICATION	3.9642979932779445E-4	IMPLEMENTATION
nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999954833072161	WITHOUT_CLASSIFICATION	4.516692783846496E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999519016867634	WITHOUT_CLASSIFICATION	4.809831323659635E-5	IMPLEMENTATION
ignore this error for now	WITHOUT_CLASSIFICATION	0.999891237402094	WITHOUT_CLASSIFICATION	1.0876259790596732E-4	IMPLEMENTATION
we need to writeobject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9995819533631114	WITHOUT_CLASSIFICATION	4.180466368886067E-4	IMPLEMENTATION
the old-time stand-by	WITHOUT_CLASSIFICATION	0.9999635215587322	WITHOUT_CLASSIFICATION	3.647844126771877E-5	IMPLEMENTATION
parameter bind values	WITHOUT_CLASSIFICATION	0.9999944894520857	WITHOUT_CLASSIFICATION	5.510547914293258E-6	IMPLEMENTATION
parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996323210819084	WITHOUT_CLASSIFICATION	3.6767891809160965E-4	IMPLEMENTATION
prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999993936068288	WITHOUT_CLASSIFICATION	6.063931712635076E-7	IMPLEMENTATION
execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999620913401912	WITHOUT_CLASSIFICATION	3.7908659808717506E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.999914745608894	WITHOUT_CLASSIFICATION	8.525439110594183E-5	IMPLEMENTATION
we have a cglib enhanced entity	WITHOUT_CLASSIFICATION	0.999914745608894	WITHOUT_CLASSIFICATION	8.525439110594183E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.999914745608894	WITHOUT_CLASSIFICATION	8.525439110594183E-5	IMPLEMENTATION
we have a javassist enhanced entity	WITHOUT_CLASSIFICATION	0.999914745608894	WITHOUT_CLASSIFICATION	8.525439110594183E-5	IMPLEMENTATION
fieldinterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999136886038719	WITHOUT_CLASSIFICATION	8.631139612812532E-5	IMPLEMENTATION
subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999189804029717	WITHOUT_CLASSIFICATION	8.101959702832464E-5	IMPLEMENTATION
let's assume that there is only one lazy fetch group for now!	WITHOUT_CLASSIFICATION	0.9999935064105061	WITHOUT_CLASSIFICATION	6.493589493839456E-6	IMPLEMENTATION
fieldhandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999136886038719	WITHOUT_CLASSIFICATION	8.631139612812532E-5	IMPLEMENTATION
should not need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9988934874914452	WITHOUT_CLASSIFICATION	0.0011065125085547207	IMPLEMENTATION
should probably no-op commit/rollback here at least in jta scenarios	WITHOUT_CLASSIFICATION	0.9999986270054418	WITHOUT_CLASSIFICATION	1.3729945581496398E-6	IMPLEMENTATION
base expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999729789508393	WITHOUT_CLASSIFICATION	2.7021049160759103E-5	IMPLEMENTATION
various expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999794155634491	WITHOUT_CLASSIFICATION	2.0584436550904597E-4	IMPLEMENTATION
explicitly perform no checking	WITHOUT_CLASSIFICATION	0.999931064672211	WITHOUT_CLASSIFICATION	6.893532778897923E-5	IMPLEMENTATION
used from testsuite	WITHOUT_CLASSIFICATION	0.9999821471285153	WITHOUT_CLASSIFICATION	1.7852871484627702E-5	IMPLEMENTATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999998481089782	WITHOUT_CLASSIFICATION	1.5189102185031612E-7	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999549597436747	WITHOUT_CLASSIFICATION	4.5040256325463976E-5	IMPLEMENTATION
register synch stats.connect()	WITHOUT_CLASSIFICATION	0.9999094663927571	WITHOUT_CLASSIFICATION	9.053360724292567E-5	IMPLEMENTATION
noncritical swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9996499192951616	WITHOUT_CLASSIFICATION	3.500807048383599E-4	IMPLEMENTATION
calls executebatch()	WITHOUT_CLASSIFICATION	0.9997675552581118	WITHOUT_CLASSIFICATION	2.3244474188812228E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9998510580705474	WITHOUT_CLASSIFICATION	1.4894192945257915E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9998510580705474	WITHOUT_CLASSIFICATION	1.4894192945257915E-4	IMPLEMENTATION
no big deal	WITHOUT_CLASSIFICATION	0.9998510580705474	WITHOUT_CLASSIFICATION	1.4894192945257915E-4	IMPLEMENTATION
sybase driver (jconnect) throwing npe here in certain cases but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.999999458243863	WITHOUT_CLASSIFICATION	5.417561369753028E-7	IMPLEMENTATION
see explanation above	WITHOUT_CLASSIFICATION	0.9999209179017883	WITHOUT_CLASSIFICATION	7.908209821170412E-5	IMPLEMENTATION
if we are in the process of releasing no sense checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999999788479735	WITHOUT_CLASSIFICATION	2.115202649852661E-8	IMPLEMENTATION
early exit!!!!	WITHOUT_CLASSIFICATION	0.9999464062453549	WITHOUT_CLASSIFICATION	5.359375464503315E-5	IMPLEMENTATION
resultset impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999149494250191	WITHOUT_CLASSIFICATION	8.505057498082395E-5	IMPLEMENTATION
resultset impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999149494250191	WITHOUT_CLASSIFICATION	8.505057498082395E-5	IMPLEMENTATION
refer to comment in statefulpersistencecontext.addcollection()	WITHOUT_CLASSIFICATION	0.9999945949476118	WITHOUT_CLASSIFICATION	5.405052388233984E-6	IMPLEMENTATION
connectionmanager.callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996618990809311	WITHOUT_CLASSIFICATION	3.3810091906891557E-4	IMPLEMENTATION
note success = false because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.999627918070249	WITHOUT_CLASSIFICATION	3.7208192975111075E-4	IMPLEMENTATION
we already have a callback registered either a local (org.hibernate.transaction) transaction has accepted callback responsibilities or we have previously registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999910677351054	WITHOUT_CLASSIFICATION	8.932264894511084E-6	IMPLEMENTATION
the configured transaction-factory says it only supports local callback mode so no sense attempting to register a jta synchronization	WITHOUT_CLASSIFICATION	0.999819424078277	WITHOUT_CLASSIFICATION	1.80575921723116E-4	IMPLEMENTATION
transactions marked for rollback-only cause some tm impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999289654601324	WITHOUT_CLASSIFICATION	7.10345398675737E-5	IMPLEMENTATION
serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999135028655338	WITHOUT_CLASSIFICATION	8.649713446615003E-5	IMPLEMENTATION
postinitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999664154995096	WITHOUT_CLASSIFICATION	3.358450049036583E-5	IMPLEMENTATION
cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999516439333523	WITHOUT_CLASSIFICATION	4.835606664769539E-5	IMPLEMENTATION
todo for 4.0 private static final logger log = loggerfactory.getlogger( sqlstatementlogger.class ) this is the legacy logging 'category'	WITHOUT_CLASSIFICATION	0.8677687487173138	WITHOUT_CLASSIFICATION	0.13223125128268617	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999475695089468	WITHOUT_CLASSIFICATION	5.243049105320027E-5	IMPLEMENTATION
don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999315162391241	WITHOUT_CLASSIFICATION	6.848376087584744E-5	IMPLEMENTATION
don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999664760070368	WITHOUT_CLASSIFICATION	3.3523992963248196E-5	IMPLEMENTATION
position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999336238664682	WITHOUT_CLASSIFICATION	6.637613353181073E-5	IMPLEMENTATION
sequentially read the result set in reverse until we recognize a change in the key value. at that point we are pointed at the last physical sequential row for the logical row in which we are interested in processing	WITHOUT_CLASSIFICATION	0.9999999912220158	WITHOUT_CLASSIFICATION	8.777984224546452E-9	IMPLEMENTATION
read backwards until we read past the first physical sequential row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999997694828714	WITHOUT_CLASSIFICATION	2.3051712856690985E-7	IMPLEMENTATION
finally read ahead one row to position result set cursor at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999997365571095	WITHOUT_CLASSIFICATION	2.6344289047032424E-7	IMPLEMENTATION
now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999994613177966	WITHOUT_CLASSIFICATION	5.386822033854912E-7	IMPLEMENTATION
force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9995170069604201	WITHOUT_CLASSIFICATION	4.8299303957985635E-4	IMPLEMENTATION
this is equivalent to the old behavior	WITHOUT_CLASSIFICATION	0.9998960427382108	WITHOUT_CLASSIFICATION	1.0395726178924426E-4	IMPLEMENTATION
if null owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.999998682447555	WITHOUT_CLASSIFICATION	1.3175524449438102E-6	IMPLEMENTATION
final string querystring	WITHOUT_CLASSIFICATION	0.9999794754770583	WITHOUT_CLASSIFICATION	2.0524522941763936E-5	IMPLEMENTATION
if it was a reference to self don't need to nullify unless we are using native id generation in which case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999994103010212	WITHOUT_CLASSIFICATION	5.89698978669509E-7	IMPLEMENTATION
end of array start filling again from start	WITHOUT_CLASSIFICATION	0.9999810038070588	WITHOUT_CLASSIFICATION	1.8996192941216873E-5	IMPLEMENTATION
in an effort to avoid concurrent-modification-exceptions (from potential recursive calls back through here as a result of the eventual call to persistentcollection#endread) we scan the internal loadingcollections map for matches and store those matches in a temp collection. the temp collection is then used to "drive" the #endread processing.	WITHOUT_CLASSIFICATION	0.9999978487649227	WITHOUT_CLASSIFICATION	2.1512350772620236E-6	IMPLEMENTATION
we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9998393442508761	WITHOUT_CLASSIFICATION	1.6065574912393018E-4	IMPLEMENTATION
can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999786821366032	WITHOUT_CLASSIFICATION	2.1317863396783602E-5	IMPLEMENTATION
first we need to suspend any current jta transaction and obtain a jdbc connection	WITHOUT_CLASSIFICATION	0.980819077643621	WITHOUT_CLASSIFICATION	0.01918092235637906	IMPLEMENTATION
getresultlist(results)	WITHOUT_CLASSIFICATION	0.9999568524432488	WITHOUT_CLASSIFICATION	4.3147556751217095E-5	IMPLEMENTATION
if we only returned one entity query by key is more efficient	WITHOUT_CLASSIFICATION	0.999952445881471	WITHOUT_CLASSIFICATION	4.755411852892437E-5	IMPLEMENTATION
a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9930277196800382	WITHOUT_CLASSIFICATION	0.006972280319961692	IMPLEMENTATION
handle empty collection	WITHOUT_CLASSIFICATION	0.992536357081679	WITHOUT_CLASSIFICATION	0.00746364291832101	IMPLEMENTATION
else no collection element but also no owner	WITHOUT_CLASSIFICATION	0.9999968473545233	WITHOUT_CLASSIFICATION	3.1526454766522203E-6	IMPLEMENTATION
handle empty collections	WITHOUT_CLASSIFICATION	0.9958404066412194	WITHOUT_CLASSIFICATION	0.004159593358780578	IMPLEMENTATION
else this is not a collection initializer (and empty collections will be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9994286137879167	WITHOUT_CLASSIFICATION	5.713862120832915E-4	IMPLEMENTATION
validate() instances of validatable	WITHOUT_CLASSIFICATION	0.9998727233560123	WITHOUT_CLASSIFICATION	1.2727664398769095E-4	IMPLEMENTATION
if we know there is exactly 1 row we can skip. it would be great if we could _always_ skip this it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9956888843382735	WITHOUT_CLASSIFICATION	0.004311115661726457	IMPLEMENTATION
remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999902380202135	WITHOUT_CLASSIFICATION	9.761979786622347E-6	IMPLEMENTATION
null version means the object is in the process of being loaded somewhere else in the resultset	WITHOUT_CLASSIFICATION	0.9999998594602522	WITHOUT_CLASSIFICATION	1.4053974780792795E-7	IMPLEMENTATION
problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999779278210027	WITHOUT_CLASSIFICATION	2.207217899722101E-5	IMPLEMENTATION
use the id passed in	WITHOUT_CLASSIFICATION	0.99991701360217	WITHOUT_CLASSIFICATION	8.298639783000986E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.999992421672972	WITHOUT_CLASSIFICATION	7.578327027965915E-6	IMPLEMENTATION
prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999461574382094	WITHOUT_CLASSIFICATION	5.384256179058168E-5	IMPLEMENTATION
no point doing this if none was requested	WITHOUT_CLASSIFICATION	0.9999994236970106	WITHOUT_CLASSIFICATION	5.763029894527056E-7	IMPLEMENTATION
if the object is already loaded return the loaded one	WITHOUT_CLASSIFICATION	0.9999997622692981	WITHOUT_CLASSIFICATION	2.377307018913766E-7	IMPLEMENTATION
its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.999654720472924	WITHOUT_CLASSIFICATION	3.452795270759288E-4	IMPLEMENTATION
cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.998738386074753	WITHOUT_CLASSIFICATION	0.0012616139252471271	IMPLEMENTATION
the load() which takes an entity does not pass an entityname	WITHOUT_CLASSIFICATION	0.999825684473574	WITHOUT_CLASSIFICATION	1.743155264260556E-4	IMPLEMENTATION
we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9995857392321708	WITHOUT_CLASSIFICATION	4.142607678292718E-4	IMPLEMENTATION
look for a proxy	WITHOUT_CLASSIFICATION	0.9999601993343352	WITHOUT_CLASSIFICATION	3.980066566480884E-5	IMPLEMENTATION
we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9994536154954402	WITHOUT_CLASSIFICATION	5.463845045597066E-4	IMPLEMENTATION
its the given optional object	WITHOUT_CLASSIFICATION	0.9999733475801004	WITHOUT_CLASSIFICATION	2.6652419899702382E-5	IMPLEMENTATION
instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999869597217655	WITHOUT_CLASSIFICATION	1.3040278234532477E-5	IMPLEMENTATION
need to hydrate it.	WITHOUT_CLASSIFICATION	0.9965693901576124	WITHOUT_CLASSIFICATION	0.003430609842387634	IMPLEMENTATION
return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999975784335495	WITHOUT_CLASSIFICATION	2.421566450371042E-6	IMPLEMENTATION
will be ignored using the existing entry instead	WITHOUT_CLASSIFICATION	0.999777340944913	WITHOUT_CLASSIFICATION	2.226590550869921E-4	IMPLEMENTATION
key is an entity involved with the operation performed by the listener value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999557519325	WITHOUT_CLASSIFICATION	4.424806762564397E-8	IMPLEMENTATION
materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9997828577180634	WITHOUT_CLASSIFICATION	2.1714228193655928E-4	IMPLEMENTATION
get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999908564549225	WITHOUT_CLASSIFICATION	9.143545077534543E-6	IMPLEMENTATION
ok in normal hibernate usage to delete a detached entity jpa however forbids it thus this is a hook for hem to affect this behavior	WITHOUT_CLASSIFICATION	0.999998450404032	WITHOUT_CLASSIFICATION	1.549595967950098E-6	IMPLEMENTATION
the entry will be removed after the flush and will no longer override the stale snapshot this is now handled by removeentity() in entitydeleteaction persistencecontext.removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.999995693251628	WITHOUT_CLASSIFICATION	4.306748372109828E-6	IMPLEMENTATION
addinitializedcollection(collection persister id)	WITHOUT_CLASSIFICATION	0.9998716344791307	WITHOUT_CLASSIFICATION	1.283655208692959E-4	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999690968519893	WITHOUT_CLASSIFICATION	3.0903148010731545E-5	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999690968519893	WITHOUT_CLASSIFICATION	3.0903148010731545E-5	IMPLEMENTATION
|| oj.getjoinable().consumescollectionalias()	WITHOUT_CLASSIFICATION	0.999916349435135	WITHOUT_CLASSIFICATION	8.365056486506964E-5	IMPLEMENTATION
here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9928064985312699	WITHOUT_CLASSIFICATION	0.00719350146873006	IMPLEMENTATION
code to handle subclasses of topclass	WITHOUT_CLASSIFICATION	0.9998565859750773	WITHOUT_CLASSIFICATION	1.4341402492266825E-4	IMPLEMENTATION
woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999974146644688	WITHOUT_CLASSIFICATION	2.5853355311548087E-6	IMPLEMENTATION
we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9997648300684226	WITHOUT_CLASSIFICATION	2.3516993157737906E-4	IMPLEMENTATION
we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9998649337919666	WITHOUT_CLASSIFICATION	1.3506620803340592E-4	IMPLEMENTATION
synchronized to avoid multi-thread access issues defined as method synch to avoid potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9997298211290627	WITHOUT_CLASSIFICATION	2.701788709372788E-4	IMPLEMENTATION
allows various loaders (ok mainly the queryloader ) to check whether scrolling of their result set should be allowed. by default it is allowed.	WITHOUT_CLASSIFICATION	0.9999977120235211	WITHOUT_CLASSIFICATION	2.2879764789724823E-6	IMPLEMENTATION
before adding to collection!	WITHOUT_CLASSIFICATION	0.9999717815320341	WITHOUT_CLASSIFICATION	2.8218467965862272E-5	IMPLEMENTATION
if the current depth is 0 the root thing being loaded is the many-to-many collection itself. here it is alright to use an inner join	WITHOUT_CLASSIFICATION	0.9999981434388161	WITHOUT_CLASSIFICATION	1.856561183882369E-6	IMPLEMENTATION
operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9996714168256045	WITHOUT_CLASSIFICATION	3.2858317439547524E-4	IMPLEMENTATION
simple because we can't have a one-to-one or a collection (or even a property-ref) in a composite-element	WITHOUT_CLASSIFICATION	0.9999938755187916	WITHOUT_CLASSIFICATION	6.1244812083822245E-6	IMPLEMENTATION
a composite key	WITHOUT_CLASSIFICATION	0.9998545448142235	WITHOUT_CLASSIFICATION	1.4545518577659006E-4	IMPLEMENTATION
if no batch use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9998691874726944	WITHOUT_CLASSIFICATION	1.3081252730554662E-4	IMPLEMENTATION
it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999017244844529	WITHOUT_CLASSIFICATION	9.8275515547069E-5	IMPLEMENTATION
needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.8798226175225441	IMPLEMENTATION	0.12017738247745596	WITHOUT_CLASSIFICATION
&& etype.isreferencetoprimarykey()	WITHOUT_CLASSIFICATION	0.9999143079810969	WITHOUT_CLASSIFICATION	8.569201890303691E-5	IMPLEMENTATION
it might still need to apply a collection ordering based on a many-to-many defined order-by	WITHOUT_CLASSIFICATION	0.977803650639346	WITHOUT_CLASSIFICATION	0.02219634936065396	IMPLEMENTATION
if a composite key use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching todo unnecessary for databases with ansi-style joins	WITHOUT_CLASSIFICATION	0.849762489850955	WITHOUT_CLASSIFICATION	0.15023751014904493	IMPLEMENTATION
belong to other persister belong to other persister	WITHOUT_CLASSIFICATION	0.999757861748907	WITHOUT_CLASSIFICATION	2.421382510930244E-4	IMPLEMENTATION
we found it	WITHOUT_CLASSIFICATION	0.9997089906695498	WITHOUT_CLASSIFICATION	2.9100933045017726E-4	IMPLEMENTATION
we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999755633606741	WITHOUT_CLASSIFICATION	2.4436639325971335E-5	IMPLEMENTATION
disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9997050522036598	WITHOUT_CLASSIFICATION	2.949477963402383E-4	IMPLEMENTATION
note unlike all other loaders this one is not multithreaded or cacheable!!	WITHOUT_CLASSIFICATION	0.9753800774493394	WITHOUT_CLASSIFICATION	0.024619922550660492	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9990193452946452	WITHOUT_CLASSIFICATION	9.806547053547538E-4	IMPLEMENTATION
root entity comes last	WITHOUT_CLASSIFICATION	0.9999547738320687	WITHOUT_CLASSIFICATION	4.522616793141304E-5	IMPLEMENTATION
deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999497127777657	WITHOUT_CLASSIFICATION	5.028722223439919E-5	IMPLEMENTATION
alias may be null early exit	WITHOUT_CLASSIFICATION	0.9999909141140291	WITHOUT_CLASSIFICATION	9.085885970971707E-6	IMPLEMENTATION
if it is a compound path	WITHOUT_CLASSIFICATION	0.9999974297393638	WITHOUT_CLASSIFICATION	2.5702606362505317E-6	IMPLEMENTATION
otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.999650788350823	WITHOUT_CLASSIFICATION	3.4921164917700993E-4	IMPLEMENTATION
if its the root criteria we are done	WITHOUT_CLASSIFICATION	0.9999973432031165	WITHOUT_CLASSIFICATION	2.6567968835816833E-6	IMPLEMENTATION
otherwise recurse	WITHOUT_CLASSIFICATION	0.9989923821775001	WITHOUT_CLASSIFICATION	0.0010076178224998676	IMPLEMENTATION
the criteria instance	WITHOUT_CLASSIFICATION	0.9999869482602246	WITHOUT_CLASSIFICATION	1.3051739775402973E-5	IMPLEMENTATION
the entity name	WITHOUT_CLASSIFICATION	0.9999241447691365	WITHOUT_CLASSIFICATION	7.585523086349554E-5	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9998403133947218	WITHOUT_CLASSIFICATION	1.596866052781957E-4	IMPLEMENTATION
not found in inner query try the outer query	WITHOUT_CLASSIFICATION	0.9998403133947218	WITHOUT_CLASSIFICATION	1.596866052781957E-4	IMPLEMENTATION
it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.999983649116095	WITHOUT_CLASSIFICATION	1.6350883905041866E-5	IMPLEMENTATION
should never happen i think	WITHOUT_CLASSIFICATION	0.9976944934878589	WITHOUT_CLASSIFICATION	0.0023055065121411235	IMPLEMENTATION
detect discriminator values	WITHOUT_CLASSIFICATION	0.9999919328657316	WITHOUT_CLASSIFICATION	8.067134268393193E-6	IMPLEMENTATION
convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.999991310755813	WITHOUT_CLASSIFICATION	8.689244186937639E-6	IMPLEMENTATION
and the qualifier is not the alias of this criteria -> check to see if we belong to some criteria other than the one that created us	WITHOUT_CLASSIFICATION	0.9998745116375441	WITHOUT_CLASSIFICATION	1.2548836245590206E-4	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999631340649426	WITHOUT_CLASSIFICATION	3.68659350573325E-5	IMPLEMENTATION
otherwise this is an ordinary value.	WITHOUT_CLASSIFICATION	0.999897793745691	WITHOUT_CLASSIFICATION	1.0220625430899639E-4	IMPLEMENTATION
currently not cachable if autodiscover types is in effect (e.g. "select ")	WITHOUT_CLASSIFICATION	0.9999981501154948	WITHOUT_CLASSIFICATION	1.8498845052702968E-6	IMPLEMENTATION
private final string[] sqlaliases private final string[] sqlaliassuffixes	WITHOUT_CLASSIFICATION	0.9999271882766592	WITHOUT_CLASSIFICATION	7.281172334083462E-5	IMPLEMENTATION
this is only needed (afaict) for resulttransformer processing	WITHOUT_CLASSIFICATION	0.8300432903495216	WITHOUT_CLASSIFICATION	0.1699567096504784	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999988254057743	WITHOUT_CLASSIFICATION	1.1745942256872883E-6	IMPLEMENTATION
build an array with indices equal to the total number of actual returns in the result hibernate will return for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999999267055492	WITHOUT_CLASSIFICATION	7.329445082169876E-8	IMPLEMENTATION
replace {.} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9993111656880488	WITHOUT_CLASSIFICATION	6.888343119511188E-4	IMPLEMENTATION
no additional open braces found in the string append the rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999967534891814	WITHOUT_CLASSIFICATION	3.246510818577839E-6	IMPLEMENTATION
apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999668017016189	WITHOUT_CLASSIFICATION	3.319829838118268E-5	IMPLEMENTATION
it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999723445398545	WITHOUT_CLASSIFICATION	2.7655460145447697E-5	IMPLEMENTATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9452998958801955	IMPLEMENTATION	0.0547001041198045	WITHOUT_CLASSIFICATION
passing through anything we do not know to support jdbc escape sequences hb-898	WITHOUT_CLASSIFICATION	0.9452998958801955	IMPLEMENTATION	0.0547001041198045	WITHOUT_CLASSIFICATION
the current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999554525418306	WITHOUT_CLASSIFICATION	4.4547458169440056E-5	IMPLEMENTATION
it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999784503271809	WITHOUT_CLASSIFICATION	2.154967281909168E-5	IMPLEMENTATION
possibly handle something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999607504212905	WITHOUT_CLASSIFICATION	3.924957870951366E-5	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999869188219204	WITHOUT_CLASSIFICATION	1.3081178079622899E-5	IMPLEMENTATION
private final list persisters = new arraylist()	WITHOUT_CLASSIFICATION	0.9999360088857766	WITHOUT_CLASSIFICATION	6.399111422339869E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999549597436747	WITHOUT_CLASSIFICATION	4.5040256325463976E-5	IMPLEMENTATION
note early exit!	WITHOUT_CLASSIFICATION	0.9999692882300029	WITHOUT_CLASSIFICATION	3.0711769997226154E-5	IMPLEMENTATION
private final list scalartypes = new arraylist() private final list scalarcolumnaliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999360088857766	WITHOUT_CLASSIFICATION	6.399111422339869E-5	IMPLEMENTATION
now process the returns	WITHOUT_CLASSIFICATION	0.9999353927308899	WITHOUT_CLASSIFICATION	6.460726910999376E-5	IMPLEMENTATION
private list collectionowneraliases = new arraylist() private list collectionaliases = new arraylist() private list collectionpersisters = new arraylist() private list collectionresults = new arraylist()	WITHOUT_CLASSIFICATION	0.9999712078571007	WITHOUT_CLASSIFICATION	2.8792142899286206E-5	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999455970895363	WITHOUT_CLASSIFICATION	5.4402910463677295E-5	IMPLEMENTATION
already been processed	WITHOUT_CLASSIFICATION	0.9999455970895363	WITHOUT_CLASSIFICATION	5.4402910463677295E-5	IMPLEMENTATION
make sure the owner alias is known	WITHOUT_CLASSIFICATION	0.999972785710409	WITHOUT_CLASSIFICATION	2.7214289590881163E-5	IMPLEMENTATION
first break down the returns into maps keyed by alias so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9997851048692331	WITHOUT_CLASSIFICATION	2.1489513076690189E-4	IMPLEMENTATION
scalarcolumnaliases.add( typereturn.getcolumnalias() ) scalartypes.add( typereturn.gettype() )	WITHOUT_CLASSIFICATION	0.9998590469322924	WITHOUT_CLASSIFICATION	1.4095306770751172E-4	IMPLEMENTATION
if this return's alias has not been processed yet do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9998791994662002	WITHOUT_CLASSIFICATION	1.2080053379981011E-4	IMPLEMENTATION
collectionowneraliases.add( owneralias )	WITHOUT_CLASSIFICATION	0.9998590469322924	WITHOUT_CLASSIFICATION	1.4095306770751172E-4	IMPLEMENTATION
for merging of versioned entities we consider the version having been changed only when 1) the two version values are different and 2) the target actually represents database state! this second condition is a special case which allows an entity to be merged during the same transaction (though during a seperate operation) in which it was originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999999995909373	WITHOUT_CLASSIFICATION	4.0906268191995E-10	IMPLEMENTATION
this is the second pass through on a merge op so here we limit the replacement to associations types (value types were already replaced during the first pass)	WITHOUT_CLASSIFICATION	0.9998364101501376	WITHOUT_CLASSIFICATION	1.6358984986239073E-4	IMPLEMENTATION
early exit	WITHOUT_CLASSIFICATION	0.9999877802382721	WITHOUT_CLASSIFICATION	1.2219761727939798E-5	IMPLEMENTATION
cascade-save to collections after the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999896795283111	WITHOUT_CLASSIFICATION	1.0320471688937546E-5	IMPLEMENTATION
initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9991085682390071	WITHOUT_CLASSIFICATION	8.914317609929961E-4	IMPLEMENTATION
use the delegate.	WITHOUT_CLASSIFICATION	0.9998372223594464	WITHOUT_CLASSIFICATION	1.6277764055369802E-4	IMPLEMENTATION
currently only the hibernate-supplied dbtimestamptype is supported here	WITHOUT_CLASSIFICATION	0.9999986564820713	WITHOUT_CLASSIFICATION	1.3435179287331912E-6	IMPLEMENTATION
this is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999197163092322	WITHOUT_CLASSIFICATION	8.028369076778121E-5	IMPLEMENTATION
make a new one	WITHOUT_CLASSIFICATION	0.9993797807655322	WITHOUT_CLASSIFICATION	6.202192344677395E-4	IMPLEMENTATION
not so sure this is even valid subtree. but if it was it'd represent two unrelated table references	WITHOUT_CLASSIFICATION	0.9999992310447039	WITHOUT_CLASSIFICATION	7.68955296226037E-7	IMPLEMENTATION
(not (gt a b) ) => (le a b)	WITHOUT_CLASSIFICATION	0.9999861019147777	WITHOUT_CLASSIFICATION	1.3898085222426121E-5	IMPLEMENTATION
private type[] sqlresulttypes	WITHOUT_CLASSIFICATION	0.9999830607470207	WITHOUT_CLASSIFICATION	1.6939252979255137E-5	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998377503085211	WITHOUT_CLASSIFICATION	1.6224969147896526E-4	IMPLEMENTATION
sqlresulttypes = selectclause.getsqlresulttypes()	WITHOUT_CLASSIFICATION	0.9998307994426365	WITHOUT_CLASSIFICATION	1.6920055736352027E-4	IMPLEMENTATION
by default	WITHOUT_CLASSIFICATION	0.999998343998948	WITHOUT_CLASSIFICATION	1.656001051902202E-6	IMPLEMENTATION
this is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999974416484331	WITHOUT_CLASSIFICATION	2.5583515669326563E-6	IMPLEMENTATION
-- loader implementation --	WITHOUT_CLASSIFICATION	0.9998569081322276	WITHOUT_CLASSIFICATION	1.4309186777243028E-4	IMPLEMENTATION
-- loader overrides --	WITHOUT_CLASSIFICATION	0.9999682452713253	WITHOUT_CLASSIFICATION	3.1754728674773665E-5	IMPLEMENTATION
(not (is_null a b) ) => (is_not_null a b)	WITHOUT_CLASSIFICATION	0.999972135286174	WITHOUT_CLASSIFICATION	2.7864713826007618E-5	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9995412104211134	WITHOUT_CLASSIFICATION	4.587895788865263E-4	IMPLEMENTATION
meant to handle dynamic instantiation queries	WITHOUT_CLASSIFICATION	0.999724370539317	WITHOUT_CLASSIFICATION	2.756294606830994E-4	IMPLEMENTATION
--- query translator methods ---	WITHOUT_CLASSIFICATION	0.9999742549219172	WITHOUT_CLASSIFICATION	2.574507808281998E-5	IMPLEMENTATION
-- implementation private methods --	WITHOUT_CLASSIFICATION	0.9999500756704295	WITHOUT_CLASSIFICATION	4.9924329570552433E-5	IMPLEMENTATION
deduplicate unique constraints sharing the same columns this is needed by hibernate annotations since it creates automagically unique constraints for the user	WITHOUT_CLASSIFICATION	0.9982891464529341	WITHOUT_CLASSIFICATION	0.0017108535470659234	IMPLEMENTATION
try to find out the name of the primary key to create it as identity if the identitygenerator is used	WITHOUT_CLASSIFICATION	0.9999983993794566	WITHOUT_CLASSIFICATION	1.6006205434173635E-6	IMPLEMENTATION
to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9977926620255662	WITHOUT_CLASSIFICATION	0.002207337974433835	IMPLEMENTATION
prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999991627590277	WITHOUT_CLASSIFICATION	8.372409722282508E-7	IMPLEMENTATION
used also for generation of fk names!	WITHOUT_CLASSIFICATION	0.9999828978124861	WITHOUT_CLASSIFICATION	1.7102187513969602E-5	IMPLEMENTATION
usually useless	WITHOUT_CLASSIFICATION	0.9998875140359489	WITHOUT_CLASSIFICATION	1.1248596405113603E-4	IMPLEMENTATION
added this caching as i noticed that gettype() is being called multiple times	WITHOUT_CLASSIFICATION	0.9999707128181349	WITHOUT_CLASSIFICATION	2.928718186502953E-5	IMPLEMENTATION
do not add unique constraint on db not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9920288448835889	WITHOUT_CLASSIFICATION	0.007971155116411117	IMPLEMENTATION
for backward compatibility disable this	WITHOUT_CLASSIFICATION	0.999801176755579	WITHOUT_CLASSIFICATION	1.9882324442090763E-4	IMPLEMENTATION
may be final may be final may be final	WITHOUT_CLASSIFICATION	0.9997546344767597	WITHOUT_CLASSIFICATION	2.453655232402517E-4	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9997126424676561	WITHOUT_CLASSIFICATION	2.8735753234391593E-4	IMPLEMENTATION
may be final	WITHOUT_CLASSIFICATION	0.9997126424676561	WITHOUT_CLASSIFICATION	2.8735753234391593E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999930892995278	WITHOUT_CLASSIFICATION	6.910700472268065E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999877653320006	WITHOUT_CLASSIFICATION	1.2234667999366429E-5	IMPLEMENTATION
the root of the incoming property path matched one of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9996152479801613	WITHOUT_CLASSIFICATION	3.8475201983868905E-4	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999167885256005	WITHOUT_CLASSIFICATION	8.321147439951327E-5	IMPLEMENTATION
flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999038546062863	WITHOUT_CLASSIFICATION	9.614539371369451E-5	IMPLEMENTATION
an identifier mapper => getkey will be included in the getnonduplicatedpropertyiterator() and checked later so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999963838638691	WITHOUT_CLASSIFICATION	3.616136130784375E-6	IMPLEMENTATION
if the hibernate-mapping did not specify a schema/catalog use the defaults specified by properties - but note that if the schema/catalog were specified in hibernate-mapping or as params they will already be initialized and will override the values set here (they are in identifiergeneratorproperties)	WITHOUT_CLASSIFICATION	0.9999997446294749	WITHOUT_CLASSIFICATION	2.553705250838229E-7	IMPLEMENTATION
pass the entity-name if not a collection-id	WITHOUT_CLASSIFICATION	0.9996882820918325	WITHOUT_CLASSIFICATION	3.1171790816752635E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999930892995278	WITHOUT_CLASSIFICATION	6.910700472268065E-6	IMPLEMENTATION
primary key constraint	WITHOUT_CLASSIFICATION	0.9999877653320006	WITHOUT_CLASSIFICATION	1.2234667999366429E-5	IMPLEMENTATION
pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9996492427971863	WITHOUT_CLASSIFICATION	3.507572028138153E-4	IMPLEMENTATION
needed to satisfy keyvalue	WITHOUT_CLASSIFICATION	0.6030507185803283	WITHOUT_CLASSIFICATION	0.3969492814196718	IMPLEMENTATION
empty means no scoping	WITHOUT_CLASSIFICATION	0.9993301523592162	WITHOUT_CLASSIFICATION	6.698476407837632E-4	IMPLEMENTATION
index should be last column listed	WITHOUT_CLASSIFICATION	0.9995591512756242	WITHOUT_CLASSIFICATION	4.4084872437581034E-4	IMPLEMENTATION
if it is a formula index use the element columns in the pk	WITHOUT_CLASSIFICATION	0.9999997418753444	WITHOUT_CLASSIFICATION	2.5812465563022077E-7	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns	WITHOUT_CLASSIFICATION	0.9992761105993039	WITHOUT_CLASSIFICATION	7.238894006961031E-4	IMPLEMENTATION
arraylist list = new arraylist()list.addall( getkey().getconstraintcolumns() )list.addall( getindex().getconstraintcolumns() )getcollectiontable().createuniquekey(list)	WITHOUT_CLASSIFICATION	0.9999266087420333	WITHOUT_CLASSIFICATION	7.339125796667827E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999382300649257	WITHOUT_CLASSIFICATION	6.17699350743669E-5	IMPLEMENTATION
no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999954362065154	WITHOUT_CLASSIFICATION	4.563793484471021E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.9536605521304508	WITHOUT_CLASSIFICATION	0.04633944786954929	IMPLEMENTATION
the case of a foreign key to something other than the pk is handled in createpropertyrefconstraints	WITHOUT_CLASSIFICATION	0.9999979694967276	WITHOUT_CLASSIFICATION	2.0305032724481477E-6	IMPLEMENTATION
todo we could just return all false	WITHOUT_CLASSIFICATION	0.9536605521304508	WITHOUT_CLASSIFICATION	0.04633944786954929	IMPLEMENTATION
if the property mapping consists of all formulas make it non-updateable	WITHOUT_CLASSIFICATION	0.9998928643916629	WITHOUT_CLASSIFICATION	1.0713560833710273E-4	IMPLEMENTATION
columnupdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.999916349435135	WITHOUT_CLASSIFICATION	8.365056486506964E-5	IMPLEMENTATION
if the property mapping consists of all formulas make it insertable	WITHOUT_CLASSIFICATION	0.9998928643916629	WITHOUT_CLASSIFICATION	1.0713560833710273E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999215531567319	WITHOUT_CLASSIFICATION	7.844684326808176E-5	IMPLEMENTATION
expected type is intrinsic here	WITHOUT_CLASSIFICATION	0.9999619071911046	WITHOUT_CLASSIFICATION	3.809280889544702E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999382300649257	WITHOUT_CLASSIFICATION	6.17699350743669E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999382300649257	WITHOUT_CLASSIFICATION	6.17699350743669E-5	IMPLEMENTATION
return memberpersister.getpropertytype(propertyname)	WITHOUT_CLASSIFICATION	0.999971136654221	WITHOUT_CLASSIFICATION	2.8863345779078894E-5	IMPLEMENTATION
return memberpersister.tocolumns(alias propertyname)	WITHOUT_CLASSIFICATION	0.9999712279869483	WITHOUT_CLASSIFICATION	2.877201305171877E-5	IMPLEMENTATION
return memberpersister.gettype()	WITHOUT_CLASSIFICATION	0.999971136654221	WITHOUT_CLASSIFICATION	2.8863345779078894E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9998996398522113	WITHOUT_CLASSIFICATION	1.0036014778858634E-4	IMPLEMENTATION
return !isonetomany()	WITHOUT_CLASSIFICATION	0.9999856038198439	WITHOUT_CLASSIFICATION	1.4396180156144659E-5	IMPLEMENTATION
instanceof associationtype	WITHOUT_CLASSIFICATION	0.9999575270790152	WITHOUT_CLASSIFICATION	4.247292098475278E-5	IMPLEMENTATION
we need to determine the best way to know that two joinables represent a single many-to-many	WITHOUT_CLASSIFICATION	0.7558191937534359	WITHOUT_CLASSIFICATION	0.24418080624656416	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9999082796327402	WITHOUT_CLASSIFICATION	9.172036725972721E-5	IMPLEMENTATION
public boolean issubselectloadable()	WITHOUT_CLASSIFICATION	0.9999879323570581	WITHOUT_CLASSIFICATION	1.2067642941861612E-5	IMPLEMENTATION
key	WITHOUT_CLASSIFICATION	0.9999795883184176	WITHOUT_CLASSIFICATION	2.0411681582458867E-5	IMPLEMENTATION
columns	WITHOUT_CLASSIFICATION	0.9999944541227599	WITHOUT_CLASSIFICATION	5.5458772400815965E-6	IMPLEMENTATION
sql statements	WITHOUT_CLASSIFICATION	0.9999733092689392	WITHOUT_CLASSIFICATION	2.669073106074985E-5	IMPLEMENTATION
extra information about the element type	WITHOUT_CLASSIFICATION	0.9999976790996076	WITHOUT_CLASSIFICATION	2.3209003924383974E-6	IMPLEMENTATION
types	WITHOUT_CLASSIFICATION	0.9999067399947057	WITHOUT_CLASSIFICATION	9.32600052942839E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999930892995278	WITHOUT_CLASSIFICATION	6.910700472268065E-6	IMPLEMENTATION
private final string unquotedidentifiercolumnname	WITHOUT_CLASSIFICATION	0.999983844986898	WITHOUT_CLASSIFICATION	1.615501310199976E-5	IMPLEMENTATION
dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999656667378503	WITHOUT_CLASSIFICATION	3.4333262149744334E-5	IMPLEMENTATION
dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999576134879866	WITHOUT_CLASSIFICATION	4.238651201345023E-5	IMPLEMENTATION
nativesql collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999372095807598	WITHOUT_CLASSIFICATION	6.27904192401229E-5	IMPLEMENTATION
unquotedkeycolumnnames = stringhelper.unquote(keycolumnaliases)	WITHOUT_CLASSIFICATION	0.9998307994426365	WITHOUT_CLASSIFICATION	1.6920055736352027E-4	IMPLEMENTATION
element	WITHOUT_CLASSIFICATION	0.9999922487423611	WITHOUT_CLASSIFICATION	7.751257638811013E-6	IMPLEMENTATION
nativesql collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999761549528037	WITHOUT_CLASSIFICATION	2.3845047196314412E-5	IMPLEMENTATION
index and row select	WITHOUT_CLASSIFICATION	0.9996419304526402	WITHOUT_CLASSIFICATION	3.580695473598347E-4	IMPLEMENTATION
nativesql collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9995303244410826	WITHOUT_CLASSIFICATION	4.6967555891736244E-4	IMPLEMENTATION
unquotedidentifiercolumnname = identifiercolumnalias	WITHOUT_CLASSIFICATION	0.9998307994426365	WITHOUT_CLASSIFICATION	1.6920055736352027E-4	IMPLEMENTATION
unquotedidentifiercolumnname = null	WITHOUT_CLASSIFICATION	0.9998859179396711	WITHOUT_CLASSIFICATION	1.1408206032898716E-4	IMPLEMENTATION
generate the sql	WITHOUT_CLASSIFICATION	0.9999840066539436	WITHOUT_CLASSIFICATION	1.59933460563537E-5	IMPLEMENTATION
for non-arrays we don't need to know the element class elementtype.returnedclass()	WITHOUT_CLASSIFICATION	0.9983865126541148	WITHOUT_CLASSIFICATION	0.0016134873458852664	IMPLEMENTATION
not all classpersisters implement propertymapping!	WITHOUT_CLASSIFICATION	0.5620564901611408	WITHOUT_CLASSIFICATION	0.43794350983885927	IMPLEMENTATION
handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9996715606096975	WITHOUT_CLASSIFICATION	3.284393903024925E-4	IMPLEMENTATION
handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.999916182314914	WITHOUT_CLASSIFICATION	8.381768508600245E-5	IMPLEMENTATION
if there is a user-specified loader return that todo filters!?	WITHOUT_CLASSIFICATION	0.9821185466551439	WITHOUT_CLASSIFICATION	0.017881453344856132	IMPLEMENTATION
take care of any entities that might have been evicted!	WITHOUT_CLASSIFICATION	0.99988555781704	WITHOUT_CLASSIFICATION	1.1444218296003295E-4	IMPLEMENTATION
strip leading ''	WITHOUT_CLASSIFICATION	0.9999082796327402	WITHOUT_CLASSIFICATION	9.172036725972721E-5	IMPLEMENTATION
run a subquery loader	WITHOUT_CLASSIFICATION	0.9999727357636352	WITHOUT_CLASSIFICATION	2.7264236364806734E-5	IMPLEMENTATION
needed by arrays	WITHOUT_CLASSIFICATION	0.576129927351477	WITHOUT_CLASSIFICATION	0.42387007264852317	IMPLEMENTATION
todo something with formulas	WITHOUT_CLASSIFICATION	0.8846768094083386	WITHOUT_CLASSIFICATION	0.11532319059166145	IMPLEMENTATION
an assertion	WITHOUT_CLASSIFICATION	0.9999787422195489	WITHOUT_CLASSIFICATION	2.1257780451084527E-5	IMPLEMENTATION
remove all the old entries	WITHOUT_CLASSIFICATION	0.9999865504089197	WITHOUT_CLASSIFICATION	1.344959108018969E-5	IMPLEMENTATION
create all the new entries	WITHOUT_CLASSIFICATION	0.9999755270561961	WITHOUT_CLASSIFICATION	2.4472943803939535E-5	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9998996398522113	WITHOUT_CLASSIFICATION	1.0036014778858634E-4	IMPLEMENTATION
&& !indexisformula	WITHOUT_CLASSIFICATION	0.9998996398522113	WITHOUT_CLASSIFICATION	1.0036014778858634E-4	IMPLEMENTATION
delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999125352707243	WITHOUT_CLASSIFICATION	8.746472927565567E-5	IMPLEMENTATION
insert all the new entries	WITHOUT_CLASSIFICATION	0.9999737195659703	WITHOUT_CLASSIFICATION	2.628043402977604E-5	IMPLEMENTATION
==elementtype ??	WITHOUT_CLASSIFICATION	0.9992213057500958	WITHOUT_CLASSIFICATION	7.786942499042693E-4	IMPLEMENTATION
update all the modified entries	WITHOUT_CLASSIFICATION	0.9999465919505843	WITHOUT_CLASSIFICATION	5.34080494156619E-5	IMPLEMENTATION
identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9996863839390936	WITHOUT_CLASSIFICATION	3.1361606090637203E-4	IMPLEMENTATION
update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999322299875075	WITHOUT_CLASSIFICATION	6.77700124925491E-5	IMPLEMENTATION
will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999364539984152	WITHOUT_CLASSIFICATION	6.354600158472256E-5	IMPLEMENTATION
now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999997698760129	WITHOUT_CLASSIFICATION	2.301239870931527E-7	IMPLEMENTATION
buf.append( selectfragment( lhsalias "" ) )ignore suffix for collection columns!	WITHOUT_CLASSIFICATION	0.9999561150003285	WITHOUT_CLASSIFICATION	4.388499967134689E-5	IMPLEMENTATION
use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999929478009647	WITHOUT_CLASSIFICATION	7.052199035305409E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999907037454858	WITHOUT_CLASSIFICATION	9.296254514132795E-6	IMPLEMENTATION
private final string roottablename	WITHOUT_CLASSIFICATION	0.999983844986898	WITHOUT_CLASSIFICATION	1.615501310199976E-5	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9997981629353212	WITHOUT_CLASSIFICATION	2.0183706467884053E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999930892995278	WITHOUT_CLASSIFICATION	6.910700472268065E-6	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999907037454858	WITHOUT_CLASSIFICATION	9.296254514132795E-6	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999878894260008	WITHOUT_CLASSIFICATION	1.2110573999210597E-5	IMPLEMENTATION
this could also just be true all the time	WITHOUT_CLASSIFICATION	0.9999770173489563	WITHOUT_CLASSIFICATION	2.298265104370192E-5	IMPLEMENTATION
chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999673356070625	WITHOUT_CLASSIFICATION	3.266439293743017E-5	IMPLEMENTATION
todo check this.	WITHOUT_CLASSIFICATION	0.649890677263048	IMPLEMENTATION	0.35010932273695183	WITHOUT_CLASSIFICATION
initialization	WITHOUT_CLASSIFICATION	0.9997981629353212	WITHOUT_CLASSIFICATION	2.0183706467884053E-4	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9997981110175227	WITHOUT_CLASSIFICATION	2.018889824773383E-4	IMPLEMENTATION
the closure of all properties in the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999916378942653	WITHOUT_CLASSIFICATION	8.362105734753046E-6	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.999996059624284	WITHOUT_CLASSIFICATION	3.94037571609491E-6	IMPLEMENTATION
subclass discrimination works by assigning particular values to certain combinations of null primary key values in the outer join using an sql case	WITHOUT_CLASSIFICATION	0.9999999988931789	WITHOUT_CLASSIFICATION	1.1068210798580117E-9	IMPLEMENTATION
multitables	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999930892995278	WITHOUT_CLASSIFICATION	6.910700472268065E-6	IMPLEMENTATION
subclass closure properties	WITHOUT_CLASSIFICATION	0.9999269210888441	WITHOUT_CLASSIFICATION	7.307891115598608E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999795805718199	WITHOUT_CLASSIFICATION	2.041942818012371E-5	IMPLEMENTATION
( (column) model.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999573961060887	WITHOUT_CLASSIFICATION	4.260389391137655E-5	IMPLEMENTATION
( (column) sc.gettable().getprimarykey().getcolumniterator().next() ).getname()	WITHOUT_CLASSIFICATION	0.9999573961060887	WITHOUT_CLASSIFICATION	4.260389391137655E-5	IMPLEMENTATION
don't need subclass tables because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999745563955376	WITHOUT_CLASSIFICATION	2.5443604462423132E-5	IMPLEMENTATION
special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9779349120390294	WITHOUT_CLASSIFICATION	0.022065087960970696	IMPLEMENTATION
the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999907037454858	WITHOUT_CLASSIFICATION	9.296254514132795E-6	IMPLEMENTATION
properties of this class including inherited properties	WITHOUT_CLASSIFICATION	0.9997981110175227	WITHOUT_CLASSIFICATION	2.018889824773383E-4	IMPLEMENTATION
the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.999996059624284	WITHOUT_CLASSIFICATION	3.94037571609491E-6	IMPLEMENTATION
get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999758984358291	WITHOUT_CLASSIFICATION	2.4101564170916654E-5	IMPLEMENTATION
now look up the object we are really interested in! (this lets us correctly handle proxies and multi-row or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999714652286619	WITHOUT_CLASSIFICATION	2.853477133817101E-5	IMPLEMENTATION
discriminator column	WITHOUT_CLASSIFICATION	0.999906319338766	WITHOUT_CLASSIFICATION	9.36806612339966E-5	IMPLEMENTATION
initialization	WITHOUT_CLASSIFICATION	0.9997981629353212	WITHOUT_CLASSIFICATION	2.0183706467884053E-4	IMPLEMENTATION
private final map propertytablenumbersbyname = new hashmap()	WITHOUT_CLASSIFICATION	0.9998436648430397	WITHOUT_CLASSIFICATION	1.5633515696033483E-4	IMPLEMENTATION
class + table	WITHOUT_CLASSIFICATION	0.999966785718988	WITHOUT_CLASSIFICATION	3.321428101201675E-5	IMPLEMENTATION
discriminator	WITHOUT_CLASSIFICATION	0.9998987043564639	WITHOUT_CLASSIFICATION	1.0129564353608998E-4	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999504996870707	WITHOUT_CLASSIFICATION	4.950031292934469E-5	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999795805718199	WITHOUT_CLASSIFICATION	2.041942818012371E-5	IMPLEMENTATION
execute the sql	WITHOUT_CLASSIFICATION	0.9999878894260008	WITHOUT_CLASSIFICATION	1.2110573999210597E-5	IMPLEMENTATION
joins	WITHOUT_CLASSIFICATION	0.999972469834184	WITHOUT_CLASSIFICATION	2.7530165815924355E-5	IMPLEMENTATION
propertytablenumbersbyname.put( prop.getname() join )	WITHOUT_CLASSIFICATION	0.9998810956324196	WITHOUT_CLASSIFICATION	1.1890436758044212E-4	IMPLEMENTATION
access cached sql	WITHOUT_CLASSIFICATION	0.9999482624564443	WITHOUT_CLASSIFICATION	5.1737543555810635E-5	IMPLEMENTATION
figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9975636937440667	WITHOUT_CLASSIFICATION	0.002436306255933271	IMPLEMENTATION
figure out which columns are needed	WITHOUT_CLASSIFICATION	0.6174408274928418	WITHOUT_CLASSIFICATION	0.3825591725071582	IMPLEMENTATION
figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.7546671425834324	IMPLEMENTATION	0.24533285741656755	WITHOUT_CLASSIFICATION
render the sql	WITHOUT_CLASSIFICATION	0.9999768366329139	WITHOUT_CLASSIFICATION	2.3163367086196785E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999215531567319	WITHOUT_CLASSIFICATION	7.844684326808176E-5	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999906538562247	WITHOUT_CLASSIFICATION	9.346143775324174E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
the optional sql string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999995629456176	WITHOUT_CLASSIFICATION	4.370543823420392E-7	IMPLEMENTATION
information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999897890982186	WITHOUT_CLASSIFICATION	1.0210901781531766E-5	IMPLEMENTATION
information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999995077172656	WITHOUT_CLASSIFICATION	4.922827343090757E-7	IMPLEMENTATION
information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999997261868098	WITHOUT_CLASSIFICATION	2.7381319030271287E-7	IMPLEMENTATION
dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999227830086423	WITHOUT_CLASSIFICATION	7.721699135772231E-5	IMPLEMENTATION
sql strings	WITHOUT_CLASSIFICATION	0.9999482219216788	WITHOUT_CLASSIFICATION	5.1778078321242305E-5	IMPLEMENTATION
for objects that came in via update()	WITHOUT_CLASSIFICATION	0.999997690574573	WITHOUT_CLASSIFICATION	2.3094254270758563E-6	IMPLEMENTATION
properties	WITHOUT_CLASSIFICATION	0.9999504996870707	WITHOUT_CLASSIFICATION	4.950031292934469E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
identifier	WITHOUT_CLASSIFICATION	0.9999638988330363	WITHOUT_CLASSIFICATION	3.6101166963771183E-5	IMPLEMENTATION
version	WITHOUT_CLASSIFICATION	0.9999433726330089	WITHOUT_CLASSIFICATION	5.6627366991015985E-5	IMPLEMENTATION
where string	WITHOUT_CLASSIFICATION	0.9999641042310944	WITHOUT_CLASSIFICATION	3.5895768905645874E-5	IMPLEMENTATION
subclass property closure	WITHOUT_CLASSIFICATION	0.9999476224946023	WITHOUT_CLASSIFICATION	5.237750539759558E-5	IMPLEMENTATION
before add -)	WITHOUT_CLASSIFICATION	0.9999045445927369	WITHOUT_CLASSIFICATION	9.545540726313225E-5	IMPLEMENTATION
handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999348513020305	WITHOUT_CLASSIFICATION	6.514869796944535E-5	IMPLEMENTATION
only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999601123509246	WITHOUT_CLASSIFICATION	3.98876490753463E-5	IMPLEMENTATION
note early exit here	WITHOUT_CLASSIFICATION	0.9999538979395151	WITHOUT_CLASSIFICATION	4.610206048497949E-5	IMPLEMENTATION
object have been loaded with setreadonly(true) hhh-2236	WITHOUT_CLASSIFICATION	0.9999764066256303	WITHOUT_CLASSIFICATION	2.3593374369698655E-5	IMPLEMENTATION
note this assumes something about how propertyselectfragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9897279659028919	WITHOUT_CLASSIFICATION	0.010272034097108132	IMPLEMENTATION
strip leading " "	WITHOUT_CLASSIFICATION	0.9998678399234137	WITHOUT_CLASSIFICATION	1.3216007658632488E-4	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999995168442551	WITHOUT_CLASSIFICATION	4.831557447455413E-7	IMPLEMENTATION
otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9979849462465082	WITHOUT_CLASSIFICATION	0.0020150537534916815	IMPLEMENTATION
null owner ok??	WITHOUT_CLASSIFICATION	0.9999540652663366	WITHOUT_CLASSIFICATION	4.5934733663446846E-5	IMPLEMENTATION
null sql means that the only lazy properties are shared pk one-to-one associations which are handled differently in the type#nullsafeget code	WITHOUT_CLASSIFICATION	0.9999986668732936	WITHOUT_CLASSIFICATION	1.3331267063449593E-6	IMPLEMENTATION
create a new from node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999954024093807	WITHOUT_CLASSIFICATION	4.597590619288345E-6	IMPLEMENTATION
the difficulty here is exactly what do we update in order to force the version to be incremented in the db	WITHOUT_CLASSIFICATION	0.9996546195730062	WITHOUT_CLASSIFICATION	3.4538042699381303E-4	IMPLEMENTATION
performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9997027216229769	WITHOUT_CLASSIFICATION	2.972783770230895E-4	IMPLEMENTATION
properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9993920004180967	WITHOUT_CLASSIFICATION	6.079995819033396E-4	IMPLEMENTATION
enable for hhh-440 which we don't like	WITHOUT_CLASSIFICATION	0.9990333995623968	WITHOUT_CLASSIFICATION	9.666004376032234E-4	IMPLEMENTATION
aliases	WITHOUT_CLASSIFICATION	0.9999726182366855	WITHOUT_CLASSIFICATION	2.73817633145631E-5	IMPLEMENTATION
aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.999950631789696	WITHOUT_CLASSIFICATION	4.9368210303858243E-5	IMPLEMENTATION
aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999890516530143	WITHOUT_CLASSIFICATION	1.0948346985681899E-5	IMPLEMENTATION
fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999953564251843	WITHOUT_CLASSIFICATION	4.643574815599092E-6	IMPLEMENTATION
embedded composite ids ( alias.idname1 alias.idname2 )	WITHOUT_CLASSIFICATION	0.9998252908347407	WITHOUT_CLASSIFICATION	1.7470916525931868E-4	IMPLEMENTATION
todo skip formulas?	WITHOUT_CLASSIFICATION	0.5804769765625085	IMPLEMENTATION	0.4195230234374915	WITHOUT_CLASSIFICATION
don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9997754839096601	WITHOUT_CLASSIFICATION	2.2451609033992385E-4	IMPLEMENTATION
do two passes for collection property-ref!	WITHOUT_CLASSIFICATION	0.9994204804945493	WITHOUT_CLASSIFICATION	5.795195054505998E-4	IMPLEMENTATION
select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999835699807804	WITHOUT_CLASSIFICATION	1.643001921957837E-5	IMPLEMENTATION
todo eventually rowidname[j]	WITHOUT_CLASSIFICATION	0.6824330667389426	WITHOUT_CLASSIFICATION	0.3175669332610574	IMPLEMENTATION
this is a property of the table which we are updating	WITHOUT_CLASSIFICATION	0.9999109742048164	WITHOUT_CLASSIFICATION	8.902579518347284E-5	IMPLEMENTATION
special shortcut for id properties skip the join! this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9996389763919027	WITHOUT_CLASSIFICATION	3.6102360809733624E-4	IMPLEMENTATION
we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.999980984340063	WITHOUT_CLASSIFICATION	1.9015659937060616E-5	IMPLEMENTATION
nothing to do even if the operand is a parameter no way we could infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999997955851733	WITHOUT_CLASSIFICATION	2.0441482669675765E-7	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9998562183995318	WITHOUT_CLASSIFICATION	1.4378160046821047E-4	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9997486854108537	WITHOUT_CLASSIFICATION	2.513145891462625E-4	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9999413621616626	WITHOUT_CLASSIFICATION	5.863783833729607E-5	IMPLEMENTATION
more specifically "? [op] datetime" 1) if the operator is minus the param needs to be of some datetime type 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.9996748507544088	WITHOUT_CLASSIFICATION	3.251492455912383E-4	IMPLEMENTATION
add normal properties	WITHOUT_CLASSIFICATION	0.9997486854108537	WITHOUT_CLASSIFICATION	2.513145891462625E-4	IMPLEMENTATION
this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9998562183995318	WITHOUT_CLASSIFICATION	1.4378160046821047E-4	IMPLEMENTATION
add the discriminator	WITHOUT_CLASSIFICATION	0.9999413621616626	WITHOUT_CLASSIFICATION	5.863783833729607E-5	IMPLEMENTATION
add the primary key	WITHOUT_CLASSIFICATION	0.999949602244632	WITHOUT_CLASSIFICATION	5.039775536792499E-5	IMPLEMENTATION
delegate already handles pk columns	WITHOUT_CLASSIFICATION	0.9999947213156176	WITHOUT_CLASSIFICATION	5.278684382447722E-6	IMPLEMENTATION
we can't batch joined inserts especially not if it is an identity insert nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9985891300511556	WITHOUT_CLASSIFICATION	0.0014108699488443878	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.999984189908914	WITHOUT_CLASSIFICATION	1.5810091085983976E-5	IMPLEMENTATION
write the values of fields onto the prepared statement - we must use the state at the time the insert was issued (cos of foreign key constraints). not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999967787855862	WITHOUT_CLASSIFICATION	3.2212144137710704E-6	IMPLEMENTATION
todo shouldnt inserts be expectations.none?	WITHOUT_CLASSIFICATION	0.7578078396244654	WITHOUT_CLASSIFICATION	0.2421921603755345	IMPLEMENTATION
don't bother trying to update we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9982051275093078	WITHOUT_CLASSIFICATION	0.0017948724906922248	IMPLEMENTATION
if all fields are null we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999923911867343	WITHOUT_CLASSIFICATION	7.608813265687244E-6	IMPLEMENTATION
there is probably a row there so try to update if no rows were updated we will find out	WITHOUT_CLASSIFICATION	0.9999996532040748	WITHOUT_CLASSIFICATION	3.4679592519399685E-7	IMPLEMENTATION
note updates to joined tables can't be batched	WITHOUT_CLASSIFICATION	0.9998753539376132	WITHOUT_CLASSIFICATION	1.2464606238693393E-4	IMPLEMENTATION
starting index	WITHOUT_CLASSIFICATION	0.9993345440423902	WITHOUT_CLASSIFICATION	6.654559576098646E-4	IMPLEMENTATION
now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999928401386622	WITHOUT_CLASSIFICATION	7.159861337717528E-6	IMPLEMENTATION
write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999391405208575	WITHOUT_CLASSIFICATION	6.085947914249917E-5	IMPLEMENTATION
render the sql query	WITHOUT_CLASSIFICATION	0.999984189908914	WITHOUT_CLASSIFICATION	1.5810091085983976E-5	IMPLEMENTATION
do the key. the key is immutable so we can use the _current_ object state - not necessarily the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999985926418422	WITHOUT_CLASSIFICATION	1.4073581577633173E-6	IMPLEMENTATION
we should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999777171379415	WITHOUT_CLASSIFICATION	2.2282862058536488E-5	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9992295061240923	WITHOUT_CLASSIFICATION	7.704938759076692E-4	IMPLEMENTATION
note dirtyfields==null means we had no snapshot and we couldn't get one using select-before-update oldfields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyfields)	WITHOUT_CLASSIFICATION	0.9999946593484063	WITHOUT_CLASSIFICATION	5.340651593730181E-6	IMPLEMENTATION
more specifically "datetime [op] ?" 1) if the operator is minus we really cannot determine the expected type as either another datetime or numeric would be valid 2) if the operator is plus the param needs to be of some numeric type	WITHOUT_CLASSIFICATION	0.999989510919852	WITHOUT_CLASSIFICATION	1.0489080147972859E-5	IMPLEMENTATION
for the case of dynamic-update="true" we need to generate the update sql	WITHOUT_CLASSIFICATION	0.9999971219098301	WITHOUT_CLASSIFICATION	2.878090169741041E-6	IMPLEMENTATION
don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.995183873421663	WITHOUT_CLASSIFICATION	0.0048161265783369924	IMPLEMENTATION
for the case of dynamic-update="false" or no snapshot we use the static sql	WITHOUT_CLASSIFICATION	0.9999978775112089	WITHOUT_CLASSIFICATION	2.12248879106201E-6	IMPLEMENTATION
if not "get" then try "is"	WITHOUT_CLASSIFICATION	0.9997967163365575	WITHOUT_CLASSIFICATION	2.0328366344234925E-4	IMPLEMENTATION
now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999132370674175	WITHOUT_CLASSIFICATION	8.67629325824732E-5	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999904359530234	WITHOUT_CLASSIFICATION	9.5640469767266E-6	IMPLEMENTATION
for the case of dynamic-insert="true" we need to generate the insert sql	WITHOUT_CLASSIFICATION	0.9999904359530234	WITHOUT_CLASSIFICATION	9.5640469767266E-6	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999957158928846	WITHOUT_CLASSIFICATION	4.284107115399658E-6	IMPLEMENTATION
for the case of dynamic-insert="false" use the static sql	WITHOUT_CLASSIFICATION	0.9999957158928846	WITHOUT_CLASSIFICATION	4.284107115399658E-6	IMPLEMENTATION
not supported	WITHOUT_CLASSIFICATION	0.9991327556917489	WITHOUT_CLASSIFICATION	8.672443082511095E-4	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9992295061240923	WITHOUT_CLASSIFICATION	7.704938759076692E-4	IMPLEMENTATION
we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9997050840547786	WITHOUT_CLASSIFICATION	2.949159452213153E-4	IMPLEMENTATION
otherwise utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9998087301833025	WITHOUT_CLASSIFICATION	1.9126981669754248E-4	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999571406562491	WITHOUT_CLASSIFICATION	4.28593437508711E-5	IMPLEMENTATION
just a performance opt!	WITHOUT_CLASSIFICATION	0.9999571406562491	WITHOUT_CLASSIFICATION	4.28593437508711E-5	IMPLEMENTATION
all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999245590681439	WITHOUT_CLASSIFICATION	7.544093185604538E-5	IMPLEMENTATION
notice that we skip the first table it is the driving table!	WITHOUT_CLASSIFICATION	0.9997155246412823	WITHOUT_CLASSIFICATION	2.844753587176589E-4	IMPLEMENTATION
we can inner join to superclass tables (the row must be there) we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9976676120499144	WITHOUT_CLASSIFICATION	0.002332387950085627	IMPLEMENTATION
skip the driving table	WITHOUT_CLASSIFICATION	0.9999404089569353	WITHOUT_CLASSIFICATION	5.959104306470872E-5	IMPLEMENTATION
get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999918569332751	WITHOUT_CLASSIFICATION	8.143066724989662E-6	IMPLEMENTATION
here we work under the following assumptions ------------ valid cases -------------------------------------- 1) datetime + {something other than datetime} always results in a datetime ( db will catch invalid conversions ) 2) datetime - datetime always results in a double 3) datetime - {something other than datetime} always results in a datetime ( db will catch invalid conversions ) ------------ invalid cases ------------------------------------ 4) datetime + datetime 5) {something other than datetime} - datetime 6) datetime {any type} 7) datetime / {any type} 8) {any type} / datetime doing so allows us to properly handle parameters as either the left or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999999552747271	WITHOUT_CLASSIFICATION	4.472527301438569E-8	IMPLEMENTATION
render the where and from parts	WITHOUT_CLASSIFICATION	0.9999658050208844	WITHOUT_CLASSIFICATION	3.4194979115544106E-5	IMPLEMENTATION
we could regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999399388295255	WITHOUT_CLASSIFICATION	6.006117047454168E-5	IMPLEMENTATION
now render the joins	WITHOUT_CLASSIFICATION	0.9999191769013933	WITHOUT_CLASSIFICATION	8.082309860664136E-5	IMPLEMENTATION
this will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999864026849231	WITHOUT_CLASSIFICATION	1.3597315077004533E-5	IMPLEMENTATION
now render the select clause	WITHOUT_CLASSIFICATION	0.9999534391801697	WITHOUT_CLASSIFICATION	4.656081983046462E-5	IMPLEMENTATION
now tie it all together	WITHOUT_CLASSIFICATION	0.999846713310917	WITHOUT_CLASSIFICATION	1.5328668908302402E-4	IMPLEMENTATION
insert/update/delete sql	WITHOUT_CLASSIFICATION	0.9999882796609637	WITHOUT_CLASSIFICATION	1.1720339036343265E-5	IMPLEMENTATION
select sql	WITHOUT_CLASSIFICATION	0.9999949185953022	WITHOUT_CLASSIFICATION	5.081404697840213E-6	IMPLEMENTATION
no need to check laziness dirty checking handles that	WITHOUT_CLASSIFICATION	0.9860574343182718	WITHOUT_CLASSIFICATION	0.013942565681728242	IMPLEMENTATION
fully resolve the map reference create implicit joins.	WITHOUT_CLASSIFICATION	0.9999786764702692	WITHOUT_CLASSIFICATION	2.132352973088357E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999181776608117	WITHOUT_CLASSIFICATION	8.18223391882423E-5	IMPLEMENTATION
the basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9994301087508223	WITHOUT_CLASSIFICATION	5.698912491777593E-4	IMPLEMENTATION
for dialects which are known to not support ansi-sql row-value-constructor syntax we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9741805031972398	WITHOUT_CLASSIFICATION	0.025819496802760158	IMPLEMENTATION
due to the complexity in initializing the selectclause do not generate one here. if it is not found simply return null also do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999995943902683	WITHOUT_CLASSIFICATION	4.056097315838348E-7	IMPLEMENTATION
check the version unsaved-value if appropriate	WITHOUT_CLASSIFICATION	0.999903419935197	WITHOUT_CLASSIFICATION	9.658006480298543E-5	IMPLEMENTATION
let this take precedence if defined since it works for assigned identifiers	WITHOUT_CLASSIFICATION	0.9999995386556344	WITHOUT_CLASSIFICATION	4.6134436552757016E-7	IMPLEMENTATION
check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9994008604415106	WITHOUT_CLASSIFICATION	5.991395584894146E-4	IMPLEMENTATION
check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999991626932979	WITHOUT_CLASSIFICATION	8.373067021730285E-7	IMPLEMENTATION
/	WITHOUT_CLASSIFICATION	0.9999890397032709	WITHOUT_CLASSIFICATION	1.0960296728991044E-5	IMPLEMENTATION
for property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999665426739631	WITHOUT_CLASSIFICATION	3.3457326036937616E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
if there is no resulting row return null	WITHOUT_CLASSIFICATION	0.9999995168442551	WITHOUT_CLASSIFICATION	4.831557447455413E-7	IMPLEMENTATION
force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9998485946502024	WITHOUT_CLASSIFICATION	1.5140534979767587E-4	IMPLEMENTATION
if this from element is a collection and the path is a collection property (maxindex etc.) then generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999993791879993	WITHOUT_CLASSIFICATION	6.208120005888556E-7	IMPLEMENTATION
entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999916302265807	WITHOUT_CLASSIFICATION	8.369773419312354E-5	IMPLEMENTATION
collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999890545237636	WITHOUT_CLASSIFICATION	1.0945476236405218E-4	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.9999928248154025	WITHOUT_CLASSIFICATION	7.175184597573383E-6	IMPLEMENTATION
cannot occur	WITHOUT_CLASSIFICATION	0.9999928248154025	WITHOUT_CLASSIFICATION	7.175184597573383E-6	IMPLEMENTATION
only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999920588761313	WITHOUT_CLASSIFICATION	7.941123868691856E-6	IMPLEMENTATION
try "get"	WITHOUT_CLASSIFICATION	0.9999648272566931	WITHOUT_CLASSIFICATION	3.5172743306898726E-5	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.999992421672972	WITHOUT_CLASSIFICATION	7.578327027965915E-6	IMPLEMENTATION
do nothing	WITHOUT_CLASSIFICATION	0.999992421672972	WITHOUT_CLASSIFICATION	7.578327027965915E-6	IMPLEMENTATION
should be safe to only ever expect entitypersister references here	WITHOUT_CLASSIFICATION	0.9993269782092634	WITHOUT_CLASSIFICATION	6.730217907365061E-4	IMPLEMENTATION
this page intentionally left blank )	WITHOUT_CLASSIFICATION	0.9998108583136504	WITHOUT_CLASSIFICATION	1.891416863495225E-4	IMPLEMENTATION
do not do anything	WITHOUT_CLASSIFICATION	0.9641983257797786	WITHOUT_CLASSIFICATION	0.03580167422022144	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999519016867634	WITHOUT_CLASSIFICATION	4.809831323659635E-5	IMPLEMENTATION
cant instantiate	WITHOUT_CLASSIFICATION	0.9999022552528672	WITHOUT_CLASSIFICATION	9.774474713279876E-5	IMPLEMENTATION
if it is a property of an embedded component invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999990778843585	WITHOUT_CLASSIFICATION	9.22115641445389E-7	IMPLEMENTATION
otherwise	WITHOUT_CLASSIFICATION	0.99972584190977	WITHOUT_CLASSIFICATION	2.741580902300247E-4	IMPLEMENTATION
skip finalize methods	WITHOUT_CLASSIFICATION	0.9999632369340716	WITHOUT_CLASSIFICATION	3.6763065928373445E-5	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9998631167068089	WITHOUT_CLASSIFICATION	1.368832931910881E-4	IMPLEMENTATION
note interfaces is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9998631167068089	WITHOUT_CLASSIFICATION	1.368832931910881E-4	IMPLEMENTATION
hhh-2481 make sure the callback gets cleared otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999669691973652	WITHOUT_CLASSIFICATION	3.30308026348116E-5	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999771225640928	WITHOUT_CLASSIFICATION	2.2877435907146873E-5	IMPLEMENTATION
while constructor is running	WITHOUT_CLASSIFICATION	0.9999771225640928	WITHOUT_CLASSIFICATION	2.2877435907146873E-5	IMPLEMENTATION
note interface is assumed to already contain hibernateproxy.class	WITHOUT_CLASSIFICATION	0.9998945129425723	WITHOUT_CLASSIFICATION	1.054870574277784E-4	IMPLEMENTATION
interfaces arguments	WITHOUT_CLASSIFICATION	0.9999213126389449	WITHOUT_CLASSIFICATION	7.868736105510621E-5	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
get the caller	WITHOUT_CLASSIFICATION	0.9999849990810468	WITHOUT_CLASSIFICATION	1.5000918953271314E-5	IMPLEMENTATION
get the caller principals	WITHOUT_CLASSIFICATION	0.999993611650992	WITHOUT_CLASSIFICATION	6.388349008019804E-6	IMPLEMENTATION
private static final alias default_alias = new alias(10 null)	WITHOUT_CLASSIFICATION	0.9999424497240661	WITHOUT_CLASSIFICATION	5.7550275933787575E-5	IMPLEMENTATION
needed to bump this up to dotnode because that is the only thing which currently knows about the property-ref path in the correct format it is either this or recurse over the dotnodes constructing the property path just like dotnode does internally	WITHOUT_CLASSIFICATION	0.9998942078311075	WITHOUT_CLASSIFICATION	1.0579216889250823E-4	IMPLEMENTATION
if the identifier is quoted remove the quotes	WITHOUT_CLASSIFICATION	0.9999977160079381	WITHOUT_CLASSIFICATION	2.283992061921875E-6	IMPLEMENTATION
truncate the identifier to the max alias length less the suffix length	WITHOUT_CLASSIFICATION	0.9999509319236625	WITHOUT_CLASSIFICATION	4.906807633752948E-5	IMPLEMENTATION
full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9986187829350157	WITHOUT_CLASSIFICATION	0.0013812170649842722	IMPLEMENTATION
null is not considered the same type as integer. $non-nls-1 $non-nls-1	WITHOUT_CLASSIFICATION	0.9993073627378699	WITHOUT_CLASSIFICATION	6.926372621301683E-4	IMPLEMENTATION
the outerjoinsafterwhere needs to come before where clause to properly handle dynamic filters	WITHOUT_CLASSIFICATION	0.9954308756508874	WITHOUT_CLASSIFICATION	0.004569124349112671	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
$non-nls-1	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999906789415262	WITHOUT_CLASSIFICATION	9.321058473971598E-6	IMPLEMENTATION
if the condition is not already there	WITHOUT_CLASSIFICATION	0.9999032079641342	WITHOUT_CLASSIFICATION	9.679203586581106E-5	IMPLEMENTATION
dontspace.add("'")	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
for mysql	WITHOUT_CLASSIFICATION	0.9999945901976306	WITHOUT_CLASSIFICATION	5.409802369489373E-6	IMPLEMENTATION
hashmap columnsunique = new hashmap()	WITHOUT_CLASSIFICATION	0.999874097946933	WITHOUT_CLASSIFICATION	1.2590205306690577E-4	IMPLEMENTATION
null caused some problems	WITHOUT_CLASSIFICATION	0.999916210318499	WITHOUT_CLASSIFICATION	8.378968150097282E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999549597436747	WITHOUT_CLASSIFICATION	4.5040256325463976E-5	IMPLEMENTATION
not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999732945941323	WITHOUT_CLASSIFICATION	2.6705405867707162E-5	IMPLEMENTATION
even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999022058517675	WITHOUT_CLASSIFICATION	9.779414823249467E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999549597436747	WITHOUT_CLASSIFICATION	4.5040256325463976E-5	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999549597436747	WITHOUT_CLASSIFICATION	4.5040256325463976E-5	IMPLEMENTATION
if true then execute db updates otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999944088938147	WITHOUT_CLASSIFICATION	5.591106185148422E-6	IMPLEMENTATION
we only release the connection	WITHOUT_CLASSIFICATION	0.9975346789374414	WITHOUT_CLASSIFICATION	0.0024653210625586665	IMPLEMENTATION
deprecated option	WITHOUT_CLASSIFICATION	0.9999054516480516	WITHOUT_CLASSIFICATION	9.454835194848434E-5	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999984185917773	WITHOUT_CLASSIFICATION	1.5814082226429067E-6	IMPLEMENTATION
actually this last test is probably unnecessary since beforecompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999999773857887	WITHOUT_CLASSIFICATION	2.261421121716098E-8	IMPLEMENTATION
this one only really needed for badly-behaved applications! (if the transactionmanager has a sychronization registered its a noop) (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.97785891447463	IMPLEMENTATION	0.022141085525369985	WITHOUT_CLASSIFICATION
create an dotnode ast for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999950228625522	WITHOUT_CLASSIFICATION	4.9771374477962476E-6	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999984185917773	WITHOUT_CLASSIFICATION	1.5814082226429067E-6	IMPLEMENTATION
if we could not register a synchronization do the before/after completion callbacks ourself (but we need to let jdbccontext know that this is what we are going to do so it doesn't keep trying to register synchronizations)	WITHOUT_CLASSIFICATION	0.8772369429990908	IMPLEMENTATION	0.12276305700090921	WITHOUT_CLASSIFICATION
swallow it and continue to roll back jta transaction	WITHOUT_CLASSIFICATION	0.9994293380412462	WITHOUT_CLASSIFICATION	5.706619587538228E-4	IMPLEMENTATION
so the transaction is already rolled back by jta spec	WITHOUT_CLASSIFICATION	0.9999929130822703	WITHOUT_CLASSIFICATION	7.086917729709321E-6	IMPLEMENTATION
this method is a noop if there is a synchronization!	WITHOUT_CLASSIFICATION	0.9999946867892405	WITHOUT_CLASSIFICATION	5.313210759563184E-6	IMPLEMENTATION
two conditions where we need to transform this to a theta-join syntax 1) 'elem' is the "root from-element" in correlated subqueries 2) the dotnode.usethetastyleimplicitjoins has been set to true and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999833975778687	WITHOUT_CLASSIFICATION	1.660242213127626E-5	IMPLEMENTATION
websphere however is not a sane jee/jta container	WITHOUT_CLASSIFICATION	0.9988508344325829	WITHOUT_CLASSIFICATION	0.0011491655674171354	IMPLEMENTATION
for sane jee/jta containers the transaction itself functions as its identifier	WITHOUT_CLASSIFICATION	0.9999931487029394	WITHOUT_CLASSIFICATION	6.851297060608533E-6	IMPLEMENTATION
swallow the transaction was finished	WITHOUT_CLASSIFICATION	0.9999967300072689	WITHOUT_CLASSIFICATION	3.269992731068096E-6	IMPLEMENTATION
all aliastoentitymapresulttransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999945718668736	WITHOUT_CLASSIFICATION	5.428133126400153E-5	IMPLEMENTATION
create the join element under the from element.	WITHOUT_CLASSIFICATION	0.999993691776818	WITHOUT_CLASSIFICATION	6.308223181943903E-6	IMPLEMENTATION
all distinctrootentityresulttransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999945718668736	WITHOUT_CLASSIFICATION	5.428133126400153E-5	IMPLEMENTATION
map of entitymode -> tuplizer	WITHOUT_CLASSIFICATION	0.9999946688258661	WITHOUT_CLASSIFICATION	5.33117413383819E-6	IMPLEMENTATION
this is a virtual id property	WITHOUT_CLASSIFICATION	0.9993940028285289	WITHOUT_CLASSIFICATION	6.059971714710299E-4	IMPLEMENTATION
this one needed only for guessentitymode()	WITHOUT_CLASSIFICATION	0.5728773149170884	WITHOUT_CLASSIFICATION	0.42712268508291173	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.999989061282505	WITHOUT_CLASSIFICATION	1.0938717495150149E-5	IMPLEMENTATION
todo move this to sf per hhh-3517 also see hhh-1907 and componentmetamodel	WITHOUT_CLASSIFICATION	0.6057692293580731	WITHOUT_CLASSIFICATION	0.394230770641927	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999963671375184	WITHOUT_CLASSIFICATION	3.632862481607198E-6	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999800747020906	WITHOUT_CLASSIFICATION	1.992529790934629E-5	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999942196509103	WITHOUT_CLASSIFICATION	5.780349089724095E-6	IMPLEMENTATION
build the dynamic-map tuplizer	WITHOUT_CLASSIFICATION	0.9999800747020906	WITHOUT_CLASSIFICATION	1.992529790934629E-5	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9998095388597754	WITHOUT_CLASSIFICATION	1.9046114022465034E-4	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999337539911239	WITHOUT_CLASSIFICATION	6.624600887599536E-5	IMPLEMENTATION
private final sessionfactoryimplementor sessionfactory	WITHOUT_CLASSIFICATION	0.9999245193760202	WITHOUT_CLASSIFICATION	7.548062397968281E-5	IMPLEMENTATION
cached for efficiency	WITHOUT_CLASSIFICATION	0.9999893379927984	WITHOUT_CLASSIFICATION	1.0662007201657123E-5	IMPLEMENTATION
public componentmetamodel(component component sessionfactoryimplementor sessionfactory) {	WITHOUT_CLASSIFICATION	0.9999886283203033	WITHOUT_CLASSIFICATION	1.1371679696626903E-5	IMPLEMENTATION
this.sessionfactory = sessionfactory	WITHOUT_CLASSIFICATION	0.9998307994426365	WITHOUT_CLASSIFICATION	1.6920055736352027E-4	IMPLEMENTATION
it was not embedded so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999922077144207	WITHOUT_CLASSIFICATION	7.792285579418077E-6	IMPLEMENTATION
then the pojo tuplizer using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999963671375184	WITHOUT_CLASSIFICATION	3.632862481607198E-6	IMPLEMENTATION
then dom4j tuplizer if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999942196509103	WITHOUT_CLASSIFICATION	5.780349089724095E-6	IMPLEMENTATION
put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9998095388597754	WITHOUT_CLASSIFICATION	1.9046114022465034E-4	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9999130206825194	WITHOUT_CLASSIFICATION	8.697931748056904E-5	IMPLEMENTATION
return currentid	WITHOUT_CLASSIFICATION	0.9999661957103378	WITHOUT_CLASSIFICATION	3.380428966209784E-5	IMPLEMENTATION
reset the id	WITHOUT_CLASSIFICATION	0.9988918198727093	WITHOUT_CLASSIFICATION	0.001108180127290757	IMPLEMENTATION
origin.adddestination( destination ) this was the cause of hhh-242 origin.settype( from_fragment ) set the parent node type so that the ast is properly formed. the destination node will have all the from text. the parent node is a collection join too (voodoo - see joinprocessor)	WITHOUT_CLASSIFICATION	0.9999922475610621	WITHOUT_CLASSIFICATION	7.752438937909499E-6	IMPLEMENTATION
reset the version	WITHOUT_CLASSIFICATION	0.9995179616587473	WITHOUT_CLASSIFICATION	4.820383412525987E-4	IMPLEMENTATION
the default is to simply not lazy fetch properties for now	WITHOUT_CLASSIFICATION	0.9998710452583843	WITHOUT_CLASSIFICATION	1.289547416156272E-4	IMPLEMENTATION
add the second join the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999628851690952	WITHOUT_CLASSIFICATION	3.711483090477499E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999181776608117	WITHOUT_CLASSIFICATION	8.18223391882423E-5	IMPLEMENTATION
found a ctor but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999337539911239	WITHOUT_CLASSIFICATION	6.624600887599536E-5	IMPLEMENTATION
determine the id getter and setter methods from the proxy interface (if any) determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.8437002574462207	IMPLEMENTATION	0.1562997425537794	WITHOUT_CLASSIFICATION
return getfactory().getsettings().getbytecodeprovider().getproxyfactoryfactory().buildproxyfactory()	WITHOUT_CLASSIFICATION	0.999971136654221	WITHOUT_CLASSIFICATION	2.8863345779078894E-5	IMPLEMENTATION
not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9925404316115014	WITHOUT_CLASSIFICATION	0.007459568388498616	IMPLEMENTATION
superclass entity-name	WITHOUT_CLASSIFICATION	0.9999693049421395	WITHOUT_CLASSIFICATION	3.069505786055978E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999181776608117	WITHOUT_CLASSIFICATION	8.18223391882423E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
init the aliases after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999475418005714	WITHOUT_CLASSIFICATION	5.2458199428639006E-5	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999181776608117	WITHOUT_CLASSIFICATION	8.18223391882423E-5	IMPLEMENTATION
legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999579769460395	WITHOUT_CLASSIFICATION	4.2023053960557465E-5	IMPLEMENTATION
get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999419780121357	WITHOUT_CLASSIFICATION	5.8021987864288545E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
note this affects the return value!	WITHOUT_CLASSIFICATION	0.9999163218338577	WITHOUT_CLASSIFICATION	8.367816614233518E-5	IMPLEMENTATION
need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9997132481325995	WITHOUT_CLASSIFICATION	2.867518674004662E-4	IMPLEMENTATION
add the type to the list of returned sqlresulttypes.	WITHOUT_CLASSIFICATION	0.9999568065749235	WITHOUT_CLASSIFICATION	4.319342507664209E-5	IMPLEMENTATION
collection types	WITHOUT_CLASSIFICATION	0.9992187676849571	WITHOUT_CLASSIFICATION	7.812323150430196E-4	IMPLEMENTATION
convenience methods relating to operations across arrays of types	WITHOUT_CLASSIFICATION	0.9995600397894088	WITHOUT_CLASSIFICATION	4.399602105912547E-4	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999964251567319	WITHOUT_CLASSIFICATION	3.57484326802188E-6	IMPLEMENTATION
blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999196563842193	WITHOUT_CLASSIFICATION	8.03436157807442E-5	IMPLEMENTATION
value is the entity name	WITHOUT_CLASSIFICATION	0.9999949157493391	WITHOUT_CLASSIFICATION	5.084250660846783E-6	IMPLEMENTATION
early exit!	WITHOUT_CLASSIFICATION	0.9999690968519893	WITHOUT_CLASSIFICATION	3.0903148010731545E-5	IMPLEMENTATION
generate id select fragment and then property select fragment for each expression just like generateselectfragments().	WITHOUT_CLASSIFICATION	0.997719286038827	WITHOUT_CLASSIFICATION	0.0022807139611730953	IMPLEMENTATION
todo!	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
xml is the entity name	WITHOUT_CLASSIFICATION	0.9999864422165392	WITHOUT_CLASSIFICATION	1.3557783460654416E-5	IMPLEMENTATION
special case this is the leaf of the containment graph even though not immutable	WITHOUT_CLASSIFICATION	0.9993657270587258	WITHOUT_CLASSIFICATION	6.342729412742455E-4	IMPLEMENTATION
tolerates nulls	WITHOUT_CLASSIFICATION	0.9999186989634984	WITHOUT_CLASSIFICATION	8.1301036501627E-5	IMPLEMENTATION
sqlresulttypelist	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
metatype is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999712730928885	WITHOUT_CLASSIFICATION	2.8726907111471095E-5	IMPLEMENTATION
get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999856651561282	WITHOUT_CLASSIFICATION	1.4334843871746675E-5	IMPLEMENTATION
look through the fromelement's children to find any collections of values that should be fetched	WITHOUT_CLASSIFICATION	0.9998581795641882	WITHOUT_CLASSIFICATION	1.4182043581180827E-4	IMPLEMENTATION
return associationtype.foreign_key_to_parent this is better but causes a transient object exception	WITHOUT_CLASSIFICATION	0.9999994641692712	WITHOUT_CLASSIFICATION	5.358307286991143E-7	IMPLEMENTATION
use the lower case function name. remember whether we're in a select clause or not.	WITHOUT_CLASSIFICATION	0.99999930479201	WITHOUT_CLASSIFICATION	6.952079899235084E-7	IMPLEMENTATION
ident might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999777046470424	WITHOUT_CLASSIFICATION	2.2295352957573358E-5	IMPLEMENTATION
todo!!!	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
st.settimestamp( index new timestamp( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9994256665927594	WITHOUT_CLASSIFICATION	5.74333407240566E-4	IMPLEMENTATION
st.setdate( index new date( cal.gettimeinmillis() ) cal ) jdk 1.5 only	WITHOUT_CLASSIFICATION	0.9994256665927594	WITHOUT_CLASSIFICATION	5.74333407240566E-4	IMPLEMENTATION
both are timestamps	WITHOUT_CLASSIFICATION	0.9999542372522822	WITHOUT_CLASSIFICATION	4.576274771783631E-5	IMPLEMENTATION
at least one is a plain old date	WITHOUT_CLASSIFICATION	0.9999764588517555	WITHOUT_CLASSIFICATION	2.3541148244499725E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999726070492237	WITHOUT_CLASSIFICATION	2.739295077625719E-5	IMPLEMENTATION
if the corresponding sql value is null the reader we got is null as well	WITHOUT_CLASSIFICATION	0.9999999576009315	WITHOUT_CLASSIFICATION	4.239906846261484E-8	IMPLEMENTATION
fetch reader content up to the end - and put characters in a stringbuffer	WITHOUT_CLASSIFICATION	0.9998431551032855	WITHOUT_CLASSIFICATION	1.5684489671453426E-4	IMPLEMENTATION
return stringbuffer content as a large string	WITHOUT_CLASSIFICATION	0.9999091414521444	WITHOUT_CLASSIFICATION	9.085854785563868E-5	IMPLEMENTATION
or types.longvarchar?	WITHOUT_CLASSIFICATION	0.9999724151066499	WITHOUT_CLASSIFICATION	2.7584893350103882E-5	IMPLEMENTATION
not called at runtime so doesn't matter if its slow )	WITHOUT_CLASSIFICATION	0.9999778613960792	WITHOUT_CLASSIFICATION	2.2138603920825102E-5	IMPLEMENTATION
todo	WITHOUT_CLASSIFICATION	0.8370125777149637	WITHOUT_CLASSIFICATION	0.16298742228503618	IMPLEMENTATION
chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999873586322569	WITHOUT_CLASSIFICATION	1.2641367743178123E-5	IMPLEMENTATION
different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999701865525513	WITHOUT_CLASSIFICATION	2.9813447448725638E-5	IMPLEMENTATION
cache this	WITHOUT_CLASSIFICATION	0.9999109168293657	WITHOUT_CLASSIFICATION	8.90831706342083E-5	IMPLEMENTATION
only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.999658011731301	WITHOUT_CLASSIFICATION	3.4198826869893164E-4	IMPLEMENTATION
forcefully remove leading ands from where fragments the grammar will handle adding them	WITHOUT_CLASSIFICATION	0.9999800112311182	WITHOUT_CLASSIFICATION	1.9988768881757144E-5	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
create a new filters node as a parent of all filters	WITHOUT_CLASSIFICATION	0.999943956254597	WITHOUT_CLASSIFICATION	5.604374540298231E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
public object instantiate(object parent sessionimplementor session) throws hibernateexception	WITHOUT_CLASSIFICATION	0.9999784356731639	WITHOUT_CLASSIFICATION	2.1564326836054347E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999653529698349	WITHOUT_CLASSIFICATION	3.464703016505204E-5	IMPLEMENTATION
nothing to do	WITHOUT_CLASSIFICATION	0.9999653529698349	WITHOUT_CLASSIFICATION	3.464703016505204E-5	IMPLEMENTATION
versiontype impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ note simply returns null for seed() and next() as the only known application of binary types for versioning is for use with the timestamp datatype supported by sybase and sql server which are completely db-generated values	WITHOUT_CLASSIFICATION	0.9999959373799591	WITHOUT_CLASSIFICATION	4.062620040971593E-6	IMPLEMENTATION
lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999964251567319	WITHOUT_CLASSIFICATION	3.57484326802188E-6	IMPLEMENTATION
not really necessary i guess	WITHOUT_CLASSIFICATION	0.9946253161548708	WITHOUT_CLASSIFICATION	0.005374683845129195	IMPLEMENTATION
clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999743175911442	WITHOUT_CLASSIFICATION	2.5682408855781542E-5	IMPLEMENTATION
we do not have to worry about queued additions to uninitialized collections since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.999634453367252	WITHOUT_CLASSIFICATION	3.655466327480468E-4	IMPLEMENTATION
collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999954766711323	WITHOUT_CLASSIFICATION	4.523328867696937E-6	IMPLEMENTATION
remember the uk value	WITHOUT_CLASSIFICATION	0.9999483396807465	WITHOUT_CLASSIFICATION	5.1660319253556646E-5	IMPLEMENTATION
noop	WITHOUT_CLASSIFICATION	0.9999726070492237	WITHOUT_CLASSIFICATION	2.739295077625719E-5	IMPLEMENTATION
processcollectionproperty(token q.getcollectionpersister(collectionrole) collectionname)	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
we must use the "remembered" uk value since it is not available from the entityentry during assembly	WITHOUT_CLASSIFICATION	0.9998087422739625	WITHOUT_CLASSIFICATION	1.91257726037405E-4	IMPLEMENTATION
collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9997011034955148	WITHOUT_CLASSIFICATION	2.9889650448524215E-4	IMPLEMENTATION
return false	WITHOUT_CLASSIFICATION	0.9999861608030342	WITHOUT_CLASSIFICATION	1.3839196965831355E-5	IMPLEMENTATION
this just handles a particular case of component projection perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999973133860843	WITHOUT_CLASSIFICATION	2.6866139156996183E-6	IMPLEMENTATION
note we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999983299737641	WITHOUT_CLASSIFICATION	1.6700262358267025E-6	IMPLEMENTATION
the key is the owning entity itself so get the id from the key	WITHOUT_CLASSIFICATION	0.9999971150089962	WITHOUT_CLASSIFICATION	2.884991003821203E-6	IMPLEMENTATION
if the original is a persistentcollection and that original was not flagged as dirty then reset the target's dirty flag here after the copy operation. </p> one thing to be careful of here is a "bare" original collection in which case we should never ever ever reset the dirty flag on the target because we simply do not know	WITHOUT_CLASSIFICATION	0.84532768427974	WITHOUT_CLASSIFICATION	0.15467231572025994	IMPLEMENTATION
ignore subselect keywords	WITHOUT_CLASSIFICATION	0.99992681703372	WITHOUT_CLASSIFICATION	7.318296627993934E-5	IMPLEMENTATION
copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9992380953849958	WITHOUT_CLASSIFICATION	7.619046150041923E-4	IMPLEMENTATION
for a null target or a target which is the same as the original we need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999814745352761	WITHOUT_CLASSIFICATION	1.852546472390954E-5	IMPLEMENTATION
by default just use an unanticipated capacity since we don't know how to extract the capacity to use from original here	WITHOUT_CLASSIFICATION	0.9997617855311726	WITHOUT_CLASSIFICATION	2.3821446882744905E-4	IMPLEMENTATION
get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9993644383847811	WITHOUT_CLASSIFICATION	6.355616152189667E-4	IMPLEMENTATION
check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.999997126438232	WITHOUT_CLASSIFICATION	2.8735617679240823E-6	IMPLEMENTATION
check if it is already completely loaded but unowned	WITHOUT_CLASSIFICATION	0.9999986235706885	WITHOUT_CLASSIFICATION	1.3764293116136673E-6	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9978044146291126	WITHOUT_CLASSIFICATION	0.0021955853708873056	IMPLEMENTATION
todo!!!!!!!	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
create a new collection wrapper to be initialized later	WITHOUT_CLASSIFICATION	0.9998549317236648	WITHOUT_CLASSIFICATION	1.4506827633523303E-4	IMPLEMENTATION
some jdbc drivers erroneously return an empty array here for a null db value /	WITHOUT_CLASSIFICATION	0.999994944778876	WITHOUT_CLASSIFICATION	5.055221123987534E-6	IMPLEMENTATION
our column span is the number of columns in the pk	WITHOUT_CLASSIFICATION	0.999999929855623	WITHOUT_CLASSIFICATION	7.014437701749601E-8	IMPLEMENTATION
cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999956821958261	WITHOUT_CLASSIFICATION	4.317804173909328E-6	IMPLEMENTATION
we already know current is not null	WITHOUT_CLASSIFICATION	0.9317265462674604	WITHOUT_CLASSIFICATION	0.06827345373253957	IMPLEMENTATION
the ids are fully resolved so compare them with isdirty() not ismodified()	WITHOUT_CLASSIFICATION	0.999365627544921	WITHOUT_CLASSIFICATION	6.343724550789623E-4	IMPLEMENTATION
the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9978223005240745	WITHOUT_CLASSIFICATION	0.0021776994759254193	IMPLEMENTATION
----------------------------------------------------------- constructors	WITHOUT_CLASSIFICATION	0.9997867084257049	WITHOUT_CLASSIFICATION	2.1329157429512976E-4	IMPLEMENTATION
----------------------------------------------------- instance variables	WITHOUT_CLASSIFICATION	0.9999674755106469	WITHOUT_CLASSIFICATION	3.2524489353182524E-5	IMPLEMENTATION
public static jdbcexception newjdbcexception(string string sqlexception root string sql) { string = string + " [" + sql + ']' log.error(string root) logexceptions(root) return new jdbcexception(string root sql) } public static jdbcexception newjdbcexception(string string sqlexception root) { log.error(string root) logexceptions(root) return new jdbcexception(string root) }	WITHOUT_CLASSIFICATION	0.9999964716730803	WITHOUT_CLASSIFICATION	3.528326919741274E-6	IMPLEMENTATION
--------------------------------------------------------- public methods	WITHOUT_CLASSIFICATION	0.999993091740435	WITHOUT_CLASSIFICATION	6.908259564934512E-6	IMPLEMENTATION
compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999265465719369	WITHOUT_CLASSIFICATION	7.345342806306242E-5	IMPLEMENTATION
simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.999657221002925	WITHOUT_CLASSIFICATION	3.427789970750348E-4	IMPLEMENTATION
sybase fail if we don't do that sigh	WITHOUT_CLASSIFICATION	0.9998968199301477	WITHOUT_CLASSIFICATION	1.0318006985225558E-4	IMPLEMENTATION
handles things like a and b or c a and ( b or c ) not a and not b not ( a and b ) x between y and z (overloaded "and") x in ( a b c ) (overloaded brackets) not not a a is not null (overloaded "not") etc and expressions like foo = bar (maps to foo.id = bar.id) foo.bar = 'foo' (maps to foo.bar = 'foo') foo.bar.baz = 1.0 (maps to foo.bar = bar.id and bar.baz = 1.0) 1.0 = foo.bar.baz (maps to bar.baz = 1.0 and foo.bar = bar.id) foo.bar.baz = a.b.c (maps to bar.baz = b.c and foo.bar = bar.id and a.b = b.id) foo.bar.baz + a.b.c (maps to bar.baz + b.c and foo.bar = bar.id and a.b = b.id) ( foo.bar.baz + 1.0 ) < 2.0 (maps to ( bar.baz + 1.0 ) < 2.0 and foo.bar = bar.id)	WITHOUT_CLASSIFICATION	0.999871812504357	WITHOUT_CLASSIFICATION	1.2818749564300966E-4	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.999613863443908	WITHOUT_CLASSIFICATION	3.861365560920411E-4	IMPLEMENTATION
release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.999613863443908	WITHOUT_CLASSIFICATION	3.861365560920411E-4	IMPLEMENTATION
try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9998815295215268	WITHOUT_CLASSIFICATION	1.1847047847317079E-4	IMPLEMENTATION
otherwise just dump it	WITHOUT_CLASSIFICATION	0.9996612681455459	WITHOUT_CLASSIFICATION	3.3873185445408E-4	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.999975823419239	WITHOUT_CLASSIFICATION	2.417658076105303E-5	IMPLEMENTATION
its an interface so we can't really tell anything	WITHOUT_CLASSIFICATION	0.999975823419239	WITHOUT_CLASSIFICATION	2.417658076105303E-5	IMPLEMENTATION
use default behavior	WITHOUT_CLASSIFICATION	0.9999813671319429	WITHOUT_CLASSIFICATION	1.8632868057175657E-5	IMPLEMENTATION
note early return	WITHOUT_CLASSIFICATION	0.999982229061628	WITHOUT_CLASSIFICATION	1.7770938371925242E-5	IMPLEMENTATION
the mru cache used to keep hard references to the most recently used query plans note lru here is a bit of a misnomer it indicates that lru entries are removed the actual kept entries are the mru entries	WITHOUT_CLASSIFICATION	0.9972188224125536	WITHOUT_CLASSIFICATION	0.00278117758744633	IMPLEMENTATION
we want to be able to just use the defaults if jndi environment properties are not supplied so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999789499853463	WITHOUT_CLASSIFICATION	2.105001465371044E-5	IMPLEMENTATION
clone -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931364754124	WITHOUT_CLASSIFICATION	6.863524587467191E-6	IMPLEMENTATION
serialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999984698288932	WITHOUT_CLASSIFICATION	1.5301711068483492E-6	IMPLEMENTATION
stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999984698288932	WITHOUT_CLASSIFICATION	1.5301711068483492E-6	IMPLEMENTATION
deserialize -----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
static methods only - hide constructor	WITHOUT_CLASSIFICATION	0.9999475511434331	WITHOUT_CLASSIFICATION	5.2448856566837184E-5	IMPLEMENTATION
&& !('_'==character)	WITHOUT_CLASSIFICATION	0.9998996398522113	WITHOUT_CLASSIFICATION	1.0036014778858634E-4	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
returnign null!	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
includes last '.'	WITHOUT_CLASSIFICATION	0.9999104790406307	WITHOUT_CLASSIFICATION	8.952095936928425E-5	IMPLEMENTATION
+1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999567258568258	WITHOUT_CLASSIFICATION	4.327414317412821E-5	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999740742267897	WITHOUT_CLASSIFICATION	2.5925773210212E-5	IMPLEMENTATION
first time we find match!	WITHOUT_CLASSIFICATION	0.9999047906457391	WITHOUT_CLASSIFICATION	9.520935426089596E-5	IMPLEMENTATION
entitynames may now include slashes for the representations classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999992894010548	WITHOUT_CLASSIFICATION	7.105989451413937E-7	IMPLEMENTATION
wrapped iterators	WITHOUT_CLASSIFICATION	0.9998732262737894	WITHOUT_CLASSIFICATION	1.267737262107116E-4	IMPLEMENTATION
index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999402558657888	WITHOUT_CLASSIFICATION	5.9744134211110855E-5	IMPLEMENTATION
the current iterator	WITHOUT_CLASSIFICATION	0.9997882030353878	WITHOUT_CLASSIFICATION	2.1179696461207266E-4	IMPLEMENTATION
the last used iterator	WITHOUT_CLASSIFICATION	0.9999669992742163	WITHOUT_CLASSIFICATION	3.300072578359388E-5	IMPLEMENTATION
it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999701912684891	WITHOUT_CLASSIFICATION	2.9808731510933038E-5	IMPLEMENTATION
public static object[] clone(class elementclass object[] array) {object[] result = (object[]) array.newinstance( elementclass array.length )system.arraycopy(array 0 result 0 array.length)return result}	WITHOUT_CLASSIFICATION	0.9999858158155477	WITHOUT_CLASSIFICATION	1.4184184452366897E-5	IMPLEMENTATION
call this before any iterator method to make sure that the current iterator is not exhausted	WITHOUT_CLASSIFICATION	0.9801009007598184	WITHOUT_CLASSIFICATION	0.01989909924018166	IMPLEMENTATION
doable if needed	WITHOUT_CLASSIFICATION	0.8736731948935146	WITHOUT_CLASSIFICATION	0.12632680510648547	IMPLEMENTATION
set last used iterator here in case the user calls remove before calling hasnext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999817328903714	WITHOUT_CLASSIFICATION	1.826710962864549E-5	IMPLEMENTATION
peek ahead	WITHOUT_CLASSIFICATION	0.9999725178362029	WITHOUT_CLASSIFICATION	2.7482163797053194E-5	IMPLEMENTATION
if we reach the end of the string w/o finding the matching end that is an exception	WITHOUT_CLASSIFICATION	0.9999993069328854	WITHOUT_CLASSIFICATION	6.930671146850403E-7	IMPLEMENTATION
we have a placeholder spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9996258811199803	WITHOUT_CLASSIFICATION	3.741188800196261E-4	IMPLEMENTATION
make sure spinning forward did not put us past the end of the buffer	WITHOUT_CLASSIFICATION	0.9642163166070814	WITHOUT_CLASSIFICATION	0.03578368339291869	IMPLEMENTATION
first try to locate this resource through the current context classloader.	WITHOUT_CLASSIFICATION	0.9983218573934238	WITHOUT_CLASSIFICATION	0.0016781426065760642	IMPLEMENTATION
next try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9994156168272579	WITHOUT_CLASSIFICATION	5.843831727420832E-4	IMPLEMENTATION
next try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9982470800153712	WITHOUT_CLASSIFICATION	0.0017529199846288476	IMPLEMENTATION
anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9998928751477872	WITHOUT_CLASSIFICATION	1.0712485221273903E-4	IMPLEMENTATION
would need an identityset for this!	WITHOUT_CLASSIFICATION	0.9997922239566939	WITHOUT_CLASSIFICATION	2.0777604330612332E-4	IMPLEMENTATION
arrays.aslist doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999310228433402	WITHOUT_CLASSIFICATION	6.897715665972641E-5	IMPLEMENTATION
faster?	WITHOUT_CLASSIFICATION	0.9999724667707166	WITHOUT_CLASSIFICATION	2.75332292835098E-5	IMPLEMENTATION
the name of a class	WITHOUT_CLASSIFICATION	0.9999820591877481	WITHOUT_CLASSIFICATION	1.7940812251895996E-5	IMPLEMENTATION
its the listener class name	WITHOUT_CLASSIFICATION	0.9999790684718481	WITHOUT_CLASSIFICATION	2.0931528151857755E-5	IMPLEMENTATION
allow 987654321	WITHOUT_CLASSIFICATION	0.9997854366034241	WITHOUT_CLASSIFICATION	2.145633965758346E-4	IMPLEMENTATION
default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999995806312015	WITHOUT_CLASSIFICATION	4.1936879844878787E-7	IMPLEMENTATION
look for the instance by uuid	WITHOUT_CLASSIFICATION	0.999995958515855	WITHOUT_CLASSIFICATION	4.041484145051472E-6	IMPLEMENTATION
in case we were deserialized in a different jvm look for an instance with the same name (alternatively we could do an actual jndi lookup here.)	WITHOUT_CLASSIFICATION	0.9999998440322947	WITHOUT_CLASSIFICATION	1.559677052979496E-7	IMPLEMENTATION
first lets determine whether to apply cglib or javassist based instrumentation	WITHOUT_CLASSIFICATION	0.9999951899117397	WITHOUT_CLASSIFICATION	4.8100882602343555E-6	IMPLEMENTATION
make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9998959403417116	WITHOUT_CLASSIFICATION	1.0405965828838951E-4	IMPLEMENTATION
entirely optional!!	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9998411040820063	WITHOUT_CLASSIFICATION	1.5889591799363032E-4	IMPLEMENTATION
context.unbind(boundname)	WITHOUT_CLASSIFICATION	0.9999568524432488	WITHOUT_CLASSIFICATION	4.3147556751217095E-5	IMPLEMENTATION
readresolveobject	WITHOUT_CLASSIFICATION	0.9998986872936774	WITHOUT_CLASSIFICATION	1.0131270632258101E-4	IMPLEMENTATION
cfg.setproperty("hibernate.show_sql" "true")	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
defensive convenience methods	WITHOUT_CLASSIFICATION	0.9999742984179806	WITHOUT_CLASSIFICATION	2.570158201938933E-5	IMPLEMENTATION
create the sessionfactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.999990921388528	WITHOUT_CLASSIFICATION	9.078611472080355E-6	IMPLEMENTATION
make sure you log the exception as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999709488228645	WITHOUT_CLASSIFICATION	2.9051177135499482E-5	IMPLEMENTATION
begin unit of work	WITHOUT_CLASSIFICATION	0.9998148512433342	WITHOUT_CLASSIFICATION	1.8514875666579428E-4	IMPLEMENTATION
write html header	WITHOUT_CLASSIFICATION	0.9999491894769197	WITHOUT_CLASSIFICATION	5.081052308029424E-5	IMPLEMENTATION
handle actions	WITHOUT_CLASSIFICATION	0.9998989079452164	WITHOUT_CLASSIFICATION	1.0109205478361054E-4	IMPLEMENTATION
print page	WITHOUT_CLASSIFICATION	0.9999886864668709	WITHOUT_CLASSIFICATION	1.131353312910321E-5	IMPLEMENTATION
write html footer	WITHOUT_CLASSIFICATION	0.9999023712596677	WITHOUT_CLASSIFICATION	9.762874033221567E-5	IMPLEMENTATION
end unit of work	WITHOUT_CLASSIFICATION	0.9995982289389624	WITHOUT_CLASSIFICATION	4.017710610375154E-4	IMPLEMENTATION
start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999696997153995	WITHOUT_CLASSIFICATION	3.0300284600462932E-5	IMPLEMENTATION
make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9981493129640725	WITHOUT_CLASSIFICATION	0.0018506870359275905	IMPLEMENTATION
pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9995840174280095	WITHOUT_CLASSIFICATION	4.1598257199040064E-4	IMPLEMENTATION
remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999737538475869	WITHOUT_CLASSIFICATION	2.6246152413165384E-5	IMPLEMENTATION
eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9994176977282718	WITHOUT_CLASSIFICATION	5.823022717281601E-4	IMPLEMENTATION
if we want to handle it bidirectional and detached we also need to load this collection with an eager outer-join fetch this time with criteria and not hql	WITHOUT_CLASSIFICATION	0.9198959651755926	WITHOUT_CLASSIFICATION	0.08010403482440749	IMPLEMENTATION
event anevent = (event) session .createcriteria(event.class).setfetchmode("participants" fetchmode.join) .add( expression.eq("id" eventid) ) .uniqueresult() eager fetch the colleciton so we can use it detached	WITHOUT_CLASSIFICATION	0.9982005953812796	WITHOUT_CLASSIFICATION	0.0017994046187205012	IMPLEMENTATION
end of first unit of work	WITHOUT_CLASSIFICATION	0.9998226506747461	WITHOUT_CLASSIFICATION	1.7734932525388224E-4	IMPLEMENTATION
or bidirectional safety method setting both sides aperson.addtoevent(anevent)	WITHOUT_CLASSIFICATION	0.9999742573251837	WITHOUT_CLASSIFICATION	2.5742674816326006E-5	IMPLEMENTATION
begin second unit of work	WITHOUT_CLASSIFICATION	0.9999463784873781	WITHOUT_CLASSIFICATION	5.3621512621882877E-5	IMPLEMENTATION
reattachment of aperson	WITHOUT_CLASSIFICATION	0.9999731294405293	WITHOUT_CLASSIFICATION	2.6870559470710213E-5	IMPLEMENTATION
the getemailaddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9998930936533115	WITHOUT_CLASSIFICATION	1.0690634668846495E-4	IMPLEMENTATION
we need our tm so get it now and avoid doing other work if there is a problem	WITHOUT_CLASSIFICATION	0.9999208467638875	WITHOUT_CLASSIFICATION	7.915323611245987E-5	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9979577413350138	WITHOUT_CLASSIFICATION	0.0020422586649862036	IMPLEMENTATION
don't hold the jbc node lock throughout the tx as that prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9979577413350138	WITHOUT_CLASSIFICATION	0.0020422586649862036	IMPLEMENTATION
jbc put a version in the node when it created as part of some internal operation. we are always newer but if the jbc version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999999987989511	WITHOUT_CLASSIFICATION	1.2010489455807044E-9	IMPLEMENTATION
swaldman 2006-08-28 define c3p0-style configuration parameters for properties with hibernate-specific overrides to detect and warn about conflicting declarations	WITHOUT_CLASSIFICATION	0.9999890208714257	WITHOUT_CLASSIFICATION	1.0979128574232186E-5	IMPLEMENTATION
not null if the isolation level has been specified in the configuration file. otherwise it is left to the driver's default value.	WITHOUT_CLASSIFICATION	0.9999711916014112	WITHOUT_CLASSIFICATION	2.8808398588767423E-5	IMPLEMENTATION
configured outside of hibernate (i.e. servlet container or java bean container already has proxool pools running and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999873577432249	WITHOUT_CLASSIFICATION	1.2642256775098563E-5	IMPLEMENTATION
if you're closing down the connectionprovider chances are an is not a real big deal just warn	WITHOUT_CLASSIFICATION	0.9999895438322725	WITHOUT_CLASSIFICATION	1.0456167727550235E-5	IMPLEMENTATION
(as is always optional for consistency with sql/oql)	WITHOUT_CLASSIFICATION	0.9999824121741471	WITHOUT_CLASSIFICATION	1.758782585299863E-5	IMPLEMENTATION
process the "new" hql style where aliases are assigned _after_ the class name or path expression ie. using the as construction	WITHOUT_CLASSIFICATION	0.9999282641175884	WITHOUT_CLASSIFICATION	7.173588241166434E-5	IMPLEMENTATION
the loaded owner will be set to null after the collection is removed so capture its value as the affected owner so it is accessible to both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999626488244557	WITHOUT_CLASSIFICATION	3.735117554417733E-5	IMPLEMENTATION
is a primitive type invokespecial	WITHOUT_CLASSIFICATION	0.9999674027175228	WITHOUT_CLASSIFICATION	3.2597282477143544E-5	IMPLEMENTATION
array of primitive type do nothing	WITHOUT_CLASSIFICATION	0.9999857132532461	WITHOUT_CLASSIFICATION	1.4286746753902541E-5	IMPLEMENTATION
handle a path expression or class name that appears at the start in the "new" hql style or an alias that appears at the start in the "old" hql style	WITHOUT_CLASSIFICATION	0.9999988505525171	WITHOUT_CLASSIFICATION	1.1494474828565276E-6	IMPLEMENTATION
handle <= >= != is not not between not in	WITHOUT_CLASSIFICATION	0.9998751351986941	WITHOUT_CLASSIFICATION	1.2486480130585145E-4	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999468263115	WITHOUT_CLASSIFICATION	5.3173688535091707E-8	IMPLEMENTATION
transfer an explicitly defined entity name handle the lazy attribute	WITHOUT_CLASSIFICATION	0.999974967665745	WITHOUT_CLASSIFICATION	2.5032334254929392E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999849609221817	WITHOUT_CLASSIFICATION	1.503907781832254E-5	IMPLEMENTATION
keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999849609221817	WITHOUT_CLASSIFICATION	1.503907781832254E-5	IMPLEMENTATION
get meta's from <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999920393484399	WITHOUT_CLASSIFICATION	7.960651560099085E-6	IMPLEMENTATION
parameters on the property mapping should override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999519465243222	WITHOUT_CLASSIFICATION	4.805347567782272E-5	IMPLEMENTATION
fetch="join" overrides default laziness fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999902112427934	WITHOUT_CLASSIFICATION	9.788757206548534E-6	IMPLEMENTATION
note special case default to join and non-lazy for the "second join" of the many-to-many	WITHOUT_CLASSIFICATION	0.9999980484484082	WITHOUT_CLASSIFICATION	1.9515515918143094E-6	IMPLEMENTATION
so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999301373657994	WITHOUT_CLASSIFICATION	6.986263420060408E-5	IMPLEMENTATION
state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999705857600532	WITHOUT_CLASSIFICATION	2.941423994693974E-5	IMPLEMENTATION
void setcomponenttuplizerfactory(componenttuplizerfactory componenttuplizerfactory) { this.componenttuplizerfactory = componenttuplizerfactory }	WITHOUT_CLASSIFICATION	0.9992025354094968	WITHOUT_CLASSIFICATION	7.974645905032298E-4	IMPLEMENTATION
element index -> id	WITHOUT_CLASSIFICATION	0.9998942877772466	WITHOUT_CLASSIFICATION	1.0571222275337713E-4	IMPLEMENTATION
note that it might be better to iterate the snapshot but this is safe assuming the user implements equals() properly as required by the set contract!	WITHOUT_CLASSIFICATION	0.9997784311974246	WITHOUT_CLASSIFICATION	2.215688025753889E-4	IMPLEMENTATION
collections detect changes made via their public interface and mark themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9956668850499172	WITHOUT_CLASSIFICATION	0.004333114950082828	IMPLEMENTATION
essentially if the real session is closed allow any method call to pass through since the real session will complain by throwing an appropriate exception note that allowing close() above has the same basic effect but we capture that there simply to perform the unbind	WITHOUT_CLASSIFICATION	0.9999996633684066	WITHOUT_CLASSIFICATION	3.3663159335902844E-7	IMPLEMENTATION
the default sqlexceptionconverter for all dialects is based on sqlstate since sqlerrorcode is extremely vendor-specific. specific dialects may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999790575935942	WITHOUT_CLASSIFICATION	2.0942406405746276E-5	IMPLEMENTATION
only necessary for postgre < 7.4 httpanoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.999966305545642	WITHOUT_CLASSIFICATION	3.369445435800356E-5	IMPLEMENTATION
select topic syntax from information_schema.help where section like 'function%' order by section topic see also -> httpwww.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999940310186355	WITHOUT_CLASSIFICATION	5.9689813644722705E-6	IMPLEMENTATION
registercolumntype(types.varbinary "character($l)") registercolumntype(types.blob "character($l)" ) for use prior to cp 11.0 registercolumntype(types.clob "character($l)" )	WITHOUT_CLASSIFICATION	0.9999161242990618	WITHOUT_CLASSIFICATION	8.387570093814748E-5	IMPLEMENTATION
the blob type requires a size arguement - this defaults to bytes - no arg defaults to 1 whole byte! other argument mods include k - kilobyte m - megabyte g - gigabyte. refer to the pbdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999333493279375	WITHOUT_CLASSIFICATION	6.665067206244707E-5	IMPLEMENTATION
we must return a valid rdms/rsa command from this method to prevent rdms/rsa from issuing error 400	WITHOUT_CLASSIFICATION	0.9999230761227278	WITHOUT_CLASSIFICATION	7.692387727214521E-5	IMPLEMENTATION
oracle driver reports to support getgeneratedkeys() but they only support the version taking an array of the names of the columns to be returned (via its returning clause). no other driver seems to support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999978534296221	WITHOUT_CLASSIFICATION	2.1465703778051204E-6	IMPLEMENTATION
add the comment nest the main query in an outer select add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999995616584122	WITHOUT_CLASSIFICATION	4.383415877791228E-7	IMPLEMENTATION
you may still have other resultsets or update counts left to process here but you can't do it now or the resultset you just got will be closed	WITHOUT_CLASSIFICATION	0.9999754789854851	WITHOUT_CLASSIFICATION	2.4521014514873872E-5	IMPLEMENTATION
note for object <-> sql datatype mappings see configuration manager | advanced | sql | system ddl datatype mappings tbdregistercolumntype(types.binary "binary($1)") changed 08-11-2005 jsl	WITHOUT_CLASSIFICATION	0.9999999927648582	WITHOUT_CLASSIFICATION	7.235141926203262E-9	IMPLEMENTATION
trim(end_keyword string-expression-1 from string-expression-2) use hibernate implementation "from" is one of the parameters they pass in position ?3 registerfunction( "trim" new sqlfunctiontemplate(hibernate.string "trim(?1 ?2 from ?3)") )	WITHOUT_CLASSIFICATION	0.9999954925798947	WITHOUT_CLASSIFICATION	4.507420105209766E-6	IMPLEMENTATION
whether this dialect has an identity clause added to the data type or a completely seperate identity data type	WITHOUT_CLASSIFICATION	0.999999764219855	WITHOUT_CLASSIFICATION	2.3578014484375816E-7	IMPLEMENTATION
according to both the ansi-sql and jpa specs trim takes a variable number of parameters between 1 and 4. at least one paramer (trimsource) is required. from the sql spec <trim function> = trim <left paren> <trim operands> <right paren> <trim operands> = [ [ <trim specification> ] [ <trim character> ] from ] <trim source> <trim specification> = leading | trailing | both if <trim specification> is omitted both is assumed. if <trim character> is omitted space is assumed	WITHOUT_CLASSIFICATION	0.999999990411266	WITHOUT_CLASSIFICATION	9.58873399810727E-9	IMPLEMENTATION
/ prepare persisters and link them up with their cache region/access-strategy	WITHOUT_CLASSIFICATION	0.9999938639625345	WITHOUT_CLASSIFICATION	6.136037465445922E-6	IMPLEMENTATION
named queries	WITHOUT_CLASSIFICATION	0.9999456918279688	WITHOUT_CLASSIFICATION	5.4308172031375164E-5	IMPLEMENTATION
this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999938178595634	WITHOUT_CLASSIFICATION	6.182140436641916E-6	IMPLEMENTATION
does not handle arrays (thats ok cos they can't be lazy) or newly instantiated collections so we can do the cast	WITHOUT_CLASSIFICATION	0.9437057995347282	WITHOUT_CLASSIFICATION	0.05629420046527179	IMPLEMENTATION
collection deletions are a special case since update() can add deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9991871718721625	WITHOUT_CLASSIFICATION	8.128281278374868E-4	IMPLEMENTATION
we can do the cast since orphan-delete does not apply to 1. newly instantiated collections 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9963533913318668	WITHOUT_CLASSIFICATION	0.0036466086681331525	IMPLEMENTATION
if the natural-id is marked as non-mutable it is not retrieved during a normal database-snapshot operation	WITHOUT_CLASSIFICATION	0.9999552317965188	WITHOUT_CLASSIFICATION	4.476820348122228E-5	IMPLEMENTATION
watch out for a case where old is still referenced somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999997513941681	WITHOUT_CLASSIFICATION	2.486058319565413E-7	IMPLEMENTATION
slice to get the columns for this component property	WITHOUT_CLASSIFICATION	0.9999988832841263	WITHOUT_CLASSIFICATION	1.116715873708551E-6	IMPLEMENTATION
int result = 17 result = 37 result + type.hashcode() result = 37 result + ( value==null ? 0 value.hashcode() ) return result	WITHOUT_CLASSIFICATION	0.9999785883809661	WITHOUT_CLASSIFICATION	2.1411619033978173E-5	IMPLEMENTATION
the collectionentry.isreached() stuff is just to detect any silly users who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999945464475191	WITHOUT_CLASSIFICATION	5.453552480950526E-6	IMPLEMENTATION
detached collection wrappers that get found + reattached during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9921973435840512	WITHOUT_CLASSIFICATION	0.007802656415948736	IMPLEMENTATION
the unique property value represented here may or may not be serializable so we do an explicit check here in order to generate a better error message	WITHOUT_CLASSIFICATION	0.9989915301238385	WITHOUT_CLASSIFICATION	0.0010084698761615952	IMPLEMENTATION
if the version of a newly instantiated object is not the same as the version seed value use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999254418326785	WITHOUT_CLASSIFICATION	7.455816732151382E-5	IMPLEMENTATION
ie. we never have to null out a reference to an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999298637972228	WITHOUT_CLASSIFICATION	7.013620277713437E-5	IMPLEMENTATION
ignore this row the collection is in process of being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999978932753737	WITHOUT_CLASSIFICATION	2.1067246262277916E-6	IMPLEMENTATION
entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currently not yet used	WITHOUT_CLASSIFICATION	0.9984356481369034	WITHOUT_CLASSIFICATION	0.0015643518630965138	IMPLEMENTATION
should be ok performance-wise to generate new delegate instances for each request since these are locally stack-scoped. besides it makes the code much easier to read than the old transactionhelper stuff	WITHOUT_CLASSIFICATION	0.999994943106921	WITHOUT_CLASSIFICATION	5.0568930789300594E-6	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.999930119928292	WITHOUT_CLASSIFICATION	6.988007170813929E-5	IMPLEMENTATION
this implementation is supposed to tolerate incorrect unsaved-value mappings for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.999930119928292	WITHOUT_CLASSIFICATION	6.988007170813929E-5	IMPLEMENTATION
wrap up any new collections directly referenced by the object or its components	WITHOUT_CLASSIFICATION	0.999999638040223	WITHOUT_CLASSIFICATION	3.619597770873664E-7	IMPLEMENTATION
remove any snapshot not really for memory management purposes but rather because it might now be stale and there is no longer any entityentry to take precedence this is now handled by removeentity() session.getpersistencecontext().removedatabasesnapshot(key)	WITHOUT_CLASSIFICATION	0.9999998539029973	WITHOUT_CLASSIFICATION	1.4609700272049157E-7	IMPLEMENTATION
skip this check for composite-ids relating to dom4j entity-mode alternatively we could add a check to make sure the incoming id value is an instance of element	WITHOUT_CLASSIFICATION	0.9999916491163346	WITHOUT_CLASSIFICATION	8.3508836653511E-6	IMPLEMENTATION
upgrade the lock if necessary lock(result lockmode)	WITHOUT_CLASSIFICATION	0.9999868048723971	WITHOUT_CLASSIFICATION	1.3195127602781006E-5	IMPLEMENTATION
now any collections that are initialized inside this block do not get updated - they are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9107589661645281	WITHOUT_CLASSIFICATION	0.0892410338354719	IMPLEMENTATION
we must clone embedded composite identifiers or we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999993898207814	WITHOUT_CLASSIFICATION	6.10179218722545E-7	IMPLEMENTATION
sub-insertions should occur before containing insertion so try to do the callback now	WITHOUT_CLASSIFICATION	0.9998230363033919	WITHOUT_CLASSIFICATION	1.769636966081116E-4	IMPLEMENTATION
the entity is not associated with the session so try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9987744142898362	WITHOUT_CLASSIFICATION	0.001225585710163919	IMPLEMENTATION
scan the query string for class names appearing in the from clause and replace with all persistent implementors of the class/interface returning multiple query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999996058595271	WITHOUT_CLASSIFICATION	3.941404729356101E-7	IMPLEMENTATION
save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997721016553741	WITHOUT_CLASSIFICATION	2.2789834462591673E-4	IMPLEMENTATION
evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997721016553741	WITHOUT_CLASSIFICATION	2.2789834462591673E-4	IMPLEMENTATION
stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999979478932973	WITHOUT_CLASSIFICATION	2.0521067026097724E-6	IMPLEMENTATION
if it is an uninitialized proxy pointing with this session then when it is accessed the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.99999976104325	WITHOUT_CLASSIFICATION	2.389567500633871E-7	IMPLEMENTATION
generate an explicit join for the root dot node. the implied joins will be collected and passed up to the root dot node.	WITHOUT_CLASSIFICATION	0.9999977828696605	WITHOUT_CLASSIFICATION	2.217130339609456E-6	IMPLEMENTATION
a session is considered to contain an entity only if the entity has an entry in the session's persistence context and the entry reports that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9978570037331799	WITHOUT_CLASSIFICATION	0.0021429962668200863	IMPLEMENTATION
does the collection referenced by this fromelement specify an order-by attribute? if so attach it to the query's order-by	WITHOUT_CLASSIFICATION	0.9999990110503119	WITHOUT_CLASSIFICATION	9.889496881591922E-7	IMPLEMENTATION
and the token could be an identifer and the error is a mismatched token error	WITHOUT_CLASSIFICATION	0.9999915639967801	WITHOUT_CLASSIFICATION	8.436003219936521E-6	IMPLEMENTATION
if a where clause was specified in the update/delete query use it to limit the returned ids here	WITHOUT_CLASSIFICATION	0.9999997586075983	WITHOUT_CLASSIFICATION	2.413924016834169E-7	IMPLEMENTATION
int parameterstart = getwalker().getnumberofparametersinsetclause() list allparams = getidselectparameterspecifications() iterator whereparams = allparams.sublist( parameterstart allparams.size() ).iterator()	WITHOUT_CLASSIFICATION	0.9999182173073968	WITHOUT_CLASSIFICATION	8.17826926031315E-5	IMPLEMENTATION
default implementation if this node has a data type and that data type is not an association then this is scalar.	WITHOUT_CLASSIFICATION	0.9999838704190557	WITHOUT_CLASSIFICATION	1.612958094432607E-5	IMPLEMENTATION
resolve the lhs fully generate implicit joins. pass in the property name so that the resolver can discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999754964043298	WITHOUT_CLASSIFICATION	2.4503595670241447E-5	IMPLEMENTATION
if the propertytype is null and there isn't a parent just stop now there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999989148449554	WITHOUT_CLASSIFICATION	1.0851550446347936E-6	IMPLEMENTATION
we do not look for an existing join on the same path because it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9993865694010677	WITHOUT_CLASSIFICATION	6.134305989321524E-4	IMPLEMENTATION
our parent is another dot node meaning we are being further dereferenced. thus we need to generate a join unless the parent refers to the associated entity's pk (because 'our' table would know the fk).	WITHOUT_CLASSIFICATION	0.9919564599626608	WITHOUT_CLASSIFICATION	0.008043540037339304	IMPLEMENTATION
public final currency getcurrency(int col) throws hibernateexception {return (currency) get(col)}	WITHOUT_CLASSIFICATION	0.9997920281484636	WITHOUT_CLASSIFICATION	2.0797185153638456E-4	IMPLEMENTATION
here we have two possibilities 1) the property-name matches the explicitly identifier property name 2) the property-name matches the implicit 'id' property name	WITHOUT_CLASSIFICATION	0.9998039760767397	WITHOUT_CLASSIFICATION	1.96023923260276E-4	IMPLEMENTATION
set the unresolved path in this node and the parent. set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999812549028728	WITHOUT_CLASSIFICATION	1.8745097127233134E-5	IMPLEMENTATION
get the first child to be considered. sub-classes may do this differently in order to skip nodes that are not select expressions (e.g. distinct).	WITHOUT_CLASSIFICATION	0.9995904356793837	WITHOUT_CLASSIFICATION	4.095643206163511E-4	IMPLEMENTATION
if this is an entity and the property is the identifier property then use getidentifiertype(). note that the propertyname.equals( propertypath ) checks whether we have a component key reference where the component class property name is the same as the entity id property name if the two are not equal this is the case and we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9995985110403235	WITHOUT_CLASSIFICATION	4.014889596766071E-4	IMPLEMENTATION
for a subquery the alias to use depends on a few things (we already know this is not an overall select) 1) if this from_element represents a correlation to the outer-most query a) if the outer query represents a multi-table persister we need to use the given alias in anticipation of one of the multi-table executors being used (as this subquery will actually be used in the "id select" phase of that multi-table executor) b) otherwise we need to use the persister's table name as the column qualification 2) otherwise (not correlated) use the given alias	WITHOUT_CLASSIFICATION	0.9983732143054286	WITHOUT_CLASSIFICATION	0.0016267856945714082	IMPLEMENTATION
not a collection? return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9987817982649257	WITHOUT_CLASSIFICATION	0.0012182017350742373	IMPLEMENTATION
collection of <many-to-any/> mappings used to circumvent the component-collection check below	WITHOUT_CLASSIFICATION	0.9999391532779118	WITHOUT_CLASSIFICATION	6.08467220881967E-5	IMPLEMENTATION
otherwise the destination node was implied by the from clause and the from clause processor will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.999985891920873	WITHOUT_CLASSIFICATION	1.4108079126920629E-5	IMPLEMENTATION
if the first identifier in the path referrs to the class alias (not the class name) then this is a correlated subselect. if it's a correlated sub-select use the existing table alias. otherwise generate a new one.	WITHOUT_CLASSIFICATION	0.999999430568937	WITHOUT_CLASSIFICATION	5.694310629587505E-7	IMPLEMENTATION
check to see if our "proppath" actually represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999930970644186	WITHOUT_CLASSIFICATION	6.902935581268519E-6	IMPLEMENTATION
an ident node can represent an index expression if the ident represents a naked property ref note this makes the assumption (which is currently the case in the hql-sql grammar) that the ident is first resolved itself (addrexpr -> resolve()). the other option if that changes is to call resolve from here but it is currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.999999536088075	WITHOUT_CLASSIFICATION	4.639119249692518E-7	IMPLEMENTATION
this uses a pathexpressionparser but notice that compound paths are not valid only bare names and simple paths	WITHOUT_CLASSIFICATION	0.9997731167783833	WITHOUT_CLASSIFICATION	2.2688322161677334E-4	IMPLEMENTATION
if this is an implied join in a from clause then use ansi-style joining and set the flag on the fromelement that indicates that it was implied in the from clause itself.	WITHOUT_CLASSIFICATION	0.9999984813800904	WITHOUT_CLASSIFICATION	1.518619909516204E-6	IMPLEMENTATION
origin.adddestination(destination) add the query spaces.	WITHOUT_CLASSIFICATION	0.9999197441146817	WITHOUT_CLASSIFICATION	8.025588531830049E-5	IMPLEMENTATION
for an explicit many-to-many relationship add a second join from the intermediate (many-to-many) table to the destination table. also make sure that the from element's idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999946960986232	WITHOUT_CLASSIFICATION	5.3039013767906604E-6	IMPLEMENTATION
reset the node type because the rest of the system is expecting from_fragment all we wanted was for the factory to create the right sub-class. this might get reset again later on anyway to make the sql generation simpler.	WITHOUT_CLASSIFICATION	0.9999811915276765	WITHOUT_CLASSIFICATION	1.880847232340244E-5	IMPLEMENTATION
explicit = true this is an explict select. arraylist sqlresulttypelist = new arraylist()	WITHOUT_CLASSIFICATION	0.9999833904091482	WITHOUT_CLASSIFICATION	1.6609590851838806E-5	IMPLEMENTATION
sqlresulttypelist.add( type ) generate the select expression.	WITHOUT_CLASSIFICATION	0.9999434049930387	WITHOUT_CLASSIFICATION	5.659500696120508E-5	IMPLEMENTATION
if the expression list has exactly one expression and the type of the expression is a collection then this might be a collection function such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.999991543596414	WITHOUT_CLASSIFICATION	8.45640358608385E-6	IMPLEMENTATION
need to parse off the column qualifiers this is assuming (which is true as of now) that this is only used from update and delete hql statement parsing	WITHOUT_CLASSIFICATION	0.9999082239966467	WITHOUT_CLASSIFICATION	9.177600335336454E-5	IMPLEMENTATION
for regression testing against output from the old parser found it easiest to simply reorder the fromelements here into ascending order in terms of injecting them into the resulting sql ast in orders relative to those expected by the old parser this is definitely another of those "only needed for regression purposes". the syntheticandfactory then simply injects them as it encounters them.	WITHOUT_CLASSIFICATION	0.999827828953048	WITHOUT_CLASSIFICATION	1.721710469520959E-4	IMPLEMENTATION
the uber-rule here is that we need to include subclass joins if the fromelement is in any way dereferenced by a property from the subclass table otherwise we end up with column references qualified by a non-existent table reference in the resulting sql	WITHOUT_CLASSIFICATION	0.9999995052194489	WITHOUT_CLASSIFICATION	4.947805511007293E-7	IMPLEMENTATION
classic translator does not support collection of ordinal param metadata	WITHOUT_CLASSIFICATION	0.9944588463244678	WITHOUT_CLASSIFICATION	0.005541153675532197	IMPLEMENTATION
the following variables are stacks that keep information about each subexpression in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999997882792088	WITHOUT_CLASSIFICATION	2.1172079128815786E-7	IMPLEMENTATION
the loop ensures atomicity of the select + update even for no transaction or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999999468263115	WITHOUT_CLASSIFICATION	5.3173688535091707E-8	IMPLEMENTATION
should not be able to reach last without maxposition being set unless there are no results	WITHOUT_CLASSIFICATION	0.9993888368153597	WITHOUT_CLASSIFICATION	6.111631846402194E-4	IMPLEMENTATION
we found it in the temp pc. should indicate we are in the midst of processing a result set containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999276296004115	WITHOUT_CLASSIFICATION	7.237039958859243E-5	IMPLEMENTATION
do not use proxiesbykey since not all proxies that point to this session's instances are in that collection!	WITHOUT_CLASSIFICATION	0.9977034136895712	WITHOUT_CLASSIFICATION	0.0022965863104287337	IMPLEMENTATION
if there is no tm configured we will not be able to access the javax.transaction.transaction object in order to register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999984158116227	WITHOUT_CLASSIFICATION	1.5841883773018278E-6	IMPLEMENTATION
since the result set cursor is always left at the first physical row after the "last processed" we need to jump back one position to get the key value we are interested in skipping	WITHOUT_CLASSIFICATION	0.9999998474975631	WITHOUT_CLASSIFICATION	1.5250243698148775E-7	IMPLEMENTATION
true if this is a query and we are loading multiple instances of the same collection role otherwise this is a collectioninitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999719487470169	WITHOUT_CLASSIFICATION	2.8051252983115833E-5	IMPLEMENTATION
we don't need to worry about existing version being uninitialized because this block isn't called by a re-entrant load (re-entrant loads _always_ have lock mode none)	WITHOUT_CLASSIFICATION	0.9999169648325642	WITHOUT_CLASSIFICATION	8.303516743574269E-5	IMPLEMENTATION
add temp entry so that the next step is circular-reference safe - only needed because some types don't take proper advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.8608884576768208	IMPLEMENTATION	0.1391115423231793	WITHOUT_CLASSIFICATION
assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999998481089782	WITHOUT_CLASSIFICATION	1.5189102185031612E-7	IMPLEMENTATION
log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9817334817934881	WITHOUT_CLASSIFICATION	0.018266518206511838	IMPLEMENTATION
ps.close() just close it do not try to return it to the pool! note early exit!	WITHOUT_CLASSIFICATION	0.999748007910265	WITHOUT_CLASSIFICATION	2.5199208973494293E-4	IMPLEMENTATION
this has been shown to happen occasionally in rare cases when using a transaction manager + transaction-timeout where the timeout calls back through hibernate's registered transaction synchronization on a separate "reaping" thread. in cases where that reaping thread executes through this block at the same time the main application thread does we can get into situations where these cmes occur. and though it is not "allowed" per-se the end result without handling it specifically is infinite looping. so here we simply break the loop	WITHOUT_CLASSIFICATION	0.9996028920529215	WITHOUT_CLASSIFICATION	3.9710794707847544E-4	IMPLEMENTATION
unfortunately this stuff can't be cached because it is per-invocation not constant for the querytranslator instance	WITHOUT_CLASSIFICATION	0.9996769355764583	WITHOUT_CLASSIFICATION	3.2306442354161597E-4	IMPLEMENTATION
can't cache this stuff either (per-invocation) we are given a map of user-alias -> lock mode create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999831693725797	WITHOUT_CLASSIFICATION	1.683062742032542E-5	IMPLEMENTATION
don't create a unique key 'cos some databases don't like a uk on nullable columns getcollectiontable().createuniquekey( getidentifier().getconstraintcolumns() )	WITHOUT_CLASSIFICATION	0.9988209574447542	WITHOUT_CLASSIFICATION	0.00117904255524583	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999217080285785	WITHOUT_CLASSIFICATION	7.829197142148615E-5	IMPLEMENTATION
isset = collection.isset() issorted = collection.issorted()	WITHOUT_CLASSIFICATION	0.9998307994426365	WITHOUT_CLASSIFICATION	1.6920055736352027E-4	IMPLEMENTATION
lists arrays sets maps bags	WITHOUT_CLASSIFICATION	0.999988341501446	WITHOUT_CLASSIFICATION	1.1658498553988802E-5	IMPLEMENTATION
we finish all the "removes" first to take care of possible unique constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9985528502996474	WITHOUT_CLASSIFICATION	0.0014471497003527172	IMPLEMENTATION
use a combination of foreign key columns and pk columns since the ordering of removal and addition is not guaranteed when a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9996932871761409	WITHOUT_CLASSIFICATION	3.0671282385913255E-4	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or entityinfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999217080285785	WITHOUT_CLASSIFICATION	7.829197142148615E-5	IMPLEMENTATION
information about properties of this class including inherited properties (only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9472650449641017	WITHOUT_CLASSIFICATION	0.0527349550358983	IMPLEMENTATION
all this only really needs to consider properties of this class not its subclasses but since we are reusing code used for sequential selects we use the subclass closure	WITHOUT_CLASSIFICATION	0.9999650139382122	WITHOUT_CLASSIFICATION	3.498606178769189E-5	IMPLEMENTATION
here we render the select column list based on the properties defined as being generated. for partial component generation we currently just re-select the whole component rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999987822478229	WITHOUT_CLASSIFICATION	1.2177521772072392E-6	IMPLEMENTATION
this is the root (versioned) table and we are using version-based optimistic locking if we are not updating the version also don't check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9936274746030676	WITHOUT_CLASSIFICATION	0.006372525396932436	IMPLEMENTATION
optimistic-lock="all" include all updatable properties optimistic-lock="dirty" include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9998653542672509	WITHOUT_CLASSIFICATION	1.3464573274913673E-4	IMPLEMENTATION
this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9992295061240923	WITHOUT_CLASSIFICATION	7.704938759076692E-4	IMPLEMENTATION
check to see if the connection is in auto-commit mode (no connection means aggressive connection release outside a jta transaction context so must be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999881575779144	WITHOUT_CLASSIFICATION	1.1842422085719108E-5	IMPLEMENTATION
need to treat this as if it where optimistic-lock="all" (dirty does not make sense) first we need to locate the "loaded" state note it potentially could be a proxy so perform the location the safe way	WITHOUT_CLASSIFICATION	0.9978967710438871	WITHOUT_CLASSIFICATION	0.002103228956112926	IMPLEMENTATION
we always assume an instance with a null identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999979099462705	WITHOUT_CLASSIFICATION	2.0900537296331405E-6	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9999810710048872	WITHOUT_CLASSIFICATION	1.8928995112755448E-5	IMPLEMENTATION
allow any identifier quoted with backtick only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999395489953551	WITHOUT_CLASSIFICATION	6.045100464487987E-5	IMPLEMENTATION
following doesn't handle (null not null) but unnecessary since this would mean all rows	WITHOUT_CLASSIFICATION	0.9998461529946718	WITHOUT_CLASSIFICATION	1.5384700532821924E-4	IMPLEMENTATION
impl note due to the delayed population of setters (setters cached for performance) we really cannot pro0perly define equality for this transformer	WITHOUT_CLASSIFICATION	0.9999988833474044	WITHOUT_CLASSIFICATION	1.1166525955934731E-6	IMPLEMENTATION
we need to dirty check collections since they can cause an owner version number increment	WITHOUT_CLASSIFICATION	0.9967552071679415	WITHOUT_CLASSIFICATION	0.003244792832058593	IMPLEMENTATION
return the id so we can use it to reset the proxy id return result	WITHOUT_CLASSIFICATION	0.9989929472725929	WITHOUT_CLASSIFICATION	0.0010070527274070851	IMPLEMENTATION
optimizer = getfactory().getsettings().getbytecodeprovider().getreflectionoptimizer( mappedclass getternames setternames proptypes )	WITHOUT_CLASSIFICATION	0.9997243165750487	WITHOUT_CLASSIFICATION	2.756834249513719E-4	IMPLEMENTATION
cache the actual id of the object not the value of the property-ref which might not be initialized	WITHOUT_CLASSIFICATION	0.9978044146291126	WITHOUT_CLASSIFICATION	0.0021955853708873056	IMPLEMENTATION
we now have the value of the property-ref we reference. however we need to dig a little deeper as that property might also be an entity type in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999866873244636	WITHOUT_CLASSIFICATION	1.3312675536353428E-5	IMPLEMENTATION
retrieve the value of the designated column in the current row of this resultset object as a java.io.reader object	WITHOUT_CLASSIFICATION	0.9999996819073715	WITHOUT_CLASSIFICATION	3.180926284726427E-7	IMPLEMENTATION
not absolutely necessary but helps for some equals()/hashcode() implementations	WITHOUT_CLASSIFICATION	0.9993609879597503	WITHOUT_CLASSIFICATION	6.390120402497747E-4	IMPLEMENTATION
this should be a call to resolve() not resolveidentifier() 'cos it might be a property-ref and we did not cache the referenced value	WITHOUT_CLASSIFICATION	0.9952494371337722	WITHOUT_CLASSIFICATION	0.004750562866227781	IMPLEMENTATION
if we have <tt>not-found="ignore"</tt> association mapped to a formula we always need to dirty check it so we can update the second-level cache	WITHOUT_CLASSIFICATION	0.9983806878072954	WITHOUT_CLASSIFICATION	0.0016193121927045428	IMPLEMENTATION
can't just return null here since that would cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999947548084369	WITHOUT_CLASSIFICATION	5.245191563094597E-6	IMPLEMENTATION
for arrays replaceelements() may return a different reference since the array length might not match	WITHOUT_CLASSIFICATION	0.9999577679567272	WITHOUT_CLASSIFICATION	4.2232043272728755E-5	IMPLEMENTATION
actual cache of the entries. soft references are used for both the keys and the values here since the values pertaining to the mru entries are kept in a seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.999999998968557	WITHOUT_CLASSIFICATION	1.0314430711000467E-9	IMPLEMENTATION
as soon as we encounter our first letter return the substring from that position	WITHOUT_CLASSIFICATION	0.9999962753641533	WITHOUT_CLASSIFICATION	3.7246358467994404E-6	IMPLEMENTATION
note expected in the syntax type=listenerclass ({sep}type=listenerclass) where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999989740836424	WITHOUT_CLASSIFICATION	1.0259163576523584E-6	IMPLEMENTATION
istransactioncallbackregistered denotes whether any hibernate transaction has registered as a callback against this jdbccontext only one such callback is allowed. directly serializing this value causes problems with jdbctransaction or really any transaction impl where the callback is local to the transaction instance itself since that transaction is not serialized along with the jdbccontext. thus we handle that fact here explicitly	WITHOUT_CLASSIFICATION	0.999994193807647	WITHOUT_CLASSIFICATION	5.806192352967813E-6	IMPLEMENTATION
note that for sequential scrolling we make the assumption that the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999475695089468	WITHOUT_CLASSIFICATION	5.243049105320027E-5	IMPLEMENTATION
we call getkeyfromresultset() here so that we can know the key value upon which to perform the breaking logic. however it is also then called from getrowfromresultset() which is certainly not the most efficient. but the call here is needed and there currently is no other way without refactoring of the doquery()/getrowfromresultset() methods	WITHOUT_CLASSIFICATION	0.9904497302362754	IMPLEMENTATION	0.009550269763724625	WITHOUT_CLASSIFICATION
this check is needed since processing leaves the cursor after the last physical row for the current logical row thus if we are after the last physical row this might be caused by either 1) scrolling to the last logical row 2) scrolling past the last logical row in the latter scenario the previous logical row really is the last logical row. in all other cases we should process back two logical records (the current logic row plus the previous logical row).	WITHOUT_CLASSIFICATION	0.9869649073070045	WITHOUT_CLASSIFICATION	0.013035092692995522	IMPLEMENTATION
and perform the load	WITHOUT_CLASSIFICATION	0.9998335713710965	WITHOUT_CLASSIFICATION	1.664286289034147E-4	IMPLEMENTATION
important reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999416757512399	WITHOUT_CLASSIFICATION	5.832424875999867E-5	IMPLEMENTATION
this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999499753848177	WITHOUT_CLASSIFICATION	5.00246151822297E-5	IMPLEMENTATION
we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999954919213956	WITHOUT_CLASSIFICATION	4.5080786043337555E-6	IMPLEMENTATION
we did not find a collection element in the result set so we ensure that a collection is created with the owner's identifier since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9979217276280568	WITHOUT_CLASSIFICATION	0.002078272371943292	IMPLEMENTATION
this is a collection initializer so we must create a collection for each of the passed-in keys to account for the possibility that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999889051702175	WITHOUT_CLASSIFICATION	1.1094829782399677E-5	IMPLEMENTATION
grab its state from the resultset and keep it in the session (but don't yet initialize the object itself) note that we acquire lockmode.read even if it was not requested	WITHOUT_CLASSIFICATION	0.99999894341111	WITHOUT_CLASSIFICATION	1.0565888900301115E-6	IMPLEMENTATION
a many-to-many decrement currentdepth here to allow join across the association table without exceeding max_fetch_depth (i.e. the "currentdepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999224465620812	WITHOUT_CLASSIFICATION	7.75534379188082E-5	IMPLEMENTATION
if not a composite key use "foo in (? ? ?)" for batching if no batch and not a composite key use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999242107119007	WITHOUT_CLASSIFICATION	7.57892880993081E-5	IMPLEMENTATION
the user visible aliases which are unknown to the superclass these are not the actual "physical" sql aliases	WITHOUT_CLASSIFICATION	0.9990193452946452	WITHOUT_CLASSIFICATION	9.806547053547538E-4	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999917184252471	WITHOUT_CLASSIFICATION	8.281574752888618E-6	IMPLEMENTATION
first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999917184252471	WITHOUT_CLASSIFICATION	8.281574752888618E-6	IMPLEMENTATION
it does not refer to an alias of a projection look for a property	WITHOUT_CLASSIFICATION	0.9999631340649426	WITHOUT_CLASSIFICATION	3.68659350573325E-5	IMPLEMENTATION
determine if the collection elements are entities	WITHOUT_CLASSIFICATION	0.9999988254057743	WITHOUT_CLASSIFICATION	1.1745942256872883E-6	IMPLEMENTATION
let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999869188219204	WITHOUT_CLASSIFICATION	1.3081178079622899E-5	IMPLEMENTATION
translates an ast join type (i.e. the token type) into a joinfragment.xxx join type. @param astjointype the ast join type (from hqlsqltokentypes or sqltokentypes) @return a joinfragment.xxx join type. @see joinfragment @see sqltokentypes	WITHOUT_CLASSIFICATION	0.9999945422149892	WITHOUT_CLASSIFICATION	5.457785010884224E-6	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999519016867634	WITHOUT_CLASSIFICATION	4.809831323659635E-5	IMPLEMENTATION
ignore	WITHOUT_CLASSIFICATION	0.9999519016867634	WITHOUT_CLASSIFICATION	4.809831323659635E-5	IMPLEMENTATION
}	WITHOUT_CLASSIFICATION	0.9999382300649257	WITHOUT_CLASSIFICATION	6.17699350743669E-5	IMPLEMENTATION
public list getcollectionaliases() { return collectionaliases } public list getcollectionowners() { return collectionowners } public list getcollectionowneraliases() { return collectionowneraliases } public list getcollectionpersisters() { return collectionpersisters } public map getalias2persister() { return alias2persister } public boolean iscollectioninitializer() { return iscollectioninitializer } public list getpersisters() { return persisters } public map getalias2owneralias() { return alias2owneralias } public list getscalartypes() { return scalartypes } public list getscalarcolumnaliases() { return scalarcolumnaliases } public list getpropertyresults() { return propertyresults } public list getcollectionpropertyresults() { return collectionresults } public map getalias2return() { return alias2return }	WITHOUT_CLASSIFICATION	0.9999851601959396	WITHOUT_CLASSIFICATION	1.4839804060405937E-5	IMPLEMENTATION
sqlqueryparser parser = new sqlqueryparser( sqlquery processor.getalias2persister() processor.getalias2return() aliases collaliases collpersisters suffixes collsuffixes ) sql = parser.process() namedparameterbindpoints = parser.getnamedparameters()	WITHOUT_CLASSIFICATION	0.9999465257961057	WITHOUT_CLASSIFICATION	5.347420389427672E-5	IMPLEMENTATION
include the discriminator and class-level where but not filters	WITHOUT_CLASSIFICATION	0.9998377503085211	WITHOUT_CLASSIFICATION	1.6224969147896526E-4	IMPLEMENTATION
sqlaliassuffixes[i] = element.getcolumnaliassuffix()	WITHOUT_CLASSIFICATION	0.9998307994426365	WITHOUT_CLASSIFICATION	1.6920055736352027E-4	IMPLEMENTATION
none because its the requested lock mode not the actual!	WITHOUT_CLASSIFICATION	0.9995412104211134	WITHOUT_CLASSIFICATION	4.587895788865263E-4	IMPLEMENTATION
at this point we have (drivingsqlalias) the sql alias of the driving table corresponding to the given user alias. however the driving table is not (necessarily) the table against which we want to apply locks. mainly the exception case here is joined-subclass hierarchies where we instead want to apply the lock against the root table (for all other strategies it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.921714336595089	WITHOUT_CLASSIFICATION	0.07828566340491108	IMPLEMENTATION
the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.999981443905672	WITHOUT_CLASSIFICATION	1.855609432798292E-5	IMPLEMENTATION
we have a mapped identifier property and the root of the incoming property path matched that identifier property	WITHOUT_CLASSIFICATION	0.9997050747612906	WITHOUT_CLASSIFICATION	2.9492523870952017E-4	IMPLEMENTATION
we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999124875847476	WITHOUT_CLASSIFICATION	8.75124152523558E-5	IMPLEMENTATION
both many-to-one and one-to-one are represented as a property. entitypersister is relying on this value to determine "lazy fetch groups" in terms of field-level interception. so we need to make sure that we return true here for the case of many-to-one and one-to-one with lazy="no-proxy" impl note - lazy="no-proxy" currently forces both lazy and unwrap to be set to true. the other case we are extremely interested in here is that of lazy="proxy" where lazy is set to true but unwrap is set to false. thus we use both here under the assumption that this return is really only ever used during persister construction to determine the lazy property/field fetch groupings. if that assertion changes then this check needs to change as well. partially this is an issue with the overloading of the term "lazy" here	WITHOUT_CLASSIFICATION	0.9999999762603913	WITHOUT_CLASSIFICATION	2.3739608733059096E-8	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999846794554073	WITHOUT_CLASSIFICATION	1.532054459265443E-5	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999846794554073	WITHOUT_CLASSIFICATION	1.532054459265443E-5	IMPLEMENTATION
roottablename = persistentclass.getroottable().getqualifiedname( factory.getdialect() factory.getdefaultcatalog() factory.getdefaultschema() )	WITHOUT_CLASSIFICATION	0.9997243165750487	WITHOUT_CLASSIFICATION	2.756834249513719E-4	IMPLEMENTATION
subclasses	WITHOUT_CLASSIFICATION	0.9999795805718199	WITHOUT_CLASSIFICATION	2.041942818012371E-5	IMPLEMENTATION
custom sql	WITHOUT_CLASSIFICATION	0.9999930892995278	WITHOUT_CLASSIFICATION	6.910700472268065E-6	IMPLEMENTATION
protected void initpropertypaths(final string pathfinal type typefinal string[] columnsfinal string[] formulatemplatesfinal mapping factory)throws mappingexception {addformulapropertypath(path type formulatemplates)initpropertypaths(path type columns formulatemplates factory)}	WITHOUT_CLASSIFICATION	0.9999961715687322	WITHOUT_CLASSIFICATION	3.828431267867299E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
custom sql (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999847000499538	WITHOUT_CLASSIFICATION	1.5299950046245836E-5	IMPLEMENTATION
moved up from abstractentitypersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999906538562247	WITHOUT_CLASSIFICATION	9.346143775324174E-6	IMPLEMENTATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
aliases for identifier ( alias.id ) skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999972949927123	WITHOUT_CLASSIFICATION	2.7050072876980553E-6	IMPLEMENTATION
decide which resultset to get the property value from	WITHOUT_CLASSIFICATION	0.9999911509175128	WITHOUT_CLASSIFICATION	8.849082487297677E-6	IMPLEMENTATION
note it is conceptually possible that a usertype could map null to a non-null value so the following is arguable	WITHOUT_CLASSIFICATION	0.9999920873177097	WITHOUT_CLASSIFICATION	7.912682290331715E-6	IMPLEMENTATION
the contract of entitytuplizer.determineconcretesubclassentityname says that returning null is an indication that the specified entity-name (this.getentityname) should be used.	WITHOUT_CLASSIFICATION	0.9999604367084544	WITHOUT_CLASSIFICATION	3.956329154554885E-5	IMPLEMENTATION
need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. using the collection's key type causes problems with property-ref keys	WITHOUT_CLASSIFICATION	0.9999810710048872	WITHOUT_CLASSIFICATION	1.8928995112755448E-5	IMPLEMENTATION
cache these since they are stateless this one could even be static	WITHOUT_CLASSIFICATION	0.9999911407728098	WITHOUT_CLASSIFICATION	8.859227190095395E-6	IMPLEMENTATION
"as" is not in keywords	WITHOUT_CLASSIFICATION	0.9999389236670677	WITHOUT_CLASSIFICATION	6.107633293229498E-5	IMPLEMENTATION
--commented out by inspection (12/4/04 910 am) public abstract void addcondition(string alias string[] columns string condition)	WITHOUT_CLASSIFICATION	0.9999998626622376	WITHOUT_CLASSIFICATION	1.3733776237861763E-7	IMPLEMENTATION
use the id column alias	WITHOUT_CLASSIFICATION	0.9998327655695289	WITHOUT_CLASSIFICATION	1.6723443047104742E-4	IMPLEMENTATION
private list aliases = new arraylist()	WITHOUT_CLASSIFICATION	0.9999713662484145	WITHOUT_CLASSIFICATION	2.863375158538406E-5	IMPLEMENTATION
columns.add(columnname) aliases.add(tablealias)	WITHOUT_CLASSIFICATION	0.99991349463163	WITHOUT_CLASSIFICATION	8.650536836989225E-5	IMPLEMENTATION
where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999481030778647	WITHOUT_CLASSIFICATION	5.18969221352832E-5	IMPLEMENTATION
revert to traditional hibernate behavior of setting initialpoolsize to minpoolsize unless otherwise specified with a c3p0.-style parameter.	WITHOUT_CLASSIFICATION	0.9999022544402344	WITHOUT_CLASSIFICATION	9.774555976561902E-5	IMPLEMENTATION
arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9997480453263418	WITHOUT_CLASSIFICATION	2.5195467365818385E-4	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9970170247505993	WITHOUT_CLASSIFICATION	0.0029829752494008226	IMPLEMENTATION
might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9970170247505993	WITHOUT_CLASSIFICATION	0.0029829752494008226	IMPLEMENTATION
if an exception occurs during flush user must call rollback()	WITHOUT_CLASSIFICATION	0.9999984185917773	WITHOUT_CLASSIFICATION	1.5814082226429067E-6	IMPLEMENTATION
essentially 1) if we have a local (hibernate) transaction in progress and it already has the usertransaction cached use that usertransaction to determine the status. 2) if a transaction manager has been located use that transaction manager to determine the status. 3) finally as the last resort try to lookup the usertransaction via jndi and use that to determine the status.	WITHOUT_CLASSIFICATION	0.999999511187319	WITHOUT_CLASSIFICATION	4.888126810198698E-7	IMPLEMENTATION
package	WITHOUT_CLASSIFICATION	0.9999549597436747	WITHOUT_CLASSIFICATION	4.5040256325463976E-5	IMPLEMENTATION
swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999331675617702	WITHOUT_CLASSIFICATION	6.683243822979021E-5	IMPLEMENTATION
ignore it	WITHOUT_CLASSIFICATION	0.9999167885256005	WITHOUT_CLASSIFICATION	8.321147439951327E-5	IMPLEMENTATION
we need to dirty check many-to-ones with not-found="ignore" in order to update the cache (not the database) since in this case a null entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999861018256406	WITHOUT_CLASSIFICATION	1.389817435937227E-5	IMPLEMENTATION
create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.999989061282505	WITHOUT_CLASSIFICATION	1.0938717495150149E-5	IMPLEMENTATION
regions can get instantiated in the course of normal work (e.g. a named query region will be created the first time the query is executed) so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999999575648357	WITHOUT_CLASSIFICATION	4.243516429590952E-8	IMPLEMENTATION
then handle any user-defined entity modes	WITHOUT_CLASSIFICATION	0.9999130206825194	WITHOUT_CLASSIFICATION	8.697931748056904E-5	IMPLEMENTATION
establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.999701482700995	WITHOUT_CLASSIFICATION	2.985172990049426E-4	IMPLEMENTATION
temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999181776608117	WITHOUT_CLASSIFICATION	8.18223391882423E-5	IMPLEMENTATION
note this is being used from the process of shutting down a sessionfactory. specific things to consider (1) this clearing of the region should not propagate to other nodes on the cluster (if any) this is the cache-mode-local option bit (2) really just trying a best effort to cleanup after ourselves lock failures etc are not critical here this is the fail-silently option bit	WITHOUT_CLASSIFICATION	0.942633141994037	WITHOUT_CLASSIFICATION	0.057366858005962904	IMPLEMENTATION
need to extract the component values and check for subtype replacements	WITHOUT_CLASSIFICATION	0.9998720322946296	WITHOUT_CLASSIFICATION	1.2796770537042352E-4	IMPLEMENTATION
we ignore minimalputoverride. jbosscache putforexternalread is already about as minimal as we can get it will promptly return if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999516503379992	WITHOUT_CLASSIFICATION	4.83496620007424E-5	IMPLEMENTATION
for now just "re-flatten" the metamodel since this is temporary stuff anyway (hhh-1907)	WITHOUT_CLASSIFICATION	0.9999990168310448	WITHOUT_CLASSIFICATION	9.831689552547349E-7	IMPLEMENTATION
configure the cache to use our tm	WITHOUT_CLASSIFICATION	0.9999003959067723	WITHOUT_CLASSIFICATION	9.960409322779415E-5	IMPLEMENTATION
this solution would allow us to eliminate the owner arg to disassemble() but what if the collection was null and then later had elements added? seems unsafe session.getpersistencecontext().getcollectionentry( (persistentcollection) value ).getkey()	WITHOUT_CLASSIFICATION	0.999999080341684	WITHOUT_CLASSIFICATION	9.1965831604756E-7	IMPLEMENTATION
make sure jbc doesn't look one up	WITHOUT_CLASSIFICATION	0.9999060862891909	WITHOUT_CLASSIFICATION	9.391371080916026E-5	IMPLEMENTATION
some collections are not lazy	WITHOUT_CLASSIFICATION	0.9971755623451122	WITHOUT_CLASSIFICATION	0.0028244376548877854	IMPLEMENTATION
here we don't want to suspend the tx. if we do 1) we might be caching query results that reflect uncommitted changes. no tx == no wl on cache node so other threads can prematurely see those query results 2) no tx == immediate replication. more overhead plus we spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.7552819756855169	WITHOUT_CLASSIFICATION	0.244718024314483	IMPLEMENTATION
return the (fully resolved) identifier value but do not resolve to the actual referenced entity instance note the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999961605609724	WITHOUT_CLASSIFICATION	3.839439027547227E-6	IMPLEMENTATION
add a zero (or quite low) timeout option so we don't block. ignore any timeoutexception. basically we forego caching the query result in order to avoid blocking. reads are done with suspended tx so they should not hold the lock for long. not caching the query result is ok since any subsequent read will just see the old result with its out-of-date timestamp that result will be discarded and the db query performed again.	WITHOUT_CLASSIFICATION	0.9999999808417533	WITHOUT_CLASSIFICATION	1.915824670707078E-8	IMPLEMENTATION
impl note takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method	WITHOUT_CLASSIFICATION	0.9999740742267897	WITHOUT_CLASSIFICATION	2.5925773210212E-5	IMPLEMENTATION
we have the jbcwritemutex so no other local thread will be trying to write this key. it's possible here some remote thread has come in and changed the values again but since we are reading the values to write to jbc right now we know we are writing the latest values i.e. we don't assume that what we cached in entry.update() above is what we should write to jbc now. our write could be redundant i.e. we are writing what some remote thread just came in an wrote. there is a chance that yet another remote thread will update us and we'll then overwrite that later data in jbc. but all remote nodes will ignore that change in their localcache the only place it will live will be in jbc where it can only effect the initial state transfer values on newly joined nodes (i.e. populatelocalcache()).	WITHOUT_CLASSIFICATION	0.9999941218541092	WITHOUT_CLASSIFICATION	5.878145890804855E-6	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999326789674642	WITHOUT_CLASSIFICATION	6.732103253582806E-5	IMPLEMENTATION
local cache so we use synchronization	WITHOUT_CLASSIFICATION	0.9999326789674642	WITHOUT_CLASSIFICATION	6.732103253582806E-5	IMPLEMENTATION
don't need to lock the cache here since if someone else inserted the same pk first the insert would fail	WITHOUT_CLASSIFICATION	0.9999390442168076	WITHOUT_CLASSIFICATION	6.09557831924574E-5	IMPLEMENTATION
we need to grab the version value from the entity otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9989563747019308	WITHOUT_CLASSIFICATION	0.0010436252980692707	IMPLEMENTATION
we need to obtain the lock before any actions are executed since this may be an inverse="true" bidirectional association and it is one of the earlier entity actions which actually updates the database (this action is resposible for second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.999946495966354	WITHOUT_CLASSIFICATION	5.35040336460507E-5	IMPLEMENTATION
postdelete after actually deleting a row record the fact that the instance no longer exists on the database (needed for identity-column key generation) and remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999878670746014	WITHOUT_CLASSIFICATION	1.21329253985817E-5	IMPLEMENTATION
intentionally empty	WITHOUT_CLASSIFICATION	0.9972566883453845	WITHOUT_CLASSIFICATION	0.00274331165461551	IMPLEMENTATION
