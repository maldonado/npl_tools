IMPLEMENTATION	allow the mimetype of the file to control the content type this is not obvious in gui if you are not uploading any files but just sending the content of nameless parameters todo needs a multiple file upload scenerio
IMPLEMENTATION	allow the mimetype of the file to control the content type this is not obvious in gui if you are not uploading any files but just sending the content of nameless parameters todo needs a multiple file upload scenerio
IMPLEMENTATION	todo support multiple signers
IMPLEMENTATION	todo fetch this once as per vars above?
IMPLEMENTATION	todo add and delete not currently supported $non-nls-1$
IMPLEMENTATION	fix path to allow the use of unc urls
IMPLEMENTATION	have we reached the reporting boundary? need to allow for a margin of error otherwise can miss the slot. also need to check we've not hit the window already
IMPLEMENTATION	todo save hostname; save sample type (plain or http)
IMPLEMENTATION	todo auto-generated constructor stub
IMPLEMENTATION	remind convert arg list vectors here?
IMPLEMENTATION	it is chunked transfer encoding which we do not really support yet. so we just read without blocking because we do not know when to stop reading so we cannot block todo propery implement support for chunked transfer i.e. to know when we have read the whole request and therefore allow the reading to block
IMPLEMENTATION	todo somehow show progress
IMPLEMENTATION	todo ? perhaps note connection so it can be disconnected at end of test?
IMPLEMENTATION	allow the mimetype of the file to control the content type this is not obvious in gui if you are not uploading any files but just sending the content of nameless parameters todo needs a multiple file upload scenerio
IMPLEMENTATION	todo handle filenames
IMPLEMENTATION	not yet handled
IMPLEMENTATION	todo - should check that error has been logged
IMPLEMENTATION	set the overall status for the transaction sample todo improve e.g. by adding counts to the sampleresult class
IMPLEMENTATION	todo should this use setdone()? todo should this use setfirst()?
IMPLEMENTATION	should we exit at end of the test? (only applies to server because host is non-null)
IMPLEMENTATION	don't allow override of content-length todo - what other headers are not allowed?
IMPLEMENTATION	allow the mimetype of the file to control the content type this is not obvious in gui if you are not uploading any files but just sending the content of nameless parameters todo needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	class to be used to create the method. will be non-null if either class or object was provided during construction. can be used instead of invokee e.g. when using interfaces.
WITHOUT_CLASSIFICATION	if invokee was provided then clazz has been set up
WITHOUT_CLASSIFICATION	now eliminate any classpath entries that do not "match" the search
WITHOUT_CLASSIFICATION	finds all classes that extend the classes in the listsuperclasses arraylist searching in the listallclasses arraylist. @param superclasses the base classes to find subclasses for @param listallclasses the collection of classes to search in @param innerclasses indicate whether to include inner classes in the search @return arraylist of the subclasses
WITHOUT_CLASSIFICATION	finds all classes that extend the class searching in the listallclasses arraylist. @param theclass the parent class @param listallclasses the collection of classes to search in @param listsubclasses the collection of discovered subclasses @param innerclasses indicates whether inners classes should be included in the search
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	thread properties
WITHOUT_CLASSIFICATION	number of threads
WITHOUT_CLASSIFICATION	ramp-up
WITHOUT_CLASSIFICATION	loop count
WITHOUT_CLASSIFICATION	mainpanel.add(threadpropspanel borderlayout.north); add(mainpanel borderlayout.center);
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	sampler error action buttons
WITHOUT_CLASSIFICATION	defaults to continue
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ fields ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- methods -------------------------------------------
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- methods implemented from org.xml.sax.contenthandler -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	an additional note on using hashsets to store urls i just discovered that obtaining the hashcode of a java.net.url implies a domain-name resolution process. this means significant delays can occur even more so if the domain name is not resolvable. whether this can be a problem in practical situations i can't tell but thought i'd keep a note just in case btw note that using a list and removing duplicates via scan would not help since url.equals requires name resolution too. the above problem has now been addressed with the urlstring and urlcollection classes.
WITHOUT_CLASSIFICATION	a dummy class to pass the pointer of url.
WITHOUT_CLASSIFICATION	now parse the dom tree
WITHOUT_CLASSIFICATION	clear maps
WITHOUT_CLASSIFICATION	defaults
WITHOUT_CLASSIFICATION	if it was a http get request then all parameters in the url has been handled by the sampler.setpath above so we just need to do parse the rest of the request if it is not a get request
WITHOUT_CLASSIFICATION	check if it was a multipart http post request
WITHOUT_CLASSIFICATION	get the post data using the content encoding of the request
WITHOUT_CLASSIFICATION	we start to iterate through the elements
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	synchronize with fixedqueueexecutor
WITHOUT_CLASSIFICATION	jmsmessageid cannot be null
WITHOUT_CLASSIFICATION	++ these are jmx file names and must not be changed $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	+jmx file attribute names - do not change any values! $non-nls-1$
WITHOUT_CLASSIFICATION	this will only work with an applet .class file. ideally this should be upgraded to work with objects (ie) and archives (.jar and .zip) files as well.
WITHOUT_CLASSIFICATION	instantiate the sampler
WITHOUT_CLASSIFICATION	ok because find only returns correct element types
WITHOUT_CLASSIFICATION	property was found in a config element. whether or not it matched the value in the sampler we're done with this property -- don't look at lower-priority configs
WITHOUT_CLASSIFICATION	hashmap to save ssl connection between jmeter proxy and browser
WITHOUT_CLASSIFICATION	get the component parts assume domains must have at least 2 parts e.g. apache.org don't try matching against .org; however we don't check .co.uk here
WITHOUT_CLASSIFICATION	check if we found an accept-charset attribute on the form
WITHOUT_CLASSIFICATION	the next line looks odd but proxied http requests look like get httpwww.apache.org/foundation/ http/1.1 i.e. url starts with "http" not "/" whereas https proxy requests look like connect www.google.co.uk443 http/1.1 followed by get /?gws_rd=cr http/1.1
WITHOUT_CLASSIFICATION	a http response header looks alot like http/1.0 200 ok date wednesday 02-feb-94 230412 gmt server ncsa/1.1 mime-version 1.0 last-modified monday 15-nov-93 233316 gmt content-type text/html content-length 2345 \r\n
WITHOUT_CLASSIFICATION	count the retries as well in the time
WITHOUT_CLASSIFICATION	for result
WITHOUT_CLASSIFICATION	make sure the sample start time and sample end time are recorded in order not to confuse the statistics calculation methods if an error occurs and an exception is thrown it is possible that the result.samplestart() or result.sampleend() won't be called
WITHOUT_CLASSIFICATION	we've finished with the request so we can add the localaddress to it for display
WITHOUT_CLASSIFICATION	handle the various methods
WITHOUT_CLASSIFICATION	set up the local address if one exists
WITHOUT_CLASSIFICATION	a well-behaved browser is supposed to send 'connection close' with the last request to an http server. instead most browsers leave it to the server to close the connection after their timeout period. leave it to the jmeter user to decide.
WITHOUT_CLASSIFICATION	encoding does not really matter here
WITHOUT_CLASSIFICATION	add any files cannot retrieve parts once added to the multipartentity so have to save them here.
WITHOUT_CLASSIFICATION	we get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	in a post request which is not multipart we only support parameters no file upload is allowed
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the post body
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type this is not obvious in gui if you are not uploading any files but just sending the content of nameless parameters
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type this is not obvious in gui if you are not uploading any files but just sending the content of nameless parameters
WITHOUT_CLASSIFICATION	we use the encoding which should be used according to the http spec which is utf-8
WITHOUT_CLASSIFICATION	n.b. revision 323346 introduced the classcast check but then used iter.next() to fetch the item to be cast thus skipping the element that did not cast. reverted to work more like the original code but with the check in place. added a warning message so can track whether it is necessary
WITHOUT_CLASSIFICATION	don't break the world just because this failed
WITHOUT_CLASSIFICATION	if concurrent download emb. resources add to a list for async gets later
WITHOUT_CLASSIFICATION	thread pool executor to get resources use a linkedblockingqueue note max pool size doesn't effect
WITHOUT_CLASSIFICATION	the following three can be discussed should they be from the first request or from the final one? i chose to do it this way because that's what browsers do they show the final url of the redirect chain in the location field.
WITHOUT_CLASSIFICATION	commons httpclient only
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	make the connection ready for sending post data
WITHOUT_CLASSIFICATION	check if target of merge is reasonable
WITHOUT_CLASSIFICATION	we must ask the user if it is ok to close current project i.e. it is open
WITHOUT_CLASSIFICATION	don't change name if merging
WITHOUT_CLASSIFICATION	allow for missing optional jars
WITHOUT_CLASSIFICATION	does not appear to be used externally; called by #loadprojectfile()
WITHOUT_CLASSIFICATION	converttree(tree);
WITHOUT_CLASSIFICATION	if we are loading a new test plan initialize the tree with the testplan node we are loading
WITHOUT_CLASSIFICATION	these are handled specially by addtotree
WITHOUT_CLASSIFICATION	document doc = null;
WITHOUT_CLASSIFICATION	write to file
WITHOUT_CLASSIFICATION	make the connection ready for sending post data
WITHOUT_CLASSIFICATION	make the connection ready for sending post data
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.gui.action.command#getactionnames()
WITHOUT_CLASSIFICATION	boolean toreturn = true;
WITHOUT_CLASSIFICATION	don't automatically expand when merging
WITHOUT_CLASSIFICATION	+jmx file attributes - do not change values! $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ -jmx file attributes
WITHOUT_CLASSIFICATION	called by jmeter#startgui()
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	helper method to simplify code
WITHOUT_CLASSIFICATION	one builder for all requests in a thread
WITHOUT_CLASSIFICATION	but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	may well happen
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	note initialised with error = failure = false
WITHOUT_CLASSIFICATION	hc3.1 does not have the method
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	means counting from end
WITHOUT_CLASSIFICATION	no point continuing mainly for bsh.evalerror
WITHOUT_CLASSIFICATION	create a parser
WITHOUT_CLASSIFICATION	doc =
WITHOUT_CLASSIFICATION	if everything went fine then xml schema validation is valid
WITHOUT_CLASSIFICATION	only set message if error not yet flagged
WITHOUT_CLASSIFICATION	helper method to construct sax error details
WITHOUT_CLASSIFICATION	can be caused by - failure to read xsd file - xml does not match xsd
WITHOUT_CLASSIFICATION	can be caused by - premature end of file - non-whitespace content after trailer
WITHOUT_CLASSIFICATION	static int to signify the type of logical comparitor to assert
WITHOUT_CLASSIFICATION	is the sample the correct size?
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	use the name of the test element otherwise cannot enable/disable debug from the gui
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the signer certificate
WITHOUT_CLASSIFICATION	@param response @return
WITHOUT_CLASSIFICATION	has the sample lasted too long?
WITHOUT_CLASSIFICATION	ensure the manager is initialised we don't currently need to do anything further as this sets the default https protocol
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ these are the names of the get/set methods
WITHOUT_CLASSIFICATION	no point in checking if we don't have anything to compare against
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	create parser
WITHOUT_CLASSIFICATION	string md5result = digestutils.md5hex(resultdata);
WITHOUT_CLASSIFICATION	evaluate result
WITHOUT_CLASSIFICATION	package protected so can be accessed by test class
WITHOUT_CLASSIFICATION	return with an error
WITHOUT_CLASSIFICATION	these constants are used both for the jmx file and for the setters/getters $non-nls-1$
WITHOUT_CLASSIFICATION	return with an error
WITHOUT_CLASSIFICATION	flush
WITHOUT_CLASSIFICATION	run tidy.
WITHOUT_CLASSIFICATION	return with no error
WITHOUT_CLASSIFICATION	write output to file
WITHOUT_CLASSIFICATION	return with no error
WITHOUT_CLASSIFICATION	check if filename defined
WITHOUT_CLASSIFICATION	close file
WITHOUT_CLASSIFICATION	open file
WITHOUT_CLASSIFICATION	"" is not the same as no realm
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	no error as default
WITHOUT_CLASSIFICATION	mask should contain all types (but not not)
WITHOUT_CLASSIFICATION	the string to check (url or data)
WITHOUT_CLASSIFICATION	allow testing of failure codes
WITHOUT_CLASSIFICATION	what are we testing against?
WITHOUT_CLASSIFICATION	assume it is the url
WITHOUT_CLASSIFICATION	assume it is the url
WITHOUT_CLASSIFICATION	do it once outside loop
WITHOUT_CLASSIFICATION	not should always succeed against an empty result
WITHOUT_CLASSIFICATION	get the matcher for this thread
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	+ jmx file attributes $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ - jmx file attributes
WITHOUT_CLASSIFICATION	reset the bsh.interpreter before each execution
WITHOUT_CLASSIFICATION	script file name (if present)
WITHOUT_CLASSIFICATION	parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	script area
WITHOUT_CLASSIFICATION	don't let the input field shrink too much
WITHOUT_CLASSIFICATION	send post data from <code>entry</code> to the open connection. @param connection <code>urlconnection</code> where post data should be sent @return a string show what was posted. will not contain actual file upload content @exception ioexception if an i/o exception occurs
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	file panel $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	assume it is the url
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	class attributes
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	doctype
WITHOUT_CLASSIFICATION	doctype
WITHOUT_CLASSIFICATION	names for the fields $non-nls-1$
WITHOUT_CLASSIFICATION	instance attributes
WITHOUT_CLASSIFICATION	format (hmtl xhtml xml)
WITHOUT_CLASSIFICATION	errors only
WITHOUT_CLASSIFICATION	thresholds
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	drop the last character
WITHOUT_CLASSIFICATION	store the operator
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	put the check boxes in a column in a panel
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	assume url
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	user_input
WITHOUT_CLASSIFICATION	initialize to empty string this will fail the assertion
WITHOUT_CLASSIFICATION	md5hexinput.addfocuslistener(this);
WITHOUT_CLASSIFICATION	@return
WITHOUT_CLASSIFICATION	should tidy be quiet?
WITHOUT_CLASSIFICATION	@param element
WITHOUT_CLASSIFICATION	should we download external dtds?
WITHOUT_CLASSIFICATION	called by xpathassertiongui
WITHOUT_CLASSIFICATION	report tidy errors as assertion failure?
WITHOUT_CLASSIFICATION	process tolerant settings
WITHOUT_CLASSIFICATION	show tidy warnings ?
WITHOUT_CLASSIFICATION	called by xpathassertiongui
WITHOUT_CLASSIFICATION	non-tidy options
WITHOUT_CLASSIFICATION	tidy options
WITHOUT_CLASSIFICATION	called by xpathextractorgui
WITHOUT_CLASSIFICATION	called by xpathextractorgui
WITHOUT_CLASSIFICATION	samp.setdomain(this.getdomain()); samp.setport(this.getport());
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	panel.add(signercheckbyfile);
WITHOUT_CLASSIFICATION	access needed from csvdataset
WITHOUT_CLASSIFICATION	store the resource keys
WITHOUT_CLASSIFICATION	default (e.g. if test plan does not have definition)
WITHOUT_CLASSIFICATION	n.b. this class is shared between threads (nothreadclone) so all access to variables needs to be protected by a lock (either sync. or volatile) to ensure safe publication.
WITHOUT_CLASSIFICATION	this class is not cloned per thread so this is shared
WITHOUT_CLASSIFICATION	used for per-thread/user numbers cannot be static as random numbers are not to be shared between instances
WITHOUT_CLASSIFICATION	nextint(n) returns values in the range [0n) so n must be set to max-min+1
WITHOUT_CLASSIFICATION	this can overflow
WITHOUT_CLASSIFICATION	this is used as an error indicator
WITHOUT_CLASSIFICATION	check for overflow too
WITHOUT_CLASSIFICATION	cannot use getthreadcontext() as we are not cloned per thread
WITHOUT_CLASSIFICATION	use format to create number; if it fails use the default
WITHOUT_CLASSIFICATION	the original name of the property
WITHOUT_CLASSIFICATION	variables are unlikely to contain spaces so most likely a translation
WITHOUT_CLASSIFICATION	reset the value
WITHOUT_CLASSIFICATION	user-specified key
WITHOUT_CLASSIFICATION	treat the same as eof
WITHOUT_CLASSIFICATION	i.e. eof
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. must be in this class for the testbean code to work
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	allow for missing optional jars
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	these variable names must have .displayname properties and agree with the getxxx()/setxxx() methods $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	these group names must have .displayname properties $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	if we found a testplan then we are on our way to the testfragment
WITHOUT_CLASSIFICATION	only try to load the jmx test plan if there is one
WITHOUT_CLASSIFICATION	filter the tree for a testfragment.
WITHOUT_CLASSIFICATION	ensure counts are updated correctly
WITHOUT_CLASSIFICATION	these items are shared between threads in a group by the clone() method they are initialised by teststarted() so don't need to be serialised
WITHOUT_CLASSIFICATION	todo ?? (jmetertreenode) selectednode.clone();
WITHOUT_CLASSIFICATION	ensure global counters and lock are shared across threads in the group
WITHOUT_CLASSIFICATION	insert the subcontrollersandsamplers into random list positions.
WITHOUT_CLASSIFICATION	nodepath.add(selectednode.getname());
WITHOUT_CLASSIFICATION	we clone to avoid enabling existing node
WITHOUT_CLASSIFICATION	returns the selection value as a int with the value set to zero if it is out of range.
WITHOUT_CLASSIFICATION	set the selection once per iteration
WITHOUT_CLASSIFICATION	create a new list containing numelements null elements.
WITHOUT_CLASSIFICATION	replace subcontrollersandsamplers with reordered copy.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	set the position when next is first called and don't overwrite until reinitialize is called.
WITHOUT_CLASSIFICATION	setdone(true);
WITHOUT_CLASSIFICATION	we've gone through the whole list and are now back at the start point of our search.
WITHOUT_CLASSIFICATION	$non-nls-1$ throughput.addactionlistener(this);
WITHOUT_CLASSIFICATION	start/end index default value for string getters and setters
WITHOUT_CLASSIFICATION	implements unsharedcomponent
WITHOUT_CLASSIFICATION	although the default is not the same as for the string value it is only used internally
WITHOUT_CLASSIFICATION	although the default is not the same as for the string value it is only used internally
WITHOUT_CLASSIFICATION	prevent entry if nothing to do
WITHOUT_CLASSIFICATION	these must not be static otherwise language change does not work $non-nls-1$
WITHOUT_CLASSIFICATION	perthread field
WITHOUT_CLASSIFICATION	in case we are converting back from floating point drop the decimal fraction $non-nls-1$
WITHOUT_CLASSIFICATION	type field
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	text field
WITHOUT_CLASSIFICATION	standalone
WITHOUT_CLASSIFICATION	embedded
WITHOUT_CLASSIFICATION	jpanel looppanel = new jpanel(new borderlayout(5 0));
WITHOUT_CLASSIFICATION	only replace default if it is provided
WITHOUT_CLASSIFICATION	may be null for put in an application/x-www-form-urlencoded request we only support parameters no file upload is allowed
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	implements unsharedcomponent
WITHOUT_CLASSIFICATION	fetch some variables
WITHOUT_CLASSIFICATION	loop label $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx file attributes $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ - jmx file attributes
WITHOUT_CLASSIFICATION	checkbox $non-nls-1$
WITHOUT_CLASSIFICATION	================= internal business =================
WITHOUT_CLASSIFICATION	drop-down menu
WITHOUT_CLASSIFICATION	number of previous matches
WITHOUT_CLASSIFICATION	reset previous result
WITHOUT_CLASSIFICATION	e.g. dtd not reachable
WITHOUT_CLASSIFICATION	this method assumes utf-8 input data
WITHOUT_CLASSIFICATION	can happen for bad input document
WITHOUT_CLASSIFICATION	============= object properties ================
WITHOUT_CLASSIFICATION	permissible values true - match against headers false or absent - match against body (this was the original default) url - match against url these are passed to the setusefield() method do not change these values!
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	will already have been logged by xpathutil fail the sample
WITHOUT_CLASSIFICATION	just in case clear any other remaining variables
WITHOUT_CLASSIFICATION	what to match against. n.b. do not change the string value or test plans will break! $non-nls-1$
WITHOUT_CLASSIFICATION	note responsedata encoding is server specific therefore we do byte -> unicode -> byte conversion to ensure utf-8 encoding as required by xpathutil convert unicode string -> utf-8 bytes $non-nls-1$
WITHOUT_CLASSIFICATION	ensure old value is not left defined
WITHOUT_CLASSIFICATION	ensure old value is not left defined
WITHOUT_CLASSIFICATION	fetch some variables
WITHOUT_CLASSIFICATION	only replace default if it is provided
WITHOUT_CLASSIFICATION	note match.groups() includes group 0
WITHOUT_CLASSIFICATION	refname has already been set to the default (if present)
WITHOUT_CLASSIFICATION	number of refname_n variable sets to keep
WITHOUT_CLASSIFICATION	number of refname_n variable sets to keep
WITHOUT_CLASSIFICATION	save the count
WITHOUT_CLASSIFICATION	original match behaviour
WITHOUT_CLASSIFICATION	original match behaviour
WITHOUT_CLASSIFICATION	< 0 means we save all the matches
WITHOUT_CLASSIFICATION	remove any single matches
WITHOUT_CLASSIFICATION	remove any left-over variables
WITHOUT_CLASSIFICATION	no need to process further
WITHOUT_CLASSIFICATION	remove the group count
WITHOUT_CLASSIFICATION	how many groups are there?
WITHOUT_CLASSIFICATION	remove the remaining _gn vars
WITHOUT_CLASSIFICATION	trailing string is not empty
WITHOUT_CLASSIFICATION	contains strings and integers
WITHOUT_CLASSIFICATION	remove the g0g1gn vars
WITHOUT_CLASSIFICATION	add match as integer
WITHOUT_CLASSIFICATION	string is not empty
WITHOUT_CLASSIFICATION	allow for property not yet being set (probably only applies to test cases)
WITHOUT_CLASSIFICATION	random match
WITHOUT_CLASSIFICATION	for request data
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ e.g. "transfer-encoding chunked" which is processed automatically by the underlying protocol $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ pseudo-header for reporting local address $non-nls-1$ $non-nls-1$ $non-nls-1$ for handling caching $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ e.g. public max-age=259200 e.g. date header of response
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	use format to create number; if it fails use the default
WITHOUT_CLASSIFICATION	< 0 means we save all the matches
WITHOUT_CLASSIFICATION	save the count
WITHOUT_CLASSIFICATION	remove any left-over variables
WITHOUT_CLASSIFICATION	no need to process further
WITHOUT_CLASSIFICATION	random match
WITHOUT_CLASSIFICATION	next line
WITHOUT_CLASSIFICATION	next line
WITHOUT_CLASSIFICATION	used for per-thread/user storage of increment in thread group main loop
WITHOUT_CLASSIFICATION	so we know which button is selected
WITHOUT_CLASSIFICATION	reset
WITHOUT_CLASSIFICATION	used for per-thread/user numbers
WITHOUT_CLASSIFICATION	cannot use getthreadcontext() as not cloned per thread
WITHOUT_CLASSIFICATION	get to 'path' part of the url preserving schema auth host if present
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	this class is not cloned per thread so this is shared @guardedby("this")
WITHOUT_CLASSIFICATION	although the lock appears to be an instance lock in fact the lock is shared between all threads in a thread group but different thread groups have different locks - see the clone() method below the lock ensures that all the variables are processed together which is important for functions such as __csvread and _stringfromfile.
WITHOUT_CLASSIFICATION	lock object must exist
WITHOUT_CLASSIFICATION	ensure that clones share the same lock object
WITHOUT_CLASSIFICATION	super.mergein(element);
WITHOUT_CLASSIFICATION	don't process the name column
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	verify for a ".." component at next iteration
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	paramtable.setrowselectionallowed(true); paramtable.setcolumnselectionallowed(true);
WITHOUT_CLASSIFICATION	property values are strings
WITHOUT_CLASSIFICATION	paramtable.setcellselectionenabled(true); paramtable.setpreferredscrollableviewportsize(new dimension(100 70));
WITHOUT_CLASSIFICATION	send the mail
WITHOUT_CLASSIFICATION	send the mail
WITHOUT_CLASSIFICATION	create some properties and get the default session
WITHOUT_CLASSIFICATION	create a message
WITHOUT_CLASSIFICATION	this can't happen (how should utf8 not be supported!?!) so just throw an error
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	for request data
WITHOUT_CLASSIFICATION	setter/getter - javadoc-comments not needed
WITHOUT_CLASSIFICATION	-1 is the code for a failed sample.
WITHOUT_CLASSIFICATION	private void setsuccesscount(long count) { this.successcount = count; }
WITHOUT_CLASSIFICATION	private void setfailurecount(long count) { this.failurecount = count; }
WITHOUT_CLASSIFICATION	sends the result to the visualiser updates the model used for sending e-mails
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	action targets
WITHOUT_CLASSIFICATION	public static final int thread_group = 1;
WITHOUT_CLASSIFICATION	this means no sample is saved
WITHOUT_CLASSIFICATION	take copy so cannot get npe
WITHOUT_CLASSIFICATION	gui components
WITHOUT_CLASSIFICATION	private buttongroup actionbuttons;
WITHOUT_CLASSIFICATION	state variables
WITHOUT_CLASSIFICATION	target
WITHOUT_CLASSIFICATION	action
WITHOUT_CLASSIFICATION	duration
WITHOUT_CLASSIFICATION	the property name to be used to look up the display string
WITHOUT_CLASSIFICATION	for calculating throughput across all threads
WITHOUT_CLASSIFICATION	for holding the througputinfo objects for all threadgroups. keyed by abstractthreadgroup objects
WITHOUT_CLASSIFICATION	if previous time is zero then target will be in the past. this is what we want so first sample is run without a delay.
WITHOUT_CLASSIFICATION	assume the sample will run as soon as the delay has expired
WITHOUT_CLASSIFICATION	calculate the delay based on the mode
WITHOUT_CLASSIFICATION	n.b. we fetch the throughput each time as it may vary during a test
WITHOUT_CLASSIFICATION	total number of threads
WITHOUT_CLASSIFICATION	active threads in this group
WITHOUT_CLASSIFICATION	all threads - alternate calculation
WITHOUT_CLASSIFICATION	all threads in this group - alternate calculation
WITHOUT_CLASSIFICATION	no need to sync as one per instance
WITHOUT_CLASSIFICATION	add to cache
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	cannot happen
WITHOUT_CLASSIFICATION	string in the panel do not make these static otherwise language changes don't work $non-nls-1$
WITHOUT_CLASSIFICATION	we did not replace the entry so use the existing one
WITHOUT_CLASSIFICATION	e.g. 0 i.e. 1
WITHOUT_CLASSIFICATION	we're behind schedule -- try to catch up assume the sample will run immediately
WITHOUT_CLASSIFICATION	for access from test code
WITHOUT_CLASSIFICATION	synchronize on the info object's mutex to ensure multiple threads don't update the scheduled time simultaneously
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	for access from test code
WITHOUT_CLASSIFICATION	unique barrier creation ensured by synchronized setup
WITHOUT_CLASSIFICATION	must be defined
WITHOUT_CLASSIFICATION	instantiate requestview classes
WITHOUT_CLASSIFICATION	ensure transient object is created by the server
WITHOUT_CLASSIFICATION	delay deviation
WITHOUT_CLASSIFICATION	lazy init
WITHOUT_CLASSIFICATION	use later
WITHOUT_CLASSIFICATION	avg delay
WITHOUT_CLASSIFICATION	prepare the request tabbed pane
WITHOUT_CLASSIFICATION	place raw tab in first position (first tab)
WITHOUT_CLASSIFICATION	hint to background color on bottom tabs (grey not blue)
WITHOUT_CLASSIFICATION	we assume the argument value is encoded according to the http spec i.e. utf-8
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	create the panels for the regexp tab
WITHOUT_CLASSIFICATION	go to first line
WITHOUT_CLASSIFICATION	construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	add regexp tester pane $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	private static final int limit_str_size = 100; private boolean isroot;
WITHOUT_CLASSIFICATION	if other node type we will just skip it
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	description panel
WITHOUT_CLASSIFICATION	number panel
WITHOUT_CLASSIFICATION	information display panel
WITHOUT_CLASSIFICATION	boolean resized = true;
WITHOUT_CLASSIFICATION	rounds!
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	set up the table itself
WITHOUT_CLASSIFICATION	everyone is free to swing on its side ) add(infopanel borderlayout.east);
WITHOUT_CLASSIFICATION	note the resource string won't respond to locale-changes however this does not matter as it is only used when pasting to the clipboard
WITHOUT_CLASSIFICATION	dimension of the splinegraph is the same resized = false;
WITHOUT_CLASSIFICATION	sample number (string) start time thread name label sample time status bytes
WITHOUT_CLASSIFICATION	dimension changed resized = true;
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	add the main panel and the graph
WITHOUT_CLASSIFICATION	column renderers
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	table.gettableheader().setreorderingallowed(false);
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	make a internal list of all results to allow reload data with filter or interval
WITHOUT_CLASSIFICATION	default checked $non-nls-1$
WITHOUT_CLASSIFICATION	set up footer of table which displays numerics of the graphs
WITHOUT_CLASSIFICATION	generate x-axis label and associated color
WITHOUT_CLASSIFICATION	set up the table with footer
WITHOUT_CLASSIFICATION	sampler selection
WITHOUT_CLASSIFICATION	internal list of all results
WITHOUT_CLASSIFICATION	use for x-axis scale
WITHOUT_CLASSIFICATION	we check the count to see if we have exceeded the number of lines to parse. there's no way to know where to stop in the file. therefore we use break to escape the while loop when we've reached the count.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	reset colors index
WITHOUT_CLASSIFICATION	list of value by sampler
WITHOUT_CLASSIFICATION	we want to retain insertion order so linkedhashmap is necessary
WITHOUT_CLASSIFICATION	canvas size
WITHOUT_CLASSIFICATION	draw the graph
WITHOUT_CLASSIFICATION	test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	calculate intermediate values (if needed)
WITHOUT_CLASSIFICATION	log.debug("data["+s+"]["+idx+"] " + data[s][idx]);
WITHOUT_CLASSIFICATION	if clic on the graph tab make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	if use dynamic graph size is checked we disable the dimension fields
WITHOUT_CLASSIFICATION	force reload data
WITHOUT_CLASSIFICATION	not 'else if' because forcereloaddata
WITHOUT_CLASSIFICATION	reload data from file
WITHOUT_CLASSIFICATION	reload data form internal list of results
WITHOUT_CLASSIFICATION	calculate the test duration. needs to xaxis labels and getdata.
WITHOUT_CLASSIFICATION	button
WITHOUT_CLASSIFICATION	button
WITHOUT_CLASSIFICATION	search field
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	$non-nls-1$ default bold
WITHOUT_CLASSIFICATION	default circle
WITHOUT_CLASSIFICATION	default option
WITHOUT_CLASSIFICATION	keep copies of the two editors needed
WITHOUT_CLASSIFICATION	could be <html lang=""> $non-nls-1$
WITHOUT_CLASSIFICATION	look for a case variation
WITHOUT_CLASSIFICATION	ditto $non-nls-1$
WITHOUT_CLASSIFICATION	to disable downloading and rendering of images and frames enable the editor-kit. the stream property can then be
WITHOUT_CLASSIFICATION	must be done before setcontenttype
WITHOUT_CLASSIFICATION	now we create the compiled pattern and add it to the arraylist
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the child to be removed will always be 0 'cos as the nodes are removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	get the text response and image icon to determine which is not null
WITHOUT_CLASSIFICATION	bug can generate rte
WITHOUT_CLASSIFICATION	number of nodes
WITHOUT_CLASSIFICATION	number of non extreme nodes (_m-2)
WITHOUT_CLASSIFICATION	the number of nodes is defined by the length of r
WITHOUT_CLASSIFICATION	grab the nodes
WITHOUT_CLASSIFICATION	computes interpolation coefficients
WITHOUT_CLASSIFICATION	creation of the interpolation structure
WITHOUT_CLASSIFICATION	local variables
WITHOUT_CLASSIFICATION	local variables
WITHOUT_CLASSIFICATION	initialize system structures (just to be safe)
WITHOUT_CLASSIFICATION	initialize the diagonal of the system matrix (a) to 4
WITHOUT_CLASSIFICATION	initialize the two minor diagonals of a to 1
WITHOUT_CLASSIFICATION	initialize b
WITHOUT_CLASSIFICATION	di (degree 0)
WITHOUT_CLASSIFICATION	ci (degree 1)
WITHOUT_CLASSIFICATION	bi (degree 2)
WITHOUT_CLASSIFICATION	ai (degree 3)
WITHOUT_CLASSIFICATION	intermediate arrays
WITHOUT_CLASSIFICATION	jacobi convergence test
WITHOUT_CLASSIFICATION	init newx and oldx arrays to 0
WITHOUT_CLASSIFICATION	main iteration
WITHOUT_CLASSIFICATION	verify t belongs to the curve (range [0 _m-1])
WITHOUT_CLASSIFICATION	silent error consider the curve is constant outside its range
WITHOUT_CLASSIFICATION	seek the good interval for t and get the piece of curve on it
WITHOUT_CLASSIFICATION	the polynomial calculation is done by the (fast) euler method
WITHOUT_CLASSIFICATION	computes auto-scaling and absolute plots
WITHOUT_CLASSIFICATION	shouldn't draw negative values
WITHOUT_CLASSIFICATION	we want to return the context that is actually in the map if it's the first put we will have a null result
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	settings panes
WITHOUT_CLASSIFICATION	the number of non extreme nodes is the number of intervals minus 1 i.e. the length of r minus 2
WITHOUT_CLASSIFICATION	the upper limit of the curve range belongs by definition to the last interval
WITHOUT_CLASSIFICATION	jacobi system resolving results are stored in _rs computes the coefficients (di ci bi ai) from the results
WITHOUT_CLASSIFICATION	computes relative auto-scaled plots to fit in the specified area
WITHOUT_CLASSIFICATION	computes the value of the curve at the pecified abscissa and relative to the beginning of the right piece of spline curve
WITHOUT_CLASSIFICATION	return label
WITHOUT_CLASSIFICATION	initialize gui.
WITHOUT_CLASSIFICATION	show the grid lines to turn it off set it to zero
WITHOUT_CLASSIFICATION	test mail button
WITHOUT_CLASSIFICATION	reset the paint counter
WITHOUT_CLASSIFICATION	failures count
WITHOUT_CLASSIFICATION	set the y axis to round
WITHOUT_CLASSIFICATION	does not need to be synch. because it is only accessed from the sampler thread the clientpool does access it in a different thread but clientpool is fully synch.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	used by request panel $non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#init()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#cleardata()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	go to first line
WITHOUT_CLASSIFICATION	construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	don't display request headers label if rh is null or empty
WITHOUT_CLASSIFICATION	implementation of the actionlistener-interface.
WITHOUT_CLASSIFICATION	methods used to store and retrieve the mailervisualizer.
WITHOUT_CLASSIFICATION	methods to implement the modellistener.
WITHOUT_CLASSIFICATION	$non-nls-1$ don't set empty to keep cssjquery cssjqueryfield.settext(""); $non-nls-1$ $non-nls-1$ don't set empty to keep attribute this.attributefield.settext(""); $non-nls-1$ don't change impl this.cssjquerylabeledchoice.settext(htmlextractor.default_extractor);
WITHOUT_CLASSIFICATION	create the panels for the cssjquery tab
WITHOUT_CLASSIFICATION	most current subclasses can process text
WITHOUT_CLASSIFICATION	could be sampleresult or assertionresult
WITHOUT_CLASSIFICATION	add a message when no request data (ex. java request)
WITHOUT_CLASSIFICATION	to save last select tab (raw/parsed)
WITHOUT_CLASSIFICATION	result column renderers
WITHOUT_CLASSIFICATION	response headers column renderers
WITHOUT_CLASSIFICATION	response fields column renderers
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	add cssjquery tester pane $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	n.b. these are not multi-threaded so don't make it static iso format $non-nls-1$
WITHOUT_CLASSIFICATION	one space for blank header $non-nls-1$ one space for blank header $non-nls-1$
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	create tables the object used for each row
WITHOUT_CLASSIFICATION	response data $non-nls-1$ request data $non-nls-1$ sampler result $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ create the panels for the other tabs
WITHOUT_CLASSIFICATION	clear all data before display a new
WITHOUT_CLASSIFICATION	we are displaying a sampleresult
WITHOUT_CLASSIFICATION	reset for reuse
WITHOUT_CLASSIFICATION	reset for reuse
WITHOUT_CLASSIFICATION	no need to change the foreground color
WITHOUT_CLASSIFICATION	response message label
WITHOUT_CLASSIFICATION	done
WITHOUT_CLASSIFICATION	parsed response headers
WITHOUT_CLASSIFICATION	reset search
WITHOUT_CLASSIFICATION	restore tabbed pane parsed if needed
WITHOUT_CLASSIFICATION	restore last selected tab
WITHOUT_CLASSIFICATION	remove the other (parsed) tab if present
WITHOUT_CLASSIFICATION	cache for object-message only used when parsing from a file because in text-area property replacement might have been used
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	hint to background color on bottom tabs (grey not blue)
WITHOUT_CLASSIFICATION	set up the 1st table result with empty headers
WITHOUT_CLASSIFICATION	quieten findbugs default - do nothing
WITHOUT_CLASSIFICATION	add styles to use for different types of status messages
WITHOUT_CLASSIFICATION	prepare the results tabbed pane
WITHOUT_CLASSIFICATION	set up the 3rd table
WITHOUT_CLASSIFICATION	set up the 2nd table
WITHOUT_CLASSIFICATION	create the split pane
WITHOUT_CLASSIFICATION	create the split pane
WITHOUT_CLASSIFICATION	add search text extension
WITHOUT_CLASSIFICATION	maximum size that we will display
WITHOUT_CLASSIFICATION	add sample
WITHOUT_CLASSIFICATION	add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	prepare the common tab
WITHOUT_CLASSIFICATION	init right side with first render
WITHOUT_CLASSIFICATION	to restore last tab used
WITHOUT_CLASSIFICATION	drop-down list for renderer
WITHOUT_CLASSIFICATION	if no results render in jmeter.properties load standard (default)
WITHOUT_CLASSIFICATION	instantiate render classes
WITHOUT_CLASSIFICATION	preset to "text" option
WITHOUT_CLASSIFICATION	to restore last selected tab (better user-friendly)
WITHOUT_CLASSIFICATION	remove old right side
WITHOUT_CLASSIFICATION	create and add a new right side
WITHOUT_CLASSIFICATION	to display current sampler result before change
WITHOUT_CLASSIFICATION	in the case the test uses a file we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	the child to be removed will always be 0 'cos as the nodes are removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	processes assertions display a sampleresult
WITHOUT_CLASSIFICATION	set the status for the node
WITHOUT_CLASSIFICATION	noop state is held by component
WITHOUT_CLASSIFICATION	textarea label
WITHOUT_CLASSIFICATION	textarea
WITHOUT_CLASSIFICATION	define max scale y axis
WITHOUT_CLASSIFICATION	if the title graph is empty we can assume some default
WITHOUT_CLASSIFICATION	replace _xaxistitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	stroke and shape line settings
WITHOUT_CLASSIFICATION	lines colors
WITHOUT_CLASSIFICATION	define chart type (line)
WITHOUT_CLASSIFICATION	y axis ruler
WITHOUT_CLASSIFICATION	~a tic every 50 px
WITHOUT_CLASSIFICATION	increment cannot be < 1
WITHOUT_CLASSIFICATION	manage legend placement
WITHOUT_CLASSIFICATION	return new dimension(width 400);
WITHOUT_CLASSIFICATION	int width = getwidth();
WITHOUT_CLASSIFICATION	will always be within range of an int as must be < width
WITHOUT_CLASSIFICATION	don't start yet if stop between samples
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	we want to retain insertion order so linkedhashmap is necessary
WITHOUT_CLASSIFICATION	define max scale y axis
WITHOUT_CLASSIFICATION	replace _xaxistitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	if the "title of graph" is empty we can assume some default
WITHOUT_CLASSIFICATION	same viewresultstree
WITHOUT_CLASSIFICATION	needed by visualizer interface
WITHOUT_CLASSIFICATION	educated guess
WITHOUT_CLASSIFICATION	if the labels are too long they'll be "squeezed" to make the chart viewable.
WITHOUT_CLASSIFICATION	y axis
WITHOUT_CLASSIFICATION	new font("sansserif" font.plain 10)
WITHOUT_CLASSIFICATION	enable embedded html resources
WITHOUT_CLASSIFICATION	----------- get/set methods -------------------
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	column renderers
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	synch is needed because multiple threads can update the counts.
WITHOUT_CLASSIFICATION	sortfiltermodel mysortedmodel = new sortfiltermodel(mystattablemodel);
WITHOUT_CLASSIFICATION	search field
WITHOUT_CLASSIFICATION	prepare highlighter to show text find with search command
WITHOUT_CLASSIFICATION	new search?
WITHOUT_CLASSIFICATION	save search position
WITHOUT_CLASSIFICATION	display not found message and reset search
WITHOUT_CLASSIFICATION	add listener to intercept texttofind changes and reset search
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	column renderers
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	reset search
WITHOUT_CLASSIFICATION	synch is needed because multiple threads can update the counts.
WITHOUT_CLASSIFICATION	buttons
WITHOUT_CLASSIFICATION	when enter is pressed search start
WITHOUT_CLASSIFICATION	default not visible
WITHOUT_CLASSIFICATION	search text in response data
WITHOUT_CLASSIFICATION	documentlistener method
WITHOUT_CLASSIFICATION	documentlistener method
WITHOUT_CLASSIFICATION	documentlistener method
WITHOUT_CLASSIFICATION	desactivate or not specials regexp char
WITHOUT_CLASSIFICATION	label count mean min max std dev. error %age throughput kb/sec avg. pagesize
WITHOUT_CLASSIFICATION	all rows have this class
WITHOUT_CLASSIFICATION	synch is needed because a clear can occur while add occurs
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	add the main panel and the graph
WITHOUT_CLASSIFICATION	a button for adding new arguments to the table. private jbutton add; a button for removing arguments from the table. private jbutton delete;
WITHOUT_CLASSIFICATION	force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	p.add(makebuttonpanel() borderlayout.south);
WITHOUT_CLASSIFICATION	new functor("setname") $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	ok because used in synchronised method
WITHOUT_CLASSIFICATION	we have received one more sample
WITHOUT_CLASSIFICATION	set up the graph with header footer y axis and graph display
WITHOUT_CLASSIFICATION	methods used in creating the gui
WITHOUT_CLASSIFICATION	protected void initializetablemodel() { tablemodel = new objecttablemodel( new string[] { argumentspanel.column_names_0 argumentspanel.column_names_1 encode_or_not include_equals } new functor[] { new functor("getname") new functor("getvalue") new functor("isalwaysencoded") new functor("isuseequals") } new functor[] { new functor("setname") new functor("setvalue") new functor("setalwaysencoded") new functor("setuseequals") } new class[] { string.class string.class boolean.class boolean.class }); }
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	column renderers
WITHOUT_CLASSIFICATION	default checked $non-nls-1$
WITHOUT_CLASSIFICATION	default checked $non-nls-1$
WITHOUT_CLASSIFICATION	default checked $non-nls-1$
WITHOUT_CLASSIFICATION	the text field should expand horizontally but have a fixed height
WITHOUT_CLASSIFICATION	this column actually consists of a row with two sub-columns the first column contains the labels and the second column contains the fields.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	sampler selection
WITHOUT_CLASSIFICATION	canvas size
WITHOUT_CLASSIFICATION	if clic on the graph tab make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	if use dynamic graph size is checked we disable the dimension fields
WITHOUT_CLASSIFICATION	force reload data
WITHOUT_CLASSIFICATION	not 'else if' because forcereloaddata
WITHOUT_CLASSIFICATION	button
WITHOUT_CLASSIFICATION	button
WITHOUT_CLASSIFICATION	search field
WITHOUT_CLASSIFICATION	checkboxes
WITHOUT_CLASSIFICATION	$non-nls-1$ default bold
WITHOUT_CLASSIFICATION	default option
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	$non-nls-1$ default normal
WITHOUT_CLASSIFICATION	label count mean median 90% min max error %age throughpur pagesize
WITHOUT_CLASSIFICATION	api expects null not empty array
WITHOUT_CLASSIFICATION	api expects null not empty array
WITHOUT_CLASSIFICATION	changing color for column
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	first lets draw the grid
WITHOUT_CLASSIFICATION	draw the x axis
WITHOUT_CLASSIFICATION	draw the y axis
WITHOUT_CLASSIFICATION	now draw the bar chart
WITHOUT_CLASSIFICATION	we sort the objects
WITHOUT_CLASSIFICATION	calculate the height
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the test plan has to have more than 200 samples for it to generate half way decent distribution graph. the larger the sample the better the results.
WITHOUT_CLASSIFICATION	if the height is less than one we set it to one pixel
WITHOUT_CLASSIFICATION	draw a red line for 90% point
WITHOUT_CLASSIFICATION	draw an orange line for 50% point
WITHOUT_CLASSIFICATION	"<?xml "
WITHOUT_CLASSIFICATION	skip the leading bytes (if any)
WITHOUT_CLASSIFICATION	there is also a javax.swing.text.document class.
WITHOUT_CLASSIFICATION	clear result tab on ctrl-e
WITHOUT_CLASSIFICATION	must return a valid node or may generate an npe
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	add the main panel and the graph
WITHOUT_CLASSIFICATION	we have received one more sample
WITHOUT_CLASSIFICATION	set up the graph with header footer y axis and graph display
WITHOUT_CLASSIFICATION	methods used in creating the gui
WITHOUT_CLASSIFICATION	these are not currently updated
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	this.graph.clear();
WITHOUT_CLASSIFICATION	compute the new spline curve
WITHOUT_CLASSIFICATION	do nothing wait for the next pile to complete
WITHOUT_CLASSIFICATION	made currentsample volatile
WITHOUT_CLASSIFICATION	find jmeter home dir from the initial classpath
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	java on mac os can add a second entry to the initial classpath $non-nls-1$
WITHOUT_CLASSIFICATION	e.g. started from ide with full classpath allow override $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	add standard jar locations to initial classpath
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	only accept jar files $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	usesunc
WITHOUT_CLASSIFICATION	classfinder needs the classpath
WITHOUT_CLASSIFICATION	ensure that directory urls end in "/" $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	classfinder needs this
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	make the addurl method visible
WITHOUT_CLASSIFICATION	needed for shutdownclient
WITHOUT_CLASSIFICATION	if the -t flag is to "last" then the last loaded file (if any) is used
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	reset it
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ jmeter.log $non-nls-1$ sample result log file $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	properties to be sent to remote servers
WITHOUT_CLASSIFICATION	should remote engines be stopped at end of non-gui test?
WITHOUT_CLASSIFICATION	check option combinations
WITHOUT_CLASSIFICATION	also initialises jmeter logging
WITHOUT_CLASSIFICATION	the following is needed for httpclient. (originally tried doing this in httpsampler2 but it appears that it was done too late when running in gui mode) set the commons logging default to avalon logkit if not already defined
WITHOUT_CLASSIFICATION	set some (hopefully!) useful properties
WITHOUT_CLASSIFICATION	start the server
WITHOUT_CLASSIFICATION	most recent
WITHOUT_CLASSIFICATION	update classloader if necessary
WITHOUT_CLASSIFICATION	bshinitlog);
WITHOUT_CLASSIFICATION	do what would be done earlier
WITHOUT_CLASSIFICATION	do what would be done earlier
WITHOUT_CLASSIFICATION	should not have any text arguments
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	for httpclient for httpclient
WITHOUT_CLASSIFICATION	process command line property definitions these can potentially occur multiple times
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	reset it
WITHOUT_CLASSIFICATION	set category
WITHOUT_CLASSIFICATION	set root level
WITHOUT_CLASSIFICATION	checks for last or lastsuffix. returns the last name with .jmx replaced by suffix.
WITHOUT_CLASSIFICATION	most recent $non-nls-1$
WITHOUT_CLASSIFICATION	run test in batch mode
WITHOUT_CLASSIFICATION	only add summariser if it can not be shared with the resultcollector
WITHOUT_CLASSIFICATION	not replaceable controller
WITHOUT_CLASSIFICATION	not enabled
WITHOUT_CLASSIFICATION	not enabled
WITHOUT_CLASSIFICATION	not a testelement
WITHOUT_CLASSIFICATION	not a replaceablecontroller
WITHOUT_CLASSIFICATION	listen to test and handle tidyup after non-gui test completes. if running a remote test then after waiting a few seconds for listeners to finish files it calls clientjmeterengine.tidyrmi() to deal with the naming timer thread.
WITHOUT_CLASSIFICATION	keep track of remote tests
WITHOUT_CLASSIFICATION	not yet used private jmeter _parent;
WITHOUT_CLASSIFICATION	_parent = unused;
WITHOUT_CLASSIFICATION	it will be null unless remotestop = true
WITHOUT_CLASSIFICATION	allow listeners to close files
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	allow enough time for jvm to exit
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	replacement only needs to occur when starting the engine @see standardjmeterengine.run()
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	deliberate use of deprecated ctor create non-gui version to avoid headless problems
WITHOUT_CLASSIFICATION	remove the disabled items for gui runs this is done in start.java
WITHOUT_CLASSIFICATION	this cannot be a jmeter class variable because properties are not initialised until later.
WITHOUT_CLASSIFICATION	this is a daemon thread which should only reach here if there are other non-daemon threads still active
WITHOUT_CLASSIFICATION	only accept commands from the local host
WITHOUT_CLASSIFICATION	needs to be public for tests
WITHOUT_CLASSIFICATION	needs to be public for testing
WITHOUT_CLASSIFICATION	skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	because collectionproperty.mergein will not prevent adding two properties of the same name we need to select the first value so that this element's values prevail over defaults provided by configuration elements
WITHOUT_CLASSIFICATION	will only contain argument or httpargument
WITHOUT_CLASSIFICATION	add(maketitlepanel() borderlayout.north);
WITHOUT_CLASSIFICATION	force the table to be at least 70 pixels high
WITHOUT_CLASSIFICATION	only contains argument (or httpargument)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	evaluate the condition which can be blank or last = was the last sampler ok? otherwise evaluate the condition to see if it is not "false" if blank only evaluate at the end of the loop must only be called at start and end of loop @param loopend - are we at loop end? @return true means ok to continue
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	hide window on esc
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	change to false after the first insert
WITHOUT_CLASSIFICATION	do update on enter
WITHOUT_CLASSIFICATION	in spite of the name this is actually used to determine if the loop controller is repeatable. the value is only used in nextisnull() when the loop end condition has been detected if forever==true then it calls resetloopcount() otherwise it calls setdone(true). loop controllers always set forever=true so that they will be executed next time the parent invokes them. thread group sets the value false so nextisnull() sets done and the thread group will not be repeated. however it's not clear that a thread group could ever be repeated.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	for unit test code @see testifcontroller
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	if blank only check previous sample when at end of loop $non-nls-1$
WITHOUT_CLASSIFICATION	cnd may be null if next() called us $non-nls-1$
WITHOUT_CLASSIFICATION	evaluation occurs when nbloops is not yet evaluated or when nbloops is equal to special value infinite_loop_count
WITHOUT_CLASSIFICATION	now evaluate the condition using javascript
WITHOUT_CLASSIFICATION	we should only evalute the condition if it is the first time ( first "iteration" ) we are called. for subsequent calls we are inside the ifcontrollergroup so then we just pass the control to the next item inside the if control
WITHOUT_CLASSIFICATION	if-test is false need to re-initialize indexes
WITHOUT_CLASSIFICATION	for getitercount
WITHOUT_CLASSIFICATION	runtime is zero - no point staying around
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	this is needed for onceonly to work like other loop controllers
WITHOUT_CLASSIFICATION	only create the map if it is required
WITHOUT_CLASSIFICATION	may be replaced by randomordercontroller
WITHOUT_CLASSIFICATION	incrementcurrent();
WITHOUT_CLASSIFICATION	must be a controller
WITHOUT_CLASSIFICATION	must be a controller
WITHOUT_CLASSIFICATION	can only match once
WITHOUT_CLASSIFICATION	i.e. "true"
WITHOUT_CLASSIFICATION	default true for compatibility
WITHOUT_CLASSIFICATION	/ transaction controller - parent
WITHOUT_CLASSIFICATION	check if transaction is done
WITHOUT_CLASSIFICATION	this transaction is done
WITHOUT_CLASSIFICATION	sample the children of the transaction
WITHOUT_CLASSIFICATION	if we do not get any sub samplers the transaction is done
WITHOUT_CLASSIFICATION	transaction controller - additional sample
WITHOUT_CLASSIFICATION	must be the start of the subtree
WITHOUT_CLASSIFICATION	assume success
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	standalone
WITHOUT_CLASSIFICATION	embedded
WITHOUT_CLASSIFICATION	this transaction is done
WITHOUT_CLASSIFICATION	assume success
WITHOUT_CLASSIFICATION	check if it is the start of a new transaction must be the start of the subtree
WITHOUT_CLASSIFICATION	we need to call the super.next instead of this.next which is done in genericcontroller because if we call this.next() it will return the transactionsampler and we do not want that. we need to get the next real sampler or controller
WITHOUT_CLASSIFICATION	must be the end of the controller
WITHOUT_CLASSIFICATION	we have sampled one of our children
WITHOUT_CLASSIFICATION	we must set res to null now before sending the event for the transaction so that we can ignore that event in our sampleoccured method
WITHOUT_CLASSIFICATION	check if we are still sampling our children
WITHOUT_CLASSIFICATION	accumulate waiting time for later
WITHOUT_CLASSIFICATION	log.warn("constructor only intended for use in testing");
WITHOUT_CLASSIFICATION	ensure name is available for debugging
WITHOUT_CLASSIFICATION	it is the jmeterthread which knows how to sample a real sampler
WITHOUT_CLASSIFICATION	another subsample for the transaction
WITHOUT_CLASSIFICATION	set response code of transaction
WITHOUT_CLASSIFICATION	the transaction fails if any sub sample fails
WITHOUT_CLASSIFICATION	add the sub result to the transaction result
WITHOUT_CLASSIFICATION	add current time to total for later use (exclude pause time)
WITHOUT_CLASSIFICATION	if selected then generate parent sample otherwise as per original controller
WITHOUT_CLASSIFICATION	if selected add duration of timers to total runtime
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	the loop controller panel can be displayed standalone or inside another panel. for standalone we want to display the title name etc. (everything). however if we want to display it within another panel we just display the loop count fields (not the title and name).
WITHOUT_CLASSIFICATION	the loop controller panel can be displayed standalone or inside another panel. for standalone we want to display the title name etc. (everything). however if we want to display it within another panel we just display the loop count fields (not the title and name).
WITHOUT_CLASSIFICATION	standalone
WITHOUT_CLASSIFICATION	standalone
WITHOUT_CLASSIFICATION	embedded
WITHOUT_CLASSIFICATION	embedded
WITHOUT_CLASSIFICATION	text field $non-nls-1$
WITHOUT_CLASSIFICATION	loop label $non-nls-1$
WITHOUT_CLASSIFICATION	seconds label $non-nls-1$
WITHOUT_CLASSIFICATION	text field $non-nls-1$
WITHOUT_CLASSIFICATION	this check-box defines whether to save workbench content or not
WITHOUT_CLASSIFICATION	forever checkbox $non-nls-1$
WITHOUT_CLASSIFICATION	don't wrap this error - display it as is
WITHOUT_CLASSIFICATION	condition label
WITHOUT_CLASSIFICATION	limit the changes to client only test elements
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	text field $non-nls-1$
WITHOUT_CLASSIFICATION	use expression instead of javascript $non-nls-1$
WITHOUT_CLASSIFICATION	evaluate all checkbox $non-nls-1$
WITHOUT_CLASSIFICATION	text field this means exit if last sample failed $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	used by both standardjmeterengine and clientjmeterengine. in the latter case only resultcollectors are updated as only these are relevant to the client and updating other elements causes all sorts of problems. skip certain processing for remote tests
WITHOUT_CLASSIFICATION	called by jmeter listentotest if remotestop is true
WITHOUT_CLASSIFICATION	sent later
WITHOUT_CLASSIFICATION	should we create our own copy of the rmi registry?
WITHOUT_CLASSIFICATION	create this object using the specified port (0 means anonymous)
WITHOUT_CLASSIFICATION	should perhaps be log.warn but this causes the client-server test to fail
WITHOUT_CLASSIFICATION	throw an exception to ensure caller knows
WITHOUT_CLASSIFICATION	close window where another remote client might jump in
WITHOUT_CLASSIFICATION	sets active = true
WITHOUT_CLASSIFICATION	mail on userlist reported npe here - looks like only happens if there are network errors but check anyway
WITHOUT_CLASSIFICATION	called by - clientjmeterengine.exe() which is called on remotestop
WITHOUT_CLASSIFICATION	tidy up any objects we created
WITHOUT_CLASSIFICATION	help with garbage control
WITHOUT_CLASSIFICATION	the list of current thread groups; may be setup main or teardown.
WITHOUT_CLASSIFICATION	may be null if called from unit test
WITHOUT_CLASSIFICATION	may be null if called from unit test
WITHOUT_CLASSIFICATION	e.g. not yet started
WITHOUT_CLASSIFICATION	concurrenthashmap does not need synch. here
WITHOUT_CLASSIFICATION	end of code to allow engine to be controlled remotely
WITHOUT_CLASSIFICATION	is testplan serialised?
WITHOUT_CLASSIFICATION	can't use for loop here because we remove elements
WITHOUT_CLASSIFICATION	deliberate use of deprecated method
WITHOUT_CLASSIFICATION	we totally failed to stop the test
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	concurrenthashmap does not need synch. here
WITHOUT_CLASSIFICATION	allow engine and threads to be stopped from outside a thread e.g. from beanshell server assumes that there is only one instance of the engine at any one time so it is not guaranteed to work
WITHOUT_CLASSIFICATION	concurrenthashmap does not need synch. here
WITHOUT_CLASSIFICATION	concurrenthashmap does not need synch. here
WITHOUT_CLASSIFICATION	else will be done by threadfinished()
WITHOUT_CLASSIFICATION	no point continuing
WITHOUT_CLASSIFICATION	tl - s&e
WITHOUT_CLASSIFICATION	merge in any additional test listeners currently only used by the function parser
WITHOUT_CLASSIFICATION	no longer needed
WITHOUT_CLASSIFICATION	for each thread group generate threads hand each thread the sampler controller and the listeners and the timer
WITHOUT_CLASSIFICATION	for each setup thread group
WITHOUT_CLASSIFICATION	for each setup thread group
WITHOUT_CLASSIFICATION	wait for all setup threads to exit
WITHOUT_CLASSIFICATION	the groups have all completed now
WITHOUT_CLASSIFICATION	here's where the test really starts. run a full gc now it's no harm at all (just delays test start by a tiny amount) and hitting one too early in the test can impair results for short tests.
WITHOUT_CLASSIFICATION	still running at this point i.e. setup was not cancelled for each thread group
WITHOUT_CLASSIFICATION	wait for all test threads to exit
WITHOUT_CLASSIFICATION	the groups have all completed now
WITHOUT_CLASSIFICATION	wait for post threads to stop
WITHOUT_CLASSIFICATION	concurrenthashmap does not need protecting
WITHOUT_CLASSIFICATION	will be null if stoptest thread has started
WITHOUT_CLASSIFICATION	needs to be run in a separate thread to allow rmi call to return ok
WITHOUT_CLASSIFICATION	allow rmi to complete
WITHOUT_CLASSIFICATION	tl - all
WITHOUT_CLASSIFICATION	don't add the timer
WITHOUT_CLASSIFICATION	should we match using regexes?
WITHOUT_CLASSIFICATION	created during class init; not modified thereafter
WITHOUT_CLASSIFICATION	ignore self
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	i.e. shutdown/stopped during main thread groups re-enable for teardown if necessary
WITHOUT_CLASSIFICATION	ignore setup and post here. we could have filtered the searcher. but then future thread group objects wouldn't execute.
WITHOUT_CLASSIFICATION	must not convert testelement.gui_class etc
WITHOUT_CLASSIFICATION	end of thread groups no tgs found
WITHOUT_CLASSIFICATION	this should be enough to allow server to exit. default is false
WITHOUT_CLASSIFICATION	remote exit called by remotejmeterengineimpl.rexit() and by notifytestlistenersofend() iff exitaftertest is true; in turn that is called by the run() method and the stoptest class also called
WITHOUT_CLASSIFICATION	classnames must contain this string [.functions.] $non-nls-1$ classnames must not contain this string [.gui.] $non-nls-1$
WITHOUT_CLASSIFICATION	check can cast for clone don't clone nothreadclone unless honournothreadclone == false
WITHOUT_CLASSIFICATION	clone will produce correct type
WITHOUT_CLASSIFICATION	dummy methods needed by function interface
WITHOUT_CLASSIFICATION	for use by functionhelper
WITHOUT_CLASSIFICATION	for use by functionhelper
WITHOUT_CLASSIFICATION	handle escapes
WITHOUT_CLASSIFICATION	found "${"
WITHOUT_CLASSIFICATION	i.e. '\\'
WITHOUT_CLASSIFICATION	save leading text
WITHOUT_CLASSIFICATION	set to start of string
WITHOUT_CLASSIFICATION	function does not exist so treat as per missing variable
WITHOUT_CLASSIFICATION	variable or function with no parameter list
WITHOUT_CLASSIFICATION	ensure that setparameters() is called.
WITHOUT_CLASSIFICATION	end of buffer
WITHOUT_CLASSIFICATION	store the following character
WITHOUT_CLASSIFICATION	detect functionname() so this does not generate empty string as the parameter
WITHOUT_CLASSIFICATION	normal exit occurs here
WITHOUT_CLASSIFICATION	should not happen with stringreader
WITHOUT_CLASSIFICATION	dropped out i.e. did not find closing ')'
WITHOUT_CLASSIFICATION	needed for serialisation testing
WITHOUT_CLASSIFICATION	the default title for the menu bar
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	process escaped characters store the \
WITHOUT_CLASSIFICATION	the application name $non-nls-1$
WITHOUT_CLASSIFICATION	this is used to keep track of local (non-remote) tests the name is chosen to be an unlikely host-name $non-nls-1$
WITHOUT_CLASSIFICATION	allow display/hide loggerpanel
WITHOUT_CLASSIFICATION	transparent jbutton with no border
WITHOUT_CLASSIFICATION	allow display/hide toolbar
WITHOUT_CLASSIFICATION	file new operation may set to null so just return app name
WITHOUT_CLASSIFICATION	allow display/hide log error/fatal counter
WITHOUT_CLASSIFICATION	teststatelistener implementation
WITHOUT_CLASSIFICATION	enable drag&drop install a custom transfer handler
WITHOUT_CLASSIFICATION	add the toolbar
WITHOUT_CLASSIFICATION	check for file lists specifically
WITHOUT_CLASSIFICATION	used by abstractreportgui
WITHOUT_CLASSIFICATION	helper method - also used by constructor
WITHOUT_CLASSIFICATION	this stores the state of the testelement
WITHOUT_CLASSIFICATION	ensure we use default bundle
WITHOUT_CLASSIFICATION	sampler error action buttons
WITHOUT_CLASSIFICATION	are we saving the whole tree?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. originally called clear() @see also clearable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	textarea
WITHOUT_CLASSIFICATION	allow for windows / chars in filename $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	beaninfo objects also contain locale-sensitive data -- flush them away
WITHOUT_CLASSIFICATION	$non-nls-1$ define awt wm_class string
WITHOUT_CLASSIFICATION	throws headlessexception
WITHOUT_CLASSIFICATION	defaults to continue
WITHOUT_CLASSIFICATION	space between borders and text
WITHOUT_CLASSIFICATION	generates configure pop-up dialogue for listeners from all methods in samplesaveconfiguration with the signature "boolean savexxx()". there must be a corresponding "void setxxx(boolean)" method and a property save_xxx which is used to name the field on the dialogue.
WITHOUT_CLASSIFICATION	target server panel
WITHOUT_CLASSIFICATION	limit length of log content
WITHOUT_CLASSIFICATION	if logger_panel_max_length is 0 it means all log events are kept
WITHOUT_CLASSIFICATION	the current node is now updated
WITHOUT_CLASSIFICATION	probably a missing jar
WITHOUT_CLASSIFICATION	forget about all guis we've created so far we'll need to re-created them all!
WITHOUT_CLASSIFICATION	first make sure we save the content of the current gui (since we will flush it away)
WITHOUT_CLASSIFICATION	should we allow directories?
WITHOUT_CLASSIFICATION	enable file revert action if a file is used
WITHOUT_CLASSIFICATION	if saveworkbench
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.gui.action.command#getactionnames()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	now put the current gui in place. [this code was copied from the editcommand action -- we can't just trigger the action because that would populate the current node with the contents of the new gui -- which is empty.] fetch once probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	strpathsorjars - pathnames or jarfiles to search for classes classnames - required parent class(es) or annotations $non-nls-1$ innerclasses - should we include inner classes? contains - classname should contain this string ignore the classes which are specific to the reporting tool $non-nls-1$ notcontains - classname should not contain this string annotations - true if classnames are annotations
WITHOUT_CLASSIFICATION	whether to skip the delete confirmation dialogue $non-nls-1$
WITHOUT_CLASSIFICATION	save parent node for later
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	set the window visible immediately
WITHOUT_CLASSIFICATION	n.b. this only reloads if necessary (ignores the reference)
WITHOUT_CLASSIFICATION	add this node
WITHOUT_CLASSIFICATION	add all the child nodes of the node we are adding
WITHOUT_CLASSIFICATION	ensure the dialog is only created when it is first needed in turn this avoids scanning the templates until first needed
WITHOUT_CLASSIFICATION	make sure the file ends with proper extension
WITHOUT_CLASSIFICATION	check if the user is trying to save to an existing file
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	prevent instantiation
WITHOUT_CLASSIFICATION	prevent instantiation
WITHOUT_CLASSIFICATION	vk_plus + ctrl_down_mask did not work
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	note windows user preferences are stored relative to hkey_current_user\software\javasoft\prefs
WITHOUT_CLASSIFICATION	do not save user does not want to overwrite
WITHOUT_CLASSIFICATION	only update the stored copy of the tree for a full save refetch because convertsubtree affects it
WITHOUT_CLASSIFICATION	package protected to allow access from test code
WITHOUT_CLASSIFICATION	requires jmetertreenode
WITHOUT_CLASSIFICATION	we can only move a single node
WITHOUT_CLASSIFICATION	move to the parent
WITHOUT_CLASSIFICATION	move as a child of the next sibling
WITHOUT_CLASSIFICATION	commented as per sebb httpmail-archives.apache.org/mod_mbox/jmeter-dev/201307.mbox/%3ccaogo0vz0z3gmbfsq_gsb%2bp7ntuqlng6gy2ecvybd8_akb-dt5w%40mail.gmail.com%3e
WITHOUT_CLASSIFICATION	so elements can only be added as children
WITHOUT_CLASSIFICATION	select the node
WITHOUT_CLASSIFICATION	we must ask the user if it is ok to close current project
WITHOUT_CLASSIFICATION	load the file for this recent file command
WITHOUT_CLASSIFICATION	get the preference for the recent files
WITHOUT_CLASSIFICATION	create the menu item
WITHOUT_CLASSIFICATION	use the index as the name used when processing the action
WITHOUT_CLASSIFICATION	set the keystroke to use
WITHOUT_CLASSIFICATION	add the menu item
WITHOUT_CLASSIFICATION	add separator as the last item
WITHOUT_CLASSIFICATION	update menu items to reflect recent files
WITHOUT_CLASSIFICATION	update menu items to reflect recent files
WITHOUT_CLASSIFICATION	check if the new file is already in the recent list
WITHOUT_CLASSIFICATION	add the new file at the start of the list
WITHOUT_CLASSIFICATION	remove the last item from the list if it was a brand new file
WITHOUT_CLASSIFICATION	store the recent files
WITHOUT_CLASSIFICATION	assume no recent files
WITHOUT_CLASSIFICATION	update the menu items
WITHOUT_CLASSIFICATION	get the menu item
WITHOUT_CLASSIFICATION	at least one recent file menu item is visible
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ reduce font
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.action.abstractaction#getactionnames()
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.awt.event.actionlistener#actionperformed(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.action.abstractaction#doaction(java.awt.event.actionevent)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	reset previous result
WITHOUT_CLASSIFICATION	hide window on esc
WITHOUT_CLASSIFICATION	do not save user does not want to overwrite
WITHOUT_CLASSIFICATION	note windows user preferences are stored relative to hkey_current_user\software\javasoft\prefs
WITHOUT_CLASSIFICATION	limit the length of the menu text if needed
WITHOUT_CLASSIFICATION	if we are merging in another test plan we know the test plan is dirty now
WITHOUT_CLASSIFICATION	only check if we have not found any differences so far
WITHOUT_CLASSIFICATION	do search on enter
WITHOUT_CLASSIFICATION	do search
WITHOUT_CLASSIFICATION	don't clear the plan
WITHOUT_CLASSIFICATION	get the file name of the current project
WITHOUT_CLASSIFICATION	check if the user has loaded any file
WITHOUT_CLASSIFICATION	check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	check if the user wants to revert
WITHOUT_CLASSIFICATION	close the current project
WITHOUT_CLASSIFICATION	reload the project
WITHOUT_CLASSIFICATION	spaces are not allowed in property names read from files
WITHOUT_CLASSIFICATION	e.g. windows xp => windows
WITHOUT_CLASSIFICATION	get the jcomponent from the visualizer
WITHOUT_CLASSIFICATION	$non-nls-1$ jmeter.properties
WITHOUT_CLASSIFICATION	engine may be null if it has not correctly started
WITHOUT_CLASSIFICATION	guipackage.getinstance().getmainframe().showstoppingmessage(name);
WITHOUT_CLASSIFICATION	minimal dimensions for dialog box
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	don't clear the plan
WITHOUT_CLASSIFICATION	check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	get the string given from the choose and check the file extension.
WITHOUT_CLASSIFICATION	check if the user wants to create from template
WITHOUT_CLASSIFICATION	bottom buttons bar
WITHOUT_CLASSIFICATION	center position and 50% of screen size
WITHOUT_CLASSIFICATION	created by xstream reading templates.xml
WITHOUT_CLASSIFICATION	n.b. must use linkedhashmap for field type xstream creates a plain hashmap if one uses map as the field type.
WITHOUT_CLASSIFICATION	templates i
WITHOUT_CLASSIFICATION	field templatemanager#templates $non-nls-1$
WITHOUT_CLASSIFICATION	field template#name $non-nls-1$
WITHOUT_CLASSIFICATION	for relative links
WITHOUT_CLASSIFICATION	i.e. no disabled icon found
WITHOUT_CLASSIFICATION	must therefore set the enabled icon so there is at least some icon
WITHOUT_CLASSIFICATION	super(new jmetertreenode(new workbenchgui().createtestelement() null)); testelement tp = new testplangui().createtestelement(); inittree(tp);
WITHOUT_CLASSIFICATION	super(new jmetertreenode(new workbench() null)); testelement tp = new testplan(); inittree(tp new workbench());
WITHOUT_CLASSIFICATION	the node can be added in non gui mode at startup
WITHOUT_CLASSIFICATION	remove the workbench and testplan nodes
WITHOUT_CLASSIFICATION	insert the test plan node
WITHOUT_CLASSIFICATION	endwindow = window;
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	check for file lists specifically
WITHOUT_CLASSIFICATION	check for file lists specifically
WITHOUT_CLASSIFICATION	this check the state of the testelement and if returns false it disable the loaded node
WITHOUT_CLASSIFICATION	init the tree assumes this is only called from gui mode
WITHOUT_CLASSIFICATION	let others know that the tree content has changed. this should not be necessary but without it nodes are not shown when the user uses the close menu item
WITHOUT_CLASSIFICATION	container endwindow; jpopupmenu pop;
WITHOUT_CLASSIFICATION	get the main frame.
WITHOUT_CLASSIFICATION	close any main menu that is open
WITHOUT_CLASSIFICATION	updatemainmenu(((jmeterguicomponent) getcurrentnode().getuserobject()).createpopupmenu());
WITHOUT_CLASSIFICATION	hold the nodes that should be removed on drop
WITHOUT_CLASSIFICATION	only allow a drag&drop inside the current jvm
WITHOUT_CLASSIFICATION	sort the selected tree path by row
WITHOUT_CLASSIFICATION	if child and a parent are selected only keep the parent
WITHOUT_CLASSIFICATION	remove unneeded nodes
WITHOUT_CLASSIFICATION	the tree accepts a jmx file
WITHOUT_CLASSIFICATION	the copy is disabled
WITHOUT_CLASSIFICATION	do not allow a drop on the drag source selections.
WITHOUT_CLASSIFICATION	testplan and workbench are the only children of the root
WITHOUT_CLASSIFICATION	do not allow a non-leaf node to be moved into one of its children
WITHOUT_CLASSIFICATION	re-use node association logic
WITHOUT_CLASSIFICATION	deal with the jmx files
WITHOUT_CLASSIFICATION	get drop location and mode
WITHOUT_CLASSIFICATION	drop mode == dropmode.on
WITHOUT_CLASSIFICATION	first copy the children as the call to copy.add will modify the collection we're iterating on
WITHOUT_CLASSIFICATION	expand the destination node
WITHOUT_CLASSIFICATION	if icon has not been defined then use gui_class property
WITHOUT_CLASSIFICATION	may be null during startup
WITHOUT_CLASSIFICATION	override in order to provide type safety
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	close.setpreferredsize(d);
WITHOUT_CLASSIFICATION	c.gridx = 1; c.gridy = 2; g.setconstraints(close c); panel.add(close);
WITHOUT_CLASSIFICATION	jfilechooser jfc = null;
WITHOUT_CLASSIFICATION	for use by test code only
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	modifying
WITHOUT_CLASSIFICATION	override the implementations of the superclass forwarding all methods from the celleditor interface to our delegate.
WITHOUT_CLASSIFICATION	implementing the treecelleditor interface
WITHOUT_CLASSIFICATION	implementing the celleditor interface
WITHOUT_CLASSIFICATION	protected editordelegate class
WITHOUT_CLASSIFICATION	this won't work right if we remove components. but we don't so i'm not going to worry about it right now.
WITHOUT_CLASSIFICATION	datefields are not thread-safe $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	help menu $non-nls-1$
WITHOUT_CLASSIFICATION	options menu $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	dummy constructor to allo junit tests to work
WITHOUT_CLASSIFICATION	do nothing; the current time will be returned
WITHOUT_CLASSIFICATION	convert position in buffer to calendar type assumes that pos >=0 (which is true for getcaretposition())
WITHOUT_CLASSIFICATION	if beyond the end then set to the end
WITHOUT_CLASSIFICATION	update the current field. the addend is only expected to be +1/-1 but other values will work. n.b. the roll() method only supports changes by a single unit - up or down
WITHOUT_CLASSIFICATION	jmenu reportmenu; jmenuitem analyze;
WITHOUT_CLASSIFICATION	restore position
WITHOUT_CLASSIFICATION	list for recent files menu items
WITHOUT_CLASSIFICATION	lists for remote engines menu items
WITHOUT_CLASSIFICATION	if the add menu already exists remove it.
WITHOUT_CLASSIFICATION	insert the add menu as the first menu item in the edit menu.
WITHOUT_CLASSIFICATION	called by mainframe#seteditmenu() which is called by editcommand#doaction and guipackage#localechanged
WITHOUT_CLASSIFICATION	there was a npe being thrown without the null check here.. jkb
WITHOUT_CLASSIFICATION	if we are enabling the edit-->add menu item then we also need to enable the edit menu. the edit menu may already be enabled but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	show the classname to the user
WITHOUT_CLASSIFICATION	this is used by the changelanguage class to define the locale
WITHOUT_CLASSIFICATION	also used by org.apache.jmeter.resources.packagetest
WITHOUT_CLASSIFICATION	note the item name is used by changelanguage to create a locale for that language so need to ensure that the language strings are valid if they exist use the locale language constants. also need to ensure that the names are valid resource entries too.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	overrides superclass method
WITHOUT_CLASSIFICATION	from the java look and feel guidelines if all items in a menu are disabled then disable the menu. makes sense.
WITHOUT_CLASSIFICATION	listener on model changes to maintain correct focusability
WITHOUT_CLASSIFICATION	add the recent files which will also add a separator that is visible when needed
WITHOUT_CLASSIFICATION	override action behaviour
WITHOUT_CLASSIFICATION	this is also used by lookandfeelcommand
WITHOUT_CLASSIFICATION	for testing only at present
WITHOUT_CLASSIFICATION	mostly delegates to model
WITHOUT_CLASSIFICATION	set default single model
WITHOUT_CLASSIFICATION	next two methods implement new api by delegation to model
WITHOUT_CLASSIFICATION	restore state display
WITHOUT_CLASSIFICATION	listen for enable changes
WITHOUT_CLASSIFICATION	empty override of superclass method
WITHOUT_CLASSIFICATION	convenience cast
WITHOUT_CLASSIFICATION	assume that the ui has not changed since the checkbos was created
WITHOUT_CLASSIFICATION	iterate state
WITHOUT_CLASSIFICATION	overrides of superclass methods
WITHOUT_CLASSIFICATION	fire actionevent
WITHOUT_CLASSIFICATION	force the events to fire
WITHOUT_CLASSIFICATION	empty overrides of superclass methods
WITHOUT_CLASSIFICATION	send itemevent
WITHOUT_CLASSIFICATION	set internal state
WITHOUT_CLASSIFICATION	send changeevent
WITHOUT_CLASSIFICATION	derived from httpwww.coderanch.com/t/342563/gui/java/tristate-checkbox
WITHOUT_CLASSIFICATION	nimbus works - after a fashion - with this
WITHOUT_CLASSIFICATION	drawcross(g x y);
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$;
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	href="#"
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	this won't work right if we remove components. but we don't so i'm not going to worry about it right now.
WITHOUT_CLASSIFICATION	predefined strings for makemenu(). these are used as menu categories in the menumap hashmap and also for resource lookup in messages.properties
WITHOUT_CLASSIFICATION	needed for all but nimbus nimbus works - after a fashion - with this nimbus works - after a fashion - with this reset
WITHOUT_CLASSIFICATION	private void drawcross(graphics g int x int y) { g.drawline(x + (iconwidth - 4) y + 2 x + 3 y + (iconheight - 5)); g.drawline(x + (iconwidth - 4) y + 3 x + 3 y + (iconheight - 4)); g.drawline(x + 3 y + 2 x + (iconwidth - 4) y + (iconheight - 5)); g.drawline(x + 3 y + 3 x + (iconwidth - 4) y + (iconheight - 4)); }
WITHOUT_CLASSIFICATION	painticon
WITHOUT_CLASSIFICATION	for use by test code only
WITHOUT_CLASSIFICATION	menu_add_xxx - controls which items are in the add menu menu_parent_xxx - controls which items are in the insert parent menu
WITHOUT_CLASSIFICATION	if type is unknown
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ don't try to instantiate these
WITHOUT_CLASSIFICATION	no point instantiating class
WITHOUT_CLASSIFICATION	allow headless testing
WITHOUT_CLASSIFICATION	don't add it again
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	empty box $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	can't add a workbench anywhere
WITHOUT_CLASSIFICATION	can't add a testplan anywhere
WITHOUT_CLASSIFICATION	force testfragment to only be pastable under a test plan
WITHOUT_CLASSIFICATION	allow everything else
WITHOUT_CLASSIFICATION	samplers and controllers need not apply but abstractthreadgroup (controller) is ok
WITHOUT_CLASSIFICATION	abstractthreadgroup is only allowed under a testplan
WITHOUT_CLASSIFICATION	includes thread group; anything goes
WITHOUT_CLASSIFICATION	samplers and controllers need not apply
WITHOUT_CLASSIFICATION	all other
WITHOUT_CLASSIFICATION	is any node an instance of one of the classes?
WITHOUT_CLASSIFICATION	is any node an instance of one of the classes but not an exception?
WITHOUT_CLASSIFICATION	methods used for test cases
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	close action dialog box when tapping escape key
WITHOUT_CLASSIFICATION	prepare dialog box
WITHOUT_CLASSIFICATION	determine location on screen
WITHOUT_CLASSIFICATION	must be close or save_close commands
WITHOUT_CLASSIFICATION	text backup
WITHOUT_CLASSIFICATION	double click
WITHOUT_CLASSIFICATION	view only
WITHOUT_CLASSIFICATION	double (pressed) click
WITHOUT_CLASSIFICATION	in main table (evt mousepressed because cell is editable)
WITHOUT_CLASSIFICATION	else do nothing (cell isn't a string to edit)
WITHOUT_CLASSIFICATION	add the button to the button group
WITHOUT_CLASSIFICATION	add the button
WITHOUT_CLASSIFICATION	implicit return empty toolbar if icons == null
WITHOUT_CLASSIFICATION	get the standard toolbar properties
WITHOUT_CLASSIFICATION	already reported by icontoolbarbean
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	in seconds
WITHOUT_CLASSIFICATION	in seconds
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	this.setpreferredsize(new dimension(400150));
WITHOUT_CLASSIFICATION	i.e. bypass the functors
WITHOUT_CLASSIFICATION	mainly needed for unit test serialisable tests
WITHOUT_CLASSIFICATION	n.b. nothreadclone is used to ensure that the teststarted() methods will share the same instance as the sampleoccured() methods so the teststarted() method can fetch the totals accumulator object for the samples to be stored in.
WITHOUT_CLASSIFICATION	ensure that a report is not skipped if we are slightly late in checking the time.
WITHOUT_CLASSIFICATION	this map allows summarisers with the same name to contribute to the same totals.
WITHOUT_CLASSIFICATION	@guardedby("accumulators") - needed to ensure consistency between this and instancecount
WITHOUT_CLASSIFICATION	@guardedby("accumulators") number of active tests
WITHOUT_CLASSIFICATION	cached copy of totals for this instance. the variables do not need to be synchronised as they are not shared between threads however the contents do need to be synchronized.
WITHOUT_CLASSIFICATION	@guardedby("mytotals")
WITHOUT_CLASSIFICATION	name of the accumulator. set up by teststarted().
WITHOUT_CLASSIFICATION	constructor is initially called once for each occurrence in the test plan. for gui several more instances are created. then clear is called at start of test. called several times during test startup. the name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	contains the items needed to collect stats for a summariser
WITHOUT_CLASSIFICATION	copy the data to minimise the synch time
WITHOUT_CLASSIFICATION	stop double-reporting
WITHOUT_CLASSIFICATION	only if we have updated them
WITHOUT_CLASSIFICATION	$non-nls-1$ for intermediate use output line buffer
WITHOUT_CLASSIFICATION	rate is effectively infinite
WITHOUT_CLASSIFICATION	e.g. nullpointerexception
WITHOUT_CLASSIFICATION	avalon only
WITHOUT_CLASSIFICATION	avalon only
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	only print final delta if there were some samples in the delta and there has been at least one sample reported previously
WITHOUT_CLASSIFICATION	rounded seconds no point displaying decimals (less than 1% error) decimal would be zero
WITHOUT_CLASSIFICATION	fractional seconds this will round
WITHOUT_CLASSIFICATION	the teststarted/testended methods are called at the start and end of a test. however when a test is run on multiple nodes there is no guarantee that all the teststarted() methods will be called before all the threadstart() or sampleoccurred() methods for other threads - nor that testended() will only be called after all sampleoccurred() calls. the ordering is only guaranteed within a single test.
WITHOUT_CLASSIFICATION	we're not done yet
WITHOUT_CLASSIFICATION	boolean autoscale = true;
WITHOUT_CLASSIFICATION	setup drawing area
WITHOUT_CLASSIFICATION	draw grid
WITHOUT_CLASSIFICATION	draw axis
WITHOUT_CLASSIFICATION	draw data lines
WITHOUT_CLASSIFICATION	constructor is initially called once for each occurrence in the test plan for gui several more instances are created then clear is called at start of test called several times during test startup the name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	e.g. in non-gui mode
WITHOUT_CLASSIFICATION	this string is used to identify local test runs so must not be a valid host name $non-nls-1$
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	lock used to guard static mutable variables
WITHOUT_CLASSIFICATION	@guardedby("lock")
WITHOUT_CLASSIFICATION	@guardedby("lock")
WITHOUT_CLASSIFICATION	keep track of the file writer and the configuration as the instance used to close them is not the same as the instance that creates them. this means one cannot use the saved printwriter or use getsaveconfig()
WITHOUT_CLASSIFICATION	instance variables (guarded by volatile)
WITHOUT_CLASSIFICATION	unfortunately abstracttestelement does not call super.clone()
WITHOUT_CLASSIFICATION	successonly and erroronly cannot both be set
WITHOUT_CLASSIFICATION	no need for the hook now
WITHOUT_CLASSIFICATION	only add the hook once
WITHOUT_CLASSIFICATION	no point reading the file if there's no visualiser
WITHOUT_CLASSIFICATION	probably avalon format
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	only for use by csvsaveservice
WITHOUT_CLASSIFICATION	constructor is initially called once for each occurrence in the test plan for gui several more instances are created then clear is called at start of test called several times during test startup the name will not necessarily have been set at this point.
WITHOUT_CLASSIFICATION	@guardedby("lock")
WITHOUT_CLASSIFICATION	@guardedby("lock")
WITHOUT_CLASSIFICATION	we are processing xml assume xstream
WITHOUT_CLASSIFICATION	ensure that the sample save config is not shared between copied nodes n.b. clone only seems to be used for client-server tests
WITHOUT_CLASSIFICATION	find the name of the directory containing the file and create it - if there is one
WITHOUT_CLASSIFICATION	todo charset ? get the first line and see if it is xml
WITHOUT_CLASSIFICATION	can't do it as a static initialisation because saveservice is being constructed when this is called
WITHOUT_CLASSIFICATION	write the eol separately so we generate lf line ends on unix and windows $non-nls-1$
WITHOUT_CLASSIFICATION	write the eol separately so we generate lf line ends on unix and windows $non-nls-1$
WITHOUT_CLASSIFICATION	added in version 1.1 $non-nls-1$
WITHOUT_CLASSIFICATION	returns false if directory already exists so need to check again
WITHOUT_CLASSIFICATION	else if might have been created by another process so not a problem
WITHOUT_CLASSIFICATION	returns false if the file did not contain the terminator
WITHOUT_CLASSIFICATION	found the string
WITHOUT_CLASSIFICATION	reads to end of line or end of file
WITHOUT_CLASSIFICATION	!saveasxml
WITHOUT_CLASSIFICATION	truncate the file
WITHOUT_CLASSIFICATION	should throw exception back to caller
WITHOUT_CLASSIFICATION	used by monitorhealthvisualizer.add(sampleresult res)
WITHOUT_CLASSIFICATION	+ jmx property names; do not change
WITHOUT_CLASSIFICATION	- jmx property names
WITHOUT_CLASSIFICATION	constructor for use during startup (intended for non-gui use) @param name of summariser
WITHOUT_CLASSIFICATION	this is called once for each occurrence in the test plan before the start of the test. the super.clear() method clears the name (and all other properties) so it is called last.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	notused private static final string database = "db"; $non_nls-1$
WITHOUT_CLASSIFICATION	only for use by csvsaveservice
WITHOUT_CLASSIFICATION	associate sample with file name
WITHOUT_CLASSIFICATION	mutable int to keep track of sample count
WITHOUT_CLASSIFICATION	chunk the output if necessary
WITHOUT_CLASSIFICATION	should we save the sample?
WITHOUT_CLASSIFICATION	finish processing samples
WITHOUT_CLASSIFICATION	needed to avoid class cast error in clear.java
WITHOUT_CLASSIFICATION	may be the empty string
WITHOUT_CLASSIFICATION	client log file
WITHOUT_CLASSIFICATION	n.b. to add a new field remember the following - static _xyz - instance xyz=_xyz - clone s.xyz = xyz (perhaps) - setxyz(boolean) - savexyz() - update samplesaveconfigurationconverter to add new fields to marshall() and shouldserialisemember() - update sampleresultconverter and/or httpsampleconverter - update csvsaveservice csv_xxxx makeresultfromdelimitedstring printablefieldnamestostring static{} - update messages.properties to add save_xyz entry - update jmeter.properties to add new property - update listeners.xml to add new property csv and xml names etc. - take screenshot sample_result_config.png - update listeners.xml and component_reference.xml with new dimensions (might not change)
WITHOUT_CLASSIFICATION	not currently needed by any remoteable classes anyway would probably be too expensive in terms of network traffic void testiterationstart(loopiterationevent event);
WITHOUT_CLASSIFICATION	ensure output is flushed
WITHOUT_CLASSIFICATION	server log file
WITHOUT_CLASSIFICATION	holds details of which sample attributes to save. the pop-up dialogue for this is created by the class savepropertydialog which assumes for each field xxx - methods have the signature "boolean savexxx()" - a corresponding "void setxxx(boolean)" method - messages.properties contains the key save_xxx
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- property file constants ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	initialise values from properties
WITHOUT_CLASSIFICATION	save bytes read $non_nls-1$
WITHOUT_CLASSIFICATION	save url $non_nls-1$
WITHOUT_CLASSIFICATION	save filename for resultsaver $non_nls-1$
WITHOUT_CLASSIFICATION	save hostname for resultsaver $non_nls-1$
WITHOUT_CLASSIFICATION	don't save this as it is derived from the time format
WITHOUT_CLASSIFICATION	$non_nls-1$ $non_nls-1$ $non_nls-1$ $non_nls-1$ $non_nls-1$ $non_nls-1$ $non_nls-1$
WITHOUT_CLASSIFICATION	prepare for a pretty date
WITHOUT_CLASSIFICATION	make transient as we don't want to save the simpledataformat class also there's currently no way to change the value via the gui so changing it later means editting the jmx or recreating the listener.
WITHOUT_CLASSIFICATION	defaults from properties
WITHOUT_CLASSIFICATION	reversed compare allows for null
WITHOUT_CLASSIFICATION	don't save this as not settable via gui
WITHOUT_CLASSIFICATION	don't save this - only needed for processing csv headers currently
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	optional processing instruction for line 2; e.g. <?xml-stylesheet type="text/xsl" href="../extras/jmeter-results-detail-report_21.xsl"?> $non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$ n.b. remember to update the equals and hashcode methods when adding new variables.
WITHOUT_CLASSIFICATION	give access to initial configuration
WITHOUT_CLASSIFICATION	is derived from properties only
WITHOUT_CLASSIFICATION	we know we are comparing to another samplesaveconfiguration
WITHOUT_CLASSIFICATION	/ start of standard save/set access methods /
WITHOUT_CLASSIFICATION	as per 2.0 branch
WITHOUT_CLASSIFICATION	/ end of standard field accessors /
WITHOUT_CLASSIFICATION	maintain relationship
WITHOUT_CLASSIFICATION	defaults to empty;
WITHOUT_CLASSIFICATION	used by old save service
WITHOUT_CLASSIFICATION	used by samplesaveconfigurationconverter.unmarshall()
WITHOUT_CLASSIFICATION	get appropriate sender class governed by the behaviour set in the jmeter property
WITHOUT_CLASSIFICATION	static fields are set by the server when the class is constructed
WITHOUT_CLASSIFICATION	@guardedby("samplestore")
WITHOUT_CLASSIFICATION	locate the statistical sample colector
WITHOUT_CLASSIFICATION	store the new statistical result collector
WITHOUT_CLASSIFICATION	add a new wrapper samplevent
WITHOUT_CLASSIFICATION	checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	synchronized(samplestore)
WITHOUT_CLASSIFICATION	list of variable names to be saved in jtl files
WITHOUT_CLASSIFICATION	the values. entries may be null but there will be the correct number.
WITHOUT_CLASSIFICATION	the hostname cannot change during a run so safe to cache it just once
WITHOUT_CLASSIFICATION	only for unit tests
WITHOUT_CLASSIFICATION	needs to be accessible from test code
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	variables maintained by server code @guardedby("samplestore") maintain separate count of samples for speed
WITHOUT_CLASSIFICATION	the default used by {@link #setresponsedata(string string)}
WITHOUT_CLASSIFICATION	empty arrays which can be returned instead of null
WITHOUT_CLASSIFICATION	never return null
WITHOUT_CLASSIFICATION	never return null
WITHOUT_CLASSIFICATION	never return null
WITHOUT_CLASSIFICATION	never return null
WITHOUT_CLASSIFICATION	e.g. text/html; charset=utf-8
WITHOUT_CLASSIFICATION	todo timestamp == 0 means either not yet initialised or no stamp available (e.g. when loading a results file)
WITHOUT_CLASSIFICATION	allow for non-sample time
WITHOUT_CLASSIFICATION	don't return null if not set
WITHOUT_CLASSIFICATION	@guardedby("this"")
WITHOUT_CLASSIFICATION	(is this really the character set?) e.g. iso-8895-1 utf-8
WITHOUT_CLASSIFICATION	allows override of sample size in case sampler does not want to store all the data
WITHOUT_CLASSIFICATION	allow read-only access from test code
WITHOUT_CLASSIFICATION	how long between checks of nanotime; default 5000ms; set to <=0 to disable the thread
WITHOUT_CLASSIFICATION	$non-nls-1$;
WITHOUT_CLASSIFICATION	make sure we start with a reasonable value
WITHOUT_CLASSIFICATION	allow testcode access to the settings
WITHOUT_CLASSIFICATION	allow test code to change the default usenanotime setting
WITHOUT_CLASSIFICATION	allow test code to change the default usenanotime and nanothreadsleep settings
WITHOUT_CLASSIFICATION	helper method to get 1 ms resolution timing.
WITHOUT_CLASSIFICATION	helper method to maintain timestamp relationships
WITHOUT_CLASSIFICATION	for use by saveservice only. @param stamp - this may be a start time or an end time @param elapsed
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ok todo ??
WITHOUT_CLASSIFICATION	create unique object as marker for end of queue
WITHOUT_CLASSIFICATION	ok ok ok ok files is created automatically and applies per instance ok
WITHOUT_CLASSIFICATION	ok ok ok
WITHOUT_CLASSIFICATION	ok ok don't copy this; it is per instance resultfilename = res.resultfilename;
WITHOUT_CLASSIFICATION	todo ?? ok ok
WITHOUT_CLASSIFICATION	n.b. default charset is used deliberately here
WITHOUT_CLASSIFICATION	n.b. default charset is used deliberately here
WITHOUT_CLASSIFICATION	extract charset and store as dataencoding n.b. the meta tag <meta http-equiv="content-type" content="text/html; charset=foobar"> is now processed by httpsampleresult#getdataencodingwithdefault $non-nls-1$
WITHOUT_CLASSIFICATION	handle contenttype text/plain; charset=iso-8859-1; format=flowed
WITHOUT_CLASSIFICATION	check for quoted string $non-nls-1$ remove quotes
WITHOUT_CLASSIFICATION	list of types that are known to be binary
WITHOUT_CLASSIFICATION	list of types that are known to be ascii although they may appear to be binary
WITHOUT_CLASSIFICATION	determine if content-type is known to be binary i.e. not displayable as text. @param ct content type @return true if content-type is of type binary.
WITHOUT_CLASSIFICATION	helper methods n.b. setstarttime must be called before setendtime setstarttime is used by httpsampleresult to clone the parent sampler and allow the original start time to be kept
WITHOUT_CLASSIFICATION	how many times we had to wait to queue a sample
WITHOUT_CLASSIFICATION	can now afford to wait a bit longer between checks
WITHOUT_CLASSIFICATION	created by client
WITHOUT_CLASSIFICATION	created by server in readresolve method
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	note this is an instance field (and is not transient) so is created by the jmeter client and propagated to the server instance by rmi. [a static field would be recreated on the server and would pick up the server properties] $non-nls-1$
WITHOUT_CLASSIFICATION	client
WITHOUT_CLASSIFICATION	client log file
WITHOUT_CLASSIFICATION	server log file
WITHOUT_CLASSIFICATION	checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	synchronized(samplestore)
WITHOUT_CLASSIFICATION	how long we had to wait (nanoseconds)
WITHOUT_CLASSIFICATION	for reading from csv files ignored currently
WITHOUT_CLASSIFICATION	returns null if nothing on queue currently
WITHOUT_CLASSIFICATION	wait longer than a clock pulse (generally 10-15ms) catch an early clock pulse to reduce slop.
WITHOUT_CLASSIFICATION	ok because samplestore is of type arraylist<sampleevent>
WITHOUT_CLASSIFICATION	created by samplesenderfactory
WITHOUT_CLASSIFICATION	strip the response data before writing but only for a successful request.
WITHOUT_CLASSIFICATION	we failed to add the element first time
WITHOUT_CLASSIFICATION	server
WITHOUT_CLASSIFICATION	try to process as many as possible
WITHOUT_CLASSIFICATION	compute bytes before stripping
WITHOUT_CLASSIFICATION	configuration items set up by readresolve
WITHOUT_CLASSIFICATION	should be a user provided class name
WITHOUT_CLASSIFICATION	static fields are resolved on the server
WITHOUT_CLASSIFICATION	instance fields are copied from the client instance
WITHOUT_CLASSIFICATION	set clonedset;
WITHOUT_CLASSIFICATION	server-only work item
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	extended property name $non-nls-1$
WITHOUT_CLASSIFICATION	clonedset = new hashset();
WITHOUT_CLASSIFICATION	need to maintain our own elapsed timer to ensure more accurate aggregation
WITHOUT_CLASSIFICATION	may be called by xstream
WITHOUT_CLASSIFICATION	copy data that is shared between samples (i.e. the key items)
WITHOUT_CLASSIFICATION	assume result is ok because we add the sample count in later
WITHOUT_CLASSIFICATION	add sample counter
WITHOUT_CLASSIFICATION	add error counter
WITHOUT_CLASSIFICATION	overrides sampleresult
WITHOUT_CLASSIFICATION	for reading csv files
WITHOUT_CLASSIFICATION	superclass is not typed
WITHOUT_CLASSIFICATION	ensure output follows version
WITHOUT_CLASSIFICATION	names of dataholder entries for jtl processing $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	names of dataholder entries for jmx processing $non-nls-1$
WITHOUT_CLASSIFICATION	override wrapmapper in order to insert the wrapper in the chain
WITHOUT_CLASSIFICATION	provide our own aliasing using strings rather than classes
WITHOUT_CLASSIFICATION	translate alias to classname and then delegate to wrapped class
WITHOUT_CLASSIFICATION	translate to alias and then delegate to wrapped class
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	was type but that caused findbugs warning
WITHOUT_CLASSIFICATION	this is needed to stop xstream keeping copies of each class
WITHOUT_CLASSIFICATION	the xml header with placeholder for encoding since that is controlled by property $non-nls-1$
WITHOUT_CLASSIFICATION	default file name $non-nls-1$
WITHOUT_CLASSIFICATION	property name used to define file name $non-nls-1$
WITHOUT_CLASSIFICATION	default to overall format and then to version 2.2
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	define file format property names $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	define file format versions $non-nls-1$
WITHOUT_CLASSIFICATION	holds the mappings from the saveservice properties file key alias entry full class name there may be multiple aliases which map to the same class
WITHOUT_CLASSIFICATION	holds the reverse mappings key full class name entry primary alias
WITHOUT_CLASSIFICATION	this is written to jmx files by scriptwrapperconverter read from properties file; written to jmx files
WITHOUT_CLASSIFICATION	must match _version property value in saveservice.properties used to ensure saveservice.properties and saveservice are updated simultaneously expected version $non-nls-1$
WITHOUT_CLASSIFICATION	internal information only read from saveservice.properties file $non-nls-1$ must match revision id value in saveservice.properties used to ensure saveservice.properties and saveservice are updated simultaneously expected value $non-nls-1$ read from properties file $non-nls-1$
WITHOUT_CLASSIFICATION	helper method to simplify alias creation from properties
WITHOUT_CLASSIFICATION	can have multiple aliases for same target classname
WITHOUT_CLASSIFICATION	load the alias properties
WITHOUT_CLASSIFICATION	now create the aliases
WITHOUT_CLASSIFICATION	remove the leading "_"
WITHOUT_CLASSIFICATION	for converters to use
WITHOUT_CLASSIFICATION	called by save function
WITHOUT_CLASSIFICATION	get the outputwriter to use
WITHOUT_CLASSIFICATION	use deprecated method to avoid duplicating code
WITHOUT_CLASSIFICATION	use deprecated method to avoid duplicating code
WITHOUT_CLASSIFICATION	ensure terminated properly
WITHOUT_CLASSIFICATION	used by test code
WITHOUT_CLASSIFICATION	used by test code
WITHOUT_CLASSIFICATION	get the inputreader to use
WITHOUT_CLASSIFICATION	used by resultcollector.sampleoccurred(sampleevent event)
WITHOUT_CLASSIFICATION	used by resultcollector#recordstats()
WITHOUT_CLASSIFICATION	routines for testsaveservice
WITHOUT_CLASSIFICATION	allow test code to check for spurious class references
WITHOUT_CLASSIFICATION	boolean ok = true;
WITHOUT_CLASSIFICATION	don't bother checking class is present if it is to be updated
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	extract version digits from string of the form #revision n.mm # (where # is actually $ above)
WITHOUT_CLASSIFICATION	check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	we use the default character set encoding of the jre
WITHOUT_CLASSIFICATION	we use the default character set encoding of the jre
WITHOUT_CLASSIFICATION	we use the default character set encoding of the jre
WITHOUT_CLASSIFICATION	used by resultcollector when creating output files
WITHOUT_CLASSIFICATION	write xml header if we have the charset to use for encoding
WITHOUT_CLASSIFICATION	we do not use getencoding method of writer since that returns the historical name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- xml result file constants and field name constants ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	used by scriptwrapperconverter
WITHOUT_CLASSIFICATION	shared with testelementsaver $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	probably no point in converting this to return a sampleevent
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called by saveservice.loadtree(inputstream reader) if xstream loading fails
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	ok $non-nls-1$
WITHOUT_CLASSIFICATION	do upgrade translation
WITHOUT_CLASSIFICATION	must always agree
WITHOUT_CLASSIFICATION	delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	create the property
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called by resultcollector#loadexistingfile() if xstream loading fails
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- additional csv result file constants and field name constants ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	used to enclose variable name labels to distinguish from any of the above labels $non-nls-1$
WITHOUT_CLASSIFICATION	initial config from properties
WITHOUT_CLASSIFICATION	date formats to try if the time format does not parse as milliseconds
WITHOUT_CLASSIFICATION	$non-nls-1$ (for compatibility this is the original default)
WITHOUT_CLASSIFICATION	enough to read the header column names get the first line and see if it is the header
WITHOUT_CLASSIFICATION	not a valid header
WITHOUT_CLASSIFICATION	may change the format later restart from beginning
WITHOUT_CLASSIFICATION	may be updated
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this assumes the header names are all single words with no spaces word followed by 0 or more repeats of (non-word char + word) where the non-word char (\2) is the same e.g. abc|def|ghi but not abd|def~ghi $non-nls-1$ last entries may be quoted strings
WITHOUT_CLASSIFICATION	save the name for error reporting
WITHOUT_CLASSIFICATION	method is only ever called from one thread at a time so it's ok to use a static dateformat
WITHOUT_CLASSIFICATION	can this happen?
WITHOUT_CLASSIFICATION	strip off the trailing delimiter
WITHOUT_CLASSIFICATION	map header names to set() methods
WITHOUT_CLASSIFICATION	these entries must be in the same order as columns are saved/restored.
WITHOUT_CLASSIFICATION	both these are needed in the list even though they set the same variable
WITHOUT_CLASSIFICATION	try default delimiter
WITHOUT_CLASSIFICATION	now validate the result
WITHOUT_CLASSIFICATION	failed to recognise the header
WITHOUT_CLASSIFICATION	we know the column names all exist so create the config
WITHOUT_CLASSIFICATION	check if the line is a header
WITHOUT_CLASSIFICATION	check for quoted variable names
WITHOUT_CLASSIFICATION	they are always last
WITHOUT_CLASSIFICATION	unknown column name
WITHOUT_CLASSIFICATION	out of order
WITHOUT_CLASSIFICATION	don't add delimiter first time round
WITHOUT_CLASSIFICATION	these methods handle parameters that could contain delimiters or quotes
WITHOUT_CLASSIFICATION	these methods handle parameters that cannot contain delimiters or quotes
WITHOUT_CLASSIFICATION	find the first non-null message
WITHOUT_CLASSIFICATION	need both sample and error count to be any use
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	did not find \n put the character back
WITHOUT_CLASSIFICATION	need to append something so delimiter is added
WITHOUT_CLASSIFICATION	=================================== csv quote/unquote handling ==============================
WITHOUT_CLASSIFICATION	private versions of what might eventually be part of commons-csv or commons-lang/io
WITHOUT_CLASSIFICATION	double the quote char
WITHOUT_CLASSIFICATION	doubled quote => quote
WITHOUT_CLASSIFICATION	state of the parser
WITHOUT_CLASSIFICATION	remove following \n if present
WITHOUT_CLASSIFICATION	do we have some data or a trailing empty field? we have some data we've started a field just seen ""
WITHOUT_CLASSIFICATION	while not eof eof (or end of string) so collect any remaining data
WITHOUT_CLASSIFICATION	this is not currently used by jmeter code. as it uses sun-specific code (the only such in jmeter) it has been commented out for now.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	rethrow other errors
WITHOUT_CLASSIFICATION	mainly for testelementconverter
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	don't save empty comments - except for the testplan (to maintain compatibility)
WITHOUT_CLASSIFICATION	skip special properties if required
WITHOUT_CLASSIFICATION	remap the class name
WITHOUT_CLASSIFICATION	could be null if it has been deleted via nameupdater
WITHOUT_CLASSIFICATION	could be null if it has been deleted via nameupdater
WITHOUT_CLASSIFICATION	no need to check version just process the attributes if present
WITHOUT_CLASSIFICATION	only decode strings if inversion = 1.0
WITHOUT_CLASSIFICATION	names of properties that are handled specially
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	otherwise don't save anything - no point
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if we have a file but no data then read the file
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	skip special properties if required
WITHOUT_CLASSIFICATION	no need to check version just process the attributes if present
WITHOUT_CLASSIFICATION	could be null if it has been deleted via nameupdater
WITHOUT_CLASSIFICATION	don't save empty comments
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	always decode
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	superclass does not use types
WITHOUT_CLASSIFICATION	$non-nls-1$ must be same as header.hname - but that is built later
WITHOUT_CLASSIFICATION	n.b. these must agree with the new member names in samplesaveconfiguration $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	additional member names which are currently not written out $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	these are new fields; not saved unless true
WITHOUT_CLASSIFICATION	these fields are not currently saved or restored
WITHOUT_CLASSIFICATION	save most things
WITHOUT_CLASSIFICATION	save the new fields - but only if they are not the default
WITHOUT_CLASSIFICATION	helper method to simplify marshall routine
WITHOUT_CLASSIFICATION	maintain backward compatibility (bytes was not in the jmx file)
WITHOUT_CLASSIFICATION	make sure decoding follows input file
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this") note this also guards against possible window in checkforopenfiles()
WITHOUT_CLASSIFICATION	volatile needed to ensure safe publication
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	getparentfile() may not work on relative paths
WITHOUT_CLASSIFICATION	checks for entries in use
WITHOUT_CLASSIFICATION	tidy up any unused entries
WITHOUT_CLASSIFICATION	must first convert to absolute path names to ensure parents are available
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	need to check if we are at eof already
WITHOUT_CLASSIFICATION	already at eof
WITHOUT_CLASSIFICATION	ok we still have some data restore it
WITHOUT_CLASSIFICATION	if file encoding is specified read using that encoding otherwise use default platform encoding
WITHOUT_CLASSIFICATION	if file encoding is specified write using that encoding otherwise use default platform encoding
WITHOUT_CLASSIFICATION	package access for test code only
WITHOUT_CLASSIFICATION	some known attribute names just for convenience
WITHOUT_CLASSIFICATION	store the resource bundle as an attribute of the beandescriptor
WITHOUT_CLASSIFICATION	localize the property names and descriptions
WITHOUT_CLASSIFICATION	we also provide the resource bundle
WITHOUT_CLASSIFICATION	i is used below
WITHOUT_CLASSIFICATION	set the bean's property to the value we just obtained
WITHOUT_CLASSIFICATION	we can't assign null to primitive types.
WITHOUT_CLASSIFICATION	can occur running headless on jenkins
WITHOUT_CLASSIFICATION	value was not provided and this is allowed
WITHOUT_CLASSIFICATION	not an expression (isn't or can't be) not null.
WITHOUT_CLASSIFICATION	the known tags are assumed to be valid
WITHOUT_CLASSIFICATION	was not a tag so if we can't accept other values
WITHOUT_CLASSIFICATION	delegate the final check to the typeeditor
WITHOUT_CLASSIFICATION	setastext failed not valid
WITHOUT_CLASSIFICATION	setastext succeeded valid
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	/ final because called from ctor
WITHOUT_CLASSIFICATION	localize the bean name $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	not an expression (isn't or can't be) not null.
WITHOUT_CLASSIFICATION	provide an initial edit value if necessary -- this is an heuristic that tries to provide the most convenient initial edit value
WITHOUT_CLASSIFICATION	not interested in this method.
WITHOUT_CLASSIFICATION	not an expression (isn't or can't be) not null. may throw illegalargumentexc.
WITHOUT_CLASSIFICATION	not an expression (can't be or isn't) not null.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	so we can detect it
WITHOUT_CLASSIFICATION	so we can detect it
WITHOUT_CLASSIFICATION	revert to the previous value
WITHOUT_CLASSIFICATION	ensure value is propagated to editor
WITHOUT_CLASSIFICATION	get and sort the property descriptors
WITHOUT_CLASSIFICATION	should be quicker to find the editors if they are registered.
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass();
WITHOUT_CLASSIFICATION	$non-nls-$
WITHOUT_CLASSIFICATION	obtain the propertyeditors
WITHOUT_CLASSIFICATION	index is also used for accessing editors array
WITHOUT_CLASSIFICATION	don't get editors for hidden or non-read-write properties
WITHOUT_CLASSIFICATION	we check the class type above
WITHOUT_CLASSIFICATION	initialize the editor with the provided default value or null
WITHOUT_CLASSIFICATION	in case of bsf and jsr elements i want to add textareaeditor as a listener to scriptlanguage combobox.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	some editors do tiny transformations (e.g. "true" to "true") may throw illegalargumentexception
WITHOUT_CLASSIFICATION	initialize the gui
WITHOUT_CLASSIFICATION	acceptsnull acceptsexpressions acceptsother
WITHOUT_CLASSIFICATION	uninitialized -- set it to the defaults
WITHOUT_CLASSIFICATION	now set the editors to the element's values
WITHOUT_CLASSIFICATION	for labels
WITHOUT_CLASSIFICATION	for editors
WITHOUT_CLASSIFICATION	for panels
WITHOUT_CLASSIFICATION	if the displayname is the empty string leave it like that.
WITHOUT_CLASSIFICATION	might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	map of translations for tags; only created if there is at least one tag and a resourcebundle has been provided.
WITHOUT_CLASSIFICATION	the minimum index of the tags in the combo box
WITHOUT_CLASSIFICATION	the maximum index of the tags in the combo box
WITHOUT_CLASSIFICATION	only for use from test code
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	add a 0-sized invisible component that will take all the vertical space that nobody wants
WITHOUT_CLASSIFICATION	track where tags start
WITHOUT_CLASSIFICATION	and where they end
WITHOUT_CLASSIFICATION	check if the entry index corresponds to a tag if so return the tag this also works if the tags were not translated
WITHOUT_CLASSIFICATION	not a tag entry return the original value
WITHOUT_CLASSIFICATION	will revert to last valid value if invalid
WITHOUT_CLASSIFICATION	replace a string with its translation if one exists
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	a quick verification just in case
WITHOUT_CLASSIFICATION	get the beaninfo
WITHOUT_CLASSIFICATION	in other gui component cleargui resets the value to defaults one as there is one gui per element with testbeangui as it's shared its default values are only known here we must call setvalues with element (as it holds default values) otherwise we will get values as computed by customizer reset and not default ones
WITHOUT_CLASSIFICATION	fetch data from screen fields
WITHOUT_CLASSIFICATION	copy all property values from the map into the element
WITHOUT_CLASSIFICATION	cannot be null
WITHOUT_CLASSIFICATION	copy all property values into the map
WITHOUT_CLASSIFICATION	handles hex as well
WITHOUT_CLASSIFICATION	some editors may need the descriptor
WITHOUT_CLASSIFICATION	create a button to trigger the file chooser
WITHOUT_CLASSIFICATION	create a panel containing the combo and the button
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	handles hex as well
WITHOUT_CLASSIFICATION	configure(element); super.clear(); set name enabled. put the default values back into the new element
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	we don't want to show expert beans in the menus unless we're in expert mode
WITHOUT_CLASSIFICATION	may be impossible but no harm in checking
WITHOUT_CLASSIFICATION	- jmx
WITHOUT_CLASSIFICATION	get a wrappereditor to provide the field or combo -- we'll delegate most methods to it
WITHOUT_CLASSIFICATION	acceptsnull acceptsexpressions acceptsother default
WITHOUT_CLASSIFICATION	assume it's string
WITHOUT_CLASSIFICATION	+ jmx attributes - do not change
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	there's only 1 test plan so can cache the mode here
WITHOUT_CLASSIFICATION	- jmx field names
WITHOUT_CLASSIFICATION	create transient item
WITHOUT_CLASSIFICATION	we set the classpath
WITHOUT_CLASSIFICATION	action to be taken when a sampler error occurs
WITHOUT_CLASSIFICATION	property name
WITHOUT_CLASSIFICATION	thread-specific variables saved here to save recalculation
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	only samplers have the thread context set up by jmeterthread at present so suppress the warning for now
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.samplers.remotethreadslistener#threadfinished()
WITHOUT_CLASSIFICATION	clone should never return null
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	this("test plan"); setfunctionalmode(false); setserialized(false);
WITHOUT_CLASSIFICATION	setfunctionalmode(false); setserialized(false);
WITHOUT_CLASSIFICATION	log.warn("threadcontext was not set up - should only happen in junit testing" new throwable("debug"));
WITHOUT_CLASSIFICATION	default implementation
WITHOUT_CLASSIFICATION	moved from jmeter class
WITHOUT_CLASSIFICATION	lifecycle methods
WITHOUT_CLASSIFICATION	jmx property name do not change
WITHOUT_CLASSIFICATION	value is the correct class
WITHOUT_CLASSIFICATION	value is of type collection<jmeterproperty>
WITHOUT_CLASSIFICATION	private static stringproperty defaultproperty = new stringproperty();
WITHOUT_CLASSIFICATION	name cannot be null
WITHOUT_CLASSIFICATION	two null values -- return equal
WITHOUT_CLASSIFICATION	empty collection local var is here to allow suppresswarnings
WITHOUT_CLASSIFICATION	empty collection
WITHOUT_CLASSIFICATION	empty collection
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	empty collection ok to cast local var is here to allow suppresswarnings
WITHOUT_CLASSIFICATION	n.b. other classes rely on this returning just the string.
WITHOUT_CLASSIFICATION	|| !ctx.issamplingstarted()
WITHOUT_CLASSIFICATION	synch is probably not needed as only called before run starts
WITHOUT_CLASSIFICATION	this is only possible for 3rd party controllers by default
WITHOUT_CLASSIFICATION	called from multiple threads
WITHOUT_CLASSIFICATION	backward compatibility
WITHOUT_CLASSIFICATION	check there is a gui
WITHOUT_CLASSIFICATION	check there is a gui
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	expensive so do once
WITHOUT_CLASSIFICATION	i.e. "true"
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	based on this scheduler is enabled or disabled
WITHOUT_CLASSIFICATION	gives access to parent thread threadgroup
WITHOUT_CLASSIFICATION	for access to stop methods.
WITHOUT_CLASSIFICATION	the following variables may be set/read from multiple threads.
WITHOUT_CLASSIFICATION	may be set from a different thread
WITHOUT_CLASSIFICATION	ensure that interrupt cannot overlap with shutdown
WITHOUT_CLASSIFICATION	tl - is
WITHOUT_CLASSIFICATION	see below for reason for this change. just in case this causes problems allow the change to be backed out
WITHOUT_CLASSIFICATION	threadcontext is not thread-safe so keep within thread
WITHOUT_CLASSIFICATION	might be found by contoller.next()
WITHOUT_CLASSIFICATION	prevent any further interrupts
WITHOUT_CLASSIFICATION	make sure current interrupt is finished prevent another starting yet
WITHOUT_CLASSIFICATION	allow any pending interrupt to complete (ok because currentsampler == null)
WITHOUT_CLASSIFICATION	find parent controllers of current sampler
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	check if we are running a transaction
WITHOUT_CLASSIFICATION	find the package for the transaction
WITHOUT_CLASSIFICATION	check if the transaction is done
WITHOUT_CLASSIFICATION	get the transaction sample result
WITHOUT_CLASSIFICATION	check assertions for the transaction sample
WITHOUT_CLASSIFICATION	notify listeners with the transaction sample result
WITHOUT_CLASSIFICATION	transaction is done we do not have a sampler to sample
WITHOUT_CLASSIFICATION	recursive call
WITHOUT_CLASSIFICATION	check if we have a sampler to sample
WITHOUT_CLASSIFICATION	get the sampler ready to sample
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	testbeanhelper.prepare() is ok
WITHOUT_CLASSIFICATION	check there is a gui
WITHOUT_CLASSIFICATION	check there is a gui
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	must not ignore this one make sure errors are output to the log file
WITHOUT_CLASSIFICATION	tell the monitor we are done remove the threadlocal entry
WITHOUT_CLASSIFICATION	perform the actual sample
WITHOUT_CLASSIFICATION	if we got any results then perform processing on the result
WITHOUT_CLASSIFICATION	do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	add the result as subsample of transaction if we are in a transaction
WITHOUT_CLASSIFICATION	check if thread or test should be stopped
WITHOUT_CLASSIFICATION	finish up
WITHOUT_CLASSIFICATION	checks the scheduler to stop the iteration
WITHOUT_CLASSIFICATION	check if this instance is present in transaction listener list
WITHOUT_CLASSIFICATION	check for the same instance
WITHOUT_CLASSIFICATION	listeners = controller.getlisteners();
WITHOUT_CLASSIFICATION	set the scheduler to start
WITHOUT_CLASSIFICATION	call threadlistener.threadstarted()
WITHOUT_CLASSIFICATION	call threadlistener.threadfinished()
WITHOUT_CLASSIFICATION	probably not possible but check anyway
WITHOUT_CLASSIFICATION	called by standardjmeterengine testaction and accesslogsampler
WITHOUT_CLASSIFICATION	delay between checks
WITHOUT_CLASSIFICATION	don't bother reporting stop test interruptions
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	fetch once; must be done under lock (also protects against null)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	delay between checks
WITHOUT_CLASSIFICATION	used by debugsampler
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	only create the map if it is required
WITHOUT_CLASSIFICATION	all implementations extend testelement
WITHOUT_CLASSIFICATION	all implementations extend testelement
WITHOUT_CLASSIFICATION	int
WITHOUT_CLASSIFICATION	number of active threads in this group
WITHOUT_CLASSIFICATION	copy our name into that of the controller otherwise name reverts
WITHOUT_CLASSIFICATION	5 seconds
WITHOUT_CLASSIFICATION	+ jmx entries - do not change the string values
WITHOUT_CLASSIFICATION	- jmx entries
WITHOUT_CLASSIFICATION	if true the scheduler is enabled
WITHOUT_CLASSIFICATION	set the start time for the thread duration is in seconds
WITHOUT_CLASSIFICATION	force a sensible start time
WITHOUT_CLASSIFICATION	enables the scheduler
WITHOUT_CLASSIFICATION	maximum pause to use
WITHOUT_CLASSIFICATION	fetch once; needs to stay constant
WITHOUT_CLASSIFICATION	needs to be same time for all threads in the group
WITHOUT_CLASSIFICATION	set start and end time
WITHOUT_CLASSIFICATION	n.b. context needs to be fetched in the correct thread
WITHOUT_CLASSIFICATION	store context from root thread to pass it to created threads
WITHOUT_CLASSIFICATION	copy in threadstarter thread context from calling thread
WITHOUT_CLASSIFICATION	needs to be constant for all threads
WITHOUT_CLASSIFICATION	else start immediately
WITHOUT_CLASSIFICATION	set the endtime for the thread
WITHOUT_CLASSIFICATION	duration is in seconds starting from when the threads start
WITHOUT_CLASSIFICATION	ramp-up delay (except first)
WITHOUT_CLASSIFICATION	no point continuing beyond the end time
WITHOUT_CLASSIFICATION	already waited
WITHOUT_CLASSIFICATION	threadstarter is daemon but we don't want sampler threads to be so too
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	return all the associated counts together
WITHOUT_CLASSIFICATION	set stop flag interrupt sampler if possible
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	set the start time for the thread duration is in seconds
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	@guardedgy("this")
WITHOUT_CLASSIFICATION	currently only used by jmeterthread
WITHOUT_CLASSIFICATION	check if the property exists
WITHOUT_CLASSIFICATION	relative start-up time
WITHOUT_CLASSIFICATION	not used
WITHOUT_CLASSIFICATION	must be an old test plan
WITHOUT_CLASSIFICATION	initialise the gui field values
WITHOUT_CLASSIFICATION	maximum size to convert a document to text (default 10mb)
WITHOUT_CLASSIFICATION	-1 to disable the write limit
WITHOUT_CLASSIFICATION	open the stream
WITHOUT_CLASSIFICATION	close the stream
WITHOUT_CLASSIFICATION	the string is made private so the compiler can't propagate it into jmeterutils. (java compilers may make copies of final variables) this ensures that jmeterutils always gets the correct version even if jmeterutils is not re-compiled during the build.
WITHOUT_CLASSIFICATION	this assumes that the jmv treats a class file as a resource (not all do).
WITHOUT_CLASSIFICATION	convert to url for manifest
WITHOUT_CLASSIFICATION	default to plain version
WITHOUT_CLASSIFICATION	not instantiable
WITHOUT_CLASSIFICATION	allow reversion to original shared session context
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if we are using a single session otherwise
WITHOUT_CLASSIFICATION	also set up httpclient defaults
WITHOUT_CLASSIFICATION	no point doing this on a per-connection basis as there is currently no way to configure it. so we leave it to the defaults set up in the ssl context
WITHOUT_CLASSIFICATION	httpsurlconnection secureconn = (httpsurlconnection) conn; secureconn.setsslsocketfactory(this.getcontext().getsocketfactory());
WITHOUT_CLASSIFICATION	creates new ssl context @return ssl context @throws generalsecurityexception
WITHOUT_CLASSIFICATION	now wrap the default managers with our key manager
WITHOUT_CLASSIFICATION	get the default trust managers
WITHOUT_CLASSIFICATION	wrap the defaults in our custom trust manager
WITHOUT_CLASSIFICATION	implementation moved to jmeterkeystore as only that has the keytype info
WITHOUT_CLASSIFICATION	++ for testbean implementations only passed to file or script
WITHOUT_CLASSIFICATION	file to source (overrides script)
WITHOUT_CLASSIFICATION	script (if file not provided)
WITHOUT_CLASSIFICATION	bsf/jsr223 language to use -- for testbean implementations only
WITHOUT_CLASSIFICATION	can be the empty string
WITHOUT_CLASSIFICATION	for use by the server script
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	save the actual socket
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	forward all the sslsocket methods to the input socket
WITHOUT_CLASSIFICATION	also forward all the socket methods.
WITHOUT_CLASSIFICATION	scriptruntime.call(cx fun global args global);
WITHOUT_CLASSIFICATION	must wrap non-scriptable objects before presenting to rhino
WITHOUT_CLASSIFICATION	includes javascriptexception rethrows errors
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	initialize context and global scope object
WITHOUT_CLASSIFICATION	read-only access after class has been initialised
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	re-throw errors because we're supposed to let the jvm see it don't re-throw stackoverflows because we know we've corrected the situation by aborting the loop and a long stacktrace would end up on the user's console
WITHOUT_CLASSIFICATION	calculate each time as likely to be called for each add
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	likely a wrapped exception from a liveconnect call. display its stack trace as a diagnostic
WITHOUT_CLASSIFICATION	for n values in an aggregate sample the average value = (val/n) so need to add n (val/n) (val/n) = val val / n
WITHOUT_CLASSIFICATION	load additionnal name conversion rules from plugins
WITHOUT_CLASSIFICATION	if we are creating a jsr223 element add the cache key property. note that this cannot be done in the jsr223beaninfosupport class because that causes problems with the group; its properties are not always set up before they are needed. this cause various issues with the gui - wrong field attributes (should not allow null) - sometimes gui is completely mangled - field appears at start rather than at end. - the following warning is logged jmeter.testbeans.gui.generictestbeancustomizer org.apache.jmeter.util.jsr223testelement#cachekey does not appear to have been configured adding the group here solves these issues and it's also possible to add the key just before the script panel to which it relates. it's not yet clear why this should be but it looks as though createpropertygroup does not work properly if it is called from any subclasses of this class.
WITHOUT_CLASSIFICATION	names are strings
WITHOUT_CLASSIFICATION	no point dividing by 1
WITHOUT_CLASSIFICATION	1024=bytes per kb
WITHOUT_CLASSIFICATION	account for multiple samples not yet intialised
WITHOUT_CLASSIFICATION	1000 = millisecs/sec
WITHOUT_CLASSIFICATION	conversions for milli and nano seconds
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	use actual class name for log
WITHOUT_CLASSIFICATION	most subclasses will need these
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	we have a file read and process it
WITHOUT_CLASSIFICATION	we have a file read and process it
WITHOUT_CLASSIFICATION	wraps the socket in a slow ssl socket if necessary
WITHOUT_CLASSIFICATION	what host am i running on?
WITHOUT_CLASSIFICATION	special flag for use in debugging resources
WITHOUT_CLASSIFICATION	provide random numbers to whomever wants one
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	for java sockets for commons httpclient sockets
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	done by finally block filereader.close();
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ for use in debugging $non-nls-1$
WITHOUT_CLASSIFICATION	are we the default language?
WITHOUT_CLASSIFICATION	jmeter.fail("could not read internal resource. " + "archive is broken.");
WITHOUT_CLASSIFICATION	keep existing settings
WITHOUT_CLASSIFICATION	don't change locale from en_gb to en
WITHOUT_CLASSIFICATION	language change worked check if we at least found the correct language
WITHOUT_CLASSIFICATION	no need to reset locale
WITHOUT_CLASSIFICATION	reset locale if necessary so other locales are properly handled
WITHOUT_CLASSIFICATION	special mode for debugging resource handling
WITHOUT_CLASSIFICATION	special mode for debugging resource handling
WITHOUT_CLASSIFICATION	can be returned by headless hosts
WITHOUT_CLASSIFICATION	can be returned by headless hosts
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	redisplay.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	file to source (overrides script)
WITHOUT_CLASSIFICATION	script (if file not provided)
WITHOUT_CLASSIFICATION	use actual class name for log
WITHOUT_CLASSIFICATION	most subclasses will need these
WITHOUT_CLASSIFICATION	end method
WITHOUT_CLASSIFICATION	$non-nls-1$ reader = xmlfactory.newsaxparser().getxmlreader();
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	done
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	empty value $non-nls-1$
WITHOUT_CLASSIFICATION	if not empty then script in scripttext will be compiled and cached
WITHOUT_CLASSIFICATION	lrumap does not support generics (yet)
WITHOUT_CLASSIFICATION	add variables for access to context and variables
WITHOUT_CLASSIFICATION	for use in debugging
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	also handles read(byte[])
WITHOUT_CLASSIFICATION	-- for testbean implementations only
WITHOUT_CLASSIFICATION	ensure variables are not null
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ set params as a single line $non-nls-1$ and set as an array $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	overridden by non-testbean implementations to return the property value instead
WITHOUT_CLASSIFICATION	overridden by non-testbean implementations to return the property value instead
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	now temp2 has the lowest of the three components
WITHOUT_CLASSIFICATION	this sequence is borrowed from org.apache.commons.httpclient.protocol.reflectionsocketfactory.createsocket
WITHOUT_CLASSIFICATION	convert to telnet port
WITHOUT_CLASSIFICATION	prompt is unnecessary
WITHOUT_CLASSIFICATION	reset for other users
WITHOUT_CLASSIFICATION	tell server that we are done
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	this.setdaemon(true);
WITHOUT_CLASSIFICATION	have we yet tried to load the truststore?
WITHOUT_CLASSIFICATION	ensure not null
WITHOUT_CLASSIFICATION	the password can be defined as a property; this dialogue is provided to allow it to be entered at run-time. however this does not gain much as the dialogue does not (yet) support hidden input
WITHOUT_CLASSIFICATION	we've tried
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	empty if not provided use the system property to determine the type otherwise use the name
WITHOUT_CLASSIFICATION	also handles write(byte[])
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	temporary copies so can set the final ones
WITHOUT_CLASSIFICATION	this class is not serialised the interpreter instance for this class
WITHOUT_CLASSIFICATION	script file to initialize the interpreter with
WITHOUT_CLASSIFICATION	logger to use during initialization and script run
WITHOUT_CLASSIFICATION	called from ctor so must be private (or final but it does not seem useful elsewhere)
WITHOUT_CLASSIFICATION	do this before starting the script
WITHOUT_CLASSIFICATION	check file so we can distinguish file error from script error
WITHOUT_CLASSIFICATION	cannot find the file locally so try the bin directory
WITHOUT_CLASSIFICATION	programming error
WITHOUT_CLASSIFICATION	also programming error
WITHOUT_CLASSIFICATION	for use by unit tests
WITHOUT_CLASSIFICATION	configure the document builder factory
WITHOUT_CLASSIFICATION	elements have empty nodevalue but we are usually interested in their content
WITHOUT_CLASSIFICATION	default empty array to prevent npes
WITHOUT_CLASSIFICATION	no point checking an empty keystore
WITHOUT_CLASSIFICATION	note if is == null the arrays will be empty
WITHOUT_CLASSIFICATION	api expects null not empty array see httpdocs.oracle.com/javase/6/docs/api/javax/net/ssl/x509keymanager.html
WITHOUT_CLASSIFICATION	i.e. is == null
WITHOUT_CLASSIFICATION	i.e. is == null
WITHOUT_CLASSIFICATION	number of samples in this entry
WITHOUT_CLASSIFICATION	the following getters may appear not to be used - however they are invoked via the functor class
WITHOUT_CLASSIFICATION	no samples collected
WITHOUT_CLASSIFICATION	better behaviour when howlong=0 or lasttime=0
WITHOUT_CLASSIFICATION	better behaviour when howlong=0 or lasttime=0
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	1024=bytes per kb
WITHOUT_CLASSIFICATION	we really should never get here because eval will throw an exception if xpath is invalid but whatever better safe
WITHOUT_CLASSIFICATION	no samples collected
WITHOUT_CLASSIFICATION	better behaviour when howlong=0 or lasttime=0
WITHOUT_CLASSIFICATION	this is our first sample set the start time to current timestamp
WITHOUT_CLASSIFICATION	this is our first sample set the start time to current timestamp
WITHOUT_CLASSIFICATION	always update the end time
WITHOUT_CLASSIFICATION	= elapsed
WITHOUT_CLASSIFICATION	appears not to be used - however it is invoked via the functor class
WITHOUT_CLASSIFICATION	only for use by test code
WITHOUT_CLASSIFICATION	code duplicated from getpagesize()
WITHOUT_CLASSIFICATION	a checkbox choosing whether or not only successes should be logged.
WITHOUT_CLASSIFICATION	overrides abstractjmeterguicomponent.configure(testelement)
WITHOUT_CLASSIFICATION	keep track of classes created
WITHOUT_CLASSIFICATION	(for instructional purposes only!)
WITHOUT_CLASSIFICATION	perform the sampling
WITHOUT_CLASSIFICATION	start timing
WITHOUT_CLASSIFICATION	do something here
WITHOUT_CLASSIFICATION	set up the sample result details
WITHOUT_CLASSIFICATION	end timimg
WITHOUT_CLASSIFICATION	helper method
WITHOUT_CLASSIFICATION	helper method to set up the gui screen
WITHOUT_CLASSIFICATION	standard setup
WITHOUT_CLASSIFICATION	add the standard title
WITHOUT_CLASSIFICATION	specific setup
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the name of the property used to hold our data $non-nls-1$
WITHOUT_CLASSIFICATION	note the file panel already includes the error logging checkbox so we don't have to add it explicitly.
WITHOUT_CLASSIFICATION	did sample succeed? sampler data
WITHOUT_CLASSIFICATION	create a data input text field @return the panel for entering the data
WITHOUT_CLASSIFICATION	do something
WITHOUT_CLASSIFICATION	do something
WITHOUT_CLASSIFICATION	a string property
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	we have a default
WITHOUT_CLASSIFICATION	throwable wanted
WITHOUT_CLASSIFICATION	comment wanted
WITHOUT_CLASSIFICATION	common output function
WITHOUT_CLASSIFICATION	routine to perform the output (also used by __logn() function)
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	$non-nls-1
WITHOUT_CLASSIFICATION	n.b. if the string is not recognised debug is assumed
WITHOUT_CLASSIFICATION	thread method is potentially expensive
WITHOUT_CLASSIFICATION	allow variable to be omitted
WITHOUT_CLASSIFICATION	vars can be null if run from testplan
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@see testregexfunction for unit tests
WITHOUT_CLASSIFICATION	remove initial empty entry
WITHOUT_CLASSIFICATION	$non-nls1$ $non-nls1$
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	did we find beanshell?
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	relatively expensive operation so do it once
WITHOUT_CLASSIFICATION	pass in some variables
WITHOUT_CLASSIFICATION	mainly for bsh.evalerror
WITHOUT_CLASSIFICATION	execute the script
WITHOUT_CLASSIFICATION	helper method for use by scripts
WITHOUT_CLASSIFICATION	can happen if called during test closedown
WITHOUT_CLASSIFICATION	parameters are stored here
WITHOUT_CLASSIFICATION	for unit tests see testjexlfunction
WITHOUT_CLASSIFICATION	string or integer
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. stop reading the file if we get a blank line this allows for trailing comments in the file
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	now evaluate the script getting the result
WITHOUT_CLASSIFICATION	two delimiters in a row; add an empty string
WITHOUT_CLASSIFICATION	lines in the file split into columns
WITHOUT_CLASSIFICATION	0-based
WITHOUT_CLASSIFICATION	name of the file
WITHOUT_CLASSIFICATION	catch the trailing delimiter
WITHOUT_CLASSIFICATION	the beginning of the line is a "delimiter" so that abc returns "" "a" "b" "c"
WITHOUT_CLASSIFICATION	will be null if function is used on testplan
WITHOUT_CLASSIFICATION	return jmetercontextservice.getcontext().getcurrentsampler().getname();
WITHOUT_CLASSIFICATION	added to support external testing
WITHOUT_CLASSIFICATION	only modified by static block so no need to synchronize subsequent read-only access
WITHOUT_CLASSIFICATION	may be null if function is used on testplan
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	desc.add("use fully qualified host name true/false (default false)"); $non-nls-1$
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	we have a default
WITHOUT_CLASSIFICATION	throwable wanted
WITHOUT_CLASSIFICATION	@guardedby("this") needed for error messages
WITHOUT_CLASSIFICATION	@guardedby("this") buffered reader
WITHOUT_CLASSIFICATION	decimalformat adds the number to the end of the format if there are no formatting characters so we need a way to prevent this from messing up the file name.
WITHOUT_CLASSIFICATION	@guardedby("this") should we try to open the file?
WITHOUT_CLASSIFICATION	have we used mycurrent yet? set to 1 if start number is missing (to allow for end without start)
WITHOUT_CLASSIFICATION	low chances to be non numeric we parse
WITHOUT_CLASSIFICATION	low chances to be non numeric we parse
WITHOUT_CLASSIFICATION	to avoid re-opening the file repeatedly after an error only try to open it in the first execute() call (it may be re=opened at eof but that will cause at most one failure.)
WITHOUT_CLASSIFICATION	don't process invalid numbers
WITHOUT_CLASSIFICATION	don't process invalid numbers (including "")
WITHOUT_CLASSIFICATION	has chances to be a var
WITHOUT_CLASSIFICATION	for next time
WITHOUT_CLASSIFICATION	eof re-open file
WITHOUT_CLASSIFICATION	did we open the file?
WITHOUT_CLASSIFICATION	can be null if called from config item testended() method
WITHOUT_CLASSIFICATION	are we processing a file sequence?
WITHOUT_CLASSIFICATION	there is no variable name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this map serves two purposes - maps names to containers - ensures only one container per file across all threads the key is the concatenation of the file name and the xpath string
WITHOUT_CLASSIFICATION	file was not opened successfully are we processing a file sequence?
WITHOUT_CLASSIFICATION	n.b. setparameters is called before the test proper is started and thus variables are not interpreted at this point so defer the file open until later to allow variable file names to be used.
WITHOUT_CLASSIFICATION	varname keeps its value and sum has not taken into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	split string provided
WITHOUT_CLASSIFICATION	@guardedby("filecontainers")
WITHOUT_CLASSIFICATION	we don't have a local copy
WITHOUT_CLASSIFICATION	prevent separate instantiation
WITHOUT_CLASSIFICATION	the cache of file packs - for faster local access
WITHOUT_CLASSIFICATION	save the global copy
WITHOUT_CLASSIFICATION	there's no global copy either
WITHOUT_CLASSIFICATION	save our local copy
WITHOUT_CLASSIFICATION	parameter list
WITHOUT_CLASSIFICATION	all done so return
WITHOUT_CLASSIFICATION	all done now so return the empty string - this allows the caller to append __csvread(filenext) to the last instance of __csvread(filecol) n.b. it is important not to read any further lines at this point otherwise the wrong line can be retrieved when using multiple threads.
WITHOUT_CLASSIFICATION	need to reset the containers for repeated runs; about the only way for functions to detect that a run is starting seems to be the setparameters() call.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	may be null if function is used on testplan
WITHOUT_CLASSIFICATION	can be null if called from config item testended() method
WITHOUT_CLASSIFICATION	parameter list
WITHOUT_CLASSIFICATION	what column is wanted?
WITHOUT_CLASSIFICATION	need to reset the containers for repeated runs; about the only way for functions to detect that a run is starting seems to be the setparameters() call.
WITHOUT_CLASSIFICATION	the cache of file packs - used to improve thread access
WITHOUT_CLASSIFICATION	means platform default
WITHOUT_CLASSIFICATION	empty encoding return to platorm default
WITHOUT_CLASSIFICATION	only needed locally
WITHOUT_CLASSIFICATION	this map serves two purposes - maps file names to containers - ensures only one container per file across all threads
WITHOUT_CLASSIFICATION	called by csvread(xnext) - sets the row to nil so the next row will be picked up the next time round
WITHOUT_CLASSIFICATION	called by csvread(filealias)
WITHOUT_CLASSIFICATION	first call
WITHOUT_CLASSIFICATION	already logged
WITHOUT_CLASSIFICATION	already logged
WITHOUT_CLASSIFICATION	save in case needed later
WITHOUT_CLASSIFICATION	not yet open
WITHOUT_CLASSIFICATION	we have a variable name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	for unit tests see testjexlfunction
WITHOUT_CLASSIFICATION	now evaluate the script getting the result
WITHOUT_CLASSIFICATION	name of the file
WITHOUT_CLASSIFICATION	0-based
WITHOUT_CLASSIFICATION	can be null if called from config item testended() method
WITHOUT_CLASSIFICATION	can be null if called from config item testended() method
WITHOUT_CLASSIFICATION	means no restriction
WITHOUT_CLASSIFICATION	only obtain and cast the return if needed
WITHOUT_CLASSIFICATION	empty chars return to null
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	should we return original value?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	has chances to be a var
WITHOUT_CLASSIFICATION	there is no variable name
WITHOUT_CLASSIFICATION	default to milliseconds
WITHOUT_CLASSIFICATION	probably does not need to be synch (always accessed through threadlocal?) give access to test code
WITHOUT_CLASSIFICATION	vars will be null on test plan
WITHOUT_CLASSIFICATION	maxint = 2147483647
WITHOUT_CLASSIFICATION	not found
WITHOUT_CLASSIFICATION	only modified in class init
WITHOUT_CLASSIFICATION	we have a 3rd parameter
WITHOUT_CLASSIFICATION	resolve any aliases
WITHOUT_CLASSIFICATION	$non_nls-1$ $non_nls-1$
WITHOUT_CLASSIFICATION	not synchronised so can't be shared
WITHOUT_CLASSIFICATION	allow for empty name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	vars will be null on testplan
WITHOUT_CLASSIFICATION	varname keeps its value and sum has not taken into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	values for creating tokens
WITHOUT_CLASSIFICATION	divisor is a positive number should never case nfe
WITHOUT_CLASSIFICATION	convert to a shorter string for test purposes @return the string value
WITHOUT_CLASSIFICATION	this may need mangling due to peeks
WITHOUT_CLASSIFICATION	cached character == integer.max_value when invalid
WITHOUT_CLASSIFICATION	reached end of input arguments - perform final processing
WITHOUT_CLASSIFICATION	key is string or integer
WITHOUT_CLASSIFICATION	strip the null
WITHOUT_CLASSIFICATION	variables used while parsing options.
WITHOUT_CLASSIFICATION	yes so the second argument is missing
WITHOUT_CLASSIFICATION	keep track of token separator
WITHOUT_CLASSIFICATION	should never get to here when stringindex != 0
WITHOUT_CLASSIFICATION	long optional arg must have = as separator
WITHOUT_CLASSIFICATION	non-null comparators don't appear to be used at present
WITHOUT_CLASSIFICATION	consume stray character
WITHOUT_CLASSIFICATION	are we about to start a new option?
WITHOUT_CLASSIFICATION	strip the -
WITHOUT_CLASSIFICATION	2nd argument
WITHOUT_CLASSIFICATION	its a long option
WITHOUT_CLASSIFICATION	parse the arguments that are not options
WITHOUT_CLASSIFICATION	if it is a short option then parse it else
WITHOUT_CLASSIFICATION	equivalent to new treemap((comparator)null);
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass();
WITHOUT_CLASSIFICATION	make sure the hashcode depends on the order as well
WITHOUT_CLASSIFICATION	super-class does not use generics
WITHOUT_CLASSIFICATION	super-class does not use generics
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	this occurs when id == 0 and user has not supplied a descriptor for arguments
WITHOUT_CLASSIFICATION	if get to an arg barrier then return to normal mode else continue accumulating options
WITHOUT_CLASSIFICATION	strip the - -- sequence .. it can either mean a change of state to state_no_options or else a long option
WITHOUT_CLASSIFICATION	find order.indexof(currentkey) using == rather than equals() there may be multiple entries which compare equals (bug 50898) this will be slightly slower than the built-in method but replace() is not used frequently.
WITHOUT_CLASSIFICATION	used for the runtimeexception to short-circuit the traversal $non-nls-1$
WITHOUT_CLASSIFICATION	n.b. the keys can be either jmetertreenode or testelement
WITHOUT_CLASSIFICATION	do nothing - means object is found
WITHOUT_CLASSIFICATION	just in case
WITHOUT_CLASSIFICATION	short circuit traversal when found
WITHOUT_CLASSIFICATION	saves current position in data list
WITHOUT_CLASSIFICATION	end method
WITHOUT_CLASSIFICATION	capture the output
WITHOUT_CLASSIFICATION	helper method to allow input and output to be changed for chaining
WITHOUT_CLASSIFICATION	ensure the application does not hang if it requests input
WITHOUT_CLASSIFICATION	capture the intermediate output
WITHOUT_CLASSIFICATION	not yet terminated
WITHOUT_CLASSIFICATION	not yet terminated n.b. proc.destroy() is called by the finally clause in the run() method
WITHOUT_CLASSIFICATION	we are capturing output default charset is probably appropriate here.
WITHOUT_CLASSIFICATION	the dname which is used if none is provided $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ (do not change) $non-nls-1$ (firefox and windows) $non-nls-1$ (opera)
WITHOUT_CLASSIFICATION	i.e. does keytool support -gencert and -ext ?
WITHOUT_CLASSIFICATION	not instantiable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	create cert for ca using root (requires java 7 for gencert)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	import the signed ca cert into the store (root already there) - both are needed to sign the domain certificates
WITHOUT_CLASSIFICATION	create the self-signed keypairs (requires java 7 for -ext flag)
WITHOUT_CLASSIFICATION	rem generate cert for domain using ca (requires java7 for gencert) and import it
WITHOUT_CLASSIFICATION	generate the request
WITHOUT_CLASSIFICATION	export the root ca for firefox/chrome/ie
WITHOUT_CLASSIFICATION	generate the certificate and store in output file
WITHOUT_CLASSIFICATION	generate the keypair for the host
WITHOUT_CLASSIFICATION	create the certificate rem kuc=digkeye means keyusagecriticial=digitalsignaturekeyencipherment
WITHOUT_CLASSIFICATION	copy for opera
WITHOUT_CLASSIFICATION	alias subject
WITHOUT_CLASSIFICATION	a temporary cache for the focus listener
WITHOUT_CLASSIFICATION	get the certificate request
WITHOUT_CLASSIFICATION	default charset
WITHOUT_CLASSIFICATION	inport the certificate
WITHOUT_CLASSIFICATION	add the sub components
WITHOUT_CLASSIFICATION	register the handler for focus listening. this handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	add the sub components
WITHOUT_CLASSIFICATION	functor count = 0 is handled specially
WITHOUT_CLASSIFICATION	necessary to avoid npe when testing serialisation
WITHOUT_CLASSIFICATION	necessary to avoid npe when testing serialisation
WITHOUT_CLASSIFICATION	if provided
WITHOUT_CLASSIFICATION	compare if the value has changed since we received focus.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	@guardedby("this")
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	register the handler for focus listening. this handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	register the handler for focus listening. this handler will only notify the registered when the text changes from when the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	add the sub components
WITHOUT_CLASSIFICATION	compare if the value has changed since we received focus.
WITHOUT_CLASSIFICATION	a temporary cache for the focus listener
WITHOUT_CLASSIFICATION	used by tableeditor
WITHOUT_CLASSIFICATION	used by tableeditor
WITHOUT_CLASSIFICATION	we use 80% of height
WITHOUT_CLASSIFICATION	private jmenu menu;
WITHOUT_CLASSIFICATION	(comment 16 huw)
WITHOUT_CLASSIFICATION	uninstantiable
WITHOUT_CLASSIFICATION	treats last line specially last line allow for missing terminator
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	notused dimension dim = layoutsize(parent false);
WITHOUT_CLASSIFICATION	work out the total size
WITHOUT_CLASSIFICATION	otherwise there's a vgap too many work out the anchor paint
WITHOUT_CLASSIFICATION	do layout
WITHOUT_CLASSIFICATION	closes reader as well
WITHOUT_CLASSIFICATION	n.b time pattern is passed to java.text.simpledateformat
WITHOUT_CLASSIFICATION	predefined format patterns selected by the property log_format_type (see jmeter.properties) the new-line is added later
WITHOUT_CLASSIFICATION	$non_nls-1$ $non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$ $non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	non-instantiable - static methods only
WITHOUT_CLASSIFICATION	now set the individual categories (if any)
WITHOUT_CLASSIFICATION	further configuration
WITHOUT_CLASSIFICATION	make sure same hierarchy is used
WITHOUT_CLASSIFICATION	this happens if the default log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	key is the type to collect (usually long) value = count of entries
WITHOUT_CLASSIFICATION	we use a treemap because we need the entries to be sorted
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	for n values in an aggregate sample the average value = (val/n) so need to add n (val/n) (val/n) = val val / n
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	running values updated for each sample
WITHOUT_CLASSIFICATION	set the top-level defaults $non_nls-1$
WITHOUT_CLASSIFICATION	this can happen if a log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	helper method to ensure that format is initialised if initializelogging() has not yet been called.
WITHOUT_CLASSIFICATION	if the name contains at least one set of paired single-quotes reformat using dateformat
WITHOUT_CLASSIFICATION	remove the package prefix
WITHOUT_CLASSIFICATION	e.g. long.max_value
WITHOUT_CLASSIFICATION	e.g. long.min_value
WITHOUT_CLASSIFICATION	use math.round () instead of simple (long) to provide correct value rounding
WITHOUT_CLASSIFICATION	ignored. may happen occasionally but no harm done if so.
WITHOUT_CLASSIFICATION	for n same values in sum of square is equal to nval^2
WITHOUT_CLASSIFICATION	no need to divide by 1
WITHOUT_CLASSIFICATION	insert new value
WITHOUT_CLASSIFICATION	if non-null then any object provided to invoke() is ignored.
WITHOUT_CLASSIFICATION	methondname must always be provided.
WITHOUT_CLASSIFICATION	if non-null then any argument list passed to invoke() will be ignored.
WITHOUT_CLASSIFICATION	argument types used to create the method. may be provided explicitly or derived from the constructor argument list.
WITHOUT_CLASSIFICATION	this depends on the class or invokee and either args or types; it is set once by docreatemethod() which must be the only method to access it.
WITHOUT_CLASSIFICATION	if class not provided default to invokee class else null
WITHOUT_CLASSIFICATION	if types not provided default to argument types else null
WITHOUT_CLASSIFICATION	low level invocation routine. should only be called after any defaults have been applied.
WITHOUT_CLASSIFICATION	if invokee was provided then clazz has been set up
WITHOUT_CLASSIFICATION	low-level (recursive) routine to define the method - if not already defined. synchronized to protect access to methodtoinvoke.
WITHOUT_CLASSIFICATION	static only
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	use constructor class if present use invokee if provided use argumenrs if provided
WITHOUT_CLASSIFICATION	parent classes to check are inner classes ok?
WITHOUT_CLASSIFICATION	potentially expensive; do it once
WITHOUT_CLASSIFICATION	potentially expensive; do it once
WITHOUT_CLASSIFICATION	no need to check it again
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	no need to check it again
WITHOUT_CLASSIFICATION	it does not contain a required string
WITHOUT_CLASSIFICATION	it contains a banned string
WITHOUT_CLASSIFICATION	are inner classes ok?
WITHOUT_CLASSIFICATION	annotation classes to check
WITHOUT_CLASSIFICATION	for each directory in the search path add all the jars found there
WITHOUT_CLASSIFICATION	find all jars in the search path
WITHOUT_CLASSIFICATION	should only be called with classes that extend annotations
WITHOUT_CLASSIFICATION	first get all the classes
WITHOUT_CLASSIFICATION	subclasslist);
WITHOUT_CLASSIFICATION	returns the classpath entries that match the search list of jars and paths
WITHOUT_CLASSIFICATION	find all jar files or paths that end with strpathorjar
WITHOUT_CLASSIFICATION	no need to look further
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	might throw an exception assume this is ignorable
WITHOUT_CLASSIFICATION	converts a class file from the text stored in a jar file to a version that can be used in class.forname(). @param strclassname the class name from a jar file @return string the java-style dotted version of the name
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ remove ".class"
WITHOUT_CLASSIFICATION	recursive call
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we have a single character; could be a token it is a token
WITHOUT_CLASSIFICATION	remove trailing splitter
WITHOUT_CLASSIFICATION	found splitchar at end of line
WITHOUT_CLASSIFICATION	this is the new length
WITHOUT_CLASSIFICATION	we saw a delimiter last time so add the default
WITHOUT_CLASSIFICATION	"<?xml "
WITHOUT_CLASSIFICATION	eof
WITHOUT_CLASSIFICATION	$non-nls-1$ add zero padding
WITHOUT_CLASSIFICATION	@see testjorphanutils for unit tests
WITHOUT_CLASSIFICATION	$non-nls-1$ add zero padding
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this is the name of the hotspot diagnostic platform mbean (sun java 1.6) see httpdownload.oracle.com/javase/6/docs/jre/api/management/extension/com/sun/management/hotspotdiagnosticmxbean.html
WITHOUT_CLASSIFICATION	singletonholder idiom for lazy initialisation
WITHOUT_CLASSIFICATION	these are needed for invoking the method
WITHOUT_CLASSIFICATION	if we could not find the method store the exception here
WITHOUT_CLASSIFICATION	only invoked by iodh class
WITHOUT_CLASSIFICATION	get the platform beans
WITHOUT_CLASSIFICATION	should never fail see if we can actually find the object should never happen
WITHOUT_CLASSIFICATION	prevent useless dump attempts
WITHOUT_CLASSIFICATION	the string so far
WITHOUT_CLASSIFICATION	opened tags
WITHOUT_CLASSIFICATION	don't do anything
WITHOUT_CLASSIFICATION	java.util.date d = null;
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	potentially expensive; do it once
WITHOUT_CLASSIFICATION	-- jmx file attributes - do not change
WITHOUT_CLASSIFICATION	don't instantiate class
WITHOUT_CLASSIFICATION	++ jmx file attributes - do not change
WITHOUT_CLASSIFICATION	i.e. no filter
WITHOUT_CLASSIFICATION	the test object i.e. the instance of the class containing the test method this is the same as testcase for junit3 tests but different for junit4 tests which use a wrapper
WITHOUT_CLASSIFICATION	the testcase to run
WITHOUT_CLASSIFICATION	the method objects for setup (@before) and teardown (@after) methods will be null if not provided or not required
WITHOUT_CLASSIFICATION	the method name to be invoked
WITHOUT_CLASSIFICATION	method should add the junit testxxx method to the list at the end since the sequence matters. @param methodname
WITHOUT_CLASSIFICATION	the wrapper used to invoke the method
WITHOUT_CLASSIFICATION	assume success
WITHOUT_CLASSIFICATION	the name of the class containing the method
WITHOUT_CLASSIFICATION	do not use testcase.run(testresult) method since it will call setup and teardown. doing that will result in calling the setup and teardown method twice and the elapsed time will include setup and teardown.
WITHOUT_CLASSIFICATION	create a new testresult
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	convert junit4 failure to junit3 style
WITHOUT_CLASSIFICATION	copy the original stack trace
WITHOUT_CLASSIFICATION	we should log a warning but allow the test to keep running
WITHOUT_CLASSIFICATION	this should be externalized to the properties
WITHOUT_CLASSIFICATION	probably should not happen
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	copy the original stack trace
WITHOUT_CLASSIFICATION	if the string constructor is not null we use it. if the string constructor is null we use the empty constructor to get a new instance
WITHOUT_CLASSIFICATION	first we see if the class declares a string constructor. if it is doesn't we look for empty constructor.
WITHOUT_CLASSIFICATION	we have to check and make sure the constructor is accessible. if we didn't it would throw an exception and cause a npe.
WITHOUT_CLASSIFICATION	must be final to create instance
WITHOUT_CLASSIFICATION	no need to initialize when getcreateoneinstancepersample is true cause it will be done in sample
WITHOUT_CLASSIFICATION	convert junit4 assertionerror failures to junit3 style so will be treated as failure rather than error.
WITHOUT_CLASSIFICATION	calling a method via reflection results in wrapping any exceptions in ite; unwrap these here so runprotected can allocate them correctly.
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	generates expected exception
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	succeeds only if before method - verifytwo() - is run.
WITHOUT_CLASSIFICATION	fails to generate expected exception
WITHOUT_CLASSIFICATION	or if you have assertions enabled
WITHOUT_CLASSIFICATION	should always fail
WITHOUT_CLASSIFICATION	should not fail
WITHOUT_CLASSIFICATION	generate a test error
WITHOUT_CLASSIFICATION	will generate divide by zero error
WITHOUT_CLASSIFICATION	will generate divide by zero error
WITHOUT_CLASSIFICATION	normal test failure
WITHOUT_CLASSIFICATION	generate test error
WITHOUT_CLASSIFICATION	equation for calculating the weight w = (int)(33 (used/max))
WITHOUT_CLASSIFICATION	changed the logic for bea weblogic in the case a user uses tomcat's status servlet without any modifications. weblogic will return nothing for the connector therefore we need to check the size of the list. peter 12.22.04
WITHOUT_CLASSIFICATION	int spare = cntr.getthreadinfo().getmaxsparethreads();
WITHOUT_CLASSIFICATION	loop to fetch desired connector
WITHOUT_CLASSIFICATION	default get first connector
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	crlf blank line found
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	private monitormodel data;
WITHOUT_CLASSIFICATION	log.warn("only for use in unit testing");
WITHOUT_CLASSIFICATION	log.warn("only for use in unit testing");
WITHOUT_CLASSIFICATION	log.warn("only for use in unit testing");
WITHOUT_CLASSIFICATION	log.warn("only for use in unit testing");
WITHOUT_CLASSIFICATION	we check to see if the lastselectedpath is null after we clear it would return null
WITHOUT_CLASSIFICATION	this.data = null; this.data = stat;
WITHOUT_CLASSIFICATION	i18n contains fixed english text
WITHOUT_CLASSIFICATION	data = model;
WITHOUT_CLASSIFICATION	draw grid only when x is 1. if we didn't the grid line would draw over the data lines making it look bad.
WITHOUT_CLASSIFICATION	optional connector name prefix
WITHOUT_CLASSIFICATION	private list workerslist;
WITHOUT_CLASSIFICATION	the equations
WITHOUT_CLASSIFICATION	for now just swallow the exception
WITHOUT_CLASSIFICATION	surl can be null if read from a file
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	add the main panel and the graph
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	private boolean startdoc = false; private boolean enddoc = false;
WITHOUT_CLASSIFICATION	this.startdoc = true; reset all work variables so reusing the instance starts afresh.
WITHOUT_CLASSIFICATION	this.startdoc = false; this.enddoc = true;
WITHOUT_CLASSIFICATION	let bad input fail silently
WITHOUT_CLASSIFICATION	note the element is a configtestelement so cannot use ftpsampler access methods
WITHOUT_CLASSIFICATION	n.b. originally there was only one filename and only get(retr) was supported to maintain backwards compatibility the property name needs to remain the same $non-nls-1$
WITHOUT_CLASSIFICATION	use binary mode file transfer? $non-nls-1$
WITHOUT_CLASSIFICATION	used for interrupting the sampler
WITHOUT_CLASSIFICATION	assume failure
WITHOUT_CLASSIFICATION	should probably come from the setup dialog
WITHOUT_CLASSIFICATION	could not access file or other error
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	todo
WITHOUT_CLASSIFICATION	called by httprequesthdr
WITHOUT_CLASSIFICATION	lf blank line found
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	are we uploading? $non-nls-1$
WITHOUT_CLASSIFICATION	should the file data be saved in the response? $non-nls-1$
WITHOUT_CLASSIFICATION	no need to close this no need to close this
WITHOUT_CLASSIFICATION	the value is not encoded
WITHOUT_CLASSIFICATION	let the gui show that it will not be encoded
WITHOUT_CLASSIFICATION	get the filename
WITHOUT_CLASSIFICATION	set the values retrieved for the file upload
WITHOUT_CLASSIFICATION	find the first empty line of the multipart it signals end of headers for multipart agents are supposed to terminate lines in crlf
WITHOUT_CLASSIFICATION	regular expression used to match against embedded resource urls
WITHOUT_CLASSIFICATION	need to clear because the
WITHOUT_CLASSIFICATION	optional tasks
WITHOUT_CLASSIFICATION	2 columns size
WITHOUT_CLASSIFICATION	used by httptestsamplegui
WITHOUT_CLASSIFICATION	web request panel
WITHOUT_CLASSIFICATION	set this false to suppress some items for use in http request defaults
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	set false for ajp
WITHOUT_CLASSIFICATION	body data
WITHOUT_CLASSIFICATION	tabbed pane that contains parameters and raw body
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	default changed in 2.3 and again in 2.4
WITHOUT_CLASSIFICATION	concurrent resources download $non-nls-1$
WITHOUT_CLASSIFICATION	see modifytestelement
WITHOUT_CLASSIFICATION	embedded url match regex $non-nls-1$
WITHOUT_CLASSIFICATION	web request panel
WITHOUT_CLASSIFICATION	textfield uses \n (lf) to delimit lines; we need to send crlf. rather than change the way that arguments are processed by the samplers for raw data it is easier to fix the data. on retrival crlf is converted back to lf for storage in the text field. see
WITHOUT_CLASSIFICATION	if raw data and parameters match we allow switching
WITHOUT_CLASSIFICATION	convert crlf to cr see modifytestelement
WITHOUT_CLASSIFICATION	all sub-components with setfont(null) inherit this font
WITHOUT_CLASSIFICATION	only display the port number if it is meaningfully specified
WITHOUT_CLASSIFICATION	web server panel
WITHOUT_CLASSIFICATION	autoredirects and followredirects cannot both be selected
WITHOUT_CLASSIFICATION	implementation
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	protocol
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	content_encoding
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if there is no data then switching between parameters and raw should be allowed with no further user interaction.
WITHOUT_CLASSIFICATION	if there is data in the raw panel then the user should be prevented from switching (that would be easy to track).
WITHOUT_CLASSIFICATION	if the parameter data can be converted (i.e. no names) we warn the user that the parameter data will be lost.
WITHOUT_CLASSIFICATION	if the parameter data cannot be converted to raw then the user should be prevented from doing so raise an error dialog
WITHOUT_CLASSIFICATION	cached value
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	package-protected to allow access by unit-test cases
WITHOUT_CLASSIFICATION	helper method to save the cache entry
WITHOUT_CLASSIFICATION	invalid dates must be treated as expired
WITHOUT_CLASSIFICATION	if no-cache is present ensure that expiresdate remains null which forces revalidation
WITHOUT_CLASSIFICATION	the max-age directive overrides the expires header
WITHOUT_CLASSIFICATION	no max-age && no expires
WITHOUT_CLASSIFICATION	date or lastmodified may be null or in bad format
WITHOUT_CLASSIFICATION	else expiresdate computed in (expires!=null) condition is used
WITHOUT_CLASSIFICATION	helper method to deal with missing headers - commons httpclient
WITHOUT_CLASSIFICATION	apache httpclient
WITHOUT_CLASSIFICATION	is the sample result ok to cache? i.e is it in the 2xx range?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx attributes do not change values $non-nls-1$ $non-nls-1$ $non-nls-1$ -
WITHOUT_CLASSIFICATION	i.e. not using expires check that we are processing expires/cachecontrol
WITHOUT_CLASSIFICATION	see httpsdeveloper.mozilla.org/en/http_caching_faq see httpwww.ietf.org/rfc/rfc2616.txt#13.2.4
WITHOUT_CLASSIFICATION	cache the value
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	echo back
WITHOUT_CLASSIFICATION	check if we have read all the headers
WITHOUT_CLASSIFICATION	we know when to stop reading so we can allow the read method to block
WITHOUT_CLASSIFICATION	no divider was found
WITHOUT_CLASSIFICATION	use null for no expiry
WITHOUT_CLASSIFICATION	store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	has its own debug log; removes matching cookies
WITHOUT_CLASSIFICATION	has its own debug log; removes matching cookies
WITHOUT_CLASSIFICATION	this means the cookie was wrong for the url
WITHOUT_CLASSIFICATION	this means the cookie was wrong for the url
WITHOUT_CLASSIFICATION	tweak diff hc3 vs hc4
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the headers and body are divided by a blank line (the \r is to allow for the cr before lf) $non-nls-1$
WITHOUT_CLASSIFICATION	if we know the content length we can allow the reading of the request to block until more data arrives. if it is chunked transfer we cannot allow the reading to block because we do not know when to stop reading because the chunked transfer is not properly supported yet
WITHOUT_CLASSIFICATION	check how much of the body we have already read as part of reading the headers we subtract two bytes for the crlf divider between header and body
WITHOUT_CLASSIFICATION	the reqest has no body or it has a transfer encoding we do not support. in either case we read any data available
WITHOUT_CLASSIFICATION	we use multi-line mask so can prefix the line with ^ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	use null for no expiry
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	needs to be package-protected to avoid problem with serialisation tests
WITHOUT_CLASSIFICATION	start off with a merged object as a copy of the local object
WITHOUT_CLASSIFICATION	iterate thru each of the other headers
WITHOUT_CLASSIFICATION	find the same property in the local headers
WITHOUT_CLASSIFICATION	we have a match
WITHOUT_CLASSIFICATION	prefer values from the other object
WITHOUT_CLASSIFICATION	the other object has an empty value so remove this value from the merged object
WITHOUT_CLASSIFICATION	use the other object's value
WITHOUT_CLASSIFICATION	break out of the inner loop
WITHOUT_CLASSIFICATION	the other object has a new value to be added to the merged
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	finally merge the names so it's clear they've been merged
WITHOUT_CLASSIFICATION	saves the error if one occurs
WITHOUT_CLASSIFICATION	listen on main socket
WITHOUT_CLASSIFICATION	pass request to new thread
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	todo charset ? $non-nls-1$
WITHOUT_CLASSIFICATION	todo charset ? $non-nls-1$
WITHOUT_CLASSIFICATION	only used by gui
WITHOUT_CLASSIFICATION	timeout occurred. ignore and keep looping until we're told to stop running.
WITHOUT_CLASSIFICATION	ensure that there is always a collection available
WITHOUT_CLASSIFICATION	default level allow override by system properties
WITHOUT_CLASSIFICATION	final int _ignored = 1;
WITHOUT_CLASSIFICATION	++ jmx tag values $non-nls-1$
WITHOUT_CLASSIFICATION	can't have two matching cookies
WITHOUT_CLASSIFICATION	ensure that the initial cookies are copied to the per-thread instances
WITHOUT_CLASSIFICATION	long max was used to represent a non-expiring cookie but that caused problems
WITHOUT_CLASSIFICATION	used by gui
WITHOUT_CLASSIFICATION	used by gui
WITHOUT_CLASSIFICATION	$non-nls-1$ -- jmx tag values
WITHOUT_CLASSIFICATION	only save unexpired cookies
WITHOUT_CLASSIFICATION	flag - if all machines within a given domain can access the variable. (from httpwww.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	ensure data is set up ok initially
WITHOUT_CLASSIFICATION	do nothing the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	do nothing the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	scan for any matching cookies
WITHOUT_CLASSIFICATION	todo charset ?
WITHOUT_CLASSIFICATION	remove all the cookies.
WITHOUT_CLASSIFICATION	used by httpmirrorserver
WITHOUT_CLASSIFICATION	no need to call clear
WITHOUT_CLASSIFICATION	and as a string
WITHOUT_CLASSIFICATION	used for saving entries to a file
WITHOUT_CLASSIFICATION	wait for server to stop
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	regular expression used to match against embedded resource urls
WITHOUT_CLASSIFICATION	optional tasks
WITHOUT_CLASSIFICATION	use this instead of getlabelresource() otherwise getdocanchor() below does not work
WITHOUT_CLASSIFICATION	flag - if all machines within a given domain can access the variable. (from httpwww.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	column numbers - must agree with order above
WITHOUT_CLASSIFICATION	only http and https are supported
WITHOUT_CLASSIFICATION	obtain another url with an explicit port
WITHOUT_CLASSIFICATION	allow for old format file without mechanism support
WITHOUT_CLASSIFICATION	this should never happen anyway we'll continue with url2 set to null.
WITHOUT_CLASSIFICATION	for use by ajp
WITHOUT_CLASSIFICATION	allow for old format file without the extra columnns
WITHOUT_CLASSIFICATION	needs to be package protected for unit test
WITHOUT_CLASSIFICATION	embedded url match regex
WITHOUT_CLASSIFICATION	does not apply to java implementation
WITHOUT_CLASSIFICATION	add a listener to activate or not concurrent dwn.
WITHOUT_CLASSIFICATION	url config
WITHOUT_CLASSIFICATION	includes \n
WITHOUT_CLASSIFICATION	bottom (embedded resources source address and optional tasks)
WITHOUT_CLASSIFICATION	2 column size
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	retrieve images $non-nls-1$
WITHOUT_CLASSIFICATION	go to 1st line
WITHOUT_CLASSIFICATION	download concurrent resources $non-nls-1$
WITHOUT_CLASSIFICATION	is monitor $non-nls-1$
WITHOUT_CLASSIFICATION	only contains httpfilearg elements
WITHOUT_CLASSIFICATION	use md5 $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	add a new field source ip address (for hc implementations only) default ip/hostname
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ default ip/hostname
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	button for browsing webservice wsdl
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	web methods
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	improve xml display
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	add the proxy elements
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	we only put httpfileargs in it
WITHOUT_CLASSIFICATION	$non-nls-1$ permit dynamic resize of textarea
WITHOUT_CLASSIFICATION	we get the authmanager and pass it to the wsdlhelper once the sampler is updated to axis all of this stuff should not be necessary. now i just need to find the time and motivation to do it.
WITHOUT_CLASSIFICATION	if use proxy is checked we enable the text fields for the host and port
WITHOUT_CLASSIFICATION	required for unit tests
WITHOUT_CLASSIFICATION	disable delete and browse buttons if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete and browse if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	create the jtable that holds header per row
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	disable the delete and save buttons if no rows remaining after delete
WITHOUT_CLASSIFICATION	$non-nls-1$ --
WITHOUT_CLASSIFICATION	enable the delete and save buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	non-expiring
WITHOUT_CLASSIFICATION	disable the delete and save buttons if no rows remaining after delete.
WITHOUT_CLASSIFICATION	preset to default impl
WITHOUT_CLASSIFICATION	create the jtable that holds one cookie per row
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	++ action command names $non-nls-1$
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	drop-down list for renderer
WITHOUT_CLASSIFICATION	if no results render in jmeter.properties load standard (default)
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	only contains argument (or httpargument)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ removed expiration because it's just an annoyance for static cookies
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	enable the delete and save buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	enable the delete and save buttons if they are currently disabled.
WITHOUT_CLASSIFICATION	disable the delete and save buttons if no rows remaining after delete.
WITHOUT_CLASSIFICATION	button panel
WITHOUT_CLASSIFICATION	create the jtable that holds auth per row
WITHOUT_CLASSIFICATION	ignore non-http samplers
WITHOUT_CLASSIFICATION	&& !ispathextensionnoquestionmark()
WITHOUT_CLASSIFICATION	&& !ispathextensionnoequals()
WITHOUT_CLASSIFICATION	&& !ispathextensionnoequals() && !ispathextensionnoquestionmark()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if ! ispathextension()
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	all table cells are editable
WITHOUT_CLASSIFICATION	don't get tripped up by re chars in the arg name
WITHOUT_CLASSIFICATION	name="sessionid" value="value"
WITHOUT_CLASSIFICATION	----------------------------------------------------------------------- methods -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	return the current value (don't forget the prefix!)
WITHOUT_CLASSIFICATION	increment the value
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	transient perl5compiler compiler = new perl5compiler(); $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	preprocessors are cloned per-thread so this will be saved per-thread $non-nls-1$
WITHOUT_CLASSIFICATION	;sessionid=value $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	value="value" name="sessionid" $non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ constructors ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ methods implemented from interface org.apache.jmeter.config.modifier ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ methods ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	if a mask for this argument exists
WITHOUT_CLASSIFICATION	values to be masked must be set in the webapp to ""
WITHOUT_CLASSIFICATION	create instances needed for parsing
WITHOUT_CLASSIFICATION	xmlreaderfactory.createxmlreader(vendorparseclass);
WITHOUT_CLASSIFICATION	register content handler
WITHOUT_CLASSIFICATION	register error handler
WITHOUT_CLASSIFICATION	parse
WITHOUT_CLASSIFICATION	------------------------------------------- constants and data members -------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- constructors -------------------------------------------
WITHOUT_CLASSIFICATION	initalise pointer to first user
WITHOUT_CLASSIFICATION	use round robin allocation of user details
WITHOUT_CLASSIFICATION	no entries in all users therefore create an empty map object
WITHOUT_CLASSIFICATION	if parameter name exists in http request then change its value with value obtained with regular expression
WITHOUT_CLASSIFICATION	verify if regex groups exists
WITHOUT_CLASSIFICATION	note userparameterxml accesses this variable to obtain the set data via method getparsedparameters()
WITHOUT_CLASSIFICATION	cannot be first line either
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	------------------------------------------- constants and data members -------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------- methods -------------------------------------------
WITHOUT_CLASSIFICATION	haven't got to reset paramname & paramvalue but did it to keep the code looking correct
WITHOUT_CLASSIFICATION	these are used as gui item names; lowerbound upperbound and increment are used in the focuslost() method
WITHOUT_CLASSIFICATION	must create a new object or else end up with a set full of the same map object
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- methods (used by userparameterxml to get xml parameters from xml file) -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	this.updateui();
WITHOUT_CLASSIFICATION	boolean pass = true;
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	next line
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	utf-8 unsupported? you must be joking!
WITHOUT_CLASSIFICATION	n.b. since the tags are extracted from an html form any values must already have been encoded
WITHOUT_CLASSIFICATION	the value is in the second group
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	cache of parsers - parsers must be re-usable
WITHOUT_CLASSIFICATION	is there a cached parser?
WITHOUT_CLASSIFICATION	cache the parser
WITHOUT_CLASSIFICATION	the set is used to ignore duplicated binary files. using a linkedhashset to avoid unnecessary overhead in iterating the elements in the set later on. as a side-effect this will keep them roughly in order which should be a better model of browser behaviour.
WITHOUT_CLASSIFICATION	a dummy class to pass the pointer of url.
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	now look for urls in the style attribute
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	now look for urls in the style attribute
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	case node.text_node break;
WITHOUT_CLASSIFICATION	helper method to get an attribute value if it exists @param attrs list of attributs @param attname attribute name @return
WITHOUT_CLASSIFICATION	note there's 3 capturing groups per value
WITHOUT_CLASSIFICATION	number of capturing groups possibly containing base hrefs
WITHOUT_CLASSIFICATION	check for a base href
WITHOUT_CLASSIFICATION	doesn't even look like a url? maybe it isn't ignore the exception.
WITHOUT_CLASSIFICATION	url.replace('+'' ');
WITHOUT_CLASSIFICATION	no warn message to avoid performance impact
WITHOUT_CLASSIFICATION	private iterator used to unwrap the url from the urlstring class
WITHOUT_CLASSIFICATION	unwraps the urlstring class to return the url
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	try to ensure that more javascript code is processed ok
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	listen on main socket
WITHOUT_CLASSIFICATION	timeout occurred. ignore and keep looping until we're told to stop running.
WITHOUT_CLASSIFICATION	a dummy class to pass the pointer of url.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	we check the input tag type for image
WITHOUT_CLASSIFICATION	then we need to download the binary
WITHOUT_CLASSIFICATION	putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	now look for urls in the style attribute
WITHOUT_CLASSIFICATION	now parse the dom tree
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a url is always in a tag.
WITHOUT_CLASSIFICATION	first we check to see if body tag has a background set
WITHOUT_CLASSIFICATION	look for applets
WITHOUT_CLASSIFICATION	look for objects
WITHOUT_CLASSIFICATION	second if the tag was a composite tag recursively parse its children.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ proxy.binary.filetype=binary
WITHOUT_CLASSIFICATION	optionally number the requests
WITHOUT_CLASSIFICATION	running number
WITHOUT_CLASSIFICATION	pass request to new proxy thread
WITHOUT_CLASSIFICATION	use default encoding
WITHOUT_CLASSIFICATION	tell the sampler to do a multipart post
WITHOUT_CLASSIFICATION	set the form data
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	used by gui
WITHOUT_CLASSIFICATION	and as a string
WITHOUT_CLASSIFICATION	set the file uploads
WITHOUT_CLASSIFICATION	remove the header for content-type and content-length since those values will most likely be incorrect when the sampler performs the multipart request because the boundary string will change
WITHOUT_CLASSIFICATION	used when postdata is pure xml (eg. an xml-rpc call) or for put
WITHOUT_CLASSIFICATION	it is the most common post request with parameter name and values we also assume this if no content type is present to be most backwards compatible but maybe we should only parse arguments if the content type is as expected standard name=value postdata
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	just put the whole postbody as the value of a parameter used when postdata is pure xml (ex. an xml-rpc call)
WITHOUT_CLASSIFICATION	although the spec says utf-8 should be used for encoding url parameters most browser use iso-8859-1 for default if encoding is not known. we use null for contentencoding then the url parameters will be added with the value in the url and the "encode?" flag set to false
WITHOUT_CLASSIFICATION	set the content encoding
WITHOUT_CLASSIFICATION	check if the request itself tells us what the encoding is
WITHOUT_CLASSIFICATION	check if we know the encoding of the page
WITHOUT_CLASSIFICATION	check if we know the encoding of the form
WITHOUT_CLASSIFICATION	form encoding has priority over page encoding
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	wait for server to stop
WITHOUT_CLASSIFICATION	must agree with the order of entries in the drop-down created in proxycontrolgui.creategroupingpanel() private static final int grouping_no_groups = 0;
WITHOUT_CLASSIFICATION	$non-nls-1$ - jmx file attributes
WITHOUT_CLASSIFICATION	note windows user preferences are stored relative to hkey_current_user\software\javasoft\prefs
WITHOUT_CLASSIFICATION	original numeric order (we now use strings)
WITHOUT_CLASSIFICATION	$non-nls-1$ detect if user has pressed a new link
WITHOUT_CLASSIFICATION	for ssl connection
WITHOUT_CLASSIFICATION	proxy configuration ssl
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	keys for user preferences
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	should we match using regexes?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	whether to use dymanic key generation (if supported) $non-nls-1$;
WITHOUT_CLASSIFICATION	the alias to be used if dynamic host names are not possible $non-nls-1$
WITHOUT_CLASSIFICATION	if this is defined it is assumed to be the alias of a user-supplied certificate; overrides dynamic mode $non-nls-1$
WITHOUT_CLASSIFICATION	user-provided keystore keystore generated by jmeter; single entry
WITHOUT_CLASSIFICATION	whether to use the redirect disabling feature (can be switched off if it does not work)
WITHOUT_CLASSIFICATION	although this field is mutable it is only accessed within the synchronized method deliversampler()
WITHOUT_CLASSIFICATION	when was the last sample seen?
WITHOUT_CLASSIFICATION	maintain original behaviour
WITHOUT_CLASSIFICATION	convert the old numeric types - just in case someone wants to reload the workbench
WITHOUT_CLASSIFICATION	make sure we log the error
WITHOUT_CLASSIFICATION	the url matches the last redirect
WITHOUT_CLASSIFICATION	save location so resulting sample can be disabled
WITHOUT_CLASSIFICATION	ok because find only returns correct element types
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	package protected to allow test case access
WITHOUT_CLASSIFICATION	package protected to allow test case access
WITHOUT_CLASSIFICATION	if no expressions are specified we let the sample pass
WITHOUT_CLASSIFICATION	check that we have a content type
WITHOUT_CLASSIFICATION	check if the include pattern is matched
WITHOUT_CLASSIFICATION	check if the exclude pattern is matched
WITHOUT_CLASSIFICATION	not 100% sure but i believe this can't happen so i'll log and throw an error
WITHOUT_CLASSIFICATION	not 100% sure but i believe this can't happen so i'll log and throw an error
WITHOUT_CLASSIFICATION	look for elements directly within the http proxy
WITHOUT_CLASSIFICATION	look for arguments elements in the target controller or higher up
WITHOUT_CLASSIFICATION	special case for the testplan's arguments sub-element
WITHOUT_CLASSIFICATION	remember this was first in its batch
WITHOUT_CLASSIFICATION	decent value for timers
WITHOUT_CLASSIFICATION	huh! don't store this one!
WITHOUT_CLASSIFICATION	if we're not storing subsequent samplers we'll need the first sampler to do all the work
WITHOUT_CLASSIFICATION	find the last controller in the target to store the sampler there
WITHOUT_CLASSIFICATION	there's a few properties which are excluded from this processing
WITHOUT_CLASSIFICATION	go on with next property.
WITHOUT_CLASSIFICATION	build the replacer from all the variables in the collection
WITHOUT_CLASSIFICATION	tl - te
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$; $non-nls-1$;
WITHOUT_CLASSIFICATION	assume we have already created the store
WITHOUT_CLASSIFICATION	assume we have already created the store
WITHOUT_CLASSIFICATION	no ca key - probably the wrong store type. cannot continue
WITHOUT_CLASSIFICATION	store is faulty we need to recreate it if cert is not valid flag up to recreate it
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	store is faulty we need to recreate it if cert is not valid flag up to recreate it
WITHOUT_CLASSIFICATION	message includes the file name
WITHOUT_CLASSIFICATION	no existing file or not valid alphanum to avoid issues with command-line quoting we use same password for both
WITHOUT_CLASSIFICATION	no existing file or not valid alphanum to avoid issues with command-line quoting we use same password for both
WITHOUT_CLASSIFICATION	this should now work
WITHOUT_CLASSIFICATION	this should now work
WITHOUT_CLASSIFICATION	the subject may be either a host or a domain
WITHOUT_CLASSIFICATION	reload to pick up new aliases reloading is very quick compared with creating an entry currently
WITHOUT_CLASSIFICATION	not a wildcard
WITHOUT_CLASSIFICATION	this should only be called for a specific host
WITHOUT_CLASSIFICATION	ensure proxy threads cannot interfere with each other
WITHOUT_CLASSIFICATION	reload after adding alias
WITHOUT_CLASSIFICATION	safer to start afresh
WITHOUT_CLASSIFICATION	the keystore for use by the proxy
WITHOUT_CLASSIFICATION	allow list of headers to be overridden $non-nls-1$
WITHOUT_CLASSIFICATION	use with ssl connection
WITHOUT_CLASSIFICATION	for identifying log messages
WITHOUT_CLASSIFICATION	keystore for ssl keys; fixed at config except for dynamic host key generation
WITHOUT_CLASSIFICATION	check which httpsampler class we should use
WITHOUT_CLASSIFICATION	now parse initial request (in case it is a connect request)
WITHOUT_CLASSIFICATION	should not happen but if it does we don't want to continue
WITHOUT_CLASSIFICATION	re-parse (now it's the http request over ssl)
WITHOUT_CLASSIFICATION	most likely this is because of a certificate error
WITHOUT_CLASSIFICATION	now parse the dom tree
WITHOUT_CLASSIFICATION	we start to iterate through the elements
WITHOUT_CLASSIFICATION	a url is always in a tag.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	with ssl request url is hostport (without https or path) $non-nls-1$
WITHOUT_CLASSIFICATION	create a header manager to ensure that the browsers headers are captured and sent to the server
WITHOUT_CLASSIFICATION	needed for httpsampler2
WITHOUT_CLASSIFICATION	needed for httpsampler2
WITHOUT_CLASSIFICATION	find the page encoding and possibly encodings for forms in the page in the response from the web server
WITHOUT_CLASSIFICATION	ignored already processed
WITHOUT_CLASSIFICATION	generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	we don't want to store any cookies in the generated test plan
WITHOUT_CLASSIFICATION	always remove cookies always remove authorization remove additional headers
WITHOUT_CLASSIFICATION	deliversampler allows sampler to be null but result must not be null
WITHOUT_CLASSIFICATION	pick up any recent changes from other threads
WITHOUT_CLASSIFICATION	the host has a key already
WITHOUT_CLASSIFICATION	the host matches a domain; use its key
WITHOUT_CLASSIFICATION	add the remaining parts
WITHOUT_CLASSIFICATION	check if alias is suitable here rather than waiting for connection to fail
WITHOUT_CLASSIFICATION	drop empty trailing content
WITHOUT_CLASSIFICATION	we don't want this passed on to browser
WITHOUT_CLASSIFICATION	we don't want this passed on to browser
WITHOUT_CLASSIFICATION	fix the content length
WITHOUT_CLASSIFICATION	get rid of the query and the ?
WITHOUT_CLASSIFICATION	remaining implementations delegate to the wrapped key manager
WITHOUT_CLASSIFICATION	only check form tags
WITHOUT_CLASSIFICATION	find the action / form url
WITHOUT_CLASSIFICATION	just use the first one of the possible many charsets
WITHOUT_CLASSIFICATION	notread $non-nls-1$
WITHOUT_CLASSIFICATION	saved copy of first line for error reports
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	second if the tag was a composite tag recursively parse its children.
WITHOUT_CLASSIFICATION	get rid of the query and the ?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	parse other header lines looking for content-length
WITHOUT_CLASSIFICATION	save the last valid content length one
WITHOUT_CLASSIFICATION	keep the raw post data
WITHOUT_CLASSIFICATION	will be hostport for connect
WITHOUT_CLASSIFICATION	ssl connection
WITHOUT_CLASSIFICATION	don't try to adjust the host name
WITHOUT_CLASSIFICATION	it must be a proxied https request $non-nls-1$
WITHOUT_CLASSIFICATION	java impl accepts urls with unsafe characters so don't do anything
WITHOUT_CLASSIFICATION	split line into name/value pairs and store in headers if relevant if name = "content-length" then return value as int else return 0
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	get the boundary string for the multiparts from the content type
WITHOUT_CLASSIFICATION	parsing methods
WITHOUT_CLASSIFICATION	chop to "server.namex/thing"
WITHOUT_CLASSIFICATION	chop to "server.namex/thing"
WITHOUT_CLASSIFICATION	chop to server.namexx $non-nls-1$
WITHOUT_CLASSIFICATION	chop to server.name $non-nls-1$
WITHOUT_CLASSIFICATION	handle ipv6 urls
WITHOUT_CLASSIFICATION	chop to server.namexx
WITHOUT_CLASSIFICATION	chop to server.name
WITHOUT_CLASSIFICATION	generate error body
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	prevent both redirect types from being selected
WITHOUT_CLASSIFICATION	300 codes tell client to do actions
WITHOUT_CLASSIFICATION	use regexes to match the source data
WITHOUT_CLASSIFICATION	proxy can take some while to start up; show a wating cursor
WITHOUT_CLASSIFICATION	this is applied to fields that should cause a restart when changed $non-nls-1$
WITHOUT_CLASSIFICATION	- action names
WITHOUT_CLASSIFICATION	resource names for column headers $non-nls-1$
WITHOUT_CLASSIFICATION	used by itemlistener $non-nls-1$
WITHOUT_CLASSIFICATION	system.err.println("enable restart");
WITHOUT_CLASSIFICATION	handles groupingmode. actionperfomed is not suitable as that seems to be activated whenever the proxy is selected in the test plan also handles samplertypename
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	drop the last character
WITHOUT_CLASSIFICATION	highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	default value $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ maintain original default
WITHOUT_CLASSIFICATION	default value $non-nls-1$
WITHOUT_CLASSIFICATION	action listener will be added later
WITHOUT_CLASSIFICATION	ignore everything else
WITHOUT_CLASSIFICATION	note position of these elements in the menu must match the corresponding proxycontrol.grouping_ values. $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	stop action notifications while we shuffle this around
WITHOUT_CLASSIFICATION	include request body if it is a post or put or patch
WITHOUT_CLASSIFICATION	reinstate action notifications
WITHOUT_CLASSIFICATION	never null
WITHOUT_CLASSIFICATION	set the current value
WITHOUT_CLASSIFICATION	never null
WITHOUT_CLASSIFICATION	can share these
WITHOUT_CLASSIFICATION	don't redirect the following 300 = multiple choice 304 = not modified 305 = use proxy 306 = (unused)
WITHOUT_CLASSIFICATION	get the start of the file
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	preserve original case
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	update the dataencoding
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	extract the content-type if present $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ maximum connection retries
WITHOUT_CLASSIFICATION	$non-nls-1$ temporary copies so can set the final ones
WITHOUT_CLASSIFICATION	n.b. this needs to be done before opening the connection
WITHOUT_CLASSIFICATION	update follow redirects setting just for this connection
WITHOUT_CLASSIFICATION	n.b. must be done after opening connection
WITHOUT_CLASSIFICATION	works ok even if contentencoding is null
WITHOUT_CLASSIFICATION	normal inputstream is not available
WITHOUT_CLASSIFICATION	n.b. this closes 'in'
WITHOUT_CLASSIFICATION	add all the headers from the headermanager
WITHOUT_CLASSIFICATION	get all the request properties which are the headers set on the connection
WITHOUT_CLASSIFICATION	exclude the cookie header since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	value is a list of strings
WITHOUT_CLASSIFICATION	count the retries as well in the time
WITHOUT_CLASSIFICATION	check cache for an entry with an expires header in the future
WITHOUT_CLASSIFICATION	start with 0 so tries at least once and retries at most max_conn_retries times
WITHOUT_CLASSIFICATION	attempt the connection
WITHOUT_CLASSIFICATION	we don't want interrupt to try disconnection again
WITHOUT_CLASSIFICATION	try again
WITHOUT_CLASSIFICATION	this should never happen but
WITHOUT_CLASSIFICATION	nice we've got a connection. finish sending the request
WITHOUT_CLASSIFICATION	request sent. now get the response
WITHOUT_CLASSIFICATION	done with the sampling proper.
WITHOUT_CLASSIFICATION	now collect the results into the httpsampleresult
WITHOUT_CLASSIFICATION	cannot be null here
WITHOUT_CLASSIFICATION	e.g. text/html; charset=iso-8859-1
WITHOUT_CLASSIFICATION	if either a file or path location is given get the file object. we have a file
WITHOUT_CLASSIFICATION	set details from the actual response needs to be done before response can be stored
WITHOUT_CLASSIFICATION	sampling proper - establish the connection and read the response repeatedly try to connect
WITHOUT_CLASSIFICATION	store any cookies received in the cookie manager
WITHOUT_CLASSIFICATION	if we redirected automatically the url may have changed
WITHOUT_CLASSIFICATION	has been seen in a redirect use header (if possible) if no message found
WITHOUT_CLASSIFICATION	don't process again
WITHOUT_CLASSIFICATION	save cache information
WITHOUT_CLASSIFICATION	random class for generating random numbers.
WITHOUT_CLASSIFICATION	return the absolutepath of the file
WITHOUT_CLASSIFICATION	the method will check to see if jmeter was started in nongui mode. if it was it will try to pick up the proxy host and port values if they were passed to jmeter.java.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx file attribut names - do not change! $non-nls-1$
WITHOUT_CLASSIFICATION	we check to see if the proxy host and port are set
WITHOUT_CLASSIFICATION	this method uses apache soap util to create the proper dom elements. @return element
WITHOUT_CLASSIFICATION	get filename or ""
WITHOUT_CLASSIFICATION	note that the filename is also used as a key to the pool (if used) documents provided in the testplan are not currently pooled as they may change between samples.
WITHOUT_CLASSIFICATION	we created the document
WITHOUT_CLASSIFICATION	must be local content - or not using pool
WITHOUT_CLASSIFICATION	consider using apache commons pool to create a pool of document builders or make sure xmlparserutils creates builders efficiently.
WITHOUT_CLASSIFICATION	suppress messages to stdout
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we don't want interrupt to try disconnection again we don't want to continue using this connection even if keepalive is set may not exist
WITHOUT_CLASSIFICATION	calling disconnect doesn't close the connection immediately but indicates we're through with it. the jvm should close it when necessary. we don't want interrupt to try disconnection again disconnect unless using keepalive
WITHOUT_CLASSIFICATION	it's not set lets check if the user passed proxy host and port from command line
WITHOUT_CLASSIFICATION	it's not set lets check if the user passed proxy host and port from command line
WITHOUT_CLASSIFICATION	must be a "here" document
WITHOUT_CLASSIFICATION	required to satisfy httpsamplerbase should not be called as we override sample()
WITHOUT_CLASSIFICATION	$non-nls-1$ - jmx file attribut names - do not change!
WITHOUT_CLASSIFICATION	assume it will fail ditto $non-nls-1$
WITHOUT_CLASSIFICATION	set the response defaults
WITHOUT_CLASSIFICATION	warning - could be large
WITHOUT_CLASSIFICATION	if a blank headermanager exists try to get the soaphttpconnection. after the first request there should be a connection object stored with the cookie header info.
WITHOUT_CLASSIFICATION	set the auth. thanks to kiyun roe for contributing the patch i cleaned up the patch slightly. 5-26-05
WITHOUT_CLASSIFICATION	check the proxy
WITHOUT_CLASSIFICATION	if use proxy is set we try to pick up the proxy host and port from either the text fields or from jmeterutil if they were passed from command line
WITHOUT_CLASSIFICATION	if for some reason the host is blank and the port is zero the sampler will fail silently
WITHOUT_CLASSIFICATION	api uses raw types
WITHOUT_CLASSIFICATION	it is not possible to access the actual http response code so we assume no data means failure
WITHOUT_CLASSIFICATION	scheme used for slow http sockets. cannot be set as a default because must be set on an httpclient instance.
WITHOUT_CLASSIFICATION	we always want to override the https scheme because we want to trust all certificates and hosts
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	done with the sampling proper.
WITHOUT_CLASSIFICATION	now collect the results into the httpsampleresult
WITHOUT_CLASSIFICATION	if we redirected automatically the url may have changed
WITHOUT_CLASSIFICATION	store any cookies received in the cookie manager
WITHOUT_CLASSIFICATION	save cache information
WITHOUT_CLASSIFICATION	condensed length (without \r) add \r for each header add \r for initial header final \r\n before data
WITHOUT_CLASSIFICATION	by not reading the response for real it improves the performance on slow clients
WITHOUT_CLASSIFICATION	reponse code doesn't really apply since the soap driver doesn't provide a response code
WITHOUT_CLASSIFICATION	create a set of default parameters from the ones initially created. this allows the defaults to be overridden if necessary from the properties file.
WITHOUT_CLASSIFICATION	set up http scheme override if necessary
WITHOUT_CLASSIFICATION	we always want to override the https scheme
WITHOUT_CLASSIFICATION	accessed from multiple threads
WITHOUT_CLASSIFICATION	can throw ioexception
WITHOUT_CLASSIFICATION	perform the sample
WITHOUT_CLASSIFICATION	needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	we've finished with the request so we can add the localaddress to it for display
WITHOUT_CLASSIFICATION	http protocol violation but avoids npe
WITHOUT_CLASSIFICATION	record some sizes to allow httpsampleresult.getbytes() with different options
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	follow redirects and download page resources if appropriate
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	protocol[userpass@]host[port]
WITHOUT_CLASSIFICATION	always create hash because we will always need it
WITHOUT_CLASSIFICATION	allow for null strings
WITHOUT_CLASSIFICATION	otherwise proxy string fields may be null
WITHOUT_CLASSIFICATION	no proxy so don't check proxy fields
WITHOUT_CLASSIFICATION	lookup key - must agree with all the values used to create the httpclient.
WITHOUT_CLASSIFICATION	one-time init for this client
WITHOUT_CLASSIFICATION	set retry count
WITHOUT_CLASSIFICATION	override the defualt schemes as necessary
WITHOUT_CLASSIFICATION	set up proxy details
WITHOUT_CLASSIFICATION	save the agent for next time round
WITHOUT_CLASSIFICATION	use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	reset in case was set previously
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	exclude the cookie header since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. need to separate protocol from authority otherwise httpserver would match httpserver could use separate fields but simpler to combine them
WITHOUT_CLASSIFICATION	method left empty here but allows subclasses to override
WITHOUT_CLASSIFICATION	header[0] is not the status line $non-nls-1$
WITHOUT_CLASSIFICATION	remove any port specification $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	no need to specify the port if it is the default
WITHOUT_CLASSIFICATION	get all the request headers
WITHOUT_CLASSIFICATION	helper class so we can generate request data without dumping entire file contents
WITHOUT_CLASSIFICATION	encoding does not really matter here
WITHOUT_CLASSIFICATION	buffer to hold the post body except file content
WITHOUT_CLASSIFICATION	check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	if a content encoding is specified we use that as the encoding of any parameter values
WITHOUT_CLASSIFICATION	write the request to our own stream
WITHOUT_CLASSIFICATION	create the parts add any parameters
WITHOUT_CLASSIFICATION	we get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	$non-nls-1$ this is the default used by httpclient
WITHOUT_CLASSIFICATION	not multipart check if the header manager had a content type header this allows the user to specify his own content-type for a post request
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request todo needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we just add placeholder text for file content
WITHOUT_CLASSIFICATION	if a content encoding is specified we set it as http parameter so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the post body
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the post body
WITHOUT_CLASSIFICATION	note if "encoded?" is not selected arg.getencodedvalue is equivalent to arg.getvalue
WITHOUT_CLASSIFICATION	note if "encoded?" is not selected arg.getencodedvalue is equivalent to arg.getvalue
WITHOUT_CLASSIFICATION	let stringentity perform the encoding
WITHOUT_CLASSIFICATION	it is a normal post request with parameter names and values
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	add the parameters
WITHOUT_CLASSIFICATION	use the default encoding for urls
WITHOUT_CLASSIFICATION	the httpclient always urlencodes both name and value so if the argument is already encoded we have to decode it before adding it to the post request
WITHOUT_CLASSIFICATION	the value is already encoded by the user must decode the value now so that when the httpclient encodes it we end up with the same value as the user had entered.
WITHOUT_CLASSIFICATION	add the parameter httpclient will urlencode it
WITHOUT_CLASSIFICATION	buffer to hold the entity body
WITHOUT_CLASSIFICATION	we provide the mime type here
WITHOUT_CLASSIFICATION	check for local contentencoding (charset) override; fall back to default for content body we do this here rather so we can use the same charset to retrieve the data
WITHOUT_CLASSIFICATION	only create this if we are overriding whatever default there may be if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the entity body
WITHOUT_CLASSIFICATION	check if we have any content to send for body
WITHOUT_CLASSIFICATION	we get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null no need for content-type here
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the entity body
WITHOUT_CLASSIFICATION	if the request entity is repeatable we can send it first to our own stream so we can return it
WITHOUT_CLASSIFICATION	this probably cannot happen
WITHOUT_CLASSIFICATION	does not need to be synchronised as all access is from same thread
WITHOUT_CLASSIFICATION	don't try twice
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	may be the empty string
WITHOUT_CLASSIFICATION	n.b. it's not po ssible to forward threadstarted() to the implementation class. this is because config items are not processed until later and httpdefaults may define the implementation
WITHOUT_CLASSIFICATION	forward to sampler
WITHOUT_CLASSIFICATION	forward to sampler
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	force reopen on next sample
WITHOUT_CLASSIFICATION	content-length
WITHOUT_CLASSIFICATION	marker for query string attribute
WITHOUT_CLASSIFICATION	+ jmx names - do not change $non-nls-1$
WITHOUT_CLASSIFICATION	more general attributes not supported
WITHOUT_CLASSIFICATION	authorization
WITHOUT_CLASSIFICATION	host always
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	content-type
WITHOUT_CLASSIFICATION	content-type
WITHOUT_CLASSIFICATION	we need to use up the int now
WITHOUT_CLASSIFICATION	int mark =
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	dummy
WITHOUT_CLASSIFICATION	methods needed by subclasses to get access to the implementation
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	help convert existing jmx files which use httpsampler[2] nodes
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testiterationstart(org.apache.jmeter.engine.event.loopiterationevent)
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	key = tcpkey or errkey entry= socket or string
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$ default value false
WITHOUT_CLASSIFICATION	default for concurrent pool (do not change)
WITHOUT_CLASSIFICATION	shown as parameter name on the gui
WITHOUT_CLASSIFICATION	- jmx names
WITHOUT_CLASSIFICATION	default concurrent pool size for download embedded resources
WITHOUT_CLASSIFICATION	the default setting to be used (i.e. historic)
WITHOUT_CLASSIFICATION	for thread pool for resources but no need to use a special value?
WITHOUT_CLASSIFICATION	use for combobox source address type. preserve order (specially with localization)
WITHOUT_CLASSIFICATION	$non-nls-1$ default value 60 secs
WITHOUT_CLASSIFICATION	file_field is kept for backward compatibility with old test plans $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ supported methods
WITHOUT_CLASSIFICATION	image_parser now really means embedded_parser $non-nls-1$
WITHOUT_CLASSIFICATION	i.e. get
WITHOUT_CLASSIFICATION	derive the mapping of content types to parsers
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	store md5 hash instead of storing response $non-nls-1$
WITHOUT_CLASSIFICATION	not synch but it is not modified after creation
WITHOUT_CLASSIFICATION	returns empty array for null
WITHOUT_CLASSIFICATION	code /
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	if there is one file with no parameter name the file will be sent as post body.
WITHOUT_CLASSIFICATION	we use multipart if we have been told so or files are present and the files should not be send as the post body
WITHOUT_CLASSIFICATION	we know that url arguments should always be encoded in utf-8 according to spec
WITHOUT_CLASSIFICATION	parse the arguments in querystring assuming specified encoding for values
WITHOUT_CLASSIFICATION	check if there are any difference between name and value and their encoded name and value
WITHOUT_CLASSIFICATION	if there is no difference we mark it as not needing encoding
WITHOUT_CLASSIFICATION	private method to allow asyncsample to reset the value without performing checks
WITHOUT_CLASSIFICATION	private method to allow asyncsample to reset the value without performing checks
WITHOUT_CLASSIFICATION	allow use of relative file urls
WITHOUT_CLASSIFICATION	http urls must be absolute allow file to be relative $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	add the query string if it is a http get or delete request
WITHOUT_CLASSIFICATION	get the query string encoded in specified encoding if no encoding is specified by user we will get it encoded in utf-8 which is what the http spec says
WITHOUT_CLASSIFICATION	already contains a prefix
WITHOUT_CLASSIFICATION	if default port for protocol is used we do not include port in url
WITHOUT_CLASSIFICATION	we use the encoding which should be used according to the http spec which is utf-8
WITHOUT_CLASSIFICATION	check if the sampler has a specified content encoding
WITHOUT_CLASSIFICATION	encode the parameter value in the specified content encoding
WITHOUT_CLASSIFICATION	records the existance of an equal sign
WITHOUT_CLASSIFICATION	we do not know the content encoding of the query string
WITHOUT_CLASSIFICATION	append body if it is a post or put
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	need to handle four cases - string contains name=value - string contains name= - string contains name - empty string
WITHOUT_CLASSIFICATION	is there a separator? case of name=value name=
WITHOUT_CLASSIFICATION	if we know the encoding we can decode the argument value to make it easier to read for the user
WITHOUT_CLASSIFICATION	if we do not know the encoding we just use the encoded value the browser has already done the encoding so save the values as is
WITHOUT_CLASSIFICATION	we have a name
WITHOUT_CLASSIFICATION	we don't; use the default parser
WITHOUT_CLASSIFICATION	iterate through the urls and download each image
WITHOUT_CLASSIFICATION	get the url matcher
WITHOUT_CLASSIFICATION	don't fetch unless pattern compiles
WITHOUT_CLASSIFICATION	for concurrent get resources
WITHOUT_CLASSIFICATION	see catch clause below
WITHOUT_CLASSIFICATION	there were some spaces in the url
WITHOUT_CLASSIFICATION	i don't think localmatcher can be null here but check just in case
WITHOUT_CLASSIFICATION	we have a pattern and the url does not match so skip it
WITHOUT_CLASSIFICATION	default serial download embedded resources
WITHOUT_CLASSIFICATION	if for download concurrent embedded resources
WITHOUT_CLASSIFICATION	init with default value
WITHOUT_CLASSIFICATION	sample all resources with threadpool
WITHOUT_CLASSIFICATION	call normal shutdown (wait ending all tasks)
WITHOUT_CLASSIFICATION	put a timeout if tasks couldn't terminate
WITHOUT_CLASSIFICATION	add result to main sampleresult
WITHOUT_CLASSIFICATION	did all the tasks finish?
WITHOUT_CLASSIFICATION	not intended to be instantiated
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	kill any remaining tasks
WITHOUT_CLASSIFICATION	@param res httpsampleresult to check @return parser class name (may be "") or null if entry does not exist
WITHOUT_CLASSIFICATION	browsers seem to tolerate location headers with spaces replacing them automatically with %20. we want to emulate this behaviour.
WITHOUT_CLASSIFICATION	the redirect url we got was not a valid url
WITHOUT_CLASSIFICATION	only add sample if it is a sample of valid url redirect i.e. that we have actually sampled the url
WITHOUT_CLASSIFICATION	now populate the any totalres fields that need to come from lastres
WITHOUT_CLASSIFICATION	method to set files list to be uploaded. @param value httpfileargs object that stores file list to be uploaded.
WITHOUT_CLASSIFICATION	no point saving an empty list
WITHOUT_CLASSIFICATION	method to get files list to be uploaded.
WITHOUT_CLASSIFICATION	weed out the empty files
WITHOUT_CLASSIFICATION	noop to provide based empty impl and avoid breaking existing implementations
WITHOUT_CLASSIFICATION	may also happen if long value > int.max
WITHOUT_CLASSIFICATION	for new test plans that don't have file/param/mime properties
WITHOUT_CLASSIFICATION	updated the property lists
WITHOUT_CLASSIFICATION	we don't want to use cachemanager clone but the parent one and cachemanager is thread safe
WITHOUT_CLASSIFICATION	non-instantiable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if we redirected automatically the url may have changed
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implement these here to avoid re-implementing for sub-classes (previously these were implemented in all testelements)
WITHOUT_CLASSIFICATION	8kb is the (max) size to have the latency ('the first packet') enough for md5
WITHOUT_CLASSIFICATION	ok we have an old-style file definition save it now deal with any additional file arguments
WITHOUT_CLASSIFICATION	-1 means not defined
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	control reuse of cached ssl context in subsequent iterations
WITHOUT_CLASSIFICATION	e.g. .apache.org $non-nls-1$
WITHOUT_CLASSIFICATION	e.g. www.apache.org
WITHOUT_CLASSIFICATION	get hostname
WITHOUT_CLASSIFICATION	n.b. these values are used in jmeter.properties (jmeter.httpsampler) - do not change they can alse be used as the implementation name
WITHOUT_CLASSIFICATION	+ jmx implementation attribute values (also displayed in gui) - do not change $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ - jmx
WITHOUT_CLASSIFICATION	helper class (callback) for applying parameter definitions
WITHOUT_CLASSIFICATION	get past separator
WITHOUT_CLASSIFICATION	put request does not use multipart so no need for boundary
WITHOUT_CLASSIFICATION	get the encoding to use for the request
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	create the content length we are going to write
WITHOUT_CLASSIFICATION	we create the post body content now so we know the size
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the put body
WITHOUT_CLASSIFICATION	keep the content will be sent later
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	request sent. now get the response
WITHOUT_CLASSIFICATION	done with the sampling proper.
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	now collect the results into the httpsampleresult
WITHOUT_CLASSIFICATION	e.g. text/html; charset=iso-8859-1
WITHOUT_CLASSIFICATION	needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	http protocol violation but avoids npe
WITHOUT_CLASSIFICATION	record some sizes to allow httpsampleresult.getbytes() with different options
WITHOUT_CLASSIFICATION	handle the various methods
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	allows httpsamplerproxy to call threadfinished; subclasses can override if necessary
WITHOUT_CLASSIFICATION	allows httpsamplerproxy to call notifyfirstsampleafterlooprestart; subclasses can override if necessary
WITHOUT_CLASSIFICATION	provide access to httpsamplerbase methods
WITHOUT_CLASSIFICATION	did not want to spoof the ip address
WITHOUT_CLASSIFICATION	ok to set pre-emptive auth?
WITHOUT_CLASSIFICATION	needs to be accessible by httpsampler2
WITHOUT_CLASSIFICATION	set default parameters as needed
WITHOUT_CLASSIFICATION	process commons httpclient parameters file $non-nls-1$
WITHOUT_CLASSIFICATION	if the pre-emptive parameter is undefined then we can set it as needed otherwise we should do what the user requested.
WITHOUT_CLASSIFICATION	handle old-style jmeter properties
WITHOUT_CLASSIFICATION	this must be done last as must not be overridden
WITHOUT_CLASSIFICATION	we do our own cookie handling
WITHOUT_CLASSIFICATION	may generate illegalargumentexception
WITHOUT_CLASSIFICATION	hc3.1 does not have the method
WITHOUT_CLASSIFICATION	set any default request headers
WITHOUT_CLASSIFICATION	setup connection
WITHOUT_CLASSIFICATION	will be null for head
WITHOUT_CLASSIFICATION	tmp inputstream needs to have a good counting
WITHOUT_CLASSIFICATION	pick up actual path (after redirects)
WITHOUT_CLASSIFICATION	can be missing e.g. on redirect
WITHOUT_CLASSIFICATION	exclude the cookie header since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	store any cookies received in the cookie manager
WITHOUT_CLASSIFICATION	save cache information
WITHOUT_CLASSIFICATION	follow redirects and download page resources if appropriate
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	set up the local address if one exists
WITHOUT_CLASSIFICATION	use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	method left empty here but allows subclasses to override
WITHOUT_CLASSIFICATION	remove any port specification $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	get all the request headers
WITHOUT_CLASSIFICATION	add a \r\n
WITHOUT_CLASSIFICATION	e.g. some kinds of invalid url
WITHOUT_CLASSIFICATION	already include the \r\n
WITHOUT_CLASSIFICATION	last \r\n before response data
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we use the hostconfiguration as the key to retrieve the httpclient so need to ensure that any items used in its equals/hashcode methods are not changed after use i.e. host port protocol localaddress proxy
WITHOUT_CLASSIFICATION	all needed to ensure re-usablility
WITHOUT_CLASSIFICATION	null means use the default
WITHOUT_CLASSIFICATION	dynamic proxy overrules static proxy
WITHOUT_CLASSIFICATION	n.b. hostconfiguration.equals() includes proxy settings in the compare.
WITHOUT_CLASSIFICATION	set up any required proxy credentials
WITHOUT_CLASSIFICATION	allow httpclient to handle the redirects
WITHOUT_CLASSIFICATION	set all the headers from the headermanager
WITHOUT_CLASSIFICATION	header[0] is not the status line $non-nls-1$
WITHOUT_CLASSIFICATION	buffer to hold the post body except file content
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	if a content encoding is specified we use that as the encoding of any parameter values
WITHOUT_CLASSIFICATION	write the request to our own stream
WITHOUT_CLASSIFICATION	create the parts add any parameters
WITHOUT_CLASSIFICATION	$non-nls-1$ this is the default used by httpclient
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	we just add placeholder text for file content
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	nt includes other types of credentials
WITHOUT_CLASSIFICATION	we have credentials - should we set pre-emptive authentication?
WITHOUT_CLASSIFICATION	we don't know how many entries will be skipped
WITHOUT_CLASSIFICATION	add any files
WITHOUT_CLASSIFICATION	we do not know the char set of the file to be uploaded so we set it to null
WITHOUT_CLASSIFICATION	we do not know what the char set of the file is
WITHOUT_CLASSIFICATION	set the multipart for the post
WITHOUT_CLASSIFICATION	.sendmultipartwithoutfilecontent(bos);
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request todo needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	if getsendfileaspostbody returned true it's sure that file is not null
WITHOUT_CLASSIFICATION	if a content encoding is specified we set it as http parameter so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the post body
WITHOUT_CLASSIFICATION	it is a normal post request with parameter names and values
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the post body
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	add the parameters
WITHOUT_CLASSIFICATION	use the default encoding for urls
WITHOUT_CLASSIFICATION	the httpclient always urlencodes both name and value so if the argument is already encoded we have to decode it before adding it to the post request
WITHOUT_CLASSIFICATION	the value is already encoded by the user must decode the value now so that when the httpclient encodes it we end up with the same value as the user had entered.
WITHOUT_CLASSIFICATION	add the parameter httpclient will urlencode it
WITHOUT_CLASSIFICATION	check if we have any content to send for body
WITHOUT_CLASSIFICATION	we get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	does not need to be synchronised as all access is from same thread
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	for all the file multiparts we must tell it to not include the actual file content
WITHOUT_CLASSIFICATION	for all the file multiparts we must revert the hiding of the actual file content
WITHOUT_CLASSIFICATION	check if the header manager had a content type header this allows the user to specify his own content-type for a post request
WITHOUT_CLASSIFICATION	buffer to hold the put body except file content
WITHOUT_CLASSIFICATION	should be true
WITHOUT_CLASSIFICATION	count the retries as well in the time
WITHOUT_CLASSIFICATION	request sent. now get the response
WITHOUT_CLASSIFICATION	buffer to hold the post body except file content
WITHOUT_CLASSIFICATION	we just add placeholder text for file content
WITHOUT_CLASSIFICATION	if a content encoding is specified we set it as http parameter so that the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	if the request entity is repeatable we can send it first to our own stream so we can return it
WITHOUT_CLASSIFICATION	if the request entity is repeatable we can send it first to our own stream so we can return it
WITHOUT_CLASSIFICATION	check if the header manager had a content type header this allows the user to specify his own content-type for a post request
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the put body
WITHOUT_CLASSIFICATION	check if we should send only placeholder text for the file content or the real file content
WITHOUT_CLASSIFICATION	can cause npe in httpclient 3.1 ((simplehttpconnectionmanager)cl.gethttpconnectionmanager()).shutdown(); closes the connection revert to original method closes the connection
WITHOUT_CLASSIFICATION	implemented by parent class
WITHOUT_CLASSIFICATION	take length from file
WITHOUT_CLASSIFICATION	use this to override file length
WITHOUT_CLASSIFICATION	all the other headers are set up by httpsampler2.setupconnection()
WITHOUT_CLASSIFICATION	no header provided
WITHOUT_CLASSIFICATION	so we don't generate chunked encoding
WITHOUT_CLASSIFICATION	will use chunked encoding
WITHOUT_CLASSIFICATION	some headers are set by executemethod()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	done with the sampling proper.
WITHOUT_CLASSIFICATION	now collect the results into the httpsampleresult
WITHOUT_CLASSIFICATION	e.g. text/html; charset=iso-8859-1
WITHOUT_CLASSIFICATION	if we redirected automatically the url may have changed
WITHOUT_CLASSIFICATION	store any cookies received in the cookie manager
WITHOUT_CLASSIFICATION	save cache information
WITHOUT_CLASSIFICATION	follow redirects and download page resources if appropriate
WITHOUT_CLASSIFICATION	buffer to hold the post body except file content
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	will be null for head
WITHOUT_CLASSIFICATION	pick up actual path (after redirects)
WITHOUT_CLASSIFICATION	can be missing e.g. on redirect
WITHOUT_CLASSIFICATION	e.g. some kinds of invalid url
WITHOUT_CLASSIFICATION	add any files
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	charset must agree with content-type below $non-nls-1$
WITHOUT_CLASSIFICATION	contentlength > 0 ? contentlength default_initial_buffer_size);
WITHOUT_CLASSIFICATION	first response
WITHOUT_CLASSIFICATION	save the latency
WITHOUT_CLASSIFICATION	set up the defaults (may be overridden below)
WITHOUT_CLASSIFICATION	notused private class parserclass = null;
WITHOUT_CLASSIFICATION	was there an error?
WITHOUT_CLASSIFICATION	n.b. must be in this class for the testbean code to work
WITHOUT_CLASSIFICATION	retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	write end of multipart
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	get the encoding to use for the request
WITHOUT_CLASSIFICATION	if there are no arguments we can send a file as the body of the request
WITHOUT_CLASSIFICATION	keep the content will be sent later
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	write the form data post body which we have constructed in the setheaders. this contains the multipart start divider and any form data i.e. arguments
WITHOUT_CLASSIFICATION	first write the start multipart file todo - charset?
WITHOUT_CLASSIFICATION	retrieve the formatted data using the same encoding used to create it todo - charset? write the actual file content
WITHOUT_CLASSIFICATION	we just add placeholder text for file content $non-nls-1$ write the end of multipart file
WITHOUT_CLASSIFICATION	we're sure that there is at least one file because of getsendfileaspostbody method's return value.
WITHOUT_CLASSIFICATION	we just add placeholder text for file content $non-nls-1$
WITHOUT_CLASSIFICATION	write the form section
WITHOUT_CLASSIFICATION	first the multipart start divider
WITHOUT_CLASSIFICATION	add any parameters
WITHOUT_CLASSIFICATION	end the previous multipart
WITHOUT_CLASSIFICATION	end the previous multipart
WITHOUT_CLASSIFICATION	write multipart for parameter
WITHOUT_CLASSIFICATION	if there are any files we need to end the previous multipart
WITHOUT_CLASSIFICATION	write multipart for file
WITHOUT_CLASSIFICATION	add also the length of the file content
WITHOUT_CLASSIFICATION	and the end of the file multipart
WITHOUT_CLASSIFICATION	add the end of multipart
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	if none of the arguments have a name specified we just send all the values as the post body
WITHOUT_CLASSIFICATION	if we have a file but no data then read the file
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	superclass does not support types
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	just append all the parameter values and use that as the post body
WITHOUT_CLASSIFICATION	it is a normal post request with parameter names and values
WITHOUT_CLASSIFICATION	set the content type
WITHOUT_CLASSIFICATION	create the content length we are going to write
WITHOUT_CLASSIFICATION	we create the post body content now so we know the size
WITHOUT_CLASSIFICATION	keep the content will be sent later
WITHOUT_CLASSIFICATION	set the content length
WITHOUT_CLASSIFICATION	check if the header manager had a content type header this allows the user to specify his own content-type for a post request
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	now we just construct any multipart for the files we only construct the file multipart start we do not write the actual file content
WITHOUT_CLASSIFICATION	we're sure that there is one file because of getsendfileaspostbody method's return value.
WITHOUT_CLASSIFICATION	exception in progress
WITHOUT_CLASSIFICATION	write boundary end marker
WITHOUT_CLASSIFICATION	get access to buffer
WITHOUT_CLASSIFICATION	wrap read() methods to track output buffer
WITHOUT_CLASSIFICATION	preload the output so that can be read back as http
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	1k - the previous 100k made no sense (there's tons of buffers elsewhere in the chain) and it caused oom when many concurrent uploads were being done. could be fixed by increasing the evacuation ratio in bin/jmeter[.bat] but this is better.
WITHOUT_CLASSIFICATION	make sure buffer details track the output
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	override all the super-class socket methods.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	timeout to retrieve wsdl when server not response
WITHOUT_CLASSIFICATION	notused string portname = pnode.getattribute("name"); used to check binding but now it doesn't. it was failing when wsdl did not using binding as expected
WITHOUT_CLASSIFICATION	check soap12
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.http.conn.ssl.sslsocketfactory#createsocket()
WITHOUT_CLASSIFICATION	characters per second to emulate
WITHOUT_CLASSIFICATION	in the rare case the wsdl is protected and requires authentication use the authmanager to set the authorization. basic and digest authorization are pretty weak and don't provide real security.
WITHOUT_CLASSIFICATION	get the node
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	get the soapoperation
WITHOUT_CLASSIFICATION	there should only be one soapoperation node per operation
WITHOUT_CLASSIFICATION	first we iterate through the bindings
WITHOUT_CLASSIFICATION	now we iterate through the operations
WITHOUT_CLASSIFICATION	if the first child is soapoperation we add it to the array
WITHOUT_CLASSIFICATION	new wsdlhelper("httpservices.bio.ifi.lmu.de1046/prothesaurus/services/biologicalnameservice?wsdl");
WITHOUT_CLASSIFICATION	remove quotes from charset name
WITHOUT_CLASSIFICATION	get ../ or ../../ etc.
WITHOUT_CLASSIFICATION	find index of path start
WITHOUT_CLASSIFICATION	absolute url
WITHOUT_CLASSIFICATION	find path endindex
WITHOUT_CLASSIFICATION	install new path
WITHOUT_CLASSIFICATION	this ensures tha httpclient knows about the protocol
WITHOUT_CLASSIFICATION	now allow the url handling to work.
WITHOUT_CLASSIFICATION	not needed for httpclient
WITHOUT_CLASSIFICATION	check if we have it in the cache
WITHOUT_CLASSIFICATION	perform the encoding
WITHOUT_CLASSIFICATION	lrumap does not support generics currently
WITHOUT_CLASSIFICATION	we assume the argument value is encoded according to the http spec i.e. utf-8
WITHOUT_CLASSIFICATION	we assume the name is always encoded according to spec
WITHOUT_CLASSIFICATION	the value is encoded in the specified encoding
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	skip expensive processing if it cannot apply $non-nls-1$
WITHOUT_CLASSIFICATION	match /../[../] etc. $non-nls-1$
WITHOUT_CLASSIFICATION	document or context-relative url like '/path/to' or '../path/to' or '/path/to/../path/'
WITHOUT_CLASSIFICATION	path is between idx='pathstartindex' (inclusive) and idx='pathendindex' (exclusive)
WITHOUT_CLASSIFICATION	append '/' if this isn't the last token or it is but the original path terminated w/ a '/'
WITHOUT_CLASSIFICATION	this can't happen (how should utf8 not be supported!?!) so just throw an error
WITHOUT_CLASSIFICATION	encode according to the http spec i.e. utf-8
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	indicate that an error occured
WITHOUT_CLASSIFICATION	we check the count to see if we have exceeded the number of lines to parse. there's no way to know where to stop in the file. therefore we use break to escape the while loop when we've reached the count.
WITHOUT_CLASSIFICATION	this.reader = new bufferedreader(new filereader(this.source)); parse(this.readerel);
WITHOUT_CLASSIFICATION	we clean the line to get rid of extra stuff
WITHOUT_CLASSIFICATION	now we set request method
WITHOUT_CLASSIFICATION	increment the current count
WITHOUT_CLASSIFICATION	increment the current count
WITHOUT_CLASSIFICATION	we filter the line first before we try to separate the url into file and parameters.
WITHOUT_CLASSIFICATION	in the case when the filter is not set we parse all the lines
WITHOUT_CLASSIFICATION	check the url for "?" symbol
WITHOUT_CLASSIFICATION	now that we have stripped the file we can parse the parameters
WITHOUT_CLASSIFICATION	if the string contains atleast one double quote and checkmethod is true go ahead and tokenize the string.
WITHOUT_CLASSIFICATION	we return the original string
WITHOUT_CLASSIFICATION	convert the parameters
WITHOUT_CLASSIFICATION	avoid possible npe when trimming the name
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	indicate that an error occured
WITHOUT_CLASSIFICATION	read one line at a time using bufferedreader
WITHOUT_CLASSIFICATION	this.reader = new bufferedreader(new filereader(this.source)); parse(this.readerel);
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	we tokenize using double quotes. this means for tomcat we should have 3 tokens if there isn't any additional information in the logs
WITHOUT_CLASSIFICATION	if checkmethod on the token is true we tokenzie it using space and escape the while loop. only the first matching token will be used
WITHOUT_CLASSIFICATION	there should only be one token that starts with slash character
WITHOUT_CLASSIFICATION	do nothing. it's naive but since the utility is meant to parse access logs the formatting should be correct
WITHOUT_CLASSIFICATION	first have to release the cookie we were using so other threads stuck in wait can move on
WITHOUT_CLASSIFICATION	let notified threads move on and get lock on managersinuse
WITHOUT_CLASSIFICATION	here is the core routine to find appropriate cookie manager and check it's not being used. if used wait until whoever's using it gives it up
WITHOUT_CLASSIFICATION	no implementation at this time since we bypass the idea of having a console tool to generate test plans. instead i decided to have a sampler that uses the generator and parser directly
WITHOUT_CLASSIFICATION	now we create the compiled pattern and add it to the arraylist
WITHOUT_CLASSIFICATION	we do a quick check to see if any filters are set. if not we just return false to be efficient.
WITHOUT_CLASSIFICATION	double check this logic make sure it makes sense
WITHOUT_CLASSIFICATION	inclusion filter assumes most of the files are not wanted therefore usefile is set to false unless it matches.
WITHOUT_CLASSIFICATION	exclusion filter assumes most of the files are used therefore usefile is set to true unless it matches.
WITHOUT_CLASSIFICATION	request headers column renderers
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	request headers column renderers
WITHOUT_CLASSIFICATION	request headers column renderers
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	clear results table before filling
WITHOUT_CLASSIFICATION	display with same order http protocol
WITHOUT_CLASSIFICATION	can be null - e.g. if url was invalid
WITHOUT_CLASSIFICATION	display cookie in headers table (same location on http protocol)
WITHOUT_CLASSIFICATION	parsed request headers
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#init()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#cleardata()
WITHOUT_CLASSIFICATION	$non-nls-1$ soap request (generally) blank name $non-nls-1$
WITHOUT_CLASSIFICATION	blank name $non-nls-1$
WITHOUT_CLASSIFICATION	empty init $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	hint to background color on bottom tabs (grey not blue)
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	the object used for each row
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	key value
WITHOUT_CLASSIFICATION	set up the 1st table result with empty headers
WITHOUT_CLASSIFICATION	set up the 2nd table
WITHOUT_CLASSIFICATION	set up the 3rd table
WITHOUT_CLASSIFICATION	create the split pane
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	$non-nls-1$ concatenate query post if exists
WITHOUT_CLASSIFICATION	add a message when no http sample $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	better iso-8859-1 than utf-8
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	find all the classes which implement the javasamplerclient interface.
WITHOUT_CLASSIFICATION	remove the javaconfig class from the list since it only implements the interface for error conditions.
WITHOUT_CLASSIFICATION	if a user has set parameters in one test and then selects a different test which supports the same parameters those parameters should have the same values that they did in the original test.
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	entry tends to be ignored
WITHOUT_CLASSIFICATION	default (can be overridden by the script)
WITHOUT_CLASSIFICATION	these are not useful yet as have not found how to get updated values back mgr.declarebean("responsecode" "200" string.class); $non-nls-1$ mgr.declarebean("responsemessage" "ok" string.class); $non-nls-1$ mgr.declarebean("issuccess" boolean.true boolean.class); $non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.abstractjmeterguicomponent#cleargui()
WITHOUT_CLASSIFICATION	overrides abstractjmeterguicomponent.configure(testelement)
WITHOUT_CLASSIFICATION	n.b. some engines (e.g. javascript) cannot handle certain declarebean() calls after the engine has been initialised so create the engine last
WITHOUT_CLASSIFICATION	catch evaluation errors
WITHOUT_CLASSIFICATION	reset the bsh.interpreter before each execution
WITHOUT_CLASSIFICATION	script file name (if present)
WITHOUT_CLASSIFICATION	parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	script area
WITHOUT_CLASSIFICATION	don't let the input field shrink too much
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	entry tends to be ignored
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements javasamplerclient.setuptest(javasamplercontext)
WITHOUT_CLASSIFICATION	implements javasamplerclient.teardowntest(javasamplercontext)
WITHOUT_CLASSIFICATION	implements javasamplerclient.getdefaultparameters()
WITHOUT_CLASSIFICATION	ensure that the required class variables are cloned as this is not currently done by the super-implementation.
WITHOUT_CLASSIFICATION	allow sampler access to test element name
WITHOUT_CLASSIFICATION	only set the default label if it has not been set
WITHOUT_CLASSIFICATION	failed to initialise the class
WITHOUT_CLASSIFICATION	but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	no point continuing mainly for bsh.evalerror
WITHOUT_CLASSIFICATION	implements teststatelistener.teststarted()
WITHOUT_CLASSIFICATION	implements teststatelistener.teststarted(string)
WITHOUT_CLASSIFICATION	implements teststatelistener.testended(string)
WITHOUT_CLASSIFICATION	implementation notes all of the methods in this class are currently read-only. if update methods are included in the future they should be defined so that a single instance of javasamplercontext can be associated with each thread. therefore no synchronization should be needed. the same instance should be used for the call to setuptest all calls to runtest and the call to teardowntest.
WITHOUT_CLASSIFICATION	teststatelistener implementation
WITHOUT_CLASSIFICATION	set default values $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	log.info(getlabel()+" "+getfilename());
WITHOUT_CLASSIFICATION	assume text output - script can override if necessary
WITHOUT_CLASSIFICATION	set response data
WITHOUT_CLASSIFICATION	script can also use setresponsedata() so long as it returns null
WITHOUT_CLASSIFICATION	set if we were successful or not
WITHOUT_CLASSIFICATION	private static final string label_default = "javatest";
WITHOUT_CLASSIFICATION	utility method to set up all the values
WITHOUT_CLASSIFICATION	default to name of element
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	record sample start time.
WITHOUT_CLASSIFICATION	record sample start time.
WITHOUT_CLASSIFICATION	generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	execute the sample. in this case sleep for the specified time if any
WITHOUT_CLASSIFICATION	record end time and populate the results.
WITHOUT_CLASSIFICATION	the name of the sampler
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	only do the calculation if it is needed
WITHOUT_CLASSIFICATION	execute the sample. in this case sleep for the specified time.
WITHOUT_CLASSIFICATION	string used to indicate a null value
WITHOUT_CLASSIFICATION	key name (lowercase) from java.sql.types; entry corresponding int value
WITHOUT_CLASSIFICATION	read-only after class init
WITHOUT_CLASSIFICATION	based on e291. getting the name of a jdbc type from javaalmanac.com httpjavaalmanac.com/egs/java.sql/jdbcint2str.html
WITHOUT_CLASSIFICATION	get all fields in java.sql.types and store the corresponding int values
WITHOUT_CLASSIFICATION	query types (used to communicate with gui) n.b. these must not be changed as they are used in the jmx files $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	based on query return value get results
WITHOUT_CLASSIFICATION	user provided incorrect query type
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	as a connection is held by only one thread we cannot already have a preparedstatementmap put by another thread
WITHOUT_CLASSIFICATION	save the value in the variable if present
WITHOUT_CLASSIFICATION	save the value in the variable if present
WITHOUT_CLASSIFICATION	in case
WITHOUT_CLASSIFICATION	can't have an output parameter type null
WITHOUT_CLASSIFICATION	preparedstatementmap is associated to one connection so 2 threads cannot use the same preparedstatement map at the same time
WITHOUT_CLASSIFICATION	thrown by derby jdbc (at least) if there are no "?" markers in statement
WITHOUT_CLASSIFICATION	save the current count
WITHOUT_CLASSIFICATION	lrumap is not generic
WITHOUT_CLASSIFICATION	i starts at 1
WITHOUT_CLASSIFICATION	the datasource is set up by teststarted and cleared by testended. these are called from different threads so access must be synchronized. the same instance is called in each case.
WITHOUT_CLASSIFICATION	remove any additional values from previous sample
WITHOUT_CLASSIFICATION	call to testbeanhelper.prepare() is intentional
WITHOUT_CLASSIFICATION	$non-nls-1$ get the previous count
WITHOUT_CLASSIFICATION	keep a record of the pre-thread pools so that they can be disposed of at the end of a test
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	i.e. if we want per thread pooling pool will be created later
WITHOUT_CLASSIFICATION	utility routine to get the connection from the pool. purpose - allows jdbcsampler to be entirely independent of the pooling classes - allows the pool storage mechanism to be changed if necessary
WITHOUT_CLASSIFICATION	set up the datasource - maxpool is a parameter so the same code can also be used for setting up the per-thread pools.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	log is required to ensure errors are available
WITHOUT_CLASSIFICATION	used to hold per-thread singleton connection pools
WITHOUT_CLASSIFICATION	wrapper class to allow getconnection() to be implemented for both shared and per-thread pools.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	i.e. shared pool
WITHOUT_CLASSIFICATION	make sure setting the new isolation mode is done in an auto committed transaction
WITHOUT_CLASSIFICATION	will use default isolation
WITHOUT_CLASSIFICATION	assume we will be successful
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	use latency to measure connection time
WITHOUT_CLASSIFICATION	the environment is supposed to use string keys only
WITHOUT_CLASSIFICATION	webspheremq does not allow corr. id. to be set using setstringproperty() $non-nls-1$
WITHOUT_CLASSIFICATION	we use a linkedblockingqueue (rather than a concurrentlinkedqueue) because it has a poll-with-wait method that avoids the need to use a polling loop.
WITHOUT_CLASSIFICATION	using onmessage listener
WITHOUT_CLASSIFICATION	allow for short/negative times
WITHOUT_CLASSIFICATION	allow for short/negative times
WITHOUT_CLASSIFICATION	called from threadfinished() thread
WITHOUT_CLASSIFICATION	guardedby("this")
WITHOUT_CLASSIFICATION	guardedby("this")
WITHOUT_CLASSIFICATION	there was an object in map destroy the temporary and return one in map (oldctx)
WITHOUT_CLASSIFICATION	else no object in map ctx is the one
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ --
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	renamed from clear
WITHOUT_CLASSIFICATION	(testelement) el.getproperty(jmssampler.jms_properties).getobjectvalue());
WITHOUT_CLASSIFICATION	(testelement) el.getproperty(jmssampler.jndi_properties).getobjectvalue());
WITHOUT_CLASSIFICATION	button group resources
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	button group resources
WITHOUT_CLASSIFICATION	these are the names of properties used to define the labels $non-nls-1$
WITHOUT_CLASSIFICATION	these are the names of properties used to define the labels $non-nls-1$
WITHOUT_CLASSIFICATION	button group resources when bytes message is selected
WITHOUT_CLASSIFICATION	$non-nls-1$ button group resources
WITHOUT_CLASSIFICATION	$non-nls-1$ button group resources
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	++ these names are used in the jmx files and must not be changed
WITHOUT_CLASSIFICATION	cache for file. only used by sample() in a single thread
WITHOUT_CLASSIFICATION	cache for bytes-message only used when parsing from a file
WITHOUT_CLASSIFICATION	allow shorthand names
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	assume it will fail ditto $non-nls-1$
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	not found
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	in the case the test uses a file we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	in the case the test uses a file we set it locally and prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	allow for the old jmx file which used the local language string
WITHOUT_CLASSIFICATION	------------- get/set properties ----------------------
WITHOUT_CLASSIFICATION	these static variables are only used to convert existing files
WITHOUT_CLASSIFICATION	will be the 3rd option which is not checked specifically
WITHOUT_CLASSIFICATION	note originally the code did use the clientpool to "share" subscribers however since the key was "this" and each sampler is unique - nothing was actually shared.
WITHOUT_CLASSIFICATION	default wait (ms) for a message if timeouts are not enabled this is the maximum time the sampler can be blocked.
WITHOUT_CLASSIFICATION	no need to synch/ - only used by sampler and clientpool (which does its own synch)
WITHOUT_CLASSIFICATION	this will be null if initialization succeeds.
WITHOUT_CLASSIFICATION	if true start/stop subscriber for each sample
WITHOUT_CLASSIFICATION	don't change the string as it is used in jmx files $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	run threadstarted only if destination setup on each sample
WITHOUT_CLASSIFICATION	if so we need to start collection here
WITHOUT_CLASSIFICATION	run threadfinished only if destination setup on each sample (stop listen queue)
WITHOUT_CLASSIFICATION	mapnames are strings
WITHOUT_CLASSIFICATION	disabled thread start if listen on sample choice
WITHOUT_CLASSIFICATION	don't start yet if stop between samples
WITHOUT_CLASSIFICATION	listen on sample
WITHOUT_CLASSIFICATION	can be null if init fails
WITHOUT_CLASSIFICATION	listen on sample
WITHOUT_CLASSIFICATION	so we break the loops in samplewithlistener and samplewithreceive
WITHOUT_CLASSIFICATION	assume failure
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	------------- get/set properties ----------------------
WITHOUT_CLASSIFICATION	++ these are jmx names and must not be changed $non-nls-1$
WITHOUT_CLASSIFICATION	convert the old test plan entry (which is the language dependent string) to the resource name
WITHOUT_CLASSIFICATION	this was the old value that was checked for $non-nls-1$
WITHOUT_CLASSIFICATION	default to be applied
WITHOUT_CLASSIFICATION	++ these are jmx file attribute names and must not be changed $non-nls-1$
WITHOUT_CLASSIFICATION	n.b. cannot change value as that is used in jmx files $non-nls-1$
WITHOUT_CLASSIFICATION	is destination setup static? else dynamic $non-nls-1$ default to maintain compatibility
WITHOUT_CLASSIFICATION	-- end of jmx file attribute names
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	member variables
WITHOUT_CLASSIFICATION	these constants are used in the jmx files and so must not be changed
WITHOUT_CLASSIFICATION	msgid not available until after send() is called note there is only one admin object which is shared between all threads interlock with receiver
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this used to be request.wait(timeout_ms) where 0 means forever however 0 means return immediately for the latch
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	n.b. these entry indexes must agree with the searchcontrols scope_levels i.e. javax.naming.directory.searchcontrols.object_scope onelevel_scope subtree_scope these have the values 012 so can be used as indexes in the array as well as the value for the search itself. n.b. although the strings are used to set and get the options language change does not currently cause a problem because that always saves the current settings first and then recreates all the gui classes.
WITHOUT_CLASSIFICATION	names for the cards $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	e.g unbind
WITHOUT_CLASSIFICATION	take note of when buttong are changed so can change panel
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass();
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	only contains ldapargument entries
WITHOUT_CLASSIFICATION	resize the table columns to appropriate widths. @param _table the table to resize columns for private void sizecolumns(jtable _table) { }
WITHOUT_CLASSIFICATION	sizecolumns(table);
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	enable delete (which may already be enabled but it won't hurt)
WITHOUT_CLASSIFICATION	highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	disable delete if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	table still contains one or more rows so highlight (select) the appropriate one.
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	main panel
WITHOUT_CLASSIFICATION	force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	if a table cell is being edited we must cancel the editing before deleting the row
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	set if we were successful or not
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	count limit time limit attributes (null = all) return object ? dereference links?
WITHOUT_CLASSIFICATION	the following strings are used in the test plan and the values must not be changed if test plans are to be upwardly compatible.
WITHOUT_CLASSIFICATION	for in build test case using this counter create the new entry in the server
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	replace (update) attribute $non-nls-1$ $non-nls-2$ add mobile phone number attribute $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	these are values for the test attribute above $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ end of test values
WITHOUT_CLASSIFICATION	the createtest() method creates an extra context which needs to be closed
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	log.warn("debug"ex); e.g. javax.naming.sizelimitexceededexception [ldap error code 4 - sizelimit exceeded]; remaining name '' 123456789012345678901 todo tidy this up
WITHOUT_CLASSIFICATION	write out search results in a stable order (including order of all subelements which might be reordered like attributes and their values) so that simple textual comparison can be done unless the number of results exceeds {@link #max_sorted_results} in which case just stream the results out without sorting.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	read all sortedresults into memory so we can guarantee ordering
WITHOUT_CLASSIFICATION	must be done prior to sorting
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	show what we did manage to retrieve
WITHOUT_CLASSIFICATION	if there's anything left
WITHOUT_CLASSIFICATION	assume it's senstive data
WITHOUT_CLASSIFICATION	ensure any remaining contexts are closed
WITHOUT_CLASSIFICATION	parent folder (or single message file)
WITHOUT_CLASSIFICATION	== servername from mail sampler
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	perform the sampling
WITHOUT_CLASSIFICATION	start timing
WITHOUT_CLASSIFICATION	-
WITHOUT_CLASSIFICATION	rfc 822 uses ascii per default
WITHOUT_CLASSIFICATION	use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	special value
WITHOUT_CLASSIFICATION	did sample succeed?
WITHOUT_CLASSIFICATION	create empty properties
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	get session
WITHOUT_CLASSIFICATION	get the store
WITHOUT_CLASSIFICATION	get folder
WITHOUT_CLASSIFICATION	get directory
WITHOUT_CLASSIFICATION	don't save headers - they are already in the raw message
WITHOUT_CLASSIFICATION	save raw message
WITHOUT_CLASSIFICATION	javadoc for the api says this is ok
WITHOUT_CLASSIFICATION	avoid double-call if addsubresult was called.
WITHOUT_CLASSIFICATION	close connection
WITHOUT_CLASSIFICATION	not been set by any child samples
WITHOUT_CLASSIFICATION	gui components
WITHOUT_CLASSIFICATION	labels - don't make these static else language change will not work
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	helper method to set up the gui screen
WITHOUT_CLASSIFICATION	store the content-type rfc 822 uses ascii per default parse the content-type
WITHOUT_CLASSIFICATION	no need to log normally as we set the status $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ may be null
WITHOUT_CLASSIFICATION	$non-nls-1$ may be null
WITHOUT_CLASSIFICATION	used to separate attachment file names in jmx fields - do not change!
WITHOUT_CLASSIFICATION	-jmx file attribute names
WITHOUT_CLASSIFICATION	process address lists
WITHOUT_CLASSIFICATION	needed for measuring sending time
WITHOUT_CLASSIFICATION	calculate message size
WITHOUT_CLASSIFICATION	set up the sample result details
WITHOUT_CLASSIFICATION	perform the sampling
WITHOUT_CLASSIFICATION	username / password incorrect
WITHOUT_CLASSIFICATION	ssl not supported starttls not supported other messagingexception
WITHOUT_CLASSIFICATION	general exception
WITHOUT_CLASSIFICATION	process the sampler result
WITHOUT_CLASSIFICATION	throws me
WITHOUT_CLASSIFICATION	throws ioe me
WITHOUT_CLASSIFICATION	throws ioe me
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	part is only needed if we don't send an .eml-file
WITHOUT_CLASSIFICATION	getallheaders() is not yet genericised throws me
WITHOUT_CLASSIFICATION	throws me throws ioe me
WITHOUT_CLASSIFICATION	api not yet generic throws me
WITHOUT_CLASSIFICATION	we have at least one potential address
WITHOUT_CLASSIFICATION	local vars
WITHOUT_CLASSIFICATION	ensure correctly set on initial display ensure correctly set on initial display
WITHOUT_CLASSIFICATION	server settings
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	e-mail settings
WITHOUT_CLASSIFICATION	auth settings
WITHOUT_CLASSIFICATION	security settings
WITHOUT_CLASSIFICATION	(non-javadoc) message settings
WITHOUT_CLASSIFICATION	add the header panel
WITHOUT_CLASSIFICATION	additional settings
WITHOUT_CLASSIFICATION	tfmailfrom.setenabled(true); tfmailto.setenabled(true); tfmailtocc.setenabled(true); tfmailtobcc.setenabled(true); tfsubject.setenabled(true);
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	standard setup
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	local vars
WITHOUT_CLASSIFICATION	add the standard title
WITHOUT_CLASSIFICATION	must follow the checkbox setting
WITHOUT_CLASSIFICATION	not compatible
WITHOUT_CLASSIFICATION	not compatible must follow the checkbox setting
WITHOUT_CLASSIFICATION	ensure correctly set on initial display
WITHOUT_CLASSIFICATION	might be nullproperty
WITHOUT_CLASSIFICATION	case we are measuring real time of spedition
WITHOUT_CLASSIFICATION	set properties using jaf
WITHOUT_CLASSIFICATION	handle body and attachments
WITHOUT_CLASSIFICATION	i.e. mailbody is empty
WITHOUT_CLASSIFICATION	set from field and subject
WITHOUT_CLASSIFICATION	synchronousmode==true
WITHOUT_CLASSIFICATION	listener cannot be null here
WITHOUT_CLASSIFICATION	ok it has been supplied
WITHOUT_CLASSIFICATION	empty arrays are immutable
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	httpapi.mongodb.org/java/2.7.2/com/mongodb/mongo.html
WITHOUT_CLASSIFICATION	httpapi.mongodb.org/java/2.7.2/com/mongodb/mongo.html
WITHOUT_CLASSIFICATION	httpapi.mongodb.org/java/2.7.2/com/mongodb/mongooptions.html/
WITHOUT_CLASSIFICATION	httpapi.mongodb.org/java/2.7.2/com/mongodb/mongooptions.html/
WITHOUT_CLASSIFICATION	mongo is thread safe
WITHOUT_CLASSIFICATION	there is no harm in trying to clear up
WITHOUT_CLASSIFICATION	helper
WITHOUT_CLASSIFICATION	+ jmx names do not change their values
WITHOUT_CLASSIFICATION	- jmx names
WITHOUT_CLASSIFICATION	default charset is deliberate here
WITHOUT_CLASSIFICATION	n.b. this will be a config element so we cannot use the getxxx() methods
WITHOUT_CLASSIFICATION	default to original behaviour i.e. re-use connection
WITHOUT_CLASSIFICATION	n.b. this will be a config element so we cannot use the setxxx() methods
WITHOUT_CLASSIFICATION	overrides abstractjmeterguicomponent.configure(testelement)
WITHOUT_CLASSIFICATION	element.setproperty(tcpsampler.filename filename.gettext());
WITHOUT_CLASSIFICATION	element.setproperty(tcpsampler.nodelay setnodelay.isselected());
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	don't use default for saving tristates element.setproperty(tcpsampler.close_connection closeconnection.isselected() tcpsampler.close_connection_default);
WITHOUT_CLASSIFICATION	5 columns size
WITHOUT_CLASSIFICATION	3 columns size
WITHOUT_CLASSIFICATION	mainpanel.add(createfilenamepanel());
WITHOUT_CLASSIFICATION	-- jmx file constants - do not change
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ key for hashmap
WITHOUT_CLASSIFICATION	$non-nls-1$ key for hashmap
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	entry tends to be ignored
WITHOUT_CLASSIFICATION	set if we were successful or not
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	++ jmx file constants - do not change $non-nls-1$
WITHOUT_CLASSIFICATION	if set this is the regex that is used to extract the status from the response not implemented yet private static final string status_regex = jmeterutils.getpropdefault("tcp.status.regex""");
WITHOUT_CLASSIFICATION	are we processing the first sample?
WITHOUT_CLASSIFICATION	used for handling interrupt
WITHOUT_CLASSIFICATION	not in cache so create new one and cache it
WITHOUT_CLASSIFICATION	do stuff we cannot do as part of threadstarted()
WITHOUT_CLASSIFICATION	use the test element name for the label
WITHOUT_CLASSIFICATION	calculate response time
WITHOUT_CLASSIFICATION	reset the status code if the message contains one
WITHOUT_CLASSIFICATION	cannot do this as part of threadstarted() because the config elements have not been processed.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	fetch in case gets nulled later
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the data implementation
WITHOUT_CLASSIFICATION	preserve sign on first byte
WITHOUT_CLASSIFICATION	do we need to close byte array (or flush it?)
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	process command line property definitions (can occur multiple times)
WITHOUT_CLASSIFICATION	private imageicon runningicon = jmeterutils.getimage("thread.enabled.gif");
WITHOUT_CLASSIFICATION	private set hosts = new hashset();
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.createtestelement()
WITHOUT_CLASSIFICATION	implements jmeterguicomponent.modifytestelement(testelement)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	set it
WITHOUT_CLASSIFICATION	reset it
WITHOUT_CLASSIFICATION	reset it
WITHOUT_CLASSIFICATION	set category
WITHOUT_CLASSIFICATION	set root level
WITHOUT_CLASSIFICATION	the default title for the menu bar
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	probably a missing jar
WITHOUT_CLASSIFICATION	programming error bail out.
WITHOUT_CLASSIFICATION	programming error bail out.
WITHOUT_CLASSIFICATION	$non-nsl-1$
WITHOUT_CLASSIFICATION	editmenu.setenabled(false);
WITHOUT_CLASSIFICATION	if we are enabling the edit-->remove menu item then we also need to enable the edit menu. the edit menu may already be enabled but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	file new operation may set to null so just return app name
WITHOUT_CLASSIFICATION	first make sure we save the content of the current gui (since we will flush it away)
WITHOUT_CLASSIFICATION	forget about all guis we've created so far we'll need to re-created them all!
WITHOUT_CLASSIFICATION	beaninfo objects also contain locale-sensitive data -- flush them away
WITHOUT_CLASSIFICATION	now put the current gui in place. [this code was copied from the editcommand action -- we can't just trigger the action because that would populate the current node with the contents of the new gui -- which is empty.] fetch once probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	jmenu reportmenu; jmenuitem analyze;
WITHOUT_CLASSIFICATION	if the add menu already exists remove it.
WITHOUT_CLASSIFICATION	insert the add menu as the first menu item in the edit menu.
WITHOUT_CLASSIFICATION	there was a npe being thrown without the null check here.. jkb
WITHOUT_CLASSIFICATION	if we are enabling the edit-->add menu item then we also need to enable the edit menu. the edit menu may already be enabled but there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	help menu $non-nls-1$
WITHOUT_CLASSIFICATION	options menu $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	strings used to set up and process actions in this menu the strings need to agree with the those in the action routines
WITHOUT_CLASSIFICATION	run menu $non-nls-1$
WITHOUT_CLASSIFICATION	edit menu $non-nls-1$ from the java look and feel guidelines if all items in a menu are disabled then disable the menu. makes sense.
WITHOUT_CLASSIFICATION	file menu $non-nls-1$
WITHOUT_CLASSIFICATION	set default save menu item to disabled since the default node that is selected is root which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$non-nls-1$ file_merge.setaccelerator( keystroke.getkeystroke(keyevent.vk_o keyevent.ctrl_mask));
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	menu_add_xxx - controls which items are in the add menu menu_parent_xxx - controls which items are in the insert parent menu
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass();
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$ $non-nls-2$ $non-nls-3$
WITHOUT_CLASSIFICATION	don't try to instantiate these
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	jfilechooser jfc = null;
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass();
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	same code as for default jmeter class
WITHOUT_CLASSIFICATION	avoid npe in resetpage()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#createtestelement()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#modifytestelement(org.apache.jmeter.testelement.testelement)
WITHOUT_CLASSIFICATION	don't change name if merging
WITHOUT_CLASSIFICATION	allow for missing optional jars
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	clear the name of the test plan file
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	can't be null - this is checked by canaddto
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	save parent node for later
WITHOUT_CLASSIFICATION	so elements can only be added as children
WITHOUT_CLASSIFICATION	can't be null - this is checked by canaddto
WITHOUT_CLASSIFICATION	log.info("classname " + strclassname);
WITHOUT_CLASSIFICATION	match all
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	special handling
WITHOUT_CLASSIFICATION	converttree(tree);
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	not implemented public static final string save = "save_as"; not implemented public static final string save_all = "save_all"; not implemented public static final string save_to_previous = "save";
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	get the jcomponent from the visualizer
WITHOUT_CLASSIFICATION	get the string given from the choose and check the file extension.
WITHOUT_CLASSIFICATION	i.e. no disabled icon found
WITHOUT_CLASSIFICATION	must therefore set the enabled icon so there is at least some icon
WITHOUT_CLASSIFICATION	put the gui object back to the way it was.
WITHOUT_CLASSIFICATION	this check the state of the testelement and if returns false it disable the loaded node
WITHOUT_CLASSIFICATION	container endwindow; jpopupmenu pop;
WITHOUT_CLASSIFICATION	endwindow = window;
WITHOUT_CLASSIFICATION	get the main frame.
WITHOUT_CLASSIFICATION	close any main menu that is open
WITHOUT_CLASSIFICATION	transient private static final logger log = loggingmanager.getloggerforclass();
WITHOUT_CLASSIFICATION	boolean enabled = true;
WITHOUT_CLASSIFICATION	if icon has not been defined then use gui_class property
WITHOUT_CLASSIFICATION	mkdir() returns false if the directory was not created; could be because it exists
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	there's only 1 test plan so can cache the mode here
WITHOUT_CLASSIFICATION	private static final logger log = loggingmanager.getloggerforclass();
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	called from ctor so must not be overridable
WITHOUT_CLASSIFICATION	if the directory already exists and is a directory we just renamed to "archive.date"
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	return the pagesize divided by 1024 to get kilobytes
WITHOUT_CLASSIFICATION	we add the entry
WITHOUT_CLASSIFICATION	we should make this configurable eventually
WITHOUT_CLASSIFICATION	private static reportplan plan;
WITHOUT_CLASSIFICATION	now add the samples to the hashmap
WITHOUT_CLASSIFICATION	iterator itr = data.iterator();
WITHOUT_CLASSIFICATION	duplicates
WITHOUT_CLASSIFICATION	incompatable (blee/all)
WITHOUT_CLASSIFICATION	check that optional args work woth long options
WITHOUT_CLASSIFICATION	"-t3""-a"
WITHOUT_CLASSIFICATION	"-t3""-a"
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	result.setresponsedata - not set
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	"-t""-a"
WITHOUT_CLASSIFICATION	"-dstupid=idiot""are""--all""--all""here"
WITHOUT_CLASSIFICATION	check delimiters are allowed
WITHOUT_CLASSIFICATION	check delimiters are allowed
WITHOUT_CLASSIFICATION	should not detect trailing option
WITHOUT_CLASSIFICATION	should detect trailing option
WITHOUT_CLASSIFICATION	"-dstupid=idiot""are""--all""here"
WITHOUT_CLASSIFICATION	check "-" is allowed in arg2
WITHOUT_CLASSIFICATION	"-dstupid="
WITHOUT_CLASSIFICATION	"-dstupid=""-c"
WITHOUT_CLASSIFICATION	"-dstupid""-c"
WITHOUT_CLASSIFICATION	canonical form
WITHOUT_CLASSIFICATION	test optional arguments
WITHOUT_CLASSIFICATION	ok should treat b as separate should have no arg
WITHOUT_CLASSIFICATION	convert between eclipse jar name and build.properties name
WITHOUT_CLASSIFICATION	remove docs-only jars
WITHOUT_CLASSIFICATION	assume default charset is ok here <classpathentry kind="lib" path="lib/geronimo-jms_1.1_spec-1.1.1.jar"/> <classpathentry kind="lib" path="lib/activation-1.1.1.jar"/> <classpathentry kind="lib" path="lib/jtidy-r938.jar"/>
WITHOUT_CLASSIFICATION	special handling
WITHOUT_CLASSIFICATION	this would be done by the run command
WITHOUT_CLASSIFICATION	testlog.setpriority(org.apache.log.priority.debug);
WITHOUT_CLASSIFICATION	not present
WITHOUT_CLASSIFICATION	wrong
WITHOUT_CLASSIFICATION	wrong
WITHOUT_CLASSIFICATION	loggingmanager.setpriority("debug""jmeter");
WITHOUT_CLASSIFICATION	restart file
WITHOUT_CLASSIFICATION	check random number
WITHOUT_CLASSIFICATION	this would be done by the run command
WITHOUT_CLASSIFICATION	test csv file with a header line
WITHOUT_CLASSIFICATION	test csv file with a header line
WITHOUT_CLASSIFICATION	test csv file with a header line and recycle is true
WITHOUT_CLASSIFICATION	read 1st line read 5 lines + restart to file begin line 2 line 3 line 4 line 5 return to 2nd line (first line is names)
WITHOUT_CLASSIFICATION	needs to be initialised
WITHOUT_CLASSIFICATION	etc
WITHOUT_CLASSIFICATION	genericcontroller sub_1 = new genericcontroller(); sub_1.addtestelement(new ifcontroller("3==3")); controller.addtestelement(sub_1); controller.addtestelement(new ifcontroller("false==true"));
WITHOUT_CLASSIFICATION	ifcontroller controller = new ifcontroller("12==12"); controller.initialize();
WITHOUT_CLASSIFICATION	should not enter the loop
WITHOUT_CLASSIFICATION	test with simplecontroller as first item
WITHOUT_CLASSIFICATION	should not enter the loop next time
WITHOUT_CLASSIFICATION	should not enter the loop next time but should continue to the end of the loop
WITHOUT_CLASSIFICATION	get next sample and its name
WITHOUT_CLASSIFICATION	match by name
WITHOUT_CLASSIFICATION	should not run any children should match the default entry
WITHOUT_CLASSIFICATION	selection controller with two sub-controllers but each has only 1 child
WITHOUT_CLASSIFICATION	controller + before + switch (cond) + + zero + + controller sub_1 + + + one + + two + + controller sub_2 + + + three + after
WITHOUT_CLASSIFICATION	test before selection controller - zero (default) - simple controller 1 - - one - - two - simple controller 2 - - three - - four - five - six after cond = switch condition exp[] = expected results
WITHOUT_CLASSIFICATION	n.b. requires apachejmeter_functions.jar to be on the classpath otherwise the function cannot be resolved.
WITHOUT_CLASSIFICATION	while (blank) previous sample ok - should loop until false
WITHOUT_CLASSIFICATION	log.info("testblankprevok");
WITHOUT_CLASSIFICATION	while (last) previous sample ok - should loop until false
WITHOUT_CLASSIFICATION	while (last) previous sample ok - should loop until false
WITHOUT_CLASSIFICATION	log.info("testlastprevok");
WITHOUT_CLASSIFICATION	dummy for testing functions
WITHOUT_CLASSIFICATION	log.info("testotherprevok");
WITHOUT_CLASSIFICATION	while (blank) previous sample failed - should run once
WITHOUT_CLASSIFICATION	log.info("testblankprevfailed");
WITHOUT_CLASSIFICATION	run entire test again
WITHOUT_CLASSIFICATION	should not enter the loop
WITHOUT_CLASSIFICATION	while last previous sample failed - should not run
WITHOUT_CLASSIFICATION	log.info("testlastprevfailed");
WITHOUT_CLASSIFICATION	while false previous sample failed - should not run
WITHOUT_CLASSIFICATION	log.info("testfalseprevfailed");
WITHOUT_CLASSIFICATION	should behave the same for blank and last because success on input
WITHOUT_CLASSIFICATION	should be ok
WITHOUT_CLASSIFICATION	e.printstacktrace();
WITHOUT_CLASSIFICATION	set up the test plan
WITHOUT_CLASSIFICATION	onlyonce samples
WITHOUT_CLASSIFICATION	outer sample
WITHOUT_CLASSIFICATION	inner loop
WITHOUT_CLASSIFICATION	sample in inner loop
WITHOUT_CLASSIFICATION	compute the expected sample names
WITHOUT_CLASSIFICATION	outer only once + ("three" + ("four" + "five" + "six" + "seven") innerloopcount) outerloopcount;
WITHOUT_CLASSIFICATION	the only once samples
WITHOUT_CLASSIFICATION	the outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	execute the test pan
WITHOUT_CLASSIFICATION	outer sample
WITHOUT_CLASSIFICATION	inner loop
WITHOUT_CLASSIFICATION	inner loop
WITHOUT_CLASSIFICATION	sample in inner loop
WITHOUT_CLASSIFICATION	compute the expected sample names
WITHOUT_CLASSIFICATION	compute the expected sample names
WITHOUT_CLASSIFICATION	the only once samples
WITHOUT_CLASSIFICATION	the only once samples
WITHOUT_CLASSIFICATION	the outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	execute the test pan
WITHOUT_CLASSIFICATION	execute the test pan
WITHOUT_CLASSIFICATION	test plan with onlyoncecontroller inside inner loop set up the test plan
WITHOUT_CLASSIFICATION	onlyonce inside inner loop
WITHOUT_CLASSIFICATION	outer only once + ("three" + "only once five and six" + ("four" + "seven") innerloopcount) outerloopcount;
WITHOUT_CLASSIFICATION	test skipped for now as behaviour is not yet properly defined
WITHOUT_CLASSIFICATION	interleavecontroller in inner loop
WITHOUT_CLASSIFICATION	onlyonce inside interleavecontroller
WITHOUT_CLASSIFICATION	samples inside interleavecontroller
WITHOUT_CLASSIFICATION	sample in inner loop
WITHOUT_CLASSIFICATION	outer only once + ("three" + "only once five and six" + "eight in interleave only once" + ("four" + "interleave" + "eleven") innerloopcount) outerloopcount;
WITHOUT_CLASSIFICATION	escaped dollar commma and backslash with no variable reference
WITHOUT_CLASSIFICATION	escaped dollar commma and backslash with variable reference
WITHOUT_CLASSIFICATION	n.b. backslashes are removed before dollar comma and backslash
WITHOUT_CLASSIFICATION	n.b. backslashes are removed before dollar comma and backslash
WITHOUT_CLASSIFICATION	escaped dollar commma and backslash with missing variable reference
WITHOUT_CLASSIFICATION	escaped dollar commma and backslash with missing function reference
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getproperty("domain"));
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getproperty("domain"));
WITHOUT_CLASSIFICATION	set up the non-wild variables
WITHOUT_CLASSIFICATION	should not clear this?
WITHOUT_CLASSIFICATION	check when match fails
WITHOUT_CLASSIFICATION	extractor.setdefaultvalue("default");
WITHOUT_CLASSIFICATION	now rerun with match fail
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	this would be done by the run command
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	has child but child is empty
WITHOUT_CLASSIFICATION	has no child
WITHOUT_CLASSIFICATION	no text
WITHOUT_CLASSIFICATION	test fragment
WITHOUT_CLASSIFICATION	now get its text
WITHOUT_CLASSIFICATION	no text but using fragment mode
WITHOUT_CLASSIFICATION	there aren't any
WITHOUT_CLASSIFICATION	try to get data from subresult needed for addsubresult()
WITHOUT_CLASSIFICATION	get data from both
WITHOUT_CLASSIFICATION	get data from child
WITHOUT_CLASSIFICATION	create the stringfromfile function and set its parameters.
WITHOUT_CLASSIFICATION	create the splitfile function and set its parameters.
WITHOUT_CLASSIFICATION	create the beanshell function and set its parameters.
WITHOUT_CLASSIFICATION	reset files
WITHOUT_CLASSIFICATION	check some initial variables
WITHOUT_CLASSIFICATION	check source works
WITHOUT_CLASSIFICATION	check persistence
WITHOUT_CLASSIFICATION	check that bsh has read the file
WITHOUT_CLASSIFICATION	restarts
WITHOUT_CLASSIFICATION	test that only loops twice
WITHOUT_CLASSIFICATION	function objects to be tested
WITHOUT_CLASSIFICATION	helper class used to implement co-routine between two threads
WITHOUT_CLASSIFICATION	allow other thread to start
WITHOUT_CLASSIFICATION	open as a
WITHOUT_CLASSIFICATION	open as b
WITHOUT_CLASSIFICATION	col2 line 1
WITHOUT_CLASSIFICATION	a next
WITHOUT_CLASSIFICATION	col 1 line 2 a
WITHOUT_CLASSIFICATION	b next
WITHOUT_CLASSIFICATION	col2 line 2 b
WITHOUT_CLASSIFICATION	xpathfilecontainer tests
WITHOUT_CLASSIFICATION	assertequals("expected 4 lines"4f.size());
WITHOUT_CLASSIFICATION	the suite() method creates separate test suites for each of the types of test. the suitexxx() methods create a list of items to be tested and create a new test instance for each. each test type has its own constructor which saves the item to be tested note that the suite() method must be static and the methods to run the tests must be instance methods so that they can pick up the item value which was saved by the constructor.
WITHOUT_CLASSIFICATION	use same xpath for both threads
WITHOUT_CLASSIFICATION	string s =
WITHOUT_CLASSIFICATION	prevent accidental use of is below
WITHOUT_CLASSIFICATION	wrap-round check
WITHOUT_CLASSIFICATION	no wrap-round check
WITHOUT_CLASSIFICATION	perform a sum and check the results
WITHOUT_CLASSIFICATION	trailing space
WITHOUT_CLASSIFICATION	test with output variable name
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	test with empty output variable name
WITHOUT_CLASSIFICATION	not full test plans
WITHOUT_CLASSIFICATION	start in new state
WITHOUT_CLASSIFICATION	suite.addtest(new testload("checkguipackage"));
WITHOUT_CLASSIFICATION	save the method name
WITHOUT_CLASSIFICATION	constructor for testelement tests
WITHOUT_CLASSIFICATION	save the method name
WITHOUT_CLASSIFICATION	save the method name
WITHOUT_CLASSIFICATION	save the method name
WITHOUT_CLASSIFICATION	constructor for serializable tests
WITHOUT_CLASSIFICATION	constructor for gui tests
WITHOUT_CLASSIFICATION	constructor for function tests
WITHOUT_CLASSIFICATION	only show classpath once
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	used by testanchormodifier used by testanchormodifier used by testsaveservice
WITHOUT_CLASSIFICATION	use a suite to allow the tests to be generated at run-time
WITHOUT_CLASSIFICATION	the locale used to instantiate the gui objects
WITHOUT_CLASSIFICATION	needs to be done before any gui classes are instantiated
WITHOUT_CLASSIFICATION	restore the original locale
WITHOUT_CLASSIFICATION	extract titles from component_reference.xml
WITHOUT_CLASSIFICATION	not a true gui component
WITHOUT_CLASSIFICATION	add titles that don't need to be documented guititles.put("root" boolean.false);
WITHOUT_CLASSIFICATION	extract titles from functions.xml
WITHOUT_CLASSIFICATION	first time
WITHOUT_CLASSIFICATION	we don't mind if this is left over ditto not a sampler
WITHOUT_CLASSIFICATION	test gui elements - create the suite of tests
WITHOUT_CLASSIFICATION	test functions - create the suite of tests
WITHOUT_CLASSIFICATION	jmeterguicomponent item = (jmeterguicomponent) iter.next();
WITHOUT_CLASSIFICATION	test gui elements - run the test
WITHOUT_CLASSIFICATION	so we can detect extra entries
WITHOUT_CLASSIFICATION	is this a work in progress or an internal gui component? will be "" for internal components
WITHOUT_CLASSIFICATION	skip the example samplers
WITHOUT_CLASSIFICATION	record in log as well
WITHOUT_CLASSIFICATION	record in log as well
WITHOUT_CLASSIFICATION	run the function test
WITHOUT_CLASSIFICATION	for detecting extra entries
WITHOUT_CLASSIFICATION	check that function descriptions are ok
WITHOUT_CLASSIFICATION	test gui elements - run for all components
WITHOUT_CLASSIFICATION	test gui elements - not run for testbeangui items
WITHOUT_CLASSIFICATION	test serializable elements - create the suite of tests
WITHOUT_CLASSIFICATION	test serializable elements - test the object
WITHOUT_CLASSIFICATION	test testelements - implement the test case
WITHOUT_CLASSIFICATION	don't try to instantiate remote server
WITHOUT_CLASSIFICATION	try with a parameter-less constructor first
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	no luck. ignore this class
WITHOUT_CLASSIFICATION	we won't test restricted-access classes.
WITHOUT_CLASSIFICATION	not thrown so need to check here
WITHOUT_CLASSIFICATION	only dump it once
WITHOUT_CLASSIFICATION	[sebb] assertequals(item2 cloneditem.getproperty(item2.getname()));
WITHOUT_CLASSIFICATION	used by findtestfile
WITHOUT_CLASSIFICATION	jmeterutils assumes unix-style separators
WITHOUT_CLASSIFICATION	used to be done in initializeproperties
WITHOUT_CLASSIFICATION	needed for scripts
WITHOUT_CLASSIFICATION	display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	helper method to find a file
WITHOUT_CLASSIFICATION	add the offset
WITHOUT_CLASSIFICATION	add the offset
WITHOUT_CLASSIFICATION	helper method to find a test path
WITHOUT_CLASSIFICATION	number of samples taken
WITHOUT_CLASSIFICATION	same as above
WITHOUT_CLASSIFICATION	not same
WITHOUT_CLASSIFICATION	this is needed in order to set up the cookie policy
WITHOUT_CLASSIFICATION	this should be ignored as there is no value
WITHOUT_CLASSIFICATION	starts empty
WITHOUT_CLASSIFICATION	should not be stored
WITHOUT_CLASSIFICATION	test session cookie is returned
WITHOUT_CLASSIFICATION	test old cookie is not returned
WITHOUT_CLASSIFICATION	test multi-cookie header handling
WITHOUT_CLASSIFICATION	test duplicate cookie handling
WITHOUT_CLASSIFICATION	assumes some kind of list is used
WITHOUT_CLASSIFICATION	test cookie matching
WITHOUT_CLASSIFICATION	defaults to caller url
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	assertequals("/"man.get(0).getpath());
WITHOUT_CLASSIFICATION	cookies are ignored
WITHOUT_CLASSIFICATION	cookies again ignored
WITHOUT_CLASSIFICATION	show that maxlong now saved as 0
WITHOUT_CLASSIFICATION	shutdown the http server
WITHOUT_CLASSIFICATION	wait up to 1 second
WITHOUT_CLASSIFICATION	already failed
WITHOUT_CLASSIFICATION	succeeded
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http get
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http get with a pause in the middle of transmitting the header
WITHOUT_CLASSIFICATION	write the start of the headers and then sleep so that the mirror thread will have to block to wait for more data to appear
WITHOUT_CLASSIFICATION	write the rest of the headers
WITHOUT_CLASSIFICATION	the content sent
WITHOUT_CLASSIFICATION	the content sent
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http post
WITHOUT_CLASSIFICATION	construct body
WITHOUT_CLASSIFICATION	construct body
WITHOUT_CLASSIFICATION	write the headers and body
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http post with a pause after transmitting the headers
WITHOUT_CLASSIFICATION	write the headers and then sleep
WITHOUT_CLASSIFICATION	write the body
WITHOUT_CLASSIFICATION	write the body
WITHOUT_CLASSIFICATION	check that the request and response matches
WITHOUT_CLASSIFICATION	$sid$
WITHOUT_CLASSIFICATION	arguments args = sampler.getarguments();
WITHOUT_CLASSIFICATION	no entry; check it is still present
WITHOUT_CLASSIFICATION	test https works too
WITHOUT_CLASSIFICATION	these are some of the special characters
WITHOUT_CLASSIFICATION	can't instantiate
WITHOUT_CLASSIFICATION	list of parsers to test. should probably be derived automatically
WITHOUT_CLASSIFICATION	dummy as the file has no entries
WITHOUT_CLASSIFICATION	dummy as the file has no entries
WITHOUT_CLASSIFICATION	relative filenames
WITHOUT_CLASSIFICATION	identify subtests
WITHOUT_CLASSIFICATION	this is ok
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a http get request with encoding not known
WITHOUT_CLASSIFICATION	private testdata(string f string b string s) { this(f b s null); }
WITHOUT_CLASSIFICATION	does the order matter?
WITHOUT_CLASSIFICATION	convert both to sets
WITHOUT_CLASSIFICATION	get expected results as a list
WITHOUT_CLASSIFICATION	a http get request
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	a http post request
WITHOUT_CLASSIFICATION	a http get request with encoding not known
WITHOUT_CLASSIFICATION	a http post request with content-type text/plain
WITHOUT_CLASSIFICATION	a http get request with utf-8 encoding
WITHOUT_CLASSIFICATION	when the encoding is not known the argument will get the encoded value and the "encode?" set to false
WITHOUT_CLASSIFICATION	when the encoding is not known the argument will get the encoded value and the "encode?" set to false
WITHOUT_CLASSIFICATION	when the encoding is not known the argument will get the encoded value and the "encode?" set to false
WITHOUT_CLASSIFICATION	a http post request with utf-8 encoding
WITHOUT_CLASSIFICATION	a http post request with unknown encoding
WITHOUT_CLASSIFICATION	a http post request with utf-8 encoding
WITHOUT_CLASSIFICATION	a http get request with iso-8859-1 encoding
WITHOUT_CLASSIFICATION	a http get request with utf-8 encoding
WITHOUT_CLASSIFICATION	a http post request with encoding not known
WITHOUT_CLASSIFICATION	check arguments we should have one argument with the value equal to the post body
WITHOUT_CLASSIFICATION	a http post request with content-type text/plain; charset=utf-8 the encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	a http post request with content-type text/plain; charset=utf-8 the encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	use null for url to simulate that httprequesthdr do not know the encoding for the page. specify contentencoding so the request is "sent" using that encoding
WITHOUT_CLASSIFICATION	use null for url to simulate that httprequesthdr do not know the encoding for the page. specify contentencoding so the request is "sent" using that encoding
WITHOUT_CLASSIFICATION	use null for url and contentencoding to simulate that httprequesthdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	use null for url and contentencoding to simulate that httprequesthdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	a http post request with iso-8859-1 encoding
WITHOUT_CLASSIFICATION	a http post request multipart/form-data simple values
WITHOUT_CLASSIFICATION	a http post request multipart/form-data simple values
WITHOUT_CLASSIFICATION	no space after
WITHOUT_CLASSIFICATION	spaces after
WITHOUT_CLASSIFICATION	assume there's at least one file
WITHOUT_CLASSIFICATION	title multipart
WITHOUT_CLASSIFICATION	description multipart
WITHOUT_CLASSIFICATION	file upload multipart
WITHOUT_CLASSIFICATION	most browsers use iso-8859-1 as default encoding even if spec says utf-8
WITHOUT_CLASSIFICATION	most browsers use iso-8859-1 as default encoding even if spec says utf-8
WITHOUT_CLASSIFICATION	no filters
WITHOUT_CLASSIFICATION	empty filters
WITHOUT_CLASSIFICATION	non empty filters
WITHOUT_CLASSIFICATION	simple inclusion and exclusion filter
WITHOUT_CLASSIFICATION	allow all but images
WITHOUT_CLASSIFICATION	throw new unsupportedoperationexception("for test purposes only");
WITHOUT_CLASSIFICATION	this must be the original (java) http sampler
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a http post request multipart/form-data with value that will change if they are url encoded values are similar to __viewstate parameter that .net uses
WITHOUT_CLASSIFICATION	most browsers use iso-8859-1 as default encoding even if spec says utf-8 todo - charset?
WITHOUT_CLASSIFICATION	create the test file content
WITHOUT_CLASSIFICATION	create a temporary file to make sure we always have a file to give to the postwriter whereever we are or whatever the current path is.
WITHOUT_CLASSIFICATION	delete temporay file
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending utf-8 data with iso-8859-1 content encoding
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending a httpsampler with form parameters and only the filename of a file.
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending file content as the only content of the post body
WITHOUT_CLASSIFICATION	check using default encoding
WITHOUT_CLASSIFICATION	check using a different encoding
WITHOUT_CLASSIFICATION	file content is sent as binary so the content encoding should not change the file data
WITHOUT_CLASSIFICATION	if we have both file as body and form data then only form data will be sent
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending only a file multipart.
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending only a formdata as a multipart/form-data request.
WITHOUT_CLASSIFICATION	tell sampler to do multipart even if we have no files to upload
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1 with values that need to be urlencoded
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1 with values that need to be urlencoded
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending only a formdata as urlencoded data
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that needs to be urlencoded
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	delete temporay file
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	check that other encoding is not the current encoding todo - charset?
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that would have been urlencoded if it was not sent as multipart
WITHOUT_CLASSIFICATION	test sending parameters which are urlencoded beforehand the values must be url encoded with utf-8 encoding because that is what the httpargument assumes %c3%85 in utf-8 is the same as %c5 in iso-8859-1 which is the same as &aring;
WITHOUT_CLASSIFICATION	httpsampler uses iso-8859-1 as default encoding httpsampler uses iso-8859-1 as default encoding
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.setheaders(urlconnection httpsampler)'
WITHOUT_CLASSIFICATION	create the multiparts
WITHOUT_CLASSIFICATION	join the two multiparts
WITHOUT_CLASSIFICATION	the encoding used for http headers and control information
WITHOUT_CLASSIFICATION	replace all backslash with double backslash
WITHOUT_CLASSIFICATION	different from testhttpmirrorthread port and standard mirror server
WITHOUT_CLASSIFICATION	additional ctor for processing tests which use int parameters
WITHOUT_CLASSIFICATION	this is used to emulate @before class and @after class
WITHOUT_CLASSIFICATION	add parameterised tests. for simplicity we assune each has cases 0-10
WITHOUT_CLASSIFICATION	shutdown mirror server
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that will change when urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values similar to __viewstate parameter that .net uses
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values similar to __viewstate parameter that .net uses
WITHOUT_CLASSIFICATION	replace the variables in the sampler
WITHOUT_CLASSIFICATION	replace the variables in the sampler
WITHOUT_CLASSIFICATION	ensure only values are used
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that would have been urlencoded if it was not sent as multipart
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that will change when urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values similar to __viewstate parameter that .net uses
WITHOUT_CLASSIFICATION	replace the variables in the sampler
WITHOUT_CLASSIFICATION	test sending data as utf-8 where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	test sending data as utf-8 where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	replace the variables in the sampler
WITHOUT_CLASSIFICATION	ensure only values are used
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded and where we tell the sampler to urlencode the parameter values
WITHOUT_CLASSIFICATION	test sending data with iso-8859-1 encoding
WITHOUT_CLASSIFICATION	test sending data with iso-8859-1 encoding
WITHOUT_CLASSIFICATION	test sending data with utf-8 encoding
WITHOUT_CLASSIFICATION	test sending data with utf-8 encoding
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that changes when urlencoded
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check the request
WITHOUT_CLASSIFICATION	check request headers
WITHOUT_CLASSIFICATION	check post body from the result query string
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	check response headers
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	test sending data as utf-8 with + as part of the value where the value is set in sampler as not urluencoded but the isalwaysencoded flag of the argument is set to false. this mimics the httpconstants.addnonencodedargument which the proxy server calls in some cases
WITHOUT_CLASSIFICATION	test sending simple http get test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending simple http get test sending data with default encoding
WITHOUT_CLASSIFICATION	check request headers
WITHOUT_CLASSIFICATION	check post body from the result query string
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	check response headers
WITHOUT_CLASSIFICATION	check response headers
WITHOUT_CLASSIFICATION	check post body which was sent to the mirror server and sent back by the mirror server
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	check method
WITHOUT_CLASSIFICATION	check method
WITHOUT_CLASSIFICATION	check that the query string is empty
WITHOUT_CLASSIFICATION	no body should have been sent
WITHOUT_CLASSIFICATION	no body should have been sent
WITHOUT_CLASSIFICATION	check the request uri sent to the mirror server and sent back by the mirror server
WITHOUT_CLASSIFICATION	we should have a query string part
WITHOUT_CLASSIFICATION	we should not have a query string part
WITHOUT_CLASSIFICATION	check path
WITHOUT_CLASSIFICATION	check query
WITHOUT_CLASSIFICATION	is it only the parameter values which are encoded in the specified content encoding the rest of the query is encoded in utf-8 therefore we compare the whole query using utf-8
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us we assume the headers are in iso_8859_1 and the body can be in any content encoding.
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us we assume the headers are in iso_8859_1 and the body can be in any content encoding. therefore we get the data sent in iso_8859_1 to be able to determine the end of the header part and then we just construct a byte array to hold the body part not taking encoding of the body into consideration because it can contain file data which is sent as raw byte data
WITHOUT_CLASSIFICATION	no divider was found
WITHOUT_CLASSIFICATION	set the form data
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	join the two multiparts
WITHOUT_CLASSIFICATION	the encoding used for http headers and control information
WITHOUT_CLASSIFICATION	replace all backslash with double backslash
WITHOUT_CLASSIFICATION	the value is in the first group group 0 is the whole match
WITHOUT_CLASSIFICATION	the headers and body are divided by a blank line
WITHOUT_CLASSIFICATION	header may contain ;charset= regexp extracts it so computed boundary is wrong
WITHOUT_CLASSIFICATION	string domain = "localhost";
WITHOUT_CLASSIFICATION	set the file upload data
WITHOUT_CLASSIFICATION	parse arguments singly
WITHOUT_CLASSIFICATION	parse arguments all at once
WITHOUT_CLASSIFICATION	test cases for making url and exercise method addargument(string namestring valuestring metadata)
WITHOUT_CLASSIFICATION	test cases for making url and exercise method parsearguments(string querystring)
WITHOUT_CLASSIFICATION	ignore empty file specs
WITHOUT_CLASSIFICATION	ignore trailing empty spec
WITHOUT_CLASSIFICATION	ignore leading empty spec
WITHOUT_CLASSIFICATION	show that can bypass encoding
WITHOUT_CLASSIFICATION	the sample does not use a valid encoding
WITHOUT_CLASSIFICATION	by default name/value are encoded on fetch
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	try a real encoded argument
WITHOUT_CLASSIFICATION	trailing file
WITHOUT_CLASSIFICATION	trailing directory
WITHOUT_CLASSIFICATION	file exclf inclf exclp inclp
WITHOUT_CLASSIFICATION	odd chars
WITHOUT_CLASSIFICATION	invalid
WITHOUT_CLASSIFICATION	'12345'
WITHOUT_CLASSIFICATION	check illegal array lengths
WITHOUT_CLASSIFICATION	current default language properties file
WITHOUT_CLASSIFICATION	messages.properties
WITHOUT_CLASSIFICATION	read resource into resourcebundle and store in list
WITHOUT_CLASSIFICATION	read resource file saving the keys
WITHOUT_CLASSIFICATION	only relevant for messages
WITHOUT_CLASSIFICATION	store the key
WITHOUT_CLASSIFICATION	helper method to construct resource name
WITHOUT_CLASSIFICATION	check that there aren't any extra entries
WITHOUT_CLASSIFICATION	perform the checks on the resources
WITHOUT_CLASSIFICATION	holds keys from file
WITHOUT_CLASSIFICATION	look for duplicate keys in the file
WITHOUT_CLASSIFICATION	must be the default resource file
WITHOUT_CLASSIFICATION	check all the keys are in the default props file
WITHOUT_CLASSIFICATION	also check key is in default
WITHOUT_CLASSIFICATION	better error than npe
WITHOUT_CLASSIFICATION	fix up windows paths
WITHOUT_CLASSIFICATION	use a suite to ensure that the default is done first
WITHOUT_CLASSIFICATION	load the default resource
WITHOUT_CLASSIFICATION	don't try to check the default language
WITHOUT_CLASSIFICATION	e.g. "/org/apache/jmeter/resources/messages"
WITHOUT_CLASSIFICATION	check that calls to getresstring use a valid property key name
WITHOUT_CLASSIFICATION	leading comment
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	\u00e7 = latin small letter c with cedilla \u00e9 = latin small letter e with acute
WITHOUT_CLASSIFICATION	change the original back again
WITHOUT_CLASSIFICATION	a and b should be equal
WITHOUT_CLASSIFICATION	a and b should not be equal
WITHOUT_CLASSIFICATION	needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	re-increment
WITHOUT_CLASSIFICATION	re-increment
WITHOUT_CLASSIFICATION	n.b. this needs to divert the log for sampleresult
WITHOUT_CLASSIFICATION	temp test case for exploring settings
WITHOUT_CLASSIFICATION	don't use nanothread
WITHOUT_CLASSIFICATION	this test tries to emulate a http sample with two subsamples representing images that are downloaded for the page representing the first sample.
WITHOUT_CLASSIFICATION	sample that will get two sub results simulates a web page load
WITHOUT_CLASSIFICATION	sample with no sub results simulates an image download
WITHOUT_CLASSIFICATION	sample with no sub results simulates an image download
WITHOUT_CLASSIFICATION	now add the subsamples to the sample
WITHOUT_CLASSIFICATION	timemillis has granularity of 10-20
WITHOUT_CLASSIFICATION	check that calculator gets the correct statistics from the sample
WITHOUT_CLASSIFICATION	allow for some margin of error check that the throughput uses the time elapsed for the sub results
WITHOUT_CLASSIFICATION	check default
WITHOUT_CLASSIFICATION	check null changes nothing
WITHOUT_CLASSIFICATION	check no charset
WITHOUT_CLASSIFICATION	check unquoted charset
WITHOUT_CLASSIFICATION	check quoted charset
WITHOUT_CLASSIFICATION	this is what jorphanutils.split() does
WITHOUT_CLASSIFICATION	these tests should agree with those for jorphanutils.split() as far as possible
WITHOUT_CLASSIFICATION	\u00e7 = latin small letter c with cedilla \u00e9 = latin small letter e with acute
WITHOUT_CLASSIFICATION	blank line
WITHOUT_CLASSIFICATION	empty strings at eof
WITHOUT_CLASSIFICATION	testloadandsave test files
WITHOUT_CLASSIFICATION	graphaccumvisualizer obsolete bsfsamplergui now a testbean graphaccumvisualizer obsolete bsfsamplergui now a testbean graphaccumvisualizer now obsolete ctt changed to use intprop for mode
WITHOUT_CLASSIFICATION	test files for testload; output will generally be different in size and line count
WITHOUT_CLASSIFICATION	did a test fail?
WITHOUT_CLASSIFICATION	make sure all the data is flushed out
WITHOUT_CLASSIFICATION	test non-empty parameters
WITHOUT_CLASSIFICATION	unrecognised files are ignored
WITHOUT_CLASSIFICATION	does not open file
WITHOUT_CLASSIFICATION	does not open file
WITHOUT_CLASSIFICATION	re-read 1st line
WITHOUT_CLASSIFICATION	re-read 1st line
WITHOUT_CLASSIFICATION	should not be able to write to it
WITHOUT_CLASSIFICATION	does not remove the entry
WITHOUT_CLASSIFICATION	removes all entries
WITHOUT_CLASSIFICATION	test code intentional
WITHOUT_CLASSIFICATION	check "undefined" does not become a "reserved word"
WITHOUT_CLASSIFICATION	errordetected()
WITHOUT_CLASSIFICATION	errordetected()
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	check that all keys in the bundle are also in the default bundle
WITHOUT_CLASSIFICATION	will throw missingresourceexception if key is not there.
WITHOUT_CLASSIFICATION	check that all necessary keys are there
WITHOUT_CLASSIFICATION	displayname is always mandatory
WITHOUT_CLASSIFICATION	skip the rest of this test for alpha/experimental beans
WITHOUT_CLASSIFICATION	check for property- and group-related texts
WITHOUT_CLASSIFICATION	skip non-editable properties that is ignore hidden read-only and write-only properties
WITHOUT_CLASSIFICATION	ignore testelement properties which don't have an explicit editor
WITHOUT_CLASSIFICATION	done -- we're working with an editable property.
WITHOUT_CLASSIFICATION	throw new error("no default bundle for class " + classname);
WITHOUT_CLASSIFICATION	string samplelog = "c/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl";
WITHOUT_CLASSIFICATION	string samplelog = "c/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl";
WITHOUT_CLASSIFICATION	tweak.
WITHOUT_CLASSIFICATION	tweak.
WITHOUT_CLASSIFICATION	test needs to run in this package in order to give access to abstracttestelement.addproperty()
WITHOUT_CLASSIFICATION	this test should work whether or not all nulls are equal
WITHOUT_CLASSIFICATION	do not check hashcodes; unequal objects may have equal hashcodes
WITHOUT_CLASSIFICATION	give access to the method for test code
WITHOUT_CLASSIFICATION	give access to the method for test code
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	p.add(makebuttonpanel() borderlayout.south);
WITHOUT_CLASSIFICATION	assume this thread only 1 per second should delay for 1 second 1 per milli-second should delay for 1 milli-second
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	10 per second should delay for 1 second 10 per milli-second should delay for 1 milli-second
WITHOUT_CLASSIFICATION	1000 per milli-second should delay for 1 milli-second
WITHOUT_CLASSIFICATION	not sure we can test anything else here
WITHOUT_CLASSIFICATION	use old style
WITHOUT_CLASSIFICATION	probably needed to avoid npes with guis
WITHOUT_CLASSIFICATION	tree1.add("a3");
WITHOUT_CLASSIFICATION	no duplicates when adding
WITHOUT_CLASSIFICATION	add duplicates
WITHOUT_CLASSIFICATION	as above but with aggregate sample instead
WITHOUT_CLASSIFICATION	add duplicates as per bug
WITHOUT_CLASSIFICATION	assertequals("t2"f2.invoke());
WITHOUT_CLASSIFICATION	assertequals("1aaa."f1a.invoke());
WITHOUT_CLASSIFICATION	can't call invoke using super class
WITHOUT_CLASSIFICATION	ok (currently) to invoke using sub-class
WITHOUT_CLASSIFICATION	args will be provided later
WITHOUT_CLASSIFICATION	should use original object
WITHOUT_CLASSIFICATION	check how class definition behaves
WITHOUT_CLASSIFICATION	logprop("java.class.path");
WITHOUT_CLASSIFICATION	don't call isheadless() here as it has a side effect. --
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	send different event wether we are merging a test plan into another test plan or loading a testplan from scratch
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	private static final string rootdn = "rootdn"; private static final string test = "test"; private static string testvalue="nnnn";
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	test ignore trailing split characters ignore adjacent delimiters
WITHOUT_CLASSIFICATION	tests for split(stringstringboolean)
WITHOUT_CLASSIFICATION	test leading split characters
WITHOUT_CLASSIFICATION	test leading split characters
WITHOUT_CLASSIFICATION	empty string
WITHOUT_CLASSIFICATION	tests for split(stringstringstring)
WITHOUT_CLASSIFICATION	empty default
WITHOUT_CLASSIFICATION	empty delimiter
WITHOUT_CLASSIFICATION	multiple delimiters
WITHOUT_CLASSIFICATION	delimiter same as splitter
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	node node = tidy.parsedom(new bytearrayinputstream(response.getresponsedata()) null);
WITHOUT_CLASSIFICATION	values for test_field n.b. we cannot change the text value as it is in test plans $non-nls-1$
WITHOUT_CLASSIFICATION	in case parse fails $non-nls-1$ in case parse fails $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ make it easier to enter a tab $non-nls-1$
WITHOUT_CLASSIFICATION	the loop controller panel can be displayed standalone or inside another panel. for standalone we want to display the title name etc. (everything). however if we want to display it within another panel we just display the loop count fields (not the title and name).
WITHOUT_CLASSIFICATION	$non-nls-1$ don't set empty to keep regexp regexpfield.settext(""); $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	this 'other value' regex is deliberately weak even accepting an empty string to be useful when reporting malformed data. $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	condition label $non-nls-1$
WITHOUT_CLASSIFICATION	if the -j or -l flag is set to last or last.log|last.jtl then the last loaded file name is used to generate the log file name by removing .jmx and replacing it with .log|.jtl
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	$non-nls-1$ i.e. boolean savexxx() $non-nls-1$ i.e. void setxxx(boolean) $non-nls-1$ e.g. save_xxx property
WITHOUT_CLASSIFICATION	keep the '\' unless it is one of the escapable chars '$' '' or '\' n.b. this method is used to parse function parameters so must treat '' as special
WITHOUT_CLASSIFICATION	en fr de $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ ja zh_cn zh_tw
WITHOUT_CLASSIFICATION	@guardedby("lock") keep track of how many instances are active
WITHOUT_CLASSIFICATION	sampleoccurred is called from multiple threads; not safe to write from multiple threads. also decouples the file io from sample generation
WITHOUT_CLASSIFICATION	file name sequence number @guardedby("lock")
WITHOUT_CLASSIFICATION	instance fields are constructed by the client when the instance is create in the test plan and the field values are then transferred to the server copy by rmi serialisation/deserialisation
WITHOUT_CLASSIFICATION	process special keys $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	if there are some recent files we must make the separator visisble the separator is the last item in the list
WITHOUT_CLASSIFICATION	put the gui object back to the way it was.
WITHOUT_CLASSIFICATION	make sure decoding follows input file
WITHOUT_CLASSIFICATION	save (selection) as save testplan as save
WITHOUT_CLASSIFICATION	y y y y sp m m / d d / h h m m s s end
WITHOUT_CLASSIFICATION	ok todo ??
WITHOUT_CLASSIFICATION	support original property name $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	allow for windows / chars in filename $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	updatemainmenu(((jmeterguicomponent) getcurrentnode().getuserobject()).createpopupmenu());
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	a http post request multipart/form-data simple values with \r\n as end of line which is according to spec and with more headers in each multipart
WITHOUT_CLASSIFICATION	two jars same version two jars same version
WITHOUT_CLASSIFICATION	test plan with onlyoncecontroller inside inner loop set up the test plan
WITHOUT_CLASSIFICATION	the following used to be jacks_password but the arguments class uses hashmap for which the order is not defined.
WITHOUT_CLASSIFICATION	myrow = f.nextrow(); assertequals(3myrow); assertequals(0f.getnextrow());
WITHOUT_CLASSIFICATION	is this a work in progress ? no not a work in progress
WITHOUT_CLASSIFICATION	assumes some kind of list is use if not using a list that retains the order then the asserts would need to change
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that will change when urlencoded and where we tell the sampler to urlencode the parameter value
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	pick up headers if failed to execute the request httpmethod can be null if method is unexpected
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	resource keys cannot contain spaces and are forced to lower case $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	nulls cannot be written using prettyprintwriter - they cause an npe $non-nls-1$
WITHOUT_CLASSIFICATION	default is 1 default is 0
WITHOUT_CLASSIFICATION	n.b. jvms other than sun may return different instances each time so we cache the value here (and avoid having to fetch it every time)
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	+ jmx attributes - do not change $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ - jmx
WITHOUT_CLASSIFICATION	note this is only used to implement testiterationlistener#testiterationstart since this is a frequent event it makes sense to create the list once rather than scanning each time the memory used will be released when the thread finishes
WITHOUT_CLASSIFICATION	we only check the length of the result. comparing the actual result (out.tobytearray==original) will usually fail because the order of the properties within each test element may change. comparing the lengths should be enough to detect most problem cases
WITHOUT_CLASSIFICATION	assume this thread only 1 per second initialise
WITHOUT_CLASSIFICATION	test ignore trailing split characters ignore adjacent delimiters
WITHOUT_CLASSIFICATION	write a ok reponse to browser to engage ssl exchange $non-nls-1$
WITHOUT_CLASSIFICATION	we use the page encoding where the form resides as the default encoding for the form
WITHOUT_CLASSIFICATION	+ action names $non-nls-1$
WITHOUT_CLASSIFICATION	set up list of potential targets and enable listener
WITHOUT_CLASSIFICATION	.equals caused npe
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	record headers size to allow httpsampleresult.getbytes() with different options $non-nls-1$ $non-nls-2$ add 2 for a '\r\n' at end of headers (before data)
WITHOUT_CLASSIFICATION	a well-bahaved browser is supposed to send 'connection close' with the last request to an http server. instead most browsers leave it to the server to close the connection after their timeout period. leave it to the jmeter user to decide.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	one space for blank header $non-nls-1$ one space for blank header $non-nls-1$
WITHOUT_CLASSIFICATION	a well-behaved browser is supposed to send 'connection close' with the last request to an http server. instead most browsers leave it to the server to close the connection after their timeout period. leave it to the jmeter user to decide.
WITHOUT_CLASSIFICATION	process apache httpclient parameters file $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	in a post request which is not multipart we only support parameters no file upload is allowed
WITHOUT_CLASSIFICATION	embedded urls must match this re (if provided) $non-nls-1$
WITHOUT_CLASSIFICATION	mark walsh 2002-08-03 modified to also parse a parameter name value string where string contains only the parameter name and no equal sign.
WITHOUT_CLASSIFICATION	check if the header manager had a content type header this allows the user to specify his own content-type for a put request
WITHOUT_CLASSIFICATION	if the multipart is repeatable we can send it first to our own stream without the actual file content so we can return it
WITHOUT_CLASSIFICATION	headermanager was set so let's set the connection to use it.
WITHOUT_CLASSIFICATION	we call parse with 1 to get only one. this also means if we change the implementation to use 2 it would use every other entry and so on. not that it is really useful but a person could use it that way if they have a huge gigabyte log file and they only want to use a quarter of the entries.
WITHOUT_CLASSIFICATION	the document should only have one service node if it doesn't it may not work!
WITHOUT_CLASSIFICATION	new wsdlhelper("httplocalhost/wstest/wstest.asmx?wsdl"); new wsdlhelper("httplocalhost/axiswsdl.xml"); new wsdlhelper("httplocalhost8080/wsmyupper.wsdl"); new wsdlhelper("httplocalhost8080/test.wsdl");
WITHOUT_CLASSIFICATION	read one line at a time using bufferedreader
WITHOUT_CLASSIFICATION	there's little point saving the manager between invocations as we need to reset most of the beans anyway
WITHOUT_CLASSIFICATION	/ only do the calculation if it is needed
WITHOUT_CLASSIFICATION	a callablestatement can return more than 1 resultsets plus a number of update counts.
WITHOUT_CLASSIFICATION	++ do not change these strings; they are used in jmx files to record the button settings $non-nls-1$
WITHOUT_CLASSIFICATION	timeouts not active how much left
WITHOUT_CLASSIFICATION	needs to be accessible from test code only contains ldapargument entries
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the default is false so we can remove the property to simplify jmx files this also allows httpdefaults to work for this checkbox
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	++ for testbean implementations only passed to file or script
WITHOUT_CLASSIFICATION	put a warning if tika-app.jar missing (or some dependencies in only tika-core|parsers packages are using) $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	resource keys cannot contain spaces and are forced to lower case $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	can occur at run-time could be caused by the bsh exceptions evalerror parseexception or targeterror
WITHOUT_CLASSIFICATION	errorlogging and successonlylogging are mutually exclusive $non-nls-1$
WITHOUT_CLASSIFICATION	a testbean is a java bean. just define some properties and they will automagically show up in the gui. a string property
WITHOUT_CLASSIFICATION	only try to format if there is a number
WITHOUT_CLASSIFICATION	requires java 7 $non-nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$ don't match the empty category
WITHOUT_CLASSIFICATION	if a table cell is being edited we should accept the current value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	read the header part we will be looking for a content-length header so we know how much we should read. we assume headers are in iso_8859_1 if we do not find such a header we will just have to read until we have to block to read more until we support chunked transfer
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	request validation $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ no point trying these
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx file attributes $non-nls-1$
WITHOUT_CLASSIFICATION	this is not the result of a redirect so break the chain
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	+ jmx attributes - do not change the values $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	did sample succeed?
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	requires javamail 1.4.2+
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	no need to log normally as we set the status $non-nls-1$
WITHOUT_CLASSIFICATION	no need to log normally as we set the status $non-nls-1$
WITHOUT_CLASSIFICATION	not been set by any child samples
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	throws me
WITHOUT_CLASSIFICATION	throws me
WITHOUT_CLASSIFICATION	tfmailfrom.setenabled(false); tfmailto.setenabled(false); tfmailtocc.setenabled(false); tfmailtobcc.setenabled(false); tfsubject.setenabled(false);
WITHOUT_CLASSIFICATION	++jmx attribute names - do not change the values! these were moved from smtpsampler which is why the prefix is still smtsampler $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ --jmx attribute names
WITHOUT_CLASSIFICATION	for completeness
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ default is not in range of a byte
WITHOUT_CLASSIFICATION	programming error bail out.
WITHOUT_CLASSIFICATION	if we are disabling the edit-->remove menu item and the edit-->add menu item is disabled then we also need to disable the edit menu. the java look and feel guidelines say to disable a menu if all menu items are disabled.
WITHOUT_CLASSIFICATION	set default save menu item to disabled since the default node that is selected is root which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	we add the entry
WITHOUT_CLASSIFICATION	we should make this configurable eventually
WITHOUT_CLASSIFICATION	we clean up the resultcollector to make sure there's no slow leaks
WITHOUT_CLASSIFICATION	just like the aggregate listener we use the sample label to represent a row. in this case we use it as a key.
WITHOUT_CLASSIFICATION	check that optional args work woth long options
WITHOUT_CLASSIFICATION	separate argument
WITHOUT_CLASSIFICATION	assume default charset is ok here <apache-bsf.version>2.4.0</apache-bsf.version>
WITHOUT_CLASSIFICATION	used to be 'dábale' but caused trouble on gump. reasons unknown.
WITHOUT_CLASSIFICATION	this would be done by the run command
WITHOUT_CLASSIFICATION	result.setresponsedata - not set
WITHOUT_CLASSIFICATION	expected results established using the dda algorithm (see httpwww.siggraph.org/education/materials/hypergraph/scanline/outprims/drawline.htm) 0/1 vs. 1/1 -> 0 is closer to 33.33 0/2 vs. 1/2 -> 50.0 is closer to 33.33 1/3 vs. 2/3 -> 33.33 is closer to 33.33 1/4 vs. 2/4 -> 25.0 is closer to 33.33 1/5 vs. 2/5 -> 40.0 is closer to 33.33 2/6 vs. 3/6 -> 33.33 is closer to 33.33
WITHOUT_CLASSIFICATION	genericcontroller controller = new genericcontroller(); genericcontroller sub_1 = new genericcontroller(); sub_1.addtestelement(new ifcontroller("10<100")); sub_1.addtestelement(new ifcontroller("true==false")); controller.addtestelement(sub_1); controller.addtestelement(new ifcontroller("false==false")); ifcontroller sub_2 = new ifcontroller(); sub_2.setcondition( "10<10000"); genericcontroller sub_3 = new genericcontroller(); sub_2.addtestelement(new ifcontroller( " \"a\".equals(\"a\")" ) ); sub_3.addtestelement(new ifcontroller("2>100")); sub_3.addtestelement(new ifcontroller("false==true")); sub_2.addtestelement(sub_3); sub_2.addtestelement(new ifcontroller("2==3")); controller.addtestelement(sub_2);
WITHOUT_CLASSIFICATION	get next sample and its name
WITHOUT_CLASSIFICATION	match by name
WITHOUT_CLASSIFICATION	match by name
WITHOUT_CLASSIFICATION	simple test with single selection controller generic controller + sampler "before" + switch controller + + sampler "zero" + + sampler "one" + + sampler "two" + + sampler "three" + sampler "after"
WITHOUT_CLASSIFICATION	generic controller - before - while controller ${var} - - one - - two - - simple controller - - - three - - - four - after
WITHOUT_CLASSIFICATION	onlyonce samples
WITHOUT_CLASSIFICATION	onlyonce samples
WITHOUT_CLASSIFICATION	outer sample
WITHOUT_CLASSIFICATION	sample in inner loop
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	onlyonce inside inner loop
WITHOUT_CLASSIFICATION	test to show current problem with interleavecontroller i am not sure if the expected order of the samples below are correct because i am not sure if it is properly defined how the interleavecontroller and onlyoncecontroller should function.
WITHOUT_CLASSIFICATION	n.b. backslashes are removed before dollar comma and backslash
WITHOUT_CLASSIFICATION	log.debug("domain property = " + element.getproperty("domain"));
WITHOUT_CLASSIFICATION	check old values don't hang around fewer matches
WITHOUT_CLASSIFICATION	same as parent
WITHOUT_CLASSIFICATION	create the csvread function and set its parameters.
WITHOUT_CLASSIFICATION	check init file functioning
WITHOUT_CLASSIFICATION	restarts
WITHOUT_CLASSIFICATION	col 1 line 1 a
WITHOUT_CLASSIFICATION	col2 line 1 b
WITHOUT_CLASSIFICATION	check blank lines are treated as eof
WITHOUT_CLASSIFICATION	myrow = f.nextrow(); assertequals(0myrow); assertequals(1f.getnextrow());
WITHOUT_CLASSIFICATION	use different xpath for both threads
WITHOUT_CLASSIFICATION	wrap-round check
WITHOUT_CLASSIFICATION	perform a sum and check the results
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	template match number all separator
WITHOUT_CLASSIFICATION	extract titles from component_reference.xml
WITHOUT_CLASSIFICATION	test gui elements - create the suite of tests
WITHOUT_CLASSIFICATION	skip report packages as implementation is incomplete skip report gui as implementation is incomplete no not a work in progress
WITHOUT_CLASSIFICATION	test testelements - create the suite
WITHOUT_CLASSIFICATION	events often have this constructor
WITHOUT_CLASSIFICATION	no luck. ignore this class
WITHOUT_CLASSIFICATION	if not running under alltests.java make sure that the properties (and log file) are set up correctly. n.b. in order for this to work correctly the junit test must be started in the bin directory and all the jmeter jars (plus any others needed at run-time) need to be on the classpath.
WITHOUT_CLASSIFICATION	display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	test new cookie is returned
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	ensure policy is picked up
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	write to the socket
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	read the response
WITHOUT_CLASSIFICATION	close the connection
WITHOUT_CLASSIFICATION	the content sent
WITHOUT_CLASSIFICATION	write the headers and then sleep
WITHOUT_CLASSIFICATION	connect to the http server and do a simple http post with utf-8 encoding of the body which caused problems when reader/writer classes were used in the httpmirrorthread
WITHOUT_CLASSIFICATION	the response includes the headers from the mirror server we want to skip those to only keep the content mirrored. look for the first crlfcrlf section
WITHOUT_CLASSIFICATION	can't instantiate
WITHOUT_CLASSIFICATION	test if can instantiate parser using property name
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments
WITHOUT_CLASSIFICATION	check arguments we should have one argument with the value equal to the post body
WITHOUT_CLASSIFICATION	use null for url and contentencoding to simulate that httprequesthdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	use null for url and contentencoding to simulate that httprequesthdr do not know the encoding for the page
WITHOUT_CLASSIFICATION	when the encoding is not known the argument will get the encoded value and the "encode?" set to false
WITHOUT_CLASSIFICATION	a http post request multipart/form-data simple values with \n as end of line which should also be handled and with more headers in each multipart
WITHOUT_CLASSIFICATION	create the test file content
WITHOUT_CLASSIFICATION	create a temporary file to make sure we always have a file to give to the postwriter whereever we are or whatever the current path is.
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.sendpostdata(urlconnection httpsampler)' this method test sending a request which contains both formdata and file content
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data with default encoding
WITHOUT_CLASSIFICATION	test sending data as iso-8859-1
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test sending data as utf-8
WITHOUT_CLASSIFICATION	test method for 'org.apache.jmeter.protocol.http.sampler.postwriter.setheaders(urlconnection httpsampler)'
WITHOUT_CLASSIFICATION	create the multiparts
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values that have been urlencoded
WITHOUT_CLASSIFICATION	test sending data as utf-8 with values similar to __viewstate parameter that .net uses with values urlencoded but the always encode set to false for the arguments this is how the http proxy server adds arguments to the sampler
WITHOUT_CLASSIFICATION	test sending data as utf-8 where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	test sending data as utf-8 where user defined variables are used to set the value for form data
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check url
WITHOUT_CLASSIFICATION	check request headers
WITHOUT_CLASSIFICATION	find the data sent to the mirror server which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	check post body which was sent to the mirror server and sent back by the mirror server
WITHOUT_CLASSIFICATION	check post body which was sent to the mirror server and sent back by the mirror server
WITHOUT_CLASSIFICATION	check method path and query sent
WITHOUT_CLASSIFICATION	cannot check the query string of the result because the mirror server replies without including query string in url
WITHOUT_CLASSIFICATION	show that can bypass encoding
WITHOUT_CLASSIFICATION	set the required variables
WITHOUT_CLASSIFICATION	test invalid byte arrays
WITHOUT_CLASSIFICATION	ensure properties files don't use special characters
WITHOUT_CLASSIFICATION	now check for invalid message format if string contains {0} and ' there may be a problem so do a format with dummy parameters and check if there is a { in the output. a bit crude but should be enough for now.
WITHOUT_CLASSIFICATION	original and clone should be equal
WITHOUT_CLASSIFICATION	change the original
WITHOUT_CLASSIFICATION	check sample increments ok
WITHOUT_CLASSIFICATION	check sample increments ok
WITHOUT_CLASSIFICATION	check sample increments ok
WITHOUT_CLASSIFICATION	check sample increments ok
WITHOUT_CLASSIFICATION	parent elapsed total should be no smaller than the sum of the individual samples. it may be greater by the timer granularity.
WITHOUT_CLASSIFICATION	test files for testloadandsave; output will generally be different in size but same number of lines
WITHOUT_CLASSIFICATION	note this test will fail if a property is added or removed to any of the components used in the test files. the way to solve this is to appropriately change the test file.
WITHOUT_CLASSIFICATION	test code intentional
WITHOUT_CLASSIFICATION	test code intentional
WITHOUT_CLASSIFICATION	test code intentional
WITHOUT_CLASSIFICATION	p.add(makemainpanel() borderlayout.center); force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	check reflexive
WITHOUT_CLASSIFICATION	this is not a requirement
WITHOUT_CLASSIFICATION	this is not a requirement
WITHOUT_CLASSIFICATION	assertequals("t1"f1.invoke());
WITHOUT_CLASSIFICATION	assertequals("1aaa."f1.invoke()); n.b. returns different result from before
WITHOUT_CLASSIFICATION	++ gui tests throw the error testargumentcreation(org.apache.jmeter.config.gui.argumentspanel$test)java.lang.noclassdeffounderror at java.lang.class.forname0(native method) at java.lang.class.forname(class.java141) at java.awt.graphicsenvironment.getlocalgraphicsenvironment(graphicsenvironment.java62) try to find out why this is
WITHOUT_CLASSIFICATION	externally callable suite() method for use by junit allows tests to be run directly under junit rather than using the startup code in the rest of the module. no parameters can be passed in so it is less flexible.
WITHOUT_CLASSIFICATION	testsuite only finds testxxx() methods and does not look for suite() methods. to provide more compatibilty with stand-alone tests where junit does look for a suite() method check for it first here.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ modal dialog box
WITHOUT_CLASSIFICATION	$non-nls-1$ return unknown action names for display error msg
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	set up some objects for the script to play with $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ previously mis-spelt as theadname $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	for omitted file names $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	desc.add("use fully qualified host name true/false (default false)"); $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	names of junit3 methods $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	leave header as is headerbuf.append(conn.getheaderfield(0).substring(0 8)); headerbuf.append(" "); headerbuf.append(conn.getresponsecode()); headerbuf.append(" "); headerbuf.append(conn.getresponsemessage()); $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	otherwise the response is scanned for these strings $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	allow access to context and variables directly $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	these names must agree case-wise with the variable and property names $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	add variables for access to context and variables $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	identifiers $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ default normal
WITHOUT_CLASSIFICATION	$non-nls-1$ test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	default normal $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	default 16 $non-nls-1$
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	change cancel label to close $non-nls-1$
WITHOUT_CLASSIFICATION	default for writing$non-nls-1$
WITHOUT_CLASSIFICATION	only encode strings if outversion = 1.0 $non-nls-1$
WITHOUT_CLASSIFICATION	element tags. must be unique. keep sorted. $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	+ jmx field names - do not change values $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	regex $non-nls-1$ template $non-nls-1$ which match $non-nls-1$ between text $non-nls-1$ default text $non-nls-1$ output variable name $non-nls-1$ input variable $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ previously mis-spelt as theadname $non-nls-1$ $non-nls-1$ (may be null) $non-nls-1$ (may be null) $non-nls-1$
WITHOUT_CLASSIFICATION	function name $non-nls-1$
WITHOUT_CLASSIFICATION	process __csvread(filenamealias) $non-nls-1$
WITHOUT_CLASSIFICATION	if argument is 'next' - go to the next line $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ we have a default
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ previously mis-spelt as theadname $non-nls-1$ $non-nls-1$ (may be null) $non-nls-1$ (may be null) $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	ensure that these are set even if no paramters are provided $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ change the classname drop down
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	don't make these static otherwise language change does not work $non-nls-1$
WITHOUT_CLASSIFICATION	notused font plaintext = new font("plain" font.plain 9); these must not be static otherwise language change does not work $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ check if it is form data $non-nls-1$ get the form field name $non-nls-1$
WITHOUT_CLASSIFICATION	check if it is a file being uploaded $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ see testelementpropertyconverter
WITHOUT_CLASSIFICATION	look for special response length header $non-nls-1$
WITHOUT_CLASSIFICATION	look for special response length header $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	look for special cookie request $non-nls-1$
WITHOUT_CLASSIFICATION	check if we have found a content-length header $non-nls-1$
WITHOUT_CLASSIFICATION	look for special sleep request $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	cookie $non-nls-1$
WITHOUT_CLASSIFICATION	list of parsers $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	obtain message formats $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	independent frame to allow it to be overlaid by the main frame $non-nls-1$
WITHOUT_CLASSIFICATION	needed by abstracttestelement. also testelementconverter and testelementpropertyconverter for handling empty comments $non-nls-1$ n.b. comments originally only applied to test plans hence the name - which can now not be easily changed
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	value to return at eof $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	add variables for access to context and variables $non-nls-1$
WITHOUT_CLASSIFICATION	default 16 $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	default 3.0f $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ default bottom $non-nls-1$
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	default 10 $non-nls-1$
WITHOUT_CLASSIFICATION	tabbed results fill table $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	set the title for the first tab $non-nls-1$ add the other tabs if not present $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	fields table $non-nls-1$ not sure needs i18n? $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ select last tab
WITHOUT_CLASSIFICATION	setup bottom tabs first raw second parsed $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	can be specified in jmeter.properties $non-nls-1$
WITHOUT_CLASSIFICATION	should header be saved with the data? $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	label count mean median 90% min max error %age $non-nls-1$ throughput $non-nls-1$ pagesize $non-nls-1$
WITHOUT_CLASSIFICATION	default 10 $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ default bottom $non-nls-1$
WITHOUT_CLASSIFICATION	default sans serif $non-nls-1$
WITHOUT_CLASSIFICATION	default 10 $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	add local system properties if the file is found $non-nls-1$
WITHOUT_CLASSIFICATION	add local jmeter properties if the file is found $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1
WITHOUT_CLASSIFICATION	$non-nls-1$;
WITHOUT_CLASSIFICATION	$non-nls-1$;
WITHOUT_CLASSIFICATION	hide window on esc $non-nls-1$
WITHOUT_CLASSIFICATION	do search on enter $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ file_merge.setaccelerator( keystroke.getkeystroke(keyevent.vk_o keyevent.ctrl_mask)); set default save menu item to disabled since the default node that is selected is root which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$non-nls-1$ set default save menu item to disabled since the default node that is selected is root which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	search menu $non-nls-1$
WITHOUT_CLASSIFICATION	no must be csv $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ (flash media manifest)
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	attributes for testelement and testelementproperty must all be unique $non-nls-1$ also used by propertyconverter classes $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	not used protected static final string tag_url = "requesturl"; $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	samplerdata attributes. must be unique. keep sorted by string value. ensure the listener documentation is updated when new attributes are added $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	n.b. originally the response code was saved with the code "rs" but retrieved with the code "rc". changed to always use "rc" but allow for "rs" when restoring values. $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	needs to be visible to test cases $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ add variables for access to context and variables
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ ensure variable has been provided
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	otherwise we use "text/xml" as the default $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	could time this res.sampleend(); if sampleend() is not called elapsed time will remain zero todo distinguish errors better $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ - all threads all threads
WITHOUT_CLASSIFICATION	$non-nls-1$ -- end of names used in jmx files
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	package access for use by test code $non-nls-1$
WITHOUT_CLASSIFICATION	set the title for the first tab $non-nls-1$ remove the other tabs if present $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-2$ $non-nls-3$ $non-nls-1$
WITHOUT_CLASSIFICATION	public final static string connection = "mongosourceelement.connection"; $non-nls-1$ public final static string source = "mongosourceelement.source"; $non-nls-1$ public final static string auto_connect_retry = "mongosourceelement.autoconnectretry"; $non-nls-1$ public final static string connections_per_host = "mongosourceelement.connectionsperhost"; $non-nls-1$ public final static string connect_timeout = "mongosourceelement.connecttimeout"; $non-nls-1$ public final static string continue_on_insert_error = "mongosourceelement.continueoninserterror"; $non-nls-1$ public final static string max_auto_connect_retry_time = "mongosourceelement.maxautoconnectretrytime"; $non-nls-1$ public final static string max_wait_time = "mongosourceelement.maxwaittime"; $non-nls-1$ public final static string socket_timeout = "mongosourceelement.sockettimeout"; $non-nls-1$ public final static string socket_keep_alive = "mongosourceelement.socketkeepalive"; $non-nls-1$ public final static string threads_allowed_to_block_multiplier = "mongosourceelement.threadsallowedtoblockforconnectionmultiplier"; $non-nls-1$ public final static string fsync = "mongosourceelement.fsync"; $non-nls-1$ public final static string safe = "mongosourceelement.safe"; $non-nls-1$ public final static string wait_for_journaling = "mongosourceelement.waitforjournaling"; $non-nls-1$ public final static string write_operation_number_of_servers = "mongosourceelement.writeoperationnumberofservers"; $non-nls-1$ public final static string write_operation_timeout = "mongosourceelement.writeoperationtimeout"; $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.http.conn.ssl.sslsocketfactory#createlayeredsocket(java.net.socket java.lang.string int boolean)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.util.accesslog.logfilter#excpattern(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) a new instance is created for each thread group and the clone() method is then called to create copies for each thread in a thread group. this means that the lock object is common to a thread group; separate thread groups have separate locks. if this is not intended the lock object could be made static. @see java.lang.object#clone()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#setsamplerresult(java.lang.object)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#getpanel()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#getlabel()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.samplerresulttab#cleardata()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.log.logtarget#processevent(org.apache.log.logevent)
WITHOUT_CLASSIFICATION	this is required so that @see org.apache.jmeter.gui.tree.jmetertreemodel.getnodesoftype() can find the clearable nodes - the userobject has to implement the interface.
WITHOUT_CLASSIFICATION	n.b. originally called clear() @see also jmeterguicomponent
WITHOUT_CLASSIFICATION	for unit tests @see testcsvsaveservice
WITHOUT_CLASSIFICATION	@see getstaticlabel
WITHOUT_CLASSIFICATION	(non-javadoc) @see javax.swing.jtabbedpane#setselectedindex(int)
WITHOUT_CLASSIFICATION	(non-javadoc) @see jodd.lagarto.emptytagvisitor#script(jodd.lagarto.tag java.lang.charsequence)
WITHOUT_CLASSIFICATION	(non-javadoc) @see jodd.lagarto.emptytagvisitor#tag(jodd.lagarto.tag)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.parser.htmlparser#isreusable()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.parser.htmlparser#isreusable()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.xml.sax.helpers.defaulthandler#error(org.xml.sax.saxparseexception)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.xml.sax.helpers.defaulthandler#fatalerror(org.xml.sax.saxparseexception)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testended()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testended(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testiterationstart(org.apache.jmeter.engine.event.loopiterationevent)
WITHOUT_CLASSIFICATION	@see mergefileproperties must be private as the file list needs special handling $non-nls-1$ mimetype is kept for backward compatibility with old test plans $non-nls-1$ file_name is kept for backward compatibility with old test plans $non-nls-1$
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.http.conn.ssl.sslsocketfactory#createsocket(org.apache.http.params.httpparams)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#setsamplerresult(java.lang.object)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.visualizers.request.requestview#getlabel()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.abstractjmeterguicomponent#cleargui()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.util.localechangelistener#localechanged(org.apache.jmeter.util.localechangeevent)
WITHOUT_CLASSIFICATION	(non-javadoc) @see java.lang.runnable#run()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#configure(org.apache.jorphan.collections.hashtree)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#runreport()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#stopreport()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#reset()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.engine.reportengine#exit()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#getlabelresource()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#createpopupmenu()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#getmenucategories()
WITHOUT_CLASSIFICATION	@see org.apache.jmeter.report.gui.action.command#getactionnames()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#getfilename()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#getpagetitle()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#issuccessful()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#pagestarted()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#pageended()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#setfilename(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#setpagetitle(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.report.writers.pagesummary#setsuccessful(boolean)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#createtestelement()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.gui.jmeterguicomponent#modifytestelement(org.apache.jmeter.testelement.testelement)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.testelement.teststatelistener#testended()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.testelement.teststatelistener#testended(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.testelement.teststatelistener#teststarted()
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.testelement.teststatelistener#teststarted(java.lang.string)
WITHOUT_CLASSIFICATION	(non-javadoc) @see org.apache.jmeter.protocol.http.sampler.httpsamplerbase#testiterationstart(org.apache.jmeter.engine.event.loopiterationevent)
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ so we can add them again in init
WITHOUT_CLASSIFICATION	independent frame to allow it to be overlaid by the main frame $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$;
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	run menu $non-nls-1$
WITHOUT_CLASSIFICATION	edit menu $non-nls-1$
WITHOUT_CLASSIFICATION	file menu $non-nls-1$
WITHOUT_CLASSIFICATION	protected fields jmetertoolbar class can be use to create another toolbar (plugin etc.) $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	reuse documentation $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	the following are used to set the result details on return from the script $non-nls-1$ $non-nls-2$ $non-nls-1$
WITHOUT_CLASSIFICATION	add samplerdata for consistency with beanshell sampler $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	add alias for original stringfromfile name (had only one underscore) $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	functions are wrapped in ${ and } $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	the headers are written using iso_8859_1 encoding $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ we only support chunked transfer encoding
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ resource name
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$$non-nls-2$$non-nls-3$ $non-nls-1$
WITHOUT_CLASSIFICATION	allow headers to override host setting $non-nls-1$ host
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	revert
WITHOUT_CLASSIFICATION	revert to previous behaviour $non-nls-1$ $non-nls-2$
WITHOUT_CLASSIFICATION	not a real sampler
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	if we still can't find it just try using all of the text
WITHOUT_CLASSIFICATION	method called by add is synchronized this is a different model from the one used by the result collector
WITHOUT_CLASSIFICATION	we are displaying an assertionresult
WITHOUT_CLASSIFICATION	creates one of the fields used to display the graph's current values. @param color the color used to draw the value. by convention this is the same color that is used to draw the graph for this value and in the choose panel. @param length the number of digits which the field should be able to display @return a text field configured to display one of the current graph values private jtextfield createinfofield(color color int length) { jtextfield field = new jtextfield(length); field.setborder(borderfactory.createemptyborder(0 0 0 0)); field.seteditable(false); field.setforeground(color); field.setbackground(getbackground()); the text field should expand horizontally but have a fixed height field.setmaximumsize(new dimension( field.getmaximumsize().width field.getpreferredsize().height)); return field; }
WITHOUT_CLASSIFICATION	allow functions etc to register for teststopped notification. only used by the function parser so far. the list is merged with the testlisteners and then cleared.
WITHOUT_CLASSIFICATION	insert the workbench node
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ look and feel prefix $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ enable/disable $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	we stay within the same parent node
WITHOUT_CLASSIFICATION	we stay within the same parent node
WITHOUT_CLASSIFICATION	get the preference for the recent files
WITHOUT_CLASSIFICATION	get the preference for the recent files
WITHOUT_CLASSIFICATION	find and set the file for this recent file command
WITHOUT_CLASSIFICATION	check if laf is a built-in one
WITHOUT_CLASSIFICATION	using index 0 is voluntary as child is removed in next step and added to new parent
WITHOUT_CLASSIFICATION	or a treenode from the same tree
WITHOUT_CLASSIFICATION	extract transfer data.
WITHOUT_CLASSIFICATION	insert a clone of the node the original one will be removed by the exportdone method the children are not cloned but moved to the cloned node working on the original node would be harder as you'll have to deal with the insertion index offset if you re-order a node inside a parent
WITHOUT_CLASSIFICATION	the following array must agree with dateformat it is used to translate the positions in the buffer to the values used by the calendar class for the field id. current format mm/dd/yyyy hhmmss 01234567890123456789 ^buffer positions
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	used by samplesaveconfigurationconverter.unmarshall()
WITHOUT_CLASSIFICATION	note that samplestarted() and samplestopped() is not made to appear in synch with sampleoccured() when replaying held samples. for now this is not critical since samplestarted() and samplestopped() is not used but it may become an issue in the future. then these events must also be stored so that replay of all events may occur and in the right order. each stored event must then be tagged with something that lets you distinguish between occured started and ended.
WITHOUT_CLASSIFICATION	allow testresultwrapper to feed back the samples this is effectively the same as saver.fromxml(inputstream) except we get to provide the dataholder don't know why there is no method for this in the xstream class
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	n.b. default charset is used deliberately here
WITHOUT_CLASSIFICATION	catch errors and rethrow as conversionexception so we get location details
WITHOUT_CLASSIFICATION	version information for test plan header this is written to jmx files by scriptwrapperconverter also to jtl files by resultcollector $non-nls-1$
WITHOUT_CLASSIFICATION	for converters to use
WITHOUT_CLASSIFICATION	get the outputwriter to use
WITHOUT_CLASSIFICATION	use deprecated method to avoid duplicating code
WITHOUT_CLASSIFICATION	get the inputreader to use
WITHOUT_CLASSIFICATION	get the inputreader to use
WITHOUT_CLASSIFICATION	normal output ---- debugging information ---- required-type org.apache.jorphan.collections.listedhashtree cause-message webservicesampler webservicesampler class org.apache.jmeter.save.scriptwrapper message webservicesampler webservicesampler line number 929 path /jmetertestplan/hashtree/hashtree/hashtree[4]/hashtree[5]/webservicesampler cause-exception com.thoughtworks.xstream.alias.cannotresolveclassexception -------------------------------
WITHOUT_CLASSIFICATION	--------------------------------------------------------------------- xml result file constants and field name constants ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	it is the sub sampler of the transaction that will be sampled
WITHOUT_CLASSIFICATION	n.b. this is only called at the start and end of a thread so there is not necessary to cache the search results thus saving memory
WITHOUT_CLASSIFICATION	if parent is ok but child failed add a message and flag the parent as failed
WITHOUT_CLASSIFICATION	private static configuration getconfiguration(assertionresult assresult) { defaultconfiguration config = new defaultconfiguration(assertion_result_tag_name "jmeter save service"); config.setattribute(failure_message assresult.getfailuremessage()); config.setattribute(error "" + assresult.iserror()); config.setattribute(failure "" + assresult.isfailure()); return config; }
WITHOUT_CLASSIFICATION	see if this works it did not let's try some other formats
WITHOUT_CLASSIFICATION	both these are needed in the list even though they set the same variable
WITHOUT_CLASSIFICATION	class to handle generating the delimited string. - adds the delimiter if not the first call - quotes any strings that require it
WITHOUT_CLASSIFICATION	<p> returns a <code>string</code> value for a character-delimited column value enclosed in the quote character if required. </p> <p> if the value contains a special character then the string value is returned enclosed in the quote character. </p> <p> any quote characters in the value are doubled up. </p> <p> if the value does not contain any special characters then the string value is returned unchanged. </p> <p> n.b. the list of special characters includes the quote character. </p> @param input the input column string may be null (without enclosing delimiters) @param specialchars special characters; second one must be the quote character @return the input string enclosed in quote characters if the value contains a special character <code>null</code> for null string input
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	read first line and forget
WITHOUT_CLASSIFICATION	obtain a value of the appropriate type for this property.
WITHOUT_CLASSIFICATION	use negative condition so missing (null) value is treated as false
WITHOUT_CLASSIFICATION	the default class convert int to integer etc
WITHOUT_CLASSIFICATION	might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	true iff we're currently processing an event triggered by the user selecting the "edit" option. used to prevent reverting the combo to non-editable during processing of secondary events.
WITHOUT_CLASSIFICATION	programming error. don't continue.
WITHOUT_CLASSIFICATION	creation of the customizer and gui initialization is delayed until the first configure call. we don't need all that just to find out the static label menu categories etc!
WITHOUT_CLASSIFICATION	<p> super-class for testelements that can be applied to main sample sub-samples or both. [assertions use a different class because they use a different value for the {@link #getscopename()} constant] </p> <p> their corresponding gui classes need to add the scopepanel to the gui using the abstractxxxgui methods <ul> <li>createscopepanel()</li> <li>savescopesettings()</li> <li>showscopesettings()</li> </ul> </p>
WITHOUT_CLASSIFICATION	testbeanhelper.prepare() is ok
WITHOUT_CLASSIFICATION	trigger end of loop condition on all parent controllers of current sampler
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	ok to call testbeanhelper.prepare()
WITHOUT_CLASSIFICATION	original (rather odd) behaviour start at the end
WITHOUT_CLASSIFICATION	property names to preload into jmeter variables
WITHOUT_CLASSIFICATION	list of active threads
WITHOUT_CLASSIFICATION	set the endtime for the thread duration is in seconds
WITHOUT_CLASSIFICATION	n.b. we don't wait for the thread to complete as that would prevent parallel tgs
WITHOUT_CLASSIFICATION	for example jarfile/jmeter/lib/ext/apachejmeter_core.jar!/org/apache/jmeter/util/jmeterversion.class or if using an ide file/workspaces/jmeter/build/core/org/apache/jmeter/util/jmeterversion.class
WITHOUT_CLASSIFICATION	for use by the server script
WITHOUT_CLASSIFICATION	override so we can intercept the stream
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	todo - charset?
WITHOUT_CLASSIFICATION	api expects null not empty array see httpdocs.oracle.com/javase/6/docs/api/javax/net/ssl/x509keymanager.html
WITHOUT_CLASSIFICATION	the copying thread won't generally detect eof
WITHOUT_CLASSIFICATION	n.b. it seems that opera needs a chain in order to accept server keys signed by the intermediate ca opera does not seem to like server keys signed by the root (self-signed) cert.
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$ $non-nls-1$
WITHOUT_CLASSIFICATION	needs to be volatile as may be referenced from multiple threads todo see if this can be made final somehow
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non_nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
WITHOUT_CLASSIFICATION	$non-nls-1$
IMPLEMENTATION	todo auto-generated constructor stub
IMPLEMENTATION	xxx - log an error? throw an exception?
IMPLEMENTATION	todo allow user to request the system or no parent
IMPLEMENTATION	xxx add exceptions
IMPLEMENTATION	todo comment field doesn't include all options yet
IMPLEMENTATION	todo comment field doesn't include all options yet
IMPLEMENTATION	to do delete the file if it is not a valid file.
IMPLEMENTATION	have to think about lazy initialization here jhm comparator = new java.text.rulebasedcollator()
IMPLEMENTATION	todo no methods yet for getclassname todo no method for newinstance using a reverse-classloader
IMPLEMENTATION	if there was any text before this add it as a fragment todo this check could be modified to go if pos>prev seems like this current version could stick empty strings into the list
IMPLEMENTATION	the displayname variable stores the value of the "display-name" element from the standard ejb descriptor. as a future enhancement to this task we may determine the name of the ejb jar file using this display-name but this has not be implemented yet.
IMPLEMENTATION	to do delete the file if it is not a valid file.
IMPLEMENTATION	todo auto-generated method stub
IMPLEMENTATION	todo auto-generated method stub
IMPLEMENTATION	this method checks the timestamp on each file listed in the <code> ejbfiles</code> and compares them to the timestamp on the <code>jarfile </code>. if the <code>jarfile</code>'s timestamp is more recent than each ejb file <code>true</code> is returned. otherwise <code>false </code> is returned. todo find a way to check the manifest-file that is found by naming convention @param ejbfiles hashtable of ejb classes (and other) files that will be added to the completed jar file @param jarfile jar file which will contain all of the ejb classes (and other) files @return boolean indicating whether or not the <code>jarfile</code> is up to date
IMPLEMENTATION	an output stream that compresses into the bzip2 format (without the file header chars) into another stream. <p>the compression requires large amounts of memory. thus you should call the {@link #close() close()} method as soon as possible to force <tt>cbzip2outputstream</tt> to release the allocated memory.</p> <p>you can shrink the amount of allocated memory and maybe raise the compression speed by choosing a lower blocksize which in turn may cause a lower compression ratio. you can avoid unnecessary memory allocation by avoiding using a blocksize which is bigger than the size of the input. </p> <p>you can compute the memory usage for compressing by the following formula</p> <pre> <code>400k + (9 blocksize)</code>. </pre> <p>to get the memory required for decompression by {@link cbzip2inputstream cbzip2inputstream} use</p> <pre> <code>65k + (5 blocksize)</code>. </pre> <table width="100%" border="1"> <colgroup> <col width="33%" /> <col width="33%" /> <col width="33%" /> </colgroup> <tr> <th colspan="3">memory usage by blocksize</th> </tr><tr> <th align="right">blocksize</th> <th align="right">compression<br>memory usage</th> <th align="right">decompression<br>memory usage</th> </tr><tr> <td align="right">100k</td> <td align="right">1300k</td> <td align="right"> 565k</td> </tr><tr> <td align="right">200k</td> <td align="right">2200k</td> <td align="right">1065k</td> </tr><tr> <td align="right">300k</td> <td align="right">3100k</td> <td align="right">1565k</td> </tr><tr> <td align="right">400k</td> <td align="right">4000k</td> <td align="right">2065k</td> </tr><tr> <td align="right">500k</td> <td align="right">4900k</td> <td align="right">2565k</td> </tr><tr> <td align="right">600k</td> <td align="right">5800k</td> <td align="right">3065k</td> </tr><tr> <td align="right">700k</td> <td align="right">6700k</td> <td align="right">3565k</td> </tr><tr> <td align="right">800k</td> <td align="right">7600k</td> <td align="right">4065k</td> </tr><tr> <td align="right">900k</td> <td align="right">8500k</td> <td align="right">4565k</td> </tr> </table> <p>for decompression <tt>cbzip2inputstream</tt> allocates less memory if the bzipped input is smaller than one block.</p> <p>instances of this class are not threadsafe.</p> <p> todo update to bzip2 1.0.1 </p>
WITHOUT_CLASSIFICATION	buildlistener stuff
WITHOUT_CLASSIFICATION	we don't expect to find this
WITHOUT_CLASSIFICATION	ignore expected
WITHOUT_CLASSIFICATION	ignore expected
WITHOUT_CLASSIFICATION	tell the build it is finished
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	keep track of what operating systems are supported here.
WITHOUT_CLASSIFICATION	father and child pattern test
WITHOUT_CLASSIFICATION	redo the test but the 2 include patterns are inverted
WITHOUT_CLASSIFICATION	add conditions and more commands as soon as the need arises
WITHOUT_CLASSIFICATION	give ourselves some time for the system call to execute tweak if you have a really over loaded system.
WITHOUT_CLASSIFICATION	followlinks should be true by default but if this ever changes we will need this line.
WITHOUT_CLASSIFICATION	testing drive letter search from root
WITHOUT_CLASSIFICATION	if this is our context we assume there must be something here
WITHOUT_CLASSIFICATION	this path should contain the class files for these testcases
WITHOUT_CLASSIFICATION	a special parent loader which is not the system class loader
WITHOUT_CLASSIFICATION	a special parent loader which is not the system class loader
WITHOUT_CLASSIFICATION	an antclassloader which is supposed to delegate to the parent and then to the disk path
WITHOUT_CLASSIFICATION	the intended result urls
WITHOUT_CLASSIFICATION	jdk 1.4 return collections.list(e)
WITHOUT_CLASSIFICATION	override allowed on <available>
WITHOUT_CLASSIFICATION	ensure <tstamp>'s new prefix attribute is working
WITHOUT_CLASSIFICATION	ensure <tstamp> follows the immutability rule
WITHOUT_CLASSIFICATION	ensure <condition> follows the immutability rule
WITHOUT_CLASSIFICATION	ensure <checksum> follows the immutability rule
WITHOUT_CLASSIFICATION	ensure <exec> follows the immutability rule
WITHOUT_CLASSIFICATION	ensure <pathconvert> follows the immutability rule
WITHOUT_CLASSIFICATION	throw in drive letters
WITHOUT_CLASSIFICATION	promised to eliminate consecutive slashes after drive letter.
WITHOUT_CLASSIFICATION	start with simple absolute file names.
WITHOUT_CLASSIFICATION	drive letters are not used just to be considered as normal part of a name
WITHOUT_CLASSIFICATION	now test some relative file name magic.
WITHOUT_CLASSIFICATION	fail because buildfile contains two targets with the same name
WITHOUT_CLASSIFICATION	overriding target from imported buildfile is allowed
WITHOUT_CLASSIFICATION	the buildfile to use
WITHOUT_CLASSIFICATION	call a target
WITHOUT_CLASSIFICATION	class-bft
WITHOUT_CLASSIFICATION	override allowed on <available>
WITHOUT_CLASSIFICATION	ignore event
WITHOUT_CLASSIFICATION	check it's a read-only map.
WITHOUT_CLASSIFICATION	check it's a read-only map.
WITHOUT_CLASSIFICATION	junit 3.7 adds a getname method to testcase - so we now have a name attribute in introspectionhelpertest if we run under junit 3.7 but not in earlier versions. simply add it here and remove it after the tests.
WITHOUT_CLASSIFICATION	addconfigured(hashtable) should come before addconfigured(map)
WITHOUT_CLASSIFICATION	invalid extension point
WITHOUT_CLASSIFICATION	invalid extension point
WITHOUT_CLASSIFICATION	valid extension point
WITHOUT_CLASSIFICATION	valid extension point more derived than map above but after it!
WITHOUT_CLASSIFICATION	introspectionhelpertest
WITHOUT_CLASSIFICATION	make sure we do not get a npe
WITHOUT_CLASSIFICATION	use an anonymous subclass since projectcomponent is abstract
WITHOUT_CLASSIFICATION	------------------------------------------------------ helper methods -----------------------------------------------------
WITHOUT_CLASSIFICATION	i wrote the testcases in one java file because i want also to test the combined behaviour (see end of the class).
WITHOUT_CLASSIFICATION	check defaults
WITHOUT_CLASSIFICATION	check defaults
WITHOUT_CLASSIFICATION	check build.compiler provides defaults
WITHOUT_CLASSIFICATION	setuserproperty to override system properties
WITHOUT_CLASSIFICATION	check attribute overrides build.compiler
WITHOUT_CLASSIFICATION	check attribute overrides build.compiler
WITHOUT_CLASSIFICATION	some database keys see #getproperties(int)
WITHOUT_CLASSIFICATION	keys used in properties.
WITHOUT_CLASSIFICATION	neither
WITHOUT_CLASSIFICATION	pr 11100
WITHOUT_CLASSIFICATION	simple test to ensure that the caching does work
WITHOUT_CLASSIFICATION	2nd run..
WITHOUT_CLASSIFICATION	the driver must still be cached.
WITHOUT_CLASSIFICATION	look for the driver path
WITHOUT_CLASSIFICATION	file time checks for java1.2+
WITHOUT_CLASSIFICATION	only test on java1.5+
WITHOUT_CLASSIFICATION	antliketasksattopleveltest
WITHOUT_CLASSIFICATION	file length checks rely on touch generating a zero byte file
WITHOUT_CLASSIFICATION	no-op not a real business error
WITHOUT_CLASSIFICATION	dont look for much text here as it is vendor and version dependent
WITHOUT_CLASSIFICATION	end of try-catch
WITHOUT_CLASSIFICATION	end of try-catch
WITHOUT_CLASSIFICATION	pr 11100
WITHOUT_CLASSIFICATION	pr 38973
WITHOUT_CLASSIFICATION	pr 11100
WITHOUT_CLASSIFICATION	pr 16213
WITHOUT_CLASSIFICATION	pr 38973
WITHOUT_CLASSIFICATION	pr 21996
WITHOUT_CLASSIFICATION	pr 10504
WITHOUT_CLASSIFICATION	pr 20969
WITHOUT_CLASSIFICATION	can't access the booleans in myprinter here (even if they were static) since the myprinter instance that was used in the test has likely been loaded via a different classloader than this class. therefore we make the printer assert its state and only check for the tail invocation.
WITHOUT_CLASSIFICATION	should get no output at all
WITHOUT_CLASSIFICATION	should get no output at all
WITHOUT_CLASSIFICATION	should get no output at all
WITHOUT_CLASSIFICATION	should get no output at all
WITHOUT_CLASSIFICATION	this call should succeed as unless overrides if
WITHOUT_CLASSIFICATION	test that the watchdog ends the process
WITHOUT_CLASSIFICATION	test that the watchdog ends the process
WITHOUT_CLASSIFICATION	and a little shorter
WITHOUT_CLASSIFICATION	test that the watchdog ends the process
WITHOUT_CLASSIFICATION	target must be specified
WITHOUT_CLASSIFICATION	should fail since a recursion will occur
WITHOUT_CLASSIFICATION	a rather convoluted equals() test
WITHOUT_CLASSIFICATION	<path> swallows the basedir it seems asserttrue(!getproject().resolvefile("a").exists())
WITHOUT_CLASSIFICATION	allow this as imported in targets are only tested when a target is run
WITHOUT_CLASSIFICATION	deactivate this test as imports within targets are not allowed
WITHOUT_CLASSIFICATION	running on windows or something so skip it.
WITHOUT_CLASSIFICATION	remove log file from testspawn
WITHOUT_CLASSIFICATION	this is guaranteed by fileutils#createtempfile
WITHOUT_CLASSIFICATION	let's be nice with the next generation of developers
WITHOUT_CLASSIFICATION	executetarget("setup") commented out for performance while target is empty
WITHOUT_CLASSIFICATION	target file exptected string
WITHOUT_CLASSIFICATION	end class manifestclasspathtest
WITHOUT_CLASSIFICATION	asserttrue("return code is invalid " + retcode retcode!=0)
WITHOUT_CLASSIFICATION	test a process that runs and failed
WITHOUT_CLASSIFICATION	process should abort
WITHOUT_CLASSIFICATION	i assume that starting this takes less than time_out/2 ms
WITHOUT_CLASSIFICATION	wait for time_out/2 there should be about time_out/2 ms remaining before timeout
WITHOUT_CLASSIFICATION	now stop the watchdog.
WITHOUT_CLASSIFICATION	wait for the thread to die should be the end of the process
WITHOUT_CLASSIFICATION	process should be dead and well finished
WITHOUT_CLASSIFICATION	we have to compare the decompressed content instead
WITHOUT_CLASSIFICATION	no point in setting a message
WITHOUT_CLASSIFICATION	this is guaranteed by fileutils#createtempfile
WITHOUT_CLASSIFICATION	make the spawned process run 4 seconds
WITHOUT_CLASSIFICATION	this loop runs parallel to the build
WITHOUT_CLASSIFICATION	security
WITHOUT_CLASSIFICATION	time of the build in milli seconds
WITHOUT_CLASSIFICATION	nothing specified -> fail
WITHOUT_CLASSIFICATION	only property specified -> fail
WITHOUT_CLASSIFICATION	only file specified -> fail
WITHOUT_CLASSIFICATION	file does exist -> property 'test' == 'true'
WITHOUT_CLASSIFICATION	resource doesn't exist -> property 'test' == null
WITHOUT_CLASSIFICATION	resource does exist -> property 'test' == 'true'
WITHOUT_CLASSIFICATION	class doesn't exist -> property 'test' == null
WITHOUT_CLASSIFICATION	class does exist -> property 'test' == 'true'
WITHOUT_CLASSIFICATION	all three specified but class missing -> null
WITHOUT_CLASSIFICATION	specified property-name is "" -> true
WITHOUT_CLASSIFICATION	specified file is "" -> invalid files do not exist
WITHOUT_CLASSIFICATION	specified file is "" actually a directory so it should pass
WITHOUT_CLASSIFICATION	specified resource is "" -> can such a thing exist?
WITHOUT_CLASSIFICATION	returns non null ibm jdk 1.3 linux
WITHOUT_CLASSIFICATION	specified dir is "" -> this is the current directory and should always exist
WITHOUT_CLASSIFICATION	specified dir is "../taskdefs" -> should exist since it's the location of the buildfile used
WITHOUT_CLASSIFICATION	specified dir is "../this_dir_should_never_exist" -> null
WITHOUT_CLASSIFICATION	invalid type specified
WITHOUT_CLASSIFICATION	core class that exists in system classpath is ignored
WITHOUT_CLASSIFICATION	core class that exists in system classpath is not ignored with ignoresystemclass="false"
WITHOUT_CLASSIFICATION	core class that exists in system classpath is not ignored with default ignoresystemclasses value
WITHOUT_CLASSIFICATION	class is found in specified classpath
WITHOUT_CLASSIFICATION	file is not found in specified filepath
WITHOUT_CLASSIFICATION	test when file begins with basedir twice
WITHOUT_CLASSIFICATION	test for searching parents
WITHOUT_CLASSIFICATION	test for not searching parents
WITHOUT_CLASSIFICATION	output the default excludes
WITHOUT_CLASSIFICATION	adding something to the excludes'
WITHOUT_CLASSIFICATION	removing something from the defaults
WITHOUT_CLASSIFICATION	cvs missing
WITHOUT_CLASSIFICATION	target must be specified
WITHOUT_CLASSIFICATION	we try to delete the directory created in copydirtest
WITHOUT_CLASSIFICATION	check that both arrays have the same size
WITHOUT_CLASSIFICATION	instance variable to allow cleanup
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	what's the working directory? if local then its the folder of the input file. otherwise its the "current" dir..
WITHOUT_CLASSIFICATION	set a property on the project to make sure that loading a property with the same name from an xml file will not change it.
WITHOUT_CLASSIFICATION	printproperties(p.getproperties())
WITHOUT_CLASSIFICATION	every key identified by the properties must have been loaded.
WITHOUT_CLASSIFICATION	the property is the name of a file. we are testing a location attribute so we need to resolve the given file name in the provided folder.
WITHOUT_CLASSIFICATION	substitute .xml with .properties
WITHOUT_CLASSIFICATION	basedir of subant/subant-test1/subant.xml is .. therefore we expect here the subant/subant-test1 subdirectory
WITHOUT_CLASSIFICATION	output an empty string
WITHOUT_CLASSIFICATION	output 'output of echo'
WITHOUT_CLASSIFICATION	@param message
WITHOUT_CLASSIFICATION	make sure that the parsing does not break
WITHOUT_CLASSIFICATION	where the name contains <>
WITHOUT_CLASSIFICATION	where only an address is supplied
WITHOUT_CLASSIFICATION	tests property element using xml schema properties as an example.
WITHOUT_CLASSIFICATION	should print "panic cannot find importvocab file 'javatokentypes.txt'" since it needs to run java.g first before java.tree.g
WITHOUT_CLASSIFICATION	execute
WITHOUT_CLASSIFICATION	override some of the code so we can test the handling of the return code only.
WITHOUT_CLASSIFICATION	ask ant to update the properties
WITHOUT_CLASSIFICATION	to override
WITHOUT_CLASSIFICATION	just to be sure
WITHOUT_CLASSIFICATION	just to be sure
WITHOUT_CLASSIFICATION	read in the file
WITHOUT_CLASSIFICATION	found the property we set - it's good.
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	replaceregexptest
WITHOUT_CLASSIFICATION	test for 10 consecutives transform
WITHOUT_CLASSIFICATION	java keywords are not special
WITHOUT_CLASSIFICATION	underscores go in front of invalid start chars
WITHOUT_CLASSIFICATION	underscores at the front get an underscore too
WITHOUT_CLASSIFICATION	non java char at start => underscore then the the _hex value
WITHOUT_CLASSIFICATION	and paths are stripped
WITHOUT_CLASSIFICATION	tests the {@link xsltprocess} task. xxx merge with {@link styletest}? @since ant 1.5
WITHOUT_CLASSIFICATION	byte - byte compare
WITHOUT_CLASSIFICATION	avoid endless loop
WITHOUT_CLASSIFICATION	those would fail because of the way buildfiletest captures output
WITHOUT_CLASSIFICATION	to change body of implemented methods use file | settings | file templates.
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	father and child pattern test
WITHOUT_CLASSIFICATION	redo the test but the 2 include patterns are inverted
WITHOUT_CLASSIFICATION	end of try-catch
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	on junit3 this is a failure on junit4 this is an error
WITHOUT_CLASSIFICATION	conversion to url via fileutils like in xmlresultaggregator not as suggested in the bug report
WITHOUT_CLASSIFICATION	conversion to url via fileutils like in xmlresultaggregator not as suggested in the bug report
WITHOUT_CLASSIFICATION	conversion to url via fileutils like in xmlresultaggregator not as suggested in the bug report
WITHOUT_CLASSIFICATION	mandatory constructor
WITHOUT_CLASSIFICATION	check that a suite generates no errors
WITHOUT_CLASSIFICATION	check that having no suite generates no errors
WITHOUT_CLASSIFICATION	check that something which is not a testcase generates no errors at first even though this is incorrect.
WITHOUT_CLASSIFICATION	check that an invalid suite generates an error.
WITHOUT_CLASSIFICATION	junit3 test assertequals(runner.getformatter().geterror() junittestrunner.failures runner.getretcode())
WITHOUT_CLASSIFICATION	on junit3 this is a failure on junit4 this is an error
WITHOUT_CLASSIFICATION	@param event the build event that is being logged.
WITHOUT_CLASSIFICATION	check that an exception in the constructor is noticed
WITHOUT_CLASSIFICATION	the test runner that wrap the dummy formatter that interests us
WITHOUT_CLASSIFICATION	use the classloader that loaded this class otherwise it will not be able to run inner classes if this test is ran in non-forked mode.
WITHOUT_CLASSIFICATION	dummy formatter just to catch the error
WITHOUT_CLASSIFICATION	end of try-catch
WITHOUT_CLASSIFICATION	end of try-catch
WITHOUT_CLASSIFICATION	byte - byte compare
WITHOUT_CLASSIFICATION	@param event the build event that is being logged.
WITHOUT_CLASSIFICATION	get the fileset and its basedir
WITHOUT_CLASSIFICATION	get the fileset and its basedir
WITHOUT_CLASSIFICATION	get the fileset and its basedir
WITHOUT_CLASSIFICATION	set up a sosget task
WITHOUT_CLASSIFICATION	set up a sosget task
WITHOUT_CLASSIFICATION	set up a soscheckin task
WITHOUT_CLASSIFICATION	set up a soscheckin task
WITHOUT_CLASSIFICATION	set up a soscheckout task
WITHOUT_CLASSIFICATION	set up a soscheckout task
WITHOUT_CLASSIFICATION	set up a soscheckout task
WITHOUT_CLASSIFICATION	we have extra elements
WITHOUT_CLASSIFICATION	give it some time to display
WITHOUT_CLASSIFICATION	set up a vssget task
WITHOUT_CLASSIFICATION	set up a vsslabel task
WITHOUT_CLASSIFICATION	set up a vsslabel task
WITHOUT_CLASSIFICATION	set up a vsshistory task
WITHOUT_CLASSIFICATION	set up a vsshistory task
WITHOUT_CLASSIFICATION	set up a timestamp
WITHOUT_CLASSIFICATION	get today's date
WITHOUT_CLASSIFICATION	set up a vsscheckin task
WITHOUT_CLASSIFICATION	set up a vsscheckout task
WITHOUT_CLASSIFICATION	set up a vssadd task
WITHOUT_CLASSIFICATION	set up a vsscp task
WITHOUT_CLASSIFICATION	set up a vsscreate task
WITHOUT_CLASSIFICATION	count the number of empty strings
WITHOUT_CLASSIFICATION	ran ant tests with -ea and this would fail spuriously
WITHOUT_CLASSIFICATION	now to the expected failures
WITHOUT_CLASSIFICATION	catalog <--> catalog
WITHOUT_CLASSIFICATION	catalog1 --> catalog2 --> catalog3 --> catalog1
WITHOUT_CLASSIFICATION	catalog2 --> catalog1 --> catalog
WITHOUT_CLASSIFICATION	check that dir and src are incompatible
WITHOUT_CLASSIFICATION	check that fullpath and prefix are incompatible
WITHOUT_CLASSIFICATION	check that reference zipfilesets cannot have specific attributes
WITHOUT_CLASSIFICATION	check that a reference zipfileset gets the same attributes as the original
WITHOUT_CLASSIFICATION	check that dir and src are incompatible
WITHOUT_CLASSIFICATION	these shenanigans are necessary b/c norm walsh's resolver has a different idea of how file urls are created on windoze ie filec/foo instead of file/c/foo
WITHOUT_CLASSIFICATION	check that dir and src are incompatible
WITHOUT_CLASSIFICATION	check that fullpath and prefix are incompatible
WITHOUT_CLASSIFICATION	try a netware-volume length path see how it is handled
WITHOUT_CLASSIFICATION	actually tests constructor as well as setpath
WITHOUT_CLASSIFICATION	check that reference tarfilesets cannot have specific attributes
WITHOUT_CLASSIFICATION	try a multi-part netware-volume length path w/forward slash see how it is handled
WITHOUT_CLASSIFICATION	try a multi-part netware-volume length path see how it is handled
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	try a netware-volume length path w/forward slash see how it is handled
WITHOUT_CLASSIFICATION	try a multi-part netware-volume length path with unix separator (this testcase if from an actual bug that was found in availabletest which uses pathtokenizer)
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 (with path "/a")
WITHOUT_CLASSIFICATION	this class acts as a custom ant task also and uses these variables/methods in that mode
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 (which has the project's basedir as root).
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 (which has the project's basedir as root).
WITHOUT_CLASSIFICATION	grant extra permissions to read and write the user. properties and read to the java.home property
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 (which holds patterns "include" and "exclude")
WITHOUT_CLASSIFICATION	check that a reference tarfileset gets the same attributes as the original
WITHOUT_CLASSIFICATION	was expected
WITHOUT_CLASSIFICATION	revoke permission to write user.home (granted above via user.) still able to read though. and the default granted permission to read os.name.
WITHOUT_CLASSIFICATION	was expected test passes
WITHOUT_CLASSIFICATION	was expected test passes
WITHOUT_CLASSIFICATION	was expected test passes
WITHOUT_CLASSIFICATION	after changing commandlinejava to search for the java executable i don't know how to tests the value returned here without using the same logic as applied in the class itself. asserttrue("no classpath" "java" s[0])
WITHOUT_CLASSIFICATION	assertequals("with classpath" "java" s[0])
WITHOUT_CLASSIFICATION	only the second iteration would pass because of pr 27218
WITHOUT_CLASSIFICATION	mix element types
WITHOUT_CLASSIFICATION	implicit composite
WITHOUT_CLASSIFICATION	a --> b --> c --- def \-- ghi
WITHOUT_CLASSIFICATION	ensure that an external entity resolves as expected using an xmlcatalog transform an xml file that refers to the entity into a text file entity is listed in the xmlcatalog pointing to a different file. stuff result into property val2
WITHOUT_CLASSIFICATION	ensure that an external entity resolves as expected with no xmlcatalog involvement transform an xml file that refers to the entity into a text file stuff result into property val1
WITHOUT_CLASSIFICATION	this actually relies on the first manifest being found on the classpath (probably rt.jar's) being valid
WITHOUT_CLASSIFICATION	ensure that an external entity resolves as expected with no xmlcatalog involvement transform an xml file that contains a reference to a _second_ xml file via the document() function. the _second_ xml file refers to an entity. stuff result into the property val3
WITHOUT_CLASSIFICATION	ensure that an external entity resolves as expected using an xmlcatalog transform an xml file that contains a reference to a _second_ xml file via the document() function. the _second_ xml file refers to an entity. the entity is listed in the xmlcatalog pointing to a different file. stuff result into the property val4
WITHOUT_CLASSIFICATION	the following will be used as types and tasks
WITHOUT_CLASSIFICATION	share the setup for testing the depend task
WITHOUT_CLASSIFICATION	test for path relative to project base directory
WITHOUT_CLASSIFICATION	class-mockcache
WITHOUT_CLASSIFICATION	===================== attributes =====================
WITHOUT_CLASSIFICATION	class-mockcache
WITHOUT_CLASSIFICATION	===================== constructors factories =====================
WITHOUT_CLASSIFICATION	===================== junit stuff =====================
WITHOUT_CLASSIFICATION	project reference is set in super.setup()
WITHOUT_CLASSIFICATION	init the testclasses path object
WITHOUT_CLASSIFICATION	/ for test only - ignore tests where we arent work at the moment public static junit.framework.test suite() { junit.framework.testsuite suite= new junit.framework.testsuite() suite.addtest(new modifiedselectortest("testvalidatewrongcache")) return suite }
WITHOUT_CLASSIFICATION	======= testcases for the attributes and nested elements of the selector =====
WITHOUT_CLASSIFICATION	do the actions
WITHOUT_CLASSIFICATION	do the checks - the buildfile stores the fileset as property
WITHOUT_CLASSIFICATION	must be empty according to the mock implementations
WITHOUT_CLASSIFICATION	don't catch the junit exceptions
WITHOUT_CLASSIFICATION	no check for 1<=kind<=3 - only internal use therefore check it while development
WITHOUT_CLASSIFICATION	readable form of parameter kind
WITHOUT_CLASSIFICATION	setup the "ant project"
WITHOUT_CLASSIFICATION	setup the selector
WITHOUT_CLASSIFICATION	get the cache so we can check our things
WITHOUT_CLASSIFICATION	the test
WITHOUT_CLASSIFICATION	mockcache doesnt create a file - therefore no cleanup needed
WITHOUT_CLASSIFICATION	add the test classes to its classpath
WITHOUT_CLASSIFICATION	let the selector do its checks
WITHOUT_CLASSIFICATION	extract the algorithm name (and config) from the selectors output
WITHOUT_CLASSIFICATION	'<' and '>' are only used if the algorithm has properties
WITHOUT_CLASSIFICATION	return the clean value
WITHOUT_CLASSIFICATION	initialize test environment (called "bed")
WITHOUT_CLASSIFICATION	initialize test environment (called "bed")
WITHOUT_CLASSIFICATION	configure the selector
WITHOUT_CLASSIFICATION	configure the selector
WITHOUT_CLASSIFICATION	does the selection
WITHOUT_CLASSIFICATION	evaluate correctness
WITHOUT_CLASSIFICATION	evaluate correctness
WITHOUT_CLASSIFICATION	same logic as on algorithm no testcases created
WITHOUT_CLASSIFICATION	same logic as on algorithm no testcases created
WITHOUT_CLASSIFICATION	given cache must be empty
WITHOUT_CLASSIFICATION	cache must return a stored value
WITHOUT_CLASSIFICATION	test the iterator
WITHOUT_CLASSIFICATION	clear the cache
WITHOUT_CLASSIFICATION	must not be a directory
WITHOUT_CLASSIFICATION	get the hashvalues
WITHOUT_CLASSIFICATION	assert !=null and equality
WITHOUT_CLASSIFICATION	if-isfile for
WITHOUT_CLASSIFICATION	============== testcases for the comparator implementations ==============
WITHOUT_CLASSIFICATION	not yet supported see note in selector
WITHOUT_CLASSIFICATION	new file("src/etc/testcases/types/resources/selectors/cache.properties").delete()
WITHOUT_CLASSIFICATION	really "2"
WITHOUT_CLASSIFICATION	configure the selector - only defaults are used
WITHOUT_CLASSIFICATION	+ " <emptyelement></emptyelement>"
WITHOUT_CLASSIFICATION	============ resourcefactory interface ======================
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	class-bft
WITHOUT_CLASSIFICATION	do the actions
WITHOUT_CLASSIFICATION	don't catch the junit exceptions
WITHOUT_CLASSIFICATION	first run the first call should get all files because nothing is in the cache
WITHOUT_CLASSIFICATION	second run the second call should get no files because no content has changed
WITHOUT_CLASSIFICATION	make some files dirty
WITHOUT_CLASSIFICATION	these files are made dirty --> 3+4 with different content
WITHOUT_CLASSIFICATION	accessobject to the test-ant-environment
WITHOUT_CLASSIFICATION	give some values (via property file) to that environment
WITHOUT_CLASSIFICATION	call the target for making the files dirty
WITHOUT_CLASSIFICATION	third run third call should get only those files which content changed (no timestamp changes required!)
WITHOUT_CLASSIFICATION	check the result
WITHOUT_CLASSIFICATION	mark all files which should be selected as (t)rue and all others as (f)alse. directories are always selected so they always are (t)rue.
WITHOUT_CLASSIFICATION	f2name shouldn't be selected only timestamp has changed!
WITHOUT_CLASSIFICATION	info text list of files expected result result
WITHOUT_CLASSIFICATION	cleanup the environment
WITHOUT_CLASSIFICATION	cleanup the environment
WITHOUT_CLASSIFICATION	rulebasedcollator not yet supported - see selector375 note
WITHOUT_CLASSIFICATION	s.addparam(createparam("algorithm.provider""---")) i don't know any valid
WITHOUT_CLASSIFICATION	first and second run
WITHOUT_CLASSIFICATION	make dirty
WITHOUT_CLASSIFICATION	third run
WITHOUT_CLASSIFICATION	the directories to check
WITHOUT_CLASSIFICATION	do the checks
WITHOUT_CLASSIFICATION	class-mockproject
WITHOUT_CLASSIFICATION	class-modifiedselectortest
WITHOUT_CLASSIFICATION	first read in zero bytes
WITHOUT_CLASSIFICATION	now read in the string
WITHOUT_CLASSIFICATION	make sure that the counts are the same
WITHOUT_CLASSIFICATION	lineorientedoutputstreamtest
WITHOUT_CLASSIFICATION	make sure that elapsed time in set via date works
WITHOUT_CLASSIFICATION	make sure that elapsed time in ms works
WITHOUT_CLASSIFICATION	should be new moon
WITHOUT_CLASSIFICATION	try a silly case
WITHOUT_CLASSIFICATION	and a little longer
WITHOUT_CLASSIFICATION	throw in drive letters
WITHOUT_CLASSIFICATION	promised to eliminate consecutive slashes after drive letter.
WITHOUT_CLASSIFICATION	start with simple absolute file names.
WITHOUT_CLASSIFICATION	start with simple absolute file names.
WITHOUT_CLASSIFICATION	now test some relative file name magic.
WITHOUT_CLASSIFICATION	now test some relative file name magic.
WITHOUT_CLASSIFICATION	implies lastmodified == 0
WITHOUT_CLASSIFICATION	============ filenamemapper interface =======================
WITHOUT_CLASSIFICATION	windows adds the drive letter in uppercase unless you run cygwin
WITHOUT_CLASSIFICATION	sleep for some time to make sure a touched file would get a more recent timestamp according to the file system's granularity (should be > 2s to account for windows fat).
WITHOUT_CLASSIFICATION	number of milliseconds in a day
WITHOUT_CLASSIFICATION	in a previous version the date of the file was set to 123456 milliseconds since 01.01.1970 it did not work on a computer running jdk 1.4.1_02 + windows 2000
WITHOUT_CLASSIFICATION	i would love to compare this with 123456 but depending on the filesystems granularity it can take an arbitrary value. just assert the time has changed.
WITHOUT_CLASSIFICATION	throw in netware volume names
WITHOUT_CLASSIFICATION	throw in netware volume names
WITHOUT_CLASSIFICATION	drive letters must be considered just normal filenames.
WITHOUT_CLASSIFICATION	passed test
WITHOUT_CLASSIFICATION	expected exception caught
WITHOUT_CLASSIFICATION	expected exception caught
WITHOUT_CLASSIFICATION	null parent dir
WITHOUT_CLASSIFICATION	preserve case on cygwin when using 1.4 touri
WITHOUT_CLASSIFICATION	ok java 1.3.
WITHOUT_CLASSIFICATION	get a time
WITHOUT_CLASSIFICATION	add some time. we assume no os has a granularity this bad
WITHOUT_CLASSIFICATION	asserttrue("same timestamp is up to date" fu.isuptodate(firsttime firsttime))
WITHOUT_CLASSIFICATION	check that older is up to date with a newer dest
WITHOUT_CLASSIFICATION	check that older is up to date with a newer dest
WITHOUT_CLASSIFICATION	this just tests that the function does not blow up
WITHOUT_CLASSIFICATION	java.home is bogus
WITHOUT_CLASSIFICATION	could still be os/2
WITHOUT_CLASSIFICATION	27224 = magic (a random port which is unlikely to be in use)
WITHOUT_CLASSIFICATION	order of headers cannot be guaranteed
WITHOUT_CLASSIFICATION	state engine false=envelope true=message
WITHOUT_CLASSIFICATION	make sure there are no issues concerning line separator interpretation a line separator for regex (perl) is always a unix line (ie \n)
WITHOUT_CLASSIFICATION	sb.append( response + "\r\n" )
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	wait for connection
WITHOUT_CLASSIFICATION	throw new illegalstateexception("command unrecognized " + response)
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	crc manually calculated sorry crc mode link length uid gid
WITHOUT_CLASSIFICATION	crc manually calculated sorry crc mode link length uid gid
WITHOUT_CLASSIFICATION	crc mode link length uid gid
WITHOUT_CLASSIFICATION	crc mode link length uid gid
WITHOUT_CLASSIFICATION	crc mode link uid gid
WITHOUT_CLASSIFICATION	bad crc mode link uid gid
WITHOUT_CLASSIFICATION	if we got here all was well
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstyleconstantnamecheck off - bc
WITHOUT_CLASSIFICATION	checkstyleconstantnamecheck on
WITHOUT_CLASSIFICATION	filter out messages based on priority
WITHOUT_CLASSIFICATION	print out the name of the task if we're in one
WITHOUT_CLASSIFICATION	shouldn't be possible
WITHOUT_CLASSIFICATION	set up primitive_type_map
WITHOUT_CLASSIFICATION	check of add[configured](class) pattern
WITHOUT_CLASSIFICATION	not really user settable properties on tasks/project components
WITHOUT_CLASSIFICATION	hide addtask for taskcontainers
WITHOUT_CLASSIFICATION	use wrappers for primitive classes e.g. int and integer are treated identically
WITHOUT_CLASSIFICATION	check if a create of this property is already present add takes preference over create for cb purposes
WITHOUT_CLASSIFICATION	ignore this method as there is an addconfigured form of this method that has a higher priority
WITHOUT_CLASSIFICATION	if a helper cannot be found or if the helper is for another classloader create a new ih
WITHOUT_CLASSIFICATION	ignore attribute from unknown uri's
WITHOUT_CLASSIFICATION	impossible as getmethods should only return public methods
WITHOUT_CLASSIFICATION	impossible as getmethods should only return public methods
WITHOUT_CLASSIFICATION	impossible as getmethods should only return public methods
WITHOUT_CLASSIFICATION	element doesn't handle text content
WITHOUT_CLASSIFICATION	not whitespace - fail
WITHOUT_CLASSIFICATION	only whitespace - ignore
WITHOUT_CLASSIFICATION	class doesn't have a string constructor but a decent factory method
WITHOUT_CLASSIFICATION	char and character get special treatment - take the first character
WITHOUT_CLASSIFICATION	simplest case - setattribute expects string
WITHOUT_CLASSIFICATION	first try with project.
WITHOUT_CLASSIFICATION	enumeratedattributes have their own helper class
WITHOUT_CLASSIFICATION	resolve relative paths through project
WITHOUT_CLASSIFICATION	version to use for addxxx and addconfiguredxxx
WITHOUT_CLASSIFICATION	well no matching constructor.
WITHOUT_CLASSIFICATION	ok try without.
WITHOUT_CLASSIFICATION	the method called to add/create the nested element
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	add or add_configured
WITHOUT_CLASSIFICATION	the method called to set the attribute
WITHOUT_CLASSIFICATION	add configured replaces the add method
WITHOUT_CLASSIFICATION	maintain a sorted list of targets
WITHOUT_CLASSIFICATION	worst case. look for a public string constructor and use it also supports new whatever(project string) as for path or reference this is used (deliberately) for all primitives/wrappers other than char and boolean
WITHOUT_CLASSIFICATION	already present
WITHOUT_CLASSIFICATION	higher derived
WITHOUT_CLASSIFICATION	print the stacktrace in the build file it is always useful better have too much info than not enough.
WITHOUT_CLASSIFICATION	specify output in utf8 otherwise accented characters will blow up everything
WITHOUT_CLASSIFICATION	for debugging purposes uncomment org.w3c.dom.comment s = doc.createcomment("stack=" + threadstack) buildelement.element.appendchild(s)
WITHOUT_CLASSIFICATION	-------------------------------------------------- buildlogger interface
WITHOUT_CLASSIFICATION	shouldn't happen
WITHOUT_CLASSIFICATION	lf is always end of line (i.e. crlf or single lf)
WITHOUT_CLASSIFICATION	cr without lf - send buffer then add char
WITHOUT_CLASSIFICATION	add into buffer
WITHOUT_CLASSIFICATION	either end of buffer or a line separator char
WITHOUT_CLASSIFICATION	check adapter
WITHOUT_CLASSIFICATION	can throw the same exception if there is no this(project) ctor.
WITHOUT_CLASSIFICATION	now we instantiate
WITHOUT_CLASSIFICATION	set up project references.
WITHOUT_CLASSIFICATION	our current message output status. follows project.msg_xxx.
WITHOUT_CLASSIFICATION	null
WITHOUT_CLASSIFICATION	expect the worst
WITHOUT_CLASSIFICATION	this is the list of lu
WITHOUT_CLASSIFICATION	cycle through given args
WITHOUT_CLASSIFICATION	set the flag to display the targets and quit
WITHOUT_CLASSIFICATION	eat up next arg if present default to build.xml
WITHOUT_CLASSIFICATION	we don't have any more args to recognize!
WITHOUT_CLASSIFICATION	if it's no other arg it may be the target
WITHOUT_CLASSIFICATION	if buildfile was not specified on the command line
WITHOUT_CLASSIFICATION	but -find then search for it
WITHOUT_CLASSIFICATION	make sure buildfile exists
WITHOUT_CLASSIFICATION	make sure it's not a directory (this falls into the ultra paranoid lets check everything category
WITHOUT_CLASSIFICATION	load the property files specified by -propertyfile
WITHOUT_CLASSIFICATION	ensure that -d properties take precedence
WITHOUT_CLASSIFICATION	check if the target file exists in the current directory
WITHOUT_CLASSIFICATION	change to parent directory
WITHOUT_CLASSIFICATION	refresh our file handle
WITHOUT_CLASSIFICATION	use a system manager that prevents from system.exit()
WITHOUT_CLASSIFICATION	securitymanager can not be installed here for backwards compatibility reasons (pd). needs to be loaded prior to ant class if we are going to implement it. system.setsecuritymanager(new noexitsecuritymanager())
WITHOUT_CLASSIFICATION	set the thread priorities
WITHOUT_CLASSIFICATION	we cannot set the priority here.
WITHOUT_CLASSIFICATION	set user-define properties
WITHOUT_CLASSIFICATION	proxy setup if enabled
WITHOUT_CLASSIFICATION	make sure that we have a target to execute
WITHOUT_CLASSIFICATION	add the default listener
WITHOUT_CLASSIFICATION	find the target with the longest name
WITHOUT_CLASSIFICATION	split the targets in top-level and sub-targets depending on the presence of a description
WITHOUT_CLASSIFICATION	shouldn't need to check but
WITHOUT_CLASSIFICATION	now start printing the targets and their descriptions
WITHOUT_CLASSIFICATION	got a bit annoyed that i couldn't find a pad function
WITHOUT_CLASSIFICATION	<stringstring>
WITHOUT_CLASSIFICATION	at least one constructor is guaranteed to be there but check anyway.
WITHOUT_CLASSIFICATION	is the zip file in the cache
WITHOUT_CLASSIFICATION	store the token just read for next time
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	add the types of the parent project
WITHOUT_CLASSIFICATION	ignore path elements which are not valid relative to the project
WITHOUT_CLASSIFICATION	expecting an exception to be thrown by this call illegalargumentexception wrong number of arguments
WITHOUT_CLASSIFICATION	we need to search the components of the path to see if we can find the class we want.
WITHOUT_CLASSIFICATION	default to the global setting and then see if this class belongs to a package which has been designated to use a specific loader first (this one or the parent one)
WITHOUT_CLASSIFICATION	we need to search the components of the path to see if we can find the class we want.
WITHOUT_CLASSIFICATION	try and load from this loader if the parent either didn't find it or wasn't consulted.
WITHOUT_CLASSIFICATION	this loader was first but it didn't find it - try the parent
WITHOUT_CLASSIFICATION	<url>
WITHOUT_CLASSIFICATION	<url>
WITHOUT_CLASSIFICATION	<url>
WITHOUT_CLASSIFICATION	delegate to the parent
WITHOUT_CLASSIFICATION	note could cause overlaps in case classloader.this.parent has matches.
WITHOUT_CLASSIFICATION	classloader.this.parent is already delegated to from classloader.getresources no need
WITHOUT_CLASSIFICATION	normal case.
WITHOUT_CLASSIFICATION	inverted.
WITHOUT_CLASSIFICATION	already defined
WITHOUT_CLASSIFICATION	define the package now
WITHOUT_CLASSIFICATION	ioe.printstacktrace()
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	not significant for the class loader.
WITHOUT_CLASSIFICATION	not significant for the class loader.
WITHOUT_CLASSIFICATION	{tasks types}
WITHOUT_CLASSIFICATION	add the parsed namespaces of the parent project
WITHOUT_CLASSIFICATION	we need to search the components of the path to see if we can find the class we want.
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	don't have to check for public since getconstructor finds public constructors only.
WITHOUT_CLASSIFICATION	set default value can be changed by the user
WITHOUT_CLASSIFICATION	too bad
WITHOUT_CLASSIFICATION	must have same validity then if they are valid they must also be the same
WITHOUT_CLASSIFICATION	namespace that does not contain antlib
WITHOUT_CLASSIFICATION	already processed
WITHOUT_CLASSIFICATION	there to stop error messages being "null"
WITHOUT_CLASSIFICATION	if this is left out bad things happen. like all build files break on the first element encountered.
WITHOUT_CLASSIFICATION	a fishing expedition - ignore errors if antlib not present
WITHOUT_CLASSIFICATION	class of problem
WITHOUT_CLASSIFICATION	running under an ide that doesn't set ant_home
WITHOUT_CLASSIFICATION	look up the name
WITHOUT_CLASSIFICATION	we are defined so it is an instantiation problem
WITHOUT_CLASSIFICATION	start with instantiating the class.
WITHOUT_CLASSIFICATION	here we successfully loaded the class or failed.
WITHOUT_CLASSIFICATION	success proceed with more steps
WITHOUT_CLASSIFICATION	hey there is nothing wrong with us
WITHOUT_CLASSIFICATION	<threadtask>
WITHOUT_CLASSIFICATION	<threadgrouptask>
WITHOUT_CLASSIFICATION	if the listeners already has this listener do nothing
WITHOUT_CLASSIFICATION	we need to build the hashtable dynamically
WITHOUT_CLASSIFICATION	sanity check
WITHOUT_CLASSIFICATION	try the current classloader
WITHOUT_CLASSIFICATION	throw further
WITHOUT_CLASSIFICATION	only the first build exception is reported
WITHOUT_CLASSIFICATION	make sure we exist
WITHOUT_CLASSIFICATION	currently visiting this node so have a cycle
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	create a new vector to avoid concurrentmodificationexc when the listeners get added/removed while we are in fire
WITHOUT_CLASSIFICATION	sanity check ourselves if we've been asked to build nothing then we should complain
WITHOUT_CLASSIFICATION	sort and run the dependency tree. sorting checks if all the targets (and dependencies) exist and if there is any cycle in the dependency graph.
WITHOUT_CLASSIFICATION	we first run a dfs based sort using each root as a starting node. this creates the minimum sequence of targets to the root node(s). we then do a sort on any remaining unvisited targets. this is unnecessary for doing our build but it catches circular dependencies or missing targets on the entire dependency tree not just on the targets that depend on the build target.
WITHOUT_CLASSIFICATION	no warning this is not changing anything
WITHOUT_CLASSIFICATION	check for old id behaviour
WITHOUT_CLASSIFICATION	inform ih to clear the cache
WITHOUT_CLASSIFICATION	register this as the current task on the current thread.
WITHOUT_CLASSIFICATION	make sure that
WITHOUT_CLASSIFICATION	ignore this if the object does not have a set project method or the method is private/protected.
WITHOUT_CLASSIFICATION	override facility for subclasses to put custom hashtables in
WITHOUT_CLASSIFICATION	-------------------- hook management --------------------
WITHOUT_CLASSIFICATION	-------------------- methods to override --------------------
WITHOUT_CLASSIFICATION	if next has handled the property
WITHOUT_CLASSIFICATION	try to get it from the project or keys backward compatibility
WITHOUT_CLASSIFICATION	-------------------- default implementation -------------------- methods used to support the default behavior and provide backward compatibility. some will be deprecated you should avoid calling them.
WITHOUT_CLASSIFICATION	user (cli) properties take precedence
WITHOUT_CLASSIFICATION	-------------------- getting properties --------------------
WITHOUT_CLASSIFICATION	-------------------- property parsing -------------------- moved from projecthelper. you can override the static method - this is used for backward compatibility (for code that calls the parse method in projecthelper).
WITHOUT_CLASSIFICATION	search for the next instance of $ from the 'prev' position
WITHOUT_CLASSIFICATION	if we are at the end of the string we tack on a $ then move past it
WITHOUT_CLASSIFICATION	peek ahead to see if the next char is a property or not not a property insert the char as a literal
WITHOUT_CLASSIFICATION	backwards compatibility two $ map to one mode
WITHOUT_CLASSIFICATION	new behaviour $x maps to $x for all values of x!='$'
WITHOUT_CLASSIFICATION	property found extract its name or bail on a typo
WITHOUT_CLASSIFICATION	no more $ signs found if there is any tail to the file append it
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	the children are added to after this cloning
WITHOUT_CLASSIFICATION	make sure the dependency is not empty string
WITHOUT_CLASSIFICATION	make sure that depends attribute does not end in a
WITHOUT_CLASSIFICATION	a project helper may process multiple files. we'll keep track of them - to avoid loops and to allow caching. the caching will probably accelerate things like <antcall>. the key is the absolute file the value is a processed tree. since the tree is composed of ue and rc - it can be reused ! protected hashtable processedfiles=new hashtable()
WITHOUT_CLASSIFICATION	public hashtable getprocessedfiles() { return processedfiles }
WITHOUT_CLASSIFICATION	-------------------- parse method --------------------
WITHOUT_CLASSIFICATION	identify the class loader we will be using. ant may be in a webapp or embedded in a different app
WITHOUT_CLASSIFICATION	first try the system property
WITHOUT_CLASSIFICATION	a jdk1.3 'service' ( like in jaxp ). that will plug a helper automatically if in classpath with the right meta-inf/services.
WITHOUT_CLASSIFICATION	this code is needed by ebcdic and other strange systems. it's a fix for bugs reported in xerces
WITHOUT_CLASSIFICATION	try next method
WITHOUT_CLASSIFICATION	-------------------- static utils used by most helpers ----------------
WITHOUT_CLASSIFICATION	reflect these into the target
WITHOUT_CLASSIFICATION	id attribute must be set externally
WITHOUT_CLASSIFICATION	needed since project properties are not accessible
WITHOUT_CLASSIFICATION	<unknownelement>
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	<stringstring>
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	reflect these into the target
WITHOUT_CLASSIFICATION	id attribute must be set externally
WITHOUT_CLASSIFICATION	attributes
WITHOUT_CLASSIFICATION	configure attributes of the object and it's children. if it is a task container defer the configuration till the task container attempts to use the task
WITHOUT_CLASSIFICATION	plain impossible to get here maybeconfigure should have thrown an exception.
WITHOUT_CLASSIFICATION	finished executing the task null it to allow gc do its job if this ue is used again a new "realthing" will be made
WITHOUT_CLASSIFICATION	do the runtime
WITHOUT_CLASSIFICATION	unknownelement always has an associated target
WITHOUT_CLASSIFICATION	return elementname
WITHOUT_CLASSIFICATION	are the names the same ?
WITHOUT_CLASSIFICATION	are attributes the same ?
WITHOUT_CLASSIFICATION	are the sub elements the same ?
WITHOUT_CLASSIFICATION	hidden constructor
WITHOUT_CLASSIFICATION	create the file
WITHOUT_CLASSIFICATION	do some writing to it
WITHOUT_CLASSIFICATION	calendar stuff.
WITHOUT_CLASSIFICATION	not included do nothing
WITHOUT_CLASSIFICATION	not included to nothing
WITHOUT_CLASSIFICATION	<runtimeconfigurable>
WITHOUT_CLASSIFICATION	<string>
WITHOUT_CLASSIFICATION	configure the object
WITHOUT_CLASSIFICATION	most likely an unknownelement
WITHOUT_CLASSIFICATION	children (this is a shadow of unknownelement#children)
WITHOUT_CLASSIFICATION	poly type
WITHOUT_CLASSIFICATION	text
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	store the token just read for next time
WITHOUT_CLASSIFICATION	a task container - anything could happen - just add the child to the container
WITHOUT_CLASSIFICATION	is the text the same? need to use equals on the string and not on the stringbuffer as equals on the string buffer does not compare the contents.
WITHOUT_CLASSIFICATION	assume that this is an not supported attribute type thrown for example by a dymanic attribute task do nothing
WITHOUT_CLASSIFICATION	on windows and unix we can ignore delimiters and still have enough information to tokenize correctly.
WITHOUT_CLASSIFICATION	we are on a dos style system so this path could be a drive spec. we look at the next token
WITHOUT_CLASSIFICATION	we know we are on a dos style platform and the next path starts with a slash or backslash so we know this is a drive spec
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	ignore "" and get the next token
WITHOUT_CLASSIFICATION	this path could be a drive spec so look at the next token
WITHOUT_CLASSIFICATION	it indeed is a drive spec get the next bit
WITHOUT_CLASSIFICATION	implicit else ignore the '' since we have either a unix or a relative path
WITHOUT_CLASSIFICATION	miscellaneous typical temporary files
WITHOUT_CLASSIFICATION	cvs
WITHOUT_CLASSIFICATION	sccs
WITHOUT_CLASSIFICATION	visual sourcesafe
WITHOUT_CLASSIFICATION	subversion
WITHOUT_CLASSIFICATION	set in/excludes to reasonable defaults if needed
WITHOUT_CLASSIFICATION	if no basedir and no includes nothing to do
WITHOUT_CLASSIFICATION	skip abs. paths not under basedir if set
WITHOUT_CLASSIFICATION	skip non-abs. paths if basedir == null
WITHOUT_CLASSIFICATION	we are going to scan everything anyway
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	will be caught and redirected to ant's logging system
WITHOUT_CLASSIFICATION	will be caught and redirected to ant's logging system
WITHOUT_CLASSIFICATION	removing base from path yields no change path not child of base
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	do the "singleton" initialization
WITHOUT_CLASSIFICATION	add the explicit resource collections to the archive.
WITHOUT_CLASSIFICATION	eol was "\r\n"
WITHOUT_CLASSIFICATION	don't have to check for interface since then taskclass would be abstract too.
WITHOUT_CLASSIFICATION	ignore this if the class being used as a task does not have a set location method.
WITHOUT_CLASSIFICATION	ignore this if the class being used as a task does not have a set project method.
WITHOUT_CLASSIFICATION	put in the newroots map the include patterns without wildcard tokens
WITHOUT_CLASSIFICATION	only scan directories that can include matched files or directories
WITHOUT_CLASSIFICATION	may be on a case insensitive file system. we want the results to show what's really on the disk so we need to double check.
WITHOUT_CLASSIFICATION	adapt currentelement to the case we've actually found
WITHOUT_CLASSIFICATION	i am the only one so i have to close the reader
WITHOUT_CLASSIFICATION	i am the only one so i have to close the reader
WITHOUT_CLASSIFICATION	get parameters
WITHOUT_CLASSIFICATION	calculate the eol string per the current config
WITHOUT_CLASSIFICATION	assume (eol == crlf.lf || eol == crlf.unix)
WITHOUT_CLASSIFICATION	add/remove tabs
WITHOUT_CLASSIFICATION	add missing eof character
WITHOUT_CLASSIFICATION	mask block from being edited all characters in constants.
WITHOUT_CLASSIFICATION	the current character is always emitted.
WITHOUT_CLASSIFICATION	fall tru
WITHOUT_CLASSIFICATION	fall tru
WITHOUT_CLASSIFICATION	fall tru
WITHOUT_CLASSIFICATION	fall tru
WITHOUT_CLASSIFICATION	fall tru
WITHOUT_CLASSIFICATION	eol
WITHOUT_CLASSIFICATION	eol was "\n"
WITHOUT_CLASSIFICATION	eol was "\r\r\n"
WITHOUT_CLASSIFICATION	eol was "\r"
WITHOUT_CLASSIFICATION	if source at eof and lookahead is ctrl-z return eof (not ctrl-z)
WITHOUT_CLASSIFICATION	if source is eof but last character was not ctrl-z return ctrl-z
WITHOUT_CLASSIFICATION	return current look-ahead
WITHOUT_CLASSIFICATION	eol was "\r\r" - handle as two consecutive "\r" and "\r"
WITHOUT_CLASSIFICATION	instance initializer executes just after the super() call in this class's constructor.
WITHOUT_CLASSIFICATION	return copy so that the call must call seteof() to change the state of fixcrlf
WITHOUT_CLASSIFICATION	return copy so that the call must call seteol() to change the state of fixcrlf
WITHOUT_CLASSIFICATION	return copy so that the caller must call settab() to change the state of fixcrlf.
WITHOUT_CLASSIFICATION	if i'm removing an eof character do so first so that the other filters don't see that character.
WITHOUT_CLASSIFICATION	change all eol characters to match the calculated eol string. if configured to do so append a trailing eol so that the file ends on a eol.
WITHOUT_CLASSIFICATION	if filtering java source prevent changes to whitespace in character and string literals.
WITHOUT_CLASSIFICATION	works like clone() but doesn't show up in the javadocs
WITHOUT_CLASSIFICATION	getconstants is a static method no need to pass in the object
WITHOUT_CLASSIFICATION	this field will hold unnnn right after reading a non latin character afterwards it will be truncated of one char every call to read
WITHOUT_CLASSIFICATION	replace the last 0s by the chars contained in s
WITHOUT_CLASSIFICATION	line started with comment
WITHOUT_CLASSIFICATION	----------------------------------------- predefined tokenizers -----------------------------------------
WITHOUT_CLASSIFICATION	write everything up to the from
WITHOUT_CLASSIFICATION	write the replacement to
WITHOUT_CLASSIFICATION	search again
WITHOUT_CLASSIFICATION	write the remaining characters
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	-------------------------------------------- tokenizer classes (impls moved to oata.util) --------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------- static utility methods - could be placed somewhere else --------------------------------------------------------
WITHOUT_CLASSIFICATION	remove start and end quotes if field is a string
WITHOUT_CLASSIFICATION	default buffer size
WITHOUT_CLASSIFICATION	stateless
WITHOUT_CLASSIFICATION	singletons - since all state is in the context
WITHOUT_CLASSIFICATION	we are in an imported file.
WITHOUT_CLASSIFICATION	top level file
WITHOUT_CLASSIFICATION	?? ok ??
WITHOUT_CLASSIFICATION	use default if not file or file not found
WITHOUT_CLASSIFICATION	set the location of the implicit target associated with the project tag
WITHOUT_CLASSIFICATION	ignore attributes from unknown uris
WITHOUT_CLASSIFICATION	ignore attributes from unknown uris
WITHOUT_CLASSIFICATION	what's the difference between id and name ?
WITHOUT_CLASSIFICATION	no further processing
WITHOUT_CLASSIFICATION	set explicitly before starting ?
WITHOUT_CLASSIFICATION	default for basedir is the location of the build file.
WITHOUT_CLASSIFICATION	check whether the user has specified an absolute path
WITHOUT_CLASSIFICATION	check if this target is in the current build file
WITHOUT_CLASSIFICATION	if the name has not already been defined define it
WITHOUT_CLASSIFICATION	in an impored file (and not completely ignoring the project tag)
WITHOUT_CLASSIFICATION	unknownelement is used for tasks and data types - with delayed eval
WITHOUT_CLASSIFICATION	nested element
WITHOUT_CLASSIFICATION	task included in a target ( including the default one ).
WITHOUT_CLASSIFICATION	container.addtask(task) this is a nop in ue task.init()
WITHOUT_CLASSIFICATION	simple name specified == path in list + name
WITHOUT_CLASSIFICATION	if the suffix does not starts with a '.' and the char preceding the suffix is a '.' we assume the user wants to remove the '.' as well (see docs)
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	use default if not file or file not found
WITHOUT_CLASSIFICATION	check whether the user has specified an absolute path
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	start handling sax events
WITHOUT_CLASSIFICATION	let parent resume handling sax events
WITHOUT_CLASSIFICATION	implicit target must be first on dependency list
WITHOUT_CLASSIFICATION	take care of dependencies
WITHOUT_CLASSIFICATION	swallow here will be thrown again in unknownelement.maybeconfigure if the problem persists.
WITHOUT_CLASSIFICATION	xxx task.settasktype(tag)
WITHOUT_CLASSIFICATION	task can contain other tasks - no other nested elements possible
WITHOUT_CLASSIFICATION	taskcontainer nested element can contain other tasks - no other nested elements possible
WITHOUT_CLASSIFICATION	should not happen
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	the first hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	the second hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	initialize the above 3 arrays
WITHOUT_CLASSIFICATION	#8031 first try java 1.4.
WITHOUT_CLASSIFICATION	fine java 1.3 or earlier do it by hand.
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	bad uri pass this on.
WITHOUT_CLASSIFICATION	unexpected target exception? should not happen.
WITHOUT_CLASSIFICATION	reflection problems? should not happen debug.
WITHOUT_CLASSIFICATION	fallback method for java 1.3 or earlier.
WITHOUT_CLASSIFICATION	ignore malformed exception
WITHOUT_CLASSIFICATION	if it's not an ascii character break here and use utf-8 encoding
WITHOUT_CLASSIFICATION	record the fact that it's escaped
WITHOUT_CLASSIFICATION	we saw some non-ascii character
WITHOUT_CLASSIFICATION	get utf-8 bytes for the remaining sub-string
WITHOUT_CLASSIFICATION	for each byte
WITHOUT_CLASSIFICATION	for non-ascii character make it positive then escape
WITHOUT_CLASSIFICATION	firstly check if the tools jar is already in the classpath
WITHOUT_CLASSIFICATION	just check whether this throws an exception
WITHOUT_CLASSIFICATION	couldn't find compiler - try to find tools.jar based on java.home setting
WITHOUT_CLASSIFICATION	found in java.home as given
WITHOUT_CLASSIFICATION	add any jars in the directory
WITHOUT_CLASSIFICATION	now update the class.path property
WITHOUT_CLASSIFICATION	overlay specified properties file (if any) which overrides project settings
WITHOUT_CLASSIFICATION	ignore because properties file is not required
WITHOUT_CLASSIFICATION	private static final int attr_normal = 0 private static final int attr_bright = 1
WITHOUT_CLASSIFICATION	private static final int attr_underline = 3 private static final int attr_blink = 5 private static final int attr_reverse = 7 private static final int attr_hidden = 8
WITHOUT_CLASSIFICATION	private static final int fg_black = 30
WITHOUT_CLASSIFICATION	private static final int fg_yellow = 33
WITHOUT_CLASSIFICATION	private static final int fg_white = 37
WITHOUT_CLASSIFICATION	ignore - we will use the defaults.
WITHOUT_CLASSIFICATION	ignore - we do not want this to stop the build.
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	whether or not an actual update is required - we don't need to update if the original file doesn't exist
WITHOUT_CLASSIFICATION	use the logger config
WITHOUT_CLASSIFICATION	since task log category includes target we don't really need this message
WITHOUT_CLASSIFICATION	driver doesn't understand the url
WITHOUT_CLASSIFICATION	it's a task - append the target
WITHOUT_CLASSIFICATION	finally lets execute the compiler!!
WITHOUT_CLASSIFICATION	doesn't make sense for c-l. use the logger config
WITHOUT_CLASSIFICATION	could not get the required information
WITHOUT_CLASSIFICATION	create a zipfileset for this file and pass it up.
WITHOUT_CLASSIFICATION	now we need to populate the compiler adapter
WITHOUT_CLASSIFICATION	if no webxml file is specified it's an error.
WITHOUT_CLASSIFICATION	one cannot rmic an interface for "classic" rmi (jrmp)
WITHOUT_CLASSIFICATION	otherwise perform a timestamp comparison - at least
WITHOUT_CLASSIFICATION	don't know how to handle that - a idl file doesn't have a corresponding java source for example.
WITHOUT_CLASSIFICATION	move the generated source file to the base directory. if base directory and sourcebase are the same the generated sources are already in place.
WITHOUT_CLASSIFICATION	no source file generated nothing to move
WITHOUT_CLASSIFICATION	not the requested type
WITHOUT_CLASSIFICATION	full-pathname specified == path in list simple name specified == path in list
WITHOUT_CLASSIFICATION	we only get here if an exception has been thrown
WITHOUT_CLASSIFICATION	full-pathname specified == parent dir of path in list
WITHOUT_CLASSIFICATION	not the requested type
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	the rest of the method treats single jar like a nested path with one file
WITHOUT_CLASSIFICATION	check for \r \r\n and \r\r\n regard \r\r not followed by \n as two lines
WITHOUT_CLASSIFICATION	scan base dirs to build up compile lists only if a specific classname is not given
WITHOUT_CLASSIFICATION	simple name specified == parent dir + name
WITHOUT_CLASSIFICATION	class found but restricted name this is actually the case we're looking for in jdk 1.3+ so catch the exception and return
WITHOUT_CLASSIFICATION	can return null to represent the bootstrap class loader. see api docs of class.getclassloader.
WITHOUT_CLASSIFICATION	must be "add"
WITHOUT_CLASSIFICATION	first off make sure that we've got a srcdir and destdir
WITHOUT_CLASSIFICATION	log options used
WITHOUT_CLASSIFICATION	patch file into the fileset
WITHOUT_CLASSIFICATION	set our parent dir
WITHOUT_CLASSIFICATION	compare the destination with the temp file
WITHOUT_CLASSIFICATION	eof has been reached
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	don't reposition when we've reached the end of the stream
WITHOUT_CLASSIFICATION	if at eolcount == 0 and trailing characters of string are ctrl-zs set eofstr
WITHOUT_CLASSIFICATION	keep searching for the first ^z
WITHOUT_CLASSIFICATION	trailing characters are ^zs construct new line and eofstr
WITHOUT_CLASSIFICATION	permissible values for compression attribute
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	shadow of the above if the value is altered in execute
WITHOUT_CLASSIFICATION	for directories
WITHOUT_CLASSIFICATION	renamed version of original file if it exists
WITHOUT_CLASSIFICATION	add the files found in groupfileset to fileset
WITHOUT_CLASSIFICATION	can also handle empty archives
WITHOUT_CLASSIFICATION	quick exit if the target is up to date
WITHOUT_CLASSIFICATION	close the output stream.
WITHOUT_CLASSIFICATION	we are recreating the archive need all resources
WITHOUT_CLASSIFICATION	delete a bogus zip file (but only if it's not the original one)
WITHOUT_CLASSIFICATION	in this case using java.util.zip will not work because it does not permit a zero-entry archive. must create it manually.
WITHOUT_CLASSIFICATION	cf. pkzip specification.
WITHOUT_CLASSIFICATION	p k
WITHOUT_CLASSIFICATION	remainder zeros
WITHOUT_CLASSIFICATION	create.
WITHOUT_CLASSIFICATION	we are recreating the archive need all resources
WITHOUT_CLASSIFICATION	initialresources is not empty
WITHOUT_CLASSIFICATION	initialresources is not empty
WITHOUT_CLASSIFICATION	in this case all files from origin map to the fullpath attribute of the zipfileset at destination
WITHOUT_CLASSIFICATION	we are recreating the archive need all resources
WITHOUT_CLASSIFICATION	we are recreating the archive need all resources
WITHOUT_CLASSIFICATION	no emptybehavior handling since the fileset version will take care of it.
WITHOUT_CLASSIFICATION	backwards compatibility forces us to repeat the logic of getresourcestoadd(fileset[] ) here once again.
WITHOUT_CLASSIFICATION	we will return initialresources anyway no reason to scan further.
WITHOUT_CLASSIFICATION	we will return initialresources anyway no reason to scan further.
WITHOUT_CLASSIFICATION	zips store time with a granularity of 2 seconds round up
WITHOUT_CLASSIFICATION	don't add directories we've already added. no warning if we try it is harmless in and of itself
WITHOUT_CLASSIFICATION	a "refid" attribute for a node within a path object.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	zips store time with a granularity of 2 seconds round up
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	duplicate equal to add so we continue
WITHOUT_CLASSIFICATION	store data into a byte[]
WITHOUT_CLASSIFICATION	may be altered in validate
WITHOUT_CLASSIFICATION	set user-defined properties
WITHOUT_CLASSIFICATION	set java built-in properties separately b/c we won't inherit them.
WITHOUT_CLASSIFICATION	set all properties from calling project
WITHOUT_CLASSIFICATION	has been set explicitly
WITHOUT_CLASSIFICATION	are we trying to call the target in which we are defined (or the build file if this is a top level task)?
WITHOUT_CLASSIFICATION	help the gc
WITHOUT_CLASSIFICATION	remove duplicate properties - last property wins needed for backward compatibility
WITHOUT_CLASSIFICATION	now add all references that are not defined in the subproject if inheritrefs is true
WITHOUT_CLASSIFICATION	not clonable
WITHOUT_CLASSIFICATION	ignore this if the class being referenced does not have a set project method.
WITHOUT_CLASSIFICATION	basedir and ant.file get special treatment in execute()
WITHOUT_CLASSIFICATION	don't re-set user properties avoid the warning message
WITHOUT_CLASSIFICATION	no user property
WITHOUT_CLASSIFICATION	@note it is a string and not a file to handle relative/absolute otherwise a relative file will be resolved based on the current basedir.
WITHOUT_CLASSIFICATION	get the (sub)-project instance currently in use. @return project @since ant 1.7
WITHOUT_CLASSIFICATION	check to make sure that the given dir isn't a symlink the comparison of absolute path and canonical path catches this
WITHOUT_CLASSIFICATION	validation logic
WITHOUT_CLASSIFICATION	this isnt strictly needed but by being fussy now we can change implementation details later
WITHOUT_CLASSIFICATION	special case single jar handling with signedjar attribute set
WITHOUT_CLASSIFICATION	single jar processing
WITHOUT_CLASSIFICATION	return here.
WITHOUT_CLASSIFICATION	set up our mapping policy
WITHOUT_CLASSIFICATION	no mapper? use the identity policy
WITHOUT_CLASSIFICATION	determine the destination filename via the mapper
WITHOUT_CLASSIFICATION	we only like simple mappers.
WITHOUT_CLASSIFICATION	do not set the -signedjar option if source==dest unless you like fielding hotspot crash reports
WITHOUT_CLASSIFICATION	add -tsa operations if declared
WITHOUT_CLASSIFICATION	jar source is required
WITHOUT_CLASSIFICATION	alias is required for signing
WITHOUT_CLASSIFICATION	restore the lastmodified attribute
WITHOUT_CLASSIFICATION	we normally compare destination with source
WITHOUT_CLASSIFICATION	but if no dest is specified compare source to source
WITHOUT_CLASSIFICATION	if by any means the destfile and source match
WITHOUT_CLASSIFICATION	we check the presence of signatures on lazy signing
WITHOUT_CLASSIFICATION	unsigned or non-lazy self signings are always false
WITHOUT_CLASSIFICATION	if they are different the timestamps are used
WITHOUT_CLASSIFICATION	just log this
WITHOUT_CLASSIFICATION	fileutils
WITHOUT_CLASSIFICATION	--- fields --
WITHOUT_CLASSIFICATION	keep a hashtable of attributes added by this task. this task is allow to override its own properties but not other properties. so we need to keep track of which properties we've added.
WITHOUT_CLASSIFICATION	error generated during parsing
WITHOUT_CLASSIFICATION	parser with specified options can't be built
WITHOUT_CLASSIFICATION	i/o error
WITHOUT_CLASSIFICATION	set the prefix for this node to include its tag name.
WITHOUT_CLASSIFICATION	pass the container to the processing of this node
WITHOUT_CLASSIFICATION	now iterate through children.
WITHOUT_CLASSIFICATION	for each child pass the object added by processnode to its children -- in other word each object can pass information along to its children.
WITHOUT_CLASSIFICATION	the value of an id attribute of this node.
WITHOUT_CLASSIFICATION	is there an id attribute?
WITHOUT_CLASSIFICATION	now iterate through the attributes adding them.
WITHOUT_CLASSIFICATION	the main conditional logic -- if the attribute is somehow "special" (i.e. it has known semantic meaning) then deal with it appropriately.
WITHOUT_CLASSIFICATION	id has already been found above.
WITHOUT_CLASSIFICATION	a "path" attribute for a node within a path object.
WITHOUT_CLASSIFICATION	a node identifying a new path
WITHOUT_CLASSIFICATION	for the text node add a property.
WITHOUT_CLASSIFICATION	if the containing object was a string then use it as the id.
WITHOUT_CLASSIFICATION	if this attribute was added by this task then we append this value to the existing value. we use the setproperty method which will forcibly override the property if it already exists. we need to put these properties into the project when we read them though (instead of keeping them outside of the project and batch adding them at the end) to allow other properties to reference them.
WITHOUT_CLASSIFICATION	never include the "refid" attribute as part of the attribute name.
WITHOUT_CLASSIFICATION	otherwise return it appended unless property to hide it is set.
WITHOUT_CLASSIFICATION	expose members for extensibility
WITHOUT_CLASSIFICATION	delegate this way around to support subclasses that overwrite getfile
WITHOUT_CLASSIFICATION	we arent fully defined yet. this is an error unless we are in an antlib in which case the resource name is determined automatically. nb uris in the ant core package will be "" at this point.
WITHOUT_CLASSIFICATION	convert the uri to a resource
WITHOUT_CLASSIFICATION	handle new style full paths to an antlib in which all but the forward slashes are allowed.
WITHOUT_CLASSIFICATION	if we haven't already named an xml file it gets antlib.xml
WITHOUT_CLASSIFICATION	convert from a package to a path
WITHOUT_CLASSIFICATION	here if there is an error
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	log at a lower level
WITHOUT_CLASSIFICATION	ignore the problem
WITHOUT_CLASSIFICATION	trick to evoke "basedir not set" if null
WITHOUT_CLASSIFICATION	no sources = nothing to compare no targets = nothing to delete
WITHOUT_CLASSIFICATION	members
WITHOUT_CLASSIFICATION	members
WITHOUT_CLASSIFICATION	if we are a reference create a path from the reference
WITHOUT_CLASSIFICATION	for netware and os/2 piggy-back on windows since here and in the apply code the same assumptions can be made as with windows - that \\ is an ok separator and do comparisons case-insensitive.
WITHOUT_CLASSIFICATION	if the element starts with the configured prefix then convert the prefix to the configured 'to' value.
WITHOUT_CLASSIFICATION	currently we deal with only two path formats unix and windows and unix is everything that is not windows
WITHOUT_CLASSIFICATION	may be altered in validatesetup may be altered in validatesetup
WITHOUT_CLASSIFICATION	validate our setup
WITHOUT_CLASSIFICATION	currently we deal with only two path formats unix and windows and unix is everything that is not windows (with the exception for netware and os/2 below)
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	get the list of path components in canonical form
WITHOUT_CLASSIFICATION	apply the path prefix map
WITHOUT_CLASSIFICATION	now convert the path and file separator characters from the current os to the target os.
WITHOUT_CLASSIFICATION	place the result into the specified property unless setonempty == false
WITHOUT_CLASSIFICATION	iterate over the map entries and apply each one. stop when one of the entries actually changes the element.
WITHOUT_CLASSIFICATION	note i'm using "!=" to see if we got a new object back from the apply method.
WITHOUT_CLASSIFICATION	we applied one so we're done
WITHOUT_CLASSIFICATION	determine the separator strings. the dirsep and pathsep attributes override the targetos settings.
WITHOUT_CLASSIFICATION	override with pathsep=
WITHOUT_CLASSIFICATION	override with dirsep=
WITHOUT_CLASSIFICATION	check if used by attributes
WITHOUT_CLASSIFICATION	? is there an xml api for this ?
WITHOUT_CLASSIFICATION	attributes
WITHOUT_CLASSIFICATION	constructors / initializers
WITHOUT_CLASSIFICATION	accessor methods
WITHOUT_CLASSIFICATION	validate mandatory attributes
WITHOUT_CLASSIFICATION	the property attribute must have access to a property file
WITHOUT_CLASSIFICATION	make sure property exists in property file
WITHOUT_CLASSIFICATION	default is empty string
WITHOUT_CLASSIFICATION	avoid runtime problem on pre 1.4 when compiling post 1.4
WITHOUT_CLASSIFICATION	end of finally
WITHOUT_CLASSIFICATION	look for and print warnings
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	attributes
WITHOUT_CLASSIFICATION	accessor methods
WITHOUT_CLASSIFICATION	line separators in values and tokens are "\n" in order to compare with the file contents replace them as needed
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	ignore exception
WITHOUT_CLASSIFICATION	no errors so far
WITHOUT_CLASSIFICATION	if we don't know the type of the line and we are in emacs mode it will be an error because in this mode jikes won't always print "error" but sometimes other keywords like "syntax". we should look for all those keywords.
WITHOUT_CLASSIFICATION	plain impossible
WITHOUT_CLASSIFICATION	we must check if the process was not stopped before being here
WITHOUT_CLASSIFICATION	the process is not terminated if this is really a timeout and not a manual stop then kill it.
WITHOUT_CLASSIFICATION	core / main body
WITHOUT_CLASSIFICATION	get the recorder entry
WITHOUT_CLASSIFICATION	set the values on the recorder
WITHOUT_CLASSIFICATION	inner classes
WITHOUT_CLASSIFICATION	create a recorder entry
WITHOUT_CLASSIFICATION	use '/' to calculate digest based on file name. this is required in order to get the same result on different platforms.
WITHOUT_CLASSIFICATION	read the checksum from disk.
WITHOUT_CLASSIFICATION	a separate directory was explicitly declared
WITHOUT_CLASSIFICATION	empty statement
WITHOUT_CLASSIFICATION	can either be a property name string or a file
WITHOUT_CLASSIFICATION	file is on wrong format swallow
WITHOUT_CLASSIFICATION	try to be smart not to be fooled by a weird directory name
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	close the output stream.
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	file is comparable so sorting is trivial
WITHOUT_CLASSIFICATION	loop over the checksums and generate a total hash.
WITHOUT_CLASSIFICATION	add the digest for the file content
WITHOUT_CLASSIFICATION	add the file path
WITHOUT_CLASSIFICATION	two characters form the hex value.
WITHOUT_CLASSIFICATION	we just set the prefix for this fileset and pass it up.
WITHOUT_CLASSIFICATION	check if the service is configured correctly
WITHOUT_CLASSIFICATION	if we haven't got the manifest yet attempt to get it now and have manifest be the final merge
WITHOUT_CLASSIFICATION	time to write the manifest
WITHOUT_CLASSIFICATION	encoding must be utf8 as specified in the specs.
WITHOUT_CLASSIFICATION	version-info blankline
WITHOUT_CLASSIFICATION	header newline
WITHOUT_CLASSIFICATION	if this is the same name specified in 'manifest' this is the manifest to use
WITHOUT_CLASSIFICATION	we add this to our group of fileset manifests
WITHOUT_CLASSIFICATION	assuming 'skip' otherwise don't warn if skip has been requested explicitly warn if user didn't set the attribute
WITHOUT_CLASSIFICATION	hide warning also as it makes no sense since the filesetmanifest attribute itself has been hidden
WITHOUT_CLASSIFICATION	need to handle manifest as a special check
WITHOUT_CLASSIFICATION	if it doesn't exist it will get created anyway don't bother with any up-to-date checks.
WITHOUT_CLASSIFICATION	no existing archive
WITHOUT_CLASSIFICATION	ignore close exception
WITHOUT_CLASSIFICATION	we want to save this info if we are going to make another pass
WITHOUT_CLASSIFICATION	couldn't find it - must be on path
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	looks like nothing from meta-inf should be added and the check is not case insensitive. see sun.misc.jarindex
WITHOUT_CLASSIFICATION	name newline
WITHOUT_CLASSIFICATION	longest match comes first
WITHOUT_CLASSIFICATION	meta-inf would be skipped anyway avoid index for manifest-only jars.
WITHOUT_CLASSIFICATION	a file not in the root since the jar may be one without directory entries add the parent dir of this file as well.
WITHOUT_CLASSIFICATION	protected
WITHOUT_CLASSIFICATION	if the target file is not there then it can't be up-to-date
WITHOUT_CLASSIFICATION	if the source file isn't there throw an exception
WITHOUT_CLASSIFICATION	by default messages are always displayed
WITHOUT_CLASSIFICATION	need to keep the package private version for backwards compatibility
WITHOUT_CLASSIFICATION	we must keep two lists since other classes may modify the filesets vector (it is package private) without us noticing
WITHOUT_CLASSIFICATION	add the main fileset to the list of filesets to process.
WITHOUT_CLASSIFICATION	check if tar is out of date with respect to each fileset
WITHOUT_CLASSIFICATION	warn or gnu
WITHOUT_CLASSIFICATION	don't add "" to the archive
WITHOUT_CLASSIFICATION	'/' is appended for compatibility with the zip task.
WITHOUT_CLASSIFICATION	we would end up adding "" to the archive
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	permissible values for compression attribute
WITHOUT_CLASSIFICATION	override permissions if set explicitly
WITHOUT_CLASSIFICATION	only override permissions if set explicitly
WITHOUT_CLASSIFICATION	non-file resources
WITHOUT_CLASSIFICATION	non-file resources
WITHOUT_CLASSIFICATION	extend comparison retain for bc only
WITHOUT_CLASSIFICATION	when writing to the log we'll see what's happening
WITHOUT_CLASSIFICATION	the initial version used dateformat.short for the time format which ignores seconds. if we want seconds as well we need dateformat.medium which in turn would break all old build files. first try to parse with dateformat.short and if that fails with medium - throw an exception if both fail.
WITHOUT_CLASSIFICATION	only set if successful to this point
WITHOUT_CLASSIFICATION	deal with the resource collections
WITHOUT_CLASSIFICATION	deal with filesets in a special way since the task originally also used the directories and union won't return them.
WITHOUT_CLASSIFICATION	use this to create file and deal with non-writable files
WITHOUT_CLASSIFICATION	when we leave this block we can be sure all data is really stored in main memory before the new threads start the new threads will for sure load the data from main memory. this probably is slightly paranoid.
WITHOUT_CLASSIFICATION	start any daemon threads
WITHOUT_CLASSIFICATION	now run main threads in limited numbers start initial batch of threads
WITHOUT_CLASSIFICATION	start the timeout thread
WITHOUT_CLASSIFICATION	now find available running slots for the remaining threads
WITHOUT_CLASSIFICATION	continue on outer while loop to get another available slot
WITHOUT_CLASSIFICATION	if we got here all slots in use so sleep until something happens
WITHOUT_CLASSIFICATION	doesn't java know interruptions are rude? just pretend it didn't happen and go about out business. sheesh!
WITHOUT_CLASSIFICATION	are all threads finished
WITHOUT_CLASSIFICATION	who would interrupt me at a time like this?
WITHOUT_CLASSIFICATION	now did any of the threads throw an exception
WITHOUT_CLASSIFICATION	return a bogus number
WITHOUT_CLASSIFICATION	should be safe to parse
WITHOUT_CLASSIFICATION	check name is "antlib"
WITHOUT_CLASSIFICATION	include locally for screening purposes
WITHOUT_CLASSIFICATION	try to find the executable
WITHOUT_CLASSIFICATION	now try to resolve against the dir if given
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	throw further
WITHOUT_CLASSIFICATION	only the first build exception is reported
WITHOUT_CLASSIFICATION	include locally for screening purposes
WITHOUT_CLASSIFICATION	mustsearchpath is false or no path or not found - keep our fingers crossed.
WITHOUT_CLASSIFICATION	quick fail if this is not a valid os for the command
WITHOUT_CLASSIFICATION	possibly altered in prepareexec
WITHOUT_CLASSIFICATION	hand osfamily off to os class if set
WITHOUT_CLASSIFICATION	this command will be executed only on the specified os
WITHOUT_CLASSIFICATION	default directory to the project's base directory
WITHOUT_CLASSIFICATION	assume the worst
WITHOUT_CLASSIFICATION	test for and handle a forced process death
WITHOUT_CLASSIFICATION	show the command
WITHOUT_CLASSIFICATION	close the output file if required
WITHOUT_CLASSIFICATION	same as regular <copy> task see at end-of-file!
WITHOUT_CLASSIFICATION	override task#init
WITHOUT_CLASSIFICATION	instantiate it
WITHOUT_CLASSIFICATION	default config of <mycopy> for our purposes.
WITHOUT_CLASSIFICATION	override task#execute
WITHOUT_CLASSIFICATION	the destination of the files to copy
WITHOUT_CLASSIFICATION	the complete list of files to copy
WITHOUT_CLASSIFICATION	copy all the necessary out-of-date files
WITHOUT_CLASSIFICATION	do we need to perform further processing?
WITHOUT_CLASSIFICATION	nope -)
WITHOUT_CLASSIFICATION	get rid of all files not listed in the source filesets.
WITHOUT_CLASSIFICATION	get rid of empty directories on the destination side
WITHOUT_CLASSIFICATION	want to keep todir itself
WITHOUT_CLASSIFICATION	ds returns the directories in lexicographic order. iterating through the array backwards means we are deleting leaves before their parent nodes - thus making sure (well more likely) that the directories are empty when we try to delete them.
WITHOUT_CLASSIFICATION	test here again to avoid method call for non-directories!
WITHOUT_CLASSIFICATION	must match the default value of ant#inheritall
WITHOUT_CLASSIFICATION	must match the default value of ant#inheritrefs
WITHOUT_CLASSIFICATION	<targetelement>
WITHOUT_CLASSIFICATION	check if one of the builds failed in keep going mode
WITHOUT_CLASSIFICATION	revisit defaults to the target name that contains this task if not specified.
WITHOUT_CLASSIFICATION	end class subant
WITHOUT_CLASSIFICATION	child elements.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	this command will be executed only on the specified os
WITHOUT_CLASSIFICATION	default directory to the project's base directory
WITHOUT_CLASSIFICATION	assume the worst
WITHOUT_CLASSIFICATION	show the command
WITHOUT_CLASSIFICATION	close the output file if required
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	this directory may have become empty we need to re-query its children list!
WITHOUT_CLASSIFICATION	various copy attributes/subelements of <copy> passed thru to <mycopy>
WITHOUT_CLASSIFICATION	list of files that must be copied irrelevant from the fact that they are newer or not than the destination.
WITHOUT_CLASSIFICATION	cf. nb #47191
WITHOUT_CLASSIFICATION	should work whether or not redirector.inputstream == null
WITHOUT_CLASSIFICATION	#24918 send standard input to the process by default.
WITHOUT_CLASSIFICATION	test if os match
WITHOUT_CLASSIFICATION	exec command on system runtime
WITHOUT_CLASSIFICATION	copy input and error to the output stream
WITHOUT_CLASSIFICATION	starts pumping away the generated output/error
WITHOUT_CLASSIFICATION	wait for everything to finish
WITHOUT_CLASSIFICATION	check its exit value
WITHOUT_CLASSIFICATION	inner class for continually pumping the input stream during process's runtime.
WITHOUT_CLASSIFICATION	the size of buffers to be used
WITHOUT_CLASSIFICATION	attributes.
WITHOUT_CLASSIFICATION	attribute setters.
WITHOUT_CLASSIFICATION	nested element creators.
WITHOUT_CLASSIFICATION	treat empty nested text as no text
WITHOUT_CLASSIFICATION	if binary check if incompatible attributes are used
WITHOUT_CLASSIFICATION	sanity check our inputs.
WITHOUT_CLASSIFICATION	nothing to concatenate!
WITHOUT_CLASSIFICATION	no need to do anything
WITHOUT_CLASSIFICATION	log using warn so it displays in 'quiet' mode.
WITHOUT_CLASSIFICATION	ensure that the parent dir of dest file exists
WITHOUT_CLASSIFICATION	non-existing files are not allowed
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	create a zipfileset for this file and pass it up.
WITHOUT_CLASSIFICATION	we just set the prefix for this fileset and pass it up.
WITHOUT_CLASSIFICATION	by default messages are always displayed
WITHOUT_CLASSIFICATION	close the output file if required
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	initialize to the size of the first text fragment with the hopes that it's the only one.
WITHOUT_CLASSIFICATION	append the fragment -- we defer property replacement until later just in case we get a partial property in a fragment.
WITHOUT_CLASSIFICATION	if using resources disallow inline text. this is similar to using gnu 'cat' with file arguments -- stdin is simply ignored.
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	if the file being added is web-inf/web.xml we warn if it's not the one specified in the "webxml" attribute - or if it's being added twice meaning the same file is specified by the "webxml" attribute and in a <fileset> element.
WITHOUT_CLASSIFICATION	by default we add the file.
WITHOUT_CLASSIFICATION	a web.xml file was found. see if it is a duplicate or not
WITHOUT_CLASSIFICATION	a second web.xml file so skip it
WITHOUT_CLASSIFICATION	check to see if we warn or not
WITHOUT_CLASSIFICATION	no added file yet
WITHOUT_CLASSIFICATION	there is no web.xml file so add it
WITHOUT_CLASSIFICATION	and remember that we did
WITHOUT_CLASSIFICATION	validation
WITHOUT_CLASSIFICATION	discard most of really big resources
WITHOUT_CLASSIFICATION	open up the resource
WITHOUT_CLASSIFICATION	impossible since our processline doesn't throw an ioexception
WITHOUT_CLASSIFICATION	there have been reports that 300 files could be compiled so 250 is a conservative approach
WITHOUT_CLASSIFICATION	we assume that everything jikes writes goes to standard output not to standard error. the option -xstdout that is given to jikes in javac.dojikescompile() should guarantee this. at least i hope so. )
WITHOUT_CLASSIFICATION	if we have a redirectorelement return a decoy
WITHOUT_CLASSIFICATION	0 --> srcindex
WITHOUT_CLASSIFICATION	srcindex --> targetindex
WITHOUT_CLASSIFICATION	targets are already absolute file names
WITHOUT_CLASSIFICATION	targetindex --> end
WITHOUT_CLASSIFICATION	0 --> targetindex
WITHOUT_CLASSIFICATION	0 --> srcindex
WITHOUT_CLASSIFICATION	contains abstractfileset (both dirset and fileset)
WITHOUT_CLASSIFICATION	need to reset the stream handler to restart reading of pipes go ahead and do it always w/ nested redirectors
WITHOUT_CLASSIFICATION	need to reset the stream handler to restart reading of pipes go ahead and do it always w/ nested redirectors
WITHOUT_CLASSIFICATION	targets are already absolute file names
WITHOUT_CLASSIFICATION	targetindex --> srcindex
WITHOUT_CLASSIFICATION	srcindex --> end
WITHOUT_CLASSIFICATION	srcindex --> end
WITHOUT_CLASSIFICATION	no targetfilepos
WITHOUT_CLASSIFICATION	fill in source file names
WITHOUT_CLASSIFICATION	this is skipempty == false
WITHOUT_CLASSIFICATION	if there is a new priority and it is different change it
WITHOUT_CLASSIFICATION	catch permissions denial and keep going
WITHOUT_CLASSIFICATION	-- xsltliaison
WITHOUT_CLASSIFICATION	write the properties file back out
WITHOUT_CLASSIFICATION	finally set the property
WITHOUT_CLASSIFICATION	try parsing the line into an integer.
WITHOUT_CLASSIFICATION	-- xsltprocess
WITHOUT_CLASSIFICATION	check if liaison wants to log errors using us as logger
WITHOUT_CLASSIFICATION	if we enter here it means that the stylesheet is supplied via style attribute
WITHOUT_CLASSIFICATION	shouldn't throw out deprecation warnings before we know the wrong version has been used.
WITHOUT_CLASSIFICATION	if we have an in file and out then process them
WITHOUT_CLASSIFICATION	-- make sure destination directory exists
WITHOUT_CLASSIFICATION	process all the files marked for styling
WITHOUT_CLASSIFICATION	process all the directories marked for styling
WITHOUT_CLASSIFICATION	only resource collections there better be some
WITHOUT_CLASSIFICATION	anything else is a classname
WITHOUT_CLASSIFICATION	-- processxml
WITHOUT_CLASSIFICATION	param
WITHOUT_CLASSIFICATION	new env varappend the previous one if we have it.
WITHOUT_CLASSIFICATION	mac
WITHOUT_CLASSIFICATION	validation
WITHOUT_CLASSIFICATION	if failed to process document must delete target document or it will not attempt to process it the second time
WITHOUT_CLASSIFICATION	if processor wasn't specified see if trax is available. if not default it to xalan depending on which is in the classpath
WITHOUT_CLASSIFICATION	we call liason.configure() and then liaison.setstylesheet() so that the internal variables of liaison can be set up
WITHOUT_CLASSIFICATION	if we are here we can set the stylesheet as a resource
WITHOUT_CLASSIFICATION	if we are here we cannot set the stylesheet as a resource but we can set it as a file. so we make an attempt to get it as a file
WITHOUT_CLASSIFICATION	give always a slash as file separator so the stylesheet could be sure about that use '.' so a dir+"/"+name would not result in an absolute path
WITHOUT_CLASSIFICATION	only 'name' and 'value' exist.
WITHOUT_CLASSIFICATION	a value must be of a given type say boolean|integer|string that are mostly used.
WITHOUT_CLASSIFICATION	-- class attribute
WITHOUT_CLASSIFICATION	-- class factory
WITHOUT_CLASSIFICATION	error message strings
WITHOUT_CLASSIFICATION	at this point there is one trailing space to remove if the list is not empty.
WITHOUT_CLASSIFICATION	now exit here if the property is already set
WITHOUT_CLASSIFICATION	and add any files if also defined
WITHOUT_CLASSIFICATION	add path urls
WITHOUT_CLASSIFICATION	create the url ant equivalent of filetoconvert.touri().tourl().toexternalform()
WITHOUT_CLASSIFICATION	if we run into a timeout the run-away thread shall not make the vm run forever - if no timeout occurs ant's main thread will still be there to let the new thread finish
WITHOUT_CLASSIFICATION	use the vm launcher instead of shell launcher on vms
WITHOUT_CLASSIFICATION	builds a command launcher for the os and jvm we are running under.
WITHOUT_CLASSIFICATION	try using a jdk 1.3 launcher
WITHOUT_CLASSIFICATION	ignore and keep trying
WITHOUT_CLASSIFICATION	os/2
WITHOUT_CLASSIFICATION	windows xp/2000/nt
WITHOUT_CLASSIFICATION	windows 98/95 - need to use an auxiliary script
WITHOUT_CLASSIFICATION	openvms
WITHOUT_CLASSIFICATION	generic
WITHOUT_CLASSIFICATION	make sure we do not recurse forever
WITHOUT_CLASSIFICATION	just try to use what we got
WITHOUT_CLASSIFICATION	since we "look ahead" before adding there's one last env var.
WITHOUT_CLASSIFICATION	just try to see how much we got
WITHOUT_CLASSIFICATION	os/2 - use same mechanism as windows 2000
WITHOUT_CLASSIFICATION	determine if we're running under xp/2000/nt or 98/95
WITHOUT_CLASSIFICATION	windows 98/95
WITHOUT_CLASSIFICATION	windows xp/2000/nt/2003
WITHOUT_CLASSIFICATION	on most systems one could use /bin/sh -c env
WITHOUT_CLASSIFICATION	some systems have /bin/env others /usr/bin/env just try
WITHOUT_CLASSIFICATION	rely on path
WITHOUT_CLASSIFICATION	rely on path
WITHOUT_CLASSIFICATION	noop default encoding used
WITHOUT_CLASSIFICATION	by default use the shell launcher for vms
WITHOUT_CLASSIFICATION	add the process to the list of those to destroy if the vm exits
WITHOUT_CLASSIFICATION	#31928 forcibly kill it before continuing.
WITHOUT_CLASSIFICATION	remove the process to the list of those to destroy if the vm exits
WITHOUT_CLASSIFICATION	on openvms even exit value signals failure for other platforms nonzero exit value signals failure
WITHOUT_CLASSIFICATION	get key including "="
WITHOUT_CLASSIFICATION	nb using default locale as key is a env name
WITHOUT_CLASSIFICATION	find the key in the current enviroment copy and remove it.
WITHOUT_CLASSIFICATION	use the original casiness of the key
WITHOUT_CLASSIFICATION	add the key to the enviromnent copy
WITHOUT_CLASSIFICATION	parse the vms logicals into required format ("var=val[val2]")
WITHOUT_CLASSIFICATION	further equivalence name of previous logical
WITHOUT_CLASSIFICATION	new logical?
WITHOUT_CLASSIFICATION	already got this logical from a higher order table
WITHOUT_CLASSIFICATION	the arguments
WITHOUT_CLASSIFICATION	illegalaccess illegalargument classcast
WITHOUT_CLASSIFICATION	locate the auxiliary script
WITHOUT_CLASSIFICATION	build the command
WITHOUT_CLASSIFICATION	add the environment as logicals to the dcl script
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	locate method runtime.exec(string[] cmdarray string[] envp file dir)
WITHOUT_CLASSIFICATION	use cmd.exe to change to the specified drive and directory before running the command
WITHOUT_CLASSIFICATION	use cmd.exe to change to the specified directory before running the command
WITHOUT_CLASSIFICATION	need to set the project on unknown element
WITHOUT_CLASSIFICATION	protected and private methods
WITHOUT_CLASSIFICATION	attempt complete directory renames if any first.
WITHOUT_CLASSIFICATION	files to move
WITHOUT_CLASSIFICATION	is this file still available to be moved?
WITHOUT_CLASSIFICATION	if this is the last time through the loop then move will not occur but that's what we want
WITHOUT_CLASSIFICATION	maybe io error?
WITHOUT_CLASSIFICATION	found a file
WITHOUT_CLASSIFICATION	on an io error list() can return null
WITHOUT_CLASSIFICATION	whether this vm is 1.4+ (but also check executable != null).
WITHOUT_CLASSIFICATION	------------------------------------------ general javadoc arguments
WITHOUT_CLASSIFICATION	---------------------------- javadoc2 arguments for default doclet
WITHOUT_CLASSIFICATION	add the links arguments
WITHOUT_CLASSIFICATION	should be impossible
WITHOUT_CLASSIFICATION	is the href a valid url
WITHOUT_CLASSIFICATION	ok - just skip
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	validation logic
WITHOUT_CLASSIFICATION	ignore exception
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	only try to move if this is the last mapped file and one of the mappings isn't to itself
WITHOUT_CLASSIFICATION	createargument(true) is necessary to make sure -locale is the first argument (required in 1.3+).
WITHOUT_CLASSIFICATION	go through the tokens one at a time updating the elements array and issuing warnings where appropriate.
WITHOUT_CLASSIFICATION	ant javadoc task rules for group attribute args are comma-delimited. each arg is 2 space-delimited strings. e.g. group="xslt_packages org.apache.xalan.xslt xpath_packages org.apache.xalan.xpath"
WITHOUT_CLASSIFICATION	add the group arguments
WITHOUT_CLASSIFICATION	javadoc 1.4 parameters
WITHOUT_CLASSIFICATION	the tag element is not used as a fileset but specifies the tag directly.
WITHOUT_CLASSIFICATION	the tag element is used as a fileset. parse all the files and create -tag arguments.
WITHOUT_CLASSIFICATION	not 1.4+.
WITHOUT_CLASSIFICATION	javadoc 1.2/1.3 parameters
WITHOUT_CLASSIFICATION	if using an external file write the command line options to it
WITHOUT_CLASSIFICATION	if using an external file write the command line options to it
WITHOUT_CLASSIFICATION	no reason to change the working directory as all filenames and path components have been resolved already. avoid problems with command line length in some environments.
WITHOUT_CLASSIFICATION	are there any java files in this directory?
WITHOUT_CLASSIFICATION	we don't need to care for duplicates here path.list does it for us.
WITHOUT_CLASSIFICATION	checkstylemethodnamecheck off - bc
WITHOUT_CLASSIFICATION	methods below all add specific selectors
WITHOUT_CLASSIFICATION	convert a class name into a resource
WITHOUT_CLASSIFICATION	set the property
WITHOUT_CLASSIFICATION	line feed
WITHOUT_CLASSIFICATION	by default remove matching empty dirs
WITHOUT_CLASSIFICATION	delete the single file
WITHOUT_CLASSIFICATION	delete the directory
WITHOUT_CLASSIFICATION	add the files from the default fileset
WITHOUT_CLASSIFICATION	sort first to files then dirs
WITHOUT_CLASSIFICATION	plain impossible with utf8 see httpjava.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html fallback to platform specific anyway.
WITHOUT_CLASSIFICATION	patch the redirector to save output to a file
WITHOUT_CLASSIFICATION	verify special operations
WITHOUT_CLASSIFICATION	jar is required
WITHOUT_CLASSIFICATION	deal with jdk1.4.2 bug
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	now we need to populate the compiler adapter
WITHOUT_CLASSIFICATION	finally lets execute the compiler!!
WITHOUT_CLASSIFICATION	validation
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	nonexistent resources could only occur if we already deleted something from a fileset
WITHOUT_CLASSIFICATION	cache
WITHOUT_CLASSIFICATION	no include pattern implicitly means includes=""
WITHOUT_CLASSIFICATION	do not process this file
WITHOUT_CLASSIFICATION	make sure facade knows about magic properties and fork setting
WITHOUT_CLASSIFICATION	deal with the resources
WITHOUT_CLASSIFICATION	make a transaction for each resource
WITHOUT_CLASSIFICATION	make a transaction group for the outer command
WITHOUT_CLASSIFICATION	process all transactions
WITHOUT_CLASSIFICATION	catch any statements not followed by
WITHOUT_CLASSIFICATION	check and ignore empty statements
WITHOUT_CLASSIFICATION	closes an unused connection after an error and doesn't rethrow a possible sqlexception @since ant 1.7
WITHOUT_CLASSIFICATION	dreaded backwards compatibility
WITHOUT_CLASSIFICATION	throw an exception if cvs exited with error. (iulian)
WITHOUT_CLASSIFICATION	re-implement legacy behaviour
WITHOUT_CLASSIFICATION	check if not real cvsroot => set it to null
WITHOUT_CLASSIFICATION	check if not real cvsrsh => set it to null
WITHOUT_CLASSIFICATION	check if not real tag => set it to null
WITHOUT_CLASSIFICATION	close the output file if required
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	req req
WITHOUT_CLASSIFICATION	scan source directories and dest directory to build up compile lists
WITHOUT_CLASSIFICATION	there is no need to expand properties here as that happens when transaction.addtext is called to do so here would be an error.
WITHOUT_CLASSIFICATION	there are places (in this file and perhaps elsewhere where it is assumed that null is an acceptable parameter.
WITHOUT_CLASSIFICATION	we can't do it ourselves as jcvs is gpled a third party task outside of jakarta repositories would be possible though (sb).
WITHOUT_CLASSIFICATION	just call the getexecutestreamhandler() and let it handle the semantics of instantiation or retrieval.
WITHOUT_CLASSIFICATION	we are chmodding the given directory
WITHOUT_CLASSIFICATION	may be altered in validateattributes
WITHOUT_CLASSIFICATION	will be removed in validateattributes
WITHOUT_CLASSIFICATION	make sure we don't have an illegal set of options
WITHOUT_CLASSIFICATION	deal with the single file
WITHOUT_CLASSIFICATION	deal with the resourcecollections
WITHOUT_CLASSIFICATION	step (1) - beware of the zipfileset
WITHOUT_CLASSIFICATION	not a fileset or contains non-file resources
WITHOUT_CLASSIFICATION	copying of dirs is trivial and can be done for non-file resources as well as for real files.
WITHOUT_CLASSIFICATION	a not-directory file resource needs special treatment
WITHOUT_CLASSIFICATION	do all the copy operations now
WITHOUT_CLASSIFICATION	restrict to out-of-date resources
WITHOUT_CLASSIFICATION	clean up again so this instance can be used a second time
WITHOUT_CLASSIFICATION	reuse the array created by the mapper
WITHOUT_CLASSIFICATION	reuse the array created by the mapper
WITHOUT_CLASSIFICATION	now patch in all system properties
WITHOUT_CLASSIFICATION	is the keystore a file
WITHOUT_CLASSIFICATION	must be a url - just pass as is
WITHOUT_CLASSIFICATION	gump friendly - don't mess with the core loader if only classpath
WITHOUT_CLASSIFICATION	construct a new class loader
WITHOUT_CLASSIFICATION	the param is "parentfirst"
WITHOUT_CLASSIFICATION	public
WITHOUT_CLASSIFICATION	shield it from being closed by a filtering streampumper
WITHOUT_CLASSIFICATION	shield it from being closed by a filtering streampumper
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	set read-only properties checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	are any other references held ? can we 'close' the loader so it removes the locks on jars ? a new one will be created.
WITHOUT_CLASSIFICATION	the core loader must be reverse reverse=true
WITHOUT_CLASSIFICATION	this allows the core loader to load optional tasks without delegating
WITHOUT_CLASSIFICATION	wait for the streampumpers to finish
WITHOUT_CLASSIFICATION	ignore exception
WITHOUT_CLASSIFICATION	normalize the reference directory (containing the jar)
WITHOUT_CLASSIFICATION	normalize the current file
WITHOUT_CLASSIFICATION	no match so bail out!
WITHOUT_CLASSIFICATION	finally assign the property with the manifest classpath
WITHOUT_CLASSIFICATION	try to find a max_line_length byte section
WITHOUT_CLASSIFICATION	continuation line
WITHOUT_CLASSIFICATION	refresh attribute in case of multivalued attributes.
WITHOUT_CLASSIFICATION	the merge file always wins
WITHOUT_CLASSIFICATION	the merge file always wins even for class-path
WITHOUT_CLASSIFICATION	add in the warnings
WITHOUT_CLASSIFICATION	this should be the manifest version
WITHOUT_CLASSIFICATION	add it back
WITHOUT_CLASSIFICATION	shouldn't happen - ignore
WITHOUT_CLASSIFICATION	create a vector and add in the warnings for all the sections
WITHOUT_CLASSIFICATION	off by default
WITHOUT_CLASSIFICATION	set up logging
WITHOUT_CLASSIFICATION	execute the get
WITHOUT_CLASSIFICATION	dont do any progress unless asked
WITHOUT_CLASSIFICATION	set the timestamp to the file date.
WITHOUT_CLASSIFICATION	set up the url connection
WITHOUT_CLASSIFICATION	create as many directory prefixes as parent levels to traverse in addition to the reference directory itself
WITHOUT_CLASSIFICATION	find the longest prefix shared by the current file and the reference directory.
WITHOUT_CLASSIFICATION	we have a match! add as many ../ as parent directory traversed to get the relative path
WITHOUT_CLASSIFICATION	manifest's classpath attribute always uses forward slashes '/' and is space-separated. ant will properly format it on 72 columns with proper line continuation
WITHOUT_CLASSIFICATION	a continuation on the first line is a continuation of the name - concatenate this line and the name
WITHOUT_CLASSIFICATION	required required
WITHOUT_CLASSIFICATION	modify the headers nb things like user authentication could go in here too.
WITHOUT_CLASSIFICATION	prepare java 1.1 style credentials
WITHOUT_CLASSIFICATION	we do not use the sun impl for portability and always use our own implementation for consistent testing
WITHOUT_CLASSIFICATION	connect to the remote site (may take some time)
WITHOUT_CLASSIFICATION	next test for a 304 result (http only)
WITHOUT_CLASSIFICATION	test for 401 result (http only)
WITHOUT_CLASSIFICATION	revisit at this point even non http connections may support the if-modified-since behaviour -we just check the date of the content and skip the write if it is not newer. some protocols (ftp) don't include dates of course.
WITHOUT_CLASSIFICATION	this three attempt trick is to get round quirks in different java implementations. some of them take a few goes to bind property we ignore the first couple of such failures.
WITHOUT_CLASSIFICATION	successful download
WITHOUT_CLASSIFICATION	this happens if the projecthelper was not registered with the project.
WITHOUT_CLASSIFICATION	methods to register and unregister shutdown hooks
WITHOUT_CLASSIFICATION	check to see if the shutdown hook methods exists (support pre-jdk 1.3 vms)
WITHOUT_CLASSIFICATION	wait to add shutdown hook as needed
WITHOUT_CLASSIFICATION	it just won't be added as a shutdown hook (
WITHOUT_CLASSIFICATION	shutdown already is in progress
WITHOUT_CLASSIFICATION	ignore exception
WITHOUT_CLASSIFICATION	shutdown already is in progress
WITHOUT_CLASSIFICATION	i don't think we can use file - different rules for relative paths.
WITHOUT_CLASSIFICATION	this happens if ant is used with a project helper that doesn't set the import.
WITHOUT_CLASSIFICATION	paths are relative to the build file they're imported from not the current directory (same as entity includes).
WITHOUT_CLASSIFICATION	whether or not this processdestroyer has been registered as a shutdown hook
WITHOUT_CLASSIFICATION	whether or not this processdestroyer is currently running as shutdown hook
WITHOUT_CLASSIFICATION	this should return quickly since it basically is a no-op.
WITHOUT_CLASSIFICATION	the thread didn't die in time it should not kill any processes unexpectedly
WITHOUT_CLASSIFICATION	if this list is empty register the shutdown hook
WITHOUT_CLASSIFICATION	need to load task via system classloader or the new task we want to define will never be a task but always be wrapped into a taskadapter.
WITHOUT_CLASSIFICATION	generate classpath because kjc doesn't support sourcepath.
WITHOUT_CLASSIFICATION	generate the clsspath
WITHOUT_CLASSIFICATION	kjc don't have bootclasspath option.
WITHOUT_CLASSIFICATION	process the factory class
WITHOUT_CLASSIFICATION	process the factory path
WITHOUT_CLASSIFICATION	process the processor options
WITHOUT_CLASSIFICATION	set up the javac options
WITHOUT_CLASSIFICATION	then add the apt options
WITHOUT_CLASSIFICATION	finally invoke apt use reflection to be able to build on all jdks
WITHOUT_CLASSIFICATION	rethrow build exceptions
WITHOUT_CLASSIFICATION	cast everything else to a build exception
WITHOUT_CLASSIFICATION	call the compile() method
WITHOUT_CLASSIFICATION	jvc doesn't support bootclasspath dir (-bootclasspath) so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	jvc doesn't support an extension dir (-extdir) so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	jvc has no option for source-path so we will add it to classpath.
WITHOUT_CLASSIFICATION	add the classpath before the "internal" one.
WITHOUT_CLASSIFICATION	enable ms-extensions and
WITHOUT_CLASSIFICATION	do not display a message about this.
WITHOUT_CLASSIFICATION	do not display logo
WITHOUT_CLASSIFICATION	add the files
WITHOUT_CLASSIFICATION	run
WITHOUT_CLASSIFICATION	as new versions of java come out add them to this test
WITHOUT_CLASSIFICATION	on java<=1.3 the modern falls back to classic if it is not found but on java>=1.4 we just bail out early
WITHOUT_CLASSIFICATION	does the modern compiler exist?
WITHOUT_CLASSIFICATION	checkstyleconstantnamecheck on checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	combine the build classpath with the system classpath in an order determined by the value of build.sysclasspath
WITHOUT_CLASSIFICATION	for -sourcepath use the "sourcepath" value if present. otherwise default to the "srcdir" value.
WITHOUT_CLASSIFICATION	just add "sourcepath" to classpath ( for jdk1.1 ) as well as "bootclasspath" and "extdirs"
WITHOUT_CLASSIFICATION	if the buildfile specifies sourcepath="" then don't output any sourcepath.
WITHOUT_CLASSIFICATION	if the buildfile specifies sourcepath="" then don't output any sourcepath.
WITHOUT_CLASSIFICATION	support for -source 1.1 and -source 1.2 has been added with jdk 1.4.2 - and isn't present in 1.5.0 either
WITHOUT_CLASSIFICATION	1.5.0 doesn't support -source 1.1
WITHOUT_CLASSIFICATION	use the vm launcher instead of shell launcher on vms for java
WITHOUT_CLASSIFICATION	gcj doesn't support bootclasspath dir (-bootclasspath) so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	gcj doesn't support an extension dir (-extdir) so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	gcj has no option for source-path so we will add it to classpath.
WITHOUT_CLASSIFICATION	use reflection to be able to build on all jdks >= 1.1
WITHOUT_CLASSIFICATION	no bootclasspath therefore get one from the java runtime
WITHOUT_CLASSIFICATION	if the user has set jikespath we should add the contents as well
WITHOUT_CLASSIFICATION	reflection to avoid bootstrap/build problems
WITHOUT_CLASSIFICATION	now verify that the class has an implementation
WITHOUT_CLASSIFICATION	windows probing logic relies on the word 'windows' in the os
WITHOUT_CLASSIFICATION	there are only four 9x platforms that we look for
WITHOUT_CLASSIFICATION	wince isn't really 9x but crippled enough to be a muchness. ant doesnt run on ce anyway.
WITHOUT_CLASSIFICATION	millis per second
WITHOUT_CLASSIFICATION	get the host of a url
WITHOUT_CLASSIFICATION	java1.5 reachable = address.isreachable(timeout 1000)
WITHOUT_CLASSIFICATION	utterly implausible but catered for anyway
WITHOUT_CLASSIFICATION	load the parser class
WITHOUT_CLASSIFICATION	may be altered in validate
WITHOUT_CLASSIFICATION	error messages
WITHOUT_CLASSIFICATION	plain impossible
WITHOUT_CLASSIFICATION	support for -source 1.1 and -source 1.2 has been added with jdk 1.4.2 jikes doesn't like it
WITHOUT_CLASSIFICATION	assume this is an ioexception about un readability
WITHOUT_CLASSIFICATION	any kind of fault not reachable.
WITHOUT_CLASSIFICATION	java1.4 or earlier
WITHOUT_CLASSIFICATION	don't know the type should throw exception instead?
WITHOUT_CLASSIFICATION	pick a value that is good for everything
WITHOUT_CLASSIFICATION	initial state is false.
WITHOUT_CLASSIFICATION	every condition is xored against the previous one
WITHOUT_CLASSIFICATION	validate
WITHOUT_CLASSIFICATION	#now match the files
WITHOUT_CLASSIFICATION	intentionally left blank
WITHOUT_CLASSIFICATION	private static final int get_entry = 0
WITHOUT_CLASSIFICATION	make sure attributes are reset when working on a 'new' file.
WITHOUT_CLASSIFICATION	we have ended changelog for that particular file so we can save it
WITHOUT_CLASSIFICATION	was -1
WITHOUT_CLASSIFICATION	was -1
WITHOUT_CLASSIFICATION	there were no revisions in this changelog entry so lets move onto next file
WITHOUT_CLASSIFICATION	reset comment to empty here as we can accumulate multiple lines in the processcomment method
WITHOUT_CLASSIFICATION	we want something of the form -d ">=yyyy-mm-dd"
WITHOUT_CLASSIFICATION	check if list of files to check has been specified
WITHOUT_CLASSIFICATION	for now skip entries which are missing a date
WITHOUT_CLASSIFICATION	skip dates that are too early
WITHOUT_CLASSIFICATION	skip dates that are too late
WITHOUT_CLASSIFICATION	validate the input parameters
WITHOUT_CLASSIFICATION	build the rdiff command
WITHOUT_CLASSIFICATION	if the two substrings are longer than the original then name contains address - so reset the name to null
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	support multiple packages
WITHOUT_CLASSIFICATION	force command not to be null
WITHOUT_CLASSIFICATION	run the cvs command
WITHOUT_CLASSIFICATION	parse the rdiff
WITHOUT_CLASSIFICATION	write the tag diff
WITHOUT_CLASSIFICATION	parse the output of the command
WITHOUT_CLASSIFICATION	it is a new file set the revision but not the prevrevision
WITHOUT_CLASSIFICATION	it is a modified file set the revision and the prevrevision
WITHOUT_CLASSIFICATION	it is a removed file
WITHOUT_CLASSIFICATION	special headers
WITHOUT_CLASSIFICATION	prepare for the auto select mechanism
WITHOUT_CLASSIFICATION	try mime format
WITHOUT_CLASSIFICATION	smtp auth only allowed with mime mail
WITHOUT_CLASSIFICATION	ssl only allowed with mime mail
WITHOUT_CLASSIFICATION	try uu format
WITHOUT_CLASSIFICATION	try plain format
WITHOUT_CLASSIFICATION	a valid mailer must be present by now
WITHOUT_CLASSIFICATION	a valid message is required
WITHOUT_CLASSIFICATION	an address to send from is required
WITHOUT_CLASSIFICATION	at least one address to send to/cc/bcc is required
WITHOUT_CLASSIFICATION	set the mimetype if not done already (and required)
WITHOUT_CLASSIFICATION	set the character set if not done already (and required)
WITHOUT_CLASSIFICATION	identify which files should be attached
WITHOUT_CLASSIFICATION	let the user know what's going to happen
WITHOUT_CLASSIFICATION	pass the params to the mailer
WITHOUT_CLASSIFICATION	send the email
WITHOUT_CLASSIFICATION	let the user know what happened
WITHOUT_CLASSIFICATION	checkstylemembernamecheck on
WITHOUT_CLASSIFICATION	read message from a file
WITHOUT_CLASSIFICATION	make a limited attempt to extract a sanitized name and email address algorithm based on the one found in ant's mailmessage.java
WITHOUT_CLASSIFICATION	shortcut for "<address>"
WITHOUT_CLASSIFICATION	support "address (name)"
WITHOUT_CLASSIFICATION	support "(name) address"
WITHOUT_CLASSIFICATION	to work properly with national charsets we have to use implementation of interface javax.activation.datasource
WITHOUT_CLASSIFICATION	must be like "text/plain charset=windows-1251"
WITHOUT_CLASSIFICATION	aside the jdk is clearly unaware of the scottish 'session' which involves excessive quantities of alcohol -)
WITHOUT_CLASSIFICATION	smtp provider
WITHOUT_CLASSIFICATION	create the message
WITHOUT_CLASSIFICATION	set the sender
WITHOUT_CLASSIFICATION	set the reply to addresses
WITHOUT_CLASSIFICATION	choosing character set of the mail message first looking it from mimetype
WITHOUT_CLASSIFICATION	assign/reassign message charset from mimetype
WITHOUT_CLASSIFICATION	next looking if charset having explicit definition
WITHOUT_CLASSIFICATION	using default
WITHOUT_CLASSIFICATION	using javax.activation.datasource paradigm
WITHOUT_CLASSIFICATION	assuming mime type in form "text/xxxx charset=xxxxxx"
WITHOUT_CLASSIFICATION	skip 'charset='
WITHOUT_CLASSIFICATION	scanner to find our inputs list of files to process
WITHOUT_CLASSIFICATION	default srcdir to basedir
WITHOUT_CLASSIFICATION	require destdir
WITHOUT_CLASSIFICATION	if src and dest dirs are the same require the extension to be set so we don't stomp every file. one could still include a file with the same extension but .
WITHOUT_CLASSIFICATION	file to convert where to put the results
WITHOUT_CLASSIFICATION	build the full file names
WITHOUT_CLASSIFICATION	make sure we're not about to clobber something
WITHOUT_CLASSIFICATION	make intermediate directories if needed xxx jdk 1.1 doesn't have file.getparentfile
WITHOUT_CLASSIFICATION	this.fork = s
WITHOUT_CLASSIFICATION	todo use antlr to parse the grammar file to do this.
WITHOUT_CLASSIFICATION	if no output directory is specified used the target's directory
WITHOUT_CLASSIFICATION	first off make sure that we've got a from and to extension
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc checkstylemembernamecheck off - bc
WITHOUT_CLASSIFICATION	checkstylemembernamecheck on checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	error strings
WITHOUT_CLASSIFICATION	validating
WITHOUT_CLASSIFICATION	set the schema source for the doc
WITHOUT_CLASSIFICATION	set the schema source for the doc
WITHOUT_CLASSIFICATION	enable xsd
WITHOUT_CLASSIFICATION	validate the parser type
WITHOUT_CLASSIFICATION	couldnt use the xerces or jaxp calls
WITHOUT_CLASSIFICATION	enable schema checking
WITHOUT_CLASSIFICATION	turn off dtds if desired
WITHOUT_CLASSIFICATION	schema declarations go in next
WITHOUT_CLASSIFICATION	first off make sure that we've got a srcdir and destdir
WITHOUT_CLASSIFICATION	enable schema setfeature(xmlconstants.feature_validation false)
WITHOUT_CLASSIFICATION	this is almost implausible but required handling
WITHOUT_CLASSIFICATION	schemalocation
WITHOUT_CLASSIFICATION	private path extdirs
WITHOUT_CLASSIFICATION	first off make sure that we've got a srcdir
WITHOUT_CLASSIFICATION	keep jdk 1.1 compliant so others can use this
WITHOUT_CLASSIFICATION	second cr -> eol + possibly empty line
WITHOUT_CLASSIFICATION	first cr in this line
WITHOUT_CLASSIFICATION	lf -> eol
WITHOUT_CLASSIFICATION	any other char
WITHOUT_CLASSIFICATION	mac-style linebreak or eof (or both)
WITHOUT_CLASSIFICATION	variables to hold arguments
WITHOUT_CLASSIFICATION	?? should this be the default for ant?
WITHOUT_CLASSIFICATION	constants for the messages to suppress by flags and their corresponding properties
WITHOUT_CLASSIFICATION	other implementation variables
WITHOUT_CLASSIFICATION	classpath makes no sense
WITHOUT_CLASSIFICATION	destdir
WITHOUT_CLASSIFICATION	srcdir
WITHOUT_CLASSIFICATION	copy the source and support files
WITHOUT_CLASSIFICATION	compile the source files
WITHOUT_CLASSIFICATION	create an array of strings for input to the compiler one array comes from the compile options the other from the compilelist
WITHOUT_CLASSIFICATION	create a single array of arguments for the compiler
WITHOUT_CLASSIFICATION	print nice output about what we are doing for the log
WITHOUT_CLASSIFICATION	need to set java.class.path property and restore it later since the netrexx compiler has no option for the classpath
WITHOUT_CLASSIFICATION	path is mentioned in the message
WITHOUT_CLASSIFICATION	verbose level logging for suppressed messages
WITHOUT_CLASSIFICATION	error level logging for compiler errors
WITHOUT_CLASSIFICATION	warning for all warning messages
WITHOUT_CLASSIFICATION	info level for the rest.
WITHOUT_CLASSIFICATION	need to reset java.class.path property since the netrexx compiler has no option for the classpath
WITHOUT_CLASSIFICATION	add our classpath to the mix
WITHOUT_CLASSIFICATION	add the system classpath addexistingtoclasspath(classpathsystem.getproperty("java.class.path"))
WITHOUT_CLASSIFICATION	xmlreader used to validation process
WITHOUT_CLASSIFICATION	turn validation on
WITHOUT_CLASSIFICATION	set the feature from the attribute list
WITHOUT_CLASSIFICATION	sets properties
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	quick exit if the target is up to date
WITHOUT_CLASSIFICATION	ant task properties defaults checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	to report sax parsing errors checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	then check it implements xmlreader
WITHOUT_CLASSIFICATION	see if it is a sax1 parser
WITHOUT_CLASSIFICATION	validates property
WITHOUT_CLASSIFICATION	for every file we have a new instance of the validator
WITHOUT_CLASSIFICATION	if this is not a valid file just use the uri
WITHOUT_CLASSIFICATION	property
WITHOUT_CLASSIFICATION	i'm not fond of this pattern "sub-method expected to throw task-cancelling exceptions". it feels too much like programming for side-effects to me
WITHOUT_CLASSIFICATION	get files from old methods - includes and nested include
WITHOUT_CLASSIFICATION	create the stream pumpers to forward listcab's stdout and stderr to the log note listcab is an interactive program and issues prompts for every new line. therefore make it show only with verbose logging turned on.
WITHOUT_CLASSIFICATION	pump streams asynchronously
WITHOUT_CLASSIFICATION	a wild default for when the thread is interrupted
WITHOUT_CLASSIFICATION	wait for the process to finish
WITHOUT_CLASSIFICATION	wait for the end of output and error streams
WITHOUT_CLASSIFICATION	informative summary message in case of errors
WITHOUT_CLASSIFICATION	die if cabarc fails
WITHOUT_CLASSIFICATION	use this to prepend a message to the properties file
WITHOUT_CLASSIFICATION	======================================================================== constructors
WITHOUT_CLASSIFICATION	======================================================================== methods
WITHOUT_CLASSIFICATION	create the propertyfile
WITHOUT_CLASSIFICATION	type may be null because it wasn't set
WITHOUT_CLASSIFICATION	default to string type which means do nothing
WITHOUT_CLASSIFICATION	insert as a string by default
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	configure the transformer
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	if only value is specified the property is set to it regardless of its previous value.
WITHOUT_CLASSIFICATION	if only default is specified and the property did not exist in the property file the property is set to default.
WITHOUT_CLASSIFICATION	if value and default are both specified and the property previously existed in the property file the property is set to value.
WITHOUT_CLASSIFICATION	if value and default are both specified and the property did not exist in the property file the property is set to default.
WITHOUT_CLASSIFICATION	property type operations
WITHOUT_CLASSIFICATION	property types
WITHOUT_CLASSIFICATION	resetting the stylesheet - reset transformer
WITHOUT_CLASSIFICATION	do we need to reset templates as well
WITHOUT_CLASSIFICATION	set parameters on each transformation maybe something has changed (e.g. value of file name parameter)
WITHOUT_CLASSIFICATION	end of try-catch
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	warn don't use the streamsource(file) ctor. it won't work with xalan prior to 2.2 because of systemid bugs.
WITHOUT_CLASSIFICATION	use a stream so that you can close it yourself quickly and avoid keeping the handle until the object is garbaged. (always keep control) otherwise you won't be able to delete the file quickly on windows.
WITHOUT_CLASSIFICATION	not initialized yet so create the factory
WITHOUT_CLASSIFICATION	specific attributes for the transformer
WITHOUT_CLASSIFICATION	kept for backwards compatibility
WITHOUT_CLASSIFICATION	configure factory attributes
WITHOUT_CLASSIFICATION	use xmlcatalog as the entity resolver and uri resolver
WITHOUT_CLASSIFICATION	configure output properties
WITHOUT_CLASSIFICATION	copy the properties file
WITHOUT_CLASSIFICATION	load properties from file if specified otherwise use ant's properties
WITHOUT_CLASSIFICATION	add ant properties
WITHOUT_CLASSIFICATION	sort the list. makes scm and manual diffs easier.
WITHOUT_CLASSIFICATION	create xml document
WITHOUT_CLASSIFICATION	output properties
WITHOUT_CLASSIFICATION	build the command line from what we got the format as specified in the ccm.exe help
WITHOUT_CLASSIFICATION	create task ok set this task as the default one
WITHOUT_CLASSIFICATION	implementation of org.apache.tools.ant.taskdefs.executestreamhandler interface
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ccm co /t .. files as specified in the ccm.exe help
WITHOUT_CLASSIFICATION	default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	if configured to not care about whether the element is already checked out to the current view. then check to see if it is checked out.
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	clearcase items
WITHOUT_CLASSIFICATION	-reserved
WITHOUT_CLASSIFICATION	-unreserved
WITHOUT_CLASSIFICATION	-out
WITHOUT_CLASSIFICATION	-ndata
WITHOUT_CLASSIFICATION	-version
WITHOUT_CLASSIFICATION	-nwarn
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	build the command line from what we got the format is cleartool lsco [options] [viewpath ] as specified in the cleartool.exe help
WITHOUT_CLASSIFICATION	-version
WITHOUT_CLASSIFICATION	-nwarn
WITHOUT_CLASSIFICATION	type value
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool checkin [options] [viewpath ] as specified in the cleartool.exe help
WITHOUT_CLASSIFICATION	-ptime
WITHOUT_CLASSIFICATION	throws ejbcexception if unsuccessful
WITHOUT_CLASSIFICATION	-keep
WITHOUT_CLASSIFICATION	-identical
WITHOUT_CLASSIFICATION	check for required attributes
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool mkattr [options] [viewpath ] as specified in the cleartool help
WITHOUT_CLASSIFICATION	-replace
WITHOUT_CLASSIFICATION	-recurse
WITHOUT_CLASSIFICATION	type
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	clearcase items
WITHOUT_CLASSIFICATION	clearcase items
WITHOUT_CLASSIFICATION	-nwarn
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-ptime
WITHOUT_CLASSIFICATION	-keep
WITHOUT_CLASSIFICATION	build the command line from what we got the format is cleartool lock [options] as specified in the cleartool.exe help
WITHOUT_CLASSIFICATION	windows quoting of the value
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool mkelem [options] [viewpath ] as specified in the cleartool.exe help
WITHOUT_CLASSIFICATION	should choose either -ci or -nco.
WITHOUT_CLASSIFICATION	-nco
WITHOUT_CLASSIFICATION	-nco
WITHOUT_CLASSIFICATION	check the command line options
WITHOUT_CLASSIFICATION	-ci
WITHOUT_CLASSIFICATION	object selector
WITHOUT_CLASSIFICATION	build the command line from what we got the format is cleartool uncheckout [options] [viewpath ] as specified in the cleartool.exe help
WITHOUT_CLASSIFICATION	-master
WITHOUT_CLASSIFICATION	-rm
WITHOUT_CLASSIFICATION	-eltype
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	-version
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-rmall -force
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool checkin [options] [viewpath ] as specified in the cleartool.exe help
WITHOUT_CLASSIFICATION	-identical
WITHOUT_CLASSIFICATION	check for required attributes
WITHOUT_CLASSIFICATION	check for required attributes
WITHOUT_CLASSIFICATION	-replace
WITHOUT_CLASSIFICATION	-recurse
WITHOUT_CLASSIFICATION	type
WITHOUT_CLASSIFICATION	returns list of ejbs for processing
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool rmtype [options] type-selector as specified in the cleartool help
WITHOUT_CLASSIFICATION	type-kindtype-name
WITHOUT_CLASSIFICATION	-ignore
WITHOUT_CLASSIFICATION	return the type-selector
WITHOUT_CLASSIFICATION	-full
WITHOUT_CLASSIFICATION	-incremental
WITHOUT_CLASSIFICATION	-nlabel
WITHOUT_CLASSIFICATION	baseline_root_name
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-ptime
WITHOUT_CLASSIFICATION	check for required attributes
WITHOUT_CLASSIFICATION	-replace
WITHOUT_CLASSIFICATION	-replace
WITHOUT_CLASSIFICATION	build the command line from what we got the format is cleartool lock [options] as specified in the cleartool.exe help
WITHOUT_CLASSIFICATION	check the command line options
WITHOUT_CLASSIFICATION	check the command line options
WITHOUT_CLASSIFICATION	object selector
WITHOUT_CLASSIFICATION	-ordinary
WITHOUT_CLASSIFICATION	build the command line from what we got the format is cleartool update [options] [viewpath ] as specified in the cleartool.exe help
WITHOUT_CLASSIFICATION	for debugging
WITHOUT_CLASSIFICATION	-log logname
WITHOUT_CLASSIFICATION	-graphical
WITHOUT_CLASSIFICATION	-overwrite
WITHOUT_CLASSIFICATION	-global
WITHOUT_CLASSIFICATION	-rename
WITHOUT_CLASSIFICATION	-obsolete
WITHOUT_CLASSIFICATION	-noverwrite
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool mklbtype [options] type-selector as specified in the cleartool help
WITHOUT_CLASSIFICATION	-ctime
WITHOUT_CLASSIFICATION	-pbranch
WITHOUT_CLASSIFICATION	file[] filesindir = directory.listfiles()
WITHOUT_CLASSIFICATION	-shared
WITHOUT_CLASSIFICATION	type-name@vob
WITHOUT_CLASSIFICATION	we have a file. create a stream for it
WITHOUT_CLASSIFICATION	default directory to the project's base directory
WITHOUT_CLASSIFICATION	assume the worst
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	create a data input stream from the jar input stream
WITHOUT_CLASSIFICATION	this iterator is exhausted. can we pop one off the stack
WITHOUT_CLASSIFICATION	we get the root classes and build up a set of classes upon which they depend
WITHOUT_CLASSIFICATION	now recover all the dependencies collected and add to the list.
WITHOUT_CLASSIFICATION	pick up the last round of dependencies that were determined
WITHOUT_CLASSIFICATION	right we have a good looking class file.
WITHOUT_CLASSIFICATION	int minorversion =
WITHOUT_CLASSIFICATION	int majorversion =
WITHOUT_CLASSIFICATION	int accessflags =
WITHOUT_CLASSIFICATION	int superclassindex =
WITHOUT_CLASSIFICATION	read the dependency cache from the disk
WITHOUT_CLASSIFICATION	try to read the dependency info from the map if it is not out of date
WITHOUT_CLASSIFICATION	not cached - so need to read directly from the class file
WITHOUT_CLASSIFICATION	this class depends on each class in the dependency list. for each one of those add this class into their affected classes list
WITHOUT_CLASSIFICATION	now determine which jars each class depends upon
WITHOUT_CLASSIFICATION	we need to add this jar to the list for this class.
WITHOUT_CLASSIFICATION	write the dependency cache to the disk
WITHOUT_CLASSIFICATION	need to delete the main class
WITHOUT_CLASSIFICATION	downgrade warnings on rmi stublike classes as they are generated by rmic so there is no need to tell the user that their source is missing.
WITHOUT_CLASSIFICATION	now check classpath file dependencies
WITHOUT_CLASSIFICATION	if we have no info about the class - it may have been deleted already and we are using cached info.
WITHOUT_CLASSIFICATION	there was no class file. add this class to the list
WITHOUT_CLASSIFICATION	break the classlocations into its components.
WITHOUT_CLASSIFICATION	search the various source path entries
WITHOUT_CLASSIFICATION	create a data input stream from the jar input stream
WITHOUT_CLASSIFICATION	add null entries for any additional slots required.
WITHOUT_CLASSIFICATION	end execute
WITHOUT_CLASSIFICATION	in verbose mode we always log stuff
WITHOUT_CLASSIFICATION	the simple action is to send the command line in as is
WITHOUT_CLASSIFICATION	throws ejbcexception
WITHOUT_CLASSIFICATION	vss items
WITHOUT_CLASSIFICATION	the zero index is never present in the constant pool itself so we add a null entry for it
WITHOUT_CLASSIFICATION	but for big operations we save all the params to a temp file and set @tmpfile as the command -then we remember to delete the tempfile afterwards
WITHOUT_CLASSIFICATION	start at 1 because element 0 is the executable name
WITHOUT_CLASSIFICATION	add to the list
WITHOUT_CLASSIFICATION	fill in args
WITHOUT_CLASSIFICATION	fill in args
WITHOUT_CLASSIFICATION	set source and rebuild options
WITHOUT_CLASSIFICATION	rebuild unless the dest file is newer than the source file
WITHOUT_CLASSIFICATION	mark for a rebuild if the dest file is newer
WITHOUT_CLASSIFICATION	mono 1.0's wsdl doesn't deal with absolute paths
WITHOUT_CLASSIFICATION	add in any extra files. this is an error in mono but we do not warn on it as they may fix that outside the ant build cycle.
WITHOUT_CLASSIFICATION	mark for a rebuild if we are newer
WITHOUT_CLASSIFICATION	conditionally compile
WITHOUT_CLASSIFICATION	errors
WITHOUT_CLASSIFICATION	bail on no references
WITHOUT_CLASSIFICATION	bail on no references
WITHOUT_CLASSIFICATION	demand create pathlist
WITHOUT_CLASSIFICATION	bail on no references listed
WITHOUT_CLASSIFICATION	loop through all definitions
WITHOUT_CLASSIFICATION	add those that are set and a delimiter
WITHOUT_CLASSIFICATION	set up response file options
WITHOUT_CLASSIFICATION	if the refs are out of date force a build.
WITHOUT_CLASSIFICATION	bail out early if there were no files
WITHOUT_CLASSIFICATION	now scan the hashtable and add the files
WITHOUT_CLASSIFICATION	add the source file
WITHOUT_CLASSIFICATION	now run
WITHOUT_CLASSIFICATION	forcibly delete the output file in case of trouble
WITHOUT_CLASSIFICATION	then rethrow the exception
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstyleconstantnamecheck off - bc
WITHOUT_CLASSIFICATION	checkstylemethodnamecheck off - bc
WITHOUT_CLASSIFICATION	checkstyleconstantnamecheck on checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	end execute
WITHOUT_CLASSIFICATION	fill in args
WITHOUT_CLASSIFICATION	fill in args
WITHOUT_CLASSIFICATION	rebuild unless the dest file is newer than the source file
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	determine directory resourcedir if set the dir of the destfile if not
WITHOUT_CLASSIFICATION	public private family assembly family and assembly family or assembly private scope
WITHOUT_CLASSIFICATION	scan for an implicit fileset if there was a srcdir set or there was no srcdir set but there was no contained classes
WITHOUT_CLASSIFICATION	if there is no src dir here set it
WITHOUT_CLASSIFICATION	get dependencies list.
WITHOUT_CLASSIFICATION	get any included source directories
WITHOUT_CLASSIFICATION	add the files to the command
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc checkstyleconstantnamecheck off - bc
WITHOUT_CLASSIFICATION	checkstylemethodnamecheck on
WITHOUT_CLASSIFICATION	space for more argumentativeness command.addargument() command.addargument()
WITHOUT_CLASSIFICATION	ends with '.' or null
WITHOUT_CLASSIFICATION	constants used for the "beantype" attribute
WITHOUT_CLASSIFICATION	filenames of the standard ejb descriptor and the ias-specific descriptor
WITHOUT_CLASSIFICATION	classpath used when the ias ejbc is called
WITHOUT_CLASSIFICATION	options passed to the ias ejbc
WITHOUT_CLASSIFICATION	ias installation directory (used if ejbc isn't on user's path)
WITHOUT_CLASSIFICATION	parser and handler used to process both ejb descriptor files
WITHOUT_CLASSIFICATION	value of the display-name element read from the standard ejb descriptor
WITHOUT_CLASSIFICATION	parse the classpath into it's individual elements and store the results in the "classpathelements" instance variable.
WITHOUT_CLASSIFICATION	if the -classpath flag isn't specified use the system classpath
WITHOUT_CLASSIFICATION	if the -d flag isn't specified use the working directory as the destination directory
WITHOUT_CLASSIFICATION	construct a saxparser used to process the descriptors
WITHOUT_CLASSIFICATION	saxexception or parserconfigurationexception may be thrown
WITHOUT_CLASSIFICATION	build and populate an instance of the ejbc utility
WITHOUT_CLASSIFICATION	execute the ejbc utility -- stubs/skeletons are rebuilt if needed
WITHOUT_CLASSIFICATION	add one for the "\"
WITHOUT_CLASSIFICATION	concatenate all of the command line arguments into a single string
WITHOUT_CLASSIFICATION	if an ias home directory is specified prepend it to the commmand
WITHOUT_CLASSIFICATION	the ejb information is gathered from the standard xml ejb descriptor and the ias-specific xml ejb descriptor using a sax parser.
WITHOUT_CLASSIFICATION	optional command line parameters
WITHOUT_CLASSIFICATION	no beantype flag is needed for an entity bean
WITHOUT_CLASSIFICATION	required command line parameters
WITHOUT_CLASSIFICATION	convert the list into an array and return it
WITHOUT_CLASSIFICATION	inner classes follow
WITHOUT_CLASSIFICATION	end of ejbcexception inner class
WITHOUT_CLASSIFICATION	tracks current element tracks current text data "session" or "entity"
WITHOUT_CLASSIFICATION	search the resource map and (if not found) file map
WITHOUT_CLASSIFICATION	a new element has started so reset the text being captured
WITHOUT_CLASSIFICATION	if this is a standard ejb 1.1 descriptor we are looking for one set of data while if this is an ias-specific descriptor we're looking for different set of data. hand the processing off to the appropriate method.
WITHOUT_CLASSIFICATION	end of ejbchandler inner class
WITHOUT_CLASSIFICATION	below are getter's and setter's for each of the instance variables. note that (in addition to supporting setters with the same type as the instance variable) a setter is provided with takes a string argument -- this are provided so the xml document handler can set the ejb values using the strings it parses.
WITHOUT_CLASSIFICATION	check that the specified instance variables are valid
WITHOUT_CLASSIFICATION	check that the ejb "source" classes all exist
WITHOUT_CLASSIFICATION	the timestamp of the "newest" class timestamp for a given class file for the remote interface class file for the home interface class file for the ejb implementation class file for the ejb primary key class
WITHOUT_CLASSIFICATION	check the timestamp on the remote interface
WITHOUT_CLASSIFICATION	check the timestamp on the home interface
WITHOUT_CLASSIFICATION	check the timestamp of the primary key class
WITHOUT_CLASSIFICATION	list of all stubs & skels earliest mod time has each been found?
WITHOUT_CLASSIFICATION	loop through each stub/skeleton class that must be generated and determine (if all exist) which file has the most recent timestamp
WITHOUT_CLASSIFICATION	add each stub/skeleton class to the list of ejb files. note that each class is added even if it doesn't exist now.
WITHOUT_CLASSIFICATION	keep track of the oldest modification timestamp
WITHOUT_CLASSIFICATION	end of ejbinfo inner class
WITHOUT_CLASSIFICATION	fully qualified name of the java class name of the package for this class name of the class without the package
WITHOUT_CLASSIFICATION	end of classname inner class
WITHOUT_CLASSIFICATION	stream to read and redirect to standard output
WITHOUT_CLASSIFICATION	end of redirectoutput inner class
WITHOUT_CLASSIFICATION	add -file xxxxx to the commandline
WITHOUT_CLASSIFICATION	clientname = ejbjarfile+client.jar
WITHOUT_CLASSIFICATION	end of else
WITHOUT_CLASSIFICATION	ejb jar file
WITHOUT_CLASSIFICATION	ejb jar file
WITHOUT_CLASSIFICATION	client jar file
WITHOUT_CLASSIFICATION	client jar file
WITHOUT_CLASSIFICATION	have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	classpath
WITHOUT_CLASSIFICATION	-------------
WITHOUT_CLASSIFICATION	-------------
WITHOUT_CLASSIFICATION	genic options
WITHOUT_CLASSIFICATION	other options
WITHOUT_CLASSIFICATION	--------------------
WITHOUT_CLASSIFICATION	--------------------
WITHOUT_CLASSIFICATION	genic options setter
WITHOUT_CLASSIFICATION	-i- ignore all errors -vd
WITHOUT_CLASSIFICATION	-------------
WITHOUT_CLASSIFICATION	--------------------
WITHOUT_CLASSIFICATION	other options setter
WITHOUT_CLASSIFICATION	other methods
WITHOUT_CLASSIFICATION	the method deleteonexit() do not work because the directory is not empty
WITHOUT_CLASSIFICATION	create the generic jar first
WITHOUT_CLASSIFICATION	genic call on generic jar
WITHOUT_CLASSIFICATION	create the real jar
WITHOUT_CLASSIFICATION	jonas-specific descriptor deployment
WITHOUT_CLASSIFICATION	jonas-specific dd true if the jonas convention is used for the dd directory path of the ejb descriptor ejb descriptor file name filename appearing before name terminator filename appearing after the name terminator
WITHOUT_CLASSIFICATION	extract path info
WITHOUT_CLASSIFICATION	descriptorname is just a file without path
WITHOUT_CLASSIFICATION	check for the odd case where the terminator and/or filename extension aren't found. these will ensure "jonas-" appears at the end of the name and before the '.' (if present).
WITHOUT_CLASSIFICATION	no . found
WITHOUT_CLASSIFICATION	try to find jonas specific convention name
WITHOUT_CLASSIFICATION	else get standard basename
WITHOUT_CLASSIFICATION	jonasroot
WITHOUT_CLASSIFICATION	java policy file
WITHOUT_CLASSIFICATION	outputdir
WITHOUT_CLASSIFICATION	work around a bug of genic 2.5
WITHOUT_CLASSIFICATION	classpath
WITHOUT_CLASSIFICATION	try to create the classpath for the correct orb
WITHOUT_CLASSIFICATION	keepgenerated
WITHOUT_CLASSIFICATION	nocompil
WITHOUT_CLASSIFICATION	novalidation
WITHOUT_CLASSIFICATION	javac
WITHOUT_CLASSIFICATION	javacopts
WITHOUT_CLASSIFICATION	rmicopts
WITHOUT_CLASSIFICATION	secpropag
WITHOUT_CLASSIFICATION	verbose
WITHOUT_CLASSIFICATION	input file to process by genic
WITHOUT_CLASSIFICATION	calling genic task
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	the method deleteonexit() do not work because the directory is not empty
WITHOUT_CLASSIFICATION	basenameterminator not found the descriptor use the jonas naming convention ie [foo.xmljonas-foo.xml] and not [foo<basenameterminator>-ejb-jar.xml foo<basenameterminator>-jonas-ejb-jar.xml].
WITHOUT_CLASSIFICATION	jonasroot
WITHOUT_CLASSIFICATION	genic task genic class (3 are supported for various versions
WITHOUT_CLASSIFICATION	javac
WITHOUT_CLASSIFICATION	additionalargs
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	add the generated files to the ejbfiles
WITHOUT_CLASSIFICATION	orb
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	utilitary methods
WITHOUT_CLASSIFICATION	create the parser using whatever parser the system dictates
WITHOUT_CLASSIFICATION	loop through the files. each file represents one deployment descriptor and hence one bean in our model.
WITHOUT_CLASSIFICATION	process the deployment descriptor in each tool
WITHOUT_CLASSIFICATION	end of execute()
WITHOUT_CLASSIFICATION	resolve relative to project basedir
WITHOUT_CLASSIFICATION	get the filename into a string object
WITHOUT_CLASSIFICATION	get the value of the <ejb-name> tag. only the first occurrence.
WITHOUT_CLASSIFICATION	then the toplink deployment descriptor
WITHOUT_CLASSIFICATION	setup a naming standard here?.
WITHOUT_CLASSIFICATION	get all the files in the descriptor directory
WITHOUT_CLASSIFICATION	if we still can't find it complain
WITHOUT_CLASSIFICATION	ok properties file may be absolute
WITHOUT_CLASSIFICATION	do we need to regenerate the file
WITHOUT_CLASSIFICATION	weblogic.ejb.utils.ddcreator.main(args)
WITHOUT_CLASSIFICATION	there was an exception - run with no exit to get proper error
WITHOUT_CLASSIFICATION	weblogic.ejb.utils.ddcreator.main(newargs)
WITHOUT_CLASSIFICATION	attributes set by the ant build file
WITHOUT_CLASSIFICATION	create the zip entry and add it to the jar file
WITHOUT_CLASSIFICATION	add it to list of files in jar
WITHOUT_CLASSIFICATION	if it's a primitive wrapper then we shouldn't try and put it into the jar so ignore it.
WITHOUT_CLASSIFICATION	translate periods into path separators add .class to the name create the file object and add it to the hashtable.
WITHOUT_CLASSIFICATION	weblogic will throw an error if the deployment descriptor does not match the class files.
WITHOUT_CLASSIFICATION	create the file input stream and buffer everything over to the jar output stream
WITHOUT_CLASSIFICATION	close up the file input stream for the class file
WITHOUT_CLASSIFICATION	register any dtds supplied by the user
WITHOUT_CLASSIFICATION	none to register for generic
WITHOUT_CLASSIFICATION	retrive the files to be added to jar from ejb descriptor
WITHOUT_CLASSIFICATION	add any support classes specified in the build file
WITHOUT_CLASSIFICATION	determine the jar filename (without filename extension)
WITHOUT_CLASSIFICATION	first the regular deployment descriptor
WITHOUT_CLASSIFICATION	now the vendor specific files if any
WITHOUT_CLASSIFICATION	add any dependent files
WITHOUT_CLASSIFICATION	check to see if we need a build and start doing the work!
WITHOUT_CLASSIFICATION	log that we are going to build
WITHOUT_CLASSIFICATION	use helper method to write the jarfile
WITHOUT_CLASSIFICATION	log that the file is up to date
WITHOUT_CLASSIFICATION	parse the ejb deployment descriptor. while it may not look like much we use a saxparser and an inner class to get hold of all the classfile names for the descriptor.
WITHOUT_CLASSIFICATION	add in support classes if any
WITHOUT_CLASSIFICATION	work out what the base name is
WITHOUT_CLASSIFICATION	nothing to add for generic tool.
WITHOUT_CLASSIFICATION	clean the addedfiles set
WITHOUT_CLASSIFICATION	create the streams necessary to write the jarfile
WITHOUT_CLASSIFICATION	get and clean up innerclass name
WITHOUT_CLASSIFICATION	see if there are any inner classes for this class and add them in if there are
WITHOUT_CLASSIFICATION	loop through all the class files found and add them to the jar
WITHOUT_CLASSIFICATION	assertions take up space too
WITHOUT_CLASSIFICATION	link the file
WITHOUT_CLASSIFICATION	have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	trim the meta_inf\ off of the file name
WITHOUT_CLASSIFICATION	end of writejar
WITHOUT_CLASSIFICATION	only generate a new classloader if we have a classpath
WITHOUT_CLASSIFICATION	register all the known dtds
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	the the weblogic cmp deployment descriptor
WITHOUT_CLASSIFICATION	try to determine it from publicid
WITHOUT_CLASSIFICATION	try to use the compiler specified by build.compiler. right now we are just going to allow jikes
WITHOUT_CLASSIFICATION	need to create a generic jar first.
WITHOUT_CLASSIFICATION	only go forward if the generic and the weblogic file both exist
WITHOUT_CLASSIFICATION	open jar files
WITHOUT_CLASSIFICATION	get the list of generic jar entries
WITHOUT_CLASSIFICATION	get the list of weblogic jar entries
WITHOUT_CLASSIFICATION	cycle through generic and make sure its in weblogic
WITHOUT_CLASSIFICATION	file name/path match
WITHOUT_CLASSIFICATION	check files see if same
WITHOUT_CLASSIFICATION	file are different see if its an object or an interface
WITHOUT_CLASSIFICATION	interface changed rebuild jar.
WITHOUT_CLASSIFICATION	object class changed update it.
WITHOUT_CLASSIFICATION	is it the manifest. if so ignore it
WITHOUT_CLASSIFICATION	file other then class changed rebuild
WITHOUT_CLASSIFICATION	a file doesnt exist rebuild
WITHOUT_CLASSIFICATION	copy files from old weblogic jar
WITHOUT_CLASSIFICATION	use the entry from the generic jar
WITHOUT_CLASSIFICATION	use fle from original weblogic jar
WITHOUT_CLASSIFICATION	need to close files and perhaps rename output
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	if the implementation classes dont exist regenerate
WITHOUT_CLASSIFICATION	any problems - just regenerate
WITHOUT_CLASSIFICATION	create a java task to do the rebuild
WITHOUT_CLASSIFICATION	weblogic.ejbc.main(args)
WITHOUT_CLASSIFICATION	build and populate an instance of the ejbc utility
WITHOUT_CLASSIFICATION	have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	classpath
WITHOUT_CLASSIFICATION	attributes set by the ant build file
WITHOUT_CLASSIFICATION	get the filename of vendor specific descriptor
WITHOUT_CLASSIFICATION	trim the meta_inf\ off of the file name
WITHOUT_CLASSIFICATION	is the ser file or any of the source files newer then the class files. firstly find the oldest of the two class files.
WITHOUT_CLASSIFICATION	run with no exit for better reporting
WITHOUT_CLASSIFICATION	weblogic.ejbc.main(newargs)
WITHOUT_CLASSIFICATION	regardless of the name of the ias-specific ejb descriptor file it will written in the completed jar file as "ias-ejb-jar.xml". this is the naming convention implemented by ias.
WITHOUT_CLASSIFICATION	add cmp descriptors to the list of ejb files
WITHOUT_CLASSIFICATION	only calculate the descriptor name once
WITHOUT_CLASSIFICATION	directory path of the ejb descriptor filename appearing before name terminator filename appearing after the name terminator
WITHOUT_CLASSIFICATION	find the end of the standard descriptor's relative path
WITHOUT_CLASSIFICATION	check to see if the standard name is used (there's no basename)
WITHOUT_CLASSIFICATION	check for the odd case where the terminator and/or filename extension aren't found. these will ensure "ias-" appears at the end of the name and before the '.' (if present).
WITHOUT_CLASSIFICATION	choose the right vendor dd
WITHOUT_CLASSIFICATION	ejb jar file to verify
WITHOUT_CLASSIFICATION	debug ?
WITHOUT_CLASSIFICATION	set the classpath
WITHOUT_CLASSIFICATION	list file
WITHOUT_CLASSIFICATION	no tie classes
WITHOUT_CLASSIFICATION	root dir
WITHOUT_CLASSIFICATION	compiling order
WITHOUT_CLASSIFICATION	add the home class
WITHOUT_CLASSIFICATION	build the home classes list.
WITHOUT_CLASSIFICATION	remove .class extension
WITHOUT_CLASSIFICATION	add the gen files to the collection
WITHOUT_CLASSIFICATION	remove the .class
WITHOUT_CLASSIFICATION	get the extensions document
WITHOUT_CLASSIFICATION	we attempt to put in the map and schema files of cmp beans
WITHOUT_CLASSIFICATION	add the map file
WITHOUT_CLASSIFICATION	theres nothing else to see herekeep moving sonny
WITHOUT_CLASSIFICATION	set the options
WITHOUT_CLASSIFICATION	set the jvmargs
WITHOUT_CLASSIFICATION	set the environment variable
WITHOUT_CLASSIFICATION	check if list of files to check has been specified
WITHOUT_CLASSIFICATION	have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	open jar files
WITHOUT_CLASSIFICATION	get the list of generic jar entries
WITHOUT_CLASSIFICATION	file are different see if its an object or an interface
WITHOUT_CLASSIFICATION	interface changed rebuild jar.
WITHOUT_CLASSIFICATION	object class changed update it.
WITHOUT_CLASSIFICATION	is it the manifest. if so ignore it
WITHOUT_CLASSIFICATION	file other then class changed rebuild
WITHOUT_CLASSIFICATION	update with changed bean class
WITHOUT_CLASSIFICATION	use the entry from the generic jar
WITHOUT_CLASSIFICATION	register all the dtds both the ones that are known and any supplied by the user
WITHOUT_CLASSIFICATION	set the working directory
WITHOUT_CLASSIFICATION	set the java class name
WITHOUT_CLASSIFICATION	create the -generic.jar if required
WITHOUT_CLASSIFICATION	create the "undeployed" output .jar if required
WITHOUT_CLASSIFICATION	only go forward if the generic and the websphere file both exist
WITHOUT_CLASSIFICATION	get the list of websphere jar entries
WITHOUT_CLASSIFICATION	cycle through generic and make sure its in websphere
WITHOUT_CLASSIFICATION	file name/path match check files see if same
WITHOUT_CLASSIFICATION	a file doesn't exist rebuild
WITHOUT_CLASSIFICATION	copy files from old websphere jar
WITHOUT_CLASSIFICATION	use fle from original websphere jar
WITHOUT_CLASSIFICATION	specification name must match
WITHOUT_CLASSIFICATION	available specification version must be >= required
WITHOUT_CLASSIFICATION	implementation vendor id must match
WITHOUT_CLASSIFICATION	implementation vendor id must match
WITHOUT_CLASSIFICATION	implementation version must be >= required
WITHOUT_CLASSIFICATION	this available optional package satisfies the requirements
WITHOUT_CLASSIFICATION	this available optional package satisfies the requirements
WITHOUT_CLASSIFICATION	reset list of sections
WITHOUT_CLASSIFICATION	extension name must match
WITHOUT_CLASSIFICATION	add all the dependency data to manifest for dependencies
WITHOUT_CLASSIFICATION	check if list of files to check has been specified
WITHOUT_CLASSIFICATION	checkstylemembernamecheck off - bc
WITHOUT_CLASSIFICATION	checkstylemembernamecheck on
WITHOUT_CLASSIFICATION	change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	add all the dependency data to manifest for "optional" dependencies
WITHOUT_CLASSIFICATION	add in something like "extension-list javahelp java3d"
WITHOUT_CLASSIFICATION	all methods static
WITHOUT_CLASSIFICATION	gets the destination file
WITHOUT_CLASSIFICATION	validates url
WITHOUT_CLASSIFICATION	load default locale bundle files using default file encoding scheme.
WITHOUT_CLASSIFICATION	if all resource files associated with this bundle have been scanned for and still not able to find a single resrouce file throw exception
WITHOUT_CLASSIFICATION	so long as the line isn't empty and isn't a comment
WITHOUT_CLASSIFICATION	legal key-value separators are = and white space.
WITHOUT_CLASSIFICATION	only if we do have a key is there going to be a value
WITHOUT_CLASSIFICATION	handle line continuations if any
WITHOUT_CLASSIFICATION	has key already been loaded into resourcemap?
WITHOUT_CLASSIFICATION	make sure parent dirs exist else create them.
WITHOUT_CLASSIFICATION	check to see if dest file has to be recreated
WITHOUT_CLASSIFICATION	is there a starttoken and there is still stuff following the starttoken
WITHOUT_CLASSIFICATION	we found a starttoken is there an endtoken following? start at token+tokenlength because start and end token may be indentical
WITHOUT_CLASSIFICATION	grab the token
WITHOUT_CLASSIFICATION	if there is a white space or = or then it isn't to be treated as a valid key.
WITHOUT_CLASSIFICATION	find the replace string
WITHOUT_CLASSIFICATION	generate the new line
WITHOUT_CLASSIFICATION	set start position for next search
WITHOUT_CLASSIFICATION	find next starttoken
WITHOUT_CLASSIFICATION	deal with specified srcdir
WITHOUT_CLASSIFICATION	deal with the filesets
WITHOUT_CLASSIFICATION	remove any files that shouldn't be overwritten.
WITHOUT_CLASSIFICATION	check that the password has been set
WITHOUT_CLASSIFICATION	check for missing application on deploy & update
WITHOUT_CLASSIFICATION	check for missing source on deploy & update
WITHOUT_CLASSIFICATION	check for missing application on delete & undeploy
WITHOUT_CLASSIFICATION	keys to optional attributes
WITHOUT_CLASSIFICATION	constructs the "-url <url> -debug <action> <password>" portion of the commmand line
WITHOUT_CLASSIFICATION	/ place vendor specific tool creations here. /
WITHOUT_CLASSIFICATION	/ execute method /
WITHOUT_CLASSIFICATION	/ set/get methods /
WITHOUT_CLASSIFICATION	keys to optional attributes
WITHOUT_CLASSIFICATION	convert backslashes to slashes otherwise jjtree will put this as comments and this seems to confuse javacc
WITHOUT_CLASSIFICATION	required attributes
WITHOUT_CLASSIFICATION	required attributes
WITHOUT_CLASSIFICATION	required attributes
WITHOUT_CLASSIFICATION	load command line with optional attributes
WITHOUT_CLASSIFICATION	load command line with optional attributes
WITHOUT_CLASSIFICATION	load command line with optional attributes
WITHOUT_CLASSIFICATION	use the directory containing the target as the output directory
WITHOUT_CLASSIFICATION	use the directory containing the target as the output directory
WITHOUT_CLASSIFICATION	used by jpackage for javacc 3.x
WITHOUT_CLASSIFICATION	check the target is a file
WITHOUT_CLASSIFICATION	determine if the generated java file is up-to-date
WITHOUT_CLASSIFICATION	extract file's base-name
WITHOUT_CLASSIFICATION	replace the file's extension with '.java'
WITHOUT_CLASSIFICATION	change the directory
WITHOUT_CLASSIFICATION	this default has been good enough until ant 1.6.3 so stick with it
WITHOUT_CLASSIFICATION	first search for the "old" javah class in 1.4.2 tools.jar
WITHOUT_CLASSIFICATION	assume older than 1.4.2 tools.jar
WITHOUT_CLASSIFICATION	private commandlinejava commandline = new commandlinejava()
WITHOUT_CLASSIFICATION	required attributes deprecated! use this going forward
WITHOUT_CLASSIFICATION	optional attributes
WITHOUT_CLASSIFICATION	execute the test and get the return code
WITHOUT_CLASSIFICATION	if there is an error/failure and that it should halt stop everything otherwise just log a statement
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	int accessflags =
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	not necessary as jdepend would fail but why loose some time?
WITHOUT_CLASSIFICATION	this bit turns <exclude> child tags into patters to ignore
WITHOUT_CLASSIFICATION	jl comment extracted from junittask (and slightly modified)
WITHOUT_CLASSIFICATION	if not set auto-create the classpath from the project
WITHOUT_CLASSIFICATION	having a space between the file and its path causes commandline to add quotes around the argument thus making jdepend not taking it into account. thus we split it in two
WITHOUT_CLASSIFICATION	this is the new way - use classespath - code is the same for now
WITHOUT_CLASSIFICATION	read in all constant pool entries.
WITHOUT_CLASSIFICATION	verify this is a valid class file.
WITHOUT_CLASSIFICATION	int version =
WITHOUT_CLASSIFICATION	read the constant pool.
WITHOUT_CLASSIFICATION	read access flags and class index.
WITHOUT_CLASSIFICATION	be sure everything has been set.
WITHOUT_CLASSIFICATION	do the merge
WITHOUT_CLASSIFICATION	add this file to the addfiles vector and add it later at the top level of the output file.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	jlink output input1 inputn
WITHOUT_CLASSIFICATION	to maintain compatibility with the command-line version we will only add files to be merged.
WITHOUT_CLASSIFICATION	actually performs the merging of f into the output. f should be a zip or jar file.
WITHOUT_CLASSIFICATION	check to see that the file with name "name" exists.
WITHOUT_CLASSIFICATION	meta-inf not found in the name of the entry. go ahead and process it.
WITHOUT_CLASSIFICATION	weblogic jspc does not seem to work unless u explicitly set this does not take the classpath from the env. am i missing something about the java task??
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	necessary in the case where you add a entry that is not compressed.
WITHOUT_CLASSIFICATION	ignore manifest entries. they're bound to cause conflicts between files that are being merged. user should supply their own manifest file when doing the merge.
WITHOUT_CLASSIFICATION	it was the duplicate entry.
WITHOUT_CLASSIFICATION	adds contents of a directory to the output.
WITHOUT_CLASSIFICATION	gets the name of an entry in the file. this is the real name which for a class is the name of the package with the class name appended.
WITHOUT_CLASSIFICATION	see if the file is in fact a .class file and determine its actual name.
WITHOUT_CLASSIFICATION	adds a file to the output stream.
WITHOUT_CLASSIFICATION	make sure file exists
WITHOUT_CLASSIFICATION	a convenience method that several other methods might call.
WITHOUT_CLASSIFICATION	this entry already exists. so go with the first one.
WITHOUT_CLASSIFICATION	a method that does the work on a given entry in a mergefile. the big deal is to set the right parameters in the zipentry on the output stream.
WITHOUT_CLASSIFICATION	note don't need to specify size or crc for compressed files.
WITHOUT_CLASSIFICATION	use the systemclasspath as well to include the ant jar
WITHOUT_CLASSIFICATION	necessary in the case where you add a entry that is not compressed.
WITHOUT_CLASSIFICATION	todo test on other versions of weblogic todo add more attributes to the task to take care of all jspc options todo test on unix
WITHOUT_CLASSIFICATION	private string compilerpath fully qualified name for the compiler executable
WITHOUT_CLASSIFICATION	get all the files in the sourcedirectory
WITHOUT_CLASSIFICATION	weblogic.jspc calls system.exit() have to fork therefore takes loads of time can pass directories at a time (.jsp) but easily runs out of memory on hefty dirs (even on a sun)
WITHOUT_CLASSIFICATION	apply transformation
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstyleconstantnamecheck off - bc
WITHOUT_CLASSIFICATION	checkstyleconstantnamecheck on
WITHOUT_CLASSIFICATION	now we need to populate the compiler adapter
WITHOUT_CLASSIFICATION	finally lets execute the compiler!!
WITHOUT_CLASSIFICATION	create an instance of the compiler redirecting output to the project log
WITHOUT_CLASSIFICATION	compile the source files
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	demand create vector of filesets
WITHOUT_CLASSIFICATION	make sure that we've got a destdir
WITHOUT_CLASSIFICATION	bind to a compiler
WITHOUT_CLASSIFICATION	if we are a webapp hand off to the compiler which had better handle it
WITHOUT_CLASSIFICATION	make sure that we've got a srcdir
WITHOUT_CLASSIFICATION	if the compiler does its own dependency stuff we just call it right now
WITHOUT_CLASSIFICATION	the remainder of this method is only for compilers that need their dependency work done
WITHOUT_CLASSIFICATION	scan source directories and dest directory to build up both copy lists and compile lists
WITHOUT_CLASSIFICATION	string srcfiledir=srcfile.getparent()
WITHOUT_CLASSIFICATION	end inner class
WITHOUT_CLASSIFICATION	since we don't mangle extensions like the servlet does we need to check for keywords as class names
WITHOUT_CLASSIFICATION	first char is more restrictive than the rest
WITHOUT_CLASSIFICATION	this is the rest
WITHOUT_CLASSIFICATION	if the first char is not a start of java identifier or is _ prepend a '_'.
WITHOUT_CLASSIFICATION	we are forking here to be sure that if jspc calls system.exit() it doesn't halt the build
WITHOUT_CLASSIFICATION	tomcat4.0 gets the old mangler
WITHOUT_CLASSIFICATION	tomcat4.1 gets the new one
WITHOUT_CLASSIFICATION	for all other possibilities
WITHOUT_CLASSIFICATION	append the err and output streams to the log
WITHOUT_CLASSIFICATION	acrobatic cast.
WITHOUT_CLASSIFICATION	set the destination directory relative from the project if needed.
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	sanity check
WITHOUT_CLASSIFICATION	plain impossible
WITHOUT_CLASSIFICATION	quick return - no output do nothing.
WITHOUT_CLASSIFICATION	append the err and output streams to the log
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	if style dir is not specified we have to retrieve the stylesheet from the classloader
WITHOUT_CLASSIFICATION	if we are here then the style dir is here and we should read the stylesheet from the filesystem
WITHOUT_CLASSIFICATION	xalan 2
WITHOUT_CLASSIFICATION	xalan xsltc
WITHOUT_CLASSIFICATION	jdk 1.5 xsltc
WITHOUT_CLASSIFICATION	must be plain ensured by typeattribute
WITHOUT_CLASSIFICATION	pre junit 3.7
WITHOUT_CLASSIFICATION	can be null if an error occurred in setup
WITHOUT_CLASSIFICATION	plainjunitresultformatter
WITHOUT_CLASSIFICATION	snapshot of the system properties
WITHOUT_CLASSIFICATION	add the timestamp
WITHOUT_CLASSIFICATION	and the hostname.
WITHOUT_CLASSIFICATION	output properties
WITHOUT_CLASSIFICATION	a testsuite can contain tests from multiple classes even tests with the same name - disambiguate them.
WITHOUT_CLASSIFICATION	xmljunitresultformatter
WITHOUT_CLASSIFICATION	do we send output to the formatters ?
WITHOUT_CLASSIFICATION	attributes for basetest
WITHOUT_CLASSIFICATION	forceloadclass is not convenient here since it would not properly deal with inner classes of these classes.
WITHOUT_CLASSIFICATION	forkmode.getvalue().equals(forkmode.per_batch)
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	execute the test and get the return code
WITHOUT_CLASSIFICATION	execute the test and get the return code
WITHOUT_CLASSIFICATION	null watchdog means no timeout you'd better not check with null
WITHOUT_CLASSIFICATION	if there is an error/failure and that it should halt stop everything otherwise just log a statement
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	set the default values if not specified @todo should be moved to the test class instead.
WITHOUT_CLASSIFICATION	create a temporary file to pass the test cases to run to the runner (one test case per line)
WITHOUT_CLASSIFICATION	#31885
WITHOUT_CLASSIFICATION	ignored.
WITHOUT_CLASSIFICATION	in vm is not very nice since it could probably hang the whole build. imho this method should be avoided and it would be best to remove it in future versions. tbd. (sba)
WITHOUT_CLASSIFICATION	make sure the test will be accepted as a testcase
WITHOUT_CLASSIFICATION	make sure the test annotation are accepted
WITHOUT_CLASSIFICATION	will cause trouble in jdk 1.1 if omitted
WITHOUT_CLASSIFICATION	local copy since logoutputstream.task is private
WITHOUT_CLASSIFICATION	this one is here because the changes to support resourcecollections have broken magic's junittesttask. the task adds a fileset to a batchtest instance using the java api and without telling the fileset about its project instance. the original code would pass in project on the call to getdirectoryscanner - which is now hidden deep into resources.iterator() and not reachable.
WITHOUT_CLASSIFICATION	dummy output for the framed report it's all done by extension
WITHOUT_CLASSIFICATION	conforming to nodelist interface
WITHOUT_CLASSIFICATION	this should never happen
WITHOUT_CLASSIFICATION	write the document
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	----- from now the methods are all related to dom tree manipulation
WITHOUT_CLASSIFICATION	writers do not throw exceptions so check for them.
WITHOUT_CLASSIFICATION	create the dom tree
WITHOUT_CLASSIFICATION	get all files and add them to the document
WITHOUT_CLASSIFICATION	make sure that this is really a testsuite.
WITHOUT_CLASSIFICATION	wrong root element name issue a warning.
WITHOUT_CLASSIFICATION	a testcase might have failed and write a zero-length document it has already failed but hey. mm. just put a warning
WITHOUT_CLASSIFICATION	a missing . might imply no package at all. don't get fooled.
WITHOUT_CLASSIFICATION	modify the name attribute and set the package
WITHOUT_CLASSIFICATION	don't filter assertionfailure
WITHOUT_CLASSIFICATION	junit 4 support
WITHOUT_CLASSIFICATION	check for a static suite method first even when using junit 4
WITHOUT_CLASSIFICATION	check if there is a suite method
WITHOUT_CLASSIFICATION	no appropriate suite method found. we don't report any error here since it might be perfectly normal.
WITHOUT_CLASSIFICATION	check for jdk 5 first. will not help on jdk 1.4 if only junit-4.0.jar in cp because in that case linkage of whole task will already have failed! but will help if cp has junit-3.8.2.jarjunit-4.0.jar.
WITHOUT_CLASSIFICATION	in that case first c.fn will fail with cnfe and we will avoid unsupportedclassversionerror.
WITHOUT_CLASSIFICATION	ok fall back to junit 3.
WITHOUT_CLASSIFICATION	let's use it!
WITHOUT_CLASSIFICATION	use junit 3.
WITHOUT_CLASSIFICATION	try to extract a test suite automatically this will generate warnings if the class is no suitable test
WITHOUT_CLASSIFICATION	had an exception constructing suite
WITHOUT_CLASSIFICATION	add/overlay system properties on the properties from the ant project
WITHOUT_CLASSIFICATION	return the stack unfiltered
WITHOUT_CLASSIFICATION	not strictly necessary but probably desirable. junit 4-specific test guis will show just "failures". but ant's output shows "failures" vs. "errors". we would prefer to show "failure" for things that logically are.
WITHOUT_CLASSIFICATION	to compile on pre-jdk 4 (even though this should always succeed)
WITHOUT_CLASSIFICATION	pre-3.4
WITHOUT_CLASSIFICATION	junittestrunner
WITHOUT_CLASSIFICATION	rethrow
WITHOUT_CLASSIFICATION	wrap
WITHOUT_CLASSIFICATION	sorted by newest kaffe version first
WITHOUT_CLASSIFICATION	pre kaffe 1.1.5
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	we are going to scan everything anyway
WITHOUT_CLASSIFICATION	only scan directories that can include matched files or directories
WITHOUT_CLASSIFICATION	avoid double scanning of directories can only happen in fast mode
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	this default has been good enough until ant 1.6.3 so stick with it
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	rats. should not happen
WITHOUT_CLASSIFICATION	otherwise executejava has thrown an exception
WITHOUT_CLASSIFICATION	no includes supplied so set it to 'matches all'
WITHOUT_CLASSIFICATION	always start from the current ftp working dir
WITHOUT_CLASSIFICATION	put in the newroots vector the include patterns without wildcard tokens
WITHOUT_CLASSIFICATION	construct it
WITHOUT_CLASSIFICATION	cool case we do not need to scan all the subdirs in the relative path
WITHOUT_CLASSIFICATION	this should not happen except if parent has been deleted by another process
WITHOUT_CLASSIFICATION	we are already in the right path so the second parameter is false
WITHOUT_CLASSIFICATION	hit a hidden file assume not a symlink
WITHOUT_CLASSIFICATION	getrelativepath also finds about symlinks
WITHOUT_CLASSIFICATION	warn that selectors are not supported
WITHOUT_CLASSIFICATION	if we are doing a listing we need the output stream created now.
WITHOUT_CLASSIFICATION	get files from filesets
WITHOUT_CLASSIFICATION	find first non cached dir
WITHOUT_CLASSIFICATION	check if dir exists by trying to change into it.
WITHOUT_CLASSIFICATION	could not change to it - try to create it
WITHOUT_CLASSIFICATION	create a local temporary file
WITHOUT_CLASSIFICATION	see if we should issue a chmod command
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	delegate the deletion of the local temp file to the delete task because of race conditions occuring on windows
WITHOUT_CLASSIFICATION	for microsoft's ftp-service an array with length 0 is returned if configured to return listings in "ms-dos"-format
WITHOUT_CLASSIFICATION	if we are sending files then assume out of date. if we are getting files then throw an error
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	codes 521 550 and 553 can be produced by ftp servers to indicate that an attempt to create a directory has failed because the directory already exists.
WITHOUT_CLASSIFICATION	if an initial command was configured then send it. some ftp servers offer different modes of operation e.g. switching between a unix file system mode and a legacy file system.
WITHOUT_CLASSIFICATION	for a unix ftp server you can set the default mask for all files created.
WITHOUT_CLASSIFICATION	if the action is mk_dir then the specified remote directory is the directory to create.
WITHOUT_CLASSIFICATION	in this case we want to find how much time span there is between local and remote
WITHOUT_CLASSIFICATION	socks
WITHOUT_CLASSIFICATION	this may be a java1.4 thingy only
WITHOUT_CLASSIFICATION	simple one-shot execution
WITHOUT_CLASSIFICATION	need nested read/write elements
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	here we'd parse the output from change -o into submit -i in order to support default change.
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc todo if dealing with default cl need to parse out <enter description here>
WITHOUT_CLASSIFICATION	-n
WITHOUT_CLASSIFICATION	remove any non-numerical chars - should leave the change number
WITHOUT_CLASSIFICATION	this type of output might happen change 18 renamed change 20 and submitted.
WITHOUT_CLASSIFICATION	match "" for begining of depot filespec
WITHOUT_CLASSIFICATION	we need to escape the description in case there are /
WITHOUT_CLASSIFICATION	note kirk@radik.com 04-april-2001 -- if you put in the -s you have to start running through regular expressions here. much easier to just not include the scripting information than to try to add it and strip it later.
WITHOUT_CLASSIFICATION	eof
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc input output error checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	here we can either revert any unchanged files in a changelist or any files regardless of whether they have been changed or not the whole process also accepts a p4 filespec
WITHOUT_CLASSIFICATION	-a
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	-n
WITHOUT_CLASSIFICATION	-n
WITHOUT_CLASSIFICATION	-f
WITHOUT_CLASSIFICATION	-t
WITHOUT_CLASSIFICATION	-v
WITHOUT_CLASSIFICATION	we have to create a unlocked label first
WITHOUT_CLASSIFICATION	now lock if required
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc checkstylemembernamecheck off - bc
WITHOUT_CLASSIFICATION	checkstylemembernamecheck on checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	massage pcli lvf output transforming '\' to '/' so get command works appropriately
WITHOUT_CLASSIFICATION	read back the label spec from perforce replace options submit back to perforce
WITHOUT_CLASSIFICATION	when running labelsync if view elements are in sync perforce produces a line of output looking like this one error depot/file2 - label in sync.
WITHOUT_CLASSIFICATION	sync says "error" when a file is up-to-date
WITHOUT_CLASSIFICATION	sometimes there's "info1
WITHOUT_CLASSIFICATION	p4 runtime directives
WITHOUT_CLASSIFICATION	perforce task directives
WITHOUT_CLASSIFICATION	p4 g-opts and cmd opts (rtfm)
WITHOUT_CLASSIFICATION	setters called by ant
WITHOUT_CLASSIFICATION	get default p4 settings from environment - mark would have done something cool with introspection here..-)
WITHOUT_CLASSIFICATION	reset error flags before executing the command
WITHOUT_CLASSIFICATION	check api for these - it's how cvs does it
WITHOUT_CLASSIFICATION	constant for the pcli listversionedfiles recursive i a format "get" understands
WITHOUT_CLASSIFICATION	private static final string pcli_lvf_args = "lvf -z -aw"
WITHOUT_CLASSIFICATION	check workspace exists launch pcli listversionedfiles -z -aw capture output build the command line from what we got the format is
WITHOUT_CLASSIFICATION	default pvcs project is "/"
WITHOUT_CLASSIFICATION	create folders in workspace
WITHOUT_CLASSIFICATION	launch get on output captured from pcli lvf
WITHOUT_CLASSIFICATION	extract the name of the directory from the filename
WITHOUT_CLASSIFICATION	change these through their get and set methods.
WITHOUT_CLASSIFICATION	these fields deal with includes and excludes
WITHOUT_CLASSIFICATION	check all of the properties that are required.
WITHOUT_CLASSIFICATION	check to see if the target directory exists.
WITHOUT_CLASSIFICATION	search the items on this server.
WITHOUT_CLASSIFICATION	disconnect from the server.
WITHOUT_CLASSIFICATION	tell how many files were checked out.
WITHOUT_CLASSIFICATION	optional logon() connects if necessary.
WITHOUT_CLASSIFICATION	logon using specified user name and password.
WITHOUT_CLASSIFICATION	we always display the itemid (object_id) and primary descriptor.
WITHOUT_CLASSIFICATION	if a working directory was specified then add it to the command line
WITHOUT_CLASSIFICATION	checking for "\ or "/ or "x\
WITHOUT_CLASSIFICATION	if we find a "file" attribute then act on a file otherwise act on a project
WITHOUT_CLASSIFICATION	after you are all of the properties are ok do your thing with starteam. if there are any kind of exceptions then send the message to the project log.
WITHOUT_CLASSIFICATION	for performance reasons it is important to pre-fetch all the properties we'll need for all the items we'll be searching.
WITHOUT_CLASSIFICATION	we'll need this item type's primary descriptor.
WITHOUT_CLASSIFICATION	does this item type have a secondary descriptor? if so we'll need it.
WITHOUT_CLASSIFICATION	now build an array of the property names.
WITHOUT_CLASSIFICATION	pre-fetch the item properties and cache them.
WITHOUT_CLASSIFICATION	now search for items in the selected folder.
WITHOUT_CLASSIFICATION	free up the memory used by the cached items.
WITHOUT_CLASSIFICATION	convert whatever separator char is in starteam to that of the target system.
WITHOUT_CLASSIFICATION	if it ends with separator then strip it off
WITHOUT_CLASSIFICATION	replace the projectname in the file's absolute path to the viewname. this makes the root target of a checkout operation equal to targetfolder + dirname
WITHOUT_CLASSIFICATION	only want to do this the first time
WITHOUT_CLASSIFICATION	process all items in this folder.
WITHOUT_CLASSIFICATION	process all subfolders recursively if recursion is on.
WITHOUT_CLASSIFICATION	get descriptors for this item type.
WITHOUT_CLASSIFICATION	verbose mode only
WITHOUT_CLASSIFICATION	show folder only if changed.
WITHOUT_CLASSIFICATION	show if the file is locked.
WITHOUT_CLASSIFICATION	end verbose only
WITHOUT_CLASSIFICATION	add -command checkoutfile to the commandline
WITHOUT_CLASSIFICATION	finally show the item properties always show the itemid.
WITHOUT_CLASSIFICATION	show the primary descriptor. there should always be one.
WITHOUT_CLASSIFICATION	show the secondary descriptor if there is one. some item types have one some don't.
WITHOUT_CLASSIFICATION	change the item to be checked out to a starteam file.
WITHOUT_CLASSIFICATION	the local file name is simply the local target path (tgt) which has been passed recursively down from the top of the tree with the item's name appended.
WITHOUT_CLASSIFICATION	begin set and get methods
WITHOUT_CLASSIFICATION	begin filter getters and setters
WITHOUT_CLASSIFICATION	check if need to set the loader
WITHOUT_CLASSIFICATION	now create the scriptrunner
WITHOUT_CLASSIFICATION	find the script repository - it is stored in the project
WITHOUT_CLASSIFICATION	try the context classloader classloader loader = thread.currentthread().getcontextclassloader()
WITHOUT_CLASSIFICATION	if we find a "file" attribute then act on a file otherwise act on a project
WITHOUT_CLASSIFICATION	add -command checkinfile to the commandline
WITHOUT_CLASSIFICATION	add -file xxxxx to the commandline
WITHOUT_CLASSIFICATION	add -file xxxxx to the commandline
WITHOUT_CLASSIFICATION	add -command checkinproject to the commandline
WITHOUT_CLASSIFICATION	look for a recursive option
WITHOUT_CLASSIFICATION	look for a recursive option
WITHOUT_CLASSIFICATION	look for a comment
WITHOUT_CLASSIFICATION	soscmd command options
WITHOUT_CLASSIFICATION	soscmd option flags
WITHOUT_CLASSIFICATION	add -command getfile to the commandline
WITHOUT_CLASSIFICATION	look for a version attribute
WITHOUT_CLASSIFICATION	add -revision xxxxx to the commandline
WITHOUT_CLASSIFICATION	add -command getproject to the commandline
WITHOUT_CLASSIFICATION	look for a label option
WITHOUT_CLASSIFICATION	make sure localdir exists create it if it doesn't
WITHOUT_CLASSIFICATION	this is the exit status
WITHOUT_CLASSIFICATION	use the os vm launcher so we get environment variables
WITHOUT_CLASSIFICATION	get the path to the soscmd(.exe)
WITHOUT_CLASSIFICATION	sos server address is required
WITHOUT_CLASSIFICATION	vss info is required
WITHOUT_CLASSIFICATION	vss project is required
WITHOUT_CLASSIFICATION	-verbose
WITHOUT_CLASSIFICATION	disable compression
WITHOUT_CLASSIFICATION	if -soshome was not specified then we can look for nocache
WITHOUT_CLASSIFICATION	ignore exception
WITHOUT_CLASSIFICATION	look for a recursive option
WITHOUT_CLASSIFICATION	look for a comment
WITHOUT_CLASSIFICATION	-verbose
WITHOUT_CLASSIFICATION	the sos class knows that the sos server needs the password flag even if there is no password so we send a " "
WITHOUT_CLASSIFICATION	add -command checkoutproject to the commandline
WITHOUT_CLASSIFICATION	add -command addlabel to the commandline
WITHOUT_CLASSIFICATION	a label is required
WITHOUT_CLASSIFICATION	get the list of files in the dir
WITHOUT_CLASSIFICATION	get a random number between 0 and the number of files
WITHOUT_CLASSIFICATION	set the source to the file at that location
WITHOUT_CLASSIFICATION	empty block
WITHOUT_CLASSIFICATION	system.exit(0)
WITHOUT_CLASSIFICATION	build successfull!
WITHOUT_CLASSIFICATION	abstractsshmessage
WITHOUT_CLASSIFICATION	dir does not exist.
WITHOUT_CLASSIFICATION	only track progress for files larger than 100kb in verbose mode
WITHOUT_CLASSIFICATION	get i/o streams for remote scp
WITHOUT_CLASSIFICATION	this indicates an error.
WITHOUT_CLASSIFICATION	appears that the next token is not used and it's zero.
WITHOUT_CLASSIFICATION	read a content of lfile
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	didn't receive any response
WITHOUT_CLASSIFICATION	execute the command
WITHOUT_CLASSIFICATION	wait for it to finish
WITHOUT_CLASSIFICATION	ran out of time
WITHOUT_CLASSIFICATION	completed successfully
WITHOUT_CLASSIFICATION	userpassword@host/path notation
WITHOUT_CLASSIFICATION	no password will require passphrase
WITHOUT_CLASSIFICATION	skip
WITHOUT_CLASSIFICATION	send "c0644 filesize filename" where filename should not include '/'
WITHOUT_CLASSIFICATION	send a content of lfile
WITHOUT_CLASSIFICATION	c0644 filesize filename - header for a regular file t time 0 time 0\n - present if perserve time. d directory - this is the header for a directory.
WITHOUT_CLASSIFICATION	swallow if there was an error before so that original error will be passed up
WITHOUT_CLASSIFICATION	since filesize keeps on decreasing we have to store the initial filesize
WITHOUT_CLASSIFICATION	b may be 0 for success 1 for error 2 for fatal error
WITHOUT_CLASSIFICATION	like <exec> like <exec> like <exec>
WITHOUT_CLASSIFICATION	log(message project.msg_debug)
WITHOUT_CLASSIFICATION	we want this to have a false default unlike for checkin.
WITHOUT_CLASSIFICATION	if the file doesn't pass the include/exclude tests skip it.
WITHOUT_CLASSIFICATION	we try to update the status once to give starteam another chance.
WITHOUT_CLASSIFICATION	once we find a folder that isn't in the repository we know we can add it.
WITHOUT_CLASSIFICATION	once we find a folder that isn't in the repository we know we can add it.
WITHOUT_CLASSIFICATION	if a label has been supplied use it to configure the view otherwise use current view
WITHOUT_CLASSIFICATION	if a date has been supplied use a view configured to the date.
WITHOUT_CLASSIFICATION	if a date has been supplied use a view configured to the date.
WITHOUT_CLASSIFICATION	otherwise use this view configured as the tip.
WITHOUT_CLASSIFICATION	otherwise use this view configured as the tip.
WITHOUT_CLASSIFICATION	for all files in this folder we need to check if there have been modifications.
WITHOUT_CLASSIFICATION	now we recursively call this method on all sub folders in this folder unless recursive attribute is off.
WITHOUT_CLASSIFICATION	handle the files so they appear first
WITHOUT_CLASSIFICATION	now do it again for the directories so they appear last.
WITHOUT_CLASSIFICATION	create the new label and update the repository
WITHOUT_CLASSIFICATION	write a properties file in each directory
WITHOUT_CLASSIFICATION	create an instance of the rmic redirecting output to the project log
WITHOUT_CLASSIFICATION	checkstylemethodnamecheck off - bc
WITHOUT_CLASSIFICATION	once we find a folder that isn't in the repository we know we can add it.
WITHOUT_CLASSIFICATION	attributes settable from ant.
WITHOUT_CLASSIFICATION	if a label has been supplied and it is a view label use it to configure the view
WITHOUT_CLASSIFICATION	if a label has been supplied and it is a revision label use the raw the view as the snapshot
WITHOUT_CLASSIFICATION	prune away any files not belonging to the revision label this is one ugly api from starteam sdk
WITHOUT_CLASSIFICATION	pr 31965 says that it can return null
WITHOUT_CLASSIFICATION	no root local mapping has been specified.
WITHOUT_CLASSIFICATION	inspect everything in the root folder and then recursively
WITHOUT_CLASSIFICATION	tell user what he is doing
WITHOUT_CLASSIFICATION	set the local folder.
WITHOUT_CLASSIFICATION	set the local folder.
WITHOUT_CLASSIFICATION	attributes
WITHOUT_CLASSIFICATION	create a hashtable to group them by parent directory
WITHOUT_CLASSIFICATION	else lnk exists do nothing
WITHOUT_CLASSIFICATION	get an iterator of file objects representing links (canonical)
WITHOUT_CLASSIFICATION	iterate through the names get the matching values
WITHOUT_CLASSIFICATION	/ get/set methods. setters of course are where ant user passes in values. /
WITHOUT_CLASSIFICATION	/ include-exclude processing /
WITHOUT_CLASSIFICATION	find the starteam folder specified to be the root of the operation. throw if it can't be found.
WITHOUT_CLASSIFICATION	either use default path or root local mapping which is now embedded in the root folder
WITHOUT_CLASSIFICATION	/ get/set methods. setters of course are where ant user passes in values. /
WITHOUT_CLASSIFICATION	fill up a properties object with link and resource names
WITHOUT_CLASSIFICATION	find the resource of the existing link
WITHOUT_CLASSIFICATION	rename the resource thus breaking the link
WITHOUT_CLASSIFICATION	delete the (now) broken link
WITHOUT_CLASSIFICATION	return the resource to its original name
WITHOUT_CLASSIFICATION	loop through the supplied file sets
WITHOUT_CLASSIFICATION	load included files as properties files
WITHOUT_CLASSIFICATION	-gl
WITHOUT_CLASSIFICATION	-gl
WITHOUT_CLASSIFICATION	-i- or -i-y or -i-n
WITHOUT_CLASSIFICATION	-i- or -i-y or -i-n
WITHOUT_CLASSIFICATION	-o-
WITHOUT_CLASSIFICATION	-r
WITHOUT_CLASSIFICATION	-r
WITHOUT_CLASSIFICATION	-v
WITHOUT_CLASSIFICATION	-w
WITHOUT_CLASSIFICATION	-w
WITHOUT_CLASSIFICATION	-y
WITHOUT_CLASSIFICATION	-y
WITHOUT_CLASSIFICATION	-g
WITHOUT_CLASSIFICATION	-gws or -gwr
WITHOUT_CLASSIFICATION	set to empty str if no local path return
WITHOUT_CLASSIFICATION	make sure m_localdir exists create it if it doesn't
WITHOUT_CLASSIFICATION	use the os launcher so we get environment variables
WITHOUT_CLASSIFICATION	vss items
WITHOUT_CLASSIFICATION	vss items
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-l specify the new label on the command line (instead of being prompted)
WITHOUT_CLASSIFICATION	-v label an existing file or project version
WITHOUT_CLASSIFICATION	first off make sure that we've got a command and a vssdir
WITHOUT_CLASSIFICATION	pre kaffe 1.1.5
WITHOUT_CLASSIFICATION	-gl
WITHOUT_CLASSIFICATION	write the contents to our master list of links this method assumes that all links are defined in terms of absolute paths or paths relative to the working directory
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss get vss items [-g] [-h] [-i-] [-n] [-o] [-r] [-v] [-w] [-y] [-?] as specified in the ss.exe help
WITHOUT_CLASSIFICATION	-i- or -i-y or -i-n
WITHOUT_CLASSIFICATION	-i- or -i-y or -i-n
WITHOUT_CLASSIFICATION	-o-
WITHOUT_CLASSIFICATION	-r
WITHOUT_CLASSIFICATION	-r
WITHOUT_CLASSIFICATION	-r
WITHOUT_CLASSIFICATION	-v
WITHOUT_CLASSIFICATION	-w
WITHOUT_CLASSIFICATION	-y
WITHOUT_CLASSIFICATION	-y
WITHOUT_CLASSIFICATION	-y
WITHOUT_CLASSIFICATION	-g
WITHOUT_CLASSIFICATION	-gws or -gwr
WITHOUT_CLASSIFICATION	vss items
WITHOUT_CLASSIFICATION	use getshortlabel() so labels longer then 30 char are truncated and the user is warned
WITHOUT_CLASSIFICATION	ss.exe exits with '100' when files have been skipped so we have to ignore the failure
WITHOUT_CLASSIFICATION	if location of ss.ini is specified we need to set the environment-variable ssdir to this value
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss label vss items [-c] [-h] [-i-] [-llabel] [-n] [-o] [-v] [-y] [-?] as specified in the ss.exe help
WITHOUT_CLASSIFICATION	vss items
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	first off make sure that we've got a command and a vssdir
WITHOUT_CLASSIFICATION	first off make sure that we've got a command and a vssdir
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss checkin vss items [-h] [-c] [-i-] [-n] [-o] [-r] [-w] [-y] [-?] as specified in the ss.exe help
WITHOUT_CLASSIFICATION	-vl
WITHOUT_CLASSIFICATION	-b / -d / -f-
WITHOUT_CLASSIFICATION	-o
WITHOUT_CLASSIFICATION	first off make sure that we've got a command and a localpath
WITHOUT_CLASSIFICATION	-g-
WITHOUT_CLASSIFICATION	first off make sure that we've got a command and a vssdir
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss create vss items [-c] [-h] [-i-] [-n] [-o] [-s] [-y] [-?] as specified in the ss.exe help
WITHOUT_CLASSIFICATION	pre kaffe 1.1.2
WITHOUT_CLASSIFICATION	only supported since kaffe 1.1.2
WITHOUT_CLASSIFICATION	handle the many different stub options.
WITHOUT_CLASSIFICATION	default is compatibility
WITHOUT_CLASSIFICATION	anything else
WITHOUT_CLASSIFICATION	do nothing with the value? or go -v+stubversion??
WITHOUT_CLASSIFICATION	set the non-null stuboption
WITHOUT_CLASSIFICATION	we know that name.endswith(".class")
WITHOUT_CLASSIFICATION	combine the build classpath with the system classpath in an order determined by the value of build.sysclasspath
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss cp vss items [-h] [-i-] [-y] [-?] as specified in the ss.exe help
WITHOUT_CLASSIFICATION	for java1.5+ we generate compatible stubs that is unless the caller asked for idl or iiop support.
WITHOUT_CLASSIFICATION	jrmp with simple naming convention
WITHOUT_CLASSIFICATION	i know this is not necessary but i prefer it explicit (sb)
WITHOUT_CLASSIFICATION	no package
WITHOUT_CLASSIFICATION	no package
WITHOUT_CLASSIFICATION	only stub no tie
WITHOUT_CLASSIFICATION	stub is derived from implementation tie from interface name.
WITHOUT_CLASSIFICATION	rely on rmic being on the path
WITHOUT_CLASSIFICATION	set up the args
WITHOUT_CLASSIFICATION	create an instance of the rmic
WITHOUT_CLASSIFICATION	convert to lower case in the english locale
WITHOUT_CLASSIFICATION	handle default specially by choosing the sun or kaffe compiler
WITHOUT_CLASSIFICATION	no match? ask for the non-lower-cased type
WITHOUT_CLASSIFICATION	do the system assertions
WITHOUT_CLASSIFICATION	do the system assertions
WITHOUT_CLASSIFICATION	do the system assertions
WITHOUT_CLASSIFICATION	now any inner assertions
WITHOUT_CLASSIFICATION	now any inner assertions
WITHOUT_CLASSIFICATION	now any inner assertions
WITHOUT_CLASSIFICATION	catch invalidness
WITHOUT_CLASSIFICATION	see if it is a package or a class
WITHOUT_CLASSIFICATION	packages get a prefix
WITHOUT_CLASSIFICATION	append the suffix if not there already
WITHOUT_CLASSIFICATION	classes just get the classname
WITHOUT_CLASSIFICATION	-- fields ----------------------------------------------------------------
WITHOUT_CLASSIFICATION	-- methods ---------------------------------------------------------------
WITHOUT_CLASSIFICATION	add all nested elements to our catalog
WITHOUT_CLASSIFICATION	ignore exception
WITHOUT_CLASSIFICATION	new behavior for delayed task creation. description will be evaluated in project.getdescription()
WITHOUT_CLASSIFICATION	append the classpath of the nested catalog
WITHOUT_CLASSIFICATION	append the catalog path of the nested catalog
WITHOUT_CLASSIFICATION	at this point we are probably in failure mode but try to use the bare uri as a last gasp
WITHOUT_CLASSIFICATION	the apache resolver is present - need to check if it can be seen by the catalog resolver class. start by getting the actual loader
WITHOUT_CLASSIFICATION	load the base class through this loader.
WITHOUT_CLASSIFICATION	and find its actual loader
WITHOUT_CLASSIFICATION	success! the xml-commons resolver library is available so use it.
WITHOUT_CLASSIFICATION	the xml-commons resolver library is not available so we can't use it.
WITHOUT_CLASSIFICATION	the following line seems to be necessary on windows under jdk 1.2
WITHOUT_CLASSIFICATION	the resourcelocation may specify a relative path for its location attribute. this is resolved using the appropriate base.
WITHOUT_CLASSIFICATION	for classpath lookup we ignore the base directory
WITHOUT_CLASSIFICATION	the resourcelocation may specify a relative url for its location attribute. this is resolved using the appropriate base.
WITHOUT_CLASSIFICATION	we didn't match a resourcelocation but since we only support public and uri entry types internally it is still possible that there is another entry in an external catalog that will match. we call apache resolver's resolveentity method to cover this possibility.
WITHOUT_CLASSIFICATION	use the passed in base in preference to the base from matchingentry which is either null or the directory in which the external catalog file from which it was obtained is located. we make a copy so matchingentry's original base is untouched. of course if there is no base no need to make a copy this is the standard behavior as per my reading of the jaxp and xml catalog specs. cks 11/7/2002
WITHOUT_CLASSIFICATION	parse each catalog listed in nested <catalogpath> elements
WITHOUT_CLASSIFICATION	-- xmlcatalog
WITHOUT_CLASSIFICATION	methods below all add specific selectors
WITHOUT_CLASSIFICATION	no includes supplied so set it to 'matches all'
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	package-private for now
WITHOUT_CLASSIFICATION	package-private for now
WITHOUT_CLASSIFICATION	special case in zips we do not want this thing included
WITHOUT_CLASSIFICATION	first check if the archive needs to be scanned again
WITHOUT_CLASSIFICATION	do not use a fileresource b/c it pulls file info from the filesystem
WITHOUT_CLASSIFICATION	spare scanning again and again
WITHOUT_CLASSIFICATION	cached directoryscanner instance for our own project only
WITHOUT_CLASSIFICATION	selectorcontainer methods
WITHOUT_CLASSIFICATION	win9x uses a bat file for executing commands
WITHOUT_CLASSIFICATION	empty path return empty string
WITHOUT_CLASSIFICATION	no command? no string
WITHOUT_CLASSIFICATION	parse with a simple finite state machine
WITHOUT_CLASSIFICATION	inherit doc
WITHOUT_CLASSIFICATION	can't have zero-length token
WITHOUT_CLASSIFICATION	we have another token let's parse it.
WITHOUT_CLASSIFICATION	should always be the case
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	invoked by introspectionhelper for <code>setxxx(path p)</code> attribute setters. @param p the <code>project</code> for this path. @param path the <code>string</code> path definition.
WITHOUT_CLASSIFICATION	ignore don't trust anyone
WITHOUT_CLASSIFICATION	last don't trust the developer
WITHOUT_CLASSIFICATION	newer versions of kaffe (1.1.1+) won't have this but this will be sorted by fileset anyway.
WITHOUT_CLASSIFICATION	jdk 1.2+ seems to set java.home to the jre directory.
WITHOUT_CLASSIFICATION	just keep the old version as well and let addexisting sort it out.
WITHOUT_CLASSIFICATION	sun's and apple's 1.4 have jce and jsse in separate jars.
WITHOUT_CLASSIFICATION	ibm's 1.4 has rt.jar split into 4 smaller jars and a combined jce/jsse in security.jar.
WITHOUT_CLASSIFICATION	added for macos x
WITHOUT_CLASSIFICATION	remove any null elements
WITHOUT_CLASSIFICATION	create the list
WITHOUT_CLASSIFICATION	fill it
WITHOUT_CLASSIFICATION	convert to an array
WITHOUT_CLASSIFICATION	properties are part of the vm options
WITHOUT_CLASSIFICATION	boot classpath
WITHOUT_CLASSIFICATION	main classpath
WITHOUT_CLASSIFICATION	now any assertions are added
WITHOUT_CLASSIFICATION	this is the classname to run as well as its arguments. in case of 'executejar' the executable is a jar file.
WITHOUT_CLASSIFICATION	cloned system properties
WITHOUT_CLASSIFICATION	classpath is "-classpath <classpath>" -> 2 args
WITHOUT_CLASSIFICATION	bootclasspath is "-xbootclasspath<classpath>" -> 1 arg
WITHOUT_CLASSIFICATION	jar execution requires an additional -jar option
WITHOUT_CLASSIFICATION	<? extends enumeratedattribute>
WITHOUT_CLASSIFICATION	end nested class
WITHOUT_CLASSIFICATION	add this propertyset's nested propertysets' property names.
WITHOUT_CLASSIFICATION	make a copy
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	gotta atleast put in the proper spelling -p
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	if this transformoperation has drawoperation children then rotate the first child and return.
WITHOUT_CLASSIFICATION	if this transformoperation has drawoperation children then rotate the first child and return.
WITHOUT_CLASSIFICATION	checkstylemembernamecheck on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc checkstylemembernamecheck off - bc
WITHOUT_CLASSIFICATION	change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	-- fields ----------------------------------------------------------------
WITHOUT_CLASSIFICATION	-- methods ---------------------------------------------------------------
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off
WITHOUT_CLASSIFICATION	may be null if a system property has been added after the project instance has been initialized
WITHOUT_CLASSIFICATION	add this propertyset's property names.
WITHOUT_CLASSIFICATION	map the names
WITHOUT_CLASSIFICATION	create one nameentry in the appropriate pattern list for each line in the file.
WITHOUT_CLASSIFICATION	get a filereader
WITHOUT_CLASSIFICATION	ignore exception
WITHOUT_CLASSIFICATION	-- resourcelocation
WITHOUT_CLASSIFICATION	add base set of permissions
WITHOUT_CLASSIFICATION	if the permission was not explicitly granted or revoked the original security manager will do its work
WITHOUT_CLASSIFICATION	none of the actions revoked so all allowed.
WITHOUT_CLASSIFICATION	default true
WITHOUT_CLASSIFICATION	default false
WITHOUT_CLASSIFICATION	default false
WITHOUT_CLASSIFICATION	the regular expression factory
WITHOUT_CLASSIFICATION	temporary variable
WITHOUT_CLASSIFICATION	this is included
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	- apachecatalog
WITHOUT_CLASSIFICATION	if you don't do this you get all sorts of annoying warnings about a missing properties file. however it seems to work just fine with default values. ultimately we should probably include a "catalogmanager.properties" file in the ant jarfile with some default property settings. see catalogmanager.java for more details.
WITHOUT_CLASSIFICATION	make sure catalogresolver instantiates apachecatalog rather than a plain catalog
WITHOUT_CLASSIFICATION	debug catalogmanager.getstaticmanager().setverbosity(4)
WITHOUT_CLASSIFICATION	pass in reference to ourselves so we can be called back.
WITHOUT_CLASSIFICATION	-- apachecatalogresolver
WITHOUT_CLASSIFICATION	sorted bag impl. borrowed from commons-collections treebag
WITHOUT_CLASSIFICATION	now check each resource in case the child only lets through files from any children it may have
WITHOUT_CLASSIFICATION	?
WITHOUT_CLASSIFICATION	not using the accessor in this case to avoid side effects
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	new oata.util.readerinputstream(new inputstreamreader(
WITHOUT_CLASSIFICATION	encoding) encoding)
WITHOUT_CLASSIFICATION	first the easy way if all children are filesystem-only return true
WITHOUT_CLASSIFICATION	preserve order-encountered using a list enforce set logic manually
WITHOUT_CLASSIFICATION	cached directoryscanner instance
WITHOUT_CLASSIFICATION	if no nested natural order
WITHOUT_CLASSIFICATION	dummy
WITHOUT_CLASSIFICATION	implement resourceselector inherit doc
WITHOUT_CLASSIFICATION	first check that all elements are correctly configured
WITHOUT_CLASSIFICATION	if either of them is missing they are different
WITHOUT_CLASSIFICATION	different size =>different files
WITHOUT_CLASSIFICATION	same date if dest timestamp is within granularity of the srcfile
WITHOUT_CLASSIFICATION	different dates => different files
WITHOUT_CLASSIFICATION	here do a bulk comparison
WITHOUT_CLASSIFICATION	at this point we know we have a tie.
WITHOUT_CLASSIFICATION	throw buildexception on error
WITHOUT_CLASSIFICATION	throw buildexception on error
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	throw buildexception on error
WITHOUT_CLASSIFICATION	throw buildexception on error
WITHOUT_CLASSIFICATION	throw buildexception on error
WITHOUT_CLASSIFICATION	throw buildexception on error
WITHOUT_CLASSIFICATION	if you felt daring you could cache the basedir absolute path
WITHOUT_CLASSIFICATION	sanity check. ditch it if you want faster performance
WITHOUT_CLASSIFICATION	determine file whose out-of-dateness is to be checked
WITHOUT_CLASSIFICATION	if filename does not match the to attribute of the mapper then filter it out of the files we are considering
WITHOUT_CLASSIFICATION	if filename does not match the to attribute of the mapper then filter it out of the files we are considering
WITHOUT_CLASSIFICATION	sanity check
WITHOUT_CLASSIFICATION	sanity check
WITHOUT_CLASSIFICATION	determine file whose existence is to be checked
WITHOUT_CLASSIFICATION	when using this as a custom selector this method will be called. it translates each parameter into the appropriate setxxx() call. @param parameters the complete set of parameters for this selector.
WITHOUT_CLASSIFICATION	directory size never selected for
WITHOUT_CLASSIFICATION	you wish!
WITHOUT_CLASSIFICATION	check millis and only set it once.
WITHOUT_CLASSIFICATION	when str starts with a file.separator pattern has to start with a file.separator. when pattern starts with a file.separator str has to start with a file.separator.
WITHOUT_CLASSIFICATION	up to first ''
WITHOUT_CLASSIFICATION	up to first ''
WITHOUT_CLASSIFICATION	string is exhausted
WITHOUT_CLASSIFICATION	string is exhausted
WITHOUT_CLASSIFICATION	string is exhausted
WITHOUT_CLASSIFICATION	string not exhausted but pattern is. failure.
WITHOUT_CLASSIFICATION	string not exhausted but pattern is. failure.
WITHOUT_CLASSIFICATION	up to last ''
WITHOUT_CLASSIFICATION	'' situation so skip one
WITHOUT_CLASSIFICATION	no ''s so we make a shortcut
WITHOUT_CLASSIFICATION	pattern and string do not have the same size
WITHOUT_CLASSIFICATION	character mismatch
WITHOUT_CLASSIFICATION	character mismatch
WITHOUT_CLASSIFICATION	string matches against pattern
WITHOUT_CLASSIFICATION	throw buildexception on error
WITHOUT_CLASSIFICATION	character mismatch
WITHOUT_CLASSIFICATION	find the pattern between padidxstart & padidxtmp in str between stridxstart & stridxend
WITHOUT_CLASSIFICATION	find the pattern between padidxstart & padidxtmp in str between stridxstart & stridxend
WITHOUT_CLASSIFICATION	character mismatch
WITHOUT_CLASSIFICATION	character mismatch
WITHOUT_CLASSIFICATION	character mismatch
WITHOUT_CLASSIFICATION	pattern contains only '' which matches anything
WITHOUT_CLASSIFICATION	process characters before first star
WITHOUT_CLASSIFICATION	all characters in the string are used. check if only ''s are left in the pattern. if so we succeeded. otherwise failure.
WITHOUT_CLASSIFICATION	all characters in the string are used. check if only ''s are left in the pattern. if so we succeeded. otherwise failure.
WITHOUT_CLASSIFICATION	process characters after last star
WITHOUT_CLASSIFICATION	process pattern between stars. padidxstart and patidxend point always to a ''.
WITHOUT_CLASSIFICATION	two stars next to each other skip the first one.
WITHOUT_CLASSIFICATION	all characters in the string are used. check if only ''s are left in the pattern. if so we succeeded. otherwise failure.
WITHOUT_CLASSIFICATION	++
WITHOUT_CLASSIFICATION	creation is done here rather than in isselected() because some containers may do a validation pass before running isselected() but we need to check for the existence of the created class.
WITHOUT_CLASSIFICATION	we know that dynselector must be non-null if no error message
WITHOUT_CLASSIFICATION	deal with if and unless properties first
WITHOUT_CLASSIFICATION	----- attributes -----
WITHOUT_CLASSIFICATION	----- internal member variables -----
WITHOUT_CLASSIFICATION	----- constructors -----
WITHOUT_CLASSIFICATION	----- configuration -----
WITHOUT_CLASSIFICATION	normal use inside ant
WITHOUT_CLASSIFICATION	set self as a buildlistener to delay cachefile saves
WITHOUT_CLASSIFICATION	no reference to project - e.g. during normal junit tests
WITHOUT_CLASSIFICATION	this is a . parameter for later use
WITHOUT_CLASSIFICATION	specify the algorithm classname
WITHOUT_CLASSIFICATION	use algorithm defined via name
WITHOUT_CLASSIFICATION	use algorithm specified by classname
WITHOUT_CLASSIFICATION	nothing specified - use default
WITHOUT_CLASSIFICATION	else nothing to do
WITHOUT_CLASSIFICATION	use algorithm defined via name
WITHOUT_CLASSIFICATION	----- set the main attributes pattern '' -----
WITHOUT_CLASSIFICATION	use algorithm specified by classname
WITHOUT_CLASSIFICATION	nothing specified - use default
WITHOUT_CLASSIFICATION	specify the cache classname
WITHOUT_CLASSIFICATION	use cache defined via name
WITHOUT_CLASSIFICATION	use cache specified by classname
WITHOUT_CLASSIFICATION	specify the comparator classname
WITHOUT_CLASSIFICATION	----- set the special attributes pattern '.' -----
WITHOUT_CLASSIFICATION	load the specified class
WITHOUT_CLASSIFICATION	----- the selection work -----
WITHOUT_CLASSIFICATION	we have a 'resourced' file so reconvert it and use the 'old' implementation.
WITHOUT_CLASSIFICATION	you can not compute a value for a directory
WITHOUT_CLASSIFICATION	get the values and do the comparison
WITHOUT_CLASSIFICATION	maybe update the cache
WITHOUT_CLASSIFICATION	----- attribute and nested element support -----
WITHOUT_CLASSIFICATION	the usual classloader
WITHOUT_CLASSIFICATION	additional use the provided classpath
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	----- 'beautiful' output -----
WITHOUT_CLASSIFICATION	----- buildlistener interface methods -----
WITHOUT_CLASSIFICATION	the enumeratedattributes for the three interface implementations. name-classname mapping is done in the configure() method.
WITHOUT_CLASSIFICATION	----- member variables -----
WITHOUT_CLASSIFICATION	----- member variables -----
WITHOUT_CLASSIFICATION	----- algorithm-configuration -----
WITHOUT_CLASSIFICATION	----- algorithm-configuration -----
WITHOUT_CLASSIFICATION	----- logic -----
WITHOUT_CLASSIFICATION	----- logic -----
WITHOUT_CLASSIFICATION	implementation adapted from taskdefs.checksum thanks to magesh for hint
WITHOUT_CLASSIFICATION	read the file
WITHOUT_CLASSIFICATION	----- member variables - configuration -----
WITHOUT_CLASSIFICATION	----- member variables - internal use -----
WITHOUT_CLASSIFICATION	----- constructors -----
WITHOUT_CLASSIFICATION	----- cache-configuration -----
WITHOUT_CLASSIFICATION	----- data access
WITHOUT_CLASSIFICATION	after loading the cache is up to date with the file
WITHOUT_CLASSIFICATION	----- additional -----
WITHOUT_CLASSIFICATION	swallow as this simply doesn't seem to be kaffe
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	find the line breaks and pass other chars through in blocks
WITHOUT_CLASSIFICATION	either end of buffer or a line separator char
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	because the content is only read the file will not be damaged. i tested with jpg zip and pdf as binary files.
WITHOUT_CLASSIFICATION	don't need the opposite check as the dictionaries have the same size so we've also covered all keys of d2 already.
WITHOUT_CLASSIFICATION	log uptodateness of all targets
WITHOUT_CLASSIFICATION	checkstyleparameternumbercheck off - bc
WITHOUT_CLASSIFICATION	this should not happen because the lines are returned with the end of line delimiter
WITHOUT_CLASSIFICATION	checkstyleparameternumbercheck on
WITHOUT_CLASSIFICATION	two not existing files are equal
WITHOUT_CLASSIFICATION	should the following two be switched? if r1 and r2 refer to the same file isn't their content equal regardless of whether that file is a directory?
WITHOUT_CLASSIFICATION	don't want to compare directory contents for now
WITHOUT_CLASSIFICATION	as far as we know
WITHOUT_CLASSIFICATION	ignore release of an already-closed funnel
WITHOUT_CLASSIFICATION	write child elements and text
WITHOUT_CLASSIFICATION	write indent characters
WITHOUT_CLASSIFICATION	write element
WITHOUT_CLASSIFICATION	steal default namespace
WITHOUT_CLASSIFICATION	write attributes
WITHOUT_CLASSIFICATION	write element close
WITHOUT_CLASSIFICATION	relative path
WITHOUT_CLASSIFICATION	fall tru
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	determine the java version by looking at available classes java.net.proxy was introduced in jdk 1.5 java.lang.charsequence was introduced in jdk 1.4 java.lang.strictmath was introduced in jdk 1.3 java.lang.threadlocal was introduced in jdk 1.2 java.lang.void was introduced in jdk 1.1 count up version until a noclassdeffounderror ends the try
WITHOUT_CLASSIFICATION	swallow as we've hit the max class version that we have
WITHOUT_CLASSIFICATION	extrapolating from "netware may have a "java" in that directory but 99% of the time you don't want to execute it" -- jeff tulley <jtulley@novell.com>
WITHOUT_CLASSIFICATION	on ibm's jdk 1.2 the directory layout is different 1.3 follows sun's layout.
WITHOUT_CLASSIFICATION	on ibm's jdk 1.2 the directory layout is different 1.3 follows sun's layout.
WITHOUT_CLASSIFICATION	unfortunately on windows java.home doesn't always refer to the correct location so we need to fall back to assuming java is somewhere on the path.
WITHOUT_CLASSIFICATION	fall back to jre bin directory also catches jdk 1.0 and 1.1 where java.home points to the root of the jdk and mac os x where the whole directory layout is different from sun's
WITHOUT_CLASSIFICATION	this is the most common extension case - exe for windows and os/2 nothing for nix.
WITHOUT_CLASSIFICATION	in java1.5 the apache stuff moved.
WITHOUT_CLASSIFICATION	fall through.
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	are there any here that we forgot? fall through
WITHOUT_CLASSIFICATION	things like sun.reflection sun.misc sun.net
WITHOUT_CLASSIFICATION	things like sun.reflection sun.misc sun.net
WITHOUT_CLASSIFICATION	strip '.' token
WITHOUT_CLASSIFICATION	if it ended in a dot throw an exception
WITHOUT_CLASSIFICATION	exact match
WITHOUT_CLASSIFICATION	exact match
WITHOUT_CLASSIFICATION	exact match
WITHOUT_CLASSIFICATION	might read too much
WITHOUT_CLASSIFICATION	would be imprecise
WITHOUT_CLASSIFICATION	last character isn't a digit
WITHOUT_CLASSIFICATION	write out the number of characters encoded in this line.
WITHOUT_CLASSIFICATION	set the padding defaults
WITHOUT_CLASSIFICATION	get the next 3 bytes (if we have them)
WITHOUT_CLASSIFICATION	ok java 1.3.
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstyleconstantnamecheck off - bc
WITHOUT_CLASSIFICATION	checkstyleconstantnamecheck on
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	#8031 first try java 1.4.
WITHOUT_CLASSIFICATION	reflection problems? should not happen debug.
WITHOUT_CLASSIFICATION	checkstyleparameternumbercheck off - bc
WITHOUT_CLASSIFICATION	checkstyleparameternumbercheck on
WITHOUT_CLASSIFICATION	depending on the implementation the actual re won't get instantiated in the constructor.
WITHOUT_CLASSIFICATION	terminate with a linefeed alone
WITHOUT_CLASSIFICATION	notreached
WITHOUT_CLASSIFICATION	0 to 7 8 to 15 16 to 23 24 to 31 32 to 39 40 to 47 48 to 55 56 to 63
WITHOUT_CLASSIFICATION	store the octets
WITHOUT_CLASSIFICATION	store the octets
WITHOUT_CLASSIFICATION	store the octets
WITHOUT_CLASSIFICATION	padding
WITHOUT_CLASSIFICATION	padding
WITHOUT_CLASSIFICATION	magic property
WITHOUT_CLASSIFICATION	only text nodes that are non null after property expansion are added
WITHOUT_CLASSIFICATION	no need to synchronize as vector is always synchronized
WITHOUT_CLASSIFICATION	do not close the stream
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	get some non-crypto-grade randomness from various places.
WITHOUT_CLASSIFICATION	cannot resolve it so skip it.
WITHOUT_CLASSIFICATION	plain component
WITHOUT_CLASSIFICATION	make sure we are dealing with an absolute path
WITHOUT_CLASSIFICATION	remove the initial separator the root has it.
WITHOUT_CLASSIFICATION	unc drive
WITHOUT_CLASSIFICATION	format "device[dir.subdir]file"
WITHOUT_CLASSIFICATION	treat directories specified using .dir syntax as files
WITHOUT_CLASSIFICATION	add an extra slash for filesystems with drive-specifiers
WITHOUT_CLASSIFICATION	do a check for the destination file existing
WITHOUT_CLASSIFICATION	execute the script
WITHOUT_CLASSIFICATION	do nothing by default
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	notreached
WITHOUT_CLASSIFICATION	now recover all the dependencies collected and add to the list.
WITHOUT_CLASSIFICATION	inherit doc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	notreached
WITHOUT_CLASSIFICATION	do not close the stream
WITHOUT_CLASSIFICATION	on cygwin our current directory can be a unc assume user.dir is absolute or all hell breaks loose
WITHOUT_CLASSIFICATION	not before the filesystem root and not after it since root already contains one
WITHOUT_CLASSIFICATION	ensure that l ends with a / so we never think /foo was a parent directory of /foobar
WITHOUT_CLASSIFICATION	ensure that l ends with a / so we never think /foo was a parent directory of /foobar
WITHOUT_CLASSIFICATION	build the path stack info to compare
WITHOUT_CLASSIFICATION	not the same device (would be "" on linux/unix)
WITHOUT_CLASSIFICATION	no comparison possible
WITHOUT_CLASSIFICATION	get index of parts which are equal
WITHOUT_CLASSIFICATION	if "from" part is longer fill it up with ".." to reach path which is equal to both paths
WITHOUT_CLASSIFICATION	fill it up path with parts which were not equal
WITHOUT_CLASSIFICATION	can safely use '/' because windows understands '/' as separator
WITHOUT_CLASSIFICATION	base directory of the fileset
WITHOUT_CLASSIFICATION	build the list of sources which are out of date with respect to the target
WITHOUT_CLASSIFICATION	code from magesh moved from defaultlogger and slightly modified
WITHOUT_CLASSIFICATION	if you cannot read it you won't be able to write it either
WITHOUT_CLASSIFICATION	must be a zip of some sort
WITHOUT_CLASSIFICATION	does the class have a package structure
WITHOUT_CLASSIFICATION	check if the package structure is more than 1 level deep
WITHOUT_CLASSIFICATION	class name has more than 1 package level 'com.company.class'
WITHOUT_CLASSIFICATION	class name has only 1 package level 'package.class'
WITHOUT_CLASSIFICATION	add the class in dotted notation 'com.company.class'
WITHOUT_CLASSIFICATION	add a class with no package 'class'
WITHOUT_CLASSIFICATION	force bcel classes to load now
WITHOUT_CLASSIFICATION	force bcel classes to load now
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	notreached
WITHOUT_CLASSIFICATION	we get the root classes and build up a set of classes upon which they depend
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	execute the script
WITHOUT_CLASSIFICATION	log security exceptions and continue it aint that important and may be quite common running ant embedded.
WITHOUT_CLASSIFICATION	we look through the classpath elements. if the element is a dir we look for the file. if it is a zip we look for the zip entry
WITHOUT_CLASSIFICATION	we look through the source path elements. if the element is a dir we look for the file. if it is a zip we look for the zip entry. this isn't normal for source paths but we get it for free
WITHOUT_CLASSIFICATION	first letter of the previous segment of the class name 'class' is upper case ascii. so according to the spec it's an inner class
WITHOUT_CLASSIFICATION	register groovy ourselves since bsf did not natively support it in versions previous to 1.2.4.
WITHOUT_CLASSIFICATION	execute the script
WITHOUT_CLASSIFICATION	translate \1 to $1 so that the perl5substitution will work
WITHOUT_CLASSIFICATION	bsf uses a hashtable to store values so cannot declarebean with a null value so need to remove any bean of this name as that bean should not be visible
WITHOUT_CLASSIFICATION	no permission here
WITHOUT_CLASSIFICATION	compute the compiler options based on the input options first
WITHOUT_CLASSIFICATION	treat non-matching groups as empty matches
WITHOUT_CLASSIFICATION	be strict about line separator
WITHOUT_CLASSIFICATION	translate \1 to $(1) so that the matcher will work
WITHOUT_CLASSIFICATION	do the substitution
WITHOUT_CLASSIFICATION	replace \1 with the corresponding group
WITHOUT_CLASSIFICATION	used when sorting. if too many long comparisons happen we stop sorting randomise the block slightly and try again.
WITHOUT_CLASSIFICATION	nodes and heap entries run from 1. entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	nodes and heap entries run from 1. entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	blockno++
WITHOUT_CLASSIFICATION	when we get here we have either o an empty "assemble" buffer. o no bytes to write (numtowrite == 0)
WITHOUT_CLASSIFICATION	write `magic' bytes h indicating file-format == huffmanised followed by a digit indicating blocksize100k.
WITHOUT_CLASSIFICATION	ch = 0
WITHOUT_CLASSIFICATION	20 is just a paranoia constant
WITHOUT_CLASSIFICATION	empty block at end of file
WITHOUT_CLASSIFICATION	sort the block and establish posn of original string
WITHOUT_CLASSIFICATION	now the block's crc so it is in a known place.
WITHOUT_CLASSIFICATION	now a single bit indicating randomisation.
WITHOUT_CLASSIFICATION	finally block's contents proper.
WITHOUT_CLASSIFICATION	now another magic 48-bit number 0x177245385090 to indicate the end of the last block. (sqrt(pi) if you want to know. i did want to use e but it contains too much repetition -- 27 18 28 18 28 46 -- for me to feel statistically comfortable. call me paranoid.)
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	decide how many coding tables to use
WITHOUT_CLASSIFICATION	generate an initial set of coding tables
WITHOUT_CLASSIFICATION	iterate up to n_iters times to improve the tables.
WITHOUT_CLASSIFICATION	compute mtf values for the selectors.
WITHOUT_CLASSIFICATION	assign actual codes for the tables.
WITHOUT_CLASSIFICATION	transmit the mapping table.
WITHOUT_CLASSIFICATION	now the selectors.
WITHOUT_CLASSIFICATION	now the coding tables.
WITHOUT_CLASSIFICATION	and finally the block data proper
WITHOUT_CLASSIFICATION	set group start & end marks.
WITHOUT_CLASSIFICATION	calculate the cost of this group as coded by each of the coding tables.
WITHOUT_CLASSIFICATION	unrolled version of the else-block
WITHOUT_CLASSIFICATION	find the coding table which is best for this group and record its identity in the selector table.
WITHOUT_CLASSIFICATION	increment the symbol frequencies for the selected table.
WITHOUT_CLASSIFICATION	recompute the tables based on the accumulated frequencies.
WITHOUT_CLASSIFICATION	inlined bsw(1 inuse[i16 + j] ? 1 0)
WITHOUT_CLASSIFICATION	inlined bsw(1 1)
WITHOUT_CLASSIFICATION	inlined bsw(1 0)
WITHOUT_CLASSIFICATION	inlined bsw(1 0)
WITHOUT_CLASSIFICATION	bsbuffshadow |= 0 << (32 - bsliveshadow - 1)
WITHOUT_CLASSIFICATION	inlined bsw(5 curr)
WITHOUT_CLASSIFICATION	inlined bsw(2 2)
WITHOUT_CLASSIFICATION	10
WITHOUT_CLASSIFICATION	inlined bsw(2 3)
WITHOUT_CLASSIFICATION	11
WITHOUT_CLASSIFICATION	copy
WITHOUT_CLASSIFICATION	start inline maingtu
WITHOUT_CLASSIFICATION	following could be done in a loop but unrolled it for performance
WITHOUT_CLASSIFICATION	while x > 0
WITHOUT_CLASSIFICATION	set up the 2-byte frequency table
WITHOUT_CLASSIFICATION	in the various block-sized structures live data runs from 0 to last+num_overshoot_bytes inclusive. first set up the overshoot area for block.
WITHOUT_CLASSIFICATION	complete the initial radix sort
WITHOUT_CLASSIFICATION	now ftab contains the first loc of every small bucket. calculate the running order from smallest to largest big bucket.
WITHOUT_CLASSIFICATION	the main sorting loop.
WITHOUT_CLASSIFICATION	process big buckets starting with the least full.
WITHOUT_CLASSIFICATION	step 1
WITHOUT_CLASSIFICATION	step 3
WITHOUT_CLASSIFICATION	handle 16 bit signed numbers
WITHOUT_CLASSIFICATION	make maps
WITHOUT_CLASSIFICATION	directory with respect to
WITHOUT_CLASSIFICATION	with blocksize 900k 256 byte 256 byte 1032 byte 18002 byte 18002 byte
WITHOUT_CLASSIFICATION	256 byte 1548 byte 6192 byte 24 byte 12 byte 6192 byte 6 byte 16 byte
WITHOUT_CLASSIFICATION	4000 byte 4000 byte 4000 byte
WITHOUT_CLASSIFICATION	1024 byte 1024 byte 256 byte
WITHOUT_CLASSIFICATION	1040 byte 2064 byte 2064 byte
WITHOUT_CLASSIFICATION	262148 byte ------------ 333408 byte
WITHOUT_CLASSIFICATION	just print a message like the previous versions of this class did
WITHOUT_CLASSIFICATION	variables used by setup methods exclusively
WITHOUT_CLASSIFICATION	currblockno++
WITHOUT_CLASSIFICATION	a bad crc is considered a fatal error.
WITHOUT_CLASSIFICATION	receive the mapping table
WITHOUT_CLASSIFICATION	now the selectors
WITHOUT_CLASSIFICATION	undo the mtf values for the selectors.
WITHOUT_CLASSIFICATION	nearly all times v is zero 4 in most other cases
WITHOUT_CLASSIFICATION	now the coding tables
WITHOUT_CLASSIFICATION	finally create the huffman tables
WITHOUT_CLASSIFICATION	end of file '1' ')' 'y' '&' 's' 'y'
WITHOUT_CLASSIFICATION	inlined int zvec = bsr(zn)
WITHOUT_CLASSIFICATION	inlined int zvec = bsr(zn)
WITHOUT_CLASSIFICATION	this loop is hammered during decompression hence avoid native method call overhead of system.arraycopy for very small ranges to copy.
WITHOUT_CLASSIFICATION	not a char and not eof
WITHOUT_CLASSIFICATION	(with blocksize 900k) 256 byte
WITHOUT_CLASSIFICATION	1024 byte
WITHOUT_CLASSIFICATION	no need to keep track of bcc'd addresses
WITHOUT_CLASSIFICATION	blindly trust the user doesn't set any invalid headers
WITHOUT_CLASSIFICATION	rfc 822 s4.1 "reply-to" header is optional
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	mac does \n\r but that's tough to distinguish from windows \r\n\r\n. don't tackle that problem right now.
WITHOUT_CLASSIFICATION	support "address (name)"
WITHOUT_CLASSIFICATION	support "(name) address"
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	256 byte 18002 byte 18002 byte
WITHOUT_CLASSIFICATION	6192 byte 6192 byte 6192 byte 24 byte
WITHOUT_CLASSIFICATION	1028 byte 512 byte 3096 byte 6 byte --------------- 60798 byte
WITHOUT_CLASSIFICATION	3600000 byte 900000 byte --------------- 4560782 byte ===============
WITHOUT_CLASSIFICATION	rfc 822 s4.1 "from" header must be sent we rely on error checking by the mta
WITHOUT_CLASSIFICATION	rfc 822 s4.1 "header fields are not required to occur in any particular order except that the message body must occur after the headers" (the same section specifies a reccommended order which we ignore)
WITHOUT_CLASSIFICATION	make a limited attempt to extract a sanitized email address prefer text in <brackets> ignore anything in (parentheses)
WITHOUT_CLASSIFICATION	raw protocol methods below here
WITHOUT_CLASSIFICATION	make sure dot is on new line
WITHOUT_CLASSIFICATION	raw supports <crlf>.<crlf>
WITHOUT_CLASSIFICATION	check that the response is one of the valid codes
WITHOUT_CLASSIFICATION	deprecated but email is byte-oriented
WITHOUT_CLASSIFICATION	ensure always \r\n
WITHOUT_CLASSIFICATION	mac does \n\r but that's tough to distinguish from windows \r\n\r\n. don't tackle that problem right now.
WITHOUT_CLASSIFICATION	add extra dot
WITHOUT_CLASSIFICATION	add extra dot
WITHOUT_CLASSIFICATION	ensure always \r\n
WITHOUT_CLASSIFICATION	undone
WITHOUT_CLASSIFICATION	create a tarentry for the longlink the contents of which are the entry's name
WITHOUT_CLASSIFICATION	strip off drive letters! review would a better check be "(file.separator == '\')"?
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	no absolute pathnames windows (and posix?) paths can start with "\\networkdrive\" so we loop on starting /'s.
WITHOUT_CLASSIFICATION	start of the central directory
WITHOUT_CLASSIFICATION	review this is horribly inefficient but it ensures that we properly skip over bytes via the tarbuffer
WITHOUT_CLASSIFICATION	read in the name
WITHOUT_CLASSIFICATION	remove trailing null terminator
WITHOUT_CLASSIFICATION	unexpected eof!
WITHOUT_CLASSIFICATION	---------------------------------------------------------- somewhat arbitrary choices that are quite common for shared installations -----------------------------------------------------------
WITHOUT_CLASSIFICATION	method is stored and we used randomaccessfile
WITHOUT_CLASSIFICATION	if random access output write the local file header containing the correct crc and compressed/uncompressed sizes
WITHOUT_CLASSIFICATION	not specified
WITHOUT_CLASSIFICATION	not specified
WITHOUT_CLASSIFICATION	size/crc not required if randomaccessfile is used
WITHOUT_CLASSIFICATION	various zip constants
WITHOUT_CLASSIFICATION	store method in local variable to prevent multiple method calls
WITHOUT_CLASSIFICATION	bit3 set to signal we use a data descriptor
WITHOUT_CLASSIFICATION	bit3 set to signal we use a data descriptor
WITHOUT_CLASSIFICATION	compression method
WITHOUT_CLASSIFICATION	compression method
WITHOUT_CLASSIFICATION	last mod. time and date
WITHOUT_CLASSIFICATION	file name length
WITHOUT_CLASSIFICATION	extra field length
WITHOUT_CLASSIFICATION	file name
WITHOUT_CLASSIFICATION	extra field
WITHOUT_CLASSIFICATION	version made by
WITHOUT_CLASSIFICATION	version needed to extract general purpose bit flag
WITHOUT_CLASSIFICATION	last mod. time and date
WITHOUT_CLASSIFICATION	requires version 2 as we are going to store length info in the data descriptor
WITHOUT_CLASSIFICATION	file name length
WITHOUT_CLASSIFICATION	crc compressed length uncompressed length
WITHOUT_CLASSIFICATION	extra field length
WITHOUT_CLASSIFICATION	file name
WITHOUT_CLASSIFICATION	extra field
WITHOUT_CLASSIFICATION	file comment length
WITHOUT_CLASSIFICATION	disk number start
WITHOUT_CLASSIFICATION	internal file attributes
WITHOUT_CLASSIFICATION	external file attributes
WITHOUT_CLASSIFICATION	relative offset of lfh
WITHOUT_CLASSIFICATION	disk numbers
WITHOUT_CLASSIFICATION	number of entries
WITHOUT_CLASSIFICATION	length and location of cd
WITHOUT_CLASSIFICATION	zip file comment
WITHOUT_CLASSIFICATION	array not exhausted
WITHOUT_CLASSIFICATION	version made by
WITHOUT_CLASSIFICATION	version needed to extract
WITHOUT_CLASSIFICATION	general purpose bit flag
WITHOUT_CLASSIFICATION	compression method
WITHOUT_CLASSIFICATION	last mod file time
WITHOUT_CLASSIFICATION	last mod file date
WITHOUT_CLASSIFICATION	crc-32
WITHOUT_CLASSIFICATION	uncompressed size
WITHOUT_CLASSIFICATION	filename length
WITHOUT_CLASSIFICATION	extra field length
WITHOUT_CLASSIFICATION	file comment length
WITHOUT_CLASSIFICATION	internal file attributes
WITHOUT_CLASSIFICATION	external file attributes
WITHOUT_CLASSIFICATION	relative offset of local header
WITHOUT_CLASSIFICATION	disk number
WITHOUT_CLASSIFICATION	lfh offset
WITHOUT_CLASSIFICATION	data offset will be filled later
WITHOUT_CLASSIFICATION	end of central dir signature
WITHOUT_CLASSIFICATION	number of this disk
WITHOUT_CLASSIFICATION	number of the disk with the
WITHOUT_CLASSIFICATION	start of the central directory
WITHOUT_CLASSIFICATION	the central dir on this disk
WITHOUT_CLASSIFICATION	the central dir
WITHOUT_CLASSIFICATION	size of the central directory
WITHOUT_CLASSIFICATION	offset of start of central
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	wait 2 second extras the test failed with 100 ms of margin on cvs.apache.org on august 1st 2003
WITHOUT_CLASSIFICATION	dummy1 --> dummy2 --> dummy3 (which holds a glob mapper from ".java" to ".class"
WITHOUT_CLASSIFICATION	initialize test environment (called "bed")
WITHOUT_CLASSIFICATION	this will fail. comparebytes("abc" "utf-16")
WITHOUT_CLASSIFICATION	catch script/ant mismatch with a meaningful message we could ignore it but there are likely to be other version problems so we stamp down on the configuration now
WITHOUT_CLASSIFICATION	if there were no main targets we list all subtargets as it means nothing has a description
WITHOUT_CLASSIFICATION	for netware use the boolean=true mode so we can use delimiter information to make a better decision later.
WITHOUT_CLASSIFICATION	we are on netware tokenizing is handled a little differently due to the fact that netware has multiple-character volume names.
WITHOUT_CLASSIFICATION	the readers return -1 if they end. so simply read the "prepend" after that the "content" and at the end the "append" file.
WITHOUT_CLASSIFICATION	nb this makes use of project#setproperty rather than project#setnewproperty due to backwards compatiblity reasons
WITHOUT_CLASSIFICATION	if we've been successful on an update delete the temporary file
WITHOUT_CLASSIFICATION	checkstyle - magic numbers checking for "x\ 0=dquote1=letter2=3=\
WITHOUT_CLASSIFICATION	version needed to extract
WITHOUT_CLASSIFICATION	general purpose bit flag
WITHOUT_CLASSIFICATION	compression method
WITHOUT_CLASSIFICATION	last mod file time
WITHOUT_CLASSIFICATION	last mod file date
WITHOUT_CLASSIFICATION	crc-32
WITHOUT_CLASSIFICATION	compressed size
WITHOUT_CLASSIFICATION	uncompressed size
WITHOUT_CLASSIFICATION	end of central dir signature
WITHOUT_CLASSIFICATION	number of this disk
WITHOUT_CLASSIFICATION	number of the disk with the
WITHOUT_CLASSIFICATION	total number of entries in
WITHOUT_CLASSIFICATION	total number of entries in
WITHOUT_CLASSIFICATION	the central dir on this disk
WITHOUT_CLASSIFICATION	the central dir
WITHOUT_CLASSIFICATION	size of the central directory
WITHOUT_CLASSIFICATION	the starting disk number
WITHOUT_CLASSIFICATION	zipfile comment length
WITHOUT_CLASSIFICATION	local file header signature
WITHOUT_CLASSIFICATION	converts dos time to java time (number of milliseconds since epoch).
WITHOUT_CLASSIFICATION	crc will be added later
WITHOUT_CLASSIFICATION	<zipextrafield>
WITHOUT_CLASSIFICATION	initializes extra data to an empty byte array
WITHOUT_CLASSIFICATION	ms-dos read-only attribute
WITHOUT_CLASSIFICATION	ms-dos directory flag
WITHOUT_CLASSIFICATION	a "location" attribute for a node within a path object.
WITHOUT_CLASSIFICATION	just use the same directory as the file itself. this directory will exist
WITHOUT_CLASSIFICATION	jarindex is sorting the directories by ascending order. it has no value but cosmetic since it will be read into a hashtable by the classloader but we'll do so anyway.
WITHOUT_CLASSIFICATION	static
WITHOUT_CLASSIFICATION	we mark the file to be deleted on exit. the alternative would be to cache the filename and delete after execution finished which is much better for long-lived runtimes though spawning complicates things
WITHOUT_CLASSIFICATION	protected first so if any gui tool offers a default based on enum #0 it will be right.
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc the source file the destination file the destination directory
WITHOUT_CLASSIFICATION	add dest dir to classpath so that previously compiled and untouched classes are on classpath
WITHOUT_CLASSIFICATION	build the command line from what we got the format is cleartool checkout [options] [viewpath ] as specified in the cleartool.exe help
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool mkelem [options] [viewpath ] as specified in the cleartool.exe help
WITHOUT_CLASSIFICATION	build the command line from what we got. the format is cleartool mklabel [options] [viewpath ] as specified in the cleartool help
WITHOUT_CLASSIFICATION	push the current iterator onto the stack and then iterate through this directory.
WITHOUT_CLASSIFICATION	list of ejbs found in xml one item within the map is doc ias or ejb descriptor
WITHOUT_CLASSIFICATION	basenameterminator not found the descriptor use the jonas naming convention ie [foo.xmljonas-foo.xml] and not [foo<basenameterminator>-ejb-jar.xml foo<basenameterminator>-jonas-ejb-jar.xml].
WITHOUT_CLASSIFICATION	loop through the files seeing if any has been touched more recently than the destination jar.
WITHOUT_CLASSIFICATION	read in the descriptor. under weblogic the descriptor is a weblogic specific subclass which has references to the implementation classes. these classes must therefore be in the classpath when the deployment descriptor is loaded from the .ser file
WITHOUT_CLASSIFICATION	warning we trim the values of all the attributes because some extension declarations are badly defined (ie have spaces after version or vendor)
WITHOUT_CLASSIFICATION	2003-02-21 new replace algorithm by tbee (tbee@tbee.org) because it wasn't able to replace something like "@aaa@bbb"
WITHOUT_CLASSIFICATION	convert backslashes to slashes otherwise jjtree will put this as comments and this seems to confuse javacc
WITHOUT_CLASSIFICATION	although this code appears to duplicate that of classpathutils.newinstance we cannot use that because this formatter may run in a forked process without that class.
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss history elements [-h] [-l] [-n] [-o] [-v] [-y] [-#] [-?] as specified in the ss.exe help
WITHOUT_CLASSIFICATION	this method has severe consequences on performance. we cannot rely on the super.hashcode() method since super.getname() always return the empty string in the current implemention (there's no setter) so it is basically draining the performance of a hashmap lookup
WITHOUT_CLASSIFICATION	if this transformoperation has drawoperation children then rotate the first child and return.
WITHOUT_CLASSIFICATION	converted from sun internal classes to new base64converter utility class extracted from get task
WITHOUT_CLASSIFICATION	cannot return a null source because we have to call setentityresolver (see setentityresolver javadoc comment)
WITHOUT_CLASSIFICATION	crc compressed length uncompressed length
WITHOUT_CLASSIFICATION	no further methods necessary. this is just an amalgamation of two other interfaces.
WITHOUT_CLASSIFICATION	----- the "singleton" -----
WITHOUT_CLASSIFICATION	if we had child elements we need to indent before we close the element otherwise we're on the same line and don't need to indent
WITHOUT_CLASSIFICATION	the key is in the dictionary but cannot be retrieved this is usually due references that refer to tasks that have not been taskdefed in the current run. ignore
WITHOUT_CLASSIFICATION	write magic done by caller who created this stream this.out.write('b') this.out.write('z')
WITHOUT_CLASSIFICATION	crc mode sizdev uid gid
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	selectors are implicitly anded in directoryscanner. to revert their logic we wrap them into a <none> selector instead.
WITHOUT_CLASSIFICATION	now wait until the spawned process is finished
WITHOUT_CLASSIFICATION	file doesn't exist -> property 'test' == null
WITHOUT_CLASSIFICATION	we don't expect to find this
WITHOUT_CLASSIFICATION	we don't expect to find this
WITHOUT_CLASSIFICATION	ignore expected
WITHOUT_CLASSIFICATION	keep track of what operating systems are supported here.
WITHOUT_CLASSIFICATION	if we followed the symlink we just made we should bypass the excludes.
WITHOUT_CLASSIFICATION	when the test is started by the build.xml of ant if the property tests.and.ant.share.classloader is not set in the build.xml a sysproperty with name tests.and.ant.share.classloader and value ${tests.and.ant.share.classloader} will be set we are trying to catch this here.
WITHOUT_CLASSIFICATION	throw in drive letters
WITHOUT_CLASSIFICATION	promised to eliminate consecutive slashes after drive letter.
WITHOUT_CLASSIFICATION	promised to eliminate consecutive slashes after drive letter.
WITHOUT_CLASSIFICATION	promised to eliminate consecutive slashes after drive letter.
WITHOUT_CLASSIFICATION	avoid multiple configurations
WITHOUT_CLASSIFICATION	------------------------------------------------------ helper methods -----------------------------------------------------
WITHOUT_CLASSIFICATION	make sure the cache is cleared.
WITHOUT_CLASSIFICATION	--- null jdbc driver just for simple test since there are no db driver available as a default in ant )
WITHOUT_CLASSIFICATION	pr 38370
WITHOUT_CLASSIFICATION	pr 38370
WITHOUT_CLASSIFICATION	pr 38370
WITHOUT_CLASSIFICATION	pr 38370
WITHOUT_CLASSIFICATION	pr 38370
WITHOUT_CLASSIFICATION	pr 38370
WITHOUT_CLASSIFICATION	pr 38370
WITHOUT_CLASSIFICATION	pr 38370
WITHOUT_CLASSIFICATION	pr 38370
WITHOUT_CLASSIFICATION	pr 38370
WITHOUT_CLASSIFICATION	pr 38370
WITHOUT_CLASSIFICATION	pr 38370
WITHOUT_CLASSIFICATION	wait 1 second extra to allow for java to start this time was ok on a win nt machine and on nagoya
WITHOUT_CLASSIFICATION	------------------------------------------------------ helper methods - should be in buildfiletest -----------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------ helper methods - should be in buildfiletest -----------------------------------------------------
WITHOUT_CLASSIFICATION	all three specified and all three exist -> true
WITHOUT_CLASSIFICATION	specified class is "" -> can not exist
WITHOUT_CLASSIFICATION	core class that exists in system classpath is ignored but found in specified classpath
WITHOUT_CLASSIFICATION	file is not found in specified filepath
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	basedir of subant/subant-test2/subant.xml is .. therefore we expect here the subant subdirectory
WITHOUT_CLASSIFICATION	2 is != 0 and even so it is considered failure on any platform currently supported by execute#isfailure.
WITHOUT_CLASSIFICATION	expectbuildexceptioncontaining("testnotld" "jasper found an error in a file" "java returned 9")
WITHOUT_CLASSIFICATION	the capturetosummary test writes to stdout and stderr good for verifying that the testlistener support doesn't break anything.
WITHOUT_CLASSIFICATION	testnocrash is the test invoked by the capturetosummary's junit task
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	tests one the file object
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	conversion to url via fileutils like in xmlresultaggregator not as suggested in the bug report
WITHOUT_CLASSIFICATION	conversion to url via fileutils like in xmlresultaggregator not as suggested in the bug report
WITHOUT_CLASSIFICATION	conversion to url via fileutils like in xmlresultaggregator not as suggested in the bug report
WITHOUT_CLASSIFICATION	conversion to url via fileutils like in xmlresultaggregator not as suggested in the bug report
WITHOUT_CLASSIFICATION	we have extra elements
WITHOUT_CLASSIFICATION	set up a vsshistory task
WITHOUT_CLASSIFICATION	\ doesn't have a special meaning anymore - this is different from what the unix sh does but causes a lot of problems on dos based platforms otherwise
WITHOUT_CLASSIFICATION	check that dir and src are incompatible
WITHOUT_CLASSIFICATION	================ testcases for the cache implementations ================
WITHOUT_CLASSIFICATION	does the selection
WITHOUT_CLASSIFICATION	============== testcases for the algorithm implementations ==============
WITHOUT_CLASSIFICATION	===================== scenario tests =====================
WITHOUT_CLASSIFICATION	info text list of files expected result result
WITHOUT_CLASSIFICATION	===================== helper methods and classes ====================
WITHOUT_CLASSIFICATION	should be full moon
WITHOUT_CLASSIFICATION	try a silly case
WITHOUT_CLASSIFICATION	java.home is bogus
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	60s a further 30s
WITHOUT_CLASSIFICATION	order of headers cannot be guaranteed
WITHOUT_CLASSIFICATION	order of headers cannot be guaranteed
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier off - bc
WITHOUT_CLASSIFICATION	ignore method m as there is an overloaded form of this method that takes in a non-string argument which gains higher priority.
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	if the argument is not a string or location and if there is an overloaded form of this method already defined we just override that with the new one. this mechanism does not guarantee any specific order in which the methods will be selected so any code that depends on the order in which "set" methods have been defined is not guaranteed to be selected in any particular order.
WITHOUT_CLASSIFICATION	impossible as getmethods should only return public methods
WITHOUT_CLASSIFICATION	impossible as getmethods should only return public methods
WITHOUT_CLASSIFICATION	impossible as getmethods should only return public methods
WITHOUT_CLASSIFICATION	boolean and boolean get special treatment because we have a nice method in project
WITHOUT_CLASSIFICATION	find the line breaks and pass other chars through in blocks
WITHOUT_CLASSIFICATION	datatype can have a "no arg" constructor or take a single project argument.
WITHOUT_CLASSIFICATION	all the names are the same check if the class path of the loader is the same
WITHOUT_CLASSIFICATION	interestingly enough we get to here when a user uses -dname=value. however in some cases the os goes ahead and parses this out to args {"-dname" "value"} so instead of parsing on "=" we just make the "-d" characters go away and skip one argument forward. i don't know how to predict when the jdk is going to help or not so we simply look for the equals sign.
WITHOUT_CLASSIFICATION	if parent is null then we are at the root of the fs complain that we can't find the build file.
WITHOUT_CLASSIFICATION	put back the original security manager the following will never eval to true. (pd)
WITHOUT_CLASSIFICATION	ignore path elements which are invalid relative to the project
WITHOUT_CLASSIFICATION	ignore - we are interested only in the side effect - that of getting the static initializers invoked. as we do not want to call a valid constructor to get this side effect an attempt is made to call a hopefully invalid constructor - come on nobody would have a constructor that takes in 256 string arguments -) (in fact they can't - according to jvm spec section 4.10 the number of method parameters is limited to 255 by the definition of a method descriptor. constructors count as methods here.)
WITHOUT_CLASSIFICATION	<url>
WITHOUT_CLASSIFICATION	<url>
WITHOUT_CLASSIFICATION	'sync' is needed - otherwise 2 threads can load the same class twice resulting in linkageerror duplicated class definition. findloadedclass avoids that but without sync it won't work.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	not significant for the class loader.
WITHOUT_CLASSIFICATION	not significant for the class loader.
WITHOUT_CLASSIFICATION	not significant for the class loader.
WITHOUT_CLASSIFICATION	not significant for the class loader.
WITHOUT_CLASSIFICATION	not significant for the class loader.
WITHOUT_CLASSIFICATION	don't have to check for public since getconstructor finds public constructors only.
WITHOUT_CLASSIFICATION	not a known type
WITHOUT_CLASSIFICATION	initialize the globalfileset's project
WITHOUT_CLASSIFICATION	create a new vector to avoid concurrentmodificationexc when the listeners get added/removed while we are in fire
WITHOUT_CLASSIFICATION	first build exception
WITHOUT_CLASSIFICATION	not been visited
WITHOUT_CLASSIFICATION	-------------------- optional methods -------------------- you can override those methods if you want to optimize or do advanced things (like support a special syntax). the methods do not chain - you should use them when embedding ant (by replacing the main helper)
WITHOUT_CLASSIFICATION	fragments.addelement(value.substring(pos + 1 pos + 2)) prev = pos + 2
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	-------------------- common properties -------------------- the following properties are required by import ( and other tasks that read build files using projecthelper ).
WITHOUT_CLASSIFICATION	check to what is in the classname
WITHOUT_CLASSIFICATION	not included do nothing
WITHOUT_CLASSIFICATION	not included do nothing
WITHOUT_CLASSIFICATION	attributes
WITHOUT_CLASSIFICATION	make sure we aren't going to get the path separator next
WITHOUT_CLASSIFICATION	'reasonable' default if the component is used without a project ( for example as a standalone bean ). most ant components can be used this way.
WITHOUT_CLASSIFICATION	don't have to check for public since getmethod finds public method only. don't have to check for abstract since then taskclass would be abstract too.
WITHOUT_CLASSIFICATION	mac
WITHOUT_CLASSIFICATION	set in/excludes to reasonable defaults if needed
WITHOUT_CLASSIFICATION	may be on a case insensitive file system. we want the results to show what's really on the disk so we need to double check.
WITHOUT_CLASSIFICATION	avoid double scanning of directories can only happen in fast mode
WITHOUT_CLASSIFICATION	usually the initialized is set to true. but here it must not. because the prepend and append readers have to be instantiated on runtime newfilter.setinitialized(true)
WITHOUT_CLASSIFICATION	if at eof with no characters in the buffer return eof
WITHOUT_CLASSIFICATION	the current character is always emitted.
WITHOUT_CLASSIFICATION	the current character is always emitted.
WITHOUT_CLASSIFICATION	the current character is always emitted.
WITHOUT_CLASSIFICATION	the current character is always emitted.
WITHOUT_CLASSIFICATION	fall tru
WITHOUT_CLASSIFICATION	fall tru
WITHOUT_CLASSIFICATION	fall tru
WITHOUT_CLASSIFICATION	fall tru
WITHOUT_CLASSIFICATION	works like clone() but doesn't show up in the javadocs
WITHOUT_CLASSIFICATION	----------------------------------------- predefined filters -----------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------- filter classes --------------------------------------------
WITHOUT_CLASSIFICATION	execute the top-level target
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	also check for properly formed uris. ant formerly recommended using nonsense uris such as "file./foo.xml" in xml includes. you shouldn't do that (just "foo.xml" is correct) but for compatibility we special-case things when the path is not absolute and fall back to the old parsing behavior.
WITHOUT_CLASSIFICATION	decide whether to copy the existing arg set or build a new one from the list of all args excluding the special operations that only we handle
WITHOUT_CLASSIFICATION	convert the replyto string into a vector of emailaddresses
WITHOUT_CLASSIFICATION	private static final int bg_black = 40 private static final int bg_red = 41 private static final int bg_green = 42 private static final int bg_yellow = 44 private static final int bg_blue = 44 private static final int bg_magenta = 45 private static final int bg_cyan = 46 private static final int bg_white = 47
WITHOUT_CLASSIFICATION	if the file being added is meta-inf/application.xml we warn if it's not the one specified in the "appxml" attribute - or if it's being added twice meaning the same file is specified by the "appxml" attribute and in a <fileset> element.
WITHOUT_CLASSIFICATION	class found but restricted name this is actually the case we're looking for in jdk 1.3+ so catch the exception and return
WITHOUT_CLASSIFICATION	can return null to represent the bootstrap class loader. see api docs of class.getclassloader.
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	use to scan own archive
WITHOUT_CLASSIFICATION	collect filesets to pass them to getresourcestoadd
WITHOUT_CLASSIFICATION	if we're in this finally clause because of an exception we don't really care if there's an exception when closing the stream. e.g. if it throws "zip file must have at least one entry" because an exception happened before we added any files then we must swallow this exception. otherwise the error that's reported will be the close() error which is not the real cause of the problem.
WITHOUT_CLASSIFICATION	bad luck. there are resources in the filesets that make the archive out of date but not in the non-fileset resources. we need to rescan the non-filesets to grab all of them now.
WITHOUT_CLASSIFICATION	zips store time with a granularity of 2 seconds round up
WITHOUT_CLASSIFICATION	zipoutputstream.putnextentry expects the zipentry to know its size and the crc sum before you start writing the data when using stored mode - unless it is seekable. this forces us to process the data twice.
WITHOUT_CLASSIFICATION	may be altered in validate
WITHOUT_CLASSIFICATION	at this point the paths are set up with lists of files and the mapper is ready to map from source dirs to dest files now we iterate through every jar giving source and dest names deal with the paths
WITHOUT_CLASSIFICATION	calculate our destination directory it is either the destdir attribute or the base dir of the fileset (for in situ updates)
WITHOUT_CLASSIFICATION	error messages
WITHOUT_CLASSIFICATION	default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	parse the attribute(s) and text of this node adding properties for each. if the "path" attribute is specified then return the created path which will be passed to the children of this node.
WITHOUT_CLASSIFICATION	an arbitrary attribute.
WITHOUT_CLASSIFICATION	return the path we added or the id of this node for children to reference if needed. path objects are definitely used by child path elements and id may be used for a child text node.
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	ignore the problem
WITHOUT_CLASSIFICATION	if we're on windows then do the comparison ignoring case and treat the two directory characters the same
WITHOUT_CLASSIFICATION	for netware and os/2 piggy-back on windows since in the validatesetup code the same assumptions can be made as with windows - that is the path separator
WITHOUT_CLASSIFICATION	end static class templateelement
WITHOUT_CLASSIFICATION	constructors / initializers
WITHOUT_CLASSIFICATION	value and property are mutually exclusive attributes
WITHOUT_CLASSIFICATION	ignore exception
WITHOUT_CLASSIFICATION	int loglevel = filesetmanifestconfig == null ? project.msg_warn project.msg_verbose log("file " + file + " includes a meta-inf/manifest.mf which will be ignored. " + "to include this file set filesetmanifest to a value other " + "than 'skip'." loglevel)
WITHOUT_CLASSIFICATION	create the directory as it might not exist.
WITHOUT_CLASSIFICATION	calculate the total checksum convert the keys (source files) into a sorted array.
WITHOUT_CLASSIFICATION	must not use getentry as "well behaving" applications must accept the manifest in any capitalization
WITHOUT_CLASSIFICATION	we just set the prefix for this fileset and pass it up.
WITHOUT_CLASSIFICATION	we just set the prefix for this fileset and pass it up.
WITHOUT_CLASSIFICATION	precedence manifestfile wins over inline manifest over manifests read from the filesets over the original manifest. merge with null argument is a no-op
WITHOUT_CLASSIFICATION	filesets are separate from the rest for performance reasons. if we use the code for union below we'll always scan all filesets even if we know the target is out of date after the first test.
WITHOUT_CLASSIFICATION	if the archive is built for the first time and it is matched by a resource collection then it hasn't been found in check (it hasn't been there) but will be included now. for some strange reason the old code would simply skip the entry and not fail do the same now for backwards compatibility reasons. without this the which4j build fails in gump
WITHOUT_CLASSIFICATION	preserve permissions
WITHOUT_CLASSIFICATION	override permissions if set explicitly
WITHOUT_CLASSIFICATION	check if we can contact the url
WITHOUT_CLASSIFICATION	instance
WITHOUT_CLASSIFICATION	the exec os check is different from os.isos() which probes for a specific os. instead it searches the os field for the current os.name
WITHOUT_CLASSIFICATION	similar to a fileset but doesn't allow dir attribute to be set
WITHOUT_CLASSIFICATION	if the destination directory didn't already exist or was empty then no previous file removal is necessary!
WITHOUT_CLASSIFICATION	default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	preserveintarget would find all files we want to keep but we need to find all that we want to delete - so the meaning of all patterns and selectors must be inverted
WITHOUT_CLASSIFICATION	on vms platform we need to create a special java options file containing the arguments and classpath for the java command. the special file is supported by the "-v" switch on the vms jvm.
WITHOUT_CLASSIFICATION	do nothing if no resources (including nested text)
WITHOUT_CLASSIFICATION	windows has a 32k limit on total arg size so create a temporary file to store all the arguments
WITHOUT_CLASSIFICATION	filesets has been protected so we need to keep that even after switching to resource collections. in fact they will still get a different treatment form the other resource collections even in execute since we have some subtle special features like switching type to "dir" when we encounter a dirset that would be more difficult to achieve otherwise.
WITHOUT_CLASSIFICATION	need to reset the stream handler to restart reading of pipes go ahead and do it always w/ nested redirectors
WITHOUT_CLASSIFICATION	if we get here in and out have not been specified we are in batch processing mode.
WITHOUT_CLASSIFICATION	at this point there is one trailing space to remove if the list is not empty.
WITHOUT_CLASSIFICATION	ignore and keep trying
WITHOUT_CLASSIFICATION	chunk part of previous env var (unix env vars can contain embedded new lines).
WITHOUT_CLASSIFICATION	since we "look ahead" before adding there's one last env var.
WITHOUT_CLASSIFICATION	noop default encoding used
WITHOUT_CLASSIFICATION	on openvms runtime#exec() doesn't support the environment array so we only return the new values which then will be set in the generated dcl script inheriting the parent process environment
WITHOUT_CLASSIFICATION	locate the auxiliary script
WITHOUT_CLASSIFICATION	build the command
WITHOUT_CLASSIFICATION	writes the command into a temporary dcl script and returns the corresponding file object. the script will be deleted on exit. @param cmd the command line to execute as an array of strings. @param env the environment to set as an array of strings. @return the command file. @throws ioexception if errors are encountered creating the file.
WITHOUT_CLASSIFICATION	protected and private methods
WITHOUT_CLASSIFICATION	ensure that parent dir of dest file exists!
WITHOUT_CLASSIFICATION	add the single group arguments javadoc 1.2 rules multiple -group args allowed. each arg includes 3 strings -group [name] [packagelist]. elements in [packagelist] are colon-delimited. an element in [packagelist] may end with the wildcard.
WITHOUT_CLASSIFICATION	for each sourcepath entry add a directoryset with includes taken from packagenames attribute and nested package elements and excludes taken from excludepackages attribute and nested excludepackage elements
WITHOUT_CLASSIFICATION	override the logging of output in order to filter out generating messages. generating messages are set to a priority of verbose unless they appear after what could be an informational message.
WITHOUT_CLASSIFICATION	methods below all add specific selectors
WITHOUT_CLASSIFICATION	methods below all add specific selectors
WITHOUT_CLASSIFICATION	methods below all add specific selectors
WITHOUT_CLASSIFICATION	if verbosity is msg_verbose that mean we are doing regular logging (backwards as that sounds). in that case we want to print one message about deleting the top of the directory tree. otherwise the removedir method will handle messages for _all_ directories.
WITHOUT_CLASSIFICATION	hand down
WITHOUT_CLASSIFICATION	create intermediary directories - sometimes zip don't add them
WITHOUT_CLASSIFICATION	sql defines "--" as a comment to eol and in oracle it may contain a hint so we cannot just remove it instead we must end it
WITHOUT_CLASSIFICATION	in ant 1.1 <chmod dir="foo" /> means change the permissions of directory foo not anything inside of it. this is the case the second branch of the if statement below catches for backwards compatibility.
WITHOUT_CLASSIFICATION	for historical and performance reasons we have to do things in a rather complex way. (1) move is optimized to move directories if a fileset has been included completely therefore filesets need a special treatment. this is also required to support the failonerror semantice (skip filesets with broken basedir but handle the remaining collections). (2) we carry around a few protected methods that work on basedirs and arrays of names. to optimize stuff all resources with the same basedir get collected in separate lists and then each list is handled in one go.
WITHOUT_CLASSIFICATION	we create a fileset with the source file. this lets us combine our logic for handling output directories mapping etc.
WITHOUT_CLASSIFICATION	if input files are specified inputstring and inputstream are ignored classes that work with redirector attributes can enforce whatever warnings are needed
WITHOUT_CLASSIFICATION	ignore exception
WITHOUT_CLASSIFICATION	ignore exception
WITHOUT_CLASSIFICATION	ignore exception
WITHOUT_CLASSIFICATION	classpath attributes go into a vector
WITHOUT_CLASSIFICATION	we have already started reading this section this line is the first attribute. set it and then let the normal read handle the rest
WITHOUT_CLASSIFICATION	not modified so no file download. just return instead and trace out something so the user doesn't think that the download happened when it didn't
WITHOUT_CLASSIFICATION	we have started to (over)write dest but failed. try to delete the garbage we'd otherwise leave behind.
WITHOUT_CLASSIFICATION	start() would throw illegalthreadstateexception from threadgroup.add if it were destroyed
WITHOUT_CLASSIFICATION	kjc-1.5a doesn't support -encoding option now. but it will be supported near the feature.
WITHOUT_CLASSIFICATION	create an instance of the compiler redirecting output to the project log
WITHOUT_CLASSIFICATION	setup the apt executable
WITHOUT_CLASSIFICATION	on vms platform we need to create a special java options file containing the arguments and classpath for the javac command. the special file is supported by the "-v" switch on the vms jvm.
WITHOUT_CLASSIFICATION	must keep for subclass bc though unused checkstyleconstantnamecheck off - bc
WITHOUT_CLASSIFICATION	checkstyleconstantnamecheck on checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	add dest dir to classpath so that previously compiled and untouched classes are on classpath
WITHOUT_CLASSIFICATION	add dest dir to classpath so that previously compiled and untouched classes are on classpath
WITHOUT_CLASSIFICATION	for -sourcepath use the "sourcepath" value if present. otherwise default to the "srcdir" value.
WITHOUT_CLASSIFICATION	many system have been reported to get into trouble with long command lines - no not only windows -). posix seems to define a lower limit of 4k so use a temporary file if the total length of the command line exceeds this limit.
WITHOUT_CLASSIFICATION	there is a bootclasspath stated. by default the includejavaruntime is false. if the user has stated a bootclasspath and said to include the java runtime it's on their head!
WITHOUT_CLASSIFICATION	the following is data used while processing stdout of cvs command
WITHOUT_CLASSIFICATION	the date format is using a - format since 1.12.9 so we have 1.12.9- 'date yyyy/mm/dd hhmmss author name' 1.12.9+ 'date yyyy-mm-dd hhmmss z author name'
WITHOUT_CLASSIFICATION	default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	viewpath
WITHOUT_CLASSIFICATION	clearcase items
WITHOUT_CLASSIFICATION	clearcase items
WITHOUT_CLASSIFICATION	-branch
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	entries are of the form cvs 1.11 file module/filename is new current revision 1.1 cvs 1.11.9 file module/filename is new cvstag_2003_11_03_2 revision 1.1 or file module/filename changed from revision 1.4 to 1.6 or file module/filename is removed not included in release tag skinlf_12 cvs 1.11.9 file testantoine/antoine.bat is removed testantoine_1 revision 1.1.1.1 get rid of 'file module/"
WITHOUT_CLASSIFICATION	checkstylemembernamecheck off - bc
WITHOUT_CLASSIFICATION	we need character encoding aware printing here. so using printwriter over outputstreamwriter instead of printstream
WITHOUT_CLASSIFICATION	convert from ascii back to native encoding to convert to/from where to find input files where to put output files extension of output files if different
WITHOUT_CLASSIFICATION	we are forced to fork antlr since there is a call to system.exit() and there is nothing we can do right now to avoid this. -( (sba) i'm not removing this method to keep backward compatibility
WITHOUT_CLASSIFICATION	error if both are empty or both are set
WITHOUT_CLASSIFICATION	hascr is still true (for the second one)
WITHOUT_CLASSIFICATION	should be the default as it integrates better in ant.
WITHOUT_CLASSIFICATION	scan source and dest dirs to build up both copy lists and compile lists scandir(srcdir destdir)
WITHOUT_CLASSIFICATION	if it's a non source file copy it if a later date than the dest if it's a source file see if the destination class file needs to be recreated via compilation
WITHOUT_CLASSIFICATION	depending on implementation xmlreader can yield hips of warning only output then if user explicitly asked for it
WITHOUT_CLASSIFICATION	======================================================================== instance variables.
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	if only default is specified and the property previously existed in the property file it is unchanged.
WITHOUT_CLASSIFICATION	make sure to close all handles otherwise the garbage collector will close themwhenever possible and windows may complain about not being able to delete files.
WITHOUT_CLASSIFICATION	warn don't use the streamsource(file) ctor. it won't work with xalan prior to 2.2 because of systemid bugs.
WITHOUT_CLASSIFICATION	build the command line from what we got the format as specified in the ccm.exe help
WITHOUT_CLASSIFICATION	implementation of org.apache.tools.ant.taskdefs.executestreamhandler interface
WITHOUT_CLASSIFICATION	default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	pre ant 1.6 this method used to call getclass().getresource while ant 1.6 will call classloader.getresource(). the difference is that class.getresource expects a leading slash for "absolute" resources and will strip it before delegating to classloader.getresource - so we now have to emulate class's behavior.
WITHOUT_CLASSIFICATION	-c
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	-cfile
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	-------------
WITHOUT_CLASSIFICATION	-i- or -i-y or -i-n
WITHOUT_CLASSIFICATION	-i- or -i-y or -i-n
WITHOUT_CLASSIFICATION	-i- or -i-y or -i-n
WITHOUT_CLASSIFICATION	first off make sure that we've got a command and a vssdir and a label
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	--------------------
WITHOUT_CLASSIFICATION	-y
WITHOUT_CLASSIFICATION	-y
WITHOUT_CLASSIFICATION	-y
WITHOUT_CLASSIFICATION	vss items
WITHOUT_CLASSIFICATION	vss items
WITHOUT_CLASSIFICATION	skip version info and general purpose byte
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	first off make sure that we've got a command and a vssdir and a label
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes ("). this breaks clearcase.
WITHOUT_CLASSIFICATION	we get the root classes and build up a set of classes upon which they depend
WITHOUT_CLASSIFICATION	read the constant pool in and resolve it
WITHOUT_CLASSIFICATION	use the runtime object to execute an external command. use the redirectoutput inner class to direct the standard and error output from the command to the jre's standard output
WITHOUT_CLASSIFICATION	two maps are used to track local dtds that will be used in case the remote copies of these dtds cannot be accessed. the key for the map is the dtds public id and the value is the local location for the dtd
WITHOUT_CLASSIFICATION	depfile exists and is newer than the class file need to get dependency list from the map.
WITHOUT_CLASSIFICATION	without closure we may delete an inner class but not the top level class which would not trigger a recompile.
WITHOUT_CLASSIFICATION	always trigger file mode if commands are big enough
WITHOUT_CLASSIFICATION	fill in args
WITHOUT_CLASSIFICATION	fill in args
WITHOUT_CLASSIFICATION	iterate through the ref list & generate an entry for each or just rely on the fact that the tostring operator does this but noting that the separator is '' on windows '' on unix
WITHOUT_CLASSIFICATION	now run the command of exe + settings + files
WITHOUT_CLASSIFICATION	directory where "source" ejb files are stored and where stubs and skeletons will also be written.
WITHOUT_CLASSIFICATION	this hashtable maintains a list of ejb class files processed by the ejbc utility (both "source" class files as well as stubs and skeletons). the key for the hashtable is a string representing the path to the class file (relative to the destination directory). the value for the hashtable is a file object which reference the actual class file.
WITHOUT_CLASSIFICATION	execute the ejbc utility -- stubs/skeletons are rebuilt if needed
WITHOUT_CLASSIFICATION	ejb's display name ejb's home interface name ejb's remote interface name ejb's implementation class ejb's primary key class or "stateful" or "stateless" does this ejb support cmp? does this ejb support iiop? does this ejb require failover? cmp descriptor list
WITHOUT_CLASSIFICATION	check the timestamp on the ejb implementation class. note that if only the implementation class has changed it's not necessary to rebuild the ejb stubs and skeletons. for this reason we ensure the file exists (using lastmodified above) but we don't compare it's timestamp with the timestamps of the home and remote interfaces (because it's irrelevant in determining if ejbc must be run)
WITHOUT_CLASSIFICATION	classpath add at the end of the classpath the system classpath in order to find the tools.jar file
WITHOUT_CLASSIFICATION	ejb jar file
WITHOUT_CLASSIFICATION	client jar file
WITHOUT_CLASSIFICATION	have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	-------------
WITHOUT_CLASSIFICATION	-------------
WITHOUT_CLASSIFICATION	descriptorname = <path><basename><basenameterminator><remainder> examples = /org/objectweb/fooappli/foo/foo-ejb-jar.xml examples = /org/objectweb/fooappli/foo/foo.xml (jonas convention)
WITHOUT_CLASSIFICATION	class name (search in the classpath provided for the ejbjar element)
WITHOUT_CLASSIFICATION	additionalargs
WITHOUT_CLASSIFICATION	get all the files in the descriptor directory
WITHOUT_CLASSIFICATION	if an explicit securitypolicy file was specified it maybe an absolute path. use the project to resolve it.
WITHOUT_CLASSIFICATION	since the descriptor read properly everything should be o.k.
WITHOUT_CLASSIFICATION	lastly create file object for the jar files. if we are using a flat destination dir then we need to redefine basename!
WITHOUT_CLASSIFICATION	for the genericdeploymenttool do nothing. vendor specific subclasses should throw a buildexception if the configuration is invalid for their server.
WITHOUT_CLASSIFICATION	get the filename of vendor specific descriptor
WITHOUT_CLASSIFICATION	now that we have the weblogic descriptor we parse the file to find other descriptors needed to deploy the bean. this could be the weblogic-cmp-rdbms.xml or any other o/r mapping tool descriptors.
WITHOUT_CLASSIFICATION	update with changed bean class
WITHOUT_CLASSIFICATION	need to close files and perhaps rename output
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	empty
WITHOUT_CLASSIFICATION	are any of the above out of date. we find the implementation classes and see if they are older than any of the above or the .ser file itself.
WITHOUT_CLASSIFICATION	filenames of the standard ejb descriptor (which is passed to this class from the parent "ejbjar" task) and the ias-specific ejb descriptor (whose name is determined by this class). both filenames are relative to the directory specified by the "srcdir" attribute in the ejbjar task.
WITHOUT_CLASSIFICATION	remove the .class
WITHOUT_CLASSIFICATION	create the output .jar if required
WITHOUT_CLASSIFICATION	change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	available specification version must be >= required
WITHOUT_CLASSIFICATION	implementation version must be >= required
WITHOUT_CLASSIFICATION	warning we trim the values of all the attributes because some extension declarations are badly defined (ie have spaces after version or vendorid)
WITHOUT_CLASSIFICATION	validates url
WITHOUT_CLASSIFICATION	the new value this needs to be here because it is required to calculate the next position to search from at the end of the loop
WITHOUT_CLASSIFICATION	iterator through all the files and process them.
WITHOUT_CLASSIFICATION	keys to optional attributes
WITHOUT_CLASSIFICATION	use the directory containing the target as the output directory
WITHOUT_CLASSIFICATION	null watchdog means no timeout you'd better not check with null
WITHOUT_CLASSIFICATION	pre ant 1.6 this method used to call getclass().getresource while ant 1.6 will call classloader.getresource(). the difference is that class.getresource expects a leading slash for "absolute" resources and will strip it before delegating to classloader.getresource - so we now have to emulate class's behavior.
WITHOUT_CLASSIFICATION	this comment extract from junit task may also apply here "in vm is not very nice since it could probably hang the whole build. imho this method should be avoided and it would be best to remove it in future versions. tbd. (sba)"
WITHOUT_CLASSIFICATION	not necessary as jdepend would fail but why loose some time?
WITHOUT_CLASSIFICATION	not necessary as jdepend would fail but why loose some time?
WITHOUT_CLASSIFICATION	not necessary as jdepend would fail but why loose some time?
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if we get here it could be because we are trying to put a directory entry that already exists. for example we're trying to write "com" but a previous entry from another mergefile was called "com". in that case just ignore the error and go on to the next entry.
WITHOUT_CLASSIFICATION	first some notes. on mrj 2.2.2 getting the size compressed size and crc32 from the zipinputstream does not work for compressed (deflated) files. those calls return -1. for uncompressed (stored) files those calls do work. however using zipfile.getentries() works for both compressed and uncompressed files. now from some simple testing i did it seems that the value of crc-32 is independent of the compression setting. so it should be easy to pass this information on to the output entry.
WITHOUT_CLASSIFICATION	quick return - no output do nothing.
WITHOUT_CLASSIFICATION	self-describing as of junit 4 (#38811). but trim "(classname)".
WITHOUT_CLASSIFICATION	the trick to integrating test output to the formatter is to create a special test class that asserts an error and tell the formatter that it raised.
WITHOUT_CLASSIFICATION	ignored.
WITHOUT_CLASSIFICATION	pre ant 1.6 this method used to call getclass().getresource while ant 1.6 will call classloader.getresource(). the difference is that class.getresource expects a leading slash for "absolute" resources and will strip it before delegating to classloader.getresource - so we now have to emulate class's behavior.
WITHOUT_CLASSIFICATION	okay we have a copy of the child now the child becomes the parent and we are iterating recursively over its children.
WITHOUT_CLASSIFICATION	see wraplistener for reason
WITHOUT_CLASSIFICATION	if there is a suite method available then try to extract the suite from it. if there is an error here it will be caught below and reported.
WITHOUT_CLASSIFICATION	junit 4 does not distinguish between errors and failures even in the junit 3 adapter. so we need to help it a bit to retain compatibility for junit 3 tests.
WITHOUT_CLASSIFICATION	sorted by newest kaffe version first
WITHOUT_CLASSIFICATION	getproject().log("listing files in directory " + directory project.msg_debug)
WITHOUT_CLASSIFICATION	to remove directories start by the end of the list the trunk does not let itself be removed before the leaves
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	numberformatexception or arrayoutofbondsexception could happen here
WITHOUT_CLASSIFICATION	throw exception on errors (except up-to-date) when a server is down the code expects perforce client error connect to server failed check $p4port. tcp connect to localhost1666 failed. connect localhost1666 connection refused some forms producing commands (p4 -s change -o) do tag the output others don't.. others mark errors as info for example edit a file which is already open for edit.. just look for error - catches most things.
WITHOUT_CLASSIFICATION	because of the way i create the full target path there must be no slash at the end of targetfolder and foldername however if the slash or backslash is the only character leave it alone
WITHOUT_CLASSIFICATION	connect to the starteam server and log on.
WITHOUT_CLASSIFICATION	simplest constructor uses default encryption algorithm and compression level.
WITHOUT_CLASSIFICATION	create a variable dir that contains the name of the starteam folder that is the root folder in this view. get the default path to the current view.
WITHOUT_CLASSIFICATION	we want to display the folder the same way you would enter it on the command line so we remove the view name (which is also the name of the root folder and therefore shows up at the start of the path).
WITHOUT_CLASSIFICATION	if we displayed the project view item type or folder then show the list of relevant item properties.
WITHOUT_CLASSIFICATION	if we find a "file" attribute then act on a file otherwise act on a project
WITHOUT_CLASSIFICATION	special setters for the sub-classes
WITHOUT_CLASSIFICATION	special setters for the sub-classes
WITHOUT_CLASSIFICATION	login info is required
WITHOUT_CLASSIFICATION	path to the sourceoffsite home directory /home/user/.sos
WITHOUT_CLASSIFICATION	check if source is a directory
WITHOUT_CLASSIFICATION	there is a bug in javasound 0.90 (jdk1.3beta). it prevents correct termination of the vm. so we have to exit ourselves.
WITHOUT_CLASSIFICATION	catch everything - some of the above return nulls throw exceptions or generally misbehave in the event of a problem etc
WITHOUT_CLASSIFICATION	only track progress for files larger than 100kb in verbose mode
WITHOUT_CLASSIFICATION	only track progress for files larger than 100kb in verbose mode
WITHOUT_CLASSIFICATION	since filesize keeps on decreasing we have to store the initial filesize
WITHOUT_CLASSIFICATION	note it's important to scan the items before we make the unmatchedfilemap because that creates a bunch of new folders and files (unattached to repository) and we don't want to include those in our traversal.
WITHOUT_CLASSIFICATION	if the file doesn't pass the include/exclude tests skip it.
WITHOUT_CLASSIFICATION	if the file doesn't pass the include/exclude tests skip it.
WITHOUT_CLASSIFICATION	we try to update the status once to give starteam another chance.
WITHOUT_CLASSIFICATION	note it's important to scan the items before we make the unmatched file map because that creates a bunch of new folders and files (unattached to repository) and we don't want to include those in our traversal.
WITHOUT_CLASSIFICATION	once we find a folder that isn't in the repository anything below it can be deleted.
WITHOUT_CLASSIFICATION	/ default values for attributes. /
WITHOUT_CLASSIFICATION	default behavior is to fail on an error default behavior is to not overwrite default behavior is make a single link
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss add vss items [-b] [-c] [-d-] [-h] [-i-] [-k] [-n] [-o] [-r] [-w] [-y] [-?] as specified in the ss.exe help
WITHOUT_CLASSIFICATION	build the command line from what we got the format is ss checkout vss items [-g] [-c] [-h] [-i-] [-n] [-o] [-r] [-v] [-y] [-?] as specified in the ss.exe help
WITHOUT_CLASSIFICATION	not a .class file or the one we'd generate
WITHOUT_CLASSIFICATION	we have the loader which is being used to load the catalogresolver. can it see the apacheresolver? the base resolver will only be able to create the apacheresolver if it can see it - doesn't use the context loader.
WITHOUT_CLASSIFICATION	use the passed in base in preference to the base from matchingentry which is either null or the directory in which the external catalog file from which it was obtained is located. we make a copy so matchingentry's original base is untouched. this is the standard behavior as per my reading of the jaxp and xml catalog specs. cks 11/7/2002
WITHOUT_CLASSIFICATION	get method instances for each of the methods we need to call on the resolverimpl using reflection. we can't call them directly because they require on the xml-commons resolver library which may not be available in the classpath.
WITHOUT_CLASSIFICATION	we didn't match a resourcelocation but since we only support public and uri entry types internally it is still possible that there is another entry in an external catalog that will match. we call apache resolver's resolveentity method to cover this possibility.
WITHOUT_CLASSIFICATION	record data about the last scanned resource
WITHOUT_CLASSIFICATION	path containing one or more elements
WITHOUT_CLASSIFICATION	just append begintoken and search further
WITHOUT_CLASSIFICATION	create the command to run java including user specified options
WITHOUT_CLASSIFICATION	jdk usage command line says that -jar must be the first option as there is a bug in jdk < 1.4 that forces the jvm type to be specified as the first option it is appended here as specified in the docs even though there is in fact no order.
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	checkstylevisibilitymodifier on
WITHOUT_CLASSIFICATION	now check each resource in case the child only lets through files from any children it may have
WITHOUT_CLASSIFICATION	quick return directories cannot be signed
WITHOUT_CLASSIFICATION	when using this as a custom selector this method will be called. it translates each parameter into the appropriate setxxx() call. @param parameters the complete set of parameters for this selector
WITHOUT_CLASSIFICATION	when using this as a custom selector this method will be called. it translates each parameter into the appropriate setxxx() call. @param parameters the complete set of parameters for this selector
WITHOUT_CLASSIFICATION	when using this as a custom selector this method will be called. it translates each parameter into the appropriate setxxx() call. @param parameters the complete set of parameters for this selector
WITHOUT_CLASSIFICATION	when using this as a custom selector this method will be called. it translates each parameter into the appropriate setxxx() call. @param parameters the complete set of parameters for this selector
WITHOUT_CLASSIFICATION	when using this as a custom selector this method will be called. it translates each parameter into the appropriate setxxx() call. @param parameters the complete set of parameters for this selector
WITHOUT_CLASSIFICATION	when using this as a custom selector this method will be called. it translates each parameter into the appropriate setxxx() call. @param parameters the complete set of parameters for this selector.
WITHOUT_CLASSIFICATION	----- set default values -----
WITHOUT_CLASSIFICATION	nothing specified - use default
WITHOUT_CLASSIFICATION	how to handle non-file-resources? i copy temporarily the resource to a file and use the file-implementation.
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	no-op
WITHOUT_CLASSIFICATION	find the out-of-date targets
WITHOUT_CLASSIFICATION	write namespace declarations
WITHOUT_CLASSIFICATION	extrapolating from "netware may have a "java" in that directory but 99% of the time you don't want to execute it" -- jeff tulley <jtulley@novell.com>
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	check for bsf first then javax this version does not check if the scriptmanager supports the language.
WITHOUT_CLASSIFICATION	notreached
WITHOUT_CLASSIFICATION	notreached
WITHOUT_CLASSIFICATION	no need to synchronize as vector is always synchronized
WITHOUT_CLASSIFICATION	eliminate consecutive slashes after the drive spec
WITHOUT_CLASSIFICATION	if it does not then the file is not up to date.
WITHOUT_CLASSIFICATION	record destdir for later use in getresource
WITHOUT_CLASSIFICATION	check to see if it's an inner class 'com.company.class$inner'
WITHOUT_CLASSIFICATION	treat non-matching groups as empty matches
WITHOUT_CLASSIFICATION	treat non-matching groups as empty matches
WITHOUT_CLASSIFICATION	a 6-byte block header the value chosen arbitrarily as 0x314159265359 -). a 32 bit value does not really give a strong enough guarantee that the value will not appear by chance in the compressed datastream. worst-case probability of this event for a 900k block is about 2.0e-3 for 32 bits 1.0e-5 for 40 bits and 4.0e-8 for 48 bits. for a compressed file of size 100gb -- about 100000 blocks -- only a 48-bit marker will do. nb normal compression/ decompression do not rely on these statistical properties. they are only important when trying to recover blocks from damaged files.
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	bsbuffshadow |= 0 << (32 - bsliveshadow - 1)
WITHOUT_CLASSIFICATION	inlined bsw(len_selctr[sfmap_i] & 0xff code_selctr[sfmap_i])
WITHOUT_CLASSIFICATION	following block contains unrolled code which could be shortened by coding it in additional loops.
WITHOUT_CLASSIFICATION	complete the big bucket [ss] by quicksorting any unsorted small buckets [ss j]. hopefully previous pointer-scanning phases have already completed many of the small buckets [ss j] so we don't have to sort them at all.
WITHOUT_CLASSIFICATION	step 2 now scan this big bucket so as to synthesise the sorted order for small buckets [t ss] for all t != ss.
WITHOUT_CLASSIFICATION	900021 byte 3600000 byte 3600000 byte ------------ 8433529 byte ============
WITHOUT_CLASSIFICATION	the clean way would be to throw an exception. throw new ioexception("crc error")
WITHOUT_CLASSIFICATION	make next blocks readable without error (repair feature not yet documented not tested)
WITHOUT_CLASSIFICATION	setting up the unzftab entries here is not strictly necessary but it does save having to do it later in a separate pass and so saves a block's worth of cache misses.
WITHOUT_CLASSIFICATION	tt.length should always be >= length but theoretically it can happen if the compressor mixed small and large blocks. normally only the last block will be smaller than others.
WITHOUT_CLASSIFICATION	deprecated but email is byte-oriented
WITHOUT_CLASSIFICATION	note we have fit eof and the block is not full! this is a broken archive. it does not follow the standard blocking algorithm. however because we are generous and it requires little effort we will simply ignore the error and continue as if the entire block were read. this does not appear to break anything upstream. we used to return false in this case. thanks to 'yohann.roussel@alcatel.fr' for this fix.
WITHOUT_CLASSIFICATION	version needed to extract general purpose bit flag
WITHOUT_CLASSIFICATION	requires version 2 as we are going to store length info in the data descriptor
WITHOUT_CLASSIFICATION	file comment
WITHOUT_CLASSIFICATION	swallow throw the original exception instead
WITHOUT_CLASSIFICATION	compressed size
WITHOUT_CLASSIFICATION	disk number start
WITHOUT_CLASSIFICATION	total number of entries in
WITHOUT_CLASSIFICATION	total number of entries in
WITHOUT_CLASSIFICATION	$non-nls-1$
