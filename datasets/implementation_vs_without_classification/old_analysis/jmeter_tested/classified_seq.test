WITHOUT_CLASSIFICATION	/*                             * Calling a method via reflection results in wrapping any                             * Exceptions in ITE; unwrap these here so runProtected can                             * allocate them correctly.                             */
WITHOUT_CLASSIFICATION	/*                     * Now check for invalid message format: if string contains {0}                     * and ' there may be a problem, so do a format with dummy                     * parameters and check if there is a { in the output. A bit                     * crude, but should be enough for now.                     */
WITHOUT_CLASSIFICATION	/*                     * TestSuite only finds testXXX() methods, and does not look                     * for suite() methods.                     *                      * To provide more compatibilty with stand-alone tests,                     * where JUnit does look for a suite() method, check for it                     * first here.                     *                      */
WITHOUT_CLASSIFICATION	/*                 * Synch is needed because multiple threads can update the counts.                 */
WITHOUT_CLASSIFICATION	/*                 * Synch is needed because multiple threads can update the counts.                 */
WITHOUT_CLASSIFICATION	/*             * All done now ,so return the empty string - this allows the caller             * to append __CSVRead(file,next) to the last instance of             * __CSVRead(file,col)             *             * N.B. It is important not to read any further lines at this point,             * otherwise the wrong line can be retrieved when using multiple             * threads.             */
WITHOUT_CLASSIFICATION	/*             * All done, so return             */
WITHOUT_CLASSIFICATION	/*             * Also set up HttpClient defaults             */
WITHOUT_CLASSIFICATION	/*             * Create a Header Manager to ensure that the browsers headers are             * captured and sent to the server             */
WITHOUT_CLASSIFICATION	/*             * DecimalFormat adds the number to the end of the format if there             * are no formatting characters, so we need a way to prevent this             * from messing up the file name.             *             */
WITHOUT_CLASSIFICATION	/*             * GenericController controller = new GenericController();             * GenericController sub_1 = new GenericController();             * sub_1.addTestElement(new IfController("10<100"));             * sub_1.addTestElement(new IfController("true==false"));             * controller.addTestElement(sub_1); controller.addTestElement(new             * IfController("false==false"));             *              * IfController sub_2 = new IfController(); sub_2.setCondition( "10<10000");             * GenericController sub_3 = new GenericController();             *              * sub_2.addTestElement(new IfController( " \"a\".equals(\"a\")" ) );             * sub_3.addTestElement(new IfController("2>100"));             * sub_3.addTestElement(new IfController("false==true"));             * sub_2.addTestElement(sub_3); sub_2.addTestElement(new             * IfController("2==3")); controller.addTestElement(sub_2);             */
WITHOUT_CLASSIFICATION	/*             * GenericController sub_1 = new GenericController();             * sub_1.addTestElement(new IfController("3==3"));             * controller.addTestElement(sub_1); controller.addTestElement(new             * IfController("false==true"));             */
WITHOUT_CLASSIFICATION	/*             * IfController controller = new IfController("12==12");             * controller.initialize();             */
WITHOUT_CLASSIFICATION	/*             * N.B. Revision 323346 introduced the ClassCast check, but then used iter.next()             * to fetch the item to be cast, thus skipping the element that did not cast.             * Reverted to work more like the original code, but with the check in place.             * Added a warning message so can track whether it is necessary             */
WITHOUT_CLASSIFICATION	/*             * N.B. Stop reading the file if we get a blank line: This allows             * for trailing comments in the file             */
WITHOUT_CLASSIFICATION	/*             * Only samplers have the thread context set up by JMeterThread at             * present, so suppress the warning for now             */
WITHOUT_CLASSIFICATION	/*             * Parent elapsed total should be no smaller than the sum of the individual samples.             * It may be greater by the timer granularity.             */
WITHOUT_CLASSIFICATION	/*             * Set up the sample result details             */
WITHOUT_CLASSIFICATION	/*             * Textfield uses \n (LF) to delimit lines; we need to send CRLF.             * Rather than change the way that arguments are processed by the             * samplers for raw data, it is easier to fix the data.             * On retrival, CRLF is converted back to LF for storage in the text field.             * See             */
WITHOUT_CLASSIFICATION	/*             * The following is needed for HTTPClient.             * (originally tried doing this in HTTPSampler2,             * but it appears that it was done too late when running in GUI mode)             * Set the commons logging default to Avalon Logkit, if not already defined             */
WITHOUT_CLASSIFICATION	/*             * We don't want to store any cookies in the generated test plan             */
WITHOUT_CLASSIFICATION	/*             * samp.setDomain(this.getDomain()); samp.setPort(this.getPort());             */
WITHOUT_CLASSIFICATION	/*         *  Simple test with single Selection controller         *  Generic Controller         *  + Sampler "before"         *  + Switch Controller         *  + + Sampler "zero"         *  + + Sampler "one"         *  + + Sampler "two"         *  + + Sampler "three"         *  + Sampler "after"         */
WITHOUT_CLASSIFICATION	/*         *  We use the HostConfiguration as the key to retrieve the HttpClient,         *  so need to ensure that any items used in its equals/hashcode methods are         *  not changed after use, i.e.:         *  host, port, protocol, localAddress, proxy         *        */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see jodd.lagarto.EmptyTagVisitor#script(jodd.lagarto.Tag,         * java.lang.CharSequence)         */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see jodd.lagarto.EmptyTagVisitor#tag(jodd.lagarto.Tag)         */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc) Message Settings         */
WITHOUT_CLASSIFICATION	/*         * A HTTP RESPONSE HEADER LOOKS ALOT LIKE:         *         * HTTP/1.0 200 OK Date: Wednesday, 02-Feb-94 23:04:12 GMT Server:         * NCSA/1.1 MIME-version: 1.0 Last-modified: Monday, 15-Nov-93 23:33:16         * GMT Content-Type: text/html Content-Length: 2345 \r\n         */
WITHOUT_CLASSIFICATION	/*         * Add the header panel         */
WITHOUT_CLASSIFICATION	/*         * Additional Settings         */
WITHOUT_CLASSIFICATION	/*         * Auth Settings         */
WITHOUT_CLASSIFICATION	/*         * Can be caused by: - failure to read XSD file - xml does not match XSD         */
WITHOUT_CLASSIFICATION	/*         * Can be caused by: - premature end of file - non-whitespace content         * after trailer         */
WITHOUT_CLASSIFICATION	/*         * Consider using Apache commons pool to create a pool of document         * builders or make sure XMLParserUtils creates builders efficiently.         */
WITHOUT_CLASSIFICATION	/*         * Controller         * + Before         * + Switch (cond)         * + + zero         * + + Controller sub_1         * + + + one         * + + two         * + + Controller sub_2         * + + + three         * + After         */
WITHOUT_CLASSIFICATION	/*         * Don't redirect the following:         * 300 = Multiple choice         * 304 = Not Modified         * 305 = Use Proxy         * 306 = (Unused)         */
WITHOUT_CLASSIFICATION	/*         * E-Mail Settings         */
WITHOUT_CLASSIFICATION	/*         * Generic Controller         * - before         * - While Controller ${VAR}         * - - one         * - - two         * - - Simple Controller         * - - - three         * - - - four         * - after         */
IMPLEMENTATION	/*         * Have we reached the reporting boundary?         * Need to allow for a margin of error, otherwise can miss the slot.         * Also need to check we've not hit the window already         */
WITHOUT_CLASSIFICATION	/*         * Here's where the test really starts. Run a Full GC now: it's no harm         * at all (just delays test start by a tiny amount) and hitting one too         * early in the test can impair results for short tests.         */
WITHOUT_CLASSIFICATION	/*         * If previous time is zero, then target will be in the past.         * This is what we want, so first sample is run without a delay.        */
WITHOUT_CLASSIFICATION	/*         * If we are creating a JSR223 element, add the cache key property.         *          * Note that this cannot be done in the JSR223BeanInfoSupport class         * because that causes problems with the group; its properties are         * not always set up before they are needed. This cause various         * issues with the GUI:         * - wrong field attributes (should not allow null)         * - sometimes GUI is completely mangled         * - field appears at start rather than at end.         * - the following warning is logged:         * jmeter.testbeans.gui.GenericTestBeanCustomizer:          * org.apache.jmeter.util.JSR223TestElement#cacheKey does not appear to have been configured         *          * Adding the group here solves these issues, and it's also         * possible to add the key just before the script panel         * to which it relates.         *          * It's not yet clear why this should be, but it looks as though         * createPropertyGroup does not work properly if it is called from         * any subclasses of this class.         *          */
WITHOUT_CLASSIFICATION	/*         * N.B. Must use LinkedHashMap for field type         * XStream creates a plain HashMap if one uses Map as the field type.         */
WITHOUT_CLASSIFICATION	/*         * N.B. Requires ApacheJMeter_functions.jar to be on the classpath,         * otherwise the function cannot be resolved.        */
WITHOUT_CLASSIFICATION	/*         * Need to reset the containers for repeated runs; about the only way         * for functions to detect that a run is starting seems to be the         * setParameters() call.         */
WITHOUT_CLASSIFICATION	/*         * Need to reset the containers for repeated runs; about the only way         * for functions to detect that a run is starting seems to be the         * setParameters() call.         */
WITHOUT_CLASSIFICATION	/*         * Note: if is == null, the arrays will be empty         */
WITHOUT_CLASSIFICATION	/*         * Note: the item name is used by ChangeLanguage to create a Locale for         * that language, so need to ensure that the language strings are valid         * If they exist, use the Locale language constants.         * Also, need to ensure that the names are valid resource entries too.         */
WITHOUT_CLASSIFICATION	/*         * Perform the sampling         */
WITHOUT_CLASSIFICATION	/*         * Perform the sampling         */
WITHOUT_CLASSIFICATION	/*         * Reset Locale if necessary so other locales are properly handled         */
WITHOUT_CLASSIFICATION	/*         * Run tidy.         */
WITHOUT_CLASSIFICATION	/*         * Security Settings         */
WITHOUT_CLASSIFICATION	/*         * Server Settings         */
WITHOUT_CLASSIFICATION	/*         * Test:          * Before          * Selection Controller         *  - zero (default)         *  - simple controller 1         *  - - one         *  - - two         *  - simple controller 2         *  - - three         *  - - four         *  - five         *  - six         * After         *          * cond  = Switch condition          * exp[] = expected results         */
WITHOUT_CLASSIFICATION	/*         * To avoid re-opening the file repeatedly after an error, only try to         * open it in the first execute() call (It may be re=opened at EOF, but         * that will cause at most one failure.)         */
WITHOUT_CLASSIFICATION	/*         * To disable downloading and rendering of images and frames, enable the         * editor-kit. The Stream property can then be         */
WITHOUT_CLASSIFICATION	/*         * Unwraps the URLString class to return the URL         */
WITHOUT_CLASSIFICATION	/*         * c.gridx = 1; c.gridy = 2; g.setConstraints(close, c);         * panel.add(close);         */
WITHOUT_CLASSIFICATION	/*         * the beginning of the line is a "delimiter" so that ,a,b,c returns ""         * "a" "b" "c"         */
WITHOUT_CLASSIFICATION	/*     *     * Creates new SSL context     * @return SSL context     * @throws GeneralSecurityException     */
WITHOUT_CLASSIFICATION	/*     *     * The string is made private so the compiler can't propagate it into     * JMeterUtils. (Java compilers may make copies of final variables)     *     * This ensures that JMeterUtils always gets the correct     * version, even if JMeterUtils is not re-compiled during the build.     */
WITHOUT_CLASSIFICATION	/*     *   Write out search results in a stable order (including order of all subelements which might     * be reordered like attributes and their values) so that simple textual comparison can be done,     * unless the number of results exceeds {@link #MAX_SORTED_RESULTS} in which case just stream     * the results out without sorting.     */
WITHOUT_CLASSIFICATION	/*     *  N.B. this class is shared between threads (NoThreadClone) so all access to variables     *  needs to be protected by a lock (either sync. or volatile) to ensure safe publication.     */
WITHOUT_CLASSIFICATION	/*     *  Predefined strings for makeMenu().     *  These are used as menu categories in the menuMap Hashmap,     *  and also for resource lookup in messages.properties    */
WITHOUT_CLASSIFICATION	/*     *  The datasource is set up by testStarted and cleared by testEnded.     *  These are called from different threads, so access must be synchronized.     *  The same instance is called in each case.    */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.apache.jmeter.protocol.http.util.accesslog.LogFilter#excPattern(java.lang.String)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.apache.jmeter.testelement.TestStateListener#testEnded()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.apache.jmeter.testelement.TestStateListener#testEnded(java.lang.String)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.apache.jmeter.testelement.TestStateListener#testStarted()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.apache.jmeter.testelement.TestStateListener#testStarted(java.lang.String)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.apache.jmeter.util.LocaleChangeListener#localeChanged(org.apache.jmeter.util.LocaleChangeEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc) A new instance is created for each thread group, and the     * clone() method is then called to create copies for each thread in a     * thread group. This means that the lock object is common to a thread     * group; separate thread groups have separate locks. If this is not     * intended, the lock object could be made static.     *     * @see java.lang.Object#clone()     */
WITHOUT_CLASSIFICATION	/*     * -----------------------------------------------------------------------     * Methods     * -----------------------------------------------------------------------     */
WITHOUT_CLASSIFICATION	/*     * ------------------------------------------------------------------------     * Constructors     * ------------------------------------------------------------------------     */
WITHOUT_CLASSIFICATION	/*     * ------------------------------------------------------------------------     * Fields     * ------------------------------------------------------------------------     */
WITHOUT_CLASSIFICATION	/*     * ------------------------------------------------------------------------     * Methods     * ------------------------------------------------------------------------     */
WITHOUT_CLASSIFICATION	/*     * ------------------------------------------------------------------------     * Methods implemented from interface org.apache.jmeter.config.Modifier     * ------------------------------------------------------------------------     */
WITHOUT_CLASSIFICATION	/*     * <p> Returns a <code>String</code> value for a character-delimited column     * value enclosed in the quote character, if required. </p>     *      * <p> If the value contains a special character, then the String value is     * returned enclosed in the quote character. </p>     *      * <p> Any quote characters in the value are doubled up. </p>     *      * <p> If the value does not contain any special characters, then the String     * value is returned unchanged. </p>     *      * <p> N.B. The list of special characters includes the quote character.     * </p>     *      * @param input the input column String, may be null (without enclosing     * delimiters)     *      * @param specialChars special characters; second one must be the quote     * character     *      * @return the input String, enclosed in quote characters if the value     * contains a special character, <code>null</code> for null string input     */
WITHOUT_CLASSIFICATION	/*     * @param element     */
WITHOUT_CLASSIFICATION	/*     * @param res HTTPSampleResult to check     * @return parser class name (may be "") or null if entry does not exist     */
WITHOUT_CLASSIFICATION	/*     * @param response @return     */
WITHOUT_CLASSIFICATION	/*     * @return     */
WITHOUT_CLASSIFICATION	/*     * @see org.apache.jmeter.gui.action.Command#getActionNames()     */
WITHOUT_CLASSIFICATION	/*     * @see org.apache.jmeter.gui.action.Command#getActionNames()     */
WITHOUT_CLASSIFICATION	/*     * @see org.apache.jmeter.report.gui.action.Command#getActionNames()     */
WITHOUT_CLASSIFICATION	/*     * A dummy class to pass the pointer of URL.     */
WITHOUT_CLASSIFICATION	/*     * A dummy class to pass the pointer of URL.     */
WITHOUT_CLASSIFICATION	/*     * A dummy class to pass the pointer of URL.     */
WITHOUT_CLASSIFICATION	/*     * Allow functions etc to register for testStopped notification.     * Only used by the function parser so far.     * The list is merged with the testListeners and then cleared.     */
WITHOUT_CLASSIFICATION	/*     * Although the lock appears to be an instance lock, in fact the lock is     * shared between all threads in a thread group, but different thread groups     * have different locks - see the clone() method below     *     * The lock ensures that all the variables are processed together, which is     * important for functions such as __CSVRead and _StringFromFile.     */
WITHOUT_CLASSIFICATION	/*     * Argument types used to create the method.     * May be provided explicitly, or derived from the constructor argument list.     */
WITHOUT_CLASSIFICATION	/*     * Cached copy of Totals for this instance.     * The variables do not need to be synchronised,     * as they are not shared between threads     * However the contents do need to be synchronized.     */
WITHOUT_CLASSIFICATION	/*     * Called by CSVRead(x,next) - sets the row to nil so the next row will be     * picked up the next time round     *     */
WITHOUT_CLASSIFICATION	/*     * Called by:     * - ClientJMeterEngine.exe() which is called on remoteStop      */
WITHOUT_CLASSIFICATION	/*     * Check that function descriptions are OK     */
WITHOUT_CLASSIFICATION	/*     * Checks for LAST or LASTsuffix.     * Returns the LAST name with .JMX replaced by suffix.     */
WITHOUT_CLASSIFICATION	/*     * Class to be used to create the Method.     * Will be non-null if either Class or Object was provided during construction.     *     *  Can be used instead of invokee, e.g. when using interfaces.    */
WITHOUT_CLASSIFICATION	/*     * Class to handle generating the delimited string. - adds the delimiter     * if not the first call - quotes any strings that require it     */
WITHOUT_CLASSIFICATION	/*     * Constructor for use during startup (intended for non-GUI use) @param name     * of summariser     */
WITHOUT_CLASSIFICATION	/*     * Constructor is initially called once for each occurrence in the test plan     * For GUI, several more instances are created Then clear is called at start     * of test Called several times during test startup The name will not     * necessarily have been set at this point.     */
WITHOUT_CLASSIFICATION	/*     * Constructor is initially called once for each occurrence in the test plan     * For GUI, several more instances are created Then clear is called at start     * of test Called several times during test startup The name will not     * necessarily have been set at this point.     */
WITHOUT_CLASSIFICATION	/*     * Constructor is initially called once for each occurrence in the test plan.     * For GUI, several more instances are created.     * Then clear is called at start of test.     * Called several times during test startup.     * The name will not necessarily have been set at this point.     */
WITHOUT_CLASSIFICATION	/*     * Contains the items needed to collect stats for a summariser     *     */
WITHOUT_CLASSIFICATION	/*     * Convert position in buffer to Calendar type Assumes that pos >=0 (which     * is true for getCaretPosition())     */
WITHOUT_CLASSIFICATION	/*     * Convert to a shorter String for test purposes     *     * @return the string value     */
WITHOUT_CLASSIFICATION	/*     * Converts a class file from the text stored in a Jar file to a version     * that can be used in Class.forName().     *     * @param strClassName     *            the class name from a Jar file     * @return String the Java-style dotted version of the name     */
WITHOUT_CLASSIFICATION	/*     * Create a data input text field     *     * @return the panel for entering the data     */
WITHOUT_CLASSIFICATION	/*     * Create a set of default parameters from the ones initially created.     * This allows the defaults to be overridden if necessary from the properties file.     */
WITHOUT_CLASSIFICATION	/*     * Determine if content-type is known to be binary, i.e. not displayable as text.     *     * @param ct content type     * @return true if content-type is of type binary.     */
WITHOUT_CLASSIFICATION	/*     * Ensure that a report is not skipped if we are slightly late in checking     * the time.     */
WITHOUT_CLASSIFICATION	/*     * Ensure that the required class variables are cloned,     * as this is not currently done by the super-implementation.     */
WITHOUT_CLASSIFICATION	/*     * Evaluate the condition, which can be:     * blank or LAST = was the last sampler OK?     * otherwise, evaluate the condition to see if it is not "false"     * If blank, only evaluate at the end of the loop     *     * Must only be called at start and end of loop     *     * @param loopEnd - are we at loop end?     * @return true means OK to continue     */
WITHOUT_CLASSIFICATION	/*     * Externally callable suite() method for use by JUnit Allows tests to be     * run directly under JUnit, rather than using the startup code in the rest     * of the module. No parameters can be passed in, so it is less flexible.     */
WITHOUT_CLASSIFICATION	/*     * Extract titles from component_reference.xml     */
WITHOUT_CLASSIFICATION	/*     * Extract titles from component_reference.xml     */
WITHOUT_CLASSIFICATION	/*     * Extract titles from functions.xml     */
WITHOUT_CLASSIFICATION	/*     * Finds all classes that extend the class, searching in the listAllClasses     * ArrayList.     *     * @param theClass     *            the parent class     * @param listAllClasses     *            the collection of classes to search in     * @param listSubClasses     *            the collection of discovered subclasses     * @param innerClasses     *            indicates whether inners classes should be included in the     *            search     */
WITHOUT_CLASSIFICATION	/*     * Finds all classes that extend the classes in the listSuperClasses     * ArrayList, searching in the listAllClasses ArrayList.     *     * @param superClasses     *            the base classes to find subclasses for     * @param listAllClasses     *            the collection of classes to search in     * @param innerClasses     *            indicate whether to include inner classes in the search     * @return ArrayList of the subclasses     */
WITHOUT_CLASSIFICATION	/*     * For use by SaveService only.     *     * @param stamp -     *            this may be a start time or an end time     * @param elapsed     */
WITHOUT_CLASSIFICATION	/*     * Handles groupingMode. actionPerfomed is not suitable, as that seems to be     * activated whenever the Proxy is selected in the Test Plan     * Also handles samplerTypeName     */
WITHOUT_CLASSIFICATION	/*     * Helper method     */
WITHOUT_CLASSIFICATION	/*     * Helper method for use by scripts     *     */
WITHOUT_CLASSIFICATION	/*     * Helper method to ensure that format is initialised if initializeLogging()     * has not yet been called.     */
WITHOUT_CLASSIFICATION	/*     * Helper method to get an attribute value, if it exists @param attrs list     * of attributs @param attname attribute name @return     */
WITHOUT_CLASSIFICATION	/*     * Helper method to set up the GUI screen     */
WITHOUT_CLASSIFICATION	/*     * Helper method to set up the GUI screen     */
WITHOUT_CLASSIFICATION	/*     * Helper methods N.B. setStartTime must be called before setEndTime     *     * setStartTime is used by HTTPSampleResult to clone the parent sampler and     * allow the original start time to be kept     */
WITHOUT_CLASSIFICATION	/*     * If non-null, then any argument list passed to invoke() will be ignored.     */
WITHOUT_CLASSIFICATION	/*     * If non-null, then any object provided to invoke() is ignored.     */
WITHOUT_CLASSIFICATION	/*     * If not running under AllTests.java, make sure that the properties (and     * log file) are set up correctly.     *      * N.B. In order for this to work correctly, the JUnit test must be started     * in the bin directory, and all the JMeter jars (plus any others needed at     * run-time) need to be on the classpath.     *      */
WITHOUT_CLASSIFICATION	/*     * Implementation notes:     *     * All of the methods in this class are currently read-only. If update     * methods are included in the future, they should be defined so that a     * single instance of JavaSamplerContext can be associated with each thread.     * Therefore, no synchronization should be needed. The same instance should     * be used for the call to setupTest, all calls to runTest, and the call to     * teardownTest.     */
WITHOUT_CLASSIFICATION	/*     * In spite of the name, this is actually used to determine if the loop controller is repeatable.     *     * The value is only used in nextIsNull() when the loop end condition has been detected:     * If forever==true, then it calls resetLoopCount(), otherwise it calls setDone(true).     *     * Loop Controllers always set forever=true, so that they will be executed next time     * the parent invokes them.     *     * Thread Group sets the value false, so nextIsNull() sets done, and the Thread Group will not be repeated.     * However, it's not clear that a Thread Group could ever be repeated.     */
WITHOUT_CLASSIFICATION	/*     * Is the sample result OK to cache?     * i.e is it in the 2xx range?     */
WITHOUT_CLASSIFICATION	/*     * Keep track of the file writer and the configuration,     * as the instance used to close them is not the same as the instance that creates     * them. This means one cannot use the saved PrintWriter or use getSaveConfig()     */
WITHOUT_CLASSIFICATION	/*     * Listen to test and handle tidyup after non-GUI test completes.     * If running a remote test, then after waiting a few seconds for listeners to finish files,     * it calls ClientJMeterEngine.tidyRMI() to deal with the Naming Timer Thread.     */
WITHOUT_CLASSIFICATION	/*     * Low level invocation routine.     *     * Should only be called after any defaults have been applied.     *     */
WITHOUT_CLASSIFICATION	/*     * Low-level (recursive) routine to define the method - if not already defined.     * Synchronized to protect access to methodToInvoke.     */
WITHOUT_CLASSIFICATION	/*     * Map of translations for tags; only created if there is at least     * one tag and a ResourceBundle has been provided.     */
WITHOUT_CLASSIFICATION	/*     * Method to get files list to be uploaded.     */
WITHOUT_CLASSIFICATION	/*     * Method to set files list to be uploaded.     *     * @param value     *   HTTPFileArgs object that stores file list to be uploaded.     */
WITHOUT_CLASSIFICATION	/*     * N.B. NoThreadClone is used to ensure that the testStarted() methods will share the same     * instance as the sampleOccured() methods, so the testStarted() method can fetch the     * Totals accumulator object for the samples to be stored in.     */
WITHOUT_CLASSIFICATION	/*     * N.B. These entry indexes MUST agree with the SearchControls SCOPE_LEVELS, i.e.     *      * javax.naming.directory.SearchControls.OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE     *      * These have the values 0,1,2 so can be used as indexes in the array     * as well as the value for the search itself.     *      * N.B. Although the strings are used to set and get the options, language change     * does not currently cause a problem, because that always saves the current settings first,     * and then recreates all the GUI classes.     */
WITHOUT_CLASSIFICATION	/*     * Only for Unit tests     */
WITHOUT_CLASSIFICATION	/*     * Only needed locally     */
WITHOUT_CLASSIFICATION	/*     * Optionally number the requests     */
WITHOUT_CLASSIFICATION	/*     * Permissible values:     *  true - match against headers     *  false or absent - match against body (this was the original default)     *  URL - match against URL     *  These are passed to the setUseField() method     *     *  Do not change these values!    */
WITHOUT_CLASSIFICATION	/*     * Predefined format patterns, selected by the property log_format_type (see     * jmeter.properties) The new-line is added later     */
WITHOUT_CLASSIFICATION	/*     * Private iterator used to unwrap the URL from the URLString class     *     */
WITHOUT_CLASSIFICATION	/*     * Private versions of what might eventually be part of Commons-CSV or     * Commons-Lang/Io...     */
WITHOUT_CLASSIFICATION	/*     * Random class for generating random numbers.     */
WITHOUT_CLASSIFICATION	/*     * Remove all the cookies.     */
WITHOUT_CLASSIFICATION	/*     * Required to satisfy HTTPSamplerBase Should not be called, as we override     * sample()     */
WITHOUT_CLASSIFICATION	/*     * Returns the classpath entries that match the search list of jars and paths     */
WITHOUT_CLASSIFICATION	/*     * Returns the selection value as a int,     * with the value set to zero if it is out of range.     */
WITHOUT_CLASSIFICATION	/*     * See below for reason for this change. Just in case this causes problems,     * allow the change to be backed out     */
WITHOUT_CLASSIFICATION	/*     * Send POST data from <code>Entry</code> to the open connection.     *     * @param connection     *            <code>URLConnection</code> where POST data should be sent     * @return a String show what was posted. Will not contain actual file upload content     * @exception IOException     *                if an I/O exception occurs     */
WITHOUT_CLASSIFICATION	/*     * Set up the DataSource - maxPool is a parameter, so the same code can     * also be used for setting up the per-thread pools.    */
WITHOUT_CLASSIFICATION	/*     * Split line into name/value pairs and store in headers if relevant     * If name = "content-length", then return value as int, else return 0     */
WITHOUT_CLASSIFICATION	/*     * Strings used to set up and process actions in this menu The strings need     * to agree with the those in the Action routines     */
WITHOUT_CLASSIFICATION	/*     * Test Functions - create the suite of tests     */
WITHOUT_CLASSIFICATION	/*     * Test GUI elements - create the suite of tests     */
WITHOUT_CLASSIFICATION	/*     * Test GUI elements - create the suite of tests     */
WITHOUT_CLASSIFICATION	/*     * Test GUI elements - not run for TestBeanGui items     */
WITHOUT_CLASSIFICATION	/*     * Test GUI elements - run for all components     */
WITHOUT_CLASSIFICATION	/*     * Test GUI elements - run the test     */
WITHOUT_CLASSIFICATION	/*     * Test TestElements - create the suite     */
WITHOUT_CLASSIFICATION	/*     * Test TestElements - implement the test case     */
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)'     * This method test sending a HTTPSampler with form parameters, and only     * the filename of a file.     */
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)'     * This method test sending a request which contains both formdata and file content     */
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)'     * This method test sending file content as the only content of the post body     */
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)'     * This method test sending only a file multipart.     */
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)'     * This method test sending only a formdata, as a multipart/form-data request.     */
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)'     * This method test sending only a formdata, as urlencoded data     */
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.setHeaders(URLConnection, HTTPSampler)'     */
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.setHeaders(URLConnection, HTTPSampler)'     */
WITHOUT_CLASSIFICATION	/*     * Test serializable elements - create the suite of tests     */
WITHOUT_CLASSIFICATION	/*     * Test serializable elements - test the object     */
WITHOUT_CLASSIFICATION	/*     * The following array must agree with dateFormat     *     * It is used to translate the positions in the buffer to the values used by     * the Calendar class for the field id.     *     * Current format: MM/DD/YYYY HH:MM:SS 01234567890123456789 ^buffer     * positions     */
WITHOUT_CLASSIFICATION	/*     * The following strings are used in the test plan, and the values must not be changed     * if test plans are to be upwardly compatible.     */
WITHOUT_CLASSIFICATION	/*     * The following variables may be set/read from multiple threads.     */
WITHOUT_CLASSIFICATION	/*     * The method will check to see if JMeter was started in NonGui mode. If it     * was, it will try to pick up the proxy host and port values if they were     * passed to JMeter.java.     */
WITHOUT_CLASSIFICATION	/*     * The password can be defined as a property; this dialogue is provided to allow it     * to be entered at run-time.     *     * However, this does not gain much, as the dialogue does not (yet) support hidden input ...     *    */
WITHOUT_CLASSIFICATION	/*     * The suite() method creates separate test suites for each of the types of     * test. The suitexxx() methods create a list of items to be tested, and     * create a new test instance for each.     *      * Each test type has its own constructor, which saves the item to be tested     *      * Note that the suite() method must be static, and the methods to run the     * tests must be instance methods so that they can pick up the item value     * which was saved by the constructor.     *      */
WITHOUT_CLASSIFICATION	/*     * The testStarted/testEnded methods are called at the start and end of a test.     *     * However, when a test is run on multiple nodes, there is no guarantee that all the     * testStarted() methods will be called before all the threadStart() or sampleOccurred()     * methods for other threads - nor that testEnded() will only be called after all     * sampleOccurred() calls. The ordering is only guaranteed within a single test.     *     */
WITHOUT_CLASSIFICATION	/*     * These are used as GUI item names;     * LOWERBOUND, UPPERBOUND and INCREMENT are used in the focusLost() method     */
WITHOUT_CLASSIFICATION	/*     * This Map serves two purposes:     * - maps file names to  containers     * - ensures only one container per file across all threads     */
WITHOUT_CLASSIFICATION	/*     * This Map serves two purposes:     * - maps names to  containers     * - ensures only one container per file across all threads     * The key is the concatenation of the file name and the XPath string     */
WITHOUT_CLASSIFICATION	/*     * This depends on the class or invokee and either args or types;     * it is set once by doCreateMethod(), which must be the only method to access it.    */
WITHOUT_CLASSIFICATION	/*     * This is called once for each occurrence in the test plan, before the     * start of the test. The super.clear() method clears the name (and all     * other properties), so it is called last.     */
WITHOUT_CLASSIFICATION	/*     * This is needed for OnceOnly to work like other Loop Controllers     */
WITHOUT_CLASSIFICATION	/*     * This map allows summarisers with the same name to contribute to the same totals.     */
WITHOUT_CLASSIFICATION	/*     * This method uses Apache soap util to create the proper DOM elements.     *     * @return Element     */
WITHOUT_CLASSIFICATION	/*     * True iff we're currently processing an event triggered by the user     * selecting the "Edit" option. Used to prevent reverting the combo to     * non-editable during processing of secondary events.     */
WITHOUT_CLASSIFICATION	/*     * Update the current field. The addend is only expected to be +1/-1, but     * other values will work. N.B. the roll() method only supports changes by a     * single unit - up or down     */
WITHOUT_CLASSIFICATION	/*     * Use a suite to allow the tests to be generated at run-time     */
WITHOUT_CLASSIFICATION	/*     * Use a suite to ensure that the default is done first    */
WITHOUT_CLASSIFICATION	/*     * Use regexes to match the source data     */
WITHOUT_CLASSIFICATION	/*     * Utility method to set up all the values     */
WITHOUT_CLASSIFICATION	/*     * Utility routine to get the connection from the pool.     * Purpose:     * - allows JDBCSampler to be entirely independent of the pooling classes     * - allows the pool storage mechanism to be changed if necessary     */
WITHOUT_CLASSIFICATION	/*     * We use a LinkedBlockingQueue (rather than a ConcurrentLinkedQueue) because it has a     * poll-with-wait method that avoids the need to use a polling loop.     */
WITHOUT_CLASSIFICATION	/*     * Wrapper class to allow getConnection() to be implemented for both shared     * and per-thread pools.     *     */
WITHOUT_CLASSIFICATION	/*     * Wraps the socket in a slow SSL socket if necessary     */
WITHOUT_CLASSIFICATION	/*     * called by CSVRead(file,alias)     */
WITHOUT_CLASSIFICATION	/*     * nextInt(n) returns values in the range [0,n),     * so n must be set to max-min+1     */
WITHOUT_CLASSIFICATION	/*     * perform the checks on the resources     *      */
WITHOUT_CLASSIFICATION	/*     * protected void initializeTableModel() { tableModel = new     * ObjectTableModel( new String[] { ArgumentsPanel.COLUMN_NAMES_0,     * ArgumentsPanel.COLUMN_NAMES_1, ENCODE_OR_NOT, INCLUDE_EQUALS }, new     * Functor[] { new Functor("getName"), new Functor("getValue"), new     * Functor("isAlwaysEncoded"), new Functor("isUseEquals") }, new Functor[] {     * new Functor("setName"), new Functor("setValue"), new     * Functor("setAlwaysEncoded"), new Functor("setUseEquals") }, new Class[] {     * String.class, String.class, Boolean.class, Boolean.class }); }     */
WITHOUT_CLASSIFICATION	/*     * run the function test     */
WITHOUT_CLASSIFICATION	/*    * Helper    */
WITHOUT_CLASSIFICATION	/* * N.B. to add a new field, remember the following * - static _xyz * - instance xyz=_xyz * - clone s.xyz = xyz (perhaps) * - setXyz(boolean) * - saveXyz() * - update SampleSaveConfigurationConverter to add new fields to marshall() and shouldSerialiseMember() * - update SampleResultConverter and/or HTTPSampleConverter * - update CSVSaveService: CSV_XXXX, makeResultFromDelimitedString, printableFieldNamesToString, static{} * - update messages.properties to add save_xyz entry * - update jmeter.properties to add new property * - update listeners.xml to add new property, CSV and XML names etc. * - take screenshot sample_result_config.png * - update listeners.xml and component_reference.xml with new dimensions (might not change) * */
WITHOUT_CLASSIFICATION	/* * No point doing this on a per-connection basis, as there is currently no way to configure it. * So we leave it to the defaults set up in the SSL Context * */
WITHOUT_CLASSIFICATION	/* * This is not currently used by JMeter code. * As it uses Sun-specific code (the only such in JMeter), it has been commented out for now. */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see javax.swing.JTabbedPane#setSelectedIndex(int)         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see org.xml.sax.helpers.DefaultHandler#error(org.xml.sax.SAXParseException)         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see org.xml.sax.helpers.DefaultHandler#fatalError(org.xml.sax.SAXParseException)         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.lang.Runnable#run()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.http.conn.ssl.SSLSocketFactory#createLayeredSocket(java.net.Socket, java.lang.String, int, boolean)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.http.conn.ssl.SSLSocketFactory#createSocket()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.http.conn.ssl.SSLSocketFactory#createSocket(org.apache.http.params.HttpParams)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.AbstractJMeterGuiComponent#clearGui()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.AbstractJMeterGuiComponent#clearGui()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#createPopupMenu()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#createTestElement()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#createTestElement()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#getLabelResource()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#getMenuCategories()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#modifyTestElement(org.apache.jmeter.testelement.TestElement)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#modifyTestElement(org.apache.jmeter.testelement.TestElement)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.action.AbstractAction#doAction(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.action.AbstractAction#getActionNames()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.parser.HTMLParser#isReusable()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.parser.HTMLParser#isReusable()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testEnded()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testEnded(java.lang.String)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testIterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testIterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testIterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.engine.ReportEngine#configure(org.apache.jorphan.collections.HashTree)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.engine.ReportEngine#exit()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.engine.ReportEngine#reset()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.engine.ReportEngine#runReport()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.engine.ReportEngine#stopReport()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#getFileName()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#getPageTitle()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#isSuccessful()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#pageEnded()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#pageStarted()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#setFileName(java.lang.String)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#setPageTitle(java.lang.String)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#setSuccessful(boolean)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.samplers.RemoteThreadsListener#threadFinished()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.SamplerResultTab#clearData()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#clearData()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#clearData()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#getLabel()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#getLabel()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#getPanel()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#init()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#init()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#setSamplerResult(java.lang.Object)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#setSamplerResult(java.lang.Object)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.log.LogTarget#processEvent(org.apache.log.LogEvent)     */
WITHOUT_CLASSIFICATION	/* A checkbox choosing whether or not only successes should be logged. */
WITHOUT_CLASSIFICATION	/* Action to be taken when a Sampler error occurs */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGuiComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGuiComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGuiComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JavaSamplerClient.getDefaultParameters() */
WITHOUT_CLASSIFICATION	/* Implements JavaSamplerClient.setupTest(JavaSamplerContext) */
WITHOUT_CLASSIFICATION	/* Implements JavaSamplerClient.teardownTest(JavaSamplerContext) */
WITHOUT_CLASSIFICATION	/* Implements TestStateListener.testEnded(String) */
WITHOUT_CLASSIFICATION	/* Implements TestStateListener.testStarted() */
WITHOUT_CLASSIFICATION	/* Implements TestStateListener.testStarted(String) */
WITHOUT_CLASSIFICATION	/* Make transient as we don't want to save the SimpleDataFormat class     * Also, there's currently no way to change the value via the GUI, so changing it     * later means editting the JMX, or recreating the Listener.     */
WITHOUT_CLASSIFICATION	/* Note that the filename is also used as a key to the pool (if used)        ** Documents provided in the testplan are not currently pooled, as they may change        *  between samples.        */
WITHOUT_CLASSIFICATION	/* Overrides AbstractJMeterGuiComponent.configure(TestElement) */
WITHOUT_CLASSIFICATION	/* Overrides AbstractJMeterGuiComponent.configure(TestElement) */
WITHOUT_CLASSIFICATION	/* Overrides AbstractJMeterGuiComponent.configure(TestElement) */
WITHOUT_CLASSIFICATION	/* Property name */
WITHOUT_CLASSIFICATION	/* Shown as Parameter Name on the GUI */
WITHOUT_CLASSIFICATION	/* The cache of file packs - for faster local access */
WITHOUT_CLASSIFICATION	/* The cache of file packs - used to improve thread access */
WITHOUT_CLASSIFICATION	/* The default used by {@link #setResponseData(String, String)} */
WITHOUT_CLASSIFICATION	/* The next line looks odd, but proxied HTTP requests look like:         * GET http://www.apache.org/foundation/ HTTP/1.1         * i.e. url starts with "http:", not "/"         * whereas HTTPS proxy requests look like:         * CONNECT www.google.co.uk:443 HTTP/1.1         * followed by         * GET /?gws_rd=cr HTTP/1.1         */
WITHOUT_CLASSIFICATION	/* empty arrays which can be returned instead of null */
WITHOUT_CLASSIFICATION	/**     * Method should add the JUnit testXXX method to the list at     * the end, since the sequence matters.     * @param methodName     */
WITHOUT_CLASSIFICATION	/** * <p> * Super-class for TestElements that can be applied to main sample, sub-samples or both. * [Assertions use a different class because they use a different value for the {@link #getScopeName()} constant] * </p> * * <p> * Their corresponding GUI classes need to add the ScopePanel to the GUI * using the AbstractXXXGui methods: * <ul> * <li>createScopePanel()</li> * <li>saveScopeSettings()</li> * <li>showScopeSettings()</li> * </ul> * </p> */
WITHOUT_CLASSIFICATION	/** * Generates Configure pop-up dialogue for Listeners from all methods in SampleSaveConfiguration * with the signature "boolean saveXXX()". * There must be a corresponding "void setXXX(boolean)" method, and a property save_XXX which is * used to name the field on the dialogue. * */
WITHOUT_CLASSIFICATION	/** * Holds details of which sample attributes to save. * * The pop-up dialogue for this is created by the class SavePropertyDialog, which assumes: * For each field XXX * - methods have the signature "boolean saveXXX()" * - a corresponding "void setXXX(boolean)" method * - messages.properties contains the key save_XXX * * */
WITHOUT_CLASSIFICATION	/*-------------------------------------------------------------------------     * Methods (used by UserParameterXML to get XML parameters from XML file)     *----------------------------------------------------------------------- */
WITHOUT_CLASSIFICATION	/*-------------------------------------------------------------------------     * Methods implemented from org.xml.sax.ContentHandler     *----------------------------------------------------------------------- */
WITHOUT_CLASSIFICATION	/*============= object properties ================*/
WITHOUT_CLASSIFICATION	/*================= internal business =================*/
WITHOUT_CLASSIFICATION	/*synchronousMode==true*/
WITHOUT_CLASSIFICATION	/*tfMailFrom.setEnabled(false);            tfMailTo.setEnabled(false);            tfMailToCC.setEnabled(false);            tfMailToBCC.setEnabled(false);            tfSubject.setEnabled(false);*/
WITHOUT_CLASSIFICATION	/*tfMailFrom.setEnabled(true);            tfMailTo.setEnabled(true);            tfMailToCC.setEnabled(true);            tfMailToBCC.setEnabled(true);            tfSubject.setEnabled(true);*/
WITHOUT_CLASSIFICATION	/*|| !ctx.isSamplingStarted()*/
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	// 
WITHOUT_CLASSIFICATION	//                ScriptRuntime.call(cx, fun, global, args, global);
WITHOUT_CLASSIFICATION	//            drawCross(g, x, y);
WITHOUT_CLASSIFICATION	//            private TestData(String f, String b, String s) { //                this(f, b, s, null); //            }
WITHOUT_CLASSIFICATION	//          HttpsURLConnection secureConn = (HttpsURLConnection) conn; //          secureConn.setSSLSocketFactory(this.getContext().getSocketFactory());
WITHOUT_CLASSIFICATION	//          log.info("testBlankPrevFailed");
WITHOUT_CLASSIFICATION	//          log.info("testBlankPrevOK");
WITHOUT_CLASSIFICATION	//          log.info("testFalsePrevFailed");
WITHOUT_CLASSIFICATION	//          log.info("testLASTPrevOK");
WITHOUT_CLASSIFICATION	//          log.info("testLastPrevFailed");
WITHOUT_CLASSIFICATION	//          log.info("testOtherPrevOK");
WITHOUT_CLASSIFICATION	//        element.setProperty(TCPSampler.NODELAY, setNoDelay.isSelected());
WITHOUT_CLASSIFICATION	//        p.add(makeMainPanel(), BorderLayout.CENTER); // Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	//        private void drawCross(Graphics g, int x, int y) { //            g.drawLine(x + (iconWidth - 4), y + 2, x + 3, y + (iconHeight - 5)); //            g.drawLine(x + (iconWidth - 4), y + 3, x + 3, y + (iconHeight - 4)); //            g.drawLine(x + 3, y + 2, x + (iconWidth - 4), y + (iconHeight - 5)); //            g.drawLine(x + 3, y + 3, x + (iconWidth - 4), y + (iconHeight - 4)); //        }
WITHOUT_CLASSIFICATION	//        super(new JMeterTreeNode(new WorkBenchGui().createTestElement(), null)); //        TestElement tp = new TestPlanGui().createTestElement(); //        initTree(tp);
WITHOUT_CLASSIFICATION	//        throw new UnsupportedOperationException("For test purposes only");
WITHOUT_CLASSIFICATION	//      super(new JMeterTreeNode(new WorkBench(), null)); //      TestElement tp = new TestPlan(); //      initTree(tp, new WorkBench());
WITHOUT_CLASSIFICATION	//    /** //     * Resize the table columns to appropriate widths. //     * //     * @param _table //     *            the table to resize columns for //     */ //    private void sizeColumns(JTable _table) { //    }
WITHOUT_CLASSIFICATION	//    /** A button for adding new arguments to the table. */ //    private JButton add; // //    /** A button for removing arguments from the table. */ //    private JButton delete;
WITHOUT_CLASSIFICATION	//    Remaining implementations delegate to the wrapped key manager
WITHOUT_CLASSIFICATION	//    private static Configuration getConfiguration(AssertionResult assResult) { //        DefaultConfiguration config = new DefaultConfiguration(ASSERTION_RESULT_TAG_NAME, "JMeter Save Service"); // //        config.setAttribute(FAILURE_MESSAGE, assResult.getFailureMessage()); //        config.setAttribute(ERROR, "" + assResult.isError()); //        config.setAttribute(FAILURE, "" + assResult.isFailure()); //        return config; //    }
WITHOUT_CLASSIFICATION	//    private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	//    private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	//    public final static String CONNECTION = "MongoSourceElement.connection"; //$NON-NLS-1$ //    public final static String SOURCE = "MongoSourceElement.source"; //$NON-NLS-1$ // //    public final static String AUTO_CONNECT_RETRY = "MongoSourceElement.autoConnectRetry"; //$NON-NLS-1$ //    public final static String CONNECTIONS_PER_HOST = "MongoSourceElement.connectionsPerHost"; //$NON-NLS-1$ //    public final static String CONNECT_TIMEOUT = "MongoSourceElement.connectTimeout"; //$NON-NLS-1$ //    public final static String CONTINUE_ON_INSERT_ERROR = "MongoSourceElement.continueOnInsertError"; //$NON-NLS-1$ //    public final static String MAX_AUTO_CONNECT_RETRY_TIME = "MongoSourceElement.maxAutoConnectRetryTime"; //$NON-NLS-1$ //    public final static String MAX_WAIT_TIME = "MongoSourceElement.maxWaitTime"; //$NON-NLS-1$ //    public final static String SOCKET_TIMEOUT = "MongoSourceElement.socketTimeout"; //$NON-NLS-1$ //    public final static String SOCKET_KEEP_ALIVE = "MongoSourceElement.socketKeepAlive"; //$NON-NLS-1$ //    public final static String THREADS_ALLOWED_TO_BLOCK_MULTIPLIER = "MongoSourceElement.threadsAllowedToBlockForConnectionMultiplier"; //$NON-NLS-1$ // //    public final static String FSYNC = "MongoSourceElement.fsync"; //$NON-NLS-1$ //    public final static String SAFE = "MongoSourceElement.safe"; //$NON-NLS-1$ //    public final static String WAIT_FOR_JOURNALING = "MongoSourceElement.waitForJournaling"; //$NON-NLS-1$ //    public final static String WRITE_OPERATION_NUMBER_OF_SERVERS = "MongoSourceElement.writeOperationNumberOfServers"; //$NON-NLS-1$ //    public final static String WRITE_OPERATION_TIMEOUT = "MongoSourceElement.writeOperationTimeout"; //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//   Used by both StandardJMeterEngine and ClientJMeterEngine. //   In the latter case, only ResultCollectors are updated, //   as only these are relevant to the client, and updating //   other elements causes all sorts of problems. // skip certain processing for remote tests
WITHOUT_CLASSIFICATION	//  Normal output //  ---- Debugging information ---- //  required-type       : org.apache.jorphan.collections.ListedHashTree //  cause-message       : WebServiceSampler : WebServiceSampler //  class               : org.apache.jmeter.save.ScriptWrapper //  message             : WebServiceSampler : WebServiceSampler //  line number         : 929 //  path                : /jmeterTestPlan/hashTree/hashTree/hashTree[4]/hashTree[5]/WebServiceSampler //  cause-exception     : com.thoughtworks.xstream.alias.CannotResolveClassException //  -------------------------------
WITHOUT_CLASSIFICATION	//  private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	//  private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	//  value="value" name="sessionid" // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// !saveAsXml
WITHOUT_CLASSIFICATION	// "-Dstupid","-c"
WITHOUT_CLASSIFICATION	// "-Dstupid="
WITHOUT_CLASSIFICATION	// "-Dstupid=","-c"
WITHOUT_CLASSIFICATION	// "-Dstupid=idiot","are","--all","--all","here"
WITHOUT_CLASSIFICATION	// "-Dstupid=idiot","are","--all","here"
WITHOUT_CLASSIFICATION	// "-T","-a"
WITHOUT_CLASSIFICATION	// "-T3","-a"
WITHOUT_CLASSIFICATION	// "-T3","-a"
WITHOUT_CLASSIFICATION	// "<?xml "
WITHOUT_CLASSIFICATION	// $NON-NLS-$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ 
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ 
WITHOUT_CLASSIFICATION	// $NON-NLS-1$       
WITHOUT_CLASSIFICATION	// $NON-NLS-1$                
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-1$ 
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ (do not change) // $NON-NLS-1$ (Firefox and Windows) // $NON-NLS-1$ (Opera)
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ (for compatibility, this is the original default)
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$  $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // e.g. "Transfer-Encoding: chunked", which is processed automatically by the underlying protocol // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ pseudo-header for reporting Local Address // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // For handling caching // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //e.g. public, max-age=259200 //e.g. Date Header of response 
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // Look and Feel prefix // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ enable/disable // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // Add variables for access to context and variables
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // For use in debugging: // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // jmeter.log // $NON-NLS-1$ // sample result log file // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //$NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // Don't try to instantiate these
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // default is not in range of a byte
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ //$NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ proxy.binary.filetype=binary
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$  // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-2$ // remove ".class"
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-1$// $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Button group resources
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Button group resources
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Create the panels for the other tabs
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Detect if user has pressed a new link
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Get the previous count
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Make it easier to enter a Tab // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Maximum connection retries
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Must be same as Header.HNAME - but that is built // later
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // No point trying these
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Permit dynamic resize of TextArea
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // SOAP request (generally) //blank name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Supported methods:
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Temporary copies, so can set the final ones
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // default value: 60 secs 
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // default value: false
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // default: bold
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // default: bold
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // default: bottom //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // default: normal
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // define AWT WM_CLASS string
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // don't set empty to keep cssJquery // cssJqueryField.setText(""); // $NON-NLS-1$ // $NON-NLS-1$ // don't set empty to keep attribute // this.attributeField.setText(""); // $NON-NLS-1$ // don't change impl // this.cssJqueryLabeledChoice.setText(HtmlExtractor.DEFAULT_EXTRACTOR);
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // don't set empty to keep regexp // regexpField.setText(""); // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // end of TEST values
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // file_merge.setAccelerator( // KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_MASK));
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // for intermediate use // output line buffer
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // maintain original default
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // may be null
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // may be null
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // reader = xmlFactory.newSAXParser().getXMLReader();
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // throughput.addActionListener(this);
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ //- JMX
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ //- JMX file attributes
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ //--
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ //--
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ //default: IP/Hostname
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ add zero padding
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ add zero padding
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ i.e. boolean saveXXX() // $NON-NLS-1$ i.e. void setXXX(boolean) // $NON-NLS-1$ e.g. save_XXX property
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ jmeter.properties
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ this is the default used by HttpClient
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ this is the default used by HttpClient
WITHOUT_CLASSIFICATION	// $NON-NLS-1$;
WITHOUT_CLASSIFICATION	// $NON-NLS-1$; // $NON-NLS-1$;
WITHOUT_CLASSIFICATION	// $NON-NLS1$ // $NON-NLS1$
WITHOUT_CLASSIFICATION	// $NON-NSL-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$ // $NON_NLS-1$ // $NON_NLS-1$ // $NON_NLS-1$ // $NON_NLS-1$ // $NON_NLS-1$ // $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$ // N.B. Remember to update the equals and hashCode methods when adding new variables.
WITHOUT_CLASSIFICATION	// $sid$
WITHOUT_CLASSIFICATION	// && !isPathExtensionNoEquals()
WITHOUT_CLASSIFICATION	// && !isPathExtensionNoEquals() && !isPathExtensionNoQuestionmark()
WITHOUT_CLASSIFICATION	// && !isPathExtensionNoQuestionmark()
WITHOUT_CLASSIFICATION	// '12345'
WITHOUT_CLASSIFICATION	// (Comment 16, Huw)
WITHOUT_CLASSIFICATION	// (TestElement) // el.getProperty(JMSSampler.JMS_PROPERTIES).getObjectValue());
WITHOUT_CLASSIFICATION	// (TestElement) // el.getProperty(JMSSampler.JNDI_PROPERTIES).getObjectValue());
WITHOUT_CLASSIFICATION	// (for instructional purposes only!)
WITHOUT_CLASSIFICATION	// (is this really the character set?) e.g. // ISO-8895-1, UTF-8
WITHOUT_CLASSIFICATION	// * Static int to signify the type of logical comparitor to assert
WITHOUT_CLASSIFICATION	// ** These constants are used in the JMX files, and so must not be changed **
WITHOUT_CLASSIFICATION	// *A next
WITHOUT_CLASSIFICATION	// *B next
WITHOUT_CLASSIFICATION	// + JMX names, do not change their values
WITHOUT_CLASSIFICATION	// ++ // GUI tests throw the error // testArgumentCreation(org.apache.jmeter.config.gui.ArgumentsPanel$Test)java.lang.NoClassDefFoundError // at java.lang.Class.forName0(Native Method) // at java.lang.Class.forName(Class.java:141) // at // java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment(GraphicsEnvironment.java:62) // // Try to find out why this is ...
WITHOUT_CLASSIFICATION	// - JMX names
WITHOUT_CLASSIFICATION	// ----------- get/set methods ------------------- //
WITHOUT_CLASSIFICATION	// ------------- get/set properties ----------------------//
WITHOUT_CLASSIFICATION	// ------------- get/set properties ----------------------//
WITHOUT_CLASSIFICATION	// ------------------------------------------- // Constants and Data Members // -------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------- // Constants and Data Members // -------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------- // Constructors // -------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------- // Methods // -------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------- // Methods // -------------------------------------------
WITHOUT_CLASSIFICATION	// --------------------------------------------------------------------- // ADDITIONAL CSV RESULT FILE CONSTANTS AND FIELD NAME CONSTANTS // ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// --------------------------------------------------------------------- // PROPERTY FILE CONSTANTS // ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// --------------------------------------------------------------------- // XML RESULT FILE CONSTANTS AND FIELD NAME CONSTANTS // ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// --------------------------------------------------------------------- // XML RESULT FILE CONSTANTS AND FIELD NAME CONSTANTS // ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -1 is the code for a failed sample. //
WITHOUT_CLASSIFICATION	// -1 means not defined
WITHOUT_CLASSIFICATION	// -1 to disable the write limit
WITHOUT_CLASSIFICATION	// ...
WITHOUT_CLASSIFICATION	// ... and where they end
WITHOUT_CLASSIFICATION	// .equals caused // NPE
WITHOUT_CLASSIFICATION	// .sendMultipartWithoutFileContent(bos);
WITHOUT_CLASSIFICATION	// / Only do the calculation if // it is needed
WITHOUT_CLASSIFICATION	// /** // * Creates one of the fields used to display the graph's current // * values. // * // * @param color the color used to draw the value. By convention // * this is the same color that is used to draw the // * graph for this value and in the choose panel. // * @param length the number of digits which the field should be // * able to display // * // * @return a text field configured to display one of the // * current graph values // */ // private JTextField createInfoField(Color color, int length) // { // JTextField field = new JTextField(length); // field.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0)); // field.setEditable(false); // field.setForeground(color); // field.setBackground(getBackground()); // // // The text field should expand horizontally, but have // // a fixed height // field.setMaximumSize(new Dimension( // field.getMaximumSize().width, // field.getPreferredSize().height)); // return field; // }
WITHOUT_CLASSIFICATION	// // Constructors //
WITHOUT_CLASSIFICATION	// // Implementing the CellEditor Interface //
WITHOUT_CLASSIFICATION	// // Implementing the TreeCellEditor Interface //
WITHOUT_CLASSIFICATION	// // Instance Variables //
WITHOUT_CLASSIFICATION	// // Member variables //
WITHOUT_CLASSIFICATION	// // Modifying //
WITHOUT_CLASSIFICATION	// // Override the implementations of the superclass, forwarding all methods // from the CellEditor interface to our delegate. //
WITHOUT_CLASSIFICATION	// // Parsing Methods //
WITHOUT_CLASSIFICATION	// // Protected EditorDelegate class //
WITHOUT_CLASSIFICATION	// //////////////////////////////////////////////////////////// // // Implementation of the ActionListener-Interface. // // ////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// //////////////////////////////////////////////////////////// // // Methods to implement the ModelListener. // // ////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// //////////////////////////////////////////////////////////// // // Methods used to store and retrieve the MailerVisualizer. // // ////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// //////////////////////////////////////////////////////////// // // setter/getter - JavaDoc-Comments not needed... // // ////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// 0-based
WITHOUT_CLASSIFICATION	// 0-based
WITHOUT_CLASSIFICATION	// 10 per second // Should delay for 1 second // 10 per milli-second // Should delay for 1 milli-second
WITHOUT_CLASSIFICATION	// 1000 = millisecs/sec
WITHOUT_CLASSIFICATION	// 1000 per milli-second // Should delay for 1 milli-second
WITHOUT_CLASSIFICATION	// 1024=bytes per kb
WITHOUT_CLASSIFICATION	// 1024=bytes per kb
WITHOUT_CLASSIFICATION	// 1k - the previous 100k made no sense (there's tons of buffers // elsewhere in the chain) and it caused OOM when many concurrent // uploads were being done. Could be fixed by increasing the evacuation // ratio in bin/jmeter[.bat], but this is better.
WITHOUT_CLASSIFICATION	// 2 column size
WITHOUT_CLASSIFICATION	// 2 columns size
WITHOUT_CLASSIFICATION	// 2nd argument
WITHOUT_CLASSIFICATION	// 3 columns size
WITHOUT_CLASSIFICATION	// 300 codes tell client to do actions
WITHOUT_CLASSIFICATION	// 5 columns size
WITHOUT_CLASSIFICATION	// 5 seconds
WITHOUT_CLASSIFICATION	// 8kB is the (max) size to have the latency ('the first packet') // Enough for MD5
WITHOUT_CLASSIFICATION	// ;sessionid=value // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// < 0 means we save all the matches
WITHOUT_CLASSIFICATION	// < 0 means we save all the matches
WITHOUT_CLASSIFICATION	// = elapsed
WITHOUT_CLASSIFICATION	// == ServerName from mail sampler
WITHOUT_CLASSIFICATION	// =================================== CSV quote/unquote handling // ==============================
WITHOUT_CLASSIFICATION	// ??
WITHOUT_CLASSIFICATION	// @GuardedBy("sampleStore")
WITHOUT_CLASSIFICATION	// @GuardedBy("this")
WITHOUT_CLASSIFICATION	// @GuardedBy("this")
WITHOUT_CLASSIFICATION	// @GuardedBy("this")
WITHOUT_CLASSIFICATION	// @GuardedBy("this")
WITHOUT_CLASSIFICATION	// @GuardedBy("this") // Buffered reader
WITHOUT_CLASSIFICATION	// @GuardedBy("this") // needed for error messages
WITHOUT_CLASSIFICATION	// @GuardedBy("this") // should we try to open the file?
WITHOUT_CLASSIFICATION	// @see TestJorphanUtils for unit tests
WITHOUT_CLASSIFICATION	// @see TestRegexFunction for unit tests
WITHOUT_CLASSIFICATION	// @see getStaticLabel
WITHOUT_CLASSIFICATION	// @see mergeFileProperties // Must be private, as the file list needs special handling // $NON-NLS-1$ // MIMETYPE is kept for backward compatibility with old test plans // $NON-NLS-1$ // FILE_NAME is kept for backward compatibility with old test plans // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// A CallableStatement can return more than 1 ResultSets // plus a number of update counts.
WITHOUT_CLASSIFICATION	// A HTTP GET request
WITHOUT_CLASSIFICATION	// A HTTP GET request, with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	// A HTTP GET request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	// A HTTP GET request, with UTF-8 encoding 
WITHOUT_CLASSIFICATION	// A HTTP GET request, with encoding not known
WITHOUT_CLASSIFICATION	// A HTTP GET request, with encoding not known 
WITHOUT_CLASSIFICATION	// A HTTP POST request
WITHOUT_CLASSIFICATION	// A HTTP POST request, multipart/form-data, simple values,
WITHOUT_CLASSIFICATION	// A HTTP POST request, multipart/form-data, simple values,
WITHOUT_CLASSIFICATION	// A HTTP POST request, multipart/form-data, simple values, // with \n as end of line, which should also be handled, // and with more headers in each multipart
WITHOUT_CLASSIFICATION	// A HTTP POST request, multipart/form-data, simple values, // with \r\n as end of line, which is according to spec, // and with more headers in each multipart
WITHOUT_CLASSIFICATION	// A HTTP POST request, multipart/form-data, with value that will change // if they are url encoded // Values are similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	// A HTTP POST request, with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	// A HTTP POST request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	// A HTTP POST request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	// A HTTP POST request, with content-type text/plain
WITHOUT_CLASSIFICATION	// A HTTP POST request, with content-type text/plain; charset=UTF-8 // The encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	// A HTTP POST request, with content-type text/plain; charset=UTF-8 // The encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	// A HTTP POST request, with encoding not known
WITHOUT_CLASSIFICATION	// A HTTP POST request, with unknown encoding
WITHOUT_CLASSIFICATION	// A String property:
WITHOUT_CLASSIFICATION	// A TestBean is a Java Bean. Just define some properties and they will // automagically show up in the GUI. // A String property:
WITHOUT_CLASSIFICATION	// A quick verification, just in case:
WITHOUT_CLASSIFICATION	// A temporary cache for the focus listener
WITHOUT_CLASSIFICATION	// A temporary cache for the focus listener
WITHOUT_CLASSIFICATION	// API expects null not empty array, see http://docs.oracle.com/javase/6/docs/api/javax/net/ssl/X509KeyManager.html
WITHOUT_CLASSIFICATION	// API expects null not empty array, see http://docs.oracle.com/javase/6/docs/api/javax/net/ssl/X509KeyManager.html
WITHOUT_CLASSIFICATION	// API expects null, not empty array
WITHOUT_CLASSIFICATION	// API expects null, not empty array
WITHOUT_CLASSIFICATION	// API not yet generic // throws ME
WITHOUT_CLASSIFICATION	// API uses raw types
WITHOUT_CLASSIFICATION	// AVG DELAY
WITHOUT_CLASSIFICATION	// AbstractThreadGroup is only allowed under a TestPlan
WITHOUT_CLASSIFICATION	// Access needed from CSVDataSet
WITHOUT_CLASSIFICATION	// Accessed from multiple threads
WITHOUT_CLASSIFICATION	// Accumulate waiting time for later
WITHOUT_CLASSIFICATION	// Action
WITHOUT_CLASSIFICATION	// Action listener will be added later
WITHOUT_CLASSIFICATION	// Action targets
WITHOUT_CLASSIFICATION	// Actions
WITHOUT_CLASSIFICATION	// Active threads in this group
WITHOUT_CLASSIFICATION	// Add Error Counter
WITHOUT_CLASSIFICATION	// Add Sample Counter
WITHOUT_CLASSIFICATION	// Add SamplerData for consistency with BeanShell Sampler //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add a 0-sized invisible component that will take all the vertical // space that nobody wants:
WITHOUT_CLASSIFICATION	// Add a new field source ip address (for HC implementations only) //default: IP/Hostname
WITHOUT_CLASSIFICATION	// Add alias for original StringFromFile name (had only one underscore) //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add all the child nodes of the node we are adding
WITHOUT_CLASSIFICATION	// Add all the headers from the HeaderManager
WITHOUT_CLASSIFICATION	// Add also the length of the file content
WITHOUT_CLASSIFICATION	// Add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	// Add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	// Add any files
WITHOUT_CLASSIFICATION	// Add any files
WITHOUT_CLASSIFICATION	// Add any files // Cannot retrieve parts once added to the MultiPartEntity, so have to save them here.
WITHOUT_CLASSIFICATION	// Add any parameters
WITHOUT_CLASSIFICATION	// Add cssJquery tester pane // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add current time to total for later use (exclude pause time)
WITHOUT_CLASSIFICATION	// Add local JMeter properties, if the file is found //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add local system properties, if the file is found //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add parameterised tests. For simplicity we assune each has cases 0-10
WITHOUT_CLASSIFICATION	// Add regexp tester pane // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add sample
WITHOUT_CLASSIFICATION	// Add search text extension
WITHOUT_CLASSIFICATION	// Add separator as the last item
WITHOUT_CLASSIFICATION	// Add standard jar locations to initial classpath
WITHOUT_CLASSIFICATION	// Add styles to use for different types of status messages
WITHOUT_CLASSIFICATION	// Add the end of multipart
WITHOUT_CLASSIFICATION	// Add the main panel and the graph
WITHOUT_CLASSIFICATION	// Add the main panel and the graph
WITHOUT_CLASSIFICATION	// Add the main panel and the graph
WITHOUT_CLASSIFICATION	// Add the main panel and the graph
WITHOUT_CLASSIFICATION	// Add the menu item
WITHOUT_CLASSIFICATION	// Add the new file at the start of the list
WITHOUT_CLASSIFICATION	// Add the offset
WITHOUT_CLASSIFICATION	// Add the offset
WITHOUT_CLASSIFICATION	// Add the parameter, httpclient will urlencode it
WITHOUT_CLASSIFICATION	// Add the parameter, httpclient will urlencode it
WITHOUT_CLASSIFICATION	// Add the parameters
WITHOUT_CLASSIFICATION	// Add the parameters
WITHOUT_CLASSIFICATION	// Add the query string if it is a HTTP GET or DELETE request
WITHOUT_CLASSIFICATION	// Add the recent files, which will also add a separator that is // visible when needed
WITHOUT_CLASSIFICATION	// Add the result as subsample of transaction if we are in a transaction
WITHOUT_CLASSIFICATION	// Add the standard title
WITHOUT_CLASSIFICATION	// Add the standard title
WITHOUT_CLASSIFICATION	// Add the sub components
WITHOUT_CLASSIFICATION	// Add the sub components
WITHOUT_CLASSIFICATION	// Add the sub components
WITHOUT_CLASSIFICATION	// Add the sub result to the transaction result
WITHOUT_CLASSIFICATION	// Add this node
WITHOUT_CLASSIFICATION	// Add titles that don't need to be documented //guiTitles.put("Root", Boolean.FALSE);
WITHOUT_CLASSIFICATION	// Add to cache
WITHOUT_CLASSIFICATION	// Add variables for access to context and variables
WITHOUT_CLASSIFICATION	// Add variables for access to context and variables //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add variables for access to context and variables //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Added in version 1.1 // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Added to support external testing
WITHOUT_CLASSIFICATION	// Additional member names which are currently not written out // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// All implementations extend TestElement
WITHOUT_CLASSIFICATION	// All needed to ensure re-usablility
WITHOUT_CLASSIFICATION	// All other
WITHOUT_CLASSIFICATION	// All rows have this class
WITHOUT_CLASSIFICATION	// All the other headers are set up by HTTPSampler2.setupConnection()
WITHOUT_CLASSIFICATION	// All threads - alternate calculation
WITHOUT_CLASSIFICATION	// Allow Headers to override Host setting //$NON-NLS-1$ //Host
WITHOUT_CLASSIFICATION	// Allow HttpClient to handle the redirects:
WITHOUT_CLASSIFICATION	// Allow RMI to complete
WITHOUT_CLASSIFICATION	// Allow Sampler access // to test element name
WITHOUT_CLASSIFICATION	// Allow TestResultWrapper to feed back the samples // This is effectively the same as saver.fromXML(InputStream) except we get to provide the DataHolder // Don't know why there is no method for this in the XStream class
WITHOUT_CLASSIFICATION	// Allow access to context and variables directly //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Allow all but images
WITHOUT_CLASSIFICATION	// Allow any pending interrupt to complete (OK because currentSampler == null)
WITHOUT_CLASSIFICATION	// Allow display/hide Log Error/Fatal counter
WITHOUT_CLASSIFICATION	// Allow display/hide LoggerPanel
WITHOUT_CLASSIFICATION	// Allow display/hide toolbar
WITHOUT_CLASSIFICATION	// Allow engine and threads to be stopped from outside a thread // e.g. from beanshell server // Assumes that there is only one instance of the engine // at any one time so it is not guaranteed to work ...
WITHOUT_CLASSIFICATION	// Allow enough time for JVM to exit
WITHOUT_CLASSIFICATION	// Allow for empty name
WITHOUT_CLASSIFICATION	// Allow for missing optional jars
WITHOUT_CLASSIFICATION	// Allow for missing optional jars
WITHOUT_CLASSIFICATION	// Allow for missing optional jars
WITHOUT_CLASSIFICATION	// Allow for non-sample time
WITHOUT_CLASSIFICATION	// Allow for null strings
WITHOUT_CLASSIFICATION	// Allow for old format file without mechanism support
WITHOUT_CLASSIFICATION	// Allow for old format file without the extra columnns
WITHOUT_CLASSIFICATION	// Allow for property not yet being set (probably only applies to Test cases)
WITHOUT_CLASSIFICATION	// Allow for short/negative times
WITHOUT_CLASSIFICATION	// Allow for short/negative times
WITHOUT_CLASSIFICATION	// Allow for some margin of error // Check that the throughput uses the time elapsed for the sub results
WITHOUT_CLASSIFICATION	// Allow for the old JMX file which used the local language string
WITHOUT_CLASSIFICATION	// Allow headless testing
WITHOUT_CLASSIFICATION	// Allow list of headers to be overridden // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Allow listeners to close files
WITHOUT_CLASSIFICATION	// Allow other thread to start
WITHOUT_CLASSIFICATION	// Allow read-only access from test code
WITHOUT_CLASSIFICATION	// Allow reversion to original shared session context
WITHOUT_CLASSIFICATION	// Allow shorthand names
WITHOUT_CLASSIFICATION	// Allow test code to change the default useNanoTime and nanoThreadSleep settings
WITHOUT_CLASSIFICATION	// Allow test code to change the default useNanoTime setting
WITHOUT_CLASSIFICATION	// Allow test code to check for spurious class references
WITHOUT_CLASSIFICATION	// Allow testcode access to the settings
WITHOUT_CLASSIFICATION	// Allow testing of failure codes
WITHOUT_CLASSIFICATION	// Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	// Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	// Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	// Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters
WITHOUT_CLASSIFICATION	// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters
IMPLEMENTATION	// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio
IMPLEMENTATION	// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio
IMPLEMENTATION	// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio
IMPLEMENTATION	// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	// Allow variable to be omitted
WITHOUT_CLASSIFICATION	// Allows HTTPSamplerProxy to call notifyFirstSampleAfterLoopRestart; subclasses can override if necessary
WITHOUT_CLASSIFICATION	// Allows HTTPSamplerProxy to call threadFinished; subclasses can override if necessary
WITHOUT_CLASSIFICATION	// Allows override of sample size in case sampler does not want to store all the data
WITHOUT_CLASSIFICATION	// Already contains a prefix
WITHOUT_CLASSIFICATION	// Already failed
WITHOUT_CLASSIFICATION	// Already logged
WITHOUT_CLASSIFICATION	// Already logged
WITHOUT_CLASSIFICATION	// Already waited
WITHOUT_CLASSIFICATION	// Also Check key is in default
WITHOUT_CLASSIFICATION	// Also forward all the Socket methods.
WITHOUT_CLASSIFICATION	// Also handles read(byte[])
WITHOUT_CLASSIFICATION	// Also handles write(byte[])
WITHOUT_CLASSIFICATION	// Also initialises JMeter logging
WITHOUT_CLASSIFICATION	// Also programming error
WITHOUT_CLASSIFICATION	// Also used by org.apache.jmeter.resources.PackageTest
WITHOUT_CLASSIFICATION	// Although the default is not the same as for the string value, it is only used internally
WITHOUT_CLASSIFICATION	// Although the default is not the same as for the string value, it is only used internally
WITHOUT_CLASSIFICATION	// Although the spec says UTF-8 should be used for encoding URL parameters, // most browser use ISO-8859-1 for default if encoding is not known. // We use null for contentEncoding, then the url parameters will be added // with the value in the URL, and the "encode?" flag set to false
WITHOUT_CLASSIFICATION	// Although this field is mutable, it is only accessed within the synchronized method deliverSampler()
WITHOUT_CLASSIFICATION	// Always create hash because we will always need it
WITHOUT_CLASSIFICATION	// Always decode
WITHOUT_CLASSIFICATION	// Always remove cookies // Always remove authorization // Remove additional headers
WITHOUT_CLASSIFICATION	// Always update the end time
WITHOUT_CLASSIFICATION	// An additional note on using HashSets to store URLs: I just // discovered that obtaining the hashCode of a java.net.URL implies // a domain-name resolution process. This means significant delays // can occur, even more so if the domain name is not resolvable. // Whether this can be a problem in practical situations I can't tell, // but // thought I'd keep a note just in case... // BTW, note that using a List and removing duplicates via scan // would not help, since URL.equals requires name resolution too. // The above problem has now been addressed with the URLString and // URLCollection classes.
WITHOUT_CLASSIFICATION	// And the end of the file multipart
WITHOUT_CLASSIFICATION	// Another subsample for the transaction
WITHOUT_CLASSIFICATION	// Apache HttpClient
WITHOUT_CLASSIFICATION	// Appears not to be used - however it is invoked via the Functor class
WITHOUT_CLASSIFICATION	// Append body if it is a post or put
WITHOUT_CLASSIFICATION	// Are we about to start a new option?
WITHOUT_CLASSIFICATION	// Are we processing a file // sequence?
WITHOUT_CLASSIFICATION	// Are we processing the first sample?
WITHOUT_CLASSIFICATION	// Are we the default language?
WITHOUT_CLASSIFICATION	// Are we uploading? // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Args will be provided later
WITHOUT_CLASSIFICATION	// Arguments args = sampler.getArguments();
WITHOUT_CLASSIFICATION	// As a connection is held by only one thread, we cannot already have a  // preparedStatementMap put by another thread
WITHOUT_CLASSIFICATION	// Associate sample with file name
WITHOUT_CLASSIFICATION	// Assume URL
WITHOUT_CLASSIFICATION	// Assume failure
WITHOUT_CLASSIFICATION	// Assume failure
WITHOUT_CLASSIFICATION	// Assume it is the URL
WITHOUT_CLASSIFICATION	// Assume it is the URL
WITHOUT_CLASSIFICATION	// Assume it is the URL
WITHOUT_CLASSIFICATION	// Assume it will fail // ditto $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Assume it will fail // ditto $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Assume no recent files
WITHOUT_CLASSIFICATION	// Assume result is OK // because we add the sample count in later
WITHOUT_CLASSIFICATION	// Assume success
WITHOUT_CLASSIFICATION	// Assume success
WITHOUT_CLASSIFICATION	// Assume success
WITHOUT_CLASSIFICATION	// Assume that the UI has not changed since the checkbos was created
WITHOUT_CLASSIFICATION	// Assume there's at least one file
WITHOUT_CLASSIFICATION	// Assume this thread only // 1 per second // Initialise
WITHOUT_CLASSIFICATION	// Assume this thread only // 1 per second // Should delay for 1 second // 1 per milli-second // Should delay for 1 milli-second
WITHOUT_CLASSIFICATION	// Assume we have already created the store
WITHOUT_CLASSIFICATION	// Assume we have already created the store
WITHOUT_CLASSIFICATION	// Assume we will be successful
WITHOUT_CLASSIFICATION	// Assumes some kind of list is use // If not using a list that retains the order, then the asserts would need to change
WITHOUT_CLASSIFICATION	// Assumes some kind of list is used
WITHOUT_CLASSIFICATION	// At least one recent file menu item is visible
WITHOUT_CLASSIFICATION	// Attempt the connection:
WITHOUT_CLASSIFICATION	// Attributes for TestElement and TestElementProperty // Must all be unique //$NON-NLS-1$ // Also used by PropertyConverter classes // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Authorization
WITHOUT_CLASSIFICATION	// Avalon only
WITHOUT_CLASSIFICATION	// Avalon only
WITHOUT_CLASSIFICATION	// Avoid NPE in resetPage()
WITHOUT_CLASSIFICATION	// Avoid double-call if addSubResult was called.
WITHOUT_CLASSIFICATION	// BSF/JSR223 language to use //-- For TestBean implementations only
WITHOUT_CLASSIFICATION	// Backward compatibility
WITHOUT_CLASSIFICATION	// Based on query return value, get results
WITHOUT_CLASSIFICATION	// BeanInfo objects also contain locale-sensitive data -- flush them // away:
WITHOUT_CLASSIFICATION	// BeanInfo objects also contain locale-sensitive data -- flush them // away:
WITHOUT_CLASSIFICATION	// Because CollectionProperty.mergeIn will not prevent adding two // properties of the same name, we need to select the first value so // that this element's values prevail over defaults provided by // configuration // elements:
WITHOUT_CLASSIFICATION	// Better behaviour when howLong=0 or lastTime=0
WITHOUT_CLASSIFICATION	// Better behaviour when howLong=0 or lastTime=0
WITHOUT_CLASSIFICATION	// Better behaviour when howLong=0 or lastTime=0
WITHOUT_CLASSIFICATION	// Better error than NPE
WITHOUT_CLASSIFICATION	// Blank line
WITHOUT_CLASSIFICATION	// Body data
WITHOUT_CLASSIFICATION	// Both these are needed in the list even though they set the same // variable
WITHOUT_CLASSIFICATION	// Both these are needed in the list even though they set the same // variable
WITHOUT_CLASSIFICATION	// Bottom (embedded resources, source address and optional tasks)
WITHOUT_CLASSIFICATION	// Bottom buttons bar
WITHOUT_CLASSIFICATION	// Browsers seem to tolerate Location headers with spaces, // replacing them automatically with %20. We want to emulate // this behaviour.
WITHOUT_CLASSIFICATION	// Buffer to hold the entity body
WITHOUT_CLASSIFICATION	// Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	// Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	// Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	// Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	// Buffer to hold the put body, except file content
WITHOUT_CLASSIFICATION	// Bug can generate RTE
WITHOUT_CLASSIFICATION	// Build the replacer from all the variables in the collection:
WITHOUT_CLASSIFICATION	// Button
WITHOUT_CLASSIFICATION	// Button
WITHOUT_CLASSIFICATION	// Button
WITHOUT_CLASSIFICATION	// Button
WITHOUT_CLASSIFICATION	// Button Panel
WITHOUT_CLASSIFICATION	// Button for browsing webservice wsdl
WITHOUT_CLASSIFICATION	// Button group resources
WITHOUT_CLASSIFICATION	// Button group resources
WITHOUT_CLASSIFICATION	// Button group resources when Bytes Message is selected
WITHOUT_CLASSIFICATION	// Buttons
WITHOUT_CLASSIFICATION	// CONTENT_ENCODING
WITHOUT_CLASSIFICATION	// CRLF blank line found
WITHOUT_CLASSIFICATION	// Cache for bytes-message, only used when parsing from a file 
WITHOUT_CLASSIFICATION	// Cache for file. Only used by sample() in a single thread
WITHOUT_CLASSIFICATION	// Cache for object-message, only used when parsing from a file because in text-area // property replacement might have been used
WITHOUT_CLASSIFICATION	// Cache of parsers - parsers must be re-usable
WITHOUT_CLASSIFICATION	// Cached value
WITHOUT_CLASSIFICATION	// Calculate each time, as likely to be called for each add
WITHOUT_CLASSIFICATION	// Calculate intermediate values (if needed)
WITHOUT_CLASSIFICATION	// Calculate response time
WITHOUT_CLASSIFICATION	// Calculate the delay based on the mode
WITHOUT_CLASSIFICATION	// Calculate the test duration. Needs to xAxis Labels and getData.
WITHOUT_CLASSIFICATION	// Called by JMeter ListenToTest if remoteStop is true
WITHOUT_CLASSIFICATION	// Called by JMeter#startGui()
WITHOUT_CLASSIFICATION	// Called by MainFrame#setEditMenu() which is called by EditCommand#doAction and GuiPackage#localeChanged
WITHOUT_CLASSIFICATION	// Called by ResultCollector#loadExistingFile() if XStream loading fails
WITHOUT_CLASSIFICATION	// Called by Save function
WITHOUT_CLASSIFICATION	// Called by SaveService.loadTree(InputStream reader) if XStream loading fails
WITHOUT_CLASSIFICATION	// Called by StandardJMeterEngine, TestAction and AccessLogSampler
WITHOUT_CLASSIFICATION	// Called by XPathAssertionGui
WITHOUT_CLASSIFICATION	// Called by XPathAssertionGui
WITHOUT_CLASSIFICATION	// Called by XPathExtractorGui
WITHOUT_CLASSIFICATION	// Called by XPathExtractorGui
WITHOUT_CLASSIFICATION	// Called from ctor, so must be private (or final, but it does not seem useful elsewhere)
WITHOUT_CLASSIFICATION	// Called from multiple threads
WITHOUT_CLASSIFICATION	// Can be missing, e.g. on redirect
WITHOUT_CLASSIFICATION	// Can be missing, e.g. on redirect
WITHOUT_CLASSIFICATION	// Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	// Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	// Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	// Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	// Can be null if init fails
WITHOUT_CLASSIFICATION	// Can be returned by headless hosts
WITHOUT_CLASSIFICATION	// Can be returned by headless hosts
WITHOUT_CLASSIFICATION	// Can cause NPE in HttpClient 3.1 //((SimpleHttpConnectionManager)cl.getHttpConnectionManager()).shutdown();// Closes the connection // Revert to original method: // Closes the connection
WITHOUT_CLASSIFICATION	// Can happen for bad input document
WITHOUT_CLASSIFICATION	// Can happen if called during test closedown
WITHOUT_CLASSIFICATION	// Can have multiple aliases for same target classname
WITHOUT_CLASSIFICATION	// Can now afford to wait a bit longer between checks
WITHOUT_CLASSIFICATION	// Can occur at run-time // could be caused by the bsh Exceptions: // EvalError, ParseException or TargetError
WITHOUT_CLASSIFICATION	// Can occur running headless on Jenkins
WITHOUT_CLASSIFICATION	// Can't add a TestPlan anywhere
WITHOUT_CLASSIFICATION	// Can't add a Workbench anywhere
WITHOUT_CLASSIFICATION	// Can't do it as a static initialisation, because SaveService // is being constructed when this is called
WITHOUT_CLASSIFICATION	// Can't have two matching cookies
WITHOUT_CLASSIFICATION	// Can't instantiate
WITHOUT_CLASSIFICATION	// Can't instantiate
WITHOUT_CLASSIFICATION	// Can't use for loop here because we remove elements
WITHOUT_CLASSIFICATION	// Cannot be instantiated
WITHOUT_CLASSIFICATION	// Cannot be null here
WITHOUT_CLASSIFICATION	// Cannot check the query string of the result, because the mirror server // replies without including query string in URL
WITHOUT_CLASSIFICATION	// Cannot do this as part of threadStarted() because the Config elements have not been processed.
WITHOUT_CLASSIFICATION	// Cannot find the file locally, so try the bin directory
WITHOUT_CLASSIFICATION	// Cannot use getThreadContext() as not cloned per thread
WITHOUT_CLASSIFICATION	// Cannot use getThreadContext() as we are not cloned per thread
WITHOUT_CLASSIFICATION	// Canonical form
WITHOUT_CLASSIFICATION	// Catch errors and rethrow as ConversionException so we get location details
WITHOUT_CLASSIFICATION	// Catch evaluation errors
WITHOUT_CLASSIFICATION	// Catch the trailing delimiter
WITHOUT_CLASSIFICATION	// Change Cancel label to Close //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Change the original
WITHOUT_CLASSIFICATION	// Change the original back again
WITHOUT_CLASSIFICATION	// Changing color for column
WITHOUT_CLASSIFICATION	// Characters per second to emulate
WITHOUT_CLASSIFICATION	// Characters per second to emulate
WITHOUT_CLASSIFICATION	// Characters per second to emulate
WITHOUT_CLASSIFICATION	// Characters per second to emulate
WITHOUT_CLASSIFICATION	// Characters per second to emulate
WITHOUT_CLASSIFICATION	// Characters per second to emulate
WITHOUT_CLASSIFICATION	// Check "Undefined" does not become a "reserved word":
WITHOUT_CLASSIFICATION	// Check // "-" // is // allowed // in // arg2
WITHOUT_CLASSIFICATION	// Check // delimiters // are // allowed
WITHOUT_CLASSIFICATION	// Check // delimiters // are // allowed
WITHOUT_CLASSIFICATION	// Check URL
WITHOUT_CLASSIFICATION	// Check URL
WITHOUT_CLASSIFICATION	// Check URL
WITHOUT_CLASSIFICATION	// Check URL
WITHOUT_CLASSIFICATION	// Check URL
WITHOUT_CLASSIFICATION	// Check URL
WITHOUT_CLASSIFICATION	// Check all the keys are in the default props file
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments // We should have one argument, with the value equal to the post body
WITHOUT_CLASSIFICATION	// Check arguments // We should have one argument, with the value equal to the post body
WITHOUT_CLASSIFICATION	// Check assertions for the transaction sample
WITHOUT_CLASSIFICATION	// Check blank lines are treated as EOF
WITHOUT_CLASSIFICATION	// Check cache for an entry with an Expires header in the future
WITHOUT_CLASSIFICATION	// Check can cast for clone // Don't clone NoThreadClone unless honourNoThreadClone == false
WITHOUT_CLASSIFICATION	// Check file so we can distinguish file error from script error
WITHOUT_CLASSIFICATION	// Check for Quoted variable names
WITHOUT_CLASSIFICATION	// Check for a BASE HREF:
WITHOUT_CLASSIFICATION	// Check for file lists specifically
WITHOUT_CLASSIFICATION	// Check for file lists specifically
WITHOUT_CLASSIFICATION	// Check for file lists specifically
WITHOUT_CLASSIFICATION	// Check for local contentEncoding (charset) override; fall back to default for content body // we do this here rather so we can use the same charset to retrieve the data
WITHOUT_CLASSIFICATION	// Check for property- and group-related texts:
WITHOUT_CLASSIFICATION	// Check for quoted string // $NON-NLS-1$ // remove quotes
WITHOUT_CLASSIFICATION	// Check for the same instance
WITHOUT_CLASSIFICATION	// Check how Class definition behaves
WITHOUT_CLASSIFICATION	// Check how much of the body we have already read as part of reading // the headers // We subtract two bytes for the crlf divider between header and body
WITHOUT_CLASSIFICATION	// Check if LAF is a built-in one
WITHOUT_CLASSIFICATION	// Check if alias is suitable here, rather than waiting for connection to fail
WITHOUT_CLASSIFICATION	// Check if it is a file being uploaded //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Check if it is the start of a new transaction // must be the start of the subtree
WITHOUT_CLASSIFICATION	// Check if it was a multipart http post request
WITHOUT_CLASSIFICATION	// Check if target of merge is reasonable
WITHOUT_CLASSIFICATION	// Check if the entry index corresponds to a tag, if so return the tag // This also works if the tags were not translated
WITHOUT_CLASSIFICATION	// Check if the exclude pattern is matched
WITHOUT_CLASSIFICATION	// Check if the header manager had a content type header // This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	// Check if the header manager had a content type header // This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	// Check if the header manager had a content type header // This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	// Check if the header manager had a content type header // This allows the user to specify his own content-type for a PUT request
WITHOUT_CLASSIFICATION	// Check if the include pattern is matched
WITHOUT_CLASSIFICATION	// Check if the line is a header
WITHOUT_CLASSIFICATION	// Check if the new file is already in the recent list
WITHOUT_CLASSIFICATION	// Check if the property exists
WITHOUT_CLASSIFICATION	// Check if the request itself tells us what the encoding is
WITHOUT_CLASSIFICATION	// Check if the sampler has a specified content encoding
WITHOUT_CLASSIFICATION	// Check if the transaction is done
WITHOUT_CLASSIFICATION	// Check if the user has loaded any file
WITHOUT_CLASSIFICATION	// Check if the user is trying to save to an existing file
WITHOUT_CLASSIFICATION	// Check if the user wants to create from template
WITHOUT_CLASSIFICATION	// Check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	// Check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	// Check if the user wants to revert
WITHOUT_CLASSIFICATION	// Check if there are any difference between name and value and their encoded name and value
WITHOUT_CLASSIFICATION	// Check if this instance is present in transaction listener list
WITHOUT_CLASSIFICATION	// Check if thread or test should be stopped
WITHOUT_CLASSIFICATION	// Check if transaction is done
WITHOUT_CLASSIFICATION	// Check if we are running a transaction
WITHOUT_CLASSIFICATION	// Check if we are still sampling our children
WITHOUT_CLASSIFICATION	// Check if we found an accept-charset attribute on the form
WITHOUT_CLASSIFICATION	// Check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	// Check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	// Check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	// Check if we have a sampler to sample
WITHOUT_CLASSIFICATION	// Check if we have any content to send for body
WITHOUT_CLASSIFICATION	// Check if we have any content to send for body
WITHOUT_CLASSIFICATION	// Check if we have found a content-length header //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Check if we have it in the cache
WITHOUT_CLASSIFICATION	// Check if we have read all the headers
WITHOUT_CLASSIFICATION	// Check if we know the encoding of the form
WITHOUT_CLASSIFICATION	// Check if we know the encoding of the page
WITHOUT_CLASSIFICATION	// Check if we should do a multipart/form-data or an // application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	// Check if we should do a multipart/form-data or an // application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	// Check if we should do a multipart/form-data or an // application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	// Check if we should do a multipart/form-data or an // application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	// Check if we should send only placeholder text for the // file content, or the real file content
WITHOUT_CLASSIFICATION	// Check illegal array lengths
WITHOUT_CLASSIFICATION	// Check init file functioning
WITHOUT_CLASSIFICATION	// Check method
WITHOUT_CLASSIFICATION	// Check method
WITHOUT_CLASSIFICATION	// Check method, path and query sent
WITHOUT_CLASSIFICATION	// Check method, path and query sent
WITHOUT_CLASSIFICATION	// Check method, path and query sent
WITHOUT_CLASSIFICATION	// Check method, path and query sent
WITHOUT_CLASSIFICATION	// Check method, path and query sent
WITHOUT_CLASSIFICATION	// Check old values don't hang around: // fewer matches
WITHOUT_CLASSIFICATION	// Check option combinations
WITHOUT_CLASSIFICATION	// Check path
WITHOUT_CLASSIFICATION	// Check persistence
WITHOUT_CLASSIFICATION	// Check post body from the result query string
WITHOUT_CLASSIFICATION	// Check post body from the result query string
WITHOUT_CLASSIFICATION	// Check post body which was sent to the mirror server, and // sent back by the mirror server
WITHOUT_CLASSIFICATION	// Check post body which was sent to the mirror server, and // sent back by the mirror server
WITHOUT_CLASSIFICATION	// Check post body which was sent to the mirror server, and // sent back by the mirror server
WITHOUT_CLASSIFICATION	// Check query
WITHOUT_CLASSIFICATION	// Check quoted charset
WITHOUT_CLASSIFICATION	// Check random number
WITHOUT_CLASSIFICATION	// Check reflexive
WITHOUT_CLASSIFICATION	// Check request headers
WITHOUT_CLASSIFICATION	// Check request headers
WITHOUT_CLASSIFICATION	// Check request headers
WITHOUT_CLASSIFICATION	// Check response headers
WITHOUT_CLASSIFICATION	// Check response headers
WITHOUT_CLASSIFICATION	// Check response headers
WITHOUT_CLASSIFICATION	// Check sample increments OK
WITHOUT_CLASSIFICATION	// Check sample increments OK
WITHOUT_CLASSIFICATION	// Check sample increments OK
WITHOUT_CLASSIFICATION	// Check sample increments OK
WITHOUT_CLASSIFICATION	// Check some initial variables
WITHOUT_CLASSIFICATION	// Check source works
WITHOUT_CLASSIFICATION	// Check that all keys in the bundle are also in the default bundle:
WITHOUT_CLASSIFICATION	// Check that all necessary keys are there:
WITHOUT_CLASSIFICATION	// Check that bsh has read the file
WITHOUT_CLASSIFICATION	// Check that calculator gets the correct statistics from the sample
WITHOUT_CLASSIFICATION	// Check that calls to getResString use a valid property key name
WITHOUT_CLASSIFICATION	// Check that optional args work woth long options
WITHOUT_CLASSIFICATION	// Check that optional args work woth long options
WITHOUT_CLASSIFICATION	// Check that other encoding is not the current encoding // TODO - charset?
WITHOUT_CLASSIFICATION	// Check that the query string is empty
WITHOUT_CLASSIFICATION	// Check that the request and response matches
WITHOUT_CLASSIFICATION	// Check that the request and response matches
WITHOUT_CLASSIFICATION	// Check that the request and response matches
WITHOUT_CLASSIFICATION	// Check that the request and response matches
WITHOUT_CLASSIFICATION	// Check that the request and response matches       
WITHOUT_CLASSIFICATION	// Check that we have a content type
WITHOUT_CLASSIFICATION	// Check the Request URI sent to the mirror server, and // sent back by the mirror server
WITHOUT_CLASSIFICATION	// Check the request
WITHOUT_CLASSIFICATION	// Check unquoted charset
WITHOUT_CLASSIFICATION	// Check using a different encoding
WITHOUT_CLASSIFICATION	// Check using default encoding
WITHOUT_CLASSIFICATION	// Check when match fails
WITHOUT_CLASSIFICATION	// Check which HTTPSampler class we should use
WITHOUT_CLASSIFICATION	// Checkbox // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	// Checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	// ClassFinder needs the classpath
WITHOUT_CLASSIFICATION	// ClassFinder needs this
WITHOUT_CLASSIFICATION	// Classnames must contain this string [.functions.] // $NON-NLS-1$ // Classnames must not contain this string [.gui.] // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Clear all data before display a new
WITHOUT_CLASSIFICATION	// Clear maps
WITHOUT_CLASSIFICATION	// Clear the name of the test plan file
WITHOUT_CLASSIFICATION	// Close action dialog box when tapping Escape key
WITHOUT_CLASSIFICATION	// Close any Main Menu that is open
WITHOUT_CLASSIFICATION	// Close any Main Menu that is open
WITHOUT_CLASSIFICATION	// Close connection
WITHOUT_CLASSIFICATION	// Close the connection
WITHOUT_CLASSIFICATION	// Close the connection
WITHOUT_CLASSIFICATION	// Close the connection
WITHOUT_CLASSIFICATION	// Close the connection
WITHOUT_CLASSIFICATION	// Close the connection
WITHOUT_CLASSIFICATION	// Close the current project
WITHOUT_CLASSIFICATION	// Code duplicated from getPageSize()
WITHOUT_CLASSIFICATION	// Column numbers - must agree with order above
WITHOUT_CLASSIFICATION	// Column renderers
WITHOUT_CLASSIFICATION	// Column renderers
WITHOUT_CLASSIFICATION	// Column renderers
WITHOUT_CLASSIFICATION	// Column renderers
WITHOUT_CLASSIFICATION	// Comment wanted
WITHOUT_CLASSIFICATION	// Commented as per sebb  // http://mail-archives.apache.org/mod_mbox/jmeter-dev/201307.mbox/%3CCAOGo0VZ0z3GMbfsq_gSB%2Bp7nTUqLng6Gy2ecvYbD8_AKb-Dt5w%40mail.gmail.com%3E
WITHOUT_CLASSIFICATION	// Common output function
WITHOUT_CLASSIFICATION	// Commons HttpClient only
WITHOUT_CLASSIFICATION	// Compare if the value has changed, since we received focus.
WITHOUT_CLASSIFICATION	// Compare if the value has changed, since we received focus.
WITHOUT_CLASSIFICATION	// Compute bytes before stripping
WITHOUT_CLASSIFICATION	// Compute the expected sample names
WITHOUT_CLASSIFICATION	// Compute the expected sample names
WITHOUT_CLASSIFICATION	// Compute the expected sample names
WITHOUT_CLASSIFICATION	// Concurrent resources download // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// ConcurrentHashMap does not need protecting
WITHOUT_CLASSIFICATION	// ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	// ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	// ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	// ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	// Condition LABEL
WITHOUT_CLASSIFICATION	// Condition LABEL // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Configuration items, set up by readResolve
WITHOUT_CLASSIFICATION	// Connect to the http server, and do a simple http get
WITHOUT_CLASSIFICATION	// Connect to the http server, and do a simple http get, with // a pause in the middle of transmitting the header
WITHOUT_CLASSIFICATION	// Connect to the http server, and do a simple http post
WITHOUT_CLASSIFICATION	// Connect to the http server, and do a simple http post with utf-8 // encoding of the body, which caused problems when reader/writer // classes were used in the HttpMirrorThread
WITHOUT_CLASSIFICATION	// Connect to the http server, and do a simple http post, with // a pause after transmitting the headers
WITHOUT_CLASSIFICATION	// Construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	// Construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	// Construct body
WITHOUT_CLASSIFICATION	// Construct body
WITHOUT_CLASSIFICATION	// Constructor for Function tests
WITHOUT_CLASSIFICATION	// Constructor for GUI tests
WITHOUT_CLASSIFICATION	// Constructor for Serializable tests
WITHOUT_CLASSIFICATION	// Constructor for TestElement tests
WITHOUT_CLASSIFICATION	// Constructors
WITHOUT_CLASSIFICATION	// Container endWindow; // JPopupMenu pop;
WITHOUT_CLASSIFICATION	// Container endWindow; // JPopupMenu pop;
WITHOUT_CLASSIFICATION	// Contains Strings and Integers
WITHOUT_CLASSIFICATION	// Content-length
WITHOUT_CLASSIFICATION	// Control reuse of cached SSL Context in subsequent iterations
WITHOUT_CLASSIFICATION	// Conversions for milli and nano seconds
WITHOUT_CLASSIFICATION	// Convert CRLF to CR, see modifyTestElement
WITHOUT_CLASSIFICATION	// Convert JUnit4 AssertionError failures to JUnit3 style so // will be treated as failure rather than error.
WITHOUT_CLASSIFICATION	// Convert JUnit4 failure to Junit3 style
WITHOUT_CLASSIFICATION	// Convert between eclipse jar name and build.properties name
WITHOUT_CLASSIFICATION	// Convert both to Sets
WITHOUT_CLASSIFICATION	// Convert the old numeric types - just in case someone wants to reload the workbench
WITHOUT_CLASSIFICATION	// Convert the old test plan entry (which is the language dependent string) to the resource name
WITHOUT_CLASSIFICATION	// Convert to URL for manifest
WITHOUT_CLASSIFICATION	// Cookie //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Cookies again ignored
WITHOUT_CLASSIFICATION	// Cookies are ignored
WITHOUT_CLASSIFICATION	// Copy all property values from the map into the element:
WITHOUT_CLASSIFICATION	// Copy all property values into the map:
WITHOUT_CLASSIFICATION	// Copy data that is shared between samples (i.e. the key items):
WITHOUT_CLASSIFICATION	// Copy for Opera
WITHOUT_CLASSIFICATION	// Copy in ThreadStarter thread context from calling Thread
WITHOUT_CLASSIFICATION	// Copy our name into that of the controller // otherwise name reverts
WITHOUT_CLASSIFICATION	// Could be SampleResult or AssertionResult
WITHOUT_CLASSIFICATION	// Could not access file or other error
WITHOUT_CLASSIFICATION	// Could time this // res.sampleEnd(); // if sampleEnd() is not called, elapsed time will remain zero // TODO distinguish errors better //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Count the retries as well in the time
WITHOUT_CLASSIFICATION	// Count the retries as well in the time
WITHOUT_CLASSIFICATION	// Count the retries as well in the time
WITHOUT_CLASSIFICATION	// Create a button to trigger the file chooser:
WITHOUT_CLASSIFICATION	// Create a new list containing numElements null elements.
WITHOUT_CLASSIFICATION	// Create a panel containing the combo and the button:
WITHOUT_CLASSIFICATION	// Create cert for CA using root (requires Java 7 for gencert)
WITHOUT_CLASSIFICATION	// Create empty properties
WITHOUT_CLASSIFICATION	// Create the BeanShell function and set its parameters.
WITHOUT_CLASSIFICATION	// Create the CSVRead function and set its parameters.
WITHOUT_CLASSIFICATION	// Create the SplitFile function and set its parameters.
WITHOUT_CLASSIFICATION	// Create the StringFromFile function and set its parameters.
WITHOUT_CLASSIFICATION	// Create the content length we are going to write
WITHOUT_CLASSIFICATION	// Create the content length we are going to write
WITHOUT_CLASSIFICATION	// Create the menu item
WITHOUT_CLASSIFICATION	// Create the multiparts
WITHOUT_CLASSIFICATION	// Create the multiparts
WITHOUT_CLASSIFICATION	// Create the panels for the cssJquery tab
WITHOUT_CLASSIFICATION	// Create the panels for the regexp tab
WITHOUT_CLASSIFICATION	// Create the parts // Add any parameters
WITHOUT_CLASSIFICATION	// Create the parts // Add any parameters
WITHOUT_CLASSIFICATION	// Create the property:
WITHOUT_CLASSIFICATION	// Create the self-signed keypairs (requires Java 7 for -ext flag)
WITHOUT_CLASSIFICATION	// Create the split pane
WITHOUT_CLASSIFICATION	// Create the split pane
WITHOUT_CLASSIFICATION	// Create the split pane
WITHOUT_CLASSIFICATION	// Create the test file content
WITHOUT_CLASSIFICATION	// Create the test file content
WITHOUT_CLASSIFICATION	// Create this object using the specified port (0 means anonymous)
WITHOUT_CLASSIFICATION	// Create unique object as marker for end of queue
WITHOUT_CLASSIFICATION	// Created by SampleSenderFactory
WITHOUT_CLASSIFICATION	// Created by XStream reading templates.xml
WITHOUT_CLASSIFICATION	// Created during class init; not modified thereafter 
WITHOUT_CLASSIFICATION	// Creation of the customizer and GUI initialization is delayed until // the // first // configure call. We don't need all that just to find out the static // label, menu // categories, etc!
WITHOUT_CLASSIFICATION	// Currently only used by JMeterThread
WITHOUT_CLASSIFICATION	// DATA = model;
WITHOUT_CLASSIFICATION	// DELAY DEVIATION
WITHOUT_CLASSIFICATION	// DROP-DOWN MENU
WITHOUT_CLASSIFICATION	// Date formats to try if the time format does not parse as milliseconds
WITHOUT_CLASSIFICATION	// Datefields are not thread-safe // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Decent value for timers
WITHOUT_CLASSIFICATION	// Default (can be overridden by the script)
WITHOUT_CLASSIFICATION	// Default changed in 2.3 and again in 2.4
WITHOUT_CLASSIFICATION	// Default checked // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default checked // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default checked // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default checked // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default concurrent pool size for download embedded resources
WITHOUT_CLASSIFICATION	// Default file name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default for writing//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default implementation
WITHOUT_CLASSIFICATION	// Default to be applied
WITHOUT_CLASSIFICATION	// Default to milliseconds
WITHOUT_CLASSIFICATION	// Default to original behaviour, i.e. re-use connection
WITHOUT_CLASSIFICATION	// Default to overall format, and then to version 2.2
WITHOUT_CLASSIFICATION	// Default value // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default value // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default wait (ms) for a message if timeouts are not enabled // This is the maximum time the sampler can be blocked.
WITHOUT_CLASSIFICATION	// Defaults
WITHOUT_CLASSIFICATION	// Defaults from properties:
WITHOUT_CLASSIFICATION	// Defaults to caller URL
WITHOUT_CLASSIFICATION	// Defaults to continue
WITHOUT_CLASSIFICATION	// Defaults to continue
WITHOUT_CLASSIFICATION	// Defaults to empty;
WITHOUT_CLASSIFICATION	// Define chart type (line)
WITHOUT_CLASSIFICATION	// Define file format property names // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Define file format versions // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Delegate the final check to the typeEditor:
WITHOUT_CLASSIFICATION	// Delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	// Delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	// Deliberate use of deprecated ctor // Create non-GUI version to avoid headless problems
WITHOUT_CLASSIFICATION	// Deliberate use of deprecated method
WITHOUT_CLASSIFICATION	// Delimiter same as splitter
WITHOUT_CLASSIFICATION	// Derive the mapping of content types to parsers
WITHOUT_CLASSIFICATION	// Description multipart
WITHOUT_CLASSIFICATION	// Detect functionName() so this does not generate empty string as the parameter
WITHOUT_CLASSIFICATION	// Did a test fail?
WITHOUT_CLASSIFICATION	// Did sample succeed?
WITHOUT_CLASSIFICATION	// Did sample succeed?
WITHOUT_CLASSIFICATION	// Did sample succeed? // Sampler data
WITHOUT_CLASSIFICATION	// Did we open the file?
WITHOUT_CLASSIFICATION	// Different from TestHTTPMirrorThread port and standard mirror server
WITHOUT_CLASSIFICATION	// Disable DELETE and BROWSE buttons if there are no rows in // the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE and BROWSE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable the DELETE and SAVE buttons if no rows remaining // after delete
WITHOUT_CLASSIFICATION	// Disable the DELETE and SAVE buttons if no rows remaining // after delete.
WITHOUT_CLASSIFICATION	// Disable the DELETE and SAVE buttons if no rows remaining // after delete.
WITHOUT_CLASSIFICATION	// Disabled thread start if listen on sample choice
WITHOUT_CLASSIFICATION	// Display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	// Display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	// Display cookie in headers table (same location on http protocol)
WITHOUT_CLASSIFICATION	// Display not found message and reset search
WITHOUT_CLASSIFICATION	// Display with same order HTTP protocol
WITHOUT_CLASSIFICATION	// Do not allow a drop on the drag source selections.
WITHOUT_CLASSIFICATION	// Do not allow a non-leaf node to be moved into one of its children
WITHOUT_CLASSIFICATION	// Do not save, user does not want to overwrite
WITHOUT_CLASSIFICATION	// Do not save, user does not want to overwrite
WITHOUT_CLASSIFICATION	// Do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	// Do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	// Do not use TestCase.run(TestResult) method, since it will // call setUp and tearDown. Doing that will result in calling // the setUp and tearDown method twice and the elapsed time // will include setup and teardown.
WITHOUT_CLASSIFICATION	// Do nothing; the current time will be returned
WITHOUT_CLASSIFICATION	// Do search on Enter
WITHOUT_CLASSIFICATION	// Do search on Enter //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Do something ...
WITHOUT_CLASSIFICATION	// Do something ...
WITHOUT_CLASSIFICATION	// Do something here ...
WITHOUT_CLASSIFICATION	// Do stuff we cannot do as part of threadStarted()
WITHOUT_CLASSIFICATION	// Do this before starting the script
WITHOUT_CLASSIFICATION	// Do update on Enter
WITHOUT_CLASSIFICATION	// Do upgrade translation:
WITHOUT_CLASSIFICATION	// Do we have some data, or a trailing empty field? // we have some data // we've started a field // Just seen ""
WITHOUT_CLASSIFICATION	// Document doc = null;
WITHOUT_CLASSIFICATION	// DocumentListener method
WITHOUT_CLASSIFICATION	// DocumentListener method
WITHOUT_CLASSIFICATION	// DocumentListener method
WITHOUT_CLASSIFICATION	// Does not appear to be used externally; called by #loadProjectFile()
WITHOUT_CLASSIFICATION	// Does not need to be synch. because it is only accessed from the sampler thread // The ClientPool does access it in a different thread, but ClientPool is fully synch.
WITHOUT_CLASSIFICATION	// Does not need to be synchronised, as all access is from same thread
WITHOUT_CLASSIFICATION	// Does not need to be synchronised, as all access is from same thread
WITHOUT_CLASSIFICATION	// Does not open file
WITHOUT_CLASSIFICATION	// Does not open file
WITHOUT_CLASSIFICATION	// Does the order matter?
WITHOUT_CLASSIFICATION	// Doesn't even look like a URL? // Maybe it isn't: Ignore the exception.
WITHOUT_CLASSIFICATION	// Don't add delimiter first time round
WITHOUT_CLASSIFICATION	// Don't add it again
IMPLEMENTATION	// Don't allow override of Content-Length // TODO - what other headers are not allowed?
WITHOUT_CLASSIFICATION	// Don't bother reporting stop test interruptions
WITHOUT_CLASSIFICATION	// Don't break the world just because this failed:
WITHOUT_CLASSIFICATION	// Don't change locale from en_GB to en
WITHOUT_CLASSIFICATION	// Don't change the string, as it is used in JMX files // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Don't clear the plan
WITHOUT_CLASSIFICATION	// Don't clear the plan
WITHOUT_CLASSIFICATION	// Don't display Request headers label if rh is null or empty
WITHOUT_CLASSIFICATION	// Don't get editors for hidden or non-read-write properties:
WITHOUT_CLASSIFICATION	// Don't get tripped up by RE chars in the arg name
WITHOUT_CLASSIFICATION	// Don't instantiate class
WITHOUT_CLASSIFICATION	// Don't let the input field shrink too much
WITHOUT_CLASSIFICATION	// Don't let the input field shrink too much
WITHOUT_CLASSIFICATION	// Don't make these static, otherwise language change does not work //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Don't process again
WITHOUT_CLASSIFICATION	// Don't process invalid numbers
WITHOUT_CLASSIFICATION	// Don't process invalid numbers (including "")
WITHOUT_CLASSIFICATION	// Don't process the NAME column
WITHOUT_CLASSIFICATION	// Don't return null if not set
WITHOUT_CLASSIFICATION	// Don't save empty comments
WITHOUT_CLASSIFICATION	// Don't save empty comments - except for the TestPlan (to maintain compatibility)
WITHOUT_CLASSIFICATION	// Don't save headers - they are already in the raw message
WITHOUT_CLASSIFICATION	// Don't save this - only needed for processing CSV headers currently
WITHOUT_CLASSIFICATION	// Don't save this, as it is derived from the time format
WITHOUT_CLASSIFICATION	// Don't save this, as not settable via GUI
WITHOUT_CLASSIFICATION	// Don't start yet if stop between samples
WITHOUT_CLASSIFICATION	// Don't start yet if stop between samples
WITHOUT_CLASSIFICATION	// Don't try to adjust the host name
WITHOUT_CLASSIFICATION	// Don't try to check the default language
WITHOUT_CLASSIFICATION	// Don't try to instantiate remote server
WITHOUT_CLASSIFICATION	// Don't try to instantiate these
WITHOUT_CLASSIFICATION	// Don't use default for saving tristates //        element.setProperty(TCPSampler.CLOSE_CONNECTION, closeConnection.isSelected(), TCPSampler.CLOSE_CONNECTION_DEFAULT);
WITHOUT_CLASSIFICATION	// Don't use nanoThread
WITHOUT_CLASSIFICATION	// Don't wrap this error - display it as is
WITHOUT_CLASSIFICATION	// Done
WITHOUT_CLASSIFICATION	// Done
WITHOUT_CLASSIFICATION	// Done -- we're working with an editable property.
WITHOUT_CLASSIFICATION	// Done by finally block: fileReader.close();
WITHOUT_CLASSIFICATION	// Done with the sampling proper.
WITHOUT_CLASSIFICATION	// Done with the sampling proper.
WITHOUT_CLASSIFICATION	// Done with the sampling proper.
WITHOUT_CLASSIFICATION	// Done with the sampling proper.
WITHOUT_CLASSIFICATION	// Download concurrent resources // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Draw the graph
WITHOUT_CLASSIFICATION	// Drop the last character:
WITHOUT_CLASSIFICATION	// Drop the last character:
WITHOUT_CLASSIFICATION	// Dropped out, i.e. did not find closing ')'
WITHOUT_CLASSIFICATION	// Dummy
WITHOUT_CLASSIFICATION	// Dummy as the file has no entries
WITHOUT_CLASSIFICATION	// Dummy as the file has no entries
WITHOUT_CLASSIFICATION	// Dummy constructor to allo JUnit tests to work
WITHOUT_CLASSIFICATION	// Dummy for testing functions
WITHOUT_CLASSIFICATION	// Dummy methods needed by Function interface
WITHOUT_CLASSIFICATION	// Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	// Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	// Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	// Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	// Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	// Duration
WITHOUT_CLASSIFICATION	// Duration is in seconds, starting from when the threads start
WITHOUT_CLASSIFICATION	// Dynamic proxy overrules static proxy
WITHOUT_CLASSIFICATION	// EDIT MENU // $NON-NLS-1$ // From the Java Look and Feel Guidelines: If all items in a menu // are disabled, then disable the menu. Makes sense.
WITHOUT_CLASSIFICATION	// EDIT MENU //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// EOF
WITHOUT_CLASSIFICATION	// EOF, re-open file
WITHOUT_CLASSIFICATION	// Educated guess
WITHOUT_CLASSIFICATION	// Element tags. Must be unique. Keep sorted. //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Embedded
WITHOUT_CLASSIFICATION	// Embedded
WITHOUT_CLASSIFICATION	// Embedded
WITHOUT_CLASSIFICATION	// Embedded
WITHOUT_CLASSIFICATION	// Embedded URL match regex
WITHOUT_CLASSIFICATION	// Embedded URL match regex // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Embedded URLs must match this RE (if provided) // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Empty arrays are immutable
WITHOUT_CLASSIFICATION	// Empty box //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Empty default
WITHOUT_CLASSIFICATION	// Empty delimiter
WITHOUT_CLASSIFICATION	// Empty filters
WITHOUT_CLASSIFICATION	// Empty overrides of superclass methods
WITHOUT_CLASSIFICATION	// Empty string
WITHOUT_CLASSIFICATION	// Empty strings at EOF
WITHOUT_CLASSIFICATION	// Empty value // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Enable file revert action if a file is used
WITHOUT_CLASSIFICATION	// Enable the DELETE and SAVE buttons if they are currently // disabled.
WITHOUT_CLASSIFICATION	// Enable the DELETE and SAVE buttons if they are currently // disabled.
WITHOUT_CLASSIFICATION	// Enable the DELETE and SAVE buttons if they are currently // disabled.
WITHOUT_CLASSIFICATION	// Enables the scheduler
WITHOUT_CLASSIFICATION	// Encode according to the HTTP spec, i.e. UTF-8
WITHOUT_CLASSIFICATION	// Encode the parameter value in the specified content encoding
WITHOUT_CLASSIFICATION	// End Method
WITHOUT_CLASSIFICATION	// End of code to allow engine to be controlled remotely
WITHOUT_CLASSIFICATION	// End the previous multipart
WITHOUT_CLASSIFICATION	// End the previous multipart
WITHOUT_CLASSIFICATION	// End timimg
WITHOUT_CLASSIFICATION	// Engine may be null if it has not correctly started
WITHOUT_CLASSIFICATION	// Enough to read the header column names // Get the first line, and see if it is the header
WITHOUT_CLASSIFICATION	// Ensure any remaining contexts are closed
WITHOUT_CLASSIFICATION	// Ensure global counters and lock are shared across threads in the group
WITHOUT_CLASSIFICATION	// Ensure not null
WITHOUT_CLASSIFICATION	// Ensure output follows version
WITHOUT_CLASSIFICATION	// Ensure properties files don't use special characters
WITHOUT_CLASSIFICATION	// Ensure terminated properly
WITHOUT_CLASSIFICATION	// Ensure that directory URLs end in "/" // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Ensure that the sample save config is not shared between copied nodes // N.B. clone only seems to be used for client-server tests
WITHOUT_CLASSIFICATION	// Ensure that there is always a collection available
WITHOUT_CLASSIFICATION	// Ensure that these are set, even if no paramters are provided //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Ensure the dialog is only created when it is first needed // In turn this avoids scanning the templates until first needed
WITHOUT_CLASSIFICATION	// Ensure transient object is created by the server
WITHOUT_CLASSIFICATION	// Ensure we use default bundle
WITHOUT_CLASSIFICATION	// Entry tends to be ignored ...
WITHOUT_CLASSIFICATION	// Entry tends to be ignored ...
WITHOUT_CLASSIFICATION	// Entry tends to be ignored ...
WITHOUT_CLASSIFICATION	// Escaped dollar commma and backslash with missing function reference
WITHOUT_CLASSIFICATION	// Escaped dollar commma and backslash with missing variable reference
WITHOUT_CLASSIFICATION	// Escaped dollar commma and backslash with no variable reference
WITHOUT_CLASSIFICATION	// Escaped dollar commma and backslash with variable reference
WITHOUT_CLASSIFICATION	// Evaluate All checkbox // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Evaluation occurs when nbLoops is not yet evaluated  // or when nbLoops is equal to special value INFINITE_LOOP_COUNT
WITHOUT_CLASSIFICATION	// Events often have this constructor
WITHOUT_CLASSIFICATION	// Exception in progress
WITHOUT_CLASSIFICATION	// Exclude the COOKIE header, since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	// Exclude the COOKIE header, since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	// Exclude the COOKIE header, since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	// Execute the sample. In this case sleep for the // specified time, if any
WITHOUT_CLASSIFICATION	// Execute the sample. In this case sleep for the // specified time.
WITHOUT_CLASSIFICATION	// Execute the script
WITHOUT_CLASSIFICATION	// Execute the test pan
WITHOUT_CLASSIFICATION	// Execute the test pan
WITHOUT_CLASSIFICATION	// Execute the test pan
WITHOUT_CLASSIFICATION	// Expected results established using the DDA // algorithm (see // http://www.siggraph.org/education/materials/HyperGraph/scanline/outprims/drawline.htm): // 0/1 vs. 1/1 -> 0 is // closer to 33.33 // 0/2 vs. 1/2 -> 50.0 is closer to // 33.33 // 1/3 vs. 2/3 -> 33.33 is // closer to 33.33 // 1/4 vs. 2/4 -> 25.0 is closer to // 33.33 // 1/5 vs. 2/5 -> 40.0 is closer to // 33.33 // 2/6 vs. 3/6 -> 33.33 is // closer to 33.33
WITHOUT_CLASSIFICATION	// Expensive, so // do // once
WITHOUT_CLASSIFICATION	// Export the Root CA for Firefox/Chrome/IE
WITHOUT_CLASSIFICATION	// Extended property name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Extract charset and store as DataEncoding // N.B. The meta tag: // <META http-equiv="content-type" content="text/html; charset=foobar"> // is now processed by HTTPSampleResult#getDataEncodingWithDefault // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Extract the content-type if present // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Extract transfer data.
WITHOUT_CLASSIFICATION	// Extract version digits from String of the form #Revision: n.mm # // (where # is actually $ above)
WITHOUT_CLASSIFICATION	// FILE MENU // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// FILE MENU //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// FILE_FIELD is kept for backward compatibility with old test plans // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// FIrst make sure we save the content of the current GUI (since we // will flush it away):
WITHOUT_CLASSIFICATION	// FIrst make sure we save the content of the current GUI (since we // will flush it away):
WITHOUT_CLASSIFICATION	// FOREVER CHECKBOX // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Fails to generate expected Exception
WITHOUT_CLASSIFICATION	// Failures count
WITHOUT_CLASSIFICATION	// Fetch data from screen fields
WITHOUT_CLASSIFICATION	// Fetch once; needs to stay constant
WITHOUT_CLASSIFICATION	// Fetch some variables
WITHOUT_CLASSIFICATION	// Fetch some variables
WITHOUT_CLASSIFICATION	// Fields table //$NON-NLS-1$ //not sure needs I18N? //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// File content is sent as binary, so the content encoding should not change the file data
WITHOUT_CLASSIFICATION	// File name sequence number //@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	// File upload multipart
WITHOUT_CLASSIFICATION	// File was not opened successfully // Are we processing a file sequence?
WITHOUT_CLASSIFICATION	// Find JMeter home dir from the initial classpath
WITHOUT_CLASSIFICATION	// Find all jars in the search path
WITHOUT_CLASSIFICATION	// Find all the classes which implement the JavaSamplerClient // interface.
WITHOUT_CLASSIFICATION	// Find and set the file for this recent file command
WITHOUT_CLASSIFICATION	// Find parent controllers of current sampler
WITHOUT_CLASSIFICATION	// Find the action / form url
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us // We assume the headers are in ISO_8859_1, and the body can be in any content encoding.
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us // We assume the headers are in ISO_8859_1, and the body can be in any content encoding. // Therefore we get the data sent in ISO_8859_1, to be able to determine the end of the // header part, and then we just construct a byte array to hold the body part, not taking // encoding of the body into consideration, because it can contain file data, which is // sent as raw byte data
WITHOUT_CLASSIFICATION	// Find the first empty line of the multipart, it signals end of headers for multipart // Agents are supposed to terminate lines in CRLF:
WITHOUT_CLASSIFICATION	// Find the first non-null message
WITHOUT_CLASSIFICATION	// Find the last controller in the target to store the // sampler there:
WITHOUT_CLASSIFICATION	// Find the name of the directory containing the file // and create it - if there is one
WITHOUT_CLASSIFICATION	// Find the package for the transaction
WITHOUT_CLASSIFICATION	// Find the page encoding and possibly encodings for forms in the page // in the response from the web server
WITHOUT_CLASSIFICATION	// Finish up
WITHOUT_CLASSIFICATION	// Fire ActionEvent
WITHOUT_CLASSIFICATION	// First call
WITHOUT_CLASSIFICATION	// First have to release the cookie we were using so other // threads stuck in wait can move on
WITHOUT_CLASSIFICATION	// First the multipart start divider
WITHOUT_CLASSIFICATION	// First write the start multipart file // TODO - charset?
IMPLEMENTATION	// Fix path to allow the use of UNC URLs
WITHOUT_CLASSIFICATION	// Fix the content length
WITHOUT_CLASSIFICATION	// Fix up Windows paths
WITHOUT_CLASSIFICATION	// Follow redirects and download page resources if appropriate:
WITHOUT_CLASSIFICATION	// Follow redirects and download page resources if appropriate:
WITHOUT_CLASSIFICATION	// Follow redirects and download page resources if appropriate:
WITHOUT_CLASSIFICATION	// For In build test case using this counter // create the new entry in the server
WITHOUT_CLASSIFICATION	// For access from test code
WITHOUT_CLASSIFICATION	// For access from test code
WITHOUT_CLASSIFICATION	// For access to stop methods.
WITHOUT_CLASSIFICATION	// For all the file multiparts, we must revert the hiding of // the actual file content
WITHOUT_CLASSIFICATION	// For all the file multiparts, we must tell it to not include // the actual file content
WITHOUT_CLASSIFICATION	// For completeness
WITHOUT_CLASSIFICATION	// For concurrent get resources
WITHOUT_CLASSIFICATION	// For converters to use
WITHOUT_CLASSIFICATION	// For converters to use
WITHOUT_CLASSIFICATION	// For detecting extra entries
WITHOUT_CLASSIFICATION	// For each directory in the search path, add all the jars found there
WITHOUT_CLASSIFICATION	// For example: // jar:file:/JMeter/lib/ext/ApacheJMeter_core.jar!/org/apache/jmeter/util/JMeterVersion.class // or if using an IDE         // file:/workspaces/JMeter/build/core/org/apache/jmeter/util/JMeterVersion.class
WITHOUT_CLASSIFICATION	// For identifying log messages
WITHOUT_CLASSIFICATION	// For n same values in sum of square is equal to n*val^2
WITHOUT_CLASSIFICATION	// For n values in an aggregate sample the average value = (val/n) // So need to add n * (val/n) * (val/n) = val * val / n
WITHOUT_CLASSIFICATION	// For n values in an aggregate sample the average value = (val/n) // So need to add n * (val/n) * (val/n) = val * val / n
WITHOUT_CLASSIFICATION	// For testing only at present
WITHOUT_CLASSIFICATION	// For unit tests, @see TestCSVSaveService
WITHOUT_CLASSIFICATION	// For unit tests, see TestJexlFunction
WITHOUT_CLASSIFICATION	// For unit tests, see TestJexlFunction
WITHOUT_CLASSIFICATION	// For use by AJP
WITHOUT_CLASSIFICATION	// For use by FunctionHelper
WITHOUT_CLASSIFICATION	// For use by FunctionHelper
WITHOUT_CLASSIFICATION	// For use by Unit Tests
WITHOUT_CLASSIFICATION	// For use by test code only
WITHOUT_CLASSIFICATION	// For use by the server script
WITHOUT_CLASSIFICATION	// For use by the server script
WITHOUT_CLASSIFICATION	// For use in debugging:
WITHOUT_CLASSIFICATION	// Force TestFragment to only be pastable under a Test Plan
WITHOUT_CLASSIFICATION	// Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	// Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	// Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	// Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	// Force a sensible start time
WITHOUT_CLASSIFICATION	// Force reload data
WITHOUT_CLASSIFICATION	// Force reload data
WITHOUT_CLASSIFICATION	// Force the table to be at least 70 pixels high
WITHOUT_CLASSIFICATION	// Forget about all GUIs we've created so far: we'll need to re-created // them all!
WITHOUT_CLASSIFICATION	// Forget about all GUIs we've created so far: we'll need to re-created // them all!
WITHOUT_CLASSIFICATION	// Form encoding has priority over page encoding
WITHOUT_CLASSIFICATION	// Forward all the SSLSocket methods to the input socket
WITHOUT_CLASSIFICATION	// Forward to sampler
WITHOUT_CLASSIFICATION	// Forward to sampler
WITHOUT_CLASSIFICATION	// Found splitChar at end of line
WITHOUT_CLASSIFICATION	// From the Java Look and Feel Guidelines: If all items in a menu // are disabled, then disable the menu. Makes sense.
WITHOUT_CLASSIFICATION	// Function does not exist, so treat as per missing variable
WITHOUT_CLASSIFICATION	// Function name //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Function objects to be tested
WITHOUT_CLASSIFICATION	// Functions are wrapped in ${ and } //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Functor count = 0 is handled specially
WITHOUT_CLASSIFICATION	// Further configuration
WITHOUT_CLASSIFICATION	// Generate Error Body
WITHOUT_CLASSIFICATION	// Generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	// Generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	// Generate a test error
WITHOUT_CLASSIFICATION	// Generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	// Generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	// Generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	// Generate test error
WITHOUT_CLASSIFICATION	// Generate x-axis label and associated color
WITHOUT_CLASSIFICATION	// Generates expected Exception
WITHOUT_CLASSIFICATION	// Get a WrapperEditor to provide the field or combo -- we'll delegate // most methods to it:
WITHOUT_CLASSIFICATION	// Get all the request headers
WITHOUT_CLASSIFICATION	// Get all the request headers
WITHOUT_CLASSIFICATION	// Get all the request properties, which are the headers set on the connection
WITHOUT_CLASSIFICATION	// Get and sort the property descriptors:
WITHOUT_CLASSIFICATION	// Get appropriate sender class governed by the behaviour set in the JMeter property
WITHOUT_CLASSIFICATION	// Get data from both
WITHOUT_CLASSIFICATION	// Get directory
WITHOUT_CLASSIFICATION	// Get drop location and mode
WITHOUT_CLASSIFICATION	// Get expected results as a List
WITHOUT_CLASSIFICATION	// Get folder
WITHOUT_CLASSIFICATION	// Get hostname
WITHOUT_CLASSIFICATION	// Get next sample and its name
WITHOUT_CLASSIFICATION	// Get next sample and its name
WITHOUT_CLASSIFICATION	// Get rid of the query and the ?
WITHOUT_CLASSIFICATION	// Get rid of the query and the ?
WITHOUT_CLASSIFICATION	// Get session
WITHOUT_CLASSIFICATION	// Get the InputReader to use
WITHOUT_CLASSIFICATION	// Get the InputReader to use
WITHOUT_CLASSIFICATION	// Get the InputReader to use
WITHOUT_CLASSIFICATION	// Get the Main Frame.
WITHOUT_CLASSIFICATION	// Get the Main Frame.
WITHOUT_CLASSIFICATION	// Get the Matcher for this thread
WITHOUT_CLASSIFICATION	// Get the OutputWriter to use
WITHOUT_CLASSIFICATION	// Get the OutputWriter to use
WITHOUT_CLASSIFICATION	// Get the URL matcher
WITHOUT_CLASSIFICATION	// Get the beanInfo:
WITHOUT_CLASSIFICATION	// Get the boundary string for the multiparts from the content type
WITHOUT_CLASSIFICATION	// Get the default trust managers
WITHOUT_CLASSIFICATION	// Get the encoding to use for the request
WITHOUT_CLASSIFICATION	// Get the encoding to use for the request
WITHOUT_CLASSIFICATION	// Get the file name of the current project
WITHOUT_CLASSIFICATION	// Get the filename
WITHOUT_CLASSIFICATION	// Get the menu item
WITHOUT_CLASSIFICATION	// Get the post data using the content encoding of the request
WITHOUT_CLASSIFICATION	// Get the preference for the recent files
WITHOUT_CLASSIFICATION	// Get the preference for the recent files
WITHOUT_CLASSIFICATION	// Get the preference for the recent files
WITHOUT_CLASSIFICATION	// Get the query string encoded in specified encoding // If no encoding is specified by user, we will get it // encoded in UTF-8, which is what the HTTP spec says
WITHOUT_CLASSIFICATION	// Get the sampler ready to sample
WITHOUT_CLASSIFICATION	// Get the standard toolbar properties
WITHOUT_CLASSIFICATION	// Get the store
WITHOUT_CLASSIFICATION	// Get the string given from the choose and check // the file extension.
WITHOUT_CLASSIFICATION	// Get the string given from the choose and check // the file extension.
WITHOUT_CLASSIFICATION	// Get the transaction sample result
WITHOUT_CLASSIFICATION	// Give access to initial configuration
WITHOUT_CLASSIFICATION	// Give access to the method for test code
WITHOUT_CLASSIFICATION	// Give access to the method for test code
WITHOUT_CLASSIFICATION	// Gives access to parent thread threadGroup
WITHOUT_CLASSIFICATION	// GraphAccumVisualizer obsolete, BSFSamplerGui now a TestBean // GraphAccumVisualizer obsolete, BSFSamplerGui now a TestBean // GraphAccumVisualizer now obsolete // CTT changed to use intProp for mode
WITHOUT_CLASSIFICATION	// Gui Components
WITHOUT_CLASSIFICATION	// Gui components
WITHOUT_CLASSIFICATION	// GuiPackage.getInstance().getMainFrame().showStoppingMessage(name);
WITHOUT_CLASSIFICATION	// HC3.1 does not have the method
WITHOUT_CLASSIFICATION	// HC3.1 does not have the method
WITHOUT_CLASSIFICATION	// HELP MENU // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// HELP MENU //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// HTTP URLs must be absolute, allow file to be relative // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// HTTP protocol violation, but avoids NPE
WITHOUT_CLASSIFICATION	// HTTP protocol violation, but avoids NPE
WITHOUT_CLASSIFICATION	// HTTPSampler uses ISO-8859-1 as default encoding // HTTPSampler uses ISO-8859-1 as default encoding
WITHOUT_CLASSIFICATION	// Handle IPv6 urls
WITHOUT_CLASSIFICATION	// Handle escapes
WITHOUT_CLASSIFICATION	// Handle old-style JMeter properties
WITHOUT_CLASSIFICATION	// Handle the various methods
WITHOUT_CLASSIFICATION	// Handle the various methods
WITHOUT_CLASSIFICATION	// Has chances to be a var
WITHOUT_CLASSIFICATION	// Has chances to be a var
WITHOUT_CLASSIFICATION	// Has child, but child is empty
WITHOUT_CLASSIFICATION	// Has its own debug log; removes matching cookies
WITHOUT_CLASSIFICATION	// Has its own debug log; removes matching cookies
WITHOUT_CLASSIFICATION	// Has no child
WITHOUT_CLASSIFICATION	// HashMap to save ssl connection between Jmeter proxy and browser
WITHOUT_CLASSIFICATION	// Have we used myCurrent yet? // Set to 1 if start number is missing (to allow for end without start)
WITHOUT_CLASSIFICATION	// Have we yet tried to load the truststore?
WITHOUT_CLASSIFICATION	// Header may contain ;charset= , regexp extracts it so computed boundary is wrong
WITHOUT_CLASSIFICATION	// Headers
WITHOUT_CLASSIFICATION	// Headers
WITHOUT_CLASSIFICATION	// Headers
WITHOUT_CLASSIFICATION	// Headers
WITHOUT_CLASSIFICATION	// Headers
WITHOUT_CLASSIFICATION	// Help convert existing JMX files which use HTTPSampler[2] nodes
WITHOUT_CLASSIFICATION	// Help with garbage control
WITHOUT_CLASSIFICATION	// Helper class (callback) for applying parameter definitions
WITHOUT_CLASSIFICATION	// Helper class so we can generate request data without dumping entire file contents
WITHOUT_CLASSIFICATION	// Helper class used to implement co-routine between two threads
WITHOUT_CLASSIFICATION	// Helper method to construct SAX error details
WITHOUT_CLASSIFICATION	// Helper method to construct resource name
WITHOUT_CLASSIFICATION	// Helper method to deal with missing headers - Commons HttpClient
WITHOUT_CLASSIFICATION	// Helper method to find a file
WITHOUT_CLASSIFICATION	// Helper method to find a test path
WITHOUT_CLASSIFICATION	// Helper method to get 1 ms resolution timing.
WITHOUT_CLASSIFICATION	// Helper method to maintain timestamp relationships
WITHOUT_CLASSIFICATION	// Helper method to simplify alias creation from properties
WITHOUT_CLASSIFICATION	// Helper method to simplify code
WITHOUT_CLASSIFICATION	// Helper method to simplify marshall routine
WITHOUT_CLASSIFICATION	// Hide Window on ESC
WITHOUT_CLASSIFICATION	// Hide Window on ESC
WITHOUT_CLASSIFICATION	// Hide Window on ESC //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	// Hint to background color on bottom tabs (grey, not blue)
WITHOUT_CLASSIFICATION	// Hint to background color on bottom tabs (grey, not blue)
WITHOUT_CLASSIFICATION	// Hint to background color on bottom tabs (grey, not blue)
WITHOUT_CLASSIFICATION	// Holds the mappings from the saveservice properties file // Key: alias Entry: full class name // There may be multiple aliases which map to the same class
WITHOUT_CLASSIFICATION	// Holds the reverse mappings // Key: full class name Entry: primary alias
WITHOUT_CLASSIFICATION	// Host always
WITHOUT_CLASSIFICATION	// How long between checks of nanotime; default 5000ms; set to <=0 to disable the thread
WITHOUT_CLASSIFICATION	// How many groups are there?
WITHOUT_CLASSIFICATION	// Huh! don't store this one!
WITHOUT_CLASSIFICATION	// I don't think localMatcher can be null here, but check just in case
WITHOUT_CLASSIFICATION	// I18N: Contains fixed English text ...
WITHOUT_CLASSIFICATION	// IF for download concurrent embedded resources
WITHOUT_CLASSIFICATION	// IMAGE_PARSER now really means EMBEDDED_PARSER // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Identifiers //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Identify subtests
WITHOUT_CLASSIFICATION	// If LOGGER_PANEL_MAX_LENGTH is 0, it means all log events are kept
WITHOUT_CLASSIFICATION	// If RAW data and Parameters match we allow switching
WITHOUT_CLASSIFICATION	// If a content encoding is specified, we set it as http parameter, so that // the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	// If a content encoding is specified, we set it as http parameter, so that // the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	// If a content encoding is specified, we set it as http parameter, so that // the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	// If a content encoding is specified, we use that as the // encoding of any parameter values
WITHOUT_CLASSIFICATION	// If a content encoding is specified, we use that as the // encoding of any parameter values
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing // before deleting the row.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing // before deleting the row.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing // before deleting the row.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing before // deleting the row
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing before // deleting the row
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing before // deleting the row
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing before // deleting the row
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing before // deleting the row
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current // value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current // value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current // value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current value // and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current value // and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current value // and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current value // and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	// If a user has set parameters in one test, and then // selects a different test which supports the same // parameters, those parameters should have the same // values that they did in the original test.
WITHOUT_CLASSIFICATION	// If blank, only check previous sample when at end of loop // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If class not provided, default to invokee class, else null
WITHOUT_CLASSIFICATION	// If clic on the Graph tab, make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	// If clic on the Graph tab, make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	// If default port for protocol is used, we do not include port in URL
WITHOUT_CLASSIFICATION	// If file encoding is specified, read using that encoding, otherwise use default platform encoding
WITHOUT_CLASSIFICATION	// If file encoding is specified, write using that encoding, otherwise use default platform encoding
WITHOUT_CLASSIFICATION	// If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	// If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	// If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	// If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	// If getSendFileAsPostBody returned true, it's sure that file is not null // no need for content-type here
WITHOUT_CLASSIFICATION	// If icon has not been defined, then use GUI_CLASS property
WITHOUT_CLASSIFICATION	// If icon has not been defined, then use GUI_CLASS property //
WITHOUT_CLASSIFICATION	// If invokee was provided, then clazz has been set up
WITHOUT_CLASSIFICATION	// If invokee was provided, then clazz has been set up
WITHOUT_CLASSIFICATION	// If it was a HTTP GET request, then all parameters in the URL // has been handled by the sampler.setPath above, so we just need // to do parse the rest of the request if it is not a GET request
WITHOUT_CLASSIFICATION	// If no expressions are specified, we let the sample pass
WITHOUT_CLASSIFICATION	// If none of the arguments have a name specified, we // just send all the values as the entity body
WITHOUT_CLASSIFICATION	// If none of the arguments have a name specified, we // just send all the values as the post body
WITHOUT_CLASSIFICATION	// If none of the arguments have a name specified, we // just send all the values as the post body
WITHOUT_CLASSIFICATION	// If none of the arguments have a name specified, we // just send all the values as the post body
WITHOUT_CLASSIFICATION	// If none of the arguments have a name specified, we // just send all the values as the put body
WITHOUT_CLASSIFICATION	// If not empty then script in ScriptText will be compiled and cached
WITHOUT_CLASSIFICATION	// If parent is OK, but child failed, add a message and flag the parent as failed
WITHOUT_CLASSIFICATION	// If saveWorkBench 
WITHOUT_CLASSIFICATION	// If selected, then generate parent sample, otherwise as per original controller
WITHOUT_CLASSIFICATION	// If set, this is the regex that is used to extract the status from the // response // NOT implemented yet private static final String STATUS_REGEX = // JMeterUtils.getPropDefault("tcp.status.regex","");
WITHOUT_CLASSIFICATION	// If so, we need to start collection here
WITHOUT_CLASSIFICATION	// If the -j  or -l flag is set to LAST or LAST.log|LAST.jtl, then the last loaded file name is used to // generate the log file name by removing .JMX and replacing it with .log|.jtl
WITHOUT_CLASSIFICATION	// If the -t flag is to "LAST", then the last loaded file (if any) is used
WITHOUT_CLASSIFICATION	// If the Add menu already exists, remove it.
WITHOUT_CLASSIFICATION	// If the Add menu already exists, remove it.
WITHOUT_CLASSIFICATION	// If the Multipart is repeatable, we can send it first to // our own stream, without the actual file content, so we can return it
WITHOUT_CLASSIFICATION	// If the Parameter data can be converted (i.e. no names), we  // warn the user that the Parameter data will be lost.
WITHOUT_CLASSIFICATION	// If the Parameter data cannot be converted to Raw, then the user should be // prevented from doing so raise an error dialog
WITHOUT_CLASSIFICATION	// If the name contains at least one set of paired single-quotes, reformat using DateFormat
WITHOUT_CLASSIFICATION	// If the pre-emptive parameter is undefined, then we can set it as needed // otherwise we should do what the user requested.
WITHOUT_CLASSIFICATION	// If the request entity is repeatable, we can send it first to // our own stream, so we can return it
WITHOUT_CLASSIFICATION	// If the request entity is repeatable, we can send it first to // our own stream, so we can return it
WITHOUT_CLASSIFICATION	// If the request entity is repeatable, we can send it first to // our own stream, so we can return it
WITHOUT_CLASSIFICATION	// If there are any files, we need to end the previous multipart
WITHOUT_CLASSIFICATION	// If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	// If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	// If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	// If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	// If there are no arguments, we can send a file as the body of the request // TODO: needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	// If there are no arguments, we can send a file as the body of the request // TODO: needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	// If there are some recent files, we must make the separator visisble // The separator is the last item in the list
WITHOUT_CLASSIFICATION	// If there is data in the Raw panel, then the user should be  // prevented from switching (that would be easy to track).
WITHOUT_CLASSIFICATION	// If there is no data, then switching between Parameters and Raw should be // allowed with no further user interaction.
WITHOUT_CLASSIFICATION	// If there is no difference, we mark it as not needing encoding
WITHOUT_CLASSIFICATION	// If there is one file with no parameter name, the file will // be sent as post body.
WITHOUT_CLASSIFICATION	// If there's anything left ...
WITHOUT_CLASSIFICATION	// If this is defined, it is assumed to be the alias of a user-supplied certificate; overrides dynamic mode // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If true, start/stop subscriber for each sample
WITHOUT_CLASSIFICATION	// If types not provided, default to argument types, else null
WITHOUT_CLASSIFICATION	// If we are disabling the Edit-->Remove menu item and the // Edit-->Add menu item is disabled, then we also need to disable // the Edit menu. // The Java Look and Feel Guidelines say to disable a menu if all // menu items are disabled.
WITHOUT_CLASSIFICATION	// If we are enabling the Edit-->Add menu item, then we also need to // enable the Edit menu. The Edit menu may already be enabled, but // there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	// If we are enabling the Edit-->Add menu item, then we also need to // enable the Edit menu. The Edit menu may already be enabled, but // there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	// If we are enabling the Edit-->Remove menu item, then we also need to // enable the Edit menu. The Edit menu may already be enabled, but // there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	// If we are loading a new test plan, initialize the tree with the testplan node we are loading
WITHOUT_CLASSIFICATION	// If we are merging in another test plan, we know the test plan is dirty now
WITHOUT_CLASSIFICATION	// If we are using a single session // Otherwise
WITHOUT_CLASSIFICATION	// If we could not find the method, store the exception here
WITHOUT_CLASSIFICATION	// If we do not get any sub samplers, the transaction is done
WITHOUT_CLASSIFICATION	// If we do not know the encoding, we just use the encoded value // The browser has already done the encoding, so save the values as is
WITHOUT_CLASSIFICATION	// If we got any results, then perform processing on the result
WITHOUT_CLASSIFICATION	// If we have a file, but no data, then read the file
WITHOUT_CLASSIFICATION	// If we have a file, but no data, then read the file
WITHOUT_CLASSIFICATION	// If we have both file as body, and form data, then only form data will be sent
WITHOUT_CLASSIFICATION	// If we know the content length, we can allow the reading of // the request to block until more data arrives. // If it is chunked transfer, we cannot allow the reading to // block, because we do not know when to stop reading, because // the chunked transfer is not properly supported yet
WITHOUT_CLASSIFICATION	// If we know the encoding, we can decode the argument value, // to make it easier to read for the user
WITHOUT_CLASSIFICATION	// If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	// If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	// If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	// If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	// If we still can't find it, just try using all of the text
WITHOUT_CLASSIFICATION	// If we're not storing subsequent samplers, we'll need the // first sampler to do all the work...:
WITHOUT_CLASSIFICATION	// If-test is false, need to re-initialize indexes
WITHOUT_CLASSIFICATION	// Ignore TestElement properties which don't have an explicit // editor:
WITHOUT_CLASSIFICATION	// Ignore empty file specs
WITHOUT_CLASSIFICATION	// Ignore everything else
WITHOUT_CLASSIFICATION	// Ignore leading empty spec
WITHOUT_CLASSIFICATION	// Ignore non-HTTP samplers
WITHOUT_CLASSIFICATION	// Ignore trailing empty spec
WITHOUT_CLASSIFICATION	// Ignored
WITHOUT_CLASSIFICATION	// Ignored
WITHOUT_CLASSIFICATION	// Ignored
WITHOUT_CLASSIFICATION	// Ignored
WITHOUT_CLASSIFICATION	// Ignored
WITHOUT_CLASSIFICATION	// Implement these here, to avoid re-implementing for sub-classes // (previously these were implemented in all TestElements)
WITHOUT_CLASSIFICATION	// Implementation
WITHOUT_CLASSIFICATION	// Implemented by parent class
WITHOUT_CLASSIFICATION	// In a post request which is not multipart, we only support // parameters, no file upload is allowed
WITHOUT_CLASSIFICATION	// In a post request which is not multipart, we only support // parameters, no file upload is allowed
WITHOUT_CLASSIFICATION	// In case of BSF and JSR elements i want to add textAreaEditor as a listener to scriptLanguage ComboBox.
WITHOUT_CLASSIFICATION	// In case parse fails // $NON-NLS-1$ // In case parse fails // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// In case we are converting back from floating point, drop the decimal fraction // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// In other GUI component, clearGUI resets the value to defaults one as there is one GUI per Element // With TestBeanGUI as it's shared, its default values are only known here, we must call setValues with  // element (as it holds default values) // otherwise we will get values as computed by customizer reset and not default ones
WITHOUT_CLASSIFICATION	// Include request body if it is a post or put or patch
WITHOUT_CLASSIFICATION	// Includes thread group; anything goes
WITHOUT_CLASSIFICATION	// Increment cannot be < 1
WITHOUT_CLASSIFICATION	// Index is also used for accessing editors array
WITHOUT_CLASSIFICATION	// Init the tree // Assumes this is only called from GUI mode
WITHOUT_CLASSIFICATION	// Initial config from properties
WITHOUT_CLASSIFICATION	// Initialise the gui field values
WITHOUT_CLASSIFICATION	// Initialise values from properties
WITHOUT_CLASSIFICATION	// Initialize context and global scope object
WITHOUT_CLASSIFICATION	// Initialize the GUI:
WITHOUT_CLASSIFICATION	// Initialize the editor with the provided default value or null:
WITHOUT_CLASSIFICATION	// Inner loop
WITHOUT_CLASSIFICATION	// Inner loop
WITHOUT_CLASSIFICATION	// Inner loop
WITHOUT_CLASSIFICATION	// Insert a clone of the node, the original one will be removed by the exportDone method // the children are not cloned but moved to the cloned node // working on the original node would be harder as  //    you'll have to deal with the insertion index offset if you re-order a node inside a parent
WITHOUT_CLASSIFICATION	// Insert the Add menu as the first menu item in the Edit menu.
WITHOUT_CLASSIFICATION	// Insert the Add menu as the first menu item in the Edit menu.
WITHOUT_CLASSIFICATION	// Insert the subControllersAndSamplers into random list positions.
WITHOUT_CLASSIFICATION	// Insert the test plan node
WITHOUT_CLASSIFICATION	// Insert the workbench node
WITHOUT_CLASSIFICATION	// Instance fields are constructed by the client when the instance is create in the test plan // and the field values are then transferred to the server copy by RMI serialisation/deserialisation
WITHOUT_CLASSIFICATION	// Instance variables (guarded by volatile)
WITHOUT_CLASSIFICATION	// Instantiate render classes
WITHOUT_CLASSIFICATION	// Instantiate requestview classes
WITHOUT_CLASSIFICATION	// Instantiate the sampler
WITHOUT_CLASSIFICATION	// InterleaveController in inner loop
WITHOUT_CLASSIFICATION	// Internal information only // read from saveservice.properties file// $NON-NLS-1$ // Must match Revision id value in saveservice.properties,  // used to ensure saveservice.properties and SaveService are updated simultaneously // Expected value $NON-NLS-1$ // read from properties file// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Is Destination setup static? else dynamic // $NON-NLS-1$ // default to maintain compatibility
WITHOUT_CLASSIFICATION	// Is any node an instance of one of the classes, but not an exception?
WITHOUT_CLASSIFICATION	// Is any node an instance of one of the classes?
WITHOUT_CLASSIFICATION	// Is it only the parameter values which are encoded in the specified // content encoding, the rest of the query is encoded in UTF-8 // Therefore we compare the whole query using UTF-8
WITHOUT_CLASSIFICATION	// Is monitor // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Is testplan serialised?
WITHOUT_CLASSIFICATION	// Is there a cached parser?
WITHOUT_CLASSIFICATION	// Is this a work in progress ? // No, // not // a // work // in // progress // ...
WITHOUT_CLASSIFICATION	// Is this a work in progress or an internal GUI component? // Will be "" for internal components
WITHOUT_CLASSIFICATION	// It contains a banned string
WITHOUT_CLASSIFICATION	// It does not contain a required string
WITHOUT_CLASSIFICATION	// It is a normal post request, with parameter names and values
WITHOUT_CLASSIFICATION	// It is a normal post request, with parameter names and values
WITHOUT_CLASSIFICATION	// It is a normal post request, with parameter names and values
IMPLEMENTATION	// It is chunked transfer encoding, which we do not really support yet. // So we just read without blocking, because we do not know when to // stop reading, so we cannot block // TODO propery implement support for chunked transfer, i.e. to // know when we have read the whole request, and therefore allow // the reading to block
WITHOUT_CLASSIFICATION	// It is not possible to access the actual HTTP response code, so we assume no data means failure
WITHOUT_CLASSIFICATION	// It is the JMeterThread which knows how to sample a real sampler
WITHOUT_CLASSIFICATION	// It is the most common post request, with parameter name and values // We also assume this if no content type is present, to be most backwards compatible, // but maybe we should only parse arguments if the content type is as expected //standard name=value postData
WITHOUT_CLASSIFICATION	// It is the sub sampler of the transaction that will be sampled
WITHOUT_CLASSIFICATION	// Iterate state
WITHOUT_CLASSIFICATION	// Iterate through the URLs and download each image:
WITHOUT_CLASSIFICATION	// JAVA Impl accepts URLs with unsafe characters so don't do anything
WITHOUT_CLASSIFICATION	// JFileChooser jfc = null;
WITHOUT_CLASSIFICATION	// JFileChooser jfc = null;
WITHOUT_CLASSIFICATION	// JMSMessageID cannot be null
WITHOUT_CLASSIFICATION	// JMX property name: do not change
WITHOUT_CLASSIFICATION	// JMenu reportMenu; // JMenuItem analyze;
WITHOUT_CLASSIFICATION	// JMenu reportMenu; // JMenuItem analyze;
WITHOUT_CLASSIFICATION	// JMeter.fail("Could not read internal resource. " + // "Archive is broken.");
WITHOUT_CLASSIFICATION	// JMeterGUIComponent item = (JMeterGUIComponent) iter.next();
WITHOUT_CLASSIFICATION	// JMeterUtils assumes Unix-style separators
WITHOUT_CLASSIFICATION	// JPanel loopPanel = new JPanel(new BorderLayout(5, 0));
WITHOUT_CLASSIFICATION	// Jacobi convergence test
WITHOUT_CLASSIFICATION	// Jacobi system resolving // results are stored in _rS // computes the coefficients (di, ci, bi, ai) from the results
WITHOUT_CLASSIFICATION	// Java on Mac OS can add a second entry to the initial classpath // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Javadoc for the API says this is OK
WITHOUT_CLASSIFICATION	// Join the two multiparts
WITHOUT_CLASSIFICATION	// Join the two multiparts
WITHOUT_CLASSIFICATION	// Just append all the parameter values, and use that as the entity body
WITHOUT_CLASSIFICATION	// Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	// Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	// Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	// Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	// Just append all the parameter values, and use that as the put body
WITHOUT_CLASSIFICATION	// Just in case
WITHOUT_CLASSIFICATION	// Just in case // Clear any other remaining variables
WITHOUT_CLASSIFICATION	// Just put the whole postbody as the value of a parameter //used when postData is pure xml (ex. an xml-rpc call)
WITHOUT_CLASSIFICATION	// Just use the first one of the possible many charsets
WITHOUT_CLASSIFICATION	// KEY = TCPKEY or ERRKEY, Entry= Socket or String
WITHOUT_CLASSIFICATION	// Keep a record of the pre-thread pools so that they can be disposed of at the end of a test
WITHOUT_CLASSIFICATION	// Keep copies of the two editors needed
WITHOUT_CLASSIFICATION	// Keep existing settings
WITHOUT_CLASSIFICATION	// Keep the '\' unless it is one of the escapable chars '$' ',' or '\' // N.B. This method is used to parse function parameters, so must treat ',' as special
WITHOUT_CLASSIFICATION	// Keep the content, will be sent later
WITHOUT_CLASSIFICATION	// Keep the content, will be sent later
WITHOUT_CLASSIFICATION	// Keep the content, will be sent later
WITHOUT_CLASSIFICATION	// Keep the raw post data
WITHOUT_CLASSIFICATION	// Keep track of token separator
WITHOUT_CLASSIFICATION	// Key // Value
WITHOUT_CLASSIFICATION	// Key // Value
WITHOUT_CLASSIFICATION	// Key // Value
WITHOUT_CLASSIFICATION	// Key // Value
WITHOUT_CLASSIFICATION	// Key // Value
WITHOUT_CLASSIFICATION	// Key // Value
WITHOUT_CLASSIFICATION	// Key is String or Integer
WITHOUT_CLASSIFICATION	// Keys for user preferences
WITHOUT_CLASSIFICATION	// LF blank line found
WITHOUT_CLASSIFICATION	// LOOP COUNT
WITHOUT_CLASSIFICATION	// LOOP LABEL // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// LOOP LABEL // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// LRUMap does not support generics (yet)
WITHOUT_CLASSIFICATION	// LRUMap does not support generics currently
WITHOUT_CLASSIFICATION	// LRUMap is not generic
WITHOUT_CLASSIFICATION	// Label // count // Mean // Min // Max // Std Dev. // Error %age // Throughput // kB/sec // avg. pageSize
WITHOUT_CLASSIFICATION	// Label // count // Mean // median // 90% // Min // Max // Error %age // Throughpur // pageSize
WITHOUT_CLASSIFICATION	// Label // count // Mean // median // 90% // Min // Max // Error %age //$NON-NLS-1$ // Throughput //$NON-NLS-1$ // pageSize   //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Labels - don't make these static, else language change will not work
WITHOUT_CLASSIFICATION	// Lazy init
WITHOUT_CLASSIFICATION	// Leave header as is // headerBuf.append(conn.getHeaderField(0).substring(0, 8)); // headerBuf.append(" "); // headerBuf.append(conn.getResponseCode()); // headerBuf.append(" "); // headerBuf.append(conn.getResponseMessage()); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Let StringEntity perform the encoding
WITHOUT_CLASSIFICATION	// Let others know that the tree content has changed. // This should not be necessary, but without it, nodes are not shown when the user // uses the Close menu item
WITHOUT_CLASSIFICATION	// Let the GUI show that it will not be encoded
WITHOUT_CLASSIFICATION	// Limit length of log content
WITHOUT_CLASSIFICATION	// Limit the length of the menu text if needed
WITHOUT_CLASSIFICATION	// Lines colors
WITHOUT_CLASSIFICATION	// Lines in the file, split into columns
WITHOUT_CLASSIFICATION	// List for recent files menu items
WITHOUT_CLASSIFICATION	// List of active threads
WITHOUT_CLASSIFICATION	// List of parsers to test. Should probably be derived automatically
WITHOUT_CLASSIFICATION	// List of types that are known to be ascii, although they may appear to be binary
WITHOUT_CLASSIFICATION	// List of types that are known to be binary
WITHOUT_CLASSIFICATION	// List of value by sampler
WITHOUT_CLASSIFICATION	// List of variable names to be saved in JTL files
WITHOUT_CLASSIFICATION	// Listen on main socket
WITHOUT_CLASSIFICATION	// Listen on main socket
WITHOUT_CLASSIFICATION	// Listener on model changes to maintain correct focusability
WITHOUT_CLASSIFICATION	// Lists for remote engines menu items
WITHOUT_CLASSIFICATION	// Load the alias properties
WITHOUT_CLASSIFICATION	// Load the file for this recent file command
WITHOUT_CLASSIFICATION	// Localize the bean name // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Localize the property names and descriptions:
WITHOUT_CLASSIFICATION	// Locate the statistical sample colector
WITHOUT_CLASSIFICATION	// Lock object must exist
WITHOUT_CLASSIFICATION	// Lock used to guard static mutable variables
WITHOUT_CLASSIFICATION	// Logger to use during initialization and script run
WITHOUT_CLASSIFICATION	// LoggingManager.setPriority("DEBUG","jmeter");
WITHOUT_CLASSIFICATION	// Long optional arg must have = as separator
WITHOUT_CLASSIFICATION	// Look for a case variation
WITHOUT_CLASSIFICATION	// Look for arguments elements in the target controller or higher up:
WITHOUT_CLASSIFICATION	// Look for duplicate keys in the file
WITHOUT_CLASSIFICATION	// Look for elements directly within the HTTP proxy:
WITHOUT_CLASSIFICATION	// Look for special Cookie request //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Look for special Response Length header //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Look for special Response Length header //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Look for special Sleep request //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Lookup key - must agree with all the values used to create the HttpClient.
WITHOUT_CLASSIFICATION	// Low chances to be non numeric, we parse
WITHOUT_CLASSIFICATION	// Low chances to be non numeric, we parse
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MENU_ADD_xxx - controls which items are in the ADD menu // MENU_PARENT_xxx - controls which items are in the Insert Parent menu
WITHOUT_CLASSIFICATION	// MENU_ADD_xxx - controls which items are in the ADD menu // MENU_PARENT_xxx - controls which items are in the Insert Parent menu
WITHOUT_CLASSIFICATION	// Mail on userlist reported NPE here - looks like only happens if there are network errors, but check anyway
WITHOUT_CLASSIFICATION	// Mainly for bsh.EvalError
WITHOUT_CLASSIFICATION	// Mainly needed for unit test Serialisable tests
WITHOUT_CLASSIFICATION	// Maintain backward compatibility (bytes was not in the JMX file)
WITHOUT_CLASSIFICATION	// Make a internal list of all results to allow reload data with filter or interval
WITHOUT_CLASSIFICATION	// Make sure all the data is flushed out
WITHOUT_CLASSIFICATION	// Make sure decoding // follows input file
WITHOUT_CLASSIFICATION	// Make sure decoding follows input file
WITHOUT_CLASSIFICATION	// Make sure same hierarchy is used
WITHOUT_CLASSIFICATION	// Make sure the file ends with proper extension
WITHOUT_CLASSIFICATION	// Make sure the hashCode depends on the order as well
WITHOUT_CLASSIFICATION	// Make sure the sample start time and sample end time are recorded // in order not to confuse the statistics calculation methods: if //  an error occurs and an exception is thrown it is possible that // the result.sampleStart() or result.sampleEnd() won't be called
WITHOUT_CLASSIFICATION	// Make sure we start with a reasonable value
WITHOUT_CLASSIFICATION	// Make the addURL method visible
WITHOUT_CLASSIFICATION	// Make the connection ready for sending post data
WITHOUT_CLASSIFICATION	// Make the connection ready for sending post data
WITHOUT_CLASSIFICATION	// Make the connection ready for sending post data
WITHOUT_CLASSIFICATION	// Manage legend placement
WITHOUT_CLASSIFICATION	// Map header names to set() methods
WITHOUT_CLASSIFICATION	// MapNames are Strings
WITHOUT_CLASSIFICATION	// Mark Walsh 2002-08-03, modified to also parse a parameter name value // string, where string contains only the parameter name and no equal sign.
WITHOUT_CLASSIFICATION	// Marker for query string attribute
WITHOUT_CLASSIFICATION	// Mask should contain all types (but not NOT)
WITHOUT_CLASSIFICATION	// Match /../[../] etc. // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Match all
WITHOUT_CLASSIFICATION	// Match by name
WITHOUT_CLASSIFICATION	// Match by name
WITHOUT_CLASSIFICATION	// Match by name
WITHOUT_CLASSIFICATION	// Maximum size that we will display
WITHOUT_CLASSIFICATION	// Maximum size to convert a document to text (default 10Mb)
WITHOUT_CLASSIFICATION	// May be called by XStream
WITHOUT_CLASSIFICATION	// May be null if called from Unit test
WITHOUT_CLASSIFICATION	// May be null if called from Unit test
WITHOUT_CLASSIFICATION	// May be null if function is used on TestPlan
WITHOUT_CLASSIFICATION	// May be null if function is used on TestPlan
WITHOUT_CLASSIFICATION	// May be replaced by RandomOrderController
WITHOUT_CLASSIFICATION	// May generate IllegalArgumentException
WITHOUT_CLASSIFICATION	// Merge in any additional test listeners // currently only used by the function parser
WITHOUT_CLASSIFICATION	// Method left empty here, but allows subclasses to override
WITHOUT_CLASSIFICATION	// Method left empty here, but allows subclasses to override
WITHOUT_CLASSIFICATION	// Methods needed by subclasses to get access to the implementation
WITHOUT_CLASSIFICATION	// Methods used for Test cases
WITHOUT_CLASSIFICATION	// Methods used in creating the GUI
WITHOUT_CLASSIFICATION	// Methods used in creating the GUI
WITHOUT_CLASSIFICATION	// Methondname must always be provided.
WITHOUT_CLASSIFICATION	// Might be NullProperty
WITHOUT_CLASSIFICATION	// Might be found by contoller.next()
WITHOUT_CLASSIFICATION	// Minimal dimensions for dialog box
WITHOUT_CLASSIFICATION	// Mongo is Thread Safe
WITHOUT_CLASSIFICATION	// More general attributes not supported
WITHOUT_CLASSIFICATION	// Most browsers use ISO-8859-1 as default encoding, even if spec says UTF-8
WITHOUT_CLASSIFICATION	// Most browsers use ISO-8859-1 as default encoding, even if spec says UTF-8
WITHOUT_CLASSIFICATION	// Most browsers use ISO-8859-1 as default encoding, even if spec says UTF-8 // TODO - charset?
WITHOUT_CLASSIFICATION	// Most subclasses will need these:
WITHOUT_CLASSIFICATION	// Most subclasses will need these:
WITHOUT_CLASSIFICATION	// Mostly delegates to model
WITHOUT_CLASSIFICATION	// Moved from JMeter class
WITHOUT_CLASSIFICATION	// Multiple delimiters
WITHOUT_CLASSIFICATION	// Must agree with the order of entries in the drop-down // created in ProxyControlGui.createGroupingPanel() //private static final int GROUPING_NO_GROUPS = 0;
WITHOUT_CLASSIFICATION	// Must be an old test plan
WITHOUT_CLASSIFICATION	// Must be done before setContentType
WITHOUT_CLASSIFICATION	// Must be final to create instance
WITHOUT_CLASSIFICATION	// Must be local content - or not using pool
WITHOUT_CLASSIFICATION	// Must be the default resource file
WITHOUT_CLASSIFICATION	// Must be the end of the controller
WITHOUT_CLASSIFICATION	// Must first convert to absolute path names to ensure parents are available
WITHOUT_CLASSIFICATION	// Must match _version property value in saveservice.properties // used to ensure saveservice.properties and SaveService are updated simultaneously // Expected version $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Must not convert TestElement.gui_class etc
WITHOUT_CLASSIFICATION	// Must not ignore this one // Make sure errors are output to the log file
WITHOUT_CLASSIFICATION	// Must return a valid node, or may generate an NPE
WITHOUT_CLASSIFICATION	// Must therefore set the enabled icon so there is at least some // icon
WITHOUT_CLASSIFICATION	// Must therefore set the enabled icon so there is at least some // icon
WITHOUT_CLASSIFICATION	// Must wrap non-scriptable objects before presenting to Rhino
WITHOUT_CLASSIFICATION	// Mutable int to keep track of sample count
WITHOUT_CLASSIFICATION	// N.B time pattern is passed to java.text.SimpleDateFormat
WITHOUT_CLASSIFICATION	// N.B. Backslashes are removed before dollar, comma and backslash
WITHOUT_CLASSIFICATION	// N.B. Backslashes are removed before dollar, comma and backslash
WITHOUT_CLASSIFICATION	// N.B. Backslashes are removed before dollar, comma and backslash
WITHOUT_CLASSIFICATION	// N.B. Cannot change value, as that is used in JMX files // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// N.B. Context needs to be fetched in the correct thread
WITHOUT_CLASSIFICATION	// N.B. HostConfiguration.equals() includes proxy settings in the compare.
WITHOUT_CLASSIFICATION	// N.B. It seems that Opera needs a chain in order to accept server keys signed by the intermediate CA // Opera does not seem to like server keys signed by the root (self-signed) cert.
WITHOUT_CLASSIFICATION	// N.B. It's not po ssible to forward threadStarted() to the implementation class. // This is because Config items are not processed until later, and HTTPDefaults may define the implementation
WITHOUT_CLASSIFICATION	// N.B. JVMs other than Sun may return different instances each time // so we cache the value here (and avoid having to fetch it every time)
WITHOUT_CLASSIFICATION	// N.B. Must be in this class for the TestBean code to work
WITHOUT_CLASSIFICATION	// N.B. Must be in this class for the TestBean code to work
WITHOUT_CLASSIFICATION	// N.B. Originally the response code was saved with the code "rs" // but retrieved with the code "rc". Changed to always use "rc", but // allow for "rs" when restoring values. //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// N.B. Originally there was only one filename, and only get(RETR) was supported // To maintain backwards compatibility, the property name needs to remain the same // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// N.B. Other classes rely on this returning just the string.
WITHOUT_CLASSIFICATION	// N.B. Since the tags are extracted from an HTML Form, any values must already have been encoded
WITHOUT_CLASSIFICATION	// N.B. The keys can be either JMeterTreeNode or TestElement
WITHOUT_CLASSIFICATION	// N.B. These must agree with the new member names in SampleSaveConfiguration // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// N.B. These values are used in jmeter.properties (jmeter.httpsampler) - do not change // They can alse be used as the implementation name
WITHOUT_CLASSIFICATION	// N.B. This is only called at the start and end of a thread, so there is not // necessary to cache the search results, thus saving memory
WITHOUT_CLASSIFICATION	// N.B. This needs to divert the log for SampleResult
WITHOUT_CLASSIFICATION	// N.B. default charset is used deliberately here
WITHOUT_CLASSIFICATION	// N.B. default charset is used deliberately here
WITHOUT_CLASSIFICATION	// N.B. default charset is used deliberately here
WITHOUT_CLASSIFICATION	// N.B. if the string is not recognised, DEBUG is assumed
WITHOUT_CLASSIFICATION	// N.B. must be done after opening connection
WITHOUT_CLASSIFICATION	// N.B. need to separate protocol from authority otherwise http://server would match https://erver // could use separate fields, but simpler to combine them
WITHOUT_CLASSIFICATION	// N.B. originally called clear() // @see also Clearable
WITHOUT_CLASSIFICATION	// N.B. originally called clear() // @see also JMeterGUIComponent
WITHOUT_CLASSIFICATION	// N.B. setParameters is called before the test proper is started, // and thus variables are not interpreted at this point // So defer the file open until later to allow variable file names to be // used.
WITHOUT_CLASSIFICATION	// N.B. some engines (e.g. Javascript) cannot handle certain declareBean() calls // after the engine has been initialised, so create the engine last
WITHOUT_CLASSIFICATION	// N.B. these are not multi-threaded, so don't make it static // ISO format $NON-NLS-1$
WITHOUT_CLASSIFICATION	// N.B. this closes 'in'
WITHOUT_CLASSIFICATION	// N.B. this needs to be done before opening the connection
WITHOUT_CLASSIFICATION	// N.B. this only reloads if necessary (ignores the reference)
WITHOUT_CLASSIFICATION	// N.B. this will be a config element, so we cannot use the getXXX() methods
WITHOUT_CLASSIFICATION	// N.B. this will be a config element, so we cannot use the setXXX() methods
WITHOUT_CLASSIFICATION	// N.B. we don't wait for the thread to complete, as that would prevent parallel TGs
WITHOUT_CLASSIFICATION	// N.B. we fetch the throughput each time, as it may vary during a test
WITHOUT_CLASSIFICATION	// NAME
WITHOUT_CLASSIFICATION	// NAME
WITHOUT_CLASSIFICATION	// NAME
WITHOUT_CLASSIFICATION	// NO NEED TO INITIALIZE WHEN getCreateOneInstancePerSample  // is true cause it will be done in sample
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP   
WITHOUT_CLASSIFICATION	// NOOP        
WITHOUT_CLASSIFICATION	// NOOP state is held by component
WITHOUT_CLASSIFICATION	// NOOP to provide based empty impl and avoid breaking existing implementations
WITHOUT_CLASSIFICATION	// NOT USED
WITHOUT_CLASSIFICATION	// NOTE: responseData encoding is server specific //       Therefore we do byte -> unicode -> byte conversion //       to ensure UTF-8 encoding as required by XPathUtil // convert unicode String -> UTF-8 bytes // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOTREAD // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOTUSED Dimension dim = layoutSize(parent, false);
WITHOUT_CLASSIFICATION	// NOTUSED Font plainText = new Font("plain", Font.PLAIN, 9); // These must not be static, otherwise Language change does not work //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOTUSED String portname = pnode.getAttribute("name"); // used to check binding, but now it doesn't. it was // failing when wsdl did not using binding as expected
WITHOUT_CLASSIFICATION	// NOTUSED private Class PARSERCLASS = null;
WITHOUT_CLASSIFICATION	// NT Includes other types of Credentials
WITHOUT_CLASSIFICATION	// NUMBER OF THREADS
WITHOUT_CLASSIFICATION	// Name of the accumulator. Set up by testStarted().
WITHOUT_CLASSIFICATION	// Names for the cards // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Names for the fields // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Names of DataHolder entries for JMX processing // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Names of DataHolder entries for JTL processing // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Names of JUnit3 methods //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Names of properties that are handled specially
WITHOUT_CLASSIFICATION	// Necessary to avoid NPE when testing serialisation
WITHOUT_CLASSIFICATION	// Necessary to avoid NPE when testing serialisation
WITHOUT_CLASSIFICATION	// Need both sample and error count to be any use
WITHOUT_CLASSIFICATION	// Need to append something so delimiter is // added
WITHOUT_CLASSIFICATION	// Need to maintain our own elapsed timer to ensure more accurate aggregation
WITHOUT_CLASSIFICATION	// Needed by AbstractTestElement. // Also TestElementConverter and TestElementPropertyConverter for handling empty comments //$NON-NLS-1$ // N.B. Comments originally only applied to Test Plans, hence the name - which can now not be easily changed
WITHOUT_CLASSIFICATION	// Needed by Visualizer interface
WITHOUT_CLASSIFICATION	// Needed for HTTPSampler2
WITHOUT_CLASSIFICATION	// Needed for HTTPSampler2
WITHOUT_CLASSIFICATION	// Needed for all but Nimbus // Nimbus works - after a fashion - with this // Nimbus works - after a fashion - with this // reset
WITHOUT_CLASSIFICATION	// Needed for serialisation testing
WITHOUT_CLASSIFICATION	// Needed to avoid Class cast error in Clear.java
WITHOUT_CLASSIFICATION	// Needs to be accessible by HTTPSampler2
WITHOUT_CLASSIFICATION	// Needs to be accessible from Test code
WITHOUT_CLASSIFICATION	// Needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	// Needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	// Needs to be done before any GUI classes are instantiated
WITHOUT_CLASSIFICATION	// Needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	// Needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	// Needs to be package protected for Unit test
WITHOUT_CLASSIFICATION	// Needs to be package-protected to avoid problem with serialisation tests
WITHOUT_CLASSIFICATION	// Needs to be public for tests
WITHOUT_CLASSIFICATION	// Needs to be run in a separate thread to allow RMI call to return OK
WITHOUT_CLASSIFICATION	// Needs to be visible to test cases //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Needs to be volatile as may be referenced from multiple threads // TODO see if this can be made final somehow
WITHOUT_CLASSIFICATION	// Never return null
WITHOUT_CLASSIFICATION	// Never return null
WITHOUT_CLASSIFICATION	// Never return null
WITHOUT_CLASSIFICATION	// Never return null
WITHOUT_CLASSIFICATION	// Next line
WITHOUT_CLASSIFICATION	// Next line
WITHOUT_CLASSIFICATION	// Next line
WITHOUT_CLASSIFICATION	// Next two methods implement new API by delegation to model
WITHOUT_CLASSIFICATION	// Nice, we've got a connection. Finish sending the request:
WITHOUT_CLASSIFICATION	// Nimbus works - after a fashion - with this
WITHOUT_CLASSIFICATION	// No WARN message to avoid performance impact
WITHOUT_CLASSIFICATION	// No body should have been sent
WITHOUT_CLASSIFICATION	// No body should have been sent
WITHOUT_CLASSIFICATION	// No divider was found
WITHOUT_CLASSIFICATION	// No divider was found
WITHOUT_CLASSIFICATION	// No duplicates when adding
WITHOUT_CLASSIFICATION	// No entry; check it is still present
WITHOUT_CLASSIFICATION	// No filters
WITHOUT_CLASSIFICATION	// No header provided
WITHOUT_CLASSIFICATION	// No max-age && No expires
WITHOUT_CLASSIFICATION	// No need for the hook now
WITHOUT_CLASSIFICATION	// No need to call clear
WITHOUT_CLASSIFICATION	// No need to check it again
WITHOUT_CLASSIFICATION	// No need to check it again
WITHOUT_CLASSIFICATION	// No need to check version, just process the attributes if present
WITHOUT_CLASSIFICATION	// No need to check version, just process the attributes if present
WITHOUT_CLASSIFICATION	// No need to close this // No need to close this
WITHOUT_CLASSIFICATION	// No need to log normally, as we set the status // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// No need to log normally, as we set the status // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// No need to log normally, as we set the status // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// No need to synch/ - only used by sampler and ClientPool (which does its own synch)
WITHOUT_CLASSIFICATION	// No point checking an empty keystore
WITHOUT_CLASSIFICATION	// No point continuing // Mainly for bsh.EvalError
WITHOUT_CLASSIFICATION	// No point continuing // Mainly for bsh.EvalError
WITHOUT_CLASSIFICATION	// No point instantiating class
WITHOUT_CLASSIFICATION	// No point reading the file if there's no visualiser
WITHOUT_CLASSIFICATION	// No proxy, so don't check proxy fields
WITHOUT_CLASSIFICATION	// No samples collected ...
WITHOUT_CLASSIFICATION	// No samples collected ...
WITHOUT_CLASSIFICATION	// No text
WITHOUT_CLASSIFICATION	// No text, but using fragment mode
WITHOUT_CLASSIFICATION	// No, must be CSV //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Node node = tidy.parseDOM(new // ByteArrayInputStream(response.getResponseData()), null);
WITHOUT_CLASSIFICATION	// Non empty filters
WITHOUT_CLASSIFICATION	// Non-Tidy options
WITHOUT_CLASSIFICATION	// Non-expiring
WITHOUT_CLASSIFICATION	// Non-instantiable
WITHOUT_CLASSIFICATION	// Noop
WITHOUT_CLASSIFICATION	// Normal InputStream is not available
WITHOUT_CLASSIFICATION	// Normal exit occurs here
WITHOUT_CLASSIFICATION	// Normal test failure
WITHOUT_CLASSIFICATION	// Not 'else if' because forceReloadData 
WITHOUT_CLASSIFICATION	// Not 'else if' because forceReloadData 
WITHOUT_CLASSIFICATION	// Not 100% sure, but I believe this can't happen, so // I'll log and throw an error:
WITHOUT_CLASSIFICATION	// Not 100% sure, but I believe this can't happen, so // I'll log and throw an error:
WITHOUT_CLASSIFICATION	// Not a ReplaceableController
WITHOUT_CLASSIFICATION	// Not a TestElement
WITHOUT_CLASSIFICATION	// Not a real sampler
WITHOUT_CLASSIFICATION	// Not a tag entry, return the original value
WITHOUT_CLASSIFICATION	// Not a true GUI component
WITHOUT_CLASSIFICATION	// Not an expression (isn't or can't be), not null.
WITHOUT_CLASSIFICATION	// Not an expression (isn't or can't be), not null. // may throw IllegalArgumentExc.
WITHOUT_CLASSIFICATION	// Not currently needed by any Remoteable classes // Anyway, would probably be too expensive in terms of network traffic //  // void testIterationStart(LoopIterationEvent event);
WITHOUT_CLASSIFICATION	// Not enabled
WITHOUT_CLASSIFICATION	// Not enabled
WITHOUT_CLASSIFICATION	// Not found
WITHOUT_CLASSIFICATION	// Not found
WITHOUT_CLASSIFICATION	// Not implemented: public static final String SAVE = "save_as"; // Not implemented: public static final String SAVE_ALL = "save_all"; // Not implemented: public static final String SAVE_TO_PREVIOUS = "save";
WITHOUT_CLASSIFICATION	// Not in cache, so create new one and cache it
WITHOUT_CLASSIFICATION	// Not instantiable
WITHOUT_CLASSIFICATION	// Not intended to be instantiated
WITHOUT_CLASSIFICATION	// Not present
WITHOUT_CLASSIFICATION	// Not should always succeed against an empty result
WITHOUT_CLASSIFICATION	// Not sure we can test anything else here
WITHOUT_CLASSIFICATION	// Not synch, but it is not modified after creation
WITHOUT_CLASSIFICATION	// Not synchronised, so can't be shared
WITHOUT_CLASSIFICATION	// Not yet open
WITHOUT_CLASSIFICATION	// Note UserParameterXML accesses this variable // to obtain the Set data via method getParsedParameters()
WITHOUT_CLASSIFICATION	// Note that sampleStarted() and sampleStopped() is not made to appear // in synch with sampleOccured() when replaying held samples. // For now this is not critical since sampleStarted() and sampleStopped() // is not used, but it may become an issue in the future. Then these // events must also be stored so that replay of all events may occur and // in the right order. Each stored event must then be tagged with something // that lets you distinguish between occured, started and ended.
WITHOUT_CLASSIFICATION	// Note there's 3 capturing groups per value
WITHOUT_CLASSIFICATION	// Note this test will fail if a property is added or // removed to any of the components used in the test // files. The way to solve this is to appropriately change // the test file.
WITHOUT_CLASSIFICATION	// Note: Windows user preferences are stored relative to: HKEY_CURRENT_USER\Software\JavaSoft\Prefs
WITHOUT_CLASSIFICATION	// Note: Windows user preferences are stored relative to: HKEY_CURRENT_USER\Software\JavaSoft\Prefs
WITHOUT_CLASSIFICATION	// Note: Windows user preferences are stored relative to: HKEY_CURRENT_USER\Software\JavaSoft\Prefs
WITHOUT_CLASSIFICATION	// Note: if "Encoded?" is not selected, arg.getEncodedValue is equivalent to arg.getValue
WITHOUT_CLASSIFICATION	// Note: if "Encoded?" is not selected, arg.getEncodedValue is equivalent to arg.getValue
WITHOUT_CLASSIFICATION	// Note: initialised with error = failure = false
WITHOUT_CLASSIFICATION	// Note: originally the code did use the ClientPool to "share" subscribers, however since the // key was "this" and each sampler is unique - nothing was actually shared.
WITHOUT_CLASSIFICATION	// Note: position of these elements in the menu *must* match the // corresponding ProxyControl.GROUPING_* values. // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Note: the element is a ConfigTestElement, so cannot use FTPSampler access methods
WITHOUT_CLASSIFICATION	// Note: the file panel already includes the error logging checkbox, // so we don't have to add it explicitly.
WITHOUT_CLASSIFICATION	// Note: the resource string won't respond to locale-changes, // however this does not matter as it is only used when pasting to the clipboard
WITHOUT_CLASSIFICATION	// Note: this is an instance field (and is not transient), so is created by the JMeter client // and propagated to the server instance by RMI. // [a static field would be recreated on the server, and would pick up the server properties] // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Note: this is only used to implement TestIterationListener#testIterationStart // Since this is a frequent event, it makes sense to create the list once rather than scanning each time // The memory used will be released when the thread finishes
WITHOUT_CLASSIFICATION	// Nothing to do
WITHOUT_CLASSIFICATION	// Notify listeners with the transaction sample result
WITHOUT_CLASSIFICATION	// Now add the subsamples to the sample
WITHOUT_CLASSIFICATION	// Now allow the URL handling to work.
WITHOUT_CLASSIFICATION	// Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	// Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	// Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	// Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	// Now eliminate any classpath entries that do not "match" the search
WITHOUT_CLASSIFICATION	// Now evaluate the script, getting the result
WITHOUT_CLASSIFICATION	// Now evaluate the script, getting the result
WITHOUT_CLASSIFICATION	// Now get its text
WITHOUT_CLASSIFICATION	// Now look for URLs in the STYLE attribute
WITHOUT_CLASSIFICATION	// Now look for URLs in the STYLE attribute
WITHOUT_CLASSIFICATION	// Now look for URLs in the STYLE attribute
WITHOUT_CLASSIFICATION	// Now parse the DOM tree
WITHOUT_CLASSIFICATION	// Now parse the DOM tree
WITHOUT_CLASSIFICATION	// Now parse the DOM tree
WITHOUT_CLASSIFICATION	// Now populate the any totalRes fields that need to // come from lastRes:
WITHOUT_CLASSIFICATION	// Now put the current GUI in place. [This code was copied from the // EditCommand action -- we can't just trigger the action because that // would populate the current node with the contents of the new GUI -- // which is empty.] // Fetch once // Probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	// Now put the current GUI in place. [This code was copied from the // EditCommand action -- we can't just trigger the action because that // would populate the current node with the contents of the new GUI -- // which is empty.] // Fetch once // Probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	// Now rerun with match fail
WITHOUT_CLASSIFICATION	// Now set the editors to the element's values:
WITHOUT_CLASSIFICATION	// Now we just construct any multipart for the files // We only construct the file multipart start, we do not write // the actual file content
WITHOUT_CLASSIFICATION	// Now wrap the default managers with our key manager
WITHOUT_CLASSIFICATION	// Now, parse initial request (in case it is a CONNECT request)
WITHOUT_CLASSIFICATION	// Nulls cannot be written using PrettyPrintWriter - they cause an NPE // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Number of active threads in this group
WITHOUT_CLASSIFICATION	// Number of capturing groups possibly containing Base HREFs:
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of refName_n variable sets to keep
WITHOUT_CLASSIFICATION	// Number of refName_n variable sets to keep
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// OK (currently) to invoke using sub-class 
WITHOUT_CLASSIFICATION	// OK // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// OK // should treat B as separate // Should have no arg
WITHOUT_CLASSIFICATION	// OK because sampleStore is of type ArrayList<SampleEvent>
WITHOUT_CLASSIFICATION	// OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	// OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	// OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	// OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	// OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	// OK to set pre-emptive auth?
WITHOUT_CLASSIFICATION	// OK, because find only returns correct element types
WITHOUT_CLASSIFICATION	// OK, because find only returns correct element types
WITHOUT_CLASSIFICATION	// OK, because used in synchronised method
WITHOUT_CLASSIFICATION	// OK, it has been supplied
WITHOUT_CLASSIFICATION	// OK, we have an old-style file definition // save it // Now deal with any additional file arguments
WITHOUT_CLASSIFICATION	// OK, we still have some data, restore it
WITHOUT_CLASSIFICATION	// OPTIONAL TASKS
WITHOUT_CLASSIFICATION	// OPTIONAL TASKS
WITHOUT_CLASSIFICATION	// OPTIONS MENU // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// OPTIONS MENU //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Obtain a value of the appropriate type for this property.
WITHOUT_CLASSIFICATION	// Obtain another URL with an explicit port:
WITHOUT_CLASSIFICATION	// Obtain message formats: //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Obtain the propertyEditors:
WITHOUT_CLASSIFICATION	// One-time init for this client
WITHOUT_CLASSIFICATION	// Only accept commands from the local host
WITHOUT_CLASSIFICATION	// Only add sample if it is a sample of valid url redirect, i.e. that // we have actually sampled the URL
WITHOUT_CLASSIFICATION	// Only add the hook once
WITHOUT_CLASSIFICATION	// Only check form tags
WITHOUT_CLASSIFICATION	// Only check if we have not found any differences so far
WITHOUT_CLASSIFICATION	// Only contains LDAPArgument entries
WITHOUT_CLASSIFICATION	// Only create the map if it is required
WITHOUT_CLASSIFICATION	// Only create the map if it is required
WITHOUT_CLASSIFICATION	// Only create this if we are overriding whatever default there may be // If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	// Only decode strings if inVersion = 1.0
WITHOUT_CLASSIFICATION	// Only display the port number if it is meaningfully specified
WITHOUT_CLASSIFICATION	// Only do the calculation if it is needed
WITHOUT_CLASSIFICATION	// Only dump it once
WITHOUT_CLASSIFICATION	// Only encode strings if outVersion = 1.0 //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Only for use by CSVSaveService
WITHOUT_CLASSIFICATION	// Only for use by CSVSaveService
WITHOUT_CLASSIFICATION	// Only for use by test code
WITHOUT_CLASSIFICATION	// Only if we have updated them
WITHOUT_CLASSIFICATION	// Only invoked by IODH class
WITHOUT_CLASSIFICATION	// Only modified by static block so no need to synchronize subsequent read-only access
WITHOUT_CLASSIFICATION	// Only modified in class init
WITHOUT_CLASSIFICATION	// Only obtain and cast the return if needed
WITHOUT_CLASSIFICATION	// Only print final delta if there were some samples in the delta // and there has been at least one sample reported previously
WITHOUT_CLASSIFICATION	// Only relevant for messages
WITHOUT_CLASSIFICATION	// Only replace default if it is provided
WITHOUT_CLASSIFICATION	// Only replace default if it is provided
WITHOUT_CLASSIFICATION	// Only set message if error not yet flagged
WITHOUT_CLASSIFICATION	// Only set the default label if it has not been set
WITHOUT_CLASSIFICATION	// Only show classpath once
WITHOUT_CLASSIFICATION	// Only try to format if there is a // number
WITHOUT_CLASSIFICATION	// Only update the stored copy of the tree for a full save // refetch, because convertSubTree affects it
WITHOUT_CLASSIFICATION	// Only used by GUI
WITHOUT_CLASSIFICATION	// OnlyOnce inside InterleaveController
WITHOUT_CLASSIFICATION	// OnlyOnce inside inner loop
WITHOUT_CLASSIFICATION	// OnlyOnce inside inner loop
WITHOUT_CLASSIFICATION	// OnlyOnce samples
WITHOUT_CLASSIFICATION	// OnlyOnce samples
WITHOUT_CLASSIFICATION	// OnlyOnce samples
WITHOUT_CLASSIFICATION	// Original (rather odd) behaviour // start at the end
WITHOUT_CLASSIFICATION	// Original and clone should be equal
WITHOUT_CLASSIFICATION	// Original match behaviour
WITHOUT_CLASSIFICATION	// Original match behaviour
WITHOUT_CLASSIFICATION	// Original numeric order (we now use strings)
WITHOUT_CLASSIFICATION	// Otherwise don't save anything - no point
WITHOUT_CLASSIFICATION	// Otherwise, the response is scanned for these strings //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Outer only once + ("three" + "only once five and six" + "eight in interleave only once" + ("four" + "interleave" + "eleven") * innerLoopCount) * outerLoopCount;  
WITHOUT_CLASSIFICATION	// Outer only once + ("three" + "only once five and six" + ("four" + "seven") * innerLoopCount) * outerLoopCount;  
WITHOUT_CLASSIFICATION	// Outer only once + ("three" + ("four" + "five" + "six" + "seven") * innerLoopCount) * outerLoopCount;  
WITHOUT_CLASSIFICATION	// Outer sample
WITHOUT_CLASSIFICATION	// Outer sample
WITHOUT_CLASSIFICATION	// Outer sample
WITHOUT_CLASSIFICATION	// Overridden by non-TestBean implementations to return the property value instead
WITHOUT_CLASSIFICATION	// Overridden by non-TestBean implementations to return the property value instead
WITHOUT_CLASSIFICATION	// Override all the super-class Socket methods.
WITHOUT_CLASSIFICATION	// Override in order to provide type safety
WITHOUT_CLASSIFICATION	// Override so we can intercept the stream
WITHOUT_CLASSIFICATION	// Override so we can intercept the stream
WITHOUT_CLASSIFICATION	// Override so we can intercept the stream
WITHOUT_CLASSIFICATION	// Override so we can intercept the stream
WITHOUT_CLASSIFICATION	// Override so we can intercept the stream
WITHOUT_CLASSIFICATION	// Override so we can intercept the stream
WITHOUT_CLASSIFICATION	// Override the defualt schemes as necessary
WITHOUT_CLASSIFICATION	// Override wrapMapper in order to insert the Wrapper in the chain
WITHOUT_CLASSIFICATION	// Overrides SampleResult
WITHOUT_CLASSIFICATION	// Overrides of superclass methods
WITHOUT_CLASSIFICATION	// PERTHREAD FIELD
WITHOUT_CLASSIFICATION	// PROTOCOL
WITHOUT_CLASSIFICATION	// Package access for use by Test code //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Package protected to allow test case access
WITHOUT_CLASSIFICATION	// Package protected to allow test case access
WITHOUT_CLASSIFICATION	// Parameter list
WITHOUT_CLASSIFICATION	// Parameter list
WITHOUT_CLASSIFICATION	// Parameters are stored here
WITHOUT_CLASSIFICATION	// Parent folder (or single message file)
WITHOUT_CLASSIFICATION	// Parse arguments all at once
WITHOUT_CLASSIFICATION	// Parse arguments singly
WITHOUT_CLASSIFICATION	// Parse the arguments in querystring, assuming specified encoding for values
WITHOUT_CLASSIFICATION	// Parse the arguments that are not options
WITHOUT_CLASSIFICATION	// Parsed request headers
WITHOUT_CLASSIFICATION	// Parsed response headers
WITHOUT_CLASSIFICATION	// Pass in some variables
WITHOUT_CLASSIFICATION	// Pass request to new proxy thread
WITHOUT_CLASSIFICATION	// Pass request to new thread
WITHOUT_CLASSIFICATION	// Perform a sum and check the results
WITHOUT_CLASSIFICATION	// Perform a sum and check the results
WITHOUT_CLASSIFICATION	// Perform the actual sample
WITHOUT_CLASSIFICATION	// Perform the encoding
WITHOUT_CLASSIFICATION	// Perform the sampling
WITHOUT_CLASSIFICATION	// Pick up Actual path (after redirects)
WITHOUT_CLASSIFICATION	// Pick up Actual path (after redirects)
WITHOUT_CLASSIFICATION	// Potentially expensive; do it once
WITHOUT_CLASSIFICATION	// Potentially expensive; do it once
WITHOUT_CLASSIFICATION	// Potentially expensive; do it once
WITHOUT_CLASSIFICATION	// PreProcessors are cloned per-thread, so this will be saved per-thread // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Preload the output so that can be read back as HTTP
WITHOUT_CLASSIFICATION	// Prepare dialog box
WITHOUT_CLASSIFICATION	// Prepare for a pretty date
WITHOUT_CLASSIFICATION	// Prepare the Request tabbed pane
WITHOUT_CLASSIFICATION	// Prepare the Results tabbed pane
WITHOUT_CLASSIFICATION	// Prepare the common tab
WITHOUT_CLASSIFICATION	// PreparedStatementMap is associated to one connection so  //  2 threads cannot use the same PreparedStatement map at the same time
WITHOUT_CLASSIFICATION	// Preserve original case
WITHOUT_CLASSIFICATION	// Preserve sign on first byte
WITHOUT_CLASSIFICATION	// Prevent both redirect types from being selected
WITHOUT_CLASSIFICATION	// Prevent entry if nothing to do
WITHOUT_CLASSIFICATION	// Prevent instantiation
WITHOUT_CLASSIFICATION	// Prevent instantiation
WITHOUT_CLASSIFICATION	// Prevent separate instantiation
WITHOUT_CLASSIFICATION	// Prevent useless dump attempts
WITHOUT_CLASSIFICATION	// Probably a missing // jar
WITHOUT_CLASSIFICATION	// Probably a missing jar
WITHOUT_CLASSIFICATION	// Probably no point in converting this to return a SampleEvent
WITHOUT_CLASSIFICATION	// Process Apache HttpClient parameters file // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Process Commons HttpClient parameters file // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Process __CSVRead(filename,*ALIAS) //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Process address lists
WITHOUT_CLASSIFICATION	// Process command line property definitions (can occur multiple times)
WITHOUT_CLASSIFICATION	// Process command line property definitions // These can potentially occur multiple times
WITHOUT_CLASSIFICATION	// Process escaped characters // Store the \
WITHOUT_CLASSIFICATION	// Process tolerant settings
WITHOUT_CLASSIFICATION	// Processes Assertions // display a SampleResult
WITHOUT_CLASSIFICATION	// Programming error
WITHOUT_CLASSIFICATION	// Programming error. Don't // continue.
WITHOUT_CLASSIFICATION	// Programming error. Don't // continue.
WITHOUT_CLASSIFICATION	// Programming error. Don't // continue.
WITHOUT_CLASSIFICATION	// Programming error. Don't // continue.
WITHOUT_CLASSIFICATION	// Programming error. Don't continue.
WITHOUT_CLASSIFICATION	// Programming error: // bail out.
WITHOUT_CLASSIFICATION	// Programming error: // bail out.
WITHOUT_CLASSIFICATION	// Programming error: // bail out.
WITHOUT_CLASSIFICATION	// Prompt is unnecessary
WITHOUT_CLASSIFICATION	// Properties to be sent to remote servers
WITHOUT_CLASSIFICATION	// Property name used to define file name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Property names to preload into JMeter variables:
WITHOUT_CLASSIFICATION	// Property was found in a config element. Whether or not // it matched the value in the sampler, we're done with // this property -- don't look at lower-priority configs:
WITHOUT_CLASSIFICATION	// Provide Random numbers to whomever wants one
WITHOUT_CLASSIFICATION	// Provide access to HTTPSamplerBase methods
WITHOUT_CLASSIFICATION	// Provide an initial edit value if necessary -- this is an // heuristic that tries to provide the most convenient // initial edit value:
WITHOUT_CLASSIFICATION	// Provide our own aliasing using strings rather than classes
WITHOUT_CLASSIFICATION	// Proxy can take some while to start up; show a wating cursor
WITHOUT_CLASSIFICATION	// Proxy configuration SSL
WITHOUT_CLASSIFICATION	// Put request does not use multipart, so no need for boundary
WITHOUT_CLASSIFICATION	// Put the check boxes in a column in a panel
WITHOUT_CLASSIFICATION	// Putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	// Putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	// Putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	// Query types (used to communicate with GUI) // N.B. These must not be changed, as they are used in the JMX files // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// RAMP-UP
IMPLEMENTATION	// REMIND: convert arg list Vectors here?
WITHOUT_CLASSIFICATION	// RETRIEVE IMAGES // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// RFC 822 uses ascii per default
WITHOUT_CLASSIFICATION	// RUN MENU // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// RUN MENU //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Random match
WITHOUT_CLASSIFICATION	// Random match
WITHOUT_CLASSIFICATION	// Rate is effectively infinite
WITHOUT_CLASSIFICATION	// Re-increment
WITHOUT_CLASSIFICATION	// Re-increment
WITHOUT_CLASSIFICATION	// Re-parse (now it's the http request over SSL)
WITHOUT_CLASSIFICATION	// Re-read 1st line
WITHOUT_CLASSIFICATION	// Re-read 1st line
WITHOUT_CLASSIFICATION	// Re-throw Errors because we're supposed to let the JVM see it // Don't re-throw StackOverflows, because we know we've // corrected the situation by aborting the loop and // a long stacktrace would end up on the user's console
WITHOUT_CLASSIFICATION	// Reached end of input arguments - perform final processing
WITHOUT_CLASSIFICATION	// Read resource file saving the keys
WITHOUT_CLASSIFICATION	// Read resource into ResourceBundle and store in List
WITHOUT_CLASSIFICATION	// Read the header part, we will be looking for a content-length // header, so we know how much we should read. // We assume headers are in ISO_8859_1 // If we do not find such a header, we will just have to read until // we have to block to read more, until we support chunked transfer
WITHOUT_CLASSIFICATION	// Read the response
WITHOUT_CLASSIFICATION	// Read the response
WITHOUT_CLASSIFICATION	// Read the response
WITHOUT_CLASSIFICATION	// Read the response
WITHOUT_CLASSIFICATION	// Read the response
WITHOUT_CLASSIFICATION	// Read-only access after class has been initialised
WITHOUT_CLASSIFICATION	// Record end time and populate the results.
WITHOUT_CLASSIFICATION	// Record in log as well
WITHOUT_CLASSIFICATION	// Record in log as well
WITHOUT_CLASSIFICATION	// Record sample start time.
WITHOUT_CLASSIFICATION	// Record sample start time.
WITHOUT_CLASSIFICATION	// Recursive call
WITHOUT_CLASSIFICATION	// Redisplay.
WITHOUT_CLASSIFICATION	// Register the handler for focus listening. This handler will // only notify the registered when the text changes from when // the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	// Register the handler for focus listening. This handler will // only notify the registered when the text changes from when // the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	// Register the handler for focus listening. This handler will // only notify the registered when the text changes from when // the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	// Reinstate action notifications:
WITHOUT_CLASSIFICATION	// Relative filenames
WITHOUT_CLASSIFICATION	// Relative start-up time
WITHOUT_CLASSIFICATION	// Relatively expensive operation, so do it once
WITHOUT_CLASSIFICATION	// Reload data form internal list of results
WITHOUT_CLASSIFICATION	// Reload data from file
WITHOUT_CLASSIFICATION	// Reload the project
WITHOUT_CLASSIFICATION	// Remember this was first in its batch
WITHOUT_CLASSIFICATION	// Remote exit // Called by RemoteJMeterEngineImpl.rexit() // and by notifyTestListenersOfEnd() iff exitAfterTest is true; // in turn that is called by the run() method and the StopTest class // also called
WITHOUT_CLASSIFICATION	// Remove any additional values from previous sample
WITHOUT_CLASSIFICATION	// Remove any left-over variables
WITHOUT_CLASSIFICATION	// Remove any left-over variables
WITHOUT_CLASSIFICATION	// Remove following \n if present
WITHOUT_CLASSIFICATION	// Remove initial empty entry
WITHOUT_CLASSIFICATION	// Remove old right side
WITHOUT_CLASSIFICATION	// Remove quotes from charset name
WITHOUT_CLASSIFICATION	// Remove the JavaConfig class from the list since it only // implements the interface for error conditions.
WITHOUT_CLASSIFICATION	// Remove the disabled items // For GUI runs this is done in Start.java
WITHOUT_CLASSIFICATION	// Remove the group count
WITHOUT_CLASSIFICATION	// Remove the header for content-type and content-length, since // those values will most likely be incorrect when the sampler // performs the multipart request, because the boundary string // will change
WITHOUT_CLASSIFICATION	// Remove the last item from the list if it was a brand new file
WITHOUT_CLASSIFICATION	// Remove the leading "_"
WITHOUT_CLASSIFICATION	// Remove the other (parsed) tab if present
WITHOUT_CLASSIFICATION	// Remove the workbench and testplan nodes
WITHOUT_CLASSIFICATION	// Remove trailing splitter
WITHOUT_CLASSIFICATION	// Replace a string with its translation, if one exists
WITHOUT_CLASSIFICATION	// Replace subControllersAndSamplers with reordered copy.
WITHOUT_CLASSIFICATION	// Replace the variables in the sampler
WITHOUT_CLASSIFICATION	// Replace the variables in the sampler
WITHOUT_CLASSIFICATION	// Replace the variables in the sampler
WITHOUT_CLASSIFICATION	// Replace the variables in the sampler
WITHOUT_CLASSIFICATION	// Replacement only needs to occur when starting the engine // @see StandardJMeterEngine.run()
WITHOUT_CLASSIFICATION	// Report Tidy errors as Assertion failure?
WITHOUT_CLASSIFICATION	// Request headers column renderers
WITHOUT_CLASSIFICATION	// Request headers column renderers
WITHOUT_CLASSIFICATION	// Request headers column renderers
WITHOUT_CLASSIFICATION	// Request sent. Now get the response:
WITHOUT_CLASSIFICATION	// Request sent. Now get the response:
WITHOUT_CLASSIFICATION	// Request sent. Now get the response:
WITHOUT_CLASSIFICATION	// Request validation // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Requires Java 7 // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	// Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	// Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	// Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	// Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	// Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	// Reset files
WITHOUT_CLASSIFICATION	// Reset for other users
WITHOUT_CLASSIFICATION	// Reset it
WITHOUT_CLASSIFICATION	// Reset it
WITHOUT_CLASSIFICATION	// Reset it
WITHOUT_CLASSIFICATION	// Reset it
WITHOUT_CLASSIFICATION	// Reset search
WITHOUT_CLASSIFICATION	// Reset search
WITHOUT_CLASSIFICATION	// Reset the status code if the message contains one
WITHOUT_CLASSIFICATION	// Resolve any aliases
WITHOUT_CLASSIFICATION	// Resource keys cannot contain spaces, and are forced to lower case // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Resource keys cannot contain spaces, and are forced to lower case // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Resource names for column headers // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Response Data // $NON-NLS-1$ // Request Data // $NON-NLS-1$ // Sampler result // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Response fields column renderers
WITHOUT_CLASSIFICATION	// Response headers column renderers
WITHOUT_CLASSIFICATION	// Restart file
WITHOUT_CLASSIFICATION	// Restarts
WITHOUT_CLASSIFICATION	// Restarts
WITHOUT_CLASSIFICATION	// Restore position
WITHOUT_CLASSIFICATION	// Restore state display
WITHOUT_CLASSIFICATION	// Restore the original Locale
WITHOUT_CLASSIFICATION	// Result column renderers
WITHOUT_CLASSIFICATION	// Retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	// Retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	// Retrieve the formatted data using the same encoding used to create it // TODO - charset? // Write the actual file content
WITHOUT_CLASSIFICATION	// Revert to the previous value:
WITHOUT_CLASSIFICATION	// Routine to perform the output (also used by __logn() function)
WITHOUT_CLASSIFICATION	// Routines for TestSaveService
WITHOUT_CLASSIFICATION	// Run entire test again
WITHOUT_CLASSIFICATION	// Running values, updated for each sample
WITHOUT_CLASSIFICATION	// Runtime is zero - no point staying around
WITHOUT_CLASSIFICATION	// SECONDS LABEL // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// SSL connection
WITHOUT_CLASSIFICATION	// SSL not supported, startTLS not supported, other messagingException
WITHOUT_CLASSIFICATION	// Same ViewResultsTree
WITHOUT_CLASSIFICATION	// Sample in inner loop
WITHOUT_CLASSIFICATION	// Sample in inner loop
WITHOUT_CLASSIFICATION	// Sample in inner loop
WITHOUT_CLASSIFICATION	// Sample in inner loop        
WITHOUT_CLASSIFICATION	// Sample number (string) // Start Time // Thread Name // Label // Sample Time // Status // Bytes
WITHOUT_CLASSIFICATION	// Sample that will get two sub results, simulates a web page load 
WITHOUT_CLASSIFICATION	// Sample the children of the transaction
WITHOUT_CLASSIFICATION	// Sample with no sub results, simulates an image download
WITHOUT_CLASSIFICATION	// Sample with no sub results, simulates an image download 
WITHOUT_CLASSIFICATION	// Sampler error action buttons
WITHOUT_CLASSIFICATION	// Sampler error action buttons
WITHOUT_CLASSIFICATION	// Sampler selection
WITHOUT_CLASSIFICATION	// Sampler selection
WITHOUT_CLASSIFICATION	// Samplers and Controllers need not apply ...
WITHOUT_CLASSIFICATION	// Samplers and Controllers need not apply ... // but AbstractThreadGroup (Controller) is OK
WITHOUT_CLASSIFICATION	// Samples inside InterleaveController        
WITHOUT_CLASSIFICATION	// Sampling proper - establish the connection and read the response: // Repeatedly try to connect:
WITHOUT_CLASSIFICATION	// Save (Selection) As // Save TestPlan As // Save
WITHOUT_CLASSIFICATION	// Save Location so resulting sample can be disabled
WITHOUT_CLASSIFICATION	// Save URL // $NON_NLS-1$
WITHOUT_CLASSIFICATION	// Save bytes read // $NON_NLS-1$
WITHOUT_CLASSIFICATION	// Save cache information
WITHOUT_CLASSIFICATION	// Save cache information
WITHOUT_CLASSIFICATION	// Save cache information
WITHOUT_CLASSIFICATION	// Save cache information
WITHOUT_CLASSIFICATION	// Save fileName for ResultSaver // $NON_NLS-1$
WITHOUT_CLASSIFICATION	// Save hostname for ResultSaver // $NON_NLS-1$
WITHOUT_CLASSIFICATION	// Save in case needed later
WITHOUT_CLASSIFICATION	// Save most things
WITHOUT_CLASSIFICATION	// Save parent node for later
WITHOUT_CLASSIFICATION	// Save parent node for later
WITHOUT_CLASSIFICATION	// Save raw message
WITHOUT_CLASSIFICATION	// Save the actual socket
WITHOUT_CLASSIFICATION	// Save the count
WITHOUT_CLASSIFICATION	// Save the count
WITHOUT_CLASSIFICATION	// Save the last valid content length one
WITHOUT_CLASSIFICATION	// Save the method name
WITHOUT_CLASSIFICATION	// Save the method name
WITHOUT_CLASSIFICATION	// Save the method name
WITHOUT_CLASSIFICATION	// Save the method name
WITHOUT_CLASSIFICATION	// Save the name for error reporting
WITHOUT_CLASSIFICATION	// Save the new fields - but only if they are not the default
WITHOUT_CLASSIFICATION	// Save the value in the variable if present
WITHOUT_CLASSIFICATION	// Save the value in the variable if present
WITHOUT_CLASSIFICATION	// Saves the error if one occurs
WITHOUT_CLASSIFICATION	// Scan for any matching cookies
WITHOUT_CLASSIFICATION	// Scheme used for slow HTTP sockets. Cannot be set as a default, because must be set on an HttpClient instance.
WITHOUT_CLASSIFICATION	// Script file to initialize the Interpreter with
WITHOUT_CLASSIFICATION	// Search MENU //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Search field
WITHOUT_CLASSIFICATION	// Search field
WITHOUT_CLASSIFICATION	// Search field
WITHOUT_CLASSIFICATION	// Search text in response data
WITHOUT_CLASSIFICATION	// See catch clause below
WITHOUT_CLASSIFICATION	// See modifyTestElement
WITHOUT_CLASSIFICATION	// Selection controller with two sub-controllers, but each has only 1 // child
WITHOUT_CLASSIFICATION	// Send ChangeEvent
WITHOUT_CLASSIFICATION	// Send ItemEvent
WITHOUT_CLASSIFICATION	// Send different event wether we are merging a test plan into another test plan, // or loading a testplan from scratch
WITHOUT_CLASSIFICATION	// Send the mail ...
WITHOUT_CLASSIFICATION	// Send the mail ...
WITHOUT_CLASSIFICATION	// Sent later
WITHOUT_CLASSIFICATION	// Separate argument
WITHOUT_CLASSIFICATION	// Server-only work item
WITHOUT_CLASSIFICATION	// Set Response code of transaction
WITHOUT_CLASSIFICATION	// Set all the headers from the HeaderManager
WITHOUT_CLASSIFICATION	// Set any default request headers
WITHOUT_CLASSIFICATION	// Set category
WITHOUT_CLASSIFICATION	// Set category
WITHOUT_CLASSIFICATION	// Set clonedSet;
WITHOUT_CLASSIFICATION	// Set default SAVE menu item to disabled since the default node that // is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	// Set default SAVE menu item to disabled since the default node that // is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	// Set default parameters as needed
WITHOUT_CLASSIFICATION	// Set default values //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set details from the actual response // Needs to be done before response can be stored
WITHOUT_CLASSIFICATION	// Set false for AJP
WITHOUT_CLASSIFICATION	// Set if we were successful or not
WITHOUT_CLASSIFICATION	// Set if we were successful or not
WITHOUT_CLASSIFICATION	// Set if we were successful or not
WITHOUT_CLASSIFICATION	// Set it
WITHOUT_CLASSIFICATION	// Set it
WITHOUT_CLASSIFICATION	// Set it
WITHOUT_CLASSIFICATION	// Set it
WITHOUT_CLASSIFICATION	// Set it
WITHOUT_CLASSIFICATION	// Set response data
WITHOUT_CLASSIFICATION	// Set root level
WITHOUT_CLASSIFICATION	// Set root level
WITHOUT_CLASSIFICATION	// Set some (hopefully!) useful properties
WITHOUT_CLASSIFICATION	// Set the KeyStroke to use
WITHOUT_CLASSIFICATION	// Set the bean's property to the value we just obtained:
WITHOUT_CLASSIFICATION	// Set the content encoding
WITHOUT_CLASSIFICATION	// Set the content length
WITHOUT_CLASSIFICATION	// Set the content length
WITHOUT_CLASSIFICATION	// Set the content length
WITHOUT_CLASSIFICATION	// Set the content length
WITHOUT_CLASSIFICATION	// Set the content length
WITHOUT_CLASSIFICATION	// Set the content type
WITHOUT_CLASSIFICATION	// Set the content type
WITHOUT_CLASSIFICATION	// Set the content type
WITHOUT_CLASSIFICATION	// Set the content type
WITHOUT_CLASSIFICATION	// Set the content type
WITHOUT_CLASSIFICATION	// Set the current value:
WITHOUT_CLASSIFICATION	// Set the file upload data
WITHOUT_CLASSIFICATION	// Set the file uploads
WITHOUT_CLASSIFICATION	// Set the form data
WITHOUT_CLASSIFICATION	// Set the form data
WITHOUT_CLASSIFICATION	// Set the multipart for the post
IMPLEMENTATION	// Set the overall status for the transaction sample // TODO: improve, e.g. by adding counts to the SampleResult class
WITHOUT_CLASSIFICATION	// Set the position when next is first called, and don't overwrite // until reInitialize is called.
WITHOUT_CLASSIFICATION	// Set the selection once per iteration
WITHOUT_CLASSIFICATION	// Set the status for the node
WITHOUT_CLASSIFICATION	// Set the title for the first tab //$NON-NLS-1$ // Add the other tabs if not present // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set the title for the first tab //$NON-NLS-1$ // Remove the other tabs if present // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set the top-level defaults //$NON_NLS-1$
WITHOUT_CLASSIFICATION	// Set the values retrieved for the file upload
WITHOUT_CLASSIFICATION	// Set up HTTP scheme override if necessary
WITHOUT_CLASSIFICATION	// Set up any required Proxy credentials
WITHOUT_CLASSIFICATION	// Set up footer of table which displays numerics of the graphs
WITHOUT_CLASSIFICATION	// Set up list of potential targets and // enable listener
WITHOUT_CLASSIFICATION	// Set up proxy details
WITHOUT_CLASSIFICATION	// Set up some objects for the script to play with //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // Previously mis-spelt as theadName //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set up the 1st table Result with empty headers
WITHOUT_CLASSIFICATION	// Set up the 1st table Result with empty headers
WITHOUT_CLASSIFICATION	// Set up the 2nd table 
WITHOUT_CLASSIFICATION	// Set up the 2nd table 
WITHOUT_CLASSIFICATION	// Set up the 3rd table 
WITHOUT_CLASSIFICATION	// Set up the 3rd table 
WITHOUT_CLASSIFICATION	// Set up the defaults (may be overridden below)
WITHOUT_CLASSIFICATION	// Set up the graph with header, footer, Y axis and graph display
WITHOUT_CLASSIFICATION	// Set up the graph with header, footer, Y axis and graph display
WITHOUT_CLASSIFICATION	// Set up the local address if one exists
WITHOUT_CLASSIFICATION	// Set up the local address if one exists
WITHOUT_CLASSIFICATION	// Set up the non-wild variables
WITHOUT_CLASSIFICATION	// Set up the sample result details
WITHOUT_CLASSIFICATION	// Set up the table itself
WITHOUT_CLASSIFICATION	// Set up the table with footer
WITHOUT_CLASSIFICATION	// Set up the test plan
WITHOUT_CLASSIFICATION	// Settings panes
WITHOUT_CLASSIFICATION	// Setup connection
WITHOUT_CLASSIFICATION	// Shared with TestElementSaver // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Should // not // detect // trailing // option
WITHOUT_CLASSIFICATION	// Should Tidy be quiet?
WITHOUT_CLASSIFICATION	// Should be OK
WITHOUT_CLASSIFICATION	// Should be true
WITHOUT_CLASSIFICATION	// Should behave the same for blank and LAST because success on input
WITHOUT_CLASSIFICATION	// Should never happen
WITHOUT_CLASSIFICATION	// Should never happen
WITHOUT_CLASSIFICATION	// Should not clear this?
WITHOUT_CLASSIFICATION	// Should not enter the loop
WITHOUT_CLASSIFICATION	// Should not enter the loop
WITHOUT_CLASSIFICATION	// Should not enter the loop next time
WITHOUT_CLASSIFICATION	// Should not enter the loop next time // But should continue to the end of the loop
WITHOUT_CLASSIFICATION	// Should not happen
WITHOUT_CLASSIFICATION	// Should not happen
WITHOUT_CLASSIFICATION	// Should not happen with StringReader
WITHOUT_CLASSIFICATION	// Should not happen, but if it does we don't want to continue 
WITHOUT_CLASSIFICATION	// Should not have any text arguments
WITHOUT_CLASSIFICATION	// Should only be called with classes that extend annotations
WITHOUT_CLASSIFICATION	// Should the file data be saved in the response? // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Should we allow directories?
WITHOUT_CLASSIFICATION	// Should we create our own copy of the RMI registry?
WITHOUT_CLASSIFICATION	// Should we download external DTDs?
IMPLEMENTATION	// Should we exit at end of the test? (only applies to server, because host is non-null)
WITHOUT_CLASSIFICATION	// Should we match using regexes?
WITHOUT_CLASSIFICATION	// Should we match using regexes?
WITHOUT_CLASSIFICATION	// Should we save the sample?
WITHOUT_CLASSIFICATION	// Show Tidy warnings ?
WITHOUT_CLASSIFICATION	// Show that can bypass encoding:
WITHOUT_CLASSIFICATION	// Show that can bypass encoding:
WITHOUT_CLASSIFICATION	// Show that maxlong now saved as 0
WITHOUT_CLASSIFICATION	// Shutdown mirror server
WITHOUT_CLASSIFICATION	// Shutdown the http server
WITHOUT_CLASSIFICATION	// Simple inclusion and exclusion filter
WITHOUT_CLASSIFICATION	// SingletonHolder idiom for lazy initialisation
WITHOUT_CLASSIFICATION	// Skip non-editable properties, that is: // Ignore hidden, read-only, and write-only properties
WITHOUT_CLASSIFICATION	// Skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	// Skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	// Skip report packages as implementation is incomplete // Skip report GUI as implementation is incomplete // No, not a work in progress ...
WITHOUT_CLASSIFICATION	// Skip special properties if required
WITHOUT_CLASSIFICATION	// Skip special properties if required
WITHOUT_CLASSIFICATION	// Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	// Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	// Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	// Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	// Skip the example samplers ...
WITHOUT_CLASSIFICATION	// Skip the leading bytes (if any)
WITHOUT_CLASSIFICATION	// Skip the rest of this test for alpha/experimental beans:
WITHOUT_CLASSIFICATION	// So elements can only be added as children
WITHOUT_CLASSIFICATION	// So elements can only be added as children
WITHOUT_CLASSIFICATION	// So we can detect extra entries
WITHOUT_CLASSIFICATION	// So we know which button is selected
WITHOUT_CLASSIFICATION	// Some editors do tiny transformations (e.g. "true" to // "True",...): // may throw IllegalArgumentException
WITHOUT_CLASSIFICATION	// Some editors may need the descriptor
WITHOUT_CLASSIFICATION	// Some headers are set by executeMethod()
WITHOUT_CLASSIFICATION	// Some known attribute names, just for convenience:
WITHOUT_CLASSIFICATION	// SortFilterModel mySortedModel = // new SortFilterModel(myStatTableModel);
WITHOUT_CLASSIFICATION	// Spaces are not allowed in property names read from files
WITHOUT_CLASSIFICATION	// Special case for the TestPlan's Arguments sub-element:
WITHOUT_CLASSIFICATION	// Special flag for use in debugging resources
WITHOUT_CLASSIFICATION	// Special mode for debugging resource handling
WITHOUT_CLASSIFICATION	// Special mode for debugging resource handling
WITHOUT_CLASSIFICATION	// Specific setup
WITHOUT_CLASSIFICATION	// Split string provided
WITHOUT_CLASSIFICATION	// Standalone
WITHOUT_CLASSIFICATION	// Standalone
WITHOUT_CLASSIFICATION	// Standalone
WITHOUT_CLASSIFICATION	// Standalone
WITHOUT_CLASSIFICATION	// Standard setup
WITHOUT_CLASSIFICATION	// Standard setup
WITHOUT_CLASSIFICATION	// Start the server
WITHOUT_CLASSIFICATION	// Start timing
WITHOUT_CLASSIFICATION	// Start timing
WITHOUT_CLASSIFICATION	// Start with 0 so tries at least once, and retries at most MAX_CONN_RETRIES times
WITHOUT_CLASSIFICATION	// State of the parser
WITHOUT_CLASSIFICATION	// State variables
WITHOUT_CLASSIFICATION	// Static fields are resolved on the server
WITHOUT_CLASSIFICATION	// Static fields are set by the server when the class is constructed
WITHOUT_CLASSIFICATION	// Static variables
WITHOUT_CLASSIFICATION	// Stop action notifications while we shuffle this around:
WITHOUT_CLASSIFICATION	// Store MD5 hash instead of storing response // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	// Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	// Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	// Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	// Store context from Root Thread to pass it to created threads
WITHOUT_CLASSIFICATION	// Store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	// Store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	// Store the content-type // RFC 822 uses ascii per default // Parse the content-type
WITHOUT_CLASSIFICATION	// Store the key
WITHOUT_CLASSIFICATION	// Store the recent files
WITHOUT_CLASSIFICATION	// Store the resource bundle as an attribute of the BeanDescriptor:
WITHOUT_CLASSIFICATION	// Store the resource keys
WITHOUT_CLASSIFICATION	// String domain = "localhost";
WITHOUT_CLASSIFICATION	// String in the panel // Do not make these static, otherwise language changes don't work // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// String md5Result = DigestUtils.md5Hex(resultData);
WITHOUT_CLASSIFICATION	// String or Integer
WITHOUT_CLASSIFICATION	// String sampleLog = "C:/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl";
WITHOUT_CLASSIFICATION	// String sampleLog = "C:/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl";
WITHOUT_CLASSIFICATION	// String used to indicate a null value
WITHOUT_CLASSIFICATION	// Strip off the trailing delimiter
WITHOUT_CLASSIFICATION	// Stroke and shape line settings
WITHOUT_CLASSIFICATION	// Succeeds only if Before method - verifyTwo() - is run.
WITHOUT_CLASSIFICATION	// Support original property name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// System.err.println("Enable Restart");
WITHOUT_CLASSIFICATION	// TEXT FIELD
WITHOUT_CLASSIFICATION	// TEXT FIELD
WITHOUT_CLASSIFICATION	// TEXT FIELD
WITHOUT_CLASSIFICATION	// TEXT FIELD
WITHOUT_CLASSIFICATION	// TEXT FIELD
WITHOUT_CLASSIFICATION	// TEXT FIELD // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TEXT FIELD // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TEXT FIELD // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TEXT FIELD // This means exit if last sample failed // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TEXTAREA
WITHOUT_CLASSIFICATION	// TEXTAREA
WITHOUT_CLASSIFICATION	// TEXTAREA LABEL
WITHOUT_CLASSIFICATION	// THREAD PROPERTIES
WITHOUT_CLASSIFICATION	// TL - IS
WITHOUT_CLASSIFICATION	// TL - S&E
WITHOUT_CLASSIFICATION	// TL - TE
WITHOUT_CLASSIFICATION	// TL - all
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
IMPLEMENTATION	// TODO - should check that error has been logged...
IMPLEMENTATION	// TODO ? perhaps note connection so it can be disconnected at end of test?
WITHOUT_CLASSIFICATION	// TODO ?? (JMeterTreeNode) selectedNode.clone();
WITHOUT_CLASSIFICATION	// TODO ?? //OK //OK
IMPLEMENTATION	// TODO Auto-generated constructor stub
WITHOUT_CLASSIFICATION	// TODO Charset ?
WITHOUT_CLASSIFICATION	// TODO Charset ?
WITHOUT_CLASSIFICATION	// TODO Charset ?
WITHOUT_CLASSIFICATION	// TODO Charset ?
WITHOUT_CLASSIFICATION	// TODO Charset ?
WITHOUT_CLASSIFICATION	// TODO Charset ?
WITHOUT_CLASSIFICATION	// TODO Charset ? // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TODO Charset ? // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TODO Charset ? // Get the first line, and see if it is XML
IMPLEMENTATION	// TODO handle filenames
IMPLEMENTATION	// TODO save hostname; save sample type (plain or http)
IMPLEMENTATION	// TODO should this use setDone()? // TODO should this use setFirst()?
IMPLEMENTATION	// TODO somehow show progress
IMPLEMENTATION	// TODO support multiple signers
WITHOUT_CLASSIFICATION	// TODO timeStamp == 0 means either not yet initialised or no stamp available (e.g. when loading a results file)
IMPLEMENTATION	// TODO: add and delete not currently supported // $NON-NLS-1$
IMPLEMENTATION	// TODO: fetch this once as per vars above?
WITHOUT_CLASSIFICATION	// TYPE FIELD
WITHOUT_CLASSIFICATION	// Tabbed pane that contains parameters and raw body
WITHOUT_CLASSIFICATION	// Tabbed results: fill table //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight (select) // the appropriate one.
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight (select) // the appropriate one.
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight (select) // the appropriate one.
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight (select) // the appropriate one.
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight (select) // the appropriate one.
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight (select) // the appropriate one.
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight // (select) the appropriate one.
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight // (select) the appropriate one.
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight // (select) the appropriate one.
WITHOUT_CLASSIFICATION	// Take length from file
WITHOUT_CLASSIFICATION	// Take note of when buttong are changed so can change panel
WITHOUT_CLASSIFICATION	// Target
WITHOUT_CLASSIFICATION	// Target server panel
WITHOUT_CLASSIFICATION	// Tell sampler to do multipart, even if we have no files to upload
WITHOUT_CLASSIFICATION	// Tell server that we are done
WITHOUT_CLASSIFICATION	// Tell the monitor we are done // Remove the ThreadLocal entry
WITHOUT_CLASSIFICATION	// Tell the sampler to do a multipart post
WITHOUT_CLASSIFICATION	// Temporary copies, so can set the final ones
WITHOUT_CLASSIFICATION	// Test CSV file with a header line
WITHOUT_CLASSIFICATION	// Test CSV file with a header line
WITHOUT_CLASSIFICATION	// Test CSV file with a header line and recycle is true
WITHOUT_CLASSIFICATION	// Test New cookie is returned
WITHOUT_CLASSIFICATION	// Test Old cookie is not returned
WITHOUT_CLASSIFICATION	// Test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	// Test cookie matching
WITHOUT_CLASSIFICATION	// Test duplicate cookie handling
WITHOUT_CLASSIFICATION	// Test files for testLoad; output will generally be different in size and line count
WITHOUT_CLASSIFICATION	// Test files for testLoadAndSave; output will generally be different in size but same number of lines
WITHOUT_CLASSIFICATION	// Test fragment
WITHOUT_CLASSIFICATION	// Test https works too
WITHOUT_CLASSIFICATION	// Test if can instantiate parser using property name
WITHOUT_CLASSIFICATION	// Test ignore trailing split characters // Ignore adjacent delimiters
WITHOUT_CLASSIFICATION	// Test ignore trailing split characters // Ignore adjacent delimiters
WITHOUT_CLASSIFICATION	// Test leading split characters
WITHOUT_CLASSIFICATION	// Test leading split characters
WITHOUT_CLASSIFICATION	// Test mail button
WITHOUT_CLASSIFICATION	// Test multi-cookie header handling
WITHOUT_CLASSIFICATION	// Test needs to run in this package in order to give access to AbstractTestElement.addProperty() 
WITHOUT_CLASSIFICATION	// Test non-empty parameters
WITHOUT_CLASSIFICATION	// Test optional arguments
WITHOUT_CLASSIFICATION	// Test plan with OnlyOnceController inside inner loop // Set up the test plan
WITHOUT_CLASSIFICATION	// Test plan with OnlyOnceController inside inner loop // Set up the test plan
WITHOUT_CLASSIFICATION	// Test sending UTF-8 data with ISO-8859-1 content encoding
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1, with values that need to be urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1, with values that need to be urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, where user defined variables are used // to set the value for form data
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, where user defined variables are used // to set the value for form data
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, where user defined variables are used // to set the value for form data
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, where user defined variables are used // to set the value for form data
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with + as part of the value, // where the value is set in sampler as not urluencoded, but the  // isalwaysencoded flag of the argument is set to false. // This mimics the HTTPConstants.addNonEncodedArgument, which the // Proxy server calls in some cases
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses, // with values urlencoded, but the always encode set to false for the arguments // This is how the HTTP Proxy server adds arguments to the sampler
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that changes when urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that have been urlencoded, and // where we tell the sampler to urlencode the parameter values
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that needs to be urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that will change when urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that will change when urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that will change when urlencoded, and where // we tell the sampler to urlencode the parameter value
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that would have been urlencoded // if it was not sent as multipart
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that would have been urlencoded // if it was not sent as multipart
WITHOUT_CLASSIFICATION	// Test sending data with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	// Test sending data with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	// Test sending data with UTF-8 encoding
WITHOUT_CLASSIFICATION	// Test sending data with UTF-8 encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending parameters which are urlencoded beforehand // The values must be URL encoded with UTF-8 encoding, because that // is what the HTTPArgument assumes // %C3%85 in UTF-8 is the same as %C5 in ISO-8859-1, which is the same as &Aring;
WITHOUT_CLASSIFICATION	// Test sending simple HTTP get // Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending simple HTTP get // Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test session cookie is returned
WITHOUT_CLASSIFICATION	// Test skipped for now as behaviour is not yet properly defined
WITHOUT_CLASSIFICATION	// Test that only loops twice
WITHOUT_CLASSIFICATION	// Test to show current problem with InterleaveController // I am not sure if the expected order of the samples // below are correct, because I am not sure if it is // properly defined how the InterleaveController and // OnlyOnceController should function.
WITHOUT_CLASSIFICATION	// Test with SimpleController as first item
WITHOUT_CLASSIFICATION	// Test with empty output variable name
WITHOUT_CLASSIFICATION	// Test with output variable name
WITHOUT_CLASSIFICATION	// TestBeanHelper.prepare() is OK
WITHOUT_CLASSIFICATION	// TestBeanHelper.prepare() is OK
WITHOUT_CLASSIFICATION	// TestPlan and WorkBench are the only children of the root
WITHOUT_CLASSIFICATION	// TestStateListener implementation
WITHOUT_CLASSIFICATION	// TestStateListener implementation
WITHOUT_CLASSIFICATION	// Tests for split(String,String,String)
WITHOUT_CLASSIFICATION	// Tests for split(String,String,boolean)
WITHOUT_CLASSIFICATION	// The DNAME which is used if none is provided // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// The HTTPClient always urlencodes both name and value, // so if the argument is already encoded, we have to decode // it before adding it to the post request
WITHOUT_CLASSIFICATION	// The HTTPClient always urlencodes both name and value, // so if the argument is already encoded, we have to decode // it before adding it to the post request
WITHOUT_CLASSIFICATION	// The Locale used to instantiate the GUI objects
WITHOUT_CLASSIFICATION	// The Loop Controller panel can be displayed standalone or inside // another panel. For standalone, we want to display the TITLE, NAME, // etc. (everything). However, if we want to display it within another // panel, we just display the Loop Count fields (not the TITLE and // NAME).
WITHOUT_CLASSIFICATION	// The Loop Controller panel can be displayed standalone or inside // another panel. For standalone, we want to display the TITLE, NAME, // etc. (everything). However, if we want to display it within another // panel, we just display the Loop Count fields (not the TITLE and // NAME).
WITHOUT_CLASSIFICATION	// The Loop Controller panel can be displayed standalone or inside // another panel. For standalone, we want to display the TITLE, NAME, // etc. (everything). However, if we want to display it within another // panel, we just display the Loop Count fields (not the TITLE and // NAME).
WITHOUT_CLASSIFICATION	// The Set is used to ignore duplicated binary files. // Using a LinkedHashSet to avoid unnecessary overhead in iterating // the elements in the set later on. As a side-effect, this will keep // them roughly in order, which should be a better model of browser // behaviour.
WITHOUT_CLASSIFICATION	// The TestCase to run
WITHOUT_CLASSIFICATION	// The XML header, with placeholder for encoding, since that is controlled by property // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// The alias to be used if dynamic host names are not possible // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// The application name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// The content sent
WITHOUT_CLASSIFICATION	// The content sent
WITHOUT_CLASSIFICATION	// The content sent
WITHOUT_CLASSIFICATION	// The current node is now updated
WITHOUT_CLASSIFICATION	// The default is false, so we can remove the property to simplify JMX files // This also allows HTTPDefaults to work for this checkbox
WITHOUT_CLASSIFICATION	// The default setting to be used (i.e. historic)
WITHOUT_CLASSIFICATION	// The default title for the Menu bar
WITHOUT_CLASSIFICATION	// The default title for the Menu bar
WITHOUT_CLASSIFICATION	// The encoding used for http headers and control information
WITHOUT_CLASSIFICATION	// The encoding used for http headers and control information
WITHOUT_CLASSIFICATION	// The environment is supposed to use String keys only
WITHOUT_CLASSIFICATION	// The following are used to set the Result details on return from // the script: //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// The following getters may appear not to be used - however they are invoked via the Functor class
WITHOUT_CLASSIFICATION	// The following three can be discussed: should they be from the // first request or from the final one? I chose to do it this way // because that's what browsers do: they show the final URL of the // redirect chain in the location field.
WITHOUT_CLASSIFICATION	// The following used to be jacks_password, but the Arguments class uses // HashMap for which the order is not defined.
WITHOUT_CLASSIFICATION	// The groups have all completed now            
WITHOUT_CLASSIFICATION	// The groups have all completed now                
WITHOUT_CLASSIFICATION	// The headers and body are divided by a blank line
WITHOUT_CLASSIFICATION	// The headers and body are divided by a blank line (the \r is to allow for the CR before LF) // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// The headers are written using ISO_8859_1 encoding //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// The hostname cannot change during a run, so safe to cache it just once
WITHOUT_CLASSIFICATION	// The known tags are assumed to be valid:
WITHOUT_CLASSIFICATION	// The list of current thread groups; may be setUp, main, or tearDown.
WITHOUT_CLASSIFICATION	// The maximum index of the tags in the combo box
WITHOUT_CLASSIFICATION	// The method name to be invoked
WITHOUT_CLASSIFICATION	// The minimum index of the tags in the combo box
WITHOUT_CLASSIFICATION	// The name of the class containing the method
WITHOUT_CLASSIFICATION	// The name of the property used to hold our data //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// The name of the sampler
WITHOUT_CLASSIFICATION	// The node can be added in non GUI mode at startup
WITHOUT_CLASSIFICATION	// The object used for each row
WITHOUT_CLASSIFICATION	// The object used for each row
WITHOUT_CLASSIFICATION	// The object used for each row
WITHOUT_CLASSIFICATION	// The object used for each row
WITHOUT_CLASSIFICATION	// The object used for each row
WITHOUT_CLASSIFICATION	// The object used for each row
WITHOUT_CLASSIFICATION	// The only once samples
WITHOUT_CLASSIFICATION	// The only once samples
WITHOUT_CLASSIFICATION	// The only once samples
WITHOUT_CLASSIFICATION	// The original name of the property
WITHOUT_CLASSIFICATION	// The outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	// The outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	// The outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	// The property name to be used to look up the display string
WITHOUT_CLASSIFICATION	// The redirect URL we got was not a valid URL
WITHOUT_CLASSIFICATION	// The reqest has no body, or it has a transfer encoding we do not support. // In either case, we read any data available
WITHOUT_CLASSIFICATION	// The response includes the headers from the mirror server, // we want to skip those, to only keep the content mirrored. // Look for the first CRLFCRLF section
WITHOUT_CLASSIFICATION	// The sample does not use a valid encoding
WITHOUT_CLASSIFICATION	// The string to check (Url or data)
WITHOUT_CLASSIFICATION	// The subject may be either a host or a domain
WITHOUT_CLASSIFICATION	// The test object, i.e. the instance of the class containing the test method // This is the same as testCase for JUnit3 tests // but different for JUnit4 tests which use a wrapper
WITHOUT_CLASSIFICATION	// The text field should expand horizontally, but have // a fixed height
WITHOUT_CLASSIFICATION	// The transaction fails if any sub sample fails
WITHOUT_CLASSIFICATION	// The value is already encoded by the user // Must decode the value now, so that when the // httpclient encodes it, we end up with the same value // as the user had entered.
WITHOUT_CLASSIFICATION	// The value is already encoded by the user // Must decode the value now, so that when the // httpclient encodes it, we end up with the same value // as the user had entered.
WITHOUT_CLASSIFICATION	// The value is encoded in the specified encoding
WITHOUT_CLASSIFICATION	// The value is in the first group, group 0 is the whole match
WITHOUT_CLASSIFICATION	// The value is in the second group
WITHOUT_CLASSIFICATION	// The value is not encoded
WITHOUT_CLASSIFICATION	// The values. Entries may be null, but there will be the correct number.
WITHOUT_CLASSIFICATION	// The wrapper used to invoke the method
WITHOUT_CLASSIFICATION	// There aren't any
WITHOUT_CLASSIFICATION	// There was a NPE being thrown without the null check here.. JKB
WITHOUT_CLASSIFICATION	// There was a NPE being thrown without the null check here.. JKB
WITHOUT_CLASSIFICATION	// There was an object in map, destroy the temporary and return one in map (oldCtx)
WITHOUT_CLASSIFICATION	// There were some spaces in the URL
WITHOUT_CLASSIFICATION	// There's a few properties which are excluded from this processing:
WITHOUT_CLASSIFICATION	// There's little point saving the manager between invocations // as we need to reset most of the beans anyway
WITHOUT_CLASSIFICATION	// There's no global copy either
WITHOUT_CLASSIFICATION	// There's only 1 test plan, so can cache the mode here
WITHOUT_CLASSIFICATION	// There's only 1 test plan, so can cache the mode here
WITHOUT_CLASSIFICATION	// These are handled specially by addToTree
WITHOUT_CLASSIFICATION	// These are needed for invoking the method
WITHOUT_CLASSIFICATION	// These are new fields; not saved unless true
WITHOUT_CLASSIFICATION	// These are not currently updated
WITHOUT_CLASSIFICATION	// These are not useful yet, as have not found how to get updated values back //mgr.declareBean("ResponseCode", "200", String.class); // $NON-NLS-1$ //mgr.declareBean("ResponseMessage", "OK", String.class); // $NON-NLS-1$ //mgr.declareBean("IsSuccess", Boolean.TRUE, Boolean.class); // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// These are some of the special characters
WITHOUT_CLASSIFICATION	// These are the names of properties used to define the labels // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// These are the names of properties used to define the labels // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// These are values for the TEST attribute above // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// These constants are used both for the JMX file and for the setters/getters // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// These entries must be in the same order as columns are saved/restored.
WITHOUT_CLASSIFICATION	// These fields are not currently saved or restored
WITHOUT_CLASSIFICATION	// These group names must have .displayName properties // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// These items are shared between threads in a group by the clone() method // They are initialised by testStarted() so don't need to be serialised
WITHOUT_CLASSIFICATION	// These methods handle parameters that cannot contain delimiters or // quotes
WITHOUT_CLASSIFICATION	// These methods handle parameters that could contain delimiters or // quotes:
WITHOUT_CLASSIFICATION	// These must not be static, otherwise Language change does not work // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// These names must agree case-wise with the variable and property names //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// These static variables are only used to convert existing files
WITHOUT_CLASSIFICATION	// These tests should agree with those for JOrphanUtils.split() as far as possible
WITHOUT_CLASSIFICATION	// These variable names must have .displayName properties and agree with the getXXX()/setXXX() methods // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This 'other value' regex is deliberately weak, even accepting an empty string, to be useful when reporting malformed data. // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This assumes that the JMV treats a class file as a resource (not all do).
WITHOUT_CLASSIFICATION	// This assumes the header names are all single words with no spaces // word followed by 0 or more repeats of (non-word char + word) // where the non-word char (\2) is the same // e.g. abc|def|ghi but not abd|def~ghi // $NON-NLS-1$ // last entries may be quoted strings
WITHOUT_CLASSIFICATION	// This can happen if a log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	// This can overflow
WITHOUT_CLASSIFICATION	// This can't happen (how should utf8 not be supported!?!), // so just throw an Error:
WITHOUT_CLASSIFICATION	// This can't happen (how should utf8 not be supported!?!), // so just throw an Error:
WITHOUT_CLASSIFICATION	// This cannot be a JMeter class variable, because properties // are not initialised until later.
WITHOUT_CLASSIFICATION	// This check the state of the TestElement and if returns false it // disable the loaded node
WITHOUT_CLASSIFICATION	// This check the state of the TestElement and if returns false it // disable the loaded node
WITHOUT_CLASSIFICATION	// This check-box defines whether to save  WorkBench content or not
WITHOUT_CLASSIFICATION	// This class is not cloned per thread, so this is shared
WITHOUT_CLASSIFICATION	// This class is not cloned per thread, so this is shared //@GuardedBy("this")
WITHOUT_CLASSIFICATION	// This class is not serialised // The interpreter instance for this class
WITHOUT_CLASSIFICATION	// This column actually consists of a row with two sub-columns // The first column contains the labels, and the second // column contains the fields.
WITHOUT_CLASSIFICATION	// This ensures tha HttpClient knows about the protocol
WITHOUT_CLASSIFICATION	// This happens if the default log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	// This is OK
WITHOUT_CLASSIFICATION	// This is a daemon thread, which should only reach here if there are other // non-daemon threads still active
WITHOUT_CLASSIFICATION	// This is also used by LookAndFeelCommand
WITHOUT_CLASSIFICATION	// This is applied to fields that should cause a restart when changed // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This is needed in order to set up the cookie policy
WITHOUT_CLASSIFICATION	// This is needed to stop XStream keeping copies of each class
WITHOUT_CLASSIFICATION	// This is not a requirement
WITHOUT_CLASSIFICATION	// This is not a requirement
WITHOUT_CLASSIFICATION	// This is required so that // @see org.apache.jmeter.gui.tree.JMeterTreeModel.getNodesOfType() // can find the Clearable nodes - the userObject has to implement the interface.
WITHOUT_CLASSIFICATION	// This is the name of the HotSpot Diagnostic platform MBean (Sun Java 1.6) // See: http://download.oracle.com/javase/6/docs/jre/api/management/extension/com/sun/management/HotSpotDiagnosticMXBean.html
WITHOUT_CLASSIFICATION	// This is the new length
WITHOUT_CLASSIFICATION	// This is used as an error indicator
WITHOUT_CLASSIFICATION	// This is used by the ChangeLanguage class to define the Locale
WITHOUT_CLASSIFICATION	// This is used to emulate @before class and @after class
WITHOUT_CLASSIFICATION	// This is used to keep track of local (non-remote) tests // The name is chosen to be an unlikely host-name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This is what JOrphanUtils.split() does
WITHOUT_CLASSIFICATION	// This is written to JMX files by ScriptWrapperConverter // read from properties file; written to JMX files
WITHOUT_CLASSIFICATION	// This means no sample is saved
WITHOUT_CLASSIFICATION	// This means the cookie was wrong for the URL
WITHOUT_CLASSIFICATION	// This means the cookie was wrong for the URL
WITHOUT_CLASSIFICATION	// This must be done last, as must not be overridden
WITHOUT_CLASSIFICATION	// This must be the original (Java) HTTP sampler
WITHOUT_CLASSIFICATION	// This sequence is borrowed from: // org.apache.commons.httpclient.protocol.ReflectionSocketFactory.createSocket
WITHOUT_CLASSIFICATION	// This should be enough to allow server to exit. // default is false
WITHOUT_CLASSIFICATION	// This should be ignored, as there is no value
WITHOUT_CLASSIFICATION	// This should never happen, but...
WITHOUT_CLASSIFICATION	// This should now work
WITHOUT_CLASSIFICATION	// This should now work
WITHOUT_CLASSIFICATION	// This should only be called for a specific host
WITHOUT_CLASSIFICATION	// This stores the state of the TestElement
WITHOUT_CLASSIFICATION	// This string is used to identify local test runs, so must not be a valid host name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This test should work whether or not all Nulls are equal
WITHOUT_CLASSIFICATION	// This test tries to emulate a http sample, with two // subsamples, representing images that are downloaded for the // page representing the first sample.
WITHOUT_CLASSIFICATION	// This transaction is done
WITHOUT_CLASSIFICATION	// This transaction is done
WITHOUT_CLASSIFICATION	// This used to be request.wait(timeout_ms), where 0 means forever // However 0 means return immediately for the latch
WITHOUT_CLASSIFICATION	// This was the old value that was checked for // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This will be null if initialization succeeds.
WITHOUT_CLASSIFICATION	// This will only work with an Applet .class file. // Ideally, this should be upgraded to work with Objects (IE) // and archives (.jar and .zip) files as well.
WITHOUT_CLASSIFICATION	// This won't work right if we remove components. But we don't, so I'm // not going to worry about it right now.
WITHOUT_CLASSIFICATION	// This won't work right if we remove components. But we don't, so I'm // not going to worry about it right now.
WITHOUT_CLASSIFICATION	// This would be done by the run // command
WITHOUT_CLASSIFICATION	// This would be done by the run // command
WITHOUT_CLASSIFICATION	// This would be done by the run command
WITHOUT_CLASSIFICATION	// This would be done by the run command
WITHOUT_CLASSIFICATION	// Thread method is potentially expensive
WITHOUT_CLASSIFICATION	// Thread pool Executor to get resources  // use a LinkedBlockingQueue, note: max pool size doesn't effect
WITHOUT_CLASSIFICATION	// Thread-specific variables saved here to save recalculation
WITHOUT_CLASSIFICATION	// ThreadStarter is daemon, but we don't want sampler threads to be so too
WITHOUT_CLASSIFICATION	// Throw an Exception to ensure caller knows ...
WITHOUT_CLASSIFICATION	// Throwable wanted
WITHOUT_CLASSIFICATION	// Throwable wanted
WITHOUT_CLASSIFICATION	// Tidy options
WITHOUT_CLASSIFICATION	// Tidy up any objects we created
WITHOUT_CLASSIFICATION	// TimeMillis has granularity of 10-20
WITHOUT_CLASSIFICATION	// Timeout occurred. Ignore, and keep looping until we're // told to stop running.
WITHOUT_CLASSIFICATION	// Timeout occurred. Ignore, and keep looping until we're // told to stop running.
WITHOUT_CLASSIFICATION	// Timeouts not active // How much left
WITHOUT_CLASSIFICATION	// Title multipart
WITHOUT_CLASSIFICATION	// To display current sampler result before change
WITHOUT_CLASSIFICATION	// Total number of threads
WITHOUT_CLASSIFICATION	// Trailing directory
WITHOUT_CLASSIFICATION	// Trailing file
WITHOUT_CLASSIFICATION	// Transaction is done, we do not have a sampler to sample
WITHOUT_CLASSIFICATION	// Translate alias to classname and then delegate to wrapped class
WITHOUT_CLASSIFICATION	// Translate to alias and then delegate to wrapped class
WITHOUT_CLASSIFICATION	// Transparent JButton with no border
WITHOUT_CLASSIFICATION	// Trigger end of loop condition on all parent controllers of current sampler
WITHOUT_CLASSIFICATION	// Truncate the file
WITHOUT_CLASSIFICATION	// Try // default // delimiter
WITHOUT_CLASSIFICATION	// Try a real encoded argument
WITHOUT_CLASSIFICATION	// Try to ensure that more javascript code is processed OK ...
WITHOUT_CLASSIFICATION	// Try to get data from subresult // Needed for addSubResult()
WITHOUT_CLASSIFICATION	// Try with a parameter-less constructor first
WITHOUT_CLASSIFICATION	// Two null values -- return equal
WITHOUT_CLASSIFICATION	// URL CONFIG
WITHOUT_CLASSIFICATION	// USER_INPUT
WITHOUT_CLASSIFICATION	// USER_INPUT
WITHOUT_CLASSIFICATION	// USER_INPUT
WITHOUT_CLASSIFICATION	// USER_INPUT
WITHOUT_CLASSIFICATION	// USER_INPUT
WITHOUT_CLASSIFICATION	// USER_INPUT
WITHOUT_CLASSIFICATION	// UTF-8 unsupported? You must be joking!
WITHOUT_CLASSIFICATION	// Unfortunately AbstractTestElement does not call super.clone()
WITHOUT_CLASSIFICATION	// Uninitialized -- set it to the defaults:
WITHOUT_CLASSIFICATION	// Unique Barrier creation ensured by synchronized setup
WITHOUT_CLASSIFICATION	// Unrecognised files are ignored
WITHOUT_CLASSIFICATION	// Update classloader if necessary
WITHOUT_CLASSIFICATION	// Update follow redirects setting just for this connection
WITHOUT_CLASSIFICATION	// Update menu items to reflect recent files
WITHOUT_CLASSIFICATION	// Update menu items to reflect recent files
WITHOUT_CLASSIFICATION	// Update the dataEncoding
WITHOUT_CLASSIFICATION	// Update the menu items
WITHOUT_CLASSIFICATION	// Updated the property lists
WITHOUT_CLASSIFICATION	// Use MD5 // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Use actual class name for log
WITHOUT_CLASSIFICATION	// Use actual class name for log
WITHOUT_CLASSIFICATION	// Use binary mode file transfer? // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Use constructor class if present // use invokee if provided // use argumenrs if provided
WITHOUT_CLASSIFICATION	// Use default encoding
WITHOUT_CLASSIFICATION	// Use deprecated method, to avoid duplicating code
WITHOUT_CLASSIFICATION	// Use deprecated method, to avoid duplicating code
WITHOUT_CLASSIFICATION	// Use deprecated method, to avoid duplicating code
WITHOUT_CLASSIFICATION	// Use different XPath for both threads
WITHOUT_CLASSIFICATION	// Use expression instead of Javascript // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Use for ComboBox Source Address Type. Preserve order (specially with localization)
WITHOUT_CLASSIFICATION	// Use for x-axis scale
WITHOUT_CLASSIFICATION	// Use format to create number; if it fails, use the default
WITHOUT_CLASSIFICATION	// Use format to create number; if it fails, use the default
WITHOUT_CLASSIFICATION	// Use null for url and contentEncoding, to simulate that HttpRequestHdr do not // know the encoding for the page
WITHOUT_CLASSIFICATION	// Use null for url and contentEncoding, to simulate that HttpRequestHdr do not // know the encoding for the page
WITHOUT_CLASSIFICATION	// Use null for url and contentEncoding, to simulate that HttpRequestHdr do not // know the encoding for the page
WITHOUT_CLASSIFICATION	// Use null for url and contentEncoding, to simulate that HttpRequestHdr do not // know the encoding for the page
WITHOUT_CLASSIFICATION	// Use null for url to simulate that HttpRequestHdr do not // know the encoding for the page. Specify contentEncoding, so the // request is "sent" using that encoding
WITHOUT_CLASSIFICATION	// Use null for url to simulate that HttpRequestHdr do not // know the encoding for the page. Specify contentEncoding, so the // request is "sent" using that encoding
WITHOUT_CLASSIFICATION	// Use old style
WITHOUT_CLASSIFICATION	// Use round robin allocation of user details
WITHOUT_CLASSIFICATION	// Use same XPath for both threads
WITHOUT_CLASSIFICATION	// Use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	// Use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	// Use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	// Use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	// Use the default encoding for urls
WITHOUT_CLASSIFICATION	// Use the default encoding for urls
WITHOUT_CLASSIFICATION	// Use the index as the name, used when processing the action
WITHOUT_CLASSIFICATION	// Use the name of the test element, otherwise cannot enable/disable debug from the GUI
WITHOUT_CLASSIFICATION	// Use the test element name for the label
WITHOUT_CLASSIFICATION	// Use this instead of getLabelResource() otherwise getDocAnchor() below does not work
WITHOUT_CLASSIFICATION	// Use this to override file length
WITHOUT_CLASSIFICATION	// Use with SSL connection
WITHOUT_CLASSIFICATION	// Used by DebugSampler
WITHOUT_CLASSIFICATION	// Used by GUI
WITHOUT_CLASSIFICATION	// Used by GUI
WITHOUT_CLASSIFICATION	// Used by GUI
WITHOUT_CLASSIFICATION	// Used by HttpMirrorServer
WITHOUT_CLASSIFICATION	// Used by Request Panel //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Used by ResultCollector when creating output files
WITHOUT_CLASSIFICATION	// Used by ResultCollector#recordStats()
WITHOUT_CLASSIFICATION	// Used by ResultCollector.sampleOccurred(SampleEvent event)
WITHOUT_CLASSIFICATION	// Used by SampleSaveConfigurationConverter.unmarshall()
WITHOUT_CLASSIFICATION	// Used by SampleSaveConfigurationConverter.unmarshall()
WITHOUT_CLASSIFICATION	// Used by ScriptWrapperConverter
WITHOUT_CLASSIFICATION	// Used by Test code
WITHOUT_CLASSIFICATION	// Used by Test code
WITHOUT_CLASSIFICATION	// Used by findTestFile
WITHOUT_CLASSIFICATION	// Used by itemListener // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Used by old Save service
WITHOUT_CLASSIFICATION	// Used by: MonitorHealthVisualizer.add(SampleResult res)
WITHOUT_CLASSIFICATION	// Used for per-thread/user numbers
WITHOUT_CLASSIFICATION	// Used for per-thread/user numbers // Cannot be static, as random numbers are not to be shared between instances
WITHOUT_CLASSIFICATION	// Used for per-thread/user storage of increment in Thread Group Main loop
WITHOUT_CLASSIFICATION	// Used for saving entries to a file
WITHOUT_CLASSIFICATION	// Used for the RuntimeException to short-circuit the traversal // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Used to be 'dábale', but caused trouble on Gump. Reasons // unknown.
WITHOUT_CLASSIFICATION	// Used to be done in initializeProperties
WITHOUT_CLASSIFICATION	// Used to enclose variable name labels, to distinguish from any of the // above labels // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Used to separate attachment file names in JMX fields - do not change!
WITHOUT_CLASSIFICATION	// User provided incorrect query type
WITHOUT_CLASSIFICATION	// Using index 0 is voluntary as child is removed in next step and added to new parent
WITHOUT_CLASSIFICATION	// Using onMessage Listener
WITHOUT_CLASSIFICATION	// VK_PLUS + CTRL_DOWN_MASK did not work...
WITHOUT_CLASSIFICATION	// Values for TEST_FIELD // N.B. we cannot change the text value as it is in test plans // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Values for creating tokens
WITHOUT_CLASSIFICATION	// Verify for a ".." component at next iteration
WITHOUT_CLASSIFICATION	// Version information for test plan header // This is written to JMX files by ScriptWrapperConverter // Also to JTL files by ResultCollector // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// WARNING - could be large
WITHOUT_CLASSIFICATION	// WEB REQUEST PANEL
WITHOUT_CLASSIFICATION	// WEB REQUEST PANEL
WITHOUT_CLASSIFICATION	// WEB SERVER PANEL
WITHOUT_CLASSIFICATION	// Wait longer than a clock pulse (generally 10-15ms) // Catch an early clock pulse to reduce slop.
WITHOUT_CLASSIFICATION	// Wait up to 1 second
WITHOUT_CLASSIFICATION	// Was not a tag, so if we can't accept other values...
WITHOUT_CLASSIFICATION	// Was there an error?
WITHOUT_CLASSIFICATION	// We always want to override the HTTPS scheme
WITHOUT_CLASSIFICATION	// We always want to override the HTTPS scheme, because we want to trust all certificates and hosts
WITHOUT_CLASSIFICATION	// We are displaying a SampleResult
WITHOUT_CLASSIFICATION	// We are displaying an AssertionResult
WITHOUT_CLASSIFICATION	// We are processing XML // Assume XStream
WITHOUT_CLASSIFICATION	// We assume the argument value is encoded according to the HTTP spec, i.e. UTF-8
WITHOUT_CLASSIFICATION	// We assume the argument value is encoded according to the HTTP spec, i.e. UTF-8
WITHOUT_CLASSIFICATION	// We assume the name is always encoded according to spec
WITHOUT_CLASSIFICATION	// We can't assign null to primitive types.
WITHOUT_CLASSIFICATION	// We clone to avoid enabling existing node
WITHOUT_CLASSIFICATION	// We create the post body content now, so we know the size
WITHOUT_CLASSIFICATION	// We create the post body content now, so we know the size
WITHOUT_CLASSIFICATION	// We did not replace the entry // so use the existing one
WITHOUT_CLASSIFICATION	// We do not know the char set of the file to be uploaded, so we set it to null
WITHOUT_CLASSIFICATION	// We do not know the content encoding of the query string
WITHOUT_CLASSIFICATION	// We do not know what the char set of the file is
WITHOUT_CLASSIFICATION	// We do not use getEncoding method of Writer, since that returns // the historical name
WITHOUT_CLASSIFICATION	// We do our own cookie handling
WITHOUT_CLASSIFICATION	// We don't have a local copy
WITHOUT_CLASSIFICATION	// We don't know how many entries will be skipped
WITHOUT_CLASSIFICATION	// We don't mind if this is left over // Ditto, not a sampler
WITHOUT_CLASSIFICATION	// We don't want this passed on to browser
WITHOUT_CLASSIFICATION	// We don't want this passed on to browser
WITHOUT_CLASSIFICATION	// We don't want to show expert beans in the menus unless we're // in expert mode:
WITHOUT_CLASSIFICATION	// We don't want to use CacheManager clone but the parent one, and CacheManager is Thread Safe
WITHOUT_CLASSIFICATION	// We get the AuthManager and pass it to the WSDLHelper // once the sampler is updated to Axis, all of this stuff // should not be necessary. Now I just need to find the // time and motivation to do it.
WITHOUT_CLASSIFICATION	// We get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	// We get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	// We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	// We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	// We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	// We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	// We have a 3rd parameter
WITHOUT_CLASSIFICATION	// We have a default
WITHOUT_CLASSIFICATION	// We have a default
WITHOUT_CLASSIFICATION	// We have credentials - should we set pre-emptive authentication?
WITHOUT_CLASSIFICATION	// We have received one more sample
WITHOUT_CLASSIFICATION	// We have received one more sample
WITHOUT_CLASSIFICATION	// We have sampled one of our children
WITHOUT_CLASSIFICATION	// We just add placeholder text for file content
WITHOUT_CLASSIFICATION	// We just add placeholder text for file content
WITHOUT_CLASSIFICATION	// We just add placeholder text for file content
WITHOUT_CLASSIFICATION	// We just add placeholder text for file content // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// We just add placeholder text for file content // $NON-NLS-1$ // Write the end of multipart file
WITHOUT_CLASSIFICATION	// We know that URL arguments should always be encoded in UTF-8 according to spec
WITHOUT_CLASSIFICATION	// We know the column names all exist, so create the config
WITHOUT_CLASSIFICATION	// We know we are comparing to another SampleSaveConfiguration
WITHOUT_CLASSIFICATION	// We know when to stop reading, so we can allow the read method to block
WITHOUT_CLASSIFICATION	// We must ask the user if it is ok to close current project
WITHOUT_CLASSIFICATION	// We must ask the user if it is ok to close current project // i.e. it is OPEN
WITHOUT_CLASSIFICATION	// We must set res to null now, before sending the event for the transaction, // so that we can ignore that event in our sampleOccured method
WITHOUT_CLASSIFICATION	// We need to call the super.next, instead of this.next, which is done in GenericController, // because if we call this.next(), it will return the TransactionSampler, and we do not want that. // We need to get the next real sampler or controller
WITHOUT_CLASSIFICATION	// We only check the length of the result. Comparing the // actual result (out.toByteArray==original) will usually // fail, because the order of the properties within each // test element may change. Comparing the lengths should be // enough to detect most problem cases...
WITHOUT_CLASSIFICATION	// We really should never get here // because eval will throw an exception // if xpath is invalid, but whatever, better // safe
WITHOUT_CLASSIFICATION	// We should have a query string part
WITHOUT_CLASSIFICATION	// We should not have a query string part
WITHOUT_CLASSIFICATION	// We should only evalute the condition if it is the first // time ( first "iteration" ) we are called. // For subsequent calls, we are inside the IfControllerGroup, // so then we just pass the control to the next item inside the if control
WITHOUT_CLASSIFICATION	// We use 80% of height
WITHOUT_CLASSIFICATION	// We use a TreeMap because we need the entries to be sorted
WITHOUT_CLASSIFICATION	// We use multi-line mask so can prefix the line with ^ // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// We use multipart if we have been told so, or files are present // and the files should not be send as the post body
WITHOUT_CLASSIFICATION	// We use the default character set encoding of the JRE
WITHOUT_CLASSIFICATION	// We use the default character set encoding of the JRE
WITHOUT_CLASSIFICATION	// We use the default character set encoding of the JRE
WITHOUT_CLASSIFICATION	// We use the encoding which should be used according to the HTTP spec, which is UTF-8
WITHOUT_CLASSIFICATION	// We use the encoding which should be used according to the HTTP spec, which is UTF-8
WITHOUT_CLASSIFICATION	// We use the page encoding where the form resides, as the // default encoding for the form
WITHOUT_CLASSIFICATION	// We want to retain insertion order, so LinkedHashMap is necessary
WITHOUT_CLASSIFICATION	// We want to retain insertion order, so LinkedHashMap is necessary
WITHOUT_CLASSIFICATION	// We won't test restricted-access classes.
WITHOUT_CLASSIFICATION	// We're behind schedule -- try to catch up: // assume the sample will run immediately
WITHOUT_CLASSIFICATION	// We're not done yet
WITHOUT_CLASSIFICATION	// We've finished with the request, so we can add the LocalAddress to it for display
WITHOUT_CLASSIFICATION	// We've finished with the request, so we can add the LocalAddress to it for display
WITHOUT_CLASSIFICATION	// We've gone through the whole list and are now back at the start // point of our search.
WITHOUT_CLASSIFICATION	// Web Methods
WITHOUT_CLASSIFICATION	// WebsphereMQ does not allow corr. id. to be set using setStringProperty() // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Weed out the empty files
WITHOUT_CLASSIFICATION	// What are we testing against?
WITHOUT_CLASSIFICATION	// What host am I running on?
WITHOUT_CLASSIFICATION	// What to match against. N.B. do not change the string value or test plans will break! // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	// When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	// When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	// When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	// When was the last sample seen?
WITHOUT_CLASSIFICATION	// Whether to skip the delete confirmation dialogue // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Whether to use dymanic key generation (if supported) // $NON-NLS-1$;
WITHOUT_CLASSIFICATION	// Whether to use the redirect disabling feature (can be switched off if it does not work)
WITHOUT_CLASSIFICATION	// While (LAST), previous sample OK - should loop until false
WITHOUT_CLASSIFICATION	// While (LAST), previous sample OK - should loop until false
WITHOUT_CLASSIFICATION	// While (blank), previous sample OK - should loop until false
WITHOUT_CLASSIFICATION	// While (blank), previous sample failed - should run once
WITHOUT_CLASSIFICATION	// While False, previous sample failed - should not run
WITHOUT_CLASSIFICATION	// While LAST, previous sample failed - should not run
WITHOUT_CLASSIFICATION	// Will already have been logged by XPathUtil // fail the sample
WITHOUT_CLASSIFICATION	// Will be null if StopTest thread has started
WITHOUT_CLASSIFICATION	// Will throw MissingResourceException if key is not there.
WITHOUT_CLASSIFICATION	// Will use default isolation
WITHOUT_CLASSIFICATION	// With ssl request, url is host:port (without https:// or path) // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Wrap the defaults in our custom trust manager
WITHOUT_CLASSIFICATION	// Write XML header if we have the charset to use for encoding
WITHOUT_CLASSIFICATION	// Write boundary end marker
WITHOUT_CLASSIFICATION	// Write end of multipart
WITHOUT_CLASSIFICATION	// Write multipart for file
WITHOUT_CLASSIFICATION	// Write multipart for parameter
WITHOUT_CLASSIFICATION	// Write the EOL separately so we generate LF line ends on Unix and Windows // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Write the EOL separately so we generate LF line ends on Unix and Windows // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Write the body
WITHOUT_CLASSIFICATION	// Write the body
WITHOUT_CLASSIFICATION	// Write the form data post body, which we have constructed // in the setHeaders. This contains the multipart start divider // and any form data, i.e. arguments
WITHOUT_CLASSIFICATION	// Write the form section
WITHOUT_CLASSIFICATION	// Write the headers and body
WITHOUT_CLASSIFICATION	// Write the headers, and then sleep
WITHOUT_CLASSIFICATION	// Write the headers, and then sleep
WITHOUT_CLASSIFICATION	// Write the request to our own stream
WITHOUT_CLASSIFICATION	// Write the request to our own stream
WITHOUT_CLASSIFICATION	// Write the rest of the headers
WITHOUT_CLASSIFICATION	// Write the start of the headers, and then sleep, so that the mirror // thread will have to block to wait for more data to appear
WITHOUT_CLASSIFICATION	// Write to the socket
WITHOUT_CLASSIFICATION	// Write to the socket
WITHOUT_CLASSIFICATION	// Write to the socket
WITHOUT_CLASSIFICATION	// Write to the socket
WITHOUT_CLASSIFICATION	// Write to the socket
WITHOUT_CLASSIFICATION	// XMLReaderFactory.createXMLReader(vendorParseClass);
WITHOUT_CLASSIFICATION	// XPathFileContainer tests
WITHOUT_CLASSIFICATION	// Y // Y // Y // Y // sp // M // M // / // D // D // / // H // H // : // M // M // : // S // S // end
WITHOUT_CLASSIFICATION	// Y Axis
WITHOUT_CLASSIFICATION	// Y Axis ruler
WITHOUT_CLASSIFICATION	// Yes, so the second argument is missing
WITHOUT_CLASSIFICATION	// [sebb] assertEquals(item2, // clonedItem.getProperty(item2.getName()));
WITHOUT_CLASSIFICATION	// \u00e7 = LATIN SMALL LETTER C WITH CEDILLA // \u00e9 = LATIN SMALL LETTER E WITH ACUTE
WITHOUT_CLASSIFICATION	// \u00e7 = LATIN SMALL LETTER C WITH CEDILLA // \u00e9 = LATIN SMALL LETTER E WITH ACUTE
WITHOUT_CLASSIFICATION	// a and b should be equal
WITHOUT_CLASSIFICATION	// a and b should not be equal
WITHOUT_CLASSIFICATION	// a url is always in a Tag.
WITHOUT_CLASSIFICATION	// a url is always in a Tag.
WITHOUT_CLASSIFICATION	// a well-bahaved browser is supposed to send 'Connection: close' // with the last request to an HTTP server. Instead, most browsers // leave it to the server to close the connection after their // timeout period. Leave it to the JMeter user to decide.
WITHOUT_CLASSIFICATION	// a well-behaved browser is supposed to send 'Connection: close' // with the last request to an HTTP server. Instead, most browsers // leave it to the server to close the connection after their // timeout period. Leave it to the JMeter user to decide.
WITHOUT_CLASSIFICATION	// a well-behaved browser is supposed to send 'Connection: close' // with the last request to an HTTP server. Instead, most browsers // leave it to the server to close the connection after their // timeout period. Leave it to the JMeter user to decide.
WITHOUT_CLASSIFICATION	// absolute URL
WITHOUT_CLASSIFICATION	// acceptsNull // acceptsExpressions // acceptsOther
WITHOUT_CLASSIFICATION	// acceptsNull // acceptsExpressions // acceptsOther // default
WITHOUT_CLASSIFICATION	// account for multiple samples // not yet intialised
WITHOUT_CLASSIFICATION	// add a \r\n
WITHOUT_CLASSIFICATION	// add a listener to activate or not concurrent dwn.
WITHOUT_CLASSIFICATION	// add a message when no http sample //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// add a message when no request data (ex. Java request)
WITHOUT_CLASSIFICATION	// add a new wrapper samplevent
WITHOUT_CLASSIFICATION	// add duplicates
WITHOUT_CLASSIFICATION	// add duplicates as per bug
WITHOUT_CLASSIFICATION	// add listener to intercept texttofind changes and reset search
WITHOUT_CLASSIFICATION	// add match as Integer
WITHOUT_CLASSIFICATION	// add result to main sampleResult
WITHOUT_CLASSIFICATION	// add the button
WITHOUT_CLASSIFICATION	// add the button to the button group
WITHOUT_CLASSIFICATION	// add the proxy elements
WITHOUT_CLASSIFICATION	// add the remaining parts
WITHOUT_CLASSIFICATION	// add the toolbar
WITHOUT_CLASSIFICATION	// additional ctor for processing tests which use int parameters
WITHOUT_CLASSIFICATION	// ai (degree 3)
WITHOUT_CLASSIFICATION	// alias // subject
WITHOUT_CLASSIFICATION	// all implementations extend TestElement
WITHOUT_CLASSIFICATION	// all sub-components with setFont(null) inherit this font
WITHOUT_CLASSIFICATION	// all table cells are editable
WITHOUT_CLASSIFICATION	// all table cells are editable
WITHOUT_CLASSIFICATION	// all table cells are editable
WITHOUT_CLASSIFICATION	// allow everything else
WITHOUT_CLASSIFICATION	// allow for windows / chars in filename // $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// allow for windows / chars in filename // $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// allow use of relative file URLs
WITHOUT_CLASSIFICATION	// already at EOF
WITHOUT_CLASSIFICATION	// already include the \r\n
WITHOUT_CLASSIFICATION	// already reported by IconToolbarBean
WITHOUT_CLASSIFICATION	// and as a string
WITHOUT_CLASSIFICATION	// and as a string
WITHOUT_CLASSIFICATION	// annotation classes to check
WITHOUT_CLASSIFICATION	// append '/' if this isn't the last token or it is but the original // path terminated w/ a '/'
WITHOUT_CLASSIFICATION	// are inner classes OK?
WITHOUT_CLASSIFICATION	// are we saving the whole tree?
WITHOUT_CLASSIFICATION	// as above, but with aggregate sample instead
WITHOUT_CLASSIFICATION	// as per 2.0 branch
WITHOUT_CLASSIFICATION	// assertEquals("Expected 4 lines",4,f.size());
WITHOUT_CLASSIFICATION	// assume default charset is OK here //      <apache-bsf.version>2.4.0</apache-bsf.version>
WITHOUT_CLASSIFICATION	// assume default charset is OK here //      <classpathentry kind="lib" path="lib/geronimo-jms_1.1_spec-1.1.1.jar"/> //      <classpathentry kind="lib" path="lib/activation-1.1.1.jar"/> //      <classpathentry kind="lib" path="lib/jtidy-r938.jar"/>
WITHOUT_CLASSIFICATION	// assume it's senstive data
WITHOUT_CLASSIFICATION	// assume it's string
WITHOUT_CLASSIFICATION	// assume text output - script can override if necessary
WITHOUT_CLASSIFICATION	// assume the sample will run as soon as the delay has expired
WITHOUT_CLASSIFICATION	// autoRedirects and followRedirects cannot both be selected
WITHOUT_CLASSIFICATION	// avoid possible NPE when trimming the name
WITHOUT_CLASSIFICATION	// based on e291. Getting the Name of a JDBC Type from javaalmanac.com // http://javaalmanac.com/egs/java.sql/JdbcInt2Str.html
WITHOUT_CLASSIFICATION	// based on this scheduler is enabled or disabled
WITHOUT_CLASSIFICATION	// better ISO-8859-1 than UTF-8
WITHOUT_CLASSIFICATION	// bi (degree 2)
WITHOUT_CLASSIFICATION	// boolean autoScale = true;
WITHOUT_CLASSIFICATION	// boolean enabled = true;
WITHOUT_CLASSIFICATION	// boolean pass = true;
WITHOUT_CLASSIFICATION	// boolean resized = true;
WITHOUT_CLASSIFICATION	// boolean toReturn = true;
WITHOUT_CLASSIFICATION	// break out of the inner loop
WITHOUT_CLASSIFICATION	// but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	// but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	// by default, name/value are encoded on fetch 
WITHOUT_CLASSIFICATION	// by not reading the response // for real, it improves the // performance on slow clients
WITHOUT_CLASSIFICATION	// cache the parser
WITHOUT_CLASSIFICATION	// cache the value
WITHOUT_CLASSIFICATION	// cached character == Integer.MAX_VALUE when invalid
WITHOUT_CLASSIFICATION	// calculate message size
WITHOUT_CLASSIFICATION	// calculate the height
WITHOUT_CLASSIFICATION	// call ThreadListener.threadFinished()
WITHOUT_CLASSIFICATION	// call ThreadListener.threadStarted()
WITHOUT_CLASSIFICATION	// call normal shutdown (wait ending all tasks)
WITHOUT_CLASSIFICATION	// call to TestBeanHelper.prepare() is intentional
WITHOUT_CLASSIFICATION	// called by HttpRequestHdr
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from threadFinished() thread
WITHOUT_CLASSIFICATION	// calling disconnect doesn't close the connection immediately, // but indicates we're through with it. The JVM should close // it when necessary. // we don't want interrupt to try disconnection again // Disconnect unless using KeepAlive
WITHOUT_CLASSIFICATION	// can be null - e.g. if URL was invalid
WITHOUT_CLASSIFICATION	// can be specified in jmeter.properties //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// can be specified in jmeter.properties //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// can be specified in jmeter.properties //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// can be specified in jmeter.properties //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// can be specified in jmeter.properties //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// can be the empty string
WITHOUT_CLASSIFICATION	// can only match once
WITHOUT_CLASSIFICATION	// can share these
WITHOUT_CLASSIFICATION	// can this happen?
WITHOUT_CLASSIFICATION	// can throw IOException
WITHOUT_CLASSIFICATION	// can't be null - this is checked by canAddTo
WITHOUT_CLASSIFICATION	// can't be null - this is checked by canAddTo
WITHOUT_CLASSIFICATION	// can't call invoke using super class
WITHOUT_CLASSIFICATION	// can't have an output parameter type null
WITHOUT_CLASSIFICATION	// cannot be first line either
WITHOUT_CLASSIFICATION	// cannot be null
WITHOUT_CLASSIFICATION	// canvas size
WITHOUT_CLASSIFICATION	// canvas size
WITHOUT_CLASSIFICATION	// capture the intermediate output
WITHOUT_CLASSIFICATION	// capture the output
WITHOUT_CLASSIFICATION	// case Node.TEXT_NODE: // break;
WITHOUT_CLASSIFICATION	// case we are measuring real time of spedition
WITHOUT_CLASSIFICATION	// center position and 50% of screen size
WITHOUT_CLASSIFICATION	// change to false after the first insert
WITHOUT_CLASSIFICATION	// changed the logic for BEA Weblogic in the case a // user uses Tomcat's status servlet without any // modifications. Weblogic will return nothing for // the connector, therefore we need to check the size // of the list. Peter 12.22.04
WITHOUT_CLASSIFICATION	// charset must agree with content-type below // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// check default
WITHOUT_CLASSIFICATION	// check for overflow too
WITHOUT_CLASSIFICATION	// check if filename defined
WITHOUT_CLASSIFICATION	// check no charset
WITHOUT_CLASSIFICATION	// check null changes nothing
WITHOUT_CLASSIFICATION	// check soap12
WITHOUT_CLASSIFICATION	// check that there aren't any extra entries
WITHOUT_CLASSIFICATION	// check the URL for "?" symbol
WITHOUT_CLASSIFICATION	// check the proxy
WITHOUT_CLASSIFICATION	// check there is a GUI
WITHOUT_CLASSIFICATION	// check there is a GUI
WITHOUT_CLASSIFICATION	// check there is a GUI
WITHOUT_CLASSIFICATION	// check there is a GUI
WITHOUT_CLASSIFICATION	// checkboxes
WITHOUT_CLASSIFICATION	// checkboxes
WITHOUT_CLASSIFICATION	// checkboxes
WITHOUT_CLASSIFICATION	// checks for entries in use
WITHOUT_CLASSIFICATION	// checks the scheduler to stop the iteration
WITHOUT_CLASSIFICATION	// chop to "server.name:x/thing"
WITHOUT_CLASSIFICATION	// chop to "server.name:x/thing"
WITHOUT_CLASSIFICATION	// chop to server.name
WITHOUT_CLASSIFICATION	// chop to server.name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// chop to server.name:xx
WITHOUT_CLASSIFICATION	// chop to server.name:xx // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// chunk the output if necessary
WITHOUT_CLASSIFICATION	// ci (degree 1)
WITHOUT_CLASSIFICATION	// class attributes
WITHOUT_CLASSIFICATION	// clear result tab on Ctrl-E
WITHOUT_CLASSIFICATION	// clear results table before filling
WITHOUT_CLASSIFICATION	// client        
WITHOUT_CLASSIFICATION	// client log file
WITHOUT_CLASSIFICATION	// client log file
WITHOUT_CLASSIFICATION	// clone should never return null
WITHOUT_CLASSIFICATION	// clone should never return null
WITHOUT_CLASSIFICATION	// clone should never return null
WITHOUT_CLASSIFICATION	// clone will produce correct type
WITHOUT_CLASSIFICATION	// clonedSet = new HashSet();
WITHOUT_CLASSIFICATION	// close file
WITHOUT_CLASSIFICATION	// close the stream
WITHOUT_CLASSIFICATION	// close window where another remote client might jump in
WITHOUT_CLASSIFICATION	// close.setPreferredSize(d);
WITHOUT_CLASSIFICATION	// closes reader as well
WITHOUT_CLASSIFICATION	// cnd may be null if next() called us // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// col 1, line 1, *A
WITHOUT_CLASSIFICATION	// col 1, line 2, *A
WITHOUT_CLASSIFICATION	// col2 line 1
WITHOUT_CLASSIFICATION	// col2, line 1, *B
WITHOUT_CLASSIFICATION	// col2, line 2, *B
WITHOUT_CLASSIFICATION	// compute the new Spline curve
WITHOUT_CLASSIFICATION	// computes auto-scaling and absolute plots
WITHOUT_CLASSIFICATION	// computes interpolation coefficients
WITHOUT_CLASSIFICATION	// computes relative auto-scaled plots to fit in the specified area
WITHOUT_CLASSIFICATION	// computes the value of the curve at the pecified abscissa // and relative to the beginning of the right piece of Spline curve
WITHOUT_CLASSIFICATION	// condensed length (without \r) // Add \r for each header // Add \r for initial header // final \r\n before data
WITHOUT_CLASSIFICATION	// configure the document builder factory
WITHOUT_CLASSIFICATION	// configure(element); // super.clear(); // set name, enabled. // put the default values back into the // new element
WITHOUT_CLASSIFICATION	// consume stray character
WITHOUT_CLASSIFICATION	// content-type
WITHOUT_CLASSIFICATION	// content-type
WITHOUT_CLASSIFICATION	// convert the Parameters
WITHOUT_CLASSIFICATION	// convert to telnet port
WITHOUT_CLASSIFICATION	// convertTree(tree);
WITHOUT_CLASSIFICATION	// convertTree(tree);
WITHOUT_CLASSIFICATION	// copy the data to minimise the synch time
WITHOUT_CLASSIFICATION	// copy the original stack trace
WITHOUT_CLASSIFICATION	// copy the original stack trace
WITHOUT_CLASSIFICATION	// could be <HTML lang=""> // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// could be null if it has been deleted via NameUpdater
WITHOUT_CLASSIFICATION	// could be null if it has been deleted via NameUpdater
WITHOUT_CLASSIFICATION	// could be null if it has been deleted via NameUpdater
WITHOUT_CLASSIFICATION	// count limit // time limit // attributes (null = all) // return object ? // dereference links?
WITHOUT_CLASSIFICATION	// create a message
WITHOUT_CLASSIFICATION	// create a new TestResult
WITHOUT_CLASSIFICATION	// create a parser:
WITHOUT_CLASSIFICATION	// create a temporary file to make sure we always have a file to give to the PostWriter  // Whereever we are or Whatever the current path is.
WITHOUT_CLASSIFICATION	// create a temporary file to make sure we always have a file to give to the PostWriter  // Whereever we are or Whatever the current path is.
WITHOUT_CLASSIFICATION	// create and add a new right side
WITHOUT_CLASSIFICATION	// create instances needed for parsing
WITHOUT_CLASSIFICATION	// create parser
WITHOUT_CLASSIFICATION	// create some properties and get the default Session
WITHOUT_CLASSIFICATION	// create tables // The object used for each row
WITHOUT_CLASSIFICATION	// create the JTable that holds auth per row
WITHOUT_CLASSIFICATION	// create the JTable that holds header per row
WITHOUT_CLASSIFICATION	// create the JTable that holds one cookie per row
WITHOUT_CLASSIFICATION	// create the certificate //rem ku:c=dig,keyE means KeyUsage:criticial=digitalSignature,keyEncipherment
WITHOUT_CLASSIFICATION	// create transient item
WITHOUT_CLASSIFICATION	// created by client 
WITHOUT_CLASSIFICATION	// created by server in readResolve method
WITHOUT_CLASSIFICATION	// creation of the interpolation structure
WITHOUT_CLASSIFICATION	// current default language properties file
WITHOUT_CLASSIFICATION	// date or lastModified may be null or in bad format
WITHOUT_CLASSIFICATION	// deal with the jmx files
WITHOUT_CLASSIFICATION	// default
WITHOUT_CLASSIFICATION	// default (e.g. if test plan does not have definition)
WITHOUT_CLASSIFICATION	// default : get first connector
WITHOUT_CLASSIFICATION	// default charset
WITHOUT_CLASSIFICATION	// default charset is deliberate here
WITHOUT_CLASSIFICATION	// default empty array to prevent NPEs
WITHOUT_CLASSIFICATION	// default for concurrent pool (do not change)
WITHOUT_CLASSIFICATION	// default is 1 // default is 0
WITHOUT_CLASSIFICATION	// default level // allow override by system properties
WITHOUT_CLASSIFICATION	// default not visible
WITHOUT_CLASSIFICATION	// default option
WITHOUT_CLASSIFICATION	// default option
WITHOUT_CLASSIFICATION	// default to name of element
WITHOUT_CLASSIFICATION	// default to plain version
WITHOUT_CLASSIFICATION	// default true for compatibility
WITHOUT_CLASSIFICATION	// default: 10 //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: 10 //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: 10 //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: 16 //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: 16 //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: 3.0f //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: circle
WITHOUT_CLASSIFICATION	// default: normal //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: sans serif //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: sans serif //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: sans serif //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: sans serif //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: sans serif //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: serial download embedded resources
WITHOUT_CLASSIFICATION	// define max scale y axis
WITHOUT_CLASSIFICATION	// define max scale y axis
WITHOUT_CLASSIFICATION	// delay between checks
WITHOUT_CLASSIFICATION	// delay between checks
WITHOUT_CLASSIFICATION	// delete temporay file
WITHOUT_CLASSIFICATION	// delete temporay file
WITHOUT_CLASSIFICATION	// deliverSampler allows sampler to be null, but result must not be null
WITHOUT_CLASSIFICATION	// derived from: http://www.coderanch.com/t/342563/GUI/java/TriState-CheckBox
WITHOUT_CLASSIFICATION	// desactivate or not specials regexp char
WITHOUT_CLASSIFICATION	// desc.add("Use fully qualified host name: TRUE/FALSE (Default FALSE)"); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// desc.add("Use fully qualified host name: TRUE/FALSE (Default FALSE)"); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// description Panel
WITHOUT_CLASSIFICATION	// determine location on screen
WITHOUT_CLASSIFICATION	// di (degree 0)
WITHOUT_CLASSIFICATION	// did all the tasks finish?
WITHOUT_CLASSIFICATION	// did not find \n, put the character // back
WITHOUT_CLASSIFICATION	// did not want to spoof the IP address
WITHOUT_CLASSIFICATION	// did we find BeanShell?
WITHOUT_CLASSIFICATION	// dimension changed // resized = true;
WITHOUT_CLASSIFICATION	// dimension of the SplineGraph is the same // resized = false;
WITHOUT_CLASSIFICATION	// displayName is always mandatory:
WITHOUT_CLASSIFICATION	// ditto // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// divisor is a positive number // should never case NFE
WITHOUT_CLASSIFICATION	// do it once outside loop
WITHOUT_CLASSIFICATION	// do layout
WITHOUT_CLASSIFICATION	// do not check hashcodes; unequal objects may have equal hashcodes
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing - means object is found
WITHOUT_CLASSIFICATION	// do nothing, the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	// do nothing, the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	// do nothing, wait for the next pile to complete
WITHOUT_CLASSIFICATION	// do nothing. it's naive, but since // the utility is meant to parse access // logs the formatting should be correct
WITHOUT_CLASSIFICATION	// do search
WITHOUT_CLASSIFICATION	// do we need to close byte array (or flush it?)
WITHOUT_CLASSIFICATION	// doc =
WITHOUT_CLASSIFICATION	// doctype
WITHOUT_CLASSIFICATION	// doctype
WITHOUT_CLASSIFICATION	// document or context-relative URL like: // '/path/to' // OR '../path/to' // OR '/path/to/../path/'
WITHOUT_CLASSIFICATION	// does not apply to Java implementation
WITHOUT_CLASSIFICATION	// does not remove the entry
WITHOUT_CLASSIFICATION	// don't add the timer
WITHOUT_CLASSIFICATION	// don't automatically expand when merging
WITHOUT_CLASSIFICATION	// don't bother checking class is present if it is to be updated
WITHOUT_CLASSIFICATION	// don't call isHeadless() here, as it has a side effect. // --
WITHOUT_CLASSIFICATION	// don't change name if merging
WITHOUT_CLASSIFICATION	// don't change name if merging
WITHOUT_CLASSIFICATION	// don't do anything
WITHOUT_CLASSIFICATION	// don't fetch unless pattern compiles
WITHOUT_CLASSIFICATION	// don't try twice
WITHOUT_CLASSIFICATION	// double (pressed) click
WITHOUT_CLASSIFICATION	// double check this logic make sure it // makes sense
WITHOUT_CLASSIFICATION	// double click
WITHOUT_CLASSIFICATION	// double the quote char
WITHOUT_CLASSIFICATION	// doubled quote => quote
WITHOUT_CLASSIFICATION	// draw a red line for 90% point
WITHOUT_CLASSIFICATION	// draw an orange line for 50% point
WITHOUT_CLASSIFICATION	// draw axis
WITHOUT_CLASSIFICATION	// draw data lines
WITHOUT_CLASSIFICATION	// draw grid
WITHOUT_CLASSIFICATION	// draw grid only when x is 1. If we didn't // the grid line would draw over the data // lines making it look bad.
WITHOUT_CLASSIFICATION	// draw the X axis
WITHOUT_CLASSIFICATION	// draw the Y axis
WITHOUT_CLASSIFICATION	// drop empty trailing content
WITHOUT_CLASSIFICATION	// drop mode == DropMode.ON
WITHOUT_CLASSIFICATION	// drop-down list for renderer
WITHOUT_CLASSIFICATION	// drop-down list for renderer
WITHOUT_CLASSIFICATION	// duplicates
WITHOUT_CLASSIFICATION	// e.g unbind
WITHOUT_CLASSIFICATION	// e.g. "/org/apache/jmeter/resources/messages"
WITHOUT_CLASSIFICATION	// e.g. *.apache.org // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// e.g. 0 // i.e. * 1
WITHOUT_CLASSIFICATION	// e.g. DTD not reachable
WITHOUT_CLASSIFICATION	// e.g. Long.MAX_VALUE
WITHOUT_CLASSIFICATION	// e.g. Long.MIN_VALUE
WITHOUT_CLASSIFICATION	// e.g. NullPointerException
WITHOUT_CLASSIFICATION	// e.g. in non-GUI mode
WITHOUT_CLASSIFICATION	// e.g. not yet started
WITHOUT_CLASSIFICATION	// e.g. some kinds of invalid URL
WITHOUT_CLASSIFICATION	// e.g. some kinds of invalid URL
WITHOUT_CLASSIFICATION	// e.g. started from IDE with full classpath // Allow override $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// e.g. text/html; charset=ISO-8859-1
WITHOUT_CLASSIFICATION	// e.g. text/html; charset=ISO-8859-1
WITHOUT_CLASSIFICATION	// e.g. text/html; charset=ISO-8859-1
WITHOUT_CLASSIFICATION	// e.g. text/html; charset=utf-8
WITHOUT_CLASSIFICATION	// e.g. windows xp => windows
WITHOUT_CLASSIFICATION	// e.g. www.apache.org
WITHOUT_CLASSIFICATION	// e.printStackTrace();
WITHOUT_CLASSIFICATION	// echo back
WITHOUT_CLASSIFICATION	// editMenu.setEnabled(false);
WITHOUT_CLASSIFICATION	// element.setProperty(TCPSampler.FILENAME, filename.getText());
WITHOUT_CLASSIFICATION	// elements have empty nodeValue, but we are usually interested in their content
WITHOUT_CLASSIFICATION	// else No object in Map, ctx is the one
WITHOUT_CLASSIFICATION	// else do nothing (cell isn't a string to edit)
WITHOUT_CLASSIFICATION	// else expiresDate computed in (expires!=null) condition is used
WITHOUT_CLASSIFICATION	// else if might have been created by another process so not a problem
WITHOUT_CLASSIFICATION	// else start immediately
WITHOUT_CLASSIFICATION	// else will be done by threadFinished()
WITHOUT_CLASSIFICATION	// empty chars, return to null
WITHOUT_CLASSIFICATION	// empty collection
WITHOUT_CLASSIFICATION	// empty collection
WITHOUT_CLASSIFICATION	// empty collection ok to cast, local var is here to allow SuppressWarnings
WITHOUT_CLASSIFICATION	// empty collection, local var is here to allow SuppressWarnings
WITHOUT_CLASSIFICATION	// empty encoding, return to platorm default
WITHOUT_CLASSIFICATION	// empty if not provided // use the system property to determine the type // otherwise use the name
WITHOUT_CLASSIFICATION	// empty init // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// en // fr // de // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // ja // zh_CN // zh_TW
WITHOUT_CLASSIFICATION	// enable drag&drop, install a custom transfer handler
WITHOUT_CLASSIFICATION	// enable embedded html resources
WITHOUT_CLASSIFICATION	// encoding does not really matter here
WITHOUT_CLASSIFICATION	// encoding does not really matter here
WITHOUT_CLASSIFICATION	// end method
WITHOUT_CLASSIFICATION	// end of buffer
WITHOUT_CLASSIFICATION	// end of thread groups // No TGs found
WITHOUT_CLASSIFICATION	// endWindow = window;
WITHOUT_CLASSIFICATION	// endWindow = window;
WITHOUT_CLASSIFICATION	// ensure Proxy threads cannot interfere with each other
WITHOUT_CLASSIFICATION	// ensure correctly set on initial display
WITHOUT_CLASSIFICATION	// ensure correctly set on initial display // ensure correctly set on initial display
WITHOUT_CLASSIFICATION	// ensure counts are updated correctly
WITHOUT_CLASSIFICATION	// ensure data is set up OK initially
WITHOUT_CLASSIFICATION	// ensure name is available for debugging
WITHOUT_CLASSIFICATION	// ensure old value is not left defined
WITHOUT_CLASSIFICATION	// ensure old value is not left defined
WITHOUT_CLASSIFICATION	// ensure only values are used
WITHOUT_CLASSIFICATION	// ensure only values are used
WITHOUT_CLASSIFICATION	// ensure output is flushed
WITHOUT_CLASSIFICATION	// ensure policy is picked up
WITHOUT_CLASSIFICATION	// ensure policy is picked up
WITHOUT_CLASSIFICATION	// ensure policy is picked up
WITHOUT_CLASSIFICATION	// ensure that clones share the same lock object
WITHOUT_CLASSIFICATION	// ensure that interrupt cannot overlap with shutdown
WITHOUT_CLASSIFICATION	// ensure that setParameters() is called.
WITHOUT_CLASSIFICATION	// ensure that the initial cookies are copied to the per-thread instances
WITHOUT_CLASSIFICATION	// ensure the application does not hang if it requests input
WITHOUT_CLASSIFICATION	// ensure the manager is initialised // we don't currently need to do anything further, as this sets the default https protocol
WITHOUT_CLASSIFICATION	// ensure value is propagated to editor
WITHOUT_CLASSIFICATION	// ensure variables are not null
WITHOUT_CLASSIFICATION	// equation for calculating the weight // w = (int)(33 * (used/max))
WITHOUT_CLASSIFICATION	// equivalent to new TreeMap((Comparator)null);
WITHOUT_CLASSIFICATION	// errorDetected()
WITHOUT_CLASSIFICATION	// errorDetected()
WITHOUT_CLASSIFICATION	// errorLogging and successOnlyLogging are mutually exclusive // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// errors only
WITHOUT_CLASSIFICATION	// etc...
WITHOUT_CLASSIFICATION	// evaluate result
WITHOUT_CLASSIFICATION	// everyone is free to swing on its side :) // add(infoPanel, BorderLayout.EAST);
WITHOUT_CLASSIFICATION	// exclusion filter assumes most of // the files are used, therefore // usefile is set to true, unless // it matches.
WITHOUT_CLASSIFICATION	// expand the destination node
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// failed to initialise the class
WITHOUT_CLASSIFICATION	// failed to recognise the header
WITHOUT_CLASSIFICATION	// fetch in case gets nulled later
WITHOUT_CLASSIFICATION	// fetch once; must be done under lock // (also protects against null)
WITHOUT_CLASSIFICATION	// field Template#name  // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// field TemplateManager#templates  // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// file New operation may set to null, so just return app name
WITHOUT_CLASSIFICATION	// file New operation may set to null, so just return app name
WITHOUT_CLASSIFICATION	// file exclf inclf exclp inclp
WITHOUT_CLASSIFICATION	// file panel //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// file to source (overrides script)
WITHOUT_CLASSIFICATION	// file to source (overrides script)
WITHOUT_CLASSIFICATION	// filter the tree for a TestFragment.
WITHOUT_CLASSIFICATION	// finally, merge the names so it's clear they've been merged
WITHOUT_CLASSIFICATION	// find all jar files or paths that end with strPathOrJar
WITHOUT_CLASSIFICATION	// find index of path start
WITHOUT_CLASSIFICATION	// find order.indexOf(currentKey) using == rather than equals() // there may be multiple entries which compare equals (Bug 50898) // This will be slightly slower than the built-in method, // but replace() is not used frequently.
WITHOUT_CLASSIFICATION	// find path endIndex
WITHOUT_CLASSIFICATION	// find the same property in the local headers
WITHOUT_CLASSIFICATION	// finish processing samples
WITHOUT_CLASSIFICATION	// first copy the children as the call to copy.add will modify the collection we're iterating on
WITHOUT_CLASSIFICATION	// first get all the classes
WITHOUT_CLASSIFICATION	// first lets draw the grid
WITHOUT_CLASSIFICATION	// first response
WITHOUT_CLASSIFICATION	// first time
WITHOUT_CLASSIFICATION	// first we check to see if body tag has a // background set
WITHOUT_CLASSIFICATION	// first we iterate through the bindings
WITHOUT_CLASSIFICATION	// first we see if the class declares a string // constructor. if it is doesn't we look for // empty constructor.
WITHOUT_CLASSIFICATION	// flag - if all machines within a given domain can access the variable. //(from http://www.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	// flush
WITHOUT_CLASSIFICATION	// for Thread Pool for resources but no need to use a special value?
WITHOUT_CLASSIFICATION	// for each thread group, generate threads // hand each thread the sampler controller // and the listeners, and the timer
WITHOUT_CLASSIFICATION	// for editors
WITHOUT_CLASSIFICATION	// for getIterCount
WITHOUT_CLASSIFICATION	// for java sockets // for Commons Httpclient sockets
WITHOUT_CLASSIFICATION	// for labels
WITHOUT_CLASSIFICATION	// for new test plans that don't have FILE/PARAM/MIME properties
WITHOUT_CLASSIFICATION	// for next time
WITHOUT_CLASSIFICATION	// for now just swallow the exception
WITHOUT_CLASSIFICATION	// for omitted file names //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// for panels
WITHOUT_CLASSIFICATION	// for reading CSV files
WITHOUT_CLASSIFICATION	// for reading from CSV files // ignored currently
WITHOUT_CLASSIFICATION	// for relative links
WITHOUT_CLASSIFICATION	// for request Data
WITHOUT_CLASSIFICATION	// for request Data
WITHOUT_CLASSIFICATION	// for result
WITHOUT_CLASSIFICATION	// for ssl connection
WITHOUT_CLASSIFICATION	// for unit test code @see TestIfController
WITHOUT_CLASSIFICATION	// for use by test code only
WITHOUT_CLASSIFICATION	// force reopen on next sample
WITHOUT_CLASSIFICATION	// force the events to fire
WITHOUT_CLASSIFICATION	// format (HMTL, XHTML, XML)
WITHOUT_CLASSIFICATION	// found "${"
WITHOUT_CLASSIFICATION	// found the string
WITHOUT_CLASSIFICATION	// fractional seconds // This will round
WITHOUT_CLASSIFICATION	// general exception
WITHOUT_CLASSIFICATION	// generate the certificate and store in output file
WITHOUT_CLASSIFICATION	// generate the keypair for the host
WITHOUT_CLASSIFICATION	// generate the request
WITHOUT_CLASSIFICATION	// get ../ or ../../ etc.
WITHOUT_CLASSIFICATION	// get access to buffer
WITHOUT_CLASSIFICATION	// get data from child
WITHOUT_CLASSIFICATION	// get past separator
WITHOUT_CLASSIFICATION	// get the JComponent from the visualizer
WITHOUT_CLASSIFICATION	// get the JComponent from the visualizer
WITHOUT_CLASSIFICATION	// get the certificate request
WITHOUT_CLASSIFICATION	// get the component parts // Assume domains must have at least 2 parts, e.g. apache.org // Don't try matching against *.org; however we don't check *.co.uk here
WITHOUT_CLASSIFICATION	// get the node
WITHOUT_CLASSIFICATION	// get the platform beans
WITHOUT_CLASSIFICATION	// get the soap:operation
WITHOUT_CLASSIFICATION	// get the start of the file
WITHOUT_CLASSIFICATION	// get the text response and image icon // to determine which is NOT null
WITHOUT_CLASSIFICATION	// get to 'path' part of the URL, preserving schema, auth, host if // present
WITHOUT_CLASSIFICATION	// getAllHeaders() is not yet genericised // throws ME
WITHOUT_CLASSIFICATION	// getParentFile() may not work on relative paths
WITHOUT_CLASSIFICATION	// go on with next property.
WITHOUT_CLASSIFICATION	// go to 1st line
WITHOUT_CLASSIFICATION	// go to first line
WITHOUT_CLASSIFICATION	// go to first line
WITHOUT_CLASSIFICATION	// grab the nodes
WITHOUT_CLASSIFICATION	// handle body and attachments
WITHOUT_CLASSIFICATION	// handle: ContentType: text/plain; charset=ISO-8859-1; format=flowed
WITHOUT_CLASSIFICATION	// handles hex as well
WITHOUT_CLASSIFICATION	// handles hex as well
WITHOUT_CLASSIFICATION	// has been seen in a redirect // use header (if possible) if no message found
WITHOUT_CLASSIFICATION	// has the Sample lasted too long?
WITHOUT_CLASSIFICATION	// haven't got to reset paramname & paramvalue // but did it to keep the code looking correct
WITHOUT_CLASSIFICATION	// headerManager was set, so let's set the connection // to use it.
WITHOUT_CLASSIFICATION	// header[0] is not the status line... // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// header[0] is not the status line... // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// helper method - also used by constructor
WITHOUT_CLASSIFICATION	// helper method to allow input and output to be changed for chaining
WITHOUT_CLASSIFICATION	// helper method to save the cache entry
WITHOUT_CLASSIFICATION	// here is the core routine to find appropriate cookie manager and // check it's not being used.  If used, wait until whoever's using it gives // it up
WITHOUT_CLASSIFICATION	// hold the nodes that should be removed on drop
WITHOUT_CLASSIFICATION	// holds keys from file
WITHOUT_CLASSIFICATION	// how long we had to wait (nanoSeconds)
WITHOUT_CLASSIFICATION	// how many times we had to wait to queue a sample
WITHOUT_CLASSIFICATION	// href="#"
WITHOUT_CLASSIFICATION	// i is used below
WITHOUT_CLASSIFICATION	// i starts at 1
WITHOUT_CLASSIFICATION	// i.e. "true"
WITHOUT_CLASSIFICATION	// i.e. "true"
WITHOUT_CLASSIFICATION	// i.e. '\\'
WITHOUT_CLASSIFICATION	// i.e. EOF
WITHOUT_CLASSIFICATION	// i.e. GET
WITHOUT_CLASSIFICATION	// i.e. bypass the Functors
WITHOUT_CLASSIFICATION	// i.e. does keytool support -gencert and -ext ?
WITHOUT_CLASSIFICATION	// i.e. if we want per thread pooling // pool will be created later
WITHOUT_CLASSIFICATION	// i.e. is == null
WITHOUT_CLASSIFICATION	// i.e. is == null
WITHOUT_CLASSIFICATION	// i.e. mailBody is empty
WITHOUT_CLASSIFICATION	// i.e. no disabled icon found
WITHOUT_CLASSIFICATION	// i.e. no disabled icon found
WITHOUT_CLASSIFICATION	// i.e. no filter
WITHOUT_CLASSIFICATION	// i.e. not using Expires // Check that we are processing Expires/CacheControl
WITHOUT_CLASSIFICATION	// i.e. shared pool
WITHOUT_CLASSIFICATION	// i.e. shutdown/stopped during main thread groups // re-enable for tearDown if necessary
WITHOUT_CLASSIFICATION	// if ! isPathExtension()
WITHOUT_CLASSIFICATION	// if a blank HeaderManager exists, try to // get the SOAPHTTPConnection. After the first // request, there should be a connection object // stored with the cookie header info.
WITHOUT_CLASSIFICATION	// if a mask for this argument exists
WITHOUT_CLASSIFICATION	// if argument is 'next' - go to the next line //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// if beyond the end // then set to the end
WITHOUT_CLASSIFICATION	// if checkMethod on the token is true // we tokenzie it using space and escape // the while loop. Only the first matching // token will be used
WITHOUT_CLASSIFICATION	// if child and a parent are selected : only keep the parent
WITHOUT_CLASSIFICATION	// if concurrent download emb. resources, add to a list for async gets later
WITHOUT_CLASSIFICATION	// if either a file or path location is given, // get the file object. // we have a file
WITHOUT_CLASSIFICATION	// if everything went fine then xml schema validation is valid
WITHOUT_CLASSIFICATION	// if for some reason the host is blank and the port is // zero, the sampler will fail silently
WITHOUT_CLASSIFICATION	// if get to an arg barrier then return to normal mode // else continue accumulating options
WITHOUT_CLASSIFICATION	// if it is a short option then parse it else ...
WITHOUT_CLASSIFICATION	// if no results render in jmeter.properties, load Standard (default)
WITHOUT_CLASSIFICATION	// if no results render in jmeter.properties, load Standard (default)
WITHOUT_CLASSIFICATION	// if no-cache is present, ensure that expiresDate remains null, which forces revalidation
WITHOUT_CLASSIFICATION	// if other node type, we will just skip it
WITHOUT_CLASSIFICATION	// if parameter name exists in http request // then change its value with value obtained with regular expression
WITHOUT_CLASSIFICATION	// if provided
WITHOUT_CLASSIFICATION	// if selected, add duration of timers to total runtime
WITHOUT_CLASSIFICATION	// if the "Title of Graph" is empty, we can assume some default
WITHOUT_CLASSIFICATION	// if the directory already exists and is a directory, // we just renamed to "archive.date"
WITHOUT_CLASSIFICATION	// if the displayName is the empty string, leave it like that.
WITHOUT_CLASSIFICATION	// if the first child is soap:operation // we add it to the array
WITHOUT_CLASSIFICATION	// if the height is less than one, we set it // to one pixel
WITHOUT_CLASSIFICATION	// if the labels are too long, they'll be "squeezed" to make the chart viewable.
WITHOUT_CLASSIFICATION	// if the string constructor is not null, we use it. // if the string constructor is null, we use the empty // constructor to get a new instance
WITHOUT_CLASSIFICATION	// if the string contains atleast one double // quote and checkMethod is true, go ahead // and tokenize the string.
WITHOUT_CLASSIFICATION	// if the title graph is empty, we can assume some default
WITHOUT_CLASSIFICATION	// if true the Scheduler is enabled
WITHOUT_CLASSIFICATION	// if type is unknown
WITHOUT_CLASSIFICATION	// if use dynamic graph size is checked, we disable the dimension fields
WITHOUT_CLASSIFICATION	// if use dynamic graph size is checked, we disable the dimension fields
WITHOUT_CLASSIFICATION	// if use proxy is checked, we enable // the text fields for the host and port
WITHOUT_CLASSIFICATION	// if use proxy is set, we try to pick up the // proxy host and port from either the text // fields or from JMeterUtil if they were passed // from command line
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore self
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored, already processed
WITHOUT_CLASSIFICATION	// ignored. May happen occasionally, but no harm done if so.
WITHOUT_CLASSIFICATION	// implementation moved to JmeterKeystore as only that has the keyType info
WITHOUT_CLASSIFICATION	// implements UnsharedComponent
WITHOUT_CLASSIFICATION	// implements UnsharedComponent
WITHOUT_CLASSIFICATION	// implicit return empty toolbar if icons == null
WITHOUT_CLASSIFICATION	// import the signed CA cert into the store (root already there) - both are needed to sign the domain certificates
WITHOUT_CLASSIFICATION	// improve xml display
WITHOUT_CLASSIFICATION	// in case
WITHOUT_CLASSIFICATION	// in main table (evt mousePressed because cell is editable) 
WITHOUT_CLASSIFICATION	// in seconds
WITHOUT_CLASSIFICATION	// in seconds
WITHOUT_CLASSIFICATION	// in the case the test uses a file, we set it locally and // prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	// in the case the test uses a file, we set it locally and // prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	// in the case the test uses a file, we set it locally and // prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	// in the case when the filter is not set, we // parse all the lines
WITHOUT_CLASSIFICATION	// in the rare case the WSDL is protected and requires // authentication, use the AuthManager to set the // authorization. Basic and Digest authorization are // pretty weak and don't provide real security.
WITHOUT_CLASSIFICATION	// includes JavaScriptException, rethrows Errors
WITHOUT_CLASSIFICATION	// includes \n
WITHOUT_CLASSIFICATION	// inclusion filter assumes most of // the files are not wanted, therefore // usefile is set to false unless it // matches.
WITHOUT_CLASSIFICATION	// incompatable (blee/all)
WITHOUT_CLASSIFICATION	// increment the current count
WITHOUT_CLASSIFICATION	// increment the current count
WITHOUT_CLASSIFICATION	// increment the value
WITHOUT_CLASSIFICATION	// incrementCurrent();
WITHOUT_CLASSIFICATION	// independent frame to // allow it to be overlaid // by the main frame //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// independent frame to // allow it to be overlaid // by the main frame //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// indicate that an error occured
WITHOUT_CLASSIFICATION	// indicate that an error occured
WITHOUT_CLASSIFICATION	// information display Panel
WITHOUT_CLASSIFICATION	// init newX and oldX arrays to 0
WITHOUT_CLASSIFICATION	// init right side with first render
WITHOUT_CLASSIFICATION	// init with default value
WITHOUT_CLASSIFICATION	// initalise pointer to first user
WITHOUT_CLASSIFICATION	// initialize B
WITHOUT_CLASSIFICATION	// initialize GUI.
WITHOUT_CLASSIFICATION	// initialize system structures (just to be safe)
WITHOUT_CLASSIFICATION	// initialize the diagonal of the system matrix (A) to 4
WITHOUT_CLASSIFICATION	// initialize the two minor diagonals of A to 1
WITHOUT_CLASSIFICATION	// initialize to empty string, this will fail the assertion
WITHOUT_CLASSIFICATION	// inport the certificate
WITHOUT_CLASSIFICATION	// insert new value
WITHOUT_CLASSIFICATION	// install new path
WITHOUT_CLASSIFICATION	// instance attributes
WITHOUT_CLASSIFICATION	// instance fields are copied from the client instance
WITHOUT_CLASSIFICATION	// int
WITHOUT_CLASSIFICATION	// int spare = cntr.getThreadInfo().getMaxSpareThreads();
WITHOUT_CLASSIFICATION	// int width = getWidth();
WITHOUT_CLASSIFICATION	// intermediate arrays
WITHOUT_CLASSIFICATION	// internal list of all results
WITHOUT_CLASSIFICATION	// invalid
WITHOUT_CLASSIFICATION	// invalid dates must be treated as expired
WITHOUT_CLASSIFICATION	// is the Sample the correct size?
WITHOUT_CLASSIFICATION	// is there a separator? // case of name=value, name=
WITHOUT_CLASSIFICATION	// it must be a proxied HTTPS request // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// it will be null unless remoteStop = true
WITHOUT_CLASSIFICATION	// it's not set, lets check if the user passed // proxy host and port from command line
WITHOUT_CLASSIFICATION	// it's not set, lets check if the user passed // proxy host and port from command line
WITHOUT_CLASSIFICATION	// iterate thru each of the other headers
WITHOUT_CLASSIFICATION	// its a long option
WITHOUT_CLASSIFICATION	// java.util.Date d = null;
WITHOUT_CLASSIFICATION	// just like the aggregate listener, we use the sample label to represent // a row. in this case, we use it as a key.
WITHOUT_CLASSIFICATION	// keep track of classes created
WITHOUT_CLASSIFICATION	// keep track of remote tests
WITHOUT_CLASSIFICATION	// key is the type to collect (usually long), value = count of entries
WITHOUT_CLASSIFICATION	// key: name (lowercase) from java.sql.Types; entry: corresponding int value
WITHOUT_CLASSIFICATION	// keystore for SSL keys; fixed at config except for dynamic host key generation
WITHOUT_CLASSIFICATION	// kill any remaining tasks
WITHOUT_CLASSIFICATION	// language change worked // Check if we at least found the correct language:
WITHOUT_CLASSIFICATION	// last \r\n before response data
WITHOUT_CLASSIFICATION	// leading comment
WITHOUT_CLASSIFICATION	// let bad input fail silently
WITHOUT_CLASSIFICATION	// let bad input fail silently
WITHOUT_CLASSIFICATION	// let bad input fail silently
WITHOUT_CLASSIFICATION	// let bad input fail silently
WITHOUT_CLASSIFICATION	// let notified threads move on and get lock on managersInUse
WITHOUT_CLASSIFICATION	// lifecycle methods
WITHOUT_CLASSIFICATION	// likely a wrapped exception from a LiveConnect call. // Display its stack trace as a diagnostic
WITHOUT_CLASSIFICATION	// limit the changes to client only test elements
WITHOUT_CLASSIFICATION	// list of parsers //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// listen on sample
WITHOUT_CLASSIFICATION	// listen on sample 
WITHOUT_CLASSIFICATION	// listener cannot be null here
WITHOUT_CLASSIFICATION	// listeners = controller.getListeners();
WITHOUT_CLASSIFICATION	// load the default resource
WITHOUT_CLASSIFICATION	// local variables
WITHOUT_CLASSIFICATION	// local variables
WITHOUT_CLASSIFICATION	// local vars
WITHOUT_CLASSIFICATION	// local vars
WITHOUT_CLASSIFICATION	// log is required to ensure errors are available
WITHOUT_CLASSIFICATION	// log.debug("data["+s+"]["+idx+"]: " + data[s][idx]);
WITHOUT_CLASSIFICATION	// log.info("classname:: " + strClassName);
WITHOUT_CLASSIFICATION	// log.info(getLabel()+" "+getFilename());
WITHOUT_CLASSIFICATION	// log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	// log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	// log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	// log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	// log.warn("ThreadContext was not set up - should only happen in // JUnit testing..." // ,new Throwable("Debug"));
WITHOUT_CLASSIFICATION	// logprop("java.class.path");
WITHOUT_CLASSIFICATION	// look for Objects
WITHOUT_CLASSIFICATION	// look for applets
WITHOUT_CLASSIFICATION	// loop to fetch desired connector
WITHOUT_CLASSIFICATION	// made currentSample volatile
WITHOUT_CLASSIFICATION	// main iteration
WITHOUT_CLASSIFICATION	// mainPanel.add(createFilenamePanel());
WITHOUT_CLASSIFICATION	// mainPanel.add(threadPropsPanel, BorderLayout.NORTH); // add(mainPanel, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	// mainly for TestElementConverter
WITHOUT_CLASSIFICATION	// maintain original behaviour
WITHOUT_CLASSIFICATION	// maintain relationship
WITHOUT_CLASSIFICATION	// make sure buffer details // track the output
WITHOUT_CLASSIFICATION	// make sure current interrupt is finished, prevent another starting yet
WITHOUT_CLASSIFICATION	// make sure setting the new isolation mode is done in an auto committed transaction
WITHOUT_CLASSIFICATION	// make sure we log the error
WITHOUT_CLASSIFICATION	// maximum pause to use
WITHOUT_CLASSIFICATION	// may also happen if long value > int.max
WITHOUT_CLASSIFICATION	// may be impossible, but no harm in // checking ...
WITHOUT_CLASSIFICATION	// may be null during startup
WITHOUT_CLASSIFICATION	// may be null for PUT // In an application/x-www-form-urlencoded request, we only support // parameters, no file upload is allowed
WITHOUT_CLASSIFICATION	// may be set from a different thread
WITHOUT_CLASSIFICATION	// may be the empty string
WITHOUT_CLASSIFICATION	// may be the empty string
WITHOUT_CLASSIFICATION	// may be updated
WITHOUT_CLASSIFICATION	// may change the format later // restart from beginning
WITHOUT_CLASSIFICATION	// may well happen
WITHOUT_CLASSIFICATION	// md5HexInput.addFocusListener(this);
WITHOUT_CLASSIFICATION	// means counting from end
WITHOUT_CLASSIFICATION	// message includes the file name
WITHOUT_CLASSIFICATION	// messages.properties
WITHOUT_CLASSIFICATION	// method called by add is synchronized //this is a different model from the one used by the result collector
WITHOUT_CLASSIFICATION	// method is only ever called from one thread at a time // so it's OK to use a static DateFormat
WITHOUT_CLASSIFICATION	// might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	// might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	// might throw an exception, assume this is ignorable
WITHOUT_CLASSIFICATION	// mkdir() returns false if the directory was not created; could be because it exists
WITHOUT_CLASSIFICATION	// most current subclasses can process text
WITHOUT_CLASSIFICATION	// most likely this is because of a certificate error
WITHOUT_CLASSIFICATION	// most recent
WITHOUT_CLASSIFICATION	// most recent // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// move as a child of the next sibling
WITHOUT_CLASSIFICATION	// move to the parent
WITHOUT_CLASSIFICATION	// msgId not available until after send() is called // Note: there is only one admin object which is shared between all threads // interlock with Receiver
WITHOUT_CLASSIFICATION	// must always agree
WITHOUT_CLASSIFICATION	// must be CLOSE or SAVE_CLOSE COMMANDS
WITHOUT_CLASSIFICATION	// must be a "here" document
WITHOUT_CLASSIFICATION	// must be a controller
WITHOUT_CLASSIFICATION	// must be a controller
WITHOUT_CLASSIFICATION	// must be defined
WITHOUT_CLASSIFICATION	// must be done prior to sorting
WITHOUT_CLASSIFICATION	// must be the start of the subtree
WITHOUT_CLASSIFICATION	// must create a new object, // or else end up with a set full of the same Map object
WITHOUT_CLASSIFICATION	// must follow the checkbox setting
WITHOUT_CLASSIFICATION	// myRow = f.nextRow(); // assertEquals(0,myRow); // assertEquals(1,f.getNextRow());
WITHOUT_CLASSIFICATION	// myRow = f.nextRow(); // assertEquals(3,myRow); // assertEquals(0,f.getNextRow());
WITHOUT_CLASSIFICATION	// name cannot be null
WITHOUT_CLASSIFICATION	// name of the file
WITHOUT_CLASSIFICATION	// name of the file
WITHOUT_CLASSIFICATION	// name="sessionid" value="value"
WITHOUT_CLASSIFICATION	// names are Strings
WITHOUT_CLASSIFICATION	// need to check if we are at EOF already
WITHOUT_CLASSIFICATION	// need to clear because the
WITHOUT_CLASSIFICATION	// need to handle four cases: // - string contains name=value // - string contains name= // - string contains name // - empty string
WITHOUT_CLASSIFICATION	// needed for ShutdownClient
WITHOUT_CLASSIFICATION	// needed for measuring sending time
WITHOUT_CLASSIFICATION	// needed for scripts
WITHOUT_CLASSIFICATION	// needs to be accessible from test code // Only contains LDAPArgument entries
WITHOUT_CLASSIFICATION	// needs to be constant for all threads
WITHOUT_CLASSIFICATION	// needs to be initialised
WITHOUT_CLASSIFICATION	// needs to be public for testing
WITHOUT_CLASSIFICATION	// needs to be same time for all threads in the group
WITHOUT_CLASSIFICATION	// never null
WITHOUT_CLASSIFICATION	// never null
WITHOUT_CLASSIFICATION	// new WSDLHelper("http://localhost/WSTest/WSTest.asmx?WSDL"); // new WSDLHelper("http://localhost/AxisWSDL.xml"); //new WSDLHelper("http://localhost:8080/WSMyUpper.wsdl"); //new WSDLHelper("http://localhost:8080/test.wsdl");
WITHOUT_CLASSIFICATION	// new WSDLHelper("http://services.bio.ifi.lmu.de:1046/prothesaurus/services/BiologicalNameService?wsdl");
WITHOUT_CLASSIFICATION	// new search?
WITHOUT_CLASSIFICATION	// no CA key - probably the wrong store type. // cannot continue
WITHOUT_CLASSIFICATION	// no entries in all users, therefore create an empty Map object
WITHOUT_CLASSIFICATION	// no error as default
WITHOUT_CLASSIFICATION	// no error as default
WITHOUT_CLASSIFICATION	// no error as default
WITHOUT_CLASSIFICATION	// no existing file or not valid // Alphanum to avoid issues with command-line quoting // we use same password for both
WITHOUT_CLASSIFICATION	// no existing file or not valid // Alphanum to avoid issues with command-line quoting // we use same password for both
WITHOUT_CLASSIFICATION	// no implementation at this time, since // we bypass the idea of having a console // tool to generate test plans. Instead // I decided to have a sampler that uses // the generator and parser directly
WITHOUT_CLASSIFICATION	// no longer needed
WITHOUT_CLASSIFICATION	// no luck. Ignore this class
WITHOUT_CLASSIFICATION	// no luck. Ignore this class
WITHOUT_CLASSIFICATION	// no need to change the foreground color
WITHOUT_CLASSIFICATION	// no need to divide by 1
WITHOUT_CLASSIFICATION	// no need to look further
WITHOUT_CLASSIFICATION	// no need to process further
WITHOUT_CLASSIFICATION	// no need to process further
WITHOUT_CLASSIFICATION	// no need to reset Locale
WITHOUT_CLASSIFICATION	// no need to specify the port if it is the default
WITHOUT_CLASSIFICATION	// no need to sync as one per instance
WITHOUT_CLASSIFICATION	// no point continuing
WITHOUT_CLASSIFICATION	// no point continuing beyond the end time
WITHOUT_CLASSIFICATION	// no point dividing by 1
WITHOUT_CLASSIFICATION	// no point in checking if we don't have anything to compare against
WITHOUT_CLASSIFICATION	// no point saving an empty list
WITHOUT_CLASSIFICATION	// no space after :
WITHOUT_CLASSIFICATION	// no wrap-round check
WITHOUT_CLASSIFICATION	// nodePath.add(selectedNode.getName());
WITHOUT_CLASSIFICATION	// non-instantiable - static methods only
WITHOUT_CLASSIFICATION	// non-null Comparators don't appear to be used at present
WITHOUT_CLASSIFICATION	// not Replaceable Controller
WITHOUT_CLASSIFICATION	// not a valid header
WITHOUT_CLASSIFICATION	// not a wildcard
WITHOUT_CLASSIFICATION	// not an expression (can't be or isn't), not null.
WITHOUT_CLASSIFICATION	// not an expression (isn't or can't be), not null.
WITHOUT_CLASSIFICATION	// not been set by any child samples
WITHOUT_CLASSIFICATION	// not been set by any child samples
WITHOUT_CLASSIFICATION	// not compatible
WITHOUT_CLASSIFICATION	// not compatible // must follow the checkbox setting
WITHOUT_CLASSIFICATION	// not full test plans
WITHOUT_CLASSIFICATION	// not instantiable
WITHOUT_CLASSIFICATION	// not multipart // Check if the header manager had a content type header // This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	// not needed for HttpClient
WITHOUT_CLASSIFICATION	// not same
WITHOUT_CLASSIFICATION	// not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	// not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	// not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	// not thrown, so need to check here
IMPLEMENTATION	// not yet handled
WITHOUT_CLASSIFICATION	// not yet terminated
WITHOUT_CLASSIFICATION	// not yet terminated // N.B. proc.destroy() is called by the finally clause in the run() method
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// now add the samples to the HashMap
WITHOUT_CLASSIFICATION	// now create the aliases
WITHOUT_CLASSIFICATION	// now draw the bar chart
WITHOUT_CLASSIFICATION	// now evaluate the condition using JavaScript
WITHOUT_CLASSIFICATION	// now set the individual categories (if any)
WITHOUT_CLASSIFICATION	// now temp2 has the lowest of the three components
WITHOUT_CLASSIFICATION	// now that we have stripped the file, we can parse the parameters
WITHOUT_CLASSIFICATION	// now validate the // result
WITHOUT_CLASSIFICATION	// now we create the compiled pattern and // add it to the arraylist
WITHOUT_CLASSIFICATION	// now we create the compiled pattern and // add it to the arraylist
WITHOUT_CLASSIFICATION	// now we iterate through the operations
WITHOUT_CLASSIFICATION	// now we set request method
WITHOUT_CLASSIFICATION	// null means use the default
WITHOUT_CLASSIFICATION	// number Panel
WITHOUT_CLASSIFICATION	// number of nodes
WITHOUT_CLASSIFICATION	// number of non extreme nodes (_m-2)
WITHOUT_CLASSIFICATION	// number of previous matches
WITHOUT_CLASSIFICATION	// number of samples in this entry
WITHOUT_CLASSIFICATION	// number of samples taken
WITHOUT_CLASSIFICATION	// odd chars
WITHOUT_CLASSIFICATION	// one builder for all requests in a thread
WITHOUT_CLASSIFICATION	// one space for blank header // $NON-NLS-1$  // one space for blank header  // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// one space for blank header // $NON-NLS-1$  // one space for blank header  // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// only accept jar files // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// only add Summariser if it can not be shared with the ResultCollector
WITHOUT_CLASSIFICATION	// only allow a drag&drop inside the current jvm
WITHOUT_CLASSIFICATION	// only contains Argument (or HTTPArgument)
WITHOUT_CLASSIFICATION	// only contains Argument (or HTTPArgument)
WITHOUT_CLASSIFICATION	// only contains HTTPFileArg elements
WITHOUT_CLASSIFICATION	// only for use from test code
WITHOUT_CLASSIFICATION	// only http and https are supported
WITHOUT_CLASSIFICATION	// only save unexpired cookies
WITHOUT_CLASSIFICATION	// only try to load the JMX test plan if there is one
WITHOUT_CLASSIFICATION	// open as *A
WITHOUT_CLASSIFICATION	// open as *B
WITHOUT_CLASSIFICATION	// open file
WITHOUT_CLASSIFICATION	// open the stream
WITHOUT_CLASSIFICATION	// opened tags
WITHOUT_CLASSIFICATION	// optional connector name prefix
WITHOUT_CLASSIFICATION	// optional processing instruction for line 2; e.g. // <?xml-stylesheet type="text/xsl" href="../extras/jmeter-results-detail-report_21.xsl"?> // $NON_NLS-1$
WITHOUT_CLASSIFICATION	// or a treenode from the same tree
WITHOUT_CLASSIFICATION	// otherwise proxy String fields may be null
WITHOUT_CLASSIFICATION	// otherwise there's a vgap too many // Work out the anchor paint
WITHOUT_CLASSIFICATION	// otherwise we use "text/xml" as the default //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// out of order
WITHOUT_CLASSIFICATION	// override action behaviour
WITHOUT_CLASSIFICATION	// package access for test code only
WITHOUT_CLASSIFICATION	// package protected so can be accessed by test class
WITHOUT_CLASSIFICATION	// package protected to allow access from test code
WITHOUT_CLASSIFICATION	// package-protected to allow access by unit-test cases
WITHOUT_CLASSIFICATION	// paintIcon
WITHOUT_CLASSIFICATION	// panel.add(signerCheckByFile);
WITHOUT_CLASSIFICATION	// paramTable.setCellSelectionEnabled(true); // paramTable.setPreferredScrollableViewportSize(new Dimension(100, // 70));
WITHOUT_CLASSIFICATION	// paramTable.setRowSelectionAllowed(true); // paramTable.setColumnSelectionAllowed(true);
WITHOUT_CLASSIFICATION	// parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	// parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	// parent classes to check // are inner classes OK?
WITHOUT_CLASSIFICATION	// parse
WITHOUT_CLASSIFICATION	// parse other header lines, looking for Content-Length
WITHOUT_CLASSIFICATION	// part is only needed if we // don't send an .eml-file
WITHOUT_CLASSIFICATION	// path is between idx='pathStartIndex' (inclusive) and // idx='pathEndIndex' (exclusive)
WITHOUT_CLASSIFICATION	// perform the sample
WITHOUT_CLASSIFICATION	// pick up any recent changes from other threads
WITHOUT_CLASSIFICATION	// pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	// pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	// pick up headers if failed to execute the request // httpMethod can be null if method is unexpected
WITHOUT_CLASSIFICATION	// place raw tab in first position (first tab)
WITHOUT_CLASSIFICATION	// prefer values from the other object
WITHOUT_CLASSIFICATION	// prepare highlighter to show text find with search command
WITHOUT_CLASSIFICATION	// preset to "Text" option
WITHOUT_CLASSIFICATION	// preset to default impl
WITHOUT_CLASSIFICATION	// prevent accidental use of is below
WITHOUT_CLASSIFICATION	// prevent any further interrupts
WITHOUT_CLASSIFICATION	// private ButtonGroup actionButtons;
WITHOUT_CLASSIFICATION	// private JMenu menu;
WITHOUT_CLASSIFICATION	// private List workerslist;
WITHOUT_CLASSIFICATION	// private MonitorModel DATA;
WITHOUT_CLASSIFICATION	// private boolean startDoc = false; // private boolean endDoc = false;
WITHOUT_CLASSIFICATION	// private method to allow AsyncSample to reset the value without performing checks
WITHOUT_CLASSIFICATION	// private method to allow AsyncSample to reset the value without performing checks
WITHOUT_CLASSIFICATION	// private static StringProperty defaultProperty = new StringProperty();
WITHOUT_CLASSIFICATION	// private static final String LABEL_DEFAULT = "JavaTest";
WITHOUT_CLASSIFICATION	// private static final String ROOTDN = "rootDn"; // private static final String TEST = "tesT"; // private static String testValue="NNNN";
WITHOUT_CLASSIFICATION	// private static final int LIMIT_STR_SIZE = 100; // private boolean isRoot;
WITHOUT_CLASSIFICATION	// private void setFailureCount(long count) // { // this.failureCount = count; // }
WITHOUT_CLASSIFICATION	// private void setSuccessCount(long count) // { // this.successCount = count; // }
WITHOUT_CLASSIFICATION	// probably Avalon format
WITHOUT_CLASSIFICATION	// probably does not need to be synch (always accessed through ThreadLocal?) // give access to Test code
WITHOUT_CLASSIFICATION	// probably needed to avoid NPEs with GUIs
WITHOUT_CLASSIFICATION	// probably not possible, but check anyway
WITHOUT_CLASSIFICATION	// probably should not happen
WITHOUT_CLASSIFICATION	// process special keys // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// process the sampler result
WITHOUT_CLASSIFICATION	// property values are strings
WITHOUT_CLASSIFICATION	// protected fields: JMeterToolBar class can be use to create another toolbar (plugin, etc.)     //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// protocol://[user:pass@]host:[port]
WITHOUT_CLASSIFICATION	// public static final int THREAD_GROUP = 1;
WITHOUT_CLASSIFICATION	// put a timeout if tasks couldn't terminate
WITHOUT_CLASSIFICATION	// put a warning if tika-app.jar missing (or some dependencies in only tika-core|parsers packages are using) // $NON-NLS-1$ $NON-NLS-2$ 
WITHOUT_CLASSIFICATION	// put the gui object back // to the way it was.
WITHOUT_CLASSIFICATION	// put the gui object back // to the way it was.
WITHOUT_CLASSIFICATION	// quieten Findbugs // default - do nothing
WITHOUT_CLASSIFICATION	// ramp-up delay (except first)
WITHOUT_CLASSIFICATION	// re-use node association logic
WITHOUT_CLASSIFICATION	// read 1st line // read 5 lines + restart to file begin // line 2 // line 3 // line 4 // line 5 // return to 2nd line (first line is names)
WITHOUT_CLASSIFICATION	// read all sortedResults into memory so we can guarantee ordering
WITHOUT_CLASSIFICATION	// read first line and forget
WITHOUT_CLASSIFICATION	// read first line and forget
WITHOUT_CLASSIFICATION	// read first line and forget
WITHOUT_CLASSIFICATION	// read one line at a time using // BufferedReader
WITHOUT_CLASSIFICATION	// read one line at a time using // BufferedReader
WITHOUT_CLASSIFICATION	// read-only after class init
WITHOUT_CLASSIFICATION	// reads to end of line OR end of file
WITHOUT_CLASSIFICATION	// record headers size to allow HTTPSampleResult.getBytes() with different options // $NON-NLS-1$ $NON-NLS-2$ // add 2 for a '\r\n' at end of headers (before data) 
WITHOUT_CLASSIFICATION	// record some sizes to allow HTTPSampleResult.getBytes() with different options
WITHOUT_CLASSIFICATION	// record some sizes to allow HTTPSampleResult.getBytes() with different options
WITHOUT_CLASSIFICATION	// records the existance of an equal sign
WITHOUT_CLASSIFICATION	// recursive call
WITHOUT_CLASSIFICATION	// refname has already been set to the default (if present)
WITHOUT_CLASSIFICATION	// regex //$NON-NLS-1$ // template //$NON-NLS-1$ // which match //$NON-NLS-1$ // between text //$NON-NLS-1$ // default text //$NON-NLS-1$ // output variable name //$NON-NLS-1$ // input variable //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// register content handler
WITHOUT_CLASSIFICATION	// register error handler
WITHOUT_CLASSIFICATION	// regular expression used to match against embedded resource URLs
WITHOUT_CLASSIFICATION	// regular expression used to match against embedded resource URLs
WITHOUT_CLASSIFICATION	// reload after adding alias
WITHOUT_CLASSIFICATION	// reload to pick up new aliases // reloading is very quick compared with creating an entry currently
WITHOUT_CLASSIFICATION	// remap the class name
WITHOUT_CLASSIFICATION	// remove any port specification // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// remove any port specification // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// remove any single matches
WITHOUT_CLASSIFICATION	// remove docs-only jars
WITHOUT_CLASSIFICATION	// remove the g0,g1...gn vars
WITHOUT_CLASSIFICATION	// remove the package prefix
WITHOUT_CLASSIFICATION	// remove the remaining _gn vars
WITHOUT_CLASSIFICATION	// remove unneeded nodes
WITHOUT_CLASSIFICATION	// removes all entries
WITHOUT_CLASSIFICATION	// renamed from clear
WITHOUT_CLASSIFICATION	// replace (update) attribute //$NON-NLS-1$ //$NON-NLS-2$ // add mobile phone number attribute //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// replace _xAxisTitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	// replace _xAxisTitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	// replace all backslash with double backslash
WITHOUT_CLASSIFICATION	// replace all backslash with double backslash
WITHOUT_CLASSIFICATION	// reponse code doesn't really apply, since // the soap driver doesn't provide a // response code
WITHOUT_CLASSIFICATION	// required for unit tests
WITHOUT_CLASSIFICATION	// requires JMeterTreeNode
WITHOUT_CLASSIFICATION	// reset
WITHOUT_CLASSIFICATION	// reset colors index
WITHOUT_CLASSIFICATION	// reset for reuse
WITHOUT_CLASSIFICATION	// reset for reuse
WITHOUT_CLASSIFICATION	// reset in case was set previously
WITHOUT_CLASSIFICATION	// reset previous result
WITHOUT_CLASSIFICATION	// reset previous result
WITHOUT_CLASSIFICATION	// reset the bsh.Interpreter before each execution
WITHOUT_CLASSIFICATION	// reset the bsh.Interpreter before each execution
WITHOUT_CLASSIFICATION	// reset the paint counter
WITHOUT_CLASSIFICATION	// reset the value
WITHOUT_CLASSIFICATION	// response message label
WITHOUT_CLASSIFICATION	// restore last selected tab
WITHOUT_CLASSIFICATION	// restore tabbed pane parsed if needed
WITHOUT_CLASSIFICATION	// result.setResponseData - not set
WITHOUT_CLASSIFICATION	// result.setResponseData - not set
WITHOUT_CLASSIFICATION	// rethrow other errors
WITHOUT_CLASSIFICATION	// return JMeterContextService.getContext().getCurrentSampler().getName();
WITHOUT_CLASSIFICATION	// return all the associated counts together
WITHOUT_CLASSIFICATION	// return label
WITHOUT_CLASSIFICATION	// return new Dimension(width, 400);
WITHOUT_CLASSIFICATION	// return the absolutePath of the file
WITHOUT_CLASSIFICATION	// return the current value (don't forget the prefix!)
WITHOUT_CLASSIFICATION	// return the pagesize divided by 1024 to get kilobytes
WITHOUT_CLASSIFICATION	// return with an error
WITHOUT_CLASSIFICATION	// return with an error
WITHOUT_CLASSIFICATION	// return with no error
WITHOUT_CLASSIFICATION	// return with no error
WITHOUT_CLASSIFICATION	// returns empty array for null
WITHOUT_CLASSIFICATION	// returns false if directory already exists, so need to check again
WITHOUT_CLASSIFICATION	// returns false if the file did not contain the terminator
WITHOUT_CLASSIFICATION	// returns null if nothing on queue currently
WITHOUT_CLASSIFICATION	// reuse documentation //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// reversed compare allows for null
WITHOUT_CLASSIFICATION	// revert
WITHOUT_CLASSIFICATION	// revert to previous behaviour //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// rounded seconds // No point displaying decimals (less than 1% error) // decimal would be zero
WITHOUT_CLASSIFICATION	// rounds!
WITHOUT_CLASSIFICATION	// run test in batch mode
WITHOUT_CLASSIFICATION	// run threadFinished only if Destination setup on each sample (stop Listen queue)
WITHOUT_CLASSIFICATION	// run threadStarted only if Destination setup on each sample
WITHOUT_CLASSIFICATION	// running number
WITHOUT_CLASSIFICATION	// safer to start afresh
WITHOUT_CLASSIFICATION	// same as Parent
WITHOUT_CLASSIFICATION	// same as above
WITHOUT_CLASSIFICATION	// same code as for default JMeter class
WITHOUT_CLASSIFICATION	// sample all resources with threadpool
WITHOUT_CLASSIFICATION	// sampleOccurred is called from multiple threads; not safe to write from multiple threads. // also decouples the file IO from sample generation
WITHOUT_CLASSIFICATION	// samplerData attributes. Must be unique. Keep sorted by string value. // Ensure the Listener documentation is updated when new attributes are added //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// save leading text
WITHOUT_CLASSIFICATION	// save our local copy
WITHOUT_CLASSIFICATION	// save search position
WITHOUT_CLASSIFICATION	// save the agent for next time round
WITHOUT_CLASSIFICATION	// save the current count
WITHOUT_CLASSIFICATION	// save the global copy
WITHOUT_CLASSIFICATION	// save the latency
WITHOUT_CLASSIFICATION	// saved copy of first line for error reports
WITHOUT_CLASSIFICATION	// saves current position in data List
WITHOUT_CLASSIFICATION	// script (if file not provided)
WITHOUT_CLASSIFICATION	// script (if file not provided)
WITHOUT_CLASSIFICATION	// script area
WITHOUT_CLASSIFICATION	// script area
WITHOUT_CLASSIFICATION	// script can also use setResponseData() so long as it returns null
WITHOUT_CLASSIFICATION	// script file name (if present)
WITHOUT_CLASSIFICATION	// script file name (if present)
WITHOUT_CLASSIFICATION	// second, if the tag was a composite tag, // recursively parse its children.
WITHOUT_CLASSIFICATION	// second, if the tag was a composite tag, // recursively parse its children.
WITHOUT_CLASSIFICATION	// see https://developer.mozilla.org/en/HTTP_Caching_FAQ // see http://www.ietf.org/rfc/rfc2616.txt#13.2.4 
WITHOUT_CLASSIFICATION	// see if this works // it did not, let's try some other formats
WITHOUT_CLASSIFICATION	// seek the good interval for t and get the piece of curve on it
WITHOUT_CLASSIFICATION	// select the node
WITHOUT_CLASSIFICATION	// sends the result to the visualiser // updates the model used for sending e-mails
WITHOUT_CLASSIFICATION	// server        
WITHOUT_CLASSIFICATION	// server log file
WITHOUT_CLASSIFICATION	// server log file
WITHOUT_CLASSIFICATION	// set from field and subject
WITHOUT_CLASSIFICATION	// set properties using JAF
WITHOUT_CLASSIFICATION	// set retry count
WITHOUT_CLASSIFICATION	// set start and end time
WITHOUT_CLASSIFICATION	// set stop flag // interrupt sampler if possible
WITHOUT_CLASSIFICATION	// set the Y Axis to round
WITHOUT_CLASSIFICATION	// set the auth. thanks to KiYun Roe for contributing the patch // I cleaned up the patch slightly. 5-26-05
WITHOUT_CLASSIFICATION	// set the endtime for the Thread
WITHOUT_CLASSIFICATION	// set the endtime for the Thread // Duration is in seconds
WITHOUT_CLASSIFICATION	// set the required variables
WITHOUT_CLASSIFICATION	// set the response defaults
WITHOUT_CLASSIFICATION	// set the scheduler to start
WITHOUT_CLASSIFICATION	// set the start time for the Thread // Duration is in seconds
WITHOUT_CLASSIFICATION	// set the start time for the Thread // Duration is in seconds
WITHOUT_CLASSIFICATION	// set the window visible immediately
WITHOUT_CLASSIFICATION	// set this false to suppress some items for use in HTTP Request defaults
WITHOUT_CLASSIFICATION	// set to start of string
WITHOUT_CLASSIFICATION	// setAsText failed: not valid
WITHOUT_CLASSIFICATION	// setAsText succeeded: valid
WITHOUT_CLASSIFICATION	// setDone(true);
WITHOUT_CLASSIFICATION	// setFunctionalMode(false); // setSerialized(false);
WITHOUT_CLASSIFICATION	// sets active = true
WITHOUT_CLASSIFICATION	// setup bottom tabs, first Raw, second Parsed //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// setup drawing area
WITHOUT_CLASSIFICATION	// short circuit traversal when found
WITHOUT_CLASSIFICATION	// should // detect // trailing // option
WITHOUT_CLASSIFICATION	// should be a user provided class name
WITHOUT_CLASSIFICATION	// should be quicker to find the editors if they are registered.
WITHOUT_CLASSIFICATION	// should header be saved with the data? //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// should never fail // See if we can actually find the object // Should never happen
WITHOUT_CLASSIFICATION	// should never get to here when stringIndex != 0
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// should never happen...
WITHOUT_CLASSIFICATION	// should not be able to write to it ...
WITHOUT_CLASSIFICATION	// should not be stored
WITHOUT_CLASSIFICATION	// should not happen
WITHOUT_CLASSIFICATION	// should not happen
WITHOUT_CLASSIFICATION	// should not happen
WITHOUT_CLASSIFICATION	// should not happen
WITHOUT_CLASSIFICATION	// should not happen
WITHOUT_CLASSIFICATION	// should not run any children // should match the default entry
WITHOUT_CLASSIFICATION	// should perhaps be log.warn, but this causes the client-server test to fail
WITHOUT_CLASSIFICATION	// should probably come from the setup dialog
WITHOUT_CLASSIFICATION	// should remote engines be stopped at end of non-GUI test?
WITHOUT_CLASSIFICATION	// should throw exception back to caller
WITHOUT_CLASSIFICATION	// should use original object
WITHOUT_CLASSIFICATION	// should we return original value?
WITHOUT_CLASSIFICATION	// shouldn't draw negative values
WITHOUT_CLASSIFICATION	// show the classname to the user
WITHOUT_CLASSIFICATION	// show the grid lines, to turn it off, set it to zero
WITHOUT_CLASSIFICATION	// show what we did manage to retrieve
WITHOUT_CLASSIFICATION	// silent error, consider the curve is constant outside its range
WITHOUT_CLASSIFICATION	// skip expensive processing if it cannot apply // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// so we break the loops in SampleWithListener and SampleWithReceive
WITHOUT_CLASSIFICATION	// so we can detect it
WITHOUT_CLASSIFICATION	// so we can detect it
WITHOUT_CLASSIFICATION	// so we don't generate chunked encoding
WITHOUT_CLASSIFICATION	// sort the selected tree path by row
WITHOUT_CLASSIFICATION	// space between borders and text
WITHOUT_CLASSIFICATION	// spaces after :
WITHOUT_CLASSIFICATION	// special handling
WITHOUT_CLASSIFICATION	// special handling
WITHOUT_CLASSIFICATION	// special value
WITHOUT_CLASSIFICATION	// start in new state
WITHOUT_CLASSIFICATION	// start off with a merged object as a copy of the local object
WITHOUT_CLASSIFICATION	// start/end index default value for string getters and setters
WITHOUT_CLASSIFICATION	// starts empty
WITHOUT_CLASSIFICATION	// static only
WITHOUT_CLASSIFICATION	// still running at this point, i.e. setUp was not cancelled // for each thread group
WITHOUT_CLASSIFICATION	// stop double-reporting
WITHOUT_CLASSIFICATION	// store is faulty, we need to recreate it // if cert is not valid, flag up to recreate it
WITHOUT_CLASSIFICATION	// store is faulty, we need to recreate it // if cert is not valid, flag up to recreate it
WITHOUT_CLASSIFICATION	// store the following character
WITHOUT_CLASSIFICATION	// store the new statistical result collector
WITHOUT_CLASSIFICATION	// store the operator
WITHOUT_CLASSIFICATION	// strPathsOrJars - pathnames or jarfiles to search for classes // classNames - required parent class(es) or annotations // $NON-NLS-1$ // innerClasses - should we include inner classes? // contains - classname should contain this string // Ignore the classes which are specific to the reporting tool // $NON-NLS-1$ // notContains - classname should not contain this string // annotations - true if classnames are annotations
WITHOUT_CLASSIFICATION	// string is not empty
WITHOUT_CLASSIFICATION	// strip the -
WITHOUT_CLASSIFICATION	// strip the - // -- sequence .. it can either mean a change of state // to STATE_NO_OPTIONS or else a long option
WITHOUT_CLASSIFICATION	// strip the null
WITHOUT_CLASSIFICATION	// succeeded
WITHOUT_CLASSIFICATION	// successOnly and errorOnly cannot both be set
WITHOUT_CLASSIFICATION	// super-class does not use generics
WITHOUT_CLASSIFICATION	// super-class does not use generics
WITHOUT_CLASSIFICATION	// super.mergeIn(element);
WITHOUT_CLASSIFICATION	// superclass does not support types
WITHOUT_CLASSIFICATION	// superclass does not support types
WITHOUT_CLASSIFICATION	// superclass does not support types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types 
WITHOUT_CLASSIFICATION	// superclass is not typed
WITHOUT_CLASSIFICATION	// surl can be null if read from a file
WITHOUT_CLASSIFICATION	// synch is probably not needed as only called before run starts
WITHOUT_CLASSIFICATION	// synchronize with FixedQueueExecutor
WITHOUT_CLASSIFICATION	// synchronized(sampleStore)
WITHOUT_CLASSIFICATION	// synchronized(sampleStore)
WITHOUT_CLASSIFICATION	// table.getTableHeader().setReorderingAllowed(false);
WITHOUT_CLASSIFICATION	// take copy so cannot get NPE
WITHOUT_CLASSIFICATION	// temp test case for exploring settings
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// templates i
WITHOUT_CLASSIFICATION	// test cases for making Url, and exercise method // addArgument(String name,String value,String metadata)
WITHOUT_CLASSIFICATION	// test cases for making Url, and exercise method // parseArguments(String queryString)
WITHOUT_CLASSIFICATION	// test code, intentional
WITHOUT_CLASSIFICATION	// test code, intentional
WITHOUT_CLASSIFICATION	// test code, intentional
WITHOUT_CLASSIFICATION	// test code, intentional
WITHOUT_CLASSIFICATION	// test invalid byte arrays
WITHOUT_CLASSIFICATION	// testLoadAndSave test files
WITHOUT_CLASSIFICATION	// text backup
WITHOUT_CLASSIFICATION	// the DEFAULT class // Convert int to Integer etc:
WITHOUT_CLASSIFICATION	// the Method objects for setUp (@Before) and tearDown (@After) methods // Will be null if not provided or not required
WITHOUT_CLASSIFICATION	// the child to be removed will always be 0 'cos as the nodes are // removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	// the child to be removed will always be 0 'cos as the nodes are // removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	// the copy is disabled
WITHOUT_CLASSIFICATION	// the copying thread won't generally detect EOF
WITHOUT_CLASSIFICATION	// the createTest() method creates an extra context which needs to be closed
WITHOUT_CLASSIFICATION	// the data implementation
WITHOUT_CLASSIFICATION	// the document should only have one service node // if it doesn't it may not work!
WITHOUT_CLASSIFICATION	// the equations
WITHOUT_CLASSIFICATION	// the host has a key already
WITHOUT_CLASSIFICATION	// the host matches a domain; use its key
WITHOUT_CLASSIFICATION	// the keystore for use by the Proxy
WITHOUT_CLASSIFICATION	// the max-age directive overrides the Expires header,
WITHOUT_CLASSIFICATION	// the number of nodes is defined by the length of r
WITHOUT_CLASSIFICATION	// the number of non extreme nodes is the number of intervals // minus 1, i.e. the length of r minus 2
WITHOUT_CLASSIFICATION	// the other object has a new value to be added to the merged
WITHOUT_CLASSIFICATION	// the other object has an empty value, so remove this value from the merged object
WITHOUT_CLASSIFICATION	// the polynomial calculation is done by the (fast) Euler method
WITHOUT_CLASSIFICATION	// the signer certificate
WITHOUT_CLASSIFICATION	// the string so far
WITHOUT_CLASSIFICATION	// the test plan has to have more than 200 samples // for it to generate half way decent distribution // graph. the larger the sample, the better the // results.
WITHOUT_CLASSIFICATION	// the tree accepts a jmx file 
WITHOUT_CLASSIFICATION	// the upper limit of the curve range belongs by definition // to the last interval
WITHOUT_CLASSIFICATION	// the url matches the last redirect
WITHOUT_CLASSIFICATION	// then we need to download the binary
WITHOUT_CLASSIFICATION	// then we need to download the binary
WITHOUT_CLASSIFICATION	// then we need to download the binary
WITHOUT_CLASSIFICATION	// there is also a javax.swing.text.Document class.
WITHOUT_CLASSIFICATION	// there is no variable name
WITHOUT_CLASSIFICATION	// there is no variable name
WITHOUT_CLASSIFICATION	// there should only be one soap:operation node per operation
WITHOUT_CLASSIFICATION	// there should only be one token // that starts with slash character
WITHOUT_CLASSIFICATION	// they are always last
WITHOUT_CLASSIFICATION	// this is not the result of a redirect // so break the chain
WITHOUT_CLASSIFICATION	// this is only possible for 3rd party controllers by default
WITHOUT_CLASSIFICATION	// this is our first sample, set the start time to current timestamp
WITHOUT_CLASSIFICATION	// this is our first sample, set the start time to current timestamp
WITHOUT_CLASSIFICATION	// this may need mangling due to peeks
WITHOUT_CLASSIFICATION	// this method assumes UTF-8 input data
WITHOUT_CLASSIFICATION	// this occurs when id == 0 and user has not supplied a descriptor // for arguments
WITHOUT_CLASSIFICATION	// this probably cannot happen
WITHOUT_CLASSIFICATION	// this should be externalized to the properties
WITHOUT_CLASSIFICATION	// this should never happen // anyway, we'll continue with url2 set to null.
WITHOUT_CLASSIFICATION	// this("Test Plan"); // setFunctionalMode(false); // setSerialized(false);
WITHOUT_CLASSIFICATION	// this.DATA = null; // this.DATA = stat;
WITHOUT_CLASSIFICATION	// this.READER = new BufferedReader(new // FileReader(this.SOURCE)); // parse(this.READER,el);
WITHOUT_CLASSIFICATION	// this.READER = new BufferedReader(new // FileReader(this.SOURCE)); // parse(this.READER,el);
WITHOUT_CLASSIFICATION	// this.graph.clear();
WITHOUT_CLASSIFICATION	// this.startDoc = false; // this.endDoc = true;
WITHOUT_CLASSIFICATION	// this.startDoc = true; // Reset all work variables so reusing the instance starts afresh.
WITHOUT_CLASSIFICATION	// this.updateUI();
WITHOUT_CLASSIFICATION	// threadContext is not thread-safe, so keep within thread
WITHOUT_CLASSIFICATION	// thresholds
WITHOUT_CLASSIFICATION	// thrown by Derby JDBC (at least) if there are no "?" markers in statement
WITHOUT_CLASSIFICATION	// throws HeadlessException
WITHOUT_CLASSIFICATION	// throws IOE, ME
WITHOUT_CLASSIFICATION	// throws IOE, ME
WITHOUT_CLASSIFICATION	// throws ME
WITHOUT_CLASSIFICATION	// throws ME
WITHOUT_CLASSIFICATION	// throws ME
WITHOUT_CLASSIFICATION	// throws ME // throws IOE, ME
WITHOUT_CLASSIFICATION	// tidy up any unused entries
WITHOUT_CLASSIFICATION	// timeout to retrieve wsdl when server not response
WITHOUT_CLASSIFICATION	// tmp inputstream needs to have a good counting
WITHOUT_CLASSIFICATION	// to restore last selected tab (better user-friendly)
WITHOUT_CLASSIFICATION	// to restore last tab used
WITHOUT_CLASSIFICATION	// to save last select tab (raw/parsed)
WITHOUT_CLASSIFICATION	// track where tags start ...
WITHOUT_CLASSIFICATION	// trailing space
WITHOUT_CLASSIFICATION	// trailing string is not empty
WITHOUT_CLASSIFICATION	// transient Perl5Compiler compiler = new Perl5Compiler(); // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// treat the same as EOF
WITHOUT_CLASSIFICATION	// treats last line specially // Last line // Allow for missing terminator
WITHOUT_CLASSIFICATION	// tree1.add("a3");
WITHOUT_CLASSIFICATION	// try again
WITHOUT_CLASSIFICATION	// try to process as many as possible
WITHOUT_CLASSIFICATION	// tweak diff HC3 vs HC4
WITHOUT_CLASSIFICATION	// tweak.
WITHOUT_CLASSIFICATION	// tweak.
WITHOUT_CLASSIFICATION	// two delimiters in a row; add an empty String
WITHOUT_CLASSIFICATION	// two jars same version // two jars same version
WITHOUT_CLASSIFICATION	// uninstantiable
WITHOUT_CLASSIFICATION	// unknown column name
WITHOUT_CLASSIFICATION	// updateMainMenu(((JMeterGUIComponent) // getCurrentNode().getUserObject()).createPopupMenu());
WITHOUT_CLASSIFICATION	// updateMainMenu(((JMeterGUIComponent) // getCurrentNode().getUserObject()).createPopupMenu());
WITHOUT_CLASSIFICATION	// use Math.round () instead of simple (long) to provide correct value rounding
WITHOUT_CLASSIFICATION	// use latency to measure connection time
WITHOUT_CLASSIFICATION	// use later
WITHOUT_CLASSIFICATION	// use negative condition so missing (null) value is treated as FALSE
WITHOUT_CLASSIFICATION	// use null for no expiry
WITHOUT_CLASSIFICATION	// use null for no expiry
WITHOUT_CLASSIFICATION	// use the other object's value
WITHOUT_CLASSIFICATION	// used by AbstractReportGui
WITHOUT_CLASSIFICATION	// used by HttpTestSampleGui
WITHOUT_CLASSIFICATION	// used by TableEditor
WITHOUT_CLASSIFICATION	// used by TableEditor
WITHOUT_CLASSIFICATION	// used by TestAnchorModifier // used by TestAnchorModifier // used by TestSaveService
WITHOUT_CLASSIFICATION	// used for handling interrupt
WITHOUT_CLASSIFICATION	// used for interrupting the sampler
WITHOUT_CLASSIFICATION	// used to hold per-thread singleton connection pools
WITHOUT_CLASSIFICATION	// used when postData is pure xml (eg. an xml-rpc call) or for PUT
WITHOUT_CLASSIFICATION	// user-provided keystore // keystore generated by JMeter; single entry
WITHOUT_CLASSIFICATION	// user-specified key
WITHOUT_CLASSIFICATION	// username / password incorrect
WITHOUT_CLASSIFICATION	// usesUNC
WITHOUT_CLASSIFICATION	// value is a List of Strings
WITHOUT_CLASSIFICATION	// value is of type Collection<JMeterProperty>
WITHOUT_CLASSIFICATION	// value is the correct class
WITHOUT_CLASSIFICATION	// value to return at EOF //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// value was not provided, and this is allowed
WITHOUT_CLASSIFICATION	// values to be masked must be set in the WebApp to "*"
WITHOUT_CLASSIFICATION	// varName keeps its value and sum has not taken  // into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	// varName keeps its value and sum has not taken  // into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	// variable, or function with no parameter list
WITHOUT_CLASSIFICATION	// variables are unlikely to contain spaces, so most likely a translation
WITHOUT_CLASSIFICATION	// variables maintained by server code // @GuardedBy("sampleStore") // maintain separate count of samples for speed
WITHOUT_CLASSIFICATION	// variables used while parsing options.
WITHOUT_CLASSIFICATION	// vars can be null if run from TestPlan
WITHOUT_CLASSIFICATION	// vars will be null on Test Plan
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// verify if regex groups exists
WITHOUT_CLASSIFICATION	// verify t belongs to the curve (range [0, _m-1])
WITHOUT_CLASSIFICATION	// view only
WITHOUT_CLASSIFICATION	// volatile needed to ensure safe publication
WITHOUT_CLASSIFICATION	// wait for Post threads to stop
WITHOUT_CLASSIFICATION	// wait for server to stop
WITHOUT_CLASSIFICATION	// wait for server to stop
WITHOUT_CLASSIFICATION	// was type, but that caused FindBugs warning
WITHOUT_CLASSIFICATION	// we add the entry
WITHOUT_CLASSIFICATION	// we add the entry
WITHOUT_CLASSIFICATION	// we also provide the resource bundle
WITHOUT_CLASSIFICATION	// we are capturing output // Default charset is probably appropriate here.
WITHOUT_CLASSIFICATION	// we call parse with 1 to get only one. // this also means if we change the implementation // to use 2, it would use every other entry and // so on. Not that it is really useful, but a // person could use it that way if they have a // huge gigabyte log file and they only want to // use a quarter of the entries.
WITHOUT_CLASSIFICATION	// we can only move a single node
WITHOUT_CLASSIFICATION	// we check the class type above
WITHOUT_CLASSIFICATION	// we check the count to see if we have exceeded // the number of lines to parse. There's no way // to know where to stop in the file. Therefore // we use break to escape the while loop when // we've reached the count.
WITHOUT_CLASSIFICATION	// we check the count to see if we have exceeded // the number of lines to parse. There's no way // to know where to stop in the file. Therefore // we use break to escape the while loop when // we've reached the count.
WITHOUT_CLASSIFICATION	// we check the input tag type for image
WITHOUT_CLASSIFICATION	// we check the input tag type for image
WITHOUT_CLASSIFICATION	// we check the input tag type for image
WITHOUT_CLASSIFICATION	// we check to see if the lastSelectedPath is null // after we clear, it would return null
WITHOUT_CLASSIFICATION	// we check to see if the proxy host and port are set
WITHOUT_CLASSIFICATION	// we clean the line to get // rid of extra stuff
WITHOUT_CLASSIFICATION	// we clean up the ResultCollector to make sure there's // no slow leaks
WITHOUT_CLASSIFICATION	// we created the document
WITHOUT_CLASSIFICATION	// we do a quick check to see if any // filters are set. If not we just // return false to be efficient.
WITHOUT_CLASSIFICATION	// we don't want interrupt to try disconnection again
WITHOUT_CLASSIFICATION	// we don't want interrupt to try disconnection again // We don't want to continue using this connection, even if KeepAlive is set // May not exist
WITHOUT_CLASSIFICATION	// we don't; use the default parser
WITHOUT_CLASSIFICATION	// we failed to add the element first time
WITHOUT_CLASSIFICATION	// we filter the line first, before we try // to separate the URL into file and // parameters.
WITHOUT_CLASSIFICATION	// we have a file, read and process it
WITHOUT_CLASSIFICATION	// we have a file, read and process it
WITHOUT_CLASSIFICATION	// we have a match
WITHOUT_CLASSIFICATION	// we have a name
WITHOUT_CLASSIFICATION	// we have a pattern and the URL does not match, so skip it
WITHOUT_CLASSIFICATION	// we have a single character; could be a token // it is a token
WITHOUT_CLASSIFICATION	// we have a variable name
WITHOUT_CLASSIFICATION	// we have at least one potential address
WITHOUT_CLASSIFICATION	// we have to check and make sure the constructor is // accessible. if we didn't it would throw an exception // and cause a NPE.
WITHOUT_CLASSIFICATION	// we need to use up the int now
WITHOUT_CLASSIFICATION	// we only put HTTPFileArgs in it
WITHOUT_CLASSIFICATION	// we provide the MIME type here
WITHOUT_CLASSIFICATION	// we return the original string
WITHOUT_CLASSIFICATION	// we saw a delimiter last time // so add the default
WITHOUT_CLASSIFICATION	// we set the classpath
WITHOUT_CLASSIFICATION	// we should log a warning, but allow the test to keep running
WITHOUT_CLASSIFICATION	// we should make this configurable eventually
WITHOUT_CLASSIFICATION	// we should make this configurable eventually
WITHOUT_CLASSIFICATION	// we sort the objects
WITHOUT_CLASSIFICATION	// we start to iterate through the elements
WITHOUT_CLASSIFICATION	// we start to iterate through the elements
WITHOUT_CLASSIFICATION	// we stay within the same parent node
WITHOUT_CLASSIFICATION	// we stay within the same parent node
WITHOUT_CLASSIFICATION	// we tokenize using double quotes. this means // for tomcat we should have 3 tokens if there // isn't any additional information in the logs
WITHOUT_CLASSIFICATION	// we totally failed to stop the test
WITHOUT_CLASSIFICATION	// we want to return the context that is actually in the map // if it's the first put we will have a null result
WITHOUT_CLASSIFICATION	// we're sure that there is at least one file because of // getSendFileAsPostBody method's return value.
WITHOUT_CLASSIFICATION	// we're sure that there is one file because of // getSendFileAsPostBody method's return value.
WITHOUT_CLASSIFICATION	// we've tried ...
WITHOUT_CLASSIFICATION	// what column // is wanted?
WITHOUT_CLASSIFICATION	// when Enter is pressed, search start
WITHOUT_CLASSIFICATION	// while not EOF // EOF (or end of string) so collect any remaining data
WITHOUT_CLASSIFICATION	// will always be within range of an int: as must be < width
WITHOUT_CLASSIFICATION	// will be host:port for CONNECT
WITHOUT_CLASSIFICATION	// will be null for HEAD
WITHOUT_CLASSIFICATION	// will be null for HEAD
WITHOUT_CLASSIFICATION	// will be null if function is used on TestPlan
WITHOUT_CLASSIFICATION	// will be the 3rd option, which is not checked specifically
WITHOUT_CLASSIFICATION	// will generate Divide by zero error
WITHOUT_CLASSIFICATION	// will generate Divide by zero error
WITHOUT_CLASSIFICATION	// will only contain Argument or HTTPArgument
WITHOUT_CLASSIFICATION	// will revert to last valid value if invalid
WITHOUT_CLASSIFICATION	// will use chunked encoding
WITHOUT_CLASSIFICATION	// work out the total size
WITHOUT_CLASSIFICATION	// works OK even if ContentEncoding is null
WITHOUT_CLASSIFICATION	// wrap read() methods to track output buffer
WITHOUT_CLASSIFICATION	// wrap-round check
WITHOUT_CLASSIFICATION	// wrap-round check
WITHOUT_CLASSIFICATION	// write a OK reponse to browser, to engage SSL exchange // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// write output to file
WITHOUT_CLASSIFICATION	// write to file
WITHOUT_CLASSIFICATION	// wrong
WITHOUT_CLASSIFICATION	// ~a tic every 50 px
WITHOUT_CLASSIFICATION	//"" is not the same as no realm
WITHOUT_CLASSIFICATION	//"<?xml "
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	//$NON-NLS-1
WITHOUT_CLASSIFICATION	//$NON-NLS-1
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ 
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ 
WITHOUT_CLASSIFICATION	//$NON-NLS-1$         //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$  // Test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	//$NON-NLS-1$  //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ (Flash Media Manifest)
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ - all threads // All threads
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // $NON-NLS1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // $NON-NLS1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // Concatenate query post if exists
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // Ensure variable has been provided
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // See TestElementPropertyConverter
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // Set default SAVE menu item to disabled since the default node that // is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // Set params as a single line // $NON-NLS-1$ // and set as an array //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // We have a default
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // We only support chunked transfer encoding
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // change the classname drop down
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // file_merge.setAccelerator( // KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_MASK)); // Set default SAVE menu item to disabled since the default node that // is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // return unknown action names for display error msg
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // select last tab 
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // so we can add them again in init
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ // Check if it is form data //$NON-NLS-1$ // Get the form field name //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ // These are the names of the get/set methods
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ // modal dialog box
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ // reduce font
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$        
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$  //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // Previously mis-spelt as theadName //$NON-NLS-1$ //$NON-NLS-1$ (may be null) //$NON-NLS-1$ (may be null) //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // Previously mis-spelt as theadName //$NON-NLS-1$ //$NON-NLS-1$ (may be null) //$NON-NLS-1$ (may be null) //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // removed expiration because it's just an annoyance for static cookies
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$  //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //- JMX file attribut names - do not change!
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //-- End of names used in JMX files
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //-- JMX tag values
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ default: bottom //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ default: normal
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ key for HashMap
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ key for HashMap
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	//$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$;
WITHOUT_CLASSIFICATION	//$NON-NLS-1$;
WITHOUT_CLASSIFICATION	//$NON-NLS-1$;
WITHOUT_CLASSIFICATION	//$NON-NLS-1$;
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$ // don't match the empty category
WITHOUT_CLASSIFICATION	//$NON_NLS-1$ //$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$ //$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$ //$NON_NLS-1$
WITHOUT_CLASSIFICATION	//+ JMX attributes - do not change
WITHOUT_CLASSIFICATION	//+ JMX attributes - do not change // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //- JMX
WITHOUT_CLASSIFICATION	//+ JMX attributes - do not change the values // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//+ JMX attributes, do not change values // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //-
WITHOUT_CLASSIFICATION	//+ JMX entries - do not change the string values
WITHOUT_CLASSIFICATION	//+ JMX field names - do not change values //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//+ JMX file attribut names - do not change! //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//+ JMX file attributes // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//+ JMX file attributes // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //- JMX file attributes
WITHOUT_CLASSIFICATION	//+ JMX file attributes // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //- JMX file attributes
WITHOUT_CLASSIFICATION	//+ JMX implementation attribute values (also displayed in GUI) - do not change // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//+ JMX names - do not change // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//+ JMX property names; do not change
WITHOUT_CLASSIFICATION	//+ action names // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//++ Action command names //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//++ Do not change these strings; they are used in JMX files to record the button settings // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//++ For TestBean implementations only // passed to file or script
WITHOUT_CLASSIFICATION	//++ For TestBean implementations only // passed to file or script
WITHOUT_CLASSIFICATION	//++ JMX file attributes - do not change
WITHOUT_CLASSIFICATION	//++ JMX file constants - do not change //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//++ JMX tag values // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//++ These are JMX file attribute names and must not be changed // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//++ These are JMX file names and must not be changed //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//++ These are JMX names, and must not be changed // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//++ These names are used in the JMX files, and must not be changed
WITHOUT_CLASSIFICATION	//++JMX attribute names - do not change the values! // These were moved from SMTPSampler, which is why the prefix is still SMTSampler // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //--JMX attribute names
WITHOUT_CLASSIFICATION	//+JMX file attribute names - do not change any values! // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//+JMX file attributes - do not change values! // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //-JMX file attributes
WITHOUT_CLASSIFICATION	//-
WITHOUT_CLASSIFICATION	//- JMX
WITHOUT_CLASSIFICATION	//- JMX entries
WITHOUT_CLASSIFICATION	//- JMX field names
WITHOUT_CLASSIFICATION	//- JMX names
WITHOUT_CLASSIFICATION	//- JMX property names
WITHOUT_CLASSIFICATION	//- action names
WITHOUT_CLASSIFICATION	//--
WITHOUT_CLASSIFICATION	//--
WITHOUT_CLASSIFICATION	//-- End of JMX file attribute names
WITHOUT_CLASSIFICATION	//-- For TestBean implementations only
WITHOUT_CLASSIFICATION	//-- JMX file attributes - do not change
WITHOUT_CLASSIFICATION	//-- JMX file constants - do not change
WITHOUT_CLASSIFICATION	//-JMX file attribute names
WITHOUT_CLASSIFICATION	/// final because called from ctor
WITHOUT_CLASSIFICATION	///////////////// End of standard field accessors /////////////////////
WITHOUT_CLASSIFICATION	///////////////// Transaction Controller - parent ////////////////
WITHOUT_CLASSIFICATION	///////////////////// Start of standard save/set access methods /////////////////////
WITHOUT_CLASSIFICATION	////////////////////// Code ///////////////////////////
WITHOUT_CLASSIFICATION	////////////////////// Transaction Controller - additional sample //////////////////////////////
WITHOUT_CLASSIFICATION	//////////////////////////////////////////
WITHOUT_CLASSIFICATION	//???
WITHOUT_CLASSIFICATION	//@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	//@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	//@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	//@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	//@GuardedBy("LOCK") // Keep track of how many instances are active
WITHOUT_CLASSIFICATION	//@GuardedBy("accumulators") - needed to ensure consistency between this and instanceCount
WITHOUT_CLASSIFICATION	//@GuardedBy("accumulators") // number of active tests
WITHOUT_CLASSIFICATION	//@GuardedBy("fileContainers")
WITHOUT_CLASSIFICATION	//@GuardedBy("myTotals")
WITHOUT_CLASSIFICATION	//@GuardedBy("this"")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this") NOTE this also guards against possible window in checkForOpenFiles()
WITHOUT_CLASSIFICATION	//@GuardedGy("this")
WITHOUT_CLASSIFICATION	//@GuardedGy("this")
WITHOUT_CLASSIFICATION	//@GuardedGy("this")
WITHOUT_CLASSIFICATION	//@GuardedGy("this")
WITHOUT_CLASSIFICATION	//@GuardedGy("this")
WITHOUT_CLASSIFICATION	//All threads in this group - alternate calculation
WITHOUT_CLASSIFICATION	//Cannot happen
WITHOUT_CLASSIFICATION	//Convenience cast
WITHOUT_CLASSIFICATION	//Do what would be done earlier
WITHOUT_CLASSIFICATION	//Do what would be done earlier
WITHOUT_CLASSIFICATION	//Empty override of superclass method
WITHOUT_CLASSIFICATION	//For calculating throughput across all threads
WITHOUT_CLASSIFICATION	//For holding the ThrougputInfo objects for all ThreadGroups. Keyed by AbstractThreadGroup objects
WITHOUT_CLASSIFICATION	//Get all fields in java.sql.Types and store the corresponding int values
WITHOUT_CLASSIFICATION	//GuardedBy("this")
WITHOUT_CLASSIFICATION	//GuardedBy("this")
WITHOUT_CLASSIFICATION	//Ignored
WITHOUT_CLASSIFICATION	//Ignored
WITHOUT_CLASSIFICATION	//Ignored
WITHOUT_CLASSIFICATION	//Iterator itr = data.iterator();
WITHOUT_CLASSIFICATION	//Listen for enable changes
WITHOUT_CLASSIFICATION	//MAXINT = 2,147,483,647
WITHOUT_CLASSIFICATION	//NOOP
WITHOUT_CLASSIFICATION	//NOOP
WITHOUT_CLASSIFICATION	//NOOP
WITHOUT_CLASSIFICATION	//NOOP
WITHOUT_CLASSIFICATION	//NOT USED protected   static final String TAG_URL               = "requestUrl";       //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//NOT YET USED private JMeter _parent;
WITHOUT_CLASSIFICATION	//NOTUSED private static final String DATABASE = "db"; // $NON_NLS-1$
WITHOUT_CLASSIFICATION	//Note: match.groups() includes group 0
WITHOUT_CLASSIFICATION	//OK
WITHOUT_CLASSIFICATION	//OK
WITHOUT_CLASSIFICATION	//OK // TODO ??
WITHOUT_CLASSIFICATION	//OK // TODO ??
WITHOUT_CLASSIFICATION	//OK //OK // Don't copy this; it is per instance resultFileName = res.resultFileName;
WITHOUT_CLASSIFICATION	//OK //OK //OK
WITHOUT_CLASSIFICATION	//OK //OK //OK //OK // files is created automatically, and applies per instance //OK
WITHOUT_CLASSIFICATION	//Overrides superclass method
WITHOUT_CLASSIFICATION	//Set default single model
WITHOUT_CLASSIFICATION	//Set internal state
WITHOUT_CLASSIFICATION	//String s = 
WITHOUT_CLASSIFICATION	//Strip the response data before writing, but only for a successful request.
WITHOUT_CLASSIFICATION	//Suppress messages to stdout
WITHOUT_CLASSIFICATION	//Synch is needed because a clear can occur while add occurs
WITHOUT_CLASSIFICATION	//Synchronize on the info object's MUTEX to ensure //Multiple threads don't update the scheduled time simultaneously
WITHOUT_CLASSIFICATION	//Wrong
WITHOUT_CLASSIFICATION	//_parent = unused;
WITHOUT_CLASSIFICATION	//add(makeTitlePanel(), BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	//assertEquals("/",man.get(0).getPath());
WITHOUT_CLASSIFICATION	//assertEquals("1a:aa.",f1.invoke());// N.B. returns different result from before
WITHOUT_CLASSIFICATION	//assertEquals("1a:aa.",f1a.invoke());
WITHOUT_CLASSIFICATION	//assertEquals("t1",f1.invoke());
WITHOUT_CLASSIFICATION	//assertEquals("t2",f2.invoke());
WITHOUT_CLASSIFICATION	//blank name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//boolean OK = true;
WITHOUT_CLASSIFICATION	//bshinit,log);
WITHOUT_CLASSIFICATION	//contentLength > 0 ? contentLength : DEFAULT_INITIAL_BUFFER_SIZE);
WITHOUT_CLASSIFICATION	//extractor.setDefaultValue("default");
WITHOUT_CLASSIFICATION	//final int _ignored = 1;
WITHOUT_CLASSIFICATION	//flag - if all machines within a given domain can access the variable. //(from http://www.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	//for Httpclient //for Httpclient
WITHOUT_CLASSIFICATION	//for each setup thread group
WITHOUT_CLASSIFICATION	//for each setup thread group
WITHOUT_CLASSIFICATION	//get filename or ""
WITHOUT_CLASSIFICATION	//http://api.mongodb.org/java/2.7.2/com/mongodb/Mongo.html
WITHOUT_CLASSIFICATION	//http://api.mongodb.org/java/2.7.2/com/mongodb/Mongo.html
WITHOUT_CLASSIFICATION	//http://api.mongodb.org/java/2.7.2/com/mongodb/MongoOptions.html/
WITHOUT_CLASSIFICATION	//http://api.mongodb.org/java/2.7.2/com/mongodb/MongoOptions.html/
WITHOUT_CLASSIFICATION	//if we found a TestPlan, then we are on our way to the TestFragment
WITHOUT_CLASSIFICATION	//ignore Setup and Post here.  We could have filtered the searcher. but then //future Thread Group objects wouldn't execute.
WITHOUT_CLASSIFICATION	//int mark =
WITHOUT_CLASSIFICATION	//is derived from properties only
WITHOUT_CLASSIFICATION	//load additionnal name conversion rules from plugins
WITHOUT_CLASSIFICATION	//log.debug("domain property = " + element.getProperty("domain"));
WITHOUT_CLASSIFICATION	//log.debug("domain property = " + element.getProperty("domain"));
WITHOUT_CLASSIFICATION	//log.debug("domain property = " + element.getProperty("domain"));
WITHOUT_CLASSIFICATION	//log.warn("Constructor only intended for use in testing");
WITHOUT_CLASSIFICATION	//log.warn("DEBUG",ex); // e.g. javax.naming.SizeLimitExceededException: [LDAP: error code 4 - Sizelimit Exceeded]; remaining name '' //                                                123456789012345678901 // TODO: tidy this up
WITHOUT_CLASSIFICATION	//long max was used to represent a non-expiring cookie, but that caused problems
WITHOUT_CLASSIFICATION	//means no restriction
WITHOUT_CLASSIFICATION	//means platform default
WITHOUT_CLASSIFICATION	//new Font("SansSerif", Font.PLAIN, 10)
WITHOUT_CLASSIFICATION	//new Functor("setName"), // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//not interested in this method.
WITHOUT_CLASSIFICATION	//or if you have assertions enabled
WITHOUT_CLASSIFICATION	//p.add(makeButtonPanel(), BorderLayout.SOUTH);
WITHOUT_CLASSIFICATION	//p.add(makeButtonPanel(), BorderLayout.SOUTH);
WITHOUT_CLASSIFICATION	//private ImageIcon runningIcon = JMeterUtils.getImage("thread.enabled.gif");
WITHOUT_CLASSIFICATION	//private Set hosts = new HashSet();
WITHOUT_CLASSIFICATION	//private static ReportPlan plan;
WITHOUT_CLASSIFICATION	//private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	//private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	//rem generate cert for DOMAIN using CA (requires Java7 for gencert) and import it
WITHOUT_CLASSIFICATION	//should always fail
WITHOUT_CLASSIFICATION	//should not fail
WITHOUT_CLASSIFICATION	//sizeColumns(table);
WITHOUT_CLASSIFICATION	//subClassList);
WITHOUT_CLASSIFICATION	//suite.addTest(new TestLoad("checkGuiPackage"));
WITHOUT_CLASSIFICATION	//testLog.setPriority(org.apache.log.Priority.DEBUG);
WITHOUT_CLASSIFICATION	//there is no harm in trying to clear up
WITHOUT_CLASSIFICATION	//this.setDaemon(true);
WITHOUT_CLASSIFICATION	//this.setPreferredSize(new Dimension(400,150));
WITHOUT_CLASSIFICATION	//throw new Error("No default bundle for class " + className);
WITHOUT_CLASSIFICATION	//transient private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	//url.replace('+',' ');
WITHOUT_CLASSIFICATION	//wait for all Setup Threads To Exit
WITHOUT_CLASSIFICATION	//wait for all Test Threads To Exit
