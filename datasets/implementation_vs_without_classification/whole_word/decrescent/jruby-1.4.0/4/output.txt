// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.5154517050175424	WITHOUT_CLASSIFICATION	0.48454829498245766	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.6417340848355467	IMPLEMENTATION	0.35826591516445333	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.5339664742877283	IMPLEMENTATION	0.4660335257122718	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.9390688481915751	IMPLEMENTATION	0.06093115180842487	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.5946423650190189	WITHOUT_CLASSIFICATION	0.405357634980981	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.8466704751810936	WITHOUT_CLASSIFICATION	0.15332952481890633	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.999423161110162	WITHOUT_CLASSIFICATION	5.768388898380308E-4	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.7400781722266153	IMPLEMENTATION	0.2599218277733847	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.7400781722266153	IMPLEMENTATION	0.2599218277733847	WITHOUT_CLASSIFICATION
// TODO: pass this in?	IMPLEMENTATION	0.6515170464731223	IMPLEMENTATION	0.3484829535268778	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9998864713877952	WITHOUT_CLASSIFICATION	1.1352861220475438E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.7126363763536598	IMPLEMENTATION	0.28736362364634005	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9347682549479708	WITHOUT_CLASSIFICATION	0.06523174505202921	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.7855987482766449	WITHOUT_CLASSIFICATION	0.21440125172335517	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.5744737833339691	WITHOUT_CLASSIFICATION	0.4255262166660308	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9976944064368121	WITHOUT_CLASSIFICATION	0.002305593563187934	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9926607416741692	WITHOUT_CLASSIFICATION	0.007339258325830757	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.6417340848355467	IMPLEMENTATION	0.35826591516445333	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.827075722596197	IMPLEMENTATION	0.17292427740380295	WITHOUT_CLASSIFICATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.8028652575578535	WITHOUT_CLASSIFICATION	0.19713474244214654	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.8472459699373408	WITHOUT_CLASSIFICATION	0.1527540300626591	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9998339138757594	WITHOUT_CLASSIFICATION	1.6608612424063232E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.5326547922704775	WITHOUT_CLASSIFICATION	0.4673452077295224	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.6042361448047961	WITHOUT_CLASSIFICATION	0.3957638551952039	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.7901395719186088	IMPLEMENTATION	0.20986042808139121	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.5715147179921867	IMPLEMENTATION	0.42848528200781333	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8605478393905411	WITHOUT_CLASSIFICATION	0.1394521606094589	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9593343621473512	WITHOUT_CLASSIFICATION	0.04066563785264871	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8605478393905411	WITHOUT_CLASSIFICATION	0.1394521606094589	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9593343621473512	WITHOUT_CLASSIFICATION	0.04066563785264871	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.8708570463304939	WITHOUT_CLASSIFICATION	0.129142953669506	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.7346183745335986	IMPLEMENTATION	0.2653816254664015	WITHOUT_CLASSIFICATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.928670598226379	IMPLEMENTATION	0.071329401773621	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.7013330807972985	IMPLEMENTATION	0.29866691920270144	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8650643084670407	WITHOUT_CLASSIFICATION	0.13493569153295928	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8650643084670407	WITHOUT_CLASSIFICATION	0.13493569153295928	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9996041288886739	WITHOUT_CLASSIFICATION	3.958711113261453E-4	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9980762304835537	WITHOUT_CLASSIFICATION	0.0019237695164463608	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.890055958867696	WITHOUT_CLASSIFICATION	0.10994404113230412	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.8891870780440659	WITHOUT_CLASSIFICATION	0.11081292195593406	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9535903386353706	IMPLEMENTATION	0.04640966136462945	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.6340507786383012	WITHOUT_CLASSIFICATION	0.3659492213616988	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9787768618030206	IMPLEMENTATION	0.021223138196979425	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9999442738316267	WITHOUT_CLASSIFICATION	5.572616837335298E-5	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.5380038918749891	IMPLEMENTATION	0.46199610812501096	WITHOUT_CLASSIFICATION
// TODO: add trace call?	IMPLEMENTATION	0.633853513960328	IMPLEMENTATION	0.36614648603967204	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9994898473938322	WITHOUT_CLASSIFICATION	5.101526061677627E-4	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9997226281369608	WITHOUT_CLASSIFICATION	2.773718630392144E-4	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.999955226804146	WITHOUT_CLASSIFICATION	4.4773195854044584E-5	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.6376401651647875	IMPLEMENTATION	0.3623598348352125	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9994898473938322	WITHOUT_CLASSIFICATION	5.101526061677627E-4	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999813176416888	WITHOUT_CLASSIFICATION	1.8682358311073515E-5	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9978551268068118	WITHOUT_CLASSIFICATION	0.0021448731931882677	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.8415172366577371	IMPLEMENTATION	0.1584827633422629	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9991823383852507	WITHOUT_CLASSIFICATION	8.17661614749266E-4	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9999731268331922	WITHOUT_CLASSIFICATION	2.6873166807785048E-5	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.999454099445944	WITHOUT_CLASSIFICATION	5.45900554055972E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9987942810823511	WITHOUT_CLASSIFICATION	0.0012057189176488613	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.999988925464346	WITHOUT_CLASSIFICATION	1.107453565396133E-5	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9999710941285535	WITHOUT_CLASSIFICATION	2.890587144656829E-5	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9411454805491534	WITHOUT_CLASSIFICATION	0.05885451945084669	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9411454805491534	WITHOUT_CLASSIFICATION	0.05885451945084669	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.6225062095028668	IMPLEMENTATION	0.3774937904971333	WITHOUT_CLASSIFICATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9990390199948082	IMPLEMENTATION	9.609800051918854E-4	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.7858761207230653	IMPLEMENTATION	0.21412387927693458	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.6704500096820505	IMPLEMENTATION	0.3295499903179494	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.6704500096820505	IMPLEMENTATION	0.3295499903179494	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.8554353484137379	IMPLEMENTATION	0.1445646515862621	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.5503969210287561	IMPLEMENTATION	0.44960307897124385	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.7001019628710995	WITHOUT_CLASSIFICATION	0.29989803712890056	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9976609778826182	WITHOUT_CLASSIFICATION	0.00233902211738174	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.868825260101885	IMPLEMENTATION	0.13117473989811498	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.868825260101885	IMPLEMENTATION	0.13117473989811498	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.6548867477702135	IMPLEMENTATION	0.3451132522297865	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9999326416063308	WITHOUT_CLASSIFICATION	6.735839366919434E-5	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999920658219407	WITHOUT_CLASSIFICATION	7.934178059357778E-6	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9546677041404253	IMPLEMENTATION	0.045332295859574656	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.7732431649930885	IMPLEMENTATION	0.22675683500691143	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.8737989968828509	WITHOUT_CLASSIFICATION	0.12620100311714902	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.7791067595305414	IMPLEMENTATION	0.22089324046945863	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9994419222096984	WITHOUT_CLASSIFICATION	5.580777903015003E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9335915072256236	WITHOUT_CLASSIFICATION	0.06640849277437641	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9335915072256236	WITHOUT_CLASSIFICATION	0.06640849277437641	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9840447343121543	WITHOUT_CLASSIFICATION	0.015955265687845666	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9863448353254972	WITHOUT_CLASSIFICATION	0.013655164674502746	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.999887461353487	WITHOUT_CLASSIFICATION	1.1253864651293043E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.999887461353487	WITHOUT_CLASSIFICATION	1.1253864651293043E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.5341655672014525	WITHOUT_CLASSIFICATION	0.46583443279854747	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998356008984798	WITHOUT_CLASSIFICATION	1.6439910152028626E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998356008984798	WITHOUT_CLASSIFICATION	1.6439910152028626E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998356008984798	WITHOUT_CLASSIFICATION	1.6439910152028626E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.537811438159949	WITHOUT_CLASSIFICATION	0.46218856184005097	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.537811438159949	WITHOUT_CLASSIFICATION	0.46218856184005097	IMPLEMENTATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.8834811068636117	WITHOUT_CLASSIFICATION	0.11651889313638827	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999950544426353	WITHOUT_CLASSIFICATION	4.945557364713718E-6	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.971799622952931	WITHOUT_CLASSIFICATION	0.028200377047069004	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9994660060701711	IMPLEMENTATION	5.339939298288789E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9934865355001028	IMPLEMENTATION	0.006513464499897213	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9934865355001028	IMPLEMENTATION	0.006513464499897213	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9934865355001028	IMPLEMENTATION	0.006513464499897213	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9535903386353706	IMPLEMENTATION	0.04640966136462945	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9535903386353706	IMPLEMENTATION	0.04640966136462945	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.945333771544541	WITHOUT_CLASSIFICATION	0.05466622845545889	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.5742040740858828	WITHOUT_CLASSIFICATION	0.42579592591411725	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8650643084670407	WITHOUT_CLASSIFICATION	0.13493569153295928	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8650643084670407	WITHOUT_CLASSIFICATION	0.13493569153295928	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9161284982751455	IMPLEMENTATION	0.08387150172485447	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9329487949319198	WITHOUT_CLASSIFICATION	0.06705120506808022	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9976944064368121	WITHOUT_CLASSIFICATION	0.002305593563187934	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9993062242281373	WITHOUT_CLASSIFICATION	6.937757718626762E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.5663930164275036	WITHOUT_CLASSIFICATION	0.4336069835724963	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9999747647274517	IMPLEMENTATION	2.523527254823646E-5	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9999872787660915	WITHOUT_CLASSIFICATION	1.2721233908418097E-5	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999326719393289	WITHOUT_CLASSIFICATION	6.732806067111795E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999495294736809	WITHOUT_CLASSIFICATION	5.047052631922205E-5	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9997758651920509	WITHOUT_CLASSIFICATION	2.2413480794911198E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9997758651920509	WITHOUT_CLASSIFICATION	2.2413480794911198E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999988839766363	WITHOUT_CLASSIFICATION	1.1160233636951547E-5	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9997494036808582	WITHOUT_CLASSIFICATION	2.505963191418392E-4	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999784745025121	WITHOUT_CLASSIFICATION	2.1525497487900943E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999710034036865	WITHOUT_CLASSIFICATION	2.8996596313460373E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9993943363271132	WITHOUT_CLASSIFICATION	6.056636728867788E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9994048534159407	WITHOUT_CLASSIFICATION	5.951465840593065E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9994048534159407	WITHOUT_CLASSIFICATION	5.951465840593065E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9994048534159407	WITHOUT_CLASSIFICATION	5.951465840593065E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9994048534159407	WITHOUT_CLASSIFICATION	5.951465840593065E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999341691829667	WITHOUT_CLASSIFICATION	6.583081703328903E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9995292155720865	WITHOUT_CLASSIFICATION	4.707844279134497E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999516229440529	WITHOUT_CLASSIFICATION	4.837705594720443E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.999966525823999	WITHOUT_CLASSIFICATION	3.347417600105401E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.999907195587095	WITHOUT_CLASSIFICATION	9.280441290505687E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999680197881904	WITHOUT_CLASSIFICATION	3.1980211809571186E-5	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9996609126435867	WITHOUT_CLASSIFICATION	3.3908735641334666E-4	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999978301157244	WITHOUT_CLASSIFICATION	2.1698842755639876E-6	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999956704354042	WITHOUT_CLASSIFICATION	4.329564595821021E-6	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9994540870799088	WITHOUT_CLASSIFICATION	5.459129200912542E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9996955257060014	WITHOUT_CLASSIFICATION	3.044742939985029E-4	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999844690338199	WITHOUT_CLASSIFICATION	1.5530966180101686E-5	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9996225038612355	WITHOUT_CLASSIFICATION	3.7749613876453443E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9966560818464197	WITHOUT_CLASSIFICATION	0.0033439181535802574	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999497019290353	WITHOUT_CLASSIFICATION	5.029807096479309E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9997682017344601	WITHOUT_CLASSIFICATION	2.3179826553989668E-4	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9993234607184059	WITHOUT_CLASSIFICATION	6.765392815940738E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9994048534159407	WITHOUT_CLASSIFICATION	5.951465840593065E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998930717559993	WITHOUT_CLASSIFICATION	1.0692824400067069E-4	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999856453873242	WITHOUT_CLASSIFICATION	1.4354612675795551E-5	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999086064584063	WITHOUT_CLASSIFICATION	9.139354159376744E-5	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9997091174160949	WITHOUT_CLASSIFICATION	2.908825839050577E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.964635077485049	WITHOUT_CLASSIFICATION	0.03536492251495104	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9997063938034386	WITHOUT_CLASSIFICATION	2.936061965613747E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999860741390908	WITHOUT_CLASSIFICATION	1.3925860909326227E-5	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9998651590334157	WITHOUT_CLASSIFICATION	1.3484096658431427E-4	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9964669645450717	WITHOUT_CLASSIFICATION	0.0035330354549283813	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9997465599336588	WITHOUT_CLASSIFICATION	2.5344006634118814E-4	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999012776930356	WITHOUT_CLASSIFICATION	9.872230696442365E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9946891338064336	WITHOUT_CLASSIFICATION	0.005310866193566354	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9997491707105345	WITHOUT_CLASSIFICATION	2.508292894655025E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.999694820123621	WITHOUT_CLASSIFICATION	3.051798763790958E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9997613717151999	WITHOUT_CLASSIFICATION	2.3862828480012313E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999351443097199	WITHOUT_CLASSIFICATION	6.485569028014166E-5	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999444499736523	WITHOUT_CLASSIFICATION	5.5550026347705446E-5	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999752989242436	WITHOUT_CLASSIFICATION	2.470107575643109E-5	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999873698914402	WITHOUT_CLASSIFICATION	1.2630108559797713E-4	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9993411551226166	WITHOUT_CLASSIFICATION	6.588448773834482E-4	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.999939134084727	WITHOUT_CLASSIFICATION	6.086591527290939E-5	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9900882948871663	WITHOUT_CLASSIFICATION	0.009911705112833654	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999437224345508	WITHOUT_CLASSIFICATION	5.6277565449276706E-5	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999593257630328	WITHOUT_CLASSIFICATION	4.0674236967053995E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.999755862464015	WITHOUT_CLASSIFICATION	2.4413753598494494E-4	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9981776400352158	WITHOUT_CLASSIFICATION	0.001822359964784219	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999912262836511	WITHOUT_CLASSIFICATION	8.77371634885228E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9964435364391869	WITHOUT_CLASSIFICATION	0.003556463560813204	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999584233833801	WITHOUT_CLASSIFICATION	4.15766166199372E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999944783515184	WITHOUT_CLASSIFICATION	5.521648481498818E-6	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9996178168809704	WITHOUT_CLASSIFICATION	3.8218311902954736E-4	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999932678312	WITHOUT_CLASSIFICATION	6.732168822695666E-9	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.997937346449433	WITHOUT_CLASSIFICATION	0.002062653550567078	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999928926926664	WITHOUT_CLASSIFICATION	7.107307333475154E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999442738868	WITHOUT_CLASSIFICATION	5.57261130918796E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999938293728411	WITHOUT_CLASSIFICATION	6.1706271589446614E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9997078543172367	WITHOUT_CLASSIFICATION	2.9214568276325777E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9420369302498631	WITHOUT_CLASSIFICATION	0.05796306975013684	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9420369302498631	WITHOUT_CLASSIFICATION	0.05796306975013684	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.7802881820416329	WITHOUT_CLASSIFICATION	0.21971181795836722	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9997029306260438	WITHOUT_CLASSIFICATION	2.970693739561602E-4	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9997333340122813	WITHOUT_CLASSIFICATION	2.6666598771872703E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999517776969823	WITHOUT_CLASSIFICATION	4.8222303017681165E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999995472319585	WITHOUT_CLASSIFICATION	4.5276804141193577E-7	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999516219498797	WITHOUT_CLASSIFICATION	4.837805012015892E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999769228514459	WITHOUT_CLASSIFICATION	2.3077148554142142E-5	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999885224095983	WITHOUT_CLASSIFICATION	1.1477590401709191E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999938293728411	WITHOUT_CLASSIFICATION	6.1706271589446614E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999858716573151	WITHOUT_CLASSIFICATION	1.4128342684982178E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9997429391369053	WITHOUT_CLASSIFICATION	2.5706086309479717E-4	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999918792676052	WITHOUT_CLASSIFICATION	8.120732394818817E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999968049918878	WITHOUT_CLASSIFICATION	3.195008112229863E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999918814578882	WITHOUT_CLASSIFICATION	8.118542111756894E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999918814578882	WITHOUT_CLASSIFICATION	8.118542111756894E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999918814578882	WITHOUT_CLASSIFICATION	8.118542111756894E-6	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999814602765367	WITHOUT_CLASSIFICATION	1.8539723463305065E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999962009832246	WITHOUT_CLASSIFICATION	3.799016775406621E-6	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.999998455734778	WITHOUT_CLASSIFICATION	1.5442652221039898E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9996417914077806	WITHOUT_CLASSIFICATION	3.582085922193553E-4	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.999974240213742	WITHOUT_CLASSIFICATION	2.5759786257946793E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999976843284423	WITHOUT_CLASSIFICATION	2.3156715577797453E-6	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9998502117462482	WITHOUT_CLASSIFICATION	1.497882537516757E-4	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999679839348796	WITHOUT_CLASSIFICATION	3.201606512036941E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9998903353573301	WITHOUT_CLASSIFICATION	1.0966464266999628E-4	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999912919511213	WITHOUT_CLASSIFICATION	8.70804887869425E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999943742621587	WITHOUT_CLASSIFICATION	5.6257378413004626E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999943742621587	WITHOUT_CLASSIFICATION	5.6257378413004626E-5	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9998537070357539	WITHOUT_CLASSIFICATION	1.4629296424609027E-4	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999285204779024	WITHOUT_CLASSIFICATION	7.147952209758516E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9998963914117797	WITHOUT_CLASSIFICATION	1.0360858822044685E-4	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999473648924722	WITHOUT_CLASSIFICATION	5.2635107527851776E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999252473252411	WITHOUT_CLASSIFICATION	7.475267475886745E-5	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9990304111202006	WITHOUT_CLASSIFICATION	9.695888797992974E-4	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.998720424266894	WITHOUT_CLASSIFICATION	0.00127957573310593	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999474960051553	WITHOUT_CLASSIFICATION	5.250399484476131E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999938293728411	WITHOUT_CLASSIFICATION	6.1706271589446614E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999580979238103	WITHOUT_CLASSIFICATION	4.190207618979256E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999820290325319	WITHOUT_CLASSIFICATION	1.7970967468086848E-4	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999630560064692	WITHOUT_CLASSIFICATION	3.6943993530864156E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999500955855128	WITHOUT_CLASSIFICATION	4.990441448707684E-5	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.999897592312489	WITHOUT_CLASSIFICATION	1.0240768751108314E-4	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999948407411561	WITHOUT_CLASSIFICATION	5.159258843848768E-6	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999880217347267	WITHOUT_CLASSIFICATION	1.1978265273210178E-5	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9988154762002563	WITHOUT_CLASSIFICATION	0.0011845237997436984	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999797617500915	WITHOUT_CLASSIFICATION	2.0238249908498987E-5	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999200562426178	WITHOUT_CLASSIFICATION	7.994375738213153E-5	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999908509532364	WITHOUT_CLASSIFICATION	9.14904676361078E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999933233755419	WITHOUT_CLASSIFICATION	6.676624458060118E-6	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.999727738366482	WITHOUT_CLASSIFICATION	2.7226163351801603E-4	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9994504092541141	WITHOUT_CLASSIFICATION	5.495907458859309E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9998180102669335	WITHOUT_CLASSIFICATION	1.8198973306640434E-4	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9998734339695502	WITHOUT_CLASSIFICATION	1.265660304498409E-4	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999829412337969	WITHOUT_CLASSIFICATION	1.7058766203105308E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9996759877971543	WITHOUT_CLASSIFICATION	3.240122028457106E-4	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.999883712860528	WITHOUT_CLASSIFICATION	1.1628713947207997E-4	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999625850359641	WITHOUT_CLASSIFICATION	3.741496403579304E-5	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9998919325253882	WITHOUT_CLASSIFICATION	1.0806747461176994E-4	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999076248280281	WITHOUT_CLASSIFICATION	9.237517197191975E-5	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9997594054559201	WITHOUT_CLASSIFICATION	2.4059454407991324E-4	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9991309800430994	WITHOUT_CLASSIFICATION	8.690199569004939E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9996960781871106	WITHOUT_CLASSIFICATION	3.039218128893754E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9998730403900663	WITHOUT_CLASSIFICATION	1.2695960993361078E-4	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999458052227149	WITHOUT_CLASSIFICATION	5.419477728508625E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9998610367450314	WITHOUT_CLASSIFICATION	1.3896325496859518E-4	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9992193160059563	WITHOUT_CLASSIFICATION	7.806839940436458E-4	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9997334294837834	WITHOUT_CLASSIFICATION	2.6657051621661876E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999972602218129	WITHOUT_CLASSIFICATION	2.739778187010095E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999191497616263	WITHOUT_CLASSIFICATION	8.085023837374487E-5	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9996996283323637	WITHOUT_CLASSIFICATION	3.0037166763631636E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9997805237428753	WITHOUT_CLASSIFICATION	2.19476257124731E-4	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998208061150824	WITHOUT_CLASSIFICATION	1.7919388491758E-4	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9738175112390908	WITHOUT_CLASSIFICATION	0.026182488760909218	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.999929603607067	WITHOUT_CLASSIFICATION	7.039639293304208E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999489225906665	WITHOUT_CLASSIFICATION	5.1077409333595745E-5	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9998550865153815	WITHOUT_CLASSIFICATION	1.449134846185588E-4	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9990976573813604	WITHOUT_CLASSIFICATION	9.023426186395357E-4	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9992399109455742	WITHOUT_CLASSIFICATION	7.600890544257623E-4	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999499223499984	WITHOUT_CLASSIFICATION	5.007765000167942E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9955253461941589	WITHOUT_CLASSIFICATION	0.004474653805841183	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9993946501398067	WITHOUT_CLASSIFICATION	6.053498601934022E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999859836725196	WITHOUT_CLASSIFICATION	1.4016327480403175E-4	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9998106799877237	WITHOUT_CLASSIFICATION	1.8932001227637665E-4	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998580647412775	WITHOUT_CLASSIFICATION	1.4193525872263353E-4	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998562818312983	WITHOUT_CLASSIFICATION	1.4371816870170802E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9989373582005622	WITHOUT_CLASSIFICATION	0.0010626417994378248	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999985662312387	WITHOUT_CLASSIFICATION	1.4337687613188022E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999401784315874	WITHOUT_CLASSIFICATION	5.982156841247936E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999718043773548	WITHOUT_CLASSIFICATION	2.8195622645203368E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9987295030295432	WITHOUT_CLASSIFICATION	0.0012704969704567355	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999622234095236	WITHOUT_CLASSIFICATION	3.7776590476348554E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999913095537128	WITHOUT_CLASSIFICATION	8.690446287170603E-6	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9998976563936318	WITHOUT_CLASSIFICATION	1.0234360636818667E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999886451931802	WITHOUT_CLASSIFICATION	1.135480681975869E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999886451931802	WITHOUT_CLASSIFICATION	1.135480681975869E-5	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9994403565816964	WITHOUT_CLASSIFICATION	5.596434183035918E-4	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9996632870955662	WITHOUT_CLASSIFICATION	3.3671290443374564E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999937251276032	WITHOUT_CLASSIFICATION	6.274872396798995E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.999998581073561	WITHOUT_CLASSIFICATION	1.4189264390202824E-6	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999983206762943	WITHOUT_CLASSIFICATION	1.6793237056929577E-6	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999922300590485	WITHOUT_CLASSIFICATION	7.769940951454853E-6	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9998724635561934	WITHOUT_CLASSIFICATION	1.275364438066216E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.999980614882794	WITHOUT_CLASSIFICATION	1.9385117205999475E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9996345677466033	WITHOUT_CLASSIFICATION	3.654322533966717E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999855208777106	WITHOUT_CLASSIFICATION	1.447912228929524E-5	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.999821039268514	WITHOUT_CLASSIFICATION	1.7896073148607184E-4	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999750530135705	WITHOUT_CLASSIFICATION	2.4946986429484456E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9995752617015841	WITHOUT_CLASSIFICATION	4.247382984160031E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9968817860156213	WITHOUT_CLASSIFICATION	0.0031182139843788054	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999066662320905	WITHOUT_CLASSIFICATION	9.333376790956932E-5	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9987809095630621	WITHOUT_CLASSIFICATION	0.0012190904369379309	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999686125454277	WITHOUT_CLASSIFICATION	3.1387454572290125E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999683879911957	WITHOUT_CLASSIFICATION	3.1612008804290354E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999986664357874	WITHOUT_CLASSIFICATION	1.333564212516584E-6	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9998697225869305	WITHOUT_CLASSIFICATION	1.3027741306953963E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9987970258770488	WITHOUT_CLASSIFICATION	0.00120297412295123	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9987970258770488	WITHOUT_CLASSIFICATION	0.00120297412295123	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999925177142284	WITHOUT_CLASSIFICATION	7.4822857716373504E-6	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999617523968176	WITHOUT_CLASSIFICATION	3.824760318235972E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9990336023105953	WITHOUT_CLASSIFICATION	9.663976894045822E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999992648927647	WITHOUT_CLASSIFICATION	7.351072354215844E-7	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999986841402149	WITHOUT_CLASSIFICATION	1.3158597851725164E-6	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999983796257786	WITHOUT_CLASSIFICATION	1.6203742214070592E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999983796257786	WITHOUT_CLASSIFICATION	1.6203742214070592E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.6476596527165633	IMPLEMENTATION	0.3523403472834366	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9992825067517324	WITHOUT_CLASSIFICATION	7.174932482676514E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9992825067517324	WITHOUT_CLASSIFICATION	7.174932482676514E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999887146430734	WITHOUT_CLASSIFICATION	1.1285356926602367E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9992777474476624	WITHOUT_CLASSIFICATION	7.222525523375733E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9992777474476624	WITHOUT_CLASSIFICATION	7.222525523375733E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.998347269264221	WITHOUT_CLASSIFICATION	0.0016527307357790163	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.998347269264221	WITHOUT_CLASSIFICATION	0.0016527307357790163	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.999989629755647	WITHOUT_CLASSIFICATION	1.037024435296171E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9953680945277206	WITHOUT_CLASSIFICATION	0.004631905472279342	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999971533361129	WITHOUT_CLASSIFICATION	2.8466638870949217E-6	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999714568176414	WITHOUT_CLASSIFICATION	2.8543182358515283E-5	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.999878648537891	WITHOUT_CLASSIFICATION	1.2135146210897668E-4	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999301491149288	WITHOUT_CLASSIFICATION	6.985088507115365E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999838047581846	WITHOUT_CLASSIFICATION	1.619524181544375E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999301491149288	WITHOUT_CLASSIFICATION	6.985088507115365E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9998172603099617	WITHOUT_CLASSIFICATION	1.8273969003838858E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9996038631152235	WITHOUT_CLASSIFICATION	3.9613688477644824E-4	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9997939697494542	WITHOUT_CLASSIFICATION	2.0603025054572455E-4	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999980761541024	WITHOUT_CLASSIFICATION	1.923845897516566E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9998075979169656	WITHOUT_CLASSIFICATION	1.9240208303432488E-4	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9996525407253913	WITHOUT_CLASSIFICATION	3.4745927460865336E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999042946784619	WITHOUT_CLASSIFICATION	9.570532153824965E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999071528184573	WITHOUT_CLASSIFICATION	9.28471815426713E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9987872541646708	WITHOUT_CLASSIFICATION	0.0012127458353291627	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999833247377817	WITHOUT_CLASSIFICATION	1.6675262218212454E-5	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9997049071177125	WITHOUT_CLASSIFICATION	2.950928822875561E-4	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9715476738593407	WITHOUT_CLASSIFICATION	0.028452326140659304	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999787931529937	WITHOUT_CLASSIFICATION	2.1206847006417556E-5	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9994363773403395	WITHOUT_CLASSIFICATION	5.636226596605757E-4	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999936589323185	WITHOUT_CLASSIFICATION	6.341067681476287E-6	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.996675471017863	WITHOUT_CLASSIFICATION	0.0033245289821369453	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.999804313831888	WITHOUT_CLASSIFICATION	1.9568616811203518E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9970556222083253	WITHOUT_CLASSIFICATION	0.002944377791674675	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9998659631136376	WITHOUT_CLASSIFICATION	1.3403688636243666E-4	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9968983863817807	WITHOUT_CLASSIFICATION	0.0031016136182193195	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998072642470299	WITHOUT_CLASSIFICATION	1.9273575297003786E-4	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.999999677655292	WITHOUT_CLASSIFICATION	3.2234470806029423E-7	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9998694929758664	WITHOUT_CLASSIFICATION	1.3050702413376256E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999861996205246	WITHOUT_CLASSIFICATION	1.3800379475382591E-5	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999958690272446	WITHOUT_CLASSIFICATION	4.130972755340004E-6	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999968766979656	WITHOUT_CLASSIFICATION	3.1233020343991035E-6	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999949707239337	WITHOUT_CLASSIFICATION	5.02927606623328E-6	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999998227023851	WITHOUT_CLASSIFICATION	1.7729761503208114E-7	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999909054453988	WITHOUT_CLASSIFICATION	9.094554601191546E-6	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999950839082353	WITHOUT_CLASSIFICATION	4.916091764598192E-6	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999979704570504	WITHOUT_CLASSIFICATION	2.0295429496487223E-6	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999962948327976	WITHOUT_CLASSIFICATION	3.705167202339051E-6	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999947607100376	WITHOUT_CLASSIFICATION	5.239289962432624E-6	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999985624923153	WITHOUT_CLASSIFICATION	1.437507684750276E-6	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999974024427346	WITHOUT_CLASSIFICATION	2.5975572653547156E-6	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999985244273424	WITHOUT_CLASSIFICATION	1.4755726576077202E-6	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999989821594819	WITHOUT_CLASSIFICATION	1.0178405181052123E-6	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9996830000413756	WITHOUT_CLASSIFICATION	3.1699995862443053E-4	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999984833188559	WITHOUT_CLASSIFICATION	1.5166811441335053E-6	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999916859572795	WITHOUT_CLASSIFICATION	8.314042720576583E-6	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999998414655574	WITHOUT_CLASSIFICATION	1.5853444258880935E-6	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999971353040517	WITHOUT_CLASSIFICATION	2.8646959483770787E-6	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999981208844386	WITHOUT_CLASSIFICATION	1.8791155613585782E-6	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999992329574021	WITHOUT_CLASSIFICATION	7.670425979512E-7	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999991081921878	WITHOUT_CLASSIFICATION	8.918078120373517E-7	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999994707853638	WITHOUT_CLASSIFICATION	5.29214636170501E-7	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999972955645504	WITHOUT_CLASSIFICATION	2.7044354496166832E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998306960405888	WITHOUT_CLASSIFICATION	1.6930395941120366E-4	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999714460703564	WITHOUT_CLASSIFICATION	2.8553929643561793E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999305882781364	WITHOUT_CLASSIFICATION	6.941172186352804E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999251501791898	WITHOUT_CLASSIFICATION	7.484982081011679E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.999683104983704	WITHOUT_CLASSIFICATION	3.1689501629600305E-4	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999747279210638	WITHOUT_CLASSIFICATION	2.527207893614944E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999504342232646	WITHOUT_CLASSIFICATION	4.956577673537991E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999504342232646	WITHOUT_CLASSIFICATION	4.956577673537991E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999845710959321	WITHOUT_CLASSIFICATION	1.542890406797319E-5	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999671525116279	WITHOUT_CLASSIFICATION	3.284748837212538E-5	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9991494278616931	WITHOUT_CLASSIFICATION	8.505721383068512E-4	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999541015687652	WITHOUT_CLASSIFICATION	4.5898431234775E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999965756382709	WITHOUT_CLASSIFICATION	3.424361728992337E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9998628115618726	WITHOUT_CLASSIFICATION	1.3718843812733593E-4	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999902575693812	WITHOUT_CLASSIFICATION	9.742430618820046E-6	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9998409051445313	WITHOUT_CLASSIFICATION	1.590948554687728E-4	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9998409942946367	WITHOUT_CLASSIFICATION	1.59005705363363E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999910122693401	WITHOUT_CLASSIFICATION	8.98773065994615E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9998336306157721	WITHOUT_CLASSIFICATION	1.6636938422780905E-4	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9998336306157721	WITHOUT_CLASSIFICATION	1.6636938422780905E-4	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9993537151849062	WITHOUT_CLASSIFICATION	6.462848150938146E-4	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999655713903185	WITHOUT_CLASSIFICATION	3.4428609681421786E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997121811479583	WITHOUT_CLASSIFICATION	2.878188520415624E-4	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999842086316971	WITHOUT_CLASSIFICATION	1.5791368302874105E-5	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999942465781824	WITHOUT_CLASSIFICATION	5.753421817632136E-6	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999610771548764	WITHOUT_CLASSIFICATION	3.892284512367256E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999938242504139	WITHOUT_CLASSIFICATION	6.175749586043618E-6	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999784997205038	WITHOUT_CLASSIFICATION	2.1500279496233213E-5	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999923043280233	WITHOUT_CLASSIFICATION	7.695671976730568E-6	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9996101974075213	WITHOUT_CLASSIFICATION	3.8980259247869666E-4	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999733214976457	WITHOUT_CLASSIFICATION	2.6678502354318633E-5	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999767548196288	WITHOUT_CLASSIFICATION	2.324518037123109E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998530257317557	WITHOUT_CLASSIFICATION	1.469742682442671E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998530257317557	WITHOUT_CLASSIFICATION	1.469742682442671E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9953263032564622	WITHOUT_CLASSIFICATION	0.004673696743537746	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999098393879099	WITHOUT_CLASSIFICATION	9.01606120901297E-5	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999974644698346	WITHOUT_CLASSIFICATION	2.535530165524102E-6	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.999837987770258	WITHOUT_CLASSIFICATION	1.6201222974195615E-4	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9997980667952856	WITHOUT_CLASSIFICATION	2.0193320471444473E-4	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999697082147183	WITHOUT_CLASSIFICATION	3.0291785281612474E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.991112170970101	WITHOUT_CLASSIFICATION	0.00888782902989915	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999115197463988	WITHOUT_CLASSIFICATION	8.848025360114896E-5	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9996210423103076	WITHOUT_CLASSIFICATION	3.7895768969239615E-4	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999133126870245	WITHOUT_CLASSIFICATION	8.668731297542566E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997121811479583	WITHOUT_CLASSIFICATION	2.878188520415624E-4	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9988585397713554	WITHOUT_CLASSIFICATION	0.0011414602286446234	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9994015168816889	WITHOUT_CLASSIFICATION	5.98483118311104E-4	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999505098948	WITHOUT_CLASSIFICATION	4.9490105332487695E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999723659558811	WITHOUT_CLASSIFICATION	2.7634044118905947E-5	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999110529364698	WITHOUT_CLASSIFICATION	8.89470635302049E-5	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999236046676717	WITHOUT_CLASSIFICATION	7.639533232829065E-5	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999959642555744	WITHOUT_CLASSIFICATION	4.035744425647458E-6	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999446162129937	WITHOUT_CLASSIFICATION	5.5383787006353155E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999852389722286	WITHOUT_CLASSIFICATION	1.4761027771558116E-5	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999600568363348	WITHOUT_CLASSIFICATION	3.994316366518928E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999795050437131	WITHOUT_CLASSIFICATION	2.0494956286793483E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999846725380465	WITHOUT_CLASSIFICATION	1.532746195353186E-5	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.999797555202673	WITHOUT_CLASSIFICATION	2.0244479732712297E-4	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.999954375693586	WITHOUT_CLASSIFICATION	4.5624306413950035E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9993736375970813	WITHOUT_CLASSIFICATION	6.263624029186867E-4	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.99974307261251	WITHOUT_CLASSIFICATION	2.5692738748993006E-4	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9955975005622743	WITHOUT_CLASSIFICATION	0.00440249943772574	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999838950706321	WITHOUT_CLASSIFICATION	1.6104929367815087E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9998945110629315	WITHOUT_CLASSIFICATION	1.0548893706849191E-4	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999637579567211	WITHOUT_CLASSIFICATION	3.624204327890258E-5	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.999775511667602	WITHOUT_CLASSIFICATION	2.2448833239790318E-4	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9996881915992255	WITHOUT_CLASSIFICATION	3.118084007744599E-4	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9997418526715667	WITHOUT_CLASSIFICATION	2.5814732843336326E-4	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999907699026043	WITHOUT_CLASSIFICATION	9.230097395680716E-6	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999995194415154	WITHOUT_CLASSIFICATION	4.805584846678597E-7	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999836205011202	WITHOUT_CLASSIFICATION	1.6379498879850784E-5	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999265125281798	WITHOUT_CLASSIFICATION	7.348747182030414E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9996378955818718	WITHOUT_CLASSIFICATION	3.621044181282256E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9992948265544661	WITHOUT_CLASSIFICATION	7.051734455340217E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9998183669011775	WITHOUT_CLASSIFICATION	1.816330988224542E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9998183669011775	WITHOUT_CLASSIFICATION	1.816330988224542E-4	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9983071461612703	WITHOUT_CLASSIFICATION	0.0016928538387296535	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9995549466977535	WITHOUT_CLASSIFICATION	4.450533022465722E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999904442071178	WITHOUT_CLASSIFICATION	9.555792882116663E-6	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9997481040770284	WITHOUT_CLASSIFICATION	2.5189592297161046E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9998537407674061	WITHOUT_CLASSIFICATION	1.4625923259391492E-4	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999964071518149	WITHOUT_CLASSIFICATION	3.5928481850922964E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999938293728411	WITHOUT_CLASSIFICATION	6.1706271589446614E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999926697346833	WITHOUT_CLASSIFICATION	7.330265316666379E-6	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.987374332902104	WITHOUT_CLASSIFICATION	0.01262566709789617	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9995929738572894	WITHOUT_CLASSIFICATION	4.070261427105232E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999059185040727	WITHOUT_CLASSIFICATION	9.408149592733689E-5	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9998565333363938	WITHOUT_CLASSIFICATION	1.4346666360619902E-4	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999833851977197	WITHOUT_CLASSIFICATION	1.6614802280313646E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999489225906665	WITHOUT_CLASSIFICATION	5.1077409333595745E-5	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.967603034745437	WITHOUT_CLASSIFICATION	0.03239696525456303	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999652787449417	WITHOUT_CLASSIFICATION	3.4721255058386075E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.99999837541203	WITHOUT_CLASSIFICATION	1.6245879700700867E-6	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999942462706349	WITHOUT_CLASSIFICATION	5.753729365025462E-6	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.999575792878556	WITHOUT_CLASSIFICATION	4.24207121444013E-4	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999870468811065	WITHOUT_CLASSIFICATION	1.2953118893502315E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9934875741866354	WITHOUT_CLASSIFICATION	0.0065124258133646825	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999990096887745	WITHOUT_CLASSIFICATION	9.903112255374274E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999563184113603	WITHOUT_CLASSIFICATION	4.368158863965566E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9984644768214639	WITHOUT_CLASSIFICATION	0.0015355231785361017	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9993912020182553	WITHOUT_CLASSIFICATION	6.08797981744821E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9998400709100184	WITHOUT_CLASSIFICATION	1.59929089981517E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999879063093458	WITHOUT_CLASSIFICATION	1.2093690654249263E-5	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9998906069582777	WITHOUT_CLASSIFICATION	1.0939304172223832E-4	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9997678219779796	WITHOUT_CLASSIFICATION	2.3217802202029988E-4	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999828699527221	WITHOUT_CLASSIFICATION	1.7130047277916703E-5	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999790791583142	WITHOUT_CLASSIFICATION	2.092084168575439E-5	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999936533928768	WITHOUT_CLASSIFICATION	6.346607123216305E-6	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999645479907319	WITHOUT_CLASSIFICATION	3.5452009268226105E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9996719774765574	WITHOUT_CLASSIFICATION	3.280225234425947E-4	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.999739642172495	WITHOUT_CLASSIFICATION	2.603578275049557E-4	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9997190617958257	WITHOUT_CLASSIFICATION	2.8093820417438427E-4	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999920415063435	WITHOUT_CLASSIFICATION	7.958493656422129E-6	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9998073490189285	WITHOUT_CLASSIFICATION	1.9265098107140705E-4	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9998230872552467	WITHOUT_CLASSIFICATION	1.7691274475322327E-4	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999062422373242	WITHOUT_CLASSIFICATION	9.375776267579985E-5	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999816939209222	WITHOUT_CLASSIFICATION	1.8306079077778634E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9983578820283646	WITHOUT_CLASSIFICATION	0.001642117971635405	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9994658511122871	WITHOUT_CLASSIFICATION	5.34148887712747E-4	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9979229051248897	WITHOUT_CLASSIFICATION	0.002077094875110295	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999209986673876	WITHOUT_CLASSIFICATION	7.900133261245381E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999898907440457	WITHOUT_CLASSIFICATION	1.0109255954292635E-5	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9998364110176942	WITHOUT_CLASSIFICATION	1.6358898230575206E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.999645812040107	WITHOUT_CLASSIFICATION	3.54187959892976E-4	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9996860411940577	WITHOUT_CLASSIFICATION	3.1395880594223025E-4	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999214180391134	WITHOUT_CLASSIFICATION	7.858196088656462E-5	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999323980325232	WITHOUT_CLASSIFICATION	6.760196747682205E-5	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999992172459087	WITHOUT_CLASSIFICATION	7.827540914062317E-7	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999969652367199	WITHOUT_CLASSIFICATION	3.0347632800949815E-6	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9998272877431906	WITHOUT_CLASSIFICATION	1.727122568094144E-4	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999372762277409	WITHOUT_CLASSIFICATION	6.272377225913627E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.99989806725352	WITHOUT_CLASSIFICATION	1.0193274647999214E-4	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.999976079729385	WITHOUT_CLASSIFICATION	2.3920270615000838E-5	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9998886189472281	WITHOUT_CLASSIFICATION	1.1138105277179572E-4	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9998825458782411	WITHOUT_CLASSIFICATION	1.1745412175893153E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999832903347874	WITHOUT_CLASSIFICATION	1.6709665212675104E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999832903347874	WITHOUT_CLASSIFICATION	1.6709665212675104E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999895062575447	WITHOUT_CLASSIFICATION	1.0493742455394122E-5	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.867528662252995	WITHOUT_CLASSIFICATION	0.13247133774700512	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999978328495261	WITHOUT_CLASSIFICATION	2.1671504738524578E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.829911469108874	WITHOUT_CLASSIFICATION	0.17008853089112605	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.999996264390555	WITHOUT_CLASSIFICATION	3.735609445085747E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999811484960286	WITHOUT_CLASSIFICATION	1.8851503971333147E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999886396718889	WITHOUT_CLASSIFICATION	1.1360328111062815E-5	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998534070364232	WITHOUT_CLASSIFICATION	1.4659296357676818E-4	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9998457146068391	WITHOUT_CLASSIFICATION	1.5428539316092983E-4	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999557746024155	WITHOUT_CLASSIFICATION	4.4225397584444145E-5	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9997742014681259	WITHOUT_CLASSIFICATION	2.2579853187398266E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9994862149411933	WITHOUT_CLASSIFICATION	5.137850588067069E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9806556145779237	WITHOUT_CLASSIFICATION	0.01934438542207627	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999787312133415	WITHOUT_CLASSIFICATION	2.1268786658423322E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9989368775889242	WITHOUT_CLASSIFICATION	0.0010631224110757638	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5339664742877283	IMPLEMENTATION	0.4660335257122718	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9664206620940526	WITHOUT_CLASSIFICATION	0.03357933790594738	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999882376414541	WITHOUT_CLASSIFICATION	1.1762358546041805E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9996599851948358	WITHOUT_CLASSIFICATION	3.4001480516425767E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9409967040769389	WITHOUT_CLASSIFICATION	0.05900329592306108	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999838950706321	WITHOUT_CLASSIFICATION	1.6104929367815087E-5	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999818268009029	WITHOUT_CLASSIFICATION	1.81731990970368E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9993586248462409	WITHOUT_CLASSIFICATION	6.413751537591223E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999851416645584	WITHOUT_CLASSIFICATION	1.485833544169806E-5	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9998857113288945	WITHOUT_CLASSIFICATION	1.1428867110554471E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9996955257060014	WITHOUT_CLASSIFICATION	3.044742939985029E-4	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999959755023282	WITHOUT_CLASSIFICATION	4.02449767178032E-6	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.999768552571605	WITHOUT_CLASSIFICATION	2.3144742839496332E-4	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9992935950200942	WITHOUT_CLASSIFICATION	7.064049799057958E-4	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9993722510543017	WITHOUT_CLASSIFICATION	6.277489456982661E-4	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999171273998224	WITHOUT_CLASSIFICATION	8.287260017765404E-5	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999996575113936	WITHOUT_CLASSIFICATION	3.4248860632740424E-7	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999803911202423	WITHOUT_CLASSIFICATION	1.9608879757781916E-5	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9989431888427928	WITHOUT_CLASSIFICATION	0.0010568111572072402	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9997542519034218	WITHOUT_CLASSIFICATION	2.457480965781269E-4	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999064233754004	WITHOUT_CLASSIFICATION	9.357662459964335E-5	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.999999134701111	WITHOUT_CLASSIFICATION	8.65298888931573E-7	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9991285004710307	WITHOUT_CLASSIFICATION	8.714995289693294E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9991285004710307	WITHOUT_CLASSIFICATION	8.714995289693294E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999269438917558	WITHOUT_CLASSIFICATION	7.305610824416913E-5	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999392906208333	WITHOUT_CLASSIFICATION	6.0709379166570284E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999980803890107	WITHOUT_CLASSIFICATION	1.9196109893301812E-6	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999766476473546	WITHOUT_CLASSIFICATION	2.335235264540674E-5	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999892838560587	WITHOUT_CLASSIFICATION	1.0716143941376573E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999909821575362	WITHOUT_CLASSIFICATION	9.01784246376754E-6	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9675905155176591	WITHOUT_CLASSIFICATION	0.03240948448234101	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9998896588133501	WITHOUT_CLASSIFICATION	1.1034118664988582E-4	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.999640953319565	WITHOUT_CLASSIFICATION	3.590466804350425E-4	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999810567803811	WITHOUT_CLASSIFICATION	1.894321961882314E-5	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999997777760706	WITHOUT_CLASSIFICATION	2.22223929236452E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9996890869789061	WITHOUT_CLASSIFICATION	3.109130210938948E-4	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9998584909222668	WITHOUT_CLASSIFICATION	1.4150907773318946E-4	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999181133019589	WITHOUT_CLASSIFICATION	8.188669804105681E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999994097404922	WITHOUT_CLASSIFICATION	5.902595076943633E-7	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9996467689134712	WITHOUT_CLASSIFICATION	3.5323108652882704E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999092863128807	WITHOUT_CLASSIFICATION	9.071368711926619E-5	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999763056018254	WITHOUT_CLASSIFICATION	2.3694398174611782E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999916320457889	WITHOUT_CLASSIFICATION	8.367954211077815E-6	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999412133254305	WITHOUT_CLASSIFICATION	5.878667456962247E-5	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9980177934286258	WITHOUT_CLASSIFICATION	0.0019822065713740473	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9926555615764167	WITHOUT_CLASSIFICATION	0.007344438423583292	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9947209570801555	WITHOUT_CLASSIFICATION	0.005279042919844462	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999831462458902	WITHOUT_CLASSIFICATION	1.6853754109804725E-5	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.999884718881009	WITHOUT_CLASSIFICATION	1.1528111899092448E-4	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999993215104101	WITHOUT_CLASSIFICATION	6.784895899112115E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999991837084661	WITHOUT_CLASSIFICATION	8.162915339203761E-7	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9997711415491053	WITHOUT_CLASSIFICATION	2.2885845089460586E-4	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999739552242312	WITHOUT_CLASSIFICATION	2.6044775768780022E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999911063567429	WITHOUT_CLASSIFICATION	8.893643257021756E-6	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9991633424503853	WITHOUT_CLASSIFICATION	8.366575496147386E-4	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999956888537994	WITHOUT_CLASSIFICATION	4.3111462005995045E-6	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9998730849995688	WITHOUT_CLASSIFICATION	1.269150004312586E-4	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999829244989242	WITHOUT_CLASSIFICATION	1.7075501075748668E-5	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999987574083091	WITHOUT_CLASSIFICATION	1.242591690767637E-6	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.999990526452666	WITHOUT_CLASSIFICATION	9.473547334110723E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998398801242465	WITHOUT_CLASSIFICATION	1.6011987575351516E-4	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998360824521993	WITHOUT_CLASSIFICATION	1.6391754780069678E-4	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999703741891265	WITHOUT_CLASSIFICATION	2.9625810873440244E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997964145342519	WITHOUT_CLASSIFICATION	2.0358546574795948E-4	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9991484944394774	WITHOUT_CLASSIFICATION	8.515055605226613E-4	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9987409653195349	WITHOUT_CLASSIFICATION	0.0012590346804651116	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.999440645073182	WITHOUT_CLASSIFICATION	5.593549268180001E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.999363557868861	WITHOUT_CLASSIFICATION	6.364421311389665E-4	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999312110700669	WITHOUT_CLASSIFICATION	6.878892993307406E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999618781333738	WITHOUT_CLASSIFICATION	3.8121866626178056E-5	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999811678264731	WITHOUT_CLASSIFICATION	1.8832173526901573E-5	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999672198639741	WITHOUT_CLASSIFICATION	3.278013602584001E-5	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9992935950200942	WITHOUT_CLASSIFICATION	7.064049799057958E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999875883378585	WITHOUT_CLASSIFICATION	1.2411662141501443E-4	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9994435670116733	WITHOUT_CLASSIFICATION	5.564329883268363E-4	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9996576801292004	WITHOUT_CLASSIFICATION	3.423198707995406E-4	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999981734084982	WITHOUT_CLASSIFICATION	1.8265915018410163E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999921921124567	WITHOUT_CLASSIFICATION	7.80788754339838E-6	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9992712241083902	WITHOUT_CLASSIFICATION	7.287758916097576E-4	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999834998247084	WITHOUT_CLASSIFICATION	1.6500175291683283E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998238523917922	WITHOUT_CLASSIFICATION	1.7614760820787746E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9993802629138496	WITHOUT_CLASSIFICATION	6.197370861504105E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998851110098717	WITHOUT_CLASSIFICATION	1.1488899012837466E-4	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999558445321904	WITHOUT_CLASSIFICATION	4.415546780958402E-5	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9998554422096118	WITHOUT_CLASSIFICATION	1.4455779038822508E-4	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999977567349212	WITHOUT_CLASSIFICATION	2.2432650787839357E-6	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999978937993932	WITHOUT_CLASSIFICATION	2.106200606738579E-6	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9988896313724787	WITHOUT_CLASSIFICATION	0.0011103686275213281	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999023393762636	WITHOUT_CLASSIFICATION	9.766062373629639E-5	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997915861741196	WITHOUT_CLASSIFICATION	2.0841382588045846E-4	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999376778459732	WITHOUT_CLASSIFICATION	6.232215402681758E-5	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999884896985117	WITHOUT_CLASSIFICATION	1.1510301488310083E-5	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.999999862813722	WITHOUT_CLASSIFICATION	1.371862779572116E-7	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998364876726376	WITHOUT_CLASSIFICATION	1.63512327362527E-4	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999785529974661	WITHOUT_CLASSIFICATION	2.144700253387876E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999987339290302	WITHOUT_CLASSIFICATION	1.2660709697611289E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999986466435224	WITHOUT_CLASSIFICATION	1.3533564775597857E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999986466435224	WITHOUT_CLASSIFICATION	1.3533564775597857E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999986466435224	WITHOUT_CLASSIFICATION	1.3533564775597857E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999986466435224	WITHOUT_CLASSIFICATION	1.3533564775597857E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999986466435224	WITHOUT_CLASSIFICATION	1.3533564775597857E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999986466435224	WITHOUT_CLASSIFICATION	1.3533564775597857E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999986466435224	WITHOUT_CLASSIFICATION	1.3533564775597857E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999986466435224	WITHOUT_CLASSIFICATION	1.3533564775597857E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999986466435224	WITHOUT_CLASSIFICATION	1.3533564775597857E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999986466435224	WITHOUT_CLASSIFICATION	1.3533564775597857E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9997570196168228	WITHOUT_CLASSIFICATION	2.4298038317701812E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999951062049659	WITHOUT_CLASSIFICATION	4.8937950340943925E-6	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998481689895162	WITHOUT_CLASSIFICATION	1.5183101048369866E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9997454931982622	WITHOUT_CLASSIFICATION	2.5450680173783204E-4	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9998292292829764	WITHOUT_CLASSIFICATION	1.7077071702372633E-4	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999938931671645	WITHOUT_CLASSIFICATION	6.106832835594652E-6	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999857034297073	WITHOUT_CLASSIFICATION	1.429657029280364E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9996964465926698	WITHOUT_CLASSIFICATION	3.035534073301974E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999869555194797	WITHOUT_CLASSIFICATION	1.3044480520277391E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9991714138707449	WITHOUT_CLASSIFICATION	8.28586129255127E-4	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9349021498152401	IMPLEMENTATION	0.06509785018475986	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9994099518601617	WITHOUT_CLASSIFICATION	5.900481398383464E-4	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999921913353899	WITHOUT_CLASSIFICATION	7.808664610134239E-6	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999938931671645	WITHOUT_CLASSIFICATION	6.106832835594652E-6	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9959248462095631	WITHOUT_CLASSIFICATION	0.004075153790436859	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999992080363805	WITHOUT_CLASSIFICATION	7.919636194875283E-7	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9998265409834767	WITHOUT_CLASSIFICATION	1.7345901652336242E-4	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999252891623887	WITHOUT_CLASSIFICATION	7.471083761134853E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9998860618016147	WITHOUT_CLASSIFICATION	1.1393819838537506E-4	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999915645699837	WITHOUT_CLASSIFICATION	8.435430016304398E-5	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999758650476094	WITHOUT_CLASSIFICATION	2.4134952390610576E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999954548662818	WITHOUT_CLASSIFICATION	4.545133718220913E-6	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999911278921579	WITHOUT_CLASSIFICATION	8.872107842014262E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.999998711626663	WITHOUT_CLASSIFICATION	1.288373337013878E-6	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999919712787831	WITHOUT_CLASSIFICATION	8.028721216831587E-6	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9998468952514626	WITHOUT_CLASSIFICATION	1.531047485372605E-4	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999294990151807	WITHOUT_CLASSIFICATION	7.050098481925817E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9997063938034386	WITHOUT_CLASSIFICATION	2.936061965613747E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999567780718647	WITHOUT_CLASSIFICATION	4.322192813540653E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9998825043142281	WITHOUT_CLASSIFICATION	1.1749568577192732E-4	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999713952010417	WITHOUT_CLASSIFICATION	2.860479895830303E-5	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999769946824139	WITHOUT_CLASSIFICATION	2.300531758612756E-5	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.999978755962354	WITHOUT_CLASSIFICATION	2.1244037646013052E-5	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.999399722383672	WITHOUT_CLASSIFICATION	6.002776163279343E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999452066531818	WITHOUT_CLASSIFICATION	5.479334681829241E-5	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9995765676542959	WITHOUT_CLASSIFICATION	4.234323457041059E-4	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9998287197888365	WITHOUT_CLASSIFICATION	1.7128021116352696E-4	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999380144191691	WITHOUT_CLASSIFICATION	6.19855808308946E-5	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999894870835242	WITHOUT_CLASSIFICATION	1.0512916475801125E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9993957602133084	WITHOUT_CLASSIFICATION	6.042397866915138E-4	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9998448371994582	WITHOUT_CLASSIFICATION	1.5516280054186728E-4	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999798490829838	WITHOUT_CLASSIFICATION	2.0150917016245543E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9998332287269873	WITHOUT_CLASSIFICATION	1.6677127301267038E-4	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9997378448770293	WITHOUT_CLASSIFICATION	2.6215512297067577E-4	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999681312162596	WITHOUT_CLASSIFICATION	3.1868783740315574E-5	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999936577366026	WITHOUT_CLASSIFICATION	6.34226339732796E-6	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999832903347874	WITHOUT_CLASSIFICATION	1.6709665212675104E-5	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9998280677358122	WITHOUT_CLASSIFICATION	1.7193226418774833E-4	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999881931086547	WITHOUT_CLASSIFICATION	1.1806891345290835E-5	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9871860848858306	WITHOUT_CLASSIFICATION	0.01281391511416943	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.979085837158447	WITHOUT_CLASSIFICATION	0.02091416284155303	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9994718035570325	WITHOUT_CLASSIFICATION	5.281964429674353E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998761768398847	WITHOUT_CLASSIFICATION	1.238231601152367E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998761768398847	WITHOUT_CLASSIFICATION	1.238231601152367E-4	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999495140802525	WITHOUT_CLASSIFICATION	5.048591974765322E-5	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9813627811660405	WITHOUT_CLASSIFICATION	0.018637218833959558	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999748194067136	WITHOUT_CLASSIFICATION	2.518059328636965E-5	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9989884370500977	WITHOUT_CLASSIFICATION	0.0010115629499023945	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999683755837665	WITHOUT_CLASSIFICATION	3.162441623345238E-5	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9993341104101865	WITHOUT_CLASSIFICATION	6.65889589813465E-4	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9998179973147238	WITHOUT_CLASSIFICATION	1.8200268527628294E-4	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999919156699938	WITHOUT_CLASSIFICATION	8.084330006182184E-6	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998135790401644	WITHOUT_CLASSIFICATION	1.8642095983556543E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998135790401644	WITHOUT_CLASSIFICATION	1.8642095983556543E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998135790401644	WITHOUT_CLASSIFICATION	1.8642095983556543E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999969768426589	WITHOUT_CLASSIFICATION	3.023157341090455E-6	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9738175112390908	WITHOUT_CLASSIFICATION	0.026182488760909218	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999951101596599	WITHOUT_CLASSIFICATION	4.889840340132762E-6	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5339664742877283	IMPLEMENTATION	0.4660335257122718	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.884693442718512	WITHOUT_CLASSIFICATION	0.11530655728148798	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9942822688048322	WITHOUT_CLASSIFICATION	0.00571773119516775	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999839649562243	WITHOUT_CLASSIFICATION	1.6035043775723567E-5	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999995834375263	WITHOUT_CLASSIFICATION	4.165624736726963E-7	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9738175112390908	WITHOUT_CLASSIFICATION	0.026182488760909218	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999459097634164	WITHOUT_CLASSIFICATION	5.4090236583768315E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999459097634164	WITHOUT_CLASSIFICATION	5.4090236583768315E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999762049586419	WITHOUT_CLASSIFICATION	2.3795041358045496E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998270581400388	WITHOUT_CLASSIFICATION	1.729418599611565E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998718116199438	WITHOUT_CLASSIFICATION	1.2818838005621585E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998690546735842	WITHOUT_CLASSIFICATION	1.309453264158224E-4	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9953680945277206	WITHOUT_CLASSIFICATION	0.004631905472279342	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9978997461591758	WITHOUT_CLASSIFICATION	0.002100253840824255	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9987658677617627	WITHOUT_CLASSIFICATION	0.001234132238237344	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999888184632901	WITHOUT_CLASSIFICATION	1.1181536709775252E-5	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9994690849724029	WITHOUT_CLASSIFICATION	5.309150275970957E-4	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999506343807062	WITHOUT_CLASSIFICATION	4.936561929383831E-5	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999999119646743	WITHOUT_CLASSIFICATION	8.803532568638144E-8	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999762665694217	WITHOUT_CLASSIFICATION	2.3733430578231098E-5	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9993654743354331	WITHOUT_CLASSIFICATION	6.345256645669911E-4	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999376380044861	WITHOUT_CLASSIFICATION	6.236199551389156E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999244528446624	WITHOUT_CLASSIFICATION	7.554715533767408E-5	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9986411600347792	WITHOUT_CLASSIFICATION	0.0013588399652208448	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9990694125296979	WITHOUT_CLASSIFICATION	9.305874703019733E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9991397471758205	WITHOUT_CLASSIFICATION	8.602528241794779E-4	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999686392082173	WITHOUT_CLASSIFICATION	3.136079178261893E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.999272056456471	WITHOUT_CLASSIFICATION	7.279435435291154E-4	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999678869251699	WITHOUT_CLASSIFICATION	3.211307483001133E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999851416645584	WITHOUT_CLASSIFICATION	1.485833544169806E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999909821575362	WITHOUT_CLASSIFICATION	9.01784246376754E-6	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9994403820963291	WITHOUT_CLASSIFICATION	5.596179036708367E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999445374221012	WITHOUT_CLASSIFICATION	5.5462577898897104E-5	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999703838560222	WITHOUT_CLASSIFICATION	2.9616143977811338E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9997404758636192	WITHOUT_CLASSIFICATION	2.595241363807263E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9998074466157211	WITHOUT_CLASSIFICATION	1.925533842788064E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9998074466157211	WITHOUT_CLASSIFICATION	1.925533842788064E-4	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999938846799556	WITHOUT_CLASSIFICATION	6.1153200444061675E-6	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999874334260472	WITHOUT_CLASSIFICATION	1.2566573952723586E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9998347579694716	WITHOUT_CLASSIFICATION	1.6524203052841626E-4	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999831967910031	WITHOUT_CLASSIFICATION	1.6803208996921042E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999030623394202	WITHOUT_CLASSIFICATION	9.693766057985329E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9997281357129536	WITHOUT_CLASSIFICATION	2.7186428704641113E-4	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9998019958030513	WITHOUT_CLASSIFICATION	1.980041969486146E-4	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999370196098084	WITHOUT_CLASSIFICATION	6.298039019166064E-5	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999725195262451	WITHOUT_CLASSIFICATION	2.748047375489036E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999989003511419	WITHOUT_CLASSIFICATION	1.0996488580886695E-6	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9994982813713553	WITHOUT_CLASSIFICATION	5.017186286446481E-4	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999788936569578	WITHOUT_CLASSIFICATION	2.110634304213471E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999638788654301	WITHOUT_CLASSIFICATION	3.612113456981077E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999842996040655	WITHOUT_CLASSIFICATION	1.570039593454687E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999418194758265	WITHOUT_CLASSIFICATION	5.818052417356837E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999937251276032	WITHOUT_CLASSIFICATION	6.274872396798995E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999353498158683	WITHOUT_CLASSIFICATION	6.465018413165571E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999843021406463	WITHOUT_CLASSIFICATION	1.56978593537346E-5	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.999997160980225	WITHOUT_CLASSIFICATION	2.8390197749710256E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999337604079693	WITHOUT_CLASSIFICATION	6.623959203062343E-5	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999718484336295	WITHOUT_CLASSIFICATION	2.815156637039263E-5	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999761028918119	WITHOUT_CLASSIFICATION	2.389710818807392E-5	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9996126565825656	WITHOUT_CLASSIFICATION	3.873434174343446E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9998718986316855	WITHOUT_CLASSIFICATION	1.2810136831456834E-4	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999656721931176	WITHOUT_CLASSIFICATION	3.43278068824589E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999638788654301	WITHOUT_CLASSIFICATION	3.612113456981077E-5	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999611257925397	WITHOUT_CLASSIFICATION	3.8874207460295146E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999418194758265	WITHOUT_CLASSIFICATION	5.818052417356837E-5	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9998812311710095	WITHOUT_CLASSIFICATION	1.1876882899055911E-4	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.997806648006013	WITHOUT_CLASSIFICATION	0.0021933519939869783	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9993937133279869	WITHOUT_CLASSIFICATION	6.062866720131785E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9988747861084663	WITHOUT_CLASSIFICATION	0.0011252138915337309	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.998056020127625	WITHOUT_CLASSIFICATION	0.0019439798723750942	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.999171083131314	WITHOUT_CLASSIFICATION	8.289168686859667E-4	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.99981472197443	WITHOUT_CLASSIFICATION	1.8527802557008832E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9997867915560598	WITHOUT_CLASSIFICATION	2.132084439403146E-4	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998329499378887	WITHOUT_CLASSIFICATION	1.6705006211121065E-4	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9998583450001578	WITHOUT_CLASSIFICATION	1.4165499984219028E-4	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9998594612293145	WITHOUT_CLASSIFICATION	1.4053877068556357E-4	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999910557177966	WITHOUT_CLASSIFICATION	8.944282203374544E-6	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999514257216963	WITHOUT_CLASSIFICATION	4.8574278303656785E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999428386775643	WITHOUT_CLASSIFICATION	5.716132243583524E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999328587342494	WITHOUT_CLASSIFICATION	6.714126575052429E-5	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999331548135282	WITHOUT_CLASSIFICATION	6.684518647185212E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9991285004710307	WITHOUT_CLASSIFICATION	8.714995289693294E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999838950706321	WITHOUT_CLASSIFICATION	1.6104929367815087E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999880116622588	WITHOUT_CLASSIFICATION	1.1988337741238596E-5	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999371103875441	WITHOUT_CLASSIFICATION	6.288961245595103E-5	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9992270350826485	WITHOUT_CLASSIFICATION	7.729649173515235E-4	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999838950706321	WITHOUT_CLASSIFICATION	1.6104929367815087E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999686125454277	WITHOUT_CLASSIFICATION	3.1387454572290125E-5	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9994688064155718	WITHOUT_CLASSIFICATION	5.311935844281891E-4	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.999042355079878	WITHOUT_CLASSIFICATION	9.576449201220175E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999926519561382	WITHOUT_CLASSIFICATION	7.348043861770913E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999925547471273	WITHOUT_CLASSIFICATION	7.445252872691736E-6	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999485183996866	WITHOUT_CLASSIFICATION	5.148160031348575E-5	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999286369790006	WITHOUT_CLASSIFICATION	7.136302099943109E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9989104803009845	WITHOUT_CLASSIFICATION	0.001089519699015501	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9989104803009845	WITHOUT_CLASSIFICATION	0.001089519699015501	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9926867660399524	WITHOUT_CLASSIFICATION	0.007313233960047482	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999644663408743	WITHOUT_CLASSIFICATION	3.55336591257747E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999390466039366	WITHOUT_CLASSIFICATION	6.095339606337352E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9996616668750883	WITHOUT_CLASSIFICATION	3.3833312491169786E-4	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.999715164416204	WITHOUT_CLASSIFICATION	2.8483558379601765E-4	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999776708955412	WITHOUT_CLASSIFICATION	2.2329104458718906E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9989685109905323	WITHOUT_CLASSIFICATION	0.001031489009467675	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999134538313911	WITHOUT_CLASSIFICATION	8.654616860904054E-5	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9998656579036189	WITHOUT_CLASSIFICATION	1.343420963811158E-4	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9998622881140548	WITHOUT_CLASSIFICATION	1.3771188594520175E-4	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998728922963184	WITHOUT_CLASSIFICATION	1.27107703681603E-4	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9996085598555563	WITHOUT_CLASSIFICATION	3.9144014444369405E-4	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9996585545004172	WITHOUT_CLASSIFICATION	3.4144549958288944E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9982043890620079	WITHOUT_CLASSIFICATION	0.0017956109379921356	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9832608421846208	WITHOUT_CLASSIFICATION	0.016739157815379106	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9994465270708268	WITHOUT_CLASSIFICATION	5.534729291732992E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9997378657649292	WITHOUT_CLASSIFICATION	2.621342350708601E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998252954334157	WITHOUT_CLASSIFICATION	1.7470456658431958E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998252954334157	WITHOUT_CLASSIFICATION	1.7470456658431958E-4	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999985887147581	WITHOUT_CLASSIFICATION	1.411285241855746E-6	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9982122659609128	WITHOUT_CLASSIFICATION	0.00178773403908711	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999449370806226	WITHOUT_CLASSIFICATION	5.506291937749134E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998252954334157	WITHOUT_CLASSIFICATION	1.7470456658431958E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998252954334157	WITHOUT_CLASSIFICATION	1.7470456658431958E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999925830735129	WITHOUT_CLASSIFICATION	7.4169264871128546E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999925830735129	WITHOUT_CLASSIFICATION	7.4169264871128546E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9992915529184337	WITHOUT_CLASSIFICATION	7.084470815662976E-4	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9982122659609128	WITHOUT_CLASSIFICATION	0.00178773403908711	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999956668291946	WITHOUT_CLASSIFICATION	4.333170805410827E-6	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999966798328097	WITHOUT_CLASSIFICATION	3.320167190282384E-6	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999535085865258	WITHOUT_CLASSIFICATION	4.649141347429811E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999535085865258	WITHOUT_CLASSIFICATION	4.649141347429811E-5	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9998301326039198	WITHOUT_CLASSIFICATION	1.6986739608024386E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9918046881559925	WITHOUT_CLASSIFICATION	0.008195311844007493	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999413172483645	WITHOUT_CLASSIFICATION	5.868275163548125E-5	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9982014462306765	WITHOUT_CLASSIFICATION	0.0017985537693234104	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999925830735129	WITHOUT_CLASSIFICATION	7.4169264871128546E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999450890363576	WITHOUT_CLASSIFICATION	5.491096364250051E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9645273897944597	WITHOUT_CLASSIFICATION	0.03547261020554019	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999840597573127	WITHOUT_CLASSIFICATION	1.594024268720442E-5	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999983689601698	WITHOUT_CLASSIFICATION	1.6310398302251354E-6	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999328573128712	WITHOUT_CLASSIFICATION	6.71426871288216E-5	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9978862222642877	WITHOUT_CLASSIFICATION	0.002113777735712293	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.999875883378585	WITHOUT_CLASSIFICATION	1.2411662141501443E-4	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999804979232851	WITHOUT_CLASSIFICATION	1.9502076714805353E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999792858305816	WITHOUT_CLASSIFICATION	2.071416941847202E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9994465270708268	WITHOUT_CLASSIFICATION	5.534729291732992E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998252954334157	WITHOUT_CLASSIFICATION	1.7470456658431958E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999925830735129	WITHOUT_CLASSIFICATION	7.4169264871128546E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999450890363576	WITHOUT_CLASSIFICATION	5.491096364250051E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9949354516911971	WITHOUT_CLASSIFICATION	0.005064548308802885	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9949354516911971	WITHOUT_CLASSIFICATION	0.005064548308802885	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.980175126710605	WITHOUT_CLASSIFICATION	0.019824873289394945	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.999911999088491	WITHOUT_CLASSIFICATION	8.8000911508951E-5	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9988370545004794	WITHOUT_CLASSIFICATION	0.0011629454995206105	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999254780417286	WITHOUT_CLASSIFICATION	7.452195827141518E-5	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9998755138364536	WITHOUT_CLASSIFICATION	1.2448616354641918E-4	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999837022525848	WITHOUT_CLASSIFICATION	1.6297747415241257E-5	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999666525921677	WITHOUT_CLASSIFICATION	3.334740783223584E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999599510488605	WITHOUT_CLASSIFICATION	4.00489511394675E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999608224480954	WITHOUT_CLASSIFICATION	3.917755190464997E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999734027768173	WITHOUT_CLASSIFICATION	2.6597223182581085E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9977903306879304	WITHOUT_CLASSIFICATION	0.0022096693120695577	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9988401941698147	WITHOUT_CLASSIFICATION	0.001159805830185218	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999062458725149	WITHOUT_CLASSIFICATION	9.375412748504932E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9997378657649292	WITHOUT_CLASSIFICATION	2.621342350708601E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999925830735129	WITHOUT_CLASSIFICATION	7.4169264871128546E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9918046881559925	WITHOUT_CLASSIFICATION	0.008195311844007493	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999413172483645	WITHOUT_CLASSIFICATION	5.868275163548125E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999413172483645	WITHOUT_CLASSIFICATION	5.868275163548125E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999925830735129	WITHOUT_CLASSIFICATION	7.4169264871128546E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999450890363576	WITHOUT_CLASSIFICATION	5.491096364250051E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999450890363576	WITHOUT_CLASSIFICATION	5.491096364250051E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9949354516911971	WITHOUT_CLASSIFICATION	0.005064548308802885	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999155011174489	WITHOUT_CLASSIFICATION	8.449888255113801E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9968580056740544	WITHOUT_CLASSIFICATION	0.003141994325945776	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999884502385	WITHOUT_CLASSIFICATION	1.1549761400506403E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994736227728945	WITHOUT_CLASSIFICATION	5.263772271054653E-4	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9998899338724122	WITHOUT_CLASSIFICATION	1.100661275877175E-4	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9929322906400241	WITHOUT_CLASSIFICATION	0.007067709359975967	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999694583876888	WITHOUT_CLASSIFICATION	3.054161231112358E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999859764464765	WITHOUT_CLASSIFICATION	1.4023553523614537E-5	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999061635478167	WITHOUT_CLASSIFICATION	9.383645218323561E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9918046881559925	WITHOUT_CLASSIFICATION	0.008195311844007493	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999413172483645	WITHOUT_CLASSIFICATION	5.868275163548125E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999413172483645	WITHOUT_CLASSIFICATION	5.868275163548125E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999925830735129	WITHOUT_CLASSIFICATION	7.4169264871128546E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999599510488605	WITHOUT_CLASSIFICATION	4.00489511394675E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999734027768173	WITHOUT_CLASSIFICATION	2.6597223182581085E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9996363068903902	WITHOUT_CLASSIFICATION	3.636931096097503E-4	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999707250119066	WITHOUT_CLASSIFICATION	2.9274988093364973E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9982220672791522	WITHOUT_CLASSIFICATION	0.0017779327208477516	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9982220672791522	WITHOUT_CLASSIFICATION	0.0017779327208477516	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998505301431506	WITHOUT_CLASSIFICATION	1.4946985684935975E-4	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9995382393263591	WITHOUT_CLASSIFICATION	4.617606736409216E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999124220932037	WITHOUT_CLASSIFICATION	8.757790679627993E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9998970376296092	WITHOUT_CLASSIFICATION	1.0296237039079155E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9998970376296092	WITHOUT_CLASSIFICATION	1.0296237039079155E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999582698695588	WITHOUT_CLASSIFICATION	4.17301304410964E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999582698695588	WITHOUT_CLASSIFICATION	4.17301304410964E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999285404024607	WITHOUT_CLASSIFICATION	7.145959753920046E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999285404024607	WITHOUT_CLASSIFICATION	7.145959753920046E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9998958311283391	WITHOUT_CLASSIFICATION	1.0416887166087576E-4	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999617876481504	WITHOUT_CLASSIFICATION	3.8212351849687975E-5	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9998290163525086	WITHOUT_CLASSIFICATION	1.7098364749144527E-4	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999867715532414	WITHOUT_CLASSIFICATION	1.3228446758492205E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999833041963085	WITHOUT_CLASSIFICATION	1.6695803691434315E-5	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9973763411543329	WITHOUT_CLASSIFICATION	0.002623658845667095	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9986067808204684	WITHOUT_CLASSIFICATION	0.001393219179531603	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999053736637175	WITHOUT_CLASSIFICATION	9.462633628255806E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999427225413826	WITHOUT_CLASSIFICATION	5.7277458617279015E-5	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9993108725491023	WITHOUT_CLASSIFICATION	6.891274508977109E-4	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9998097228806216	WITHOUT_CLASSIFICATION	1.9027711937846182E-4	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9992785412677465	WITHOUT_CLASSIFICATION	7.214587322535235E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998183354017697	WITHOUT_CLASSIFICATION	1.8166459823021718E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998183354017697	WITHOUT_CLASSIFICATION	1.8166459823021718E-4	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9996967748259706	WITHOUT_CLASSIFICATION	3.032251740292836E-4	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9978997461591758	WITHOUT_CLASSIFICATION	0.002100253840824255	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9988598038109534	WITHOUT_CLASSIFICATION	0.0011401961890466132	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9997289542858226	WITHOUT_CLASSIFICATION	2.710457141773885E-4	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999535231625227	WITHOUT_CLASSIFICATION	4.647683747732876E-5	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9997923867710007	WITHOUT_CLASSIFICATION	2.0761322899934473E-4	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9995452544947571	WITHOUT_CLASSIFICATION	4.547455052429469E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999344386546017	WITHOUT_CLASSIFICATION	6.556134539829152E-5	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999478938331169	WITHOUT_CLASSIFICATION	5.210616688300003E-5	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999948812511005	WITHOUT_CLASSIFICATION	5.118748899549043E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999348932167889	WITHOUT_CLASSIFICATION	6.510678321121294E-5	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9984443008172543	WITHOUT_CLASSIFICATION	0.0015556991827456168	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999556397209017	WITHOUT_CLASSIFICATION	4.436027909815555E-5	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999461376494024	WITHOUT_CLASSIFICATION	5.3862350597551364E-5	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999696748944038	WITHOUT_CLASSIFICATION	3.0325105596229313E-5	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9998820831023718	WITHOUT_CLASSIFICATION	1.1791689762824971E-4	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9987105260625728	WITHOUT_CLASSIFICATION	0.0012894739374272025	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9993208105348729	WITHOUT_CLASSIFICATION	6.791894651271589E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999910847689544	WITHOUT_CLASSIFICATION	8.915231045552035E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999910847689544	WITHOUT_CLASSIFICATION	8.915231045552035E-6	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9997146377843605	WITHOUT_CLASSIFICATION	2.8536221563949264E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.999875883378585	WITHOUT_CLASSIFICATION	1.2411662141501443E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999895535312467	WITHOUT_CLASSIFICATION	1.0446468753228834E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999842749288123	WITHOUT_CLASSIFICATION	1.572507118773293E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999842749288123	WITHOUT_CLASSIFICATION	1.572507118773293E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9997232602628104	WITHOUT_CLASSIFICATION	2.767397371895632E-4	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.999983470098811	WITHOUT_CLASSIFICATION	1.652990118909937E-5	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999252320545959	WITHOUT_CLASSIFICATION	7.47679454040705E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9968647212391347	WITHOUT_CLASSIFICATION	0.003135278760865299	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998438533308943	WITHOUT_CLASSIFICATION	1.5614666910563713E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998438533308943	WITHOUT_CLASSIFICATION	1.5614666910563713E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999697169242102	WITHOUT_CLASSIFICATION	3.028307578980773E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999697169242102	WITHOUT_CLASSIFICATION	3.028307578980773E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999697169242102	WITHOUT_CLASSIFICATION	3.028307578980773E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998438533308943	WITHOUT_CLASSIFICATION	1.5614666910563713E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998438533308943	WITHOUT_CLASSIFICATION	1.5614666910563713E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9968647212391347	WITHOUT_CLASSIFICATION	0.003135278760865299	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.999410321935528	WITHOUT_CLASSIFICATION	5.896780644719013E-4	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999460660975839	WITHOUT_CLASSIFICATION	5.393390241599959E-5	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999390413325441	WITHOUT_CLASSIFICATION	6.095866745598613E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999760580586063	WITHOUT_CLASSIFICATION	2.3941941393600087E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999974799884365	WITHOUT_CLASSIFICATION	2.5200115634256045E-6	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9987124028513295	WITHOUT_CLASSIFICATION	0.0012875971486705046	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999926549261137	WITHOUT_CLASSIFICATION	7.34507388641073E-6	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999743972092695	WITHOUT_CLASSIFICATION	2.5602790730546734E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999348932167889	WITHOUT_CLASSIFICATION	6.510678321121294E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998438533308943	WITHOUT_CLASSIFICATION	1.5614666910563713E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998438533308943	WITHOUT_CLASSIFICATION	1.5614666910563713E-4	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9997283422204504	WITHOUT_CLASSIFICATION	2.7165777954969234E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9994134368945121	WITHOUT_CLASSIFICATION	5.865631054877849E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9993876734241542	WITHOUT_CLASSIFICATION	6.123265758456557E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999945419126843	WITHOUT_CLASSIFICATION	5.458087315669993E-6	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9993220471179687	WITHOUT_CLASSIFICATION	6.779528820313117E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9979675380703074	WITHOUT_CLASSIFICATION	0.0020324619296926386	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995830567856709	WITHOUT_CLASSIFICATION	4.1694321432902384E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999980794347647	WITHOUT_CLASSIFICATION	1.920565235322695E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9997250624969051	WITHOUT_CLASSIFICATION	2.7493750309497594E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999356174535521	WITHOUT_CLASSIFICATION	6.438254644799854E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9994038125567564	WITHOUT_CLASSIFICATION	5.961874432436942E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999305363168839	WITHOUT_CLASSIFICATION	6.946368311611787E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998516202206389	WITHOUT_CLASSIFICATION	1.4837977936117962E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998390468826576	WITHOUT_CLASSIFICATION	1.6095311734245265E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999984350230454	WITHOUT_CLASSIFICATION	1.5649769545934066E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999607626091863	WITHOUT_CLASSIFICATION	3.9237390813732054E-5	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999367187606947	WITHOUT_CLASSIFICATION	6.328123930525802E-5	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999677394211687	WITHOUT_CLASSIFICATION	3.226057883132465E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9998349712875021	WITHOUT_CLASSIFICATION	1.650287124979729E-4	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999167346809271	WITHOUT_CLASSIFICATION	8.32653190728352E-5	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999064976185508	WITHOUT_CLASSIFICATION	9.350238144915804E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999995103612443	WITHOUT_CLASSIFICATION	4.896387556657376E-7	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9994577858424994	WITHOUT_CLASSIFICATION	5.422141575006336E-4	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999313694153591	WITHOUT_CLASSIFICATION	6.863058464085939E-5	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999656736455	WITHOUT_CLASSIFICATION	3.432635450001195E-5	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9987363790244405	WITHOUT_CLASSIFICATION	0.0012636209755595212	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9975064622101093	WITHOUT_CLASSIFICATION	0.002493537789890645	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9997232602628104	WITHOUT_CLASSIFICATION	2.767397371895632E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998438533308943	WITHOUT_CLASSIFICATION	1.5614666910563713E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998438533308943	WITHOUT_CLASSIFICATION	1.5614666910563713E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9968647212391347	WITHOUT_CLASSIFICATION	0.003135278760865299	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9987124028513295	WITHOUT_CLASSIFICATION	0.0012875971486705046	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9994134368945121	WITHOUT_CLASSIFICATION	5.865631054877849E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999945419126843	WITHOUT_CLASSIFICATION	5.458087315669993E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9979675380703074	WITHOUT_CLASSIFICATION	0.0020324619296926386	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9993876734241542	WITHOUT_CLASSIFICATION	6.123265758456557E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995830567856709	WITHOUT_CLASSIFICATION	4.1694321432902384E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999356174535521	WITHOUT_CLASSIFICATION	6.438254644799854E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9997250624969051	WITHOUT_CLASSIFICATION	2.7493750309497594E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999305363168839	WITHOUT_CLASSIFICATION	6.946368311611787E-5	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9993791752356496	WITHOUT_CLASSIFICATION	6.208247643504888E-4	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9998955704228314	WITHOUT_CLASSIFICATION	1.0442957716861742E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9994026010447543	WITHOUT_CLASSIFICATION	5.973989552457295E-4	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999318815701361	WITHOUT_CLASSIFICATION	6.811842986387781E-5	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9996419037759043	WITHOUT_CLASSIFICATION	3.580962240956301E-4	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999627050157365	WITHOUT_CLASSIFICATION	3.7294984263547557E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.999306240792313	WITHOUT_CLASSIFICATION	6.937592076870757E-4	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9998362235866086	WITHOUT_CLASSIFICATION	1.6377641339145716E-4	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.999720274367469	WITHOUT_CLASSIFICATION	2.797256325309409E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999974792905448	WITHOUT_CLASSIFICATION	2.5207094551463774E-6	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9991911091615597	WITHOUT_CLASSIFICATION	8.088908384403046E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999128270848208	WITHOUT_CLASSIFICATION	8.717291517919343E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999359253214748	WITHOUT_CLASSIFICATION	6.407467852525505E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999965080462327	WITHOUT_CLASSIFICATION	3.4919537672071075E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999968451101611	WITHOUT_CLASSIFICATION	3.1548898389014593E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999463365656558	WITHOUT_CLASSIFICATION	5.3663434344236356E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9997728221873748	WITHOUT_CLASSIFICATION	2.2717781262506553E-4	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9996692630334142	WITHOUT_CLASSIFICATION	3.30736966585731E-4	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999518265073762	WITHOUT_CLASSIFICATION	4.8173492623811455E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999548181299927	WITHOUT_CLASSIFICATION	4.518187000740015E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999537024222578	WITHOUT_CLASSIFICATION	4.629757774211935E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999498558926481	WITHOUT_CLASSIFICATION	5.014410735187605E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999498558926481	WITHOUT_CLASSIFICATION	5.014410735187605E-5	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999688253619541	WITHOUT_CLASSIFICATION	3.1174638045910245E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9926772517766513	WITHOUT_CLASSIFICATION	0.007322748223348641	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9926772517766513	WITHOUT_CLASSIFICATION	0.007322748223348641	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9997705996739858	WITHOUT_CLASSIFICATION	2.2940032601419477E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9994533692628381	WITHOUT_CLASSIFICATION	5.466307371619428E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9994533692628381	WITHOUT_CLASSIFICATION	5.466307371619428E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999618726233653	WITHOUT_CLASSIFICATION	3.812737663459957E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999618726233653	WITHOUT_CLASSIFICATION	3.812737663459957E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999888346736517	WITHOUT_CLASSIFICATION	1.1165326348262708E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999888346736517	WITHOUT_CLASSIFICATION	1.1165326348262708E-5	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9998989461344101	WITHOUT_CLASSIFICATION	1.0105386558992702E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9995602336415051	WITHOUT_CLASSIFICATION	4.3976635849486223E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9995602336415051	WITHOUT_CLASSIFICATION	4.3976635849486223E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9996873499059	WITHOUT_CLASSIFICATION	3.126500940999966E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9996873499059	WITHOUT_CLASSIFICATION	3.126500940999966E-4	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999905787308413	WITHOUT_CLASSIFICATION	9.42126915876789E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9989224952020163	WITHOUT_CLASSIFICATION	0.0010775047979836817	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9989224952020163	WITHOUT_CLASSIFICATION	0.0010775047979836817	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999606800629784	WITHOUT_CLASSIFICATION	3.931993702160271E-4	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9962293520589012	WITHOUT_CLASSIFICATION	0.003770647941098912	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999893173593365	WITHOUT_CLASSIFICATION	1.0682640663483972E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999606800629784	WITHOUT_CLASSIFICATION	3.931993702160271E-4	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.99996030441572	WITHOUT_CLASSIFICATION	3.9695584280032775E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9997510515106411	WITHOUT_CLASSIFICATION	2.4894848935890754E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999891139520243	WITHOUT_CLASSIFICATION	1.0886047975799918E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999859277732853	WITHOUT_CLASSIFICATION	1.4072226714684688E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999859277732853	WITHOUT_CLASSIFICATION	1.4072226714684688E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9992041736752117	WITHOUT_CLASSIFICATION	7.958263247881936E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9998872521276588	WITHOUT_CLASSIFICATION	1.1274787234119334E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9998872521276588	WITHOUT_CLASSIFICATION	1.1274787234119334E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9998941141251969	WITHOUT_CLASSIFICATION	1.0588587480308827E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999877651036975	WITHOUT_CLASSIFICATION	1.2234896302444452E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999877651036975	WITHOUT_CLASSIFICATION	1.2234896302444452E-5	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9994214724906686	WITHOUT_CLASSIFICATION	5.785275093313398E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999891139520243	WITHOUT_CLASSIFICATION	1.0886047975799918E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999859277732853	WITHOUT_CLASSIFICATION	1.4072226714684688E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9992041736752117	WITHOUT_CLASSIFICATION	7.958263247881936E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9998872521276588	WITHOUT_CLASSIFICATION	1.1274787234119334E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9998872521276588	WITHOUT_CLASSIFICATION	1.1274787234119334E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9998941141251969	WITHOUT_CLASSIFICATION	1.0588587480308827E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999747263936238	WITHOUT_CLASSIFICATION	2.5273606376250715E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9989142266572009	WITHOUT_CLASSIFICATION	0.0010857733427991265	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999542941375754	WITHOUT_CLASSIFICATION	4.5705862424581135E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9993714472793448	WITHOUT_CLASSIFICATION	6.285527206551184E-4	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999044016685963	WITHOUT_CLASSIFICATION	9.5598331403769E-5	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999962948108768	WITHOUT_CLASSIFICATION	3.7051891230590024E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.999996938882852	WITHOUT_CLASSIFICATION	3.0611171479373002E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.999996938882852	WITHOUT_CLASSIFICATION	3.0611171479373002E-6	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9997458604767483	WITHOUT_CLASSIFICATION	2.5413952325173324E-4	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9998555224893364	WITHOUT_CLASSIFICATION	1.4447751066353607E-4	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9998555224893364	WITHOUT_CLASSIFICATION	1.4447751066353607E-4	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.999942258682346	WITHOUT_CLASSIFICATION	5.7741317654093515E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9998555224893364	WITHOUT_CLASSIFICATION	1.4447751066353607E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9998555224893364	WITHOUT_CLASSIFICATION	1.4447751066353607E-4	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9997518451724781	WITHOUT_CLASSIFICATION	2.481548275219927E-4	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9998633247527402	WITHOUT_CLASSIFICATION	1.3667524725983845E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998253909350094	WITHOUT_CLASSIFICATION	1.7460906499063662E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998253909350094	WITHOUT_CLASSIFICATION	1.7460906499063662E-4	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9998555224893364	WITHOUT_CLASSIFICATION	1.4447751066353607E-4	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9937066309546286	WITHOUT_CLASSIFICATION	0.006293369045371446	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9987375173890558	WITHOUT_CLASSIFICATION	0.0012624826109442575	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999446740058432	WITHOUT_CLASSIFICATION	5.532599415684085E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9995596630280963	WITHOUT_CLASSIFICATION	4.40336971903749E-4	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999990021860707	WITHOUT_CLASSIFICATION	9.978139291895158E-7	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999840835341895	WITHOUT_CLASSIFICATION	1.5916465810346056E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.999105572420787	WITHOUT_CLASSIFICATION	8.944275792129859E-4	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999852106382009	WITHOUT_CLASSIFICATION	1.4789361799225504E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.999999813314213	WITHOUT_CLASSIFICATION	1.8668578711389552E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999400124011965	WITHOUT_CLASSIFICATION	5.9987598803675834E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999400124011965	WITHOUT_CLASSIFICATION	5.9987598803675834E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9993486934809742	WITHOUT_CLASSIFICATION	6.513065190257472E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9993486934809742	WITHOUT_CLASSIFICATION	6.513065190257472E-4	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999405473000346	WITHOUT_CLASSIFICATION	5.9452699965464015E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997307582288918	WITHOUT_CLASSIFICATION	2.6924177110820906E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997307582288918	WITHOUT_CLASSIFICATION	2.6924177110820906E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997307582288918	WITHOUT_CLASSIFICATION	2.6924177110820906E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999267285318456	WITHOUT_CLASSIFICATION	7.327146815430337E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999806061868566	WITHOUT_CLASSIFICATION	1.9393813143392052E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999806061868566	WITHOUT_CLASSIFICATION	1.9393813143392052E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999883893873042	WITHOUT_CLASSIFICATION	1.1610612695804435E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9998569750689437	WITHOUT_CLASSIFICATION	1.4302493105629852E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999010765922369	WITHOUT_CLASSIFICATION	9.892340776311718E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.998988315256738	WITHOUT_CLASSIFICATION	0.0010116847432620091	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9998677144756554	WITHOUT_CLASSIFICATION	1.322855243445358E-4	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.998241744979915	WITHOUT_CLASSIFICATION	0.001758255020084924	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9993857379412817	WITHOUT_CLASSIFICATION	6.142620587182685E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999359253214748	WITHOUT_CLASSIFICATION	6.407467852525505E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999359253214748	WITHOUT_CLASSIFICATION	6.407467852525505E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999267285318456	WITHOUT_CLASSIFICATION	7.327146815430337E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999883893873042	WITHOUT_CLASSIFICATION	1.1610612695804435E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999459685424859	WITHOUT_CLASSIFICATION	5.40314575141026E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9998569750689437	WITHOUT_CLASSIFICATION	1.4302493105629852E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999010765922369	WITHOUT_CLASSIFICATION	9.892340776311718E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9997387224052559	WITHOUT_CLASSIFICATION	2.6127759474420237E-4	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9994011645591149	WITHOUT_CLASSIFICATION	5.988354408851455E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999434750451596	WITHOUT_CLASSIFICATION	5.652495484048261E-5	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9996828970195062	WITHOUT_CLASSIFICATION	3.1710298049383905E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999603918906841	WITHOUT_CLASSIFICATION	3.960810931597232E-5	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9997414542029162	WITHOUT_CLASSIFICATION	2.58545797083773E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9997387224052559	WITHOUT_CLASSIFICATION	2.6127759474420237E-4	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999775080062273	WITHOUT_CLASSIFICATION	2.2491993772599844E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999775080062273	WITHOUT_CLASSIFICATION	2.2491993772599844E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.999988077660527	WITHOUT_CLASSIFICATION	1.1922339472998586E-5	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9998586497067382	WITHOUT_CLASSIFICATION	1.4135029326176738E-4	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999390869608962	WITHOUT_CLASSIFICATION	6.09130391038586E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9997196483592743	WITHOUT_CLASSIFICATION	2.803516407258106E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9995118457394475	WITHOUT_CLASSIFICATION	4.881542605524656E-4	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999893448930719	WITHOUT_CLASSIFICATION	1.0655106928042135E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999119690118053	WITHOUT_CLASSIFICATION	8.803098819470358E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9998536203303221	WITHOUT_CLASSIFICATION	1.4637966967792797E-4	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999887047460327	WITHOUT_CLASSIFICATION	1.129525396731427E-5	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9997450706960725	WITHOUT_CLASSIFICATION	2.54929303927487E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999335813419212	WITHOUT_CLASSIFICATION	6.641865807880766E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9997196483592743	WITHOUT_CLASSIFICATION	2.803516407258106E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9995118457394475	WITHOUT_CLASSIFICATION	4.881542605524656E-4	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9998844054319159	WITHOUT_CLASSIFICATION	1.1559456808409843E-4	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9997166154937953	WITHOUT_CLASSIFICATION	2.833845062047091E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9997012107940394	WITHOUT_CLASSIFICATION	2.98789205960602E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999026401914987	WITHOUT_CLASSIFICATION	9.735980850127038E-5	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9989362480541846	WITHOUT_CLASSIFICATION	0.0010637519458154816	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999755461866717	WITHOUT_CLASSIFICATION	2.4453813328183568E-5	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9997012107940394	WITHOUT_CLASSIFICATION	2.98789205960602E-4	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999583241993233	WITHOUT_CLASSIFICATION	4.167580067666741E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9991037907258423	WITHOUT_CLASSIFICATION	8.962092741576507E-4	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999793369724487	WITHOUT_CLASSIFICATION	2.0663027551372108E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999453151538381	WITHOUT_CLASSIFICATION	5.46848461618438E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9994014148617002	WITHOUT_CLASSIFICATION	5.985851382997573E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9994643044511476	WITHOUT_CLASSIFICATION	5.356955488522736E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999572619966866	WITHOUT_CLASSIFICATION	4.2738003313429666E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999359164040242	WITHOUT_CLASSIFICATION	6.408359597577725E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9994014148617002	WITHOUT_CLASSIFICATION	5.985851382997573E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9994643044511476	WITHOUT_CLASSIFICATION	5.356955488522736E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999572619966866	WITHOUT_CLASSIFICATION	4.2738003313429666E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9998855946933731	WITHOUT_CLASSIFICATION	1.1440530662684227E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9986481965172959	WITHOUT_CLASSIFICATION	0.0013518034827040763	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999262169816068	WITHOUT_CLASSIFICATION	7.378301839330177E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9996925073782771	WITHOUT_CLASSIFICATION	3.0749262172286853E-4	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999584821601722	WITHOUT_CLASSIFICATION	4.1517839827868906E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999163551557316	WITHOUT_CLASSIFICATION	8.364484426834642E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999406030031229	WITHOUT_CLASSIFICATION	5.9396996877191043E-5	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9964043309728453	WITHOUT_CLASSIFICATION	0.00359566902715458	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9997455745711527	WITHOUT_CLASSIFICATION	2.544254288473579E-4	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.6939962912637619	WITHOUT_CLASSIFICATION	0.30600370873623794	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999072254455402	WITHOUT_CLASSIFICATION	9.277455445977517E-5	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9993774488800591	WITHOUT_CLASSIFICATION	6.225511199409871E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9986762984913566	WITHOUT_CLASSIFICATION	0.0013237015086432868	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9998546928131278	WITHOUT_CLASSIFICATION	1.453071868722021E-4	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999612782740064	WITHOUT_CLASSIFICATION	3.872172599363295E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9998136260670334	WITHOUT_CLASSIFICATION	1.8637393296665409E-4	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9998622206222928	WITHOUT_CLASSIFICATION	1.377793777071257E-4	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999889693360928	WITHOUT_CLASSIFICATION	1.1030663907163143E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9998266728703198	WITHOUT_CLASSIFICATION	1.7332712968009295E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999909650711197	WITHOUT_CLASSIFICATION	9.034928880354128E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999476918576446	WITHOUT_CLASSIFICATION	5.2308142355363515E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999476918576446	WITHOUT_CLASSIFICATION	5.2308142355363515E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999292529903259	WITHOUT_CLASSIFICATION	7.074700967412907E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999292529903259	WITHOUT_CLASSIFICATION	7.074700967412907E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999717389655256	WITHOUT_CLASSIFICATION	2.8261034474405674E-4	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999717389655256	WITHOUT_CLASSIFICATION	2.8261034474405674E-4	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999913551482468	WITHOUT_CLASSIFICATION	8.644851753220764E-6	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9963161550539987	WITHOUT_CLASSIFICATION	0.003683844946001392	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999996722339979	WITHOUT_CLASSIFICATION	3.277660020850998E-6	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9989132390626084	WITHOUT_CLASSIFICATION	0.0010867609373915346	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999997668101367	WITHOUT_CLASSIFICATION	2.331898632955167E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999566407289678	WITHOUT_CLASSIFICATION	4.3359271032134855E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.999950035692521	WITHOUT_CLASSIFICATION	4.9964307478858684E-5	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999302162283458	WITHOUT_CLASSIFICATION	6.978377165420979E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999359253214748	WITHOUT_CLASSIFICATION	6.407467852525505E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999913551482468	WITHOUT_CLASSIFICATION	8.644851753220764E-6	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9963161550539987	WITHOUT_CLASSIFICATION	0.003683844946001392	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999996722339979	WITHOUT_CLASSIFICATION	3.277660020850998E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999997668101367	WITHOUT_CLASSIFICATION	2.331898632955167E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999566407289678	WITHOUT_CLASSIFICATION	4.3359271032134855E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999897914610812	WITHOUT_CLASSIFICATION	1.020853891879091E-4	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.999923337828179	WITHOUT_CLASSIFICATION	7.666217182103841E-5	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9957148690547971	WITHOUT_CLASSIFICATION	0.004285130945202817	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9957148690547971	WITHOUT_CLASSIFICATION	0.004285130945202817	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9998303306637413	WITHOUT_CLASSIFICATION	1.69669336258693E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999997036116145	WITHOUT_CLASSIFICATION	2.9638838550574433E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9987953102090046	WITHOUT_CLASSIFICATION	0.0012046897909954188	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999416941531366	WITHOUT_CLASSIFICATION	5.830584686342267E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999416941531366	WITHOUT_CLASSIFICATION	5.830584686342267E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999652088550689	WITHOUT_CLASSIFICATION	3.4791144931174144E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999944632359675	WITHOUT_CLASSIFICATION	5.536764032493372E-5	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999849366466828	WITHOUT_CLASSIFICATION	1.5063353317308368E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999270034257878	WITHOUT_CLASSIFICATION	7.299657421231042E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999969230781266	WITHOUT_CLASSIFICATION	3.0769218734417507E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999965080462327	WITHOUT_CLASSIFICATION	3.4919537672071075E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999968451101611	WITHOUT_CLASSIFICATION	3.1548898389014593E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999463365656558	WITHOUT_CLASSIFICATION	5.3663434344236356E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9997728221873748	WITHOUT_CLASSIFICATION	2.2717781262506553E-4	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999548181299927	WITHOUT_CLASSIFICATION	4.518187000740015E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999537024222578	WITHOUT_CLASSIFICATION	4.629757774211935E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999652088550689	WITHOUT_CLASSIFICATION	3.4791144931174144E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999944632359675	WITHOUT_CLASSIFICATION	5.536764032493372E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999270034257878	WITHOUT_CLASSIFICATION	7.299657421231042E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9911749468895288	WITHOUT_CLASSIFICATION	0.00882505311047116	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9987953102090046	WITHOUT_CLASSIFICATION	0.0012046897909954188	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9987953102090046	WITHOUT_CLASSIFICATION	0.0012046897909954188	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999335813419212	WITHOUT_CLASSIFICATION	6.641865807880766E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999335813419212	WITHOUT_CLASSIFICATION	6.641865807880766E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.8905212124127665	WITHOUT_CLASSIFICATION	0.10947878758723346	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.8905212124127665	WITHOUT_CLASSIFICATION	0.10947878758723346	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999989375091454	WITHOUT_CLASSIFICATION	1.062490854663123E-6	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9997352058207388	WITHOUT_CLASSIFICATION	2.6479417926115486E-4	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9962423509777021	WITHOUT_CLASSIFICATION	0.003757649022297928	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999806243080603	WITHOUT_CLASSIFICATION	1.9375691939708618E-5	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999964558181136	WITHOUT_CLASSIFICATION	3.5441818864965375E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999836544702541	WITHOUT_CLASSIFICATION	1.634552974596598E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999963958147229	WITHOUT_CLASSIFICATION	3.6041852771410433E-6	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999718857325187	WITHOUT_CLASSIFICATION	2.811426748124636E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999870187186658	WITHOUT_CLASSIFICATION	1.2981281334162382E-5	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999128270848208	WITHOUT_CLASSIFICATION	8.717291517919343E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999765872361961	WITHOUT_CLASSIFICATION	2.3412763803957628E-5	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.999741937726707	WITHOUT_CLASSIFICATION	2.5806227329302177E-4	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9998673247999308	WITHOUT_CLASSIFICATION	1.3267520006928518E-4	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999855160052642	WITHOUT_CLASSIFICATION	1.4483994735717953E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999811442431239	WITHOUT_CLASSIFICATION	1.8855756876163135E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.99757589803552	WITHOUT_CLASSIFICATION	0.0024241019644798585	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.999102760503985	WITHOUT_CLASSIFICATION	8.972394960149322E-4	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9998860431510509	WITHOUT_CLASSIFICATION	1.1395684894917344E-4	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9998133282074286	WITHOUT_CLASSIFICATION	1.8667179257131266E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999968451101611	WITHOUT_CLASSIFICATION	3.1548898389014593E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9997728221873748	WITHOUT_CLASSIFICATION	2.2717781262506553E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999498558926481	WITHOUT_CLASSIFICATION	5.014410735187605E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999859277732853	WITHOUT_CLASSIFICATION	1.4072226714684688E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999859277732853	WITHOUT_CLASSIFICATION	1.4072226714684688E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9911749468895288	WITHOUT_CLASSIFICATION	0.00882505311047116	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9987953102090046	WITHOUT_CLASSIFICATION	0.0012046897909954188	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999335813419212	WITHOUT_CLASSIFICATION	6.641865807880766E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.8905212124127665	WITHOUT_CLASSIFICATION	0.10947878758723346	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.999985985052145	WITHOUT_CLASSIFICATION	1.4014947855031122E-5	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.999964346887965	WITHOUT_CLASSIFICATION	3.5653112034956296E-5	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999214193366379	WITHOUT_CLASSIFICATION	7.858066336203364E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999606988749891	WITHOUT_CLASSIFICATION	3.930112501088546E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999640221134528	WITHOUT_CLASSIFICATION	3.597788654727919E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999640221134528	WITHOUT_CLASSIFICATION	3.597788654727919E-5	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.999969970057258	WITHOUT_CLASSIFICATION	3.002994274204322E-5	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9998985215900935	WITHOUT_CLASSIFICATION	1.0147840990650065E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999186004118453	WITHOUT_CLASSIFICATION	8.139958815472921E-5	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999090611304003	WITHOUT_CLASSIFICATION	9.093886959966871E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9994343186854039	WITHOUT_CLASSIFICATION	5.656813145961681E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9994343186854039	WITHOUT_CLASSIFICATION	5.656813145961681E-4	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9986552307110115	WITHOUT_CLASSIFICATION	0.0013447692889886102	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9987367481848437	WITHOUT_CLASSIFICATION	0.001263251815156299	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999472029066895	WITHOUT_CLASSIFICATION	5.279709331063014E-5	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9965745460523024	WITHOUT_CLASSIFICATION	0.003425453947697524	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9989525592336912	WITHOUT_CLASSIFICATION	0.0010474407663088811	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9993692242232607	WITHOUT_CLASSIFICATION	6.307757767393284E-4	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9988549916952055	WITHOUT_CLASSIFICATION	0.0011450083047944183	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9998456605072158	WITHOUT_CLASSIFICATION	1.5433949278425213E-4	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9998413973902028	WITHOUT_CLASSIFICATION	1.5860260979711003E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9996301046463315	WITHOUT_CLASSIFICATION	3.6989535366846373E-4	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999995975579464	WITHOUT_CLASSIFICATION	4.024420535535471E-7	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999991437787901	WITHOUT_CLASSIFICATION	8.562212099149163E-7	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999997701620313	WITHOUT_CLASSIFICATION	2.2983796867690332E-7	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9996996244159801	WITHOUT_CLASSIFICATION	3.003755840198864E-4	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9998839325928727	WITHOUT_CLASSIFICATION	1.1606740712722604E-4	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9940614434060929	WITHOUT_CLASSIFICATION	0.005938556593906998	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.99998551311984	WITHOUT_CLASSIFICATION	1.448688015995851E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9997680387696681	WITHOUT_CLASSIFICATION	2.3196123033175384E-4	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.999965130146182	WITHOUT_CLASSIFICATION	3.4869853817911515E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9995607898793671	WITHOUT_CLASSIFICATION	4.3921012063280826E-4	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9990226878732356	WITHOUT_CLASSIFICATION	9.773121267643767E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9994771106726794	WITHOUT_CLASSIFICATION	5.228893273206068E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9994771106726794	WITHOUT_CLASSIFICATION	5.228893273206068E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999834661690011	WITHOUT_CLASSIFICATION	1.6533830998939107E-5	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.99995227893394	WITHOUT_CLASSIFICATION	4.772106605998103E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999344386546017	WITHOUT_CLASSIFICATION	6.556134539829152E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999344386546017	WITHOUT_CLASSIFICATION	6.556134539829152E-5	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9998060427477542	WITHOUT_CLASSIFICATION	1.939572522458423E-4	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9998848850959575	WITHOUT_CLASSIFICATION	1.1511490404236306E-4	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9997701325266548	WITHOUT_CLASSIFICATION	2.2986747334517097E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999995312749695	WITHOUT_CLASSIFICATION	4.68725030376861E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999995312749695	WITHOUT_CLASSIFICATION	4.68725030376861E-7	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999844679355144	WITHOUT_CLASSIFICATION	1.553206448566121E-5	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.999866762943825	WITHOUT_CLASSIFICATION	1.3323705617501706E-4	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999809987524343	WITHOUT_CLASSIFICATION	1.9001247565719908E-5	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999739923715092	WITHOUT_CLASSIFICATION	2.600762849083881E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9996640828193561	WITHOUT_CLASSIFICATION	3.3591718064376495E-4	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999676281614356	WITHOUT_CLASSIFICATION	3.2371838564455923E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998885680631374	WITHOUT_CLASSIFICATION	1.1143193686266841E-4	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999637983579812	WITHOUT_CLASSIFICATION	3.6201642018759826E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9994906997266655	WITHOUT_CLASSIFICATION	5.0930027333454E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999273963973405	WITHOUT_CLASSIFICATION	7.260360265952573E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999512148827532	WITHOUT_CLASSIFICATION	4.878511724671166E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9996439948482685	WITHOUT_CLASSIFICATION	3.5600515173155045E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999176018212416	WITHOUT_CLASSIFICATION	8.239817875851688E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999568534205414	WITHOUT_CLASSIFICATION	4.314657945862319E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9993101431180621	WITHOUT_CLASSIFICATION	6.898568819379118E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999798626159443	WITHOUT_CLASSIFICATION	2.0137384055628053E-5	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999573230614388	WITHOUT_CLASSIFICATION	4.2676938561212855E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9997580107453531	WITHOUT_CLASSIFICATION	2.4198925464699055E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999237049808634	WITHOUT_CLASSIFICATION	7.62950191365829E-5	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999914785805742	WITHOUT_CLASSIFICATION	8.521419425753482E-6	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9980435530512443	WITHOUT_CLASSIFICATION	0.0019564469487557486	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9990757629517313	WITHOUT_CLASSIFICATION	9.242370482687222E-4	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998339782514551	WITHOUT_CLASSIFICATION	1.6602174854475662E-4	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999267836102596	WITHOUT_CLASSIFICATION	7.321638974038207E-5	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9985563015771505	WITHOUT_CLASSIFICATION	0.001443698422849482	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999964908870196	WITHOUT_CLASSIFICATION	3.5091129805574053E-6	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9864963189054087	WITHOUT_CLASSIFICATION	0.013503681094591281	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999128756416721	WITHOUT_CLASSIFICATION	8.712435832791183E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9994832727563979	WITHOUT_CLASSIFICATION	5.167272436020404E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999945433873321	WITHOUT_CLASSIFICATION	5.456612667957682E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999703453291596	WITHOUT_CLASSIFICATION	2.965467084036687E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999568534205414	WITHOUT_CLASSIFICATION	4.314657945862319E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999128756416721	WITHOUT_CLASSIFICATION	8.712435832791183E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9994832727563979	WITHOUT_CLASSIFICATION	5.167272436020404E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999703453291596	WITHOUT_CLASSIFICATION	2.965467084036687E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9998959585738835	WITHOUT_CLASSIFICATION	1.040414261164734E-4	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.999871530092331	WITHOUT_CLASSIFICATION	1.2846990766907928E-4	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.999964710710368	WITHOUT_CLASSIFICATION	3.52892896320146E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999945471409246	WITHOUT_CLASSIFICATION	5.452859075393391E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999837333065232	WITHOUT_CLASSIFICATION	1.626669347668829E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999721523791005	WITHOUT_CLASSIFICATION	2.7847620899516924E-5	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9995607898793671	WITHOUT_CLASSIFICATION	4.3921012063280826E-4	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9989401340117238	WITHOUT_CLASSIFICATION	0.0010598659882762596	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9991967152148508	WITHOUT_CLASSIFICATION	8.032847851493115E-4	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9993746411515734	WITHOUT_CLASSIFICATION	6.253588484266277E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999588068702103	WITHOUT_CLASSIFICATION	4.119312978968597E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999588068702103	WITHOUT_CLASSIFICATION	4.119312978968597E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999906944380411	WITHOUT_CLASSIFICATION	9.305561958896068E-6	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999286222634698	WITHOUT_CLASSIFICATION	7.137773653026336E-5	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999483795677769	WITHOUT_CLASSIFICATION	5.162043222310361E-5	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999992579138808	WITHOUT_CLASSIFICATION	7.42086119203454E-7	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999782798523502	WITHOUT_CLASSIFICATION	2.1720147649686425E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9998876302503731	WITHOUT_CLASSIFICATION	1.1236974962688492E-4	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999995327934387	WITHOUT_CLASSIFICATION	4.6720656139910676E-7	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999743877249571	WITHOUT_CLASSIFICATION	2.561227504290571E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999937722842044	WITHOUT_CLASSIFICATION	6.22771579565527E-6	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.999853266392791	WITHOUT_CLASSIFICATION	1.4673360720892547E-4	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999916806682421	WITHOUT_CLASSIFICATION	8.31933175794515E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9997635893395914	WITHOUT_CLASSIFICATION	2.3641066040857583E-4	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999904549337035	WITHOUT_CLASSIFICATION	9.545066296354385E-6	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9985833720985221	WITHOUT_CLASSIFICATION	0.0014166279014779328	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9997337525344395	WITHOUT_CLASSIFICATION	2.6624746556044854E-4	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999073354076112	WITHOUT_CLASSIFICATION	9.26645923888282E-5	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9993873899190461	WITHOUT_CLASSIFICATION	6.126100809538053E-4	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9998570961217011	WITHOUT_CLASSIFICATION	1.4290387829893087E-4	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9998726761247757	WITHOUT_CLASSIFICATION	1.2732387522436666E-4	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999886955275084	WITHOUT_CLASSIFICATION	1.1304472491624956E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999417866831319	WITHOUT_CLASSIFICATION	5.8213316868023695E-5	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999073456772836	WITHOUT_CLASSIFICATION	9.265432271640609E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.716813456829752	WITHOUT_CLASSIFICATION	0.28318654317024805	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999802494231105	WITHOUT_CLASSIFICATION	1.975057688948326E-5	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999885545721823	WITHOUT_CLASSIFICATION	1.1445427817706232E-5	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999704880161029	WITHOUT_CLASSIFICATION	2.9511983897048225E-5	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999439377645457	WITHOUT_CLASSIFICATION	5.6062235454325395E-5	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999352499223244	WITHOUT_CLASSIFICATION	6.47500776755549E-5	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9998616549201013	WITHOUT_CLASSIFICATION	1.383450798986832E-4	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9997787588497892	WITHOUT_CLASSIFICATION	2.212411502107294E-4	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999904975692433	WITHOUT_CLASSIFICATION	9.50243075677841E-6	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999986912852703	WITHOUT_CLASSIFICATION	1.3087147297584155E-6	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999910521489758	WITHOUT_CLASSIFICATION	8.947851024344561E-6	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9998896806198927	WITHOUT_CLASSIFICATION	1.1031938010724177E-4	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999706349765501	WITHOUT_CLASSIFICATION	2.9365023449783247E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9994979967466299	WITHOUT_CLASSIFICATION	5.020032533701444E-4	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9998073811711872	WITHOUT_CLASSIFICATION	1.9261882881281428E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9969393051917084	WITHOUT_CLASSIFICATION	0.0030606948082915193	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999248624861009	WITHOUT_CLASSIFICATION	7.513751389908429E-5	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999711413647578	WITHOUT_CLASSIFICATION	2.885863524208081E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999997515773359	WITHOUT_CLASSIFICATION	2.484226640604994E-7	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9945575662989556	WITHOUT_CLASSIFICATION	0.0054424337010443805	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999953704607832	WITHOUT_CLASSIFICATION	4.629539216757314E-6	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9998929839872644	WITHOUT_CLASSIFICATION	1.0701601273555678E-4	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999711351282224	WITHOUT_CLASSIFICATION	2.8864871777590997E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999768113324166	WITHOUT_CLASSIFICATION	2.3188667583474102E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999992396359548	WITHOUT_CLASSIFICATION	7.60364045226698E-7	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9993771974101304	WITHOUT_CLASSIFICATION	6.22802589869644E-4	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999828031290774	WITHOUT_CLASSIFICATION	1.7196870922520374E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999584019558311	WITHOUT_CLASSIFICATION	4.1598044168880003E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999900859185168	WITHOUT_CLASSIFICATION	9.914081483106004E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9998106242778612	WITHOUT_CLASSIFICATION	1.8937572213881544E-4	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9992802779608551	WITHOUT_CLASSIFICATION	7.197220391450026E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999773869626384	WITHOUT_CLASSIFICATION	2.2613037361623935E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999077083045506	WITHOUT_CLASSIFICATION	9.229169544938702E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999077083045506	WITHOUT_CLASSIFICATION	9.229169544938702E-5	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999888910408886	WITHOUT_CLASSIFICATION	1.1108959111355457E-5	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9995198463018161	WITHOUT_CLASSIFICATION	4.801536981839833E-4	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999888910408886	WITHOUT_CLASSIFICATION	1.1108959111355457E-5	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999990924700819	WITHOUT_CLASSIFICATION	9.075299181016638E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.999852078845532	WITHOUT_CLASSIFICATION	1.479211544680958E-4	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999995785792518	WITHOUT_CLASSIFICATION	4.214207481437303E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999686125454277	WITHOUT_CLASSIFICATION	3.1387454572290125E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9991325576757749	WITHOUT_CLASSIFICATION	8.674423242251518E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999963300725371	WITHOUT_CLASSIFICATION	3.669927462954819E-6	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999875697940065	WITHOUT_CLASSIFICATION	1.2430205993473082E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999762724007588	WITHOUT_CLASSIFICATION	2.372759924111206E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.999740252330654	WITHOUT_CLASSIFICATION	2.59747669346058E-4	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999043400273656	WITHOUT_CLASSIFICATION	9.56599726344253E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999366634913119	WITHOUT_CLASSIFICATION	6.333650868804789E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999920711347368	WITHOUT_CLASSIFICATION	7.928865263229253E-6	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9996827060509897	WITHOUT_CLASSIFICATION	3.172939490102714E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9993958928217701	WITHOUT_CLASSIFICATION	6.041071782297828E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999672432203975	WITHOUT_CLASSIFICATION	3.2756779602369636E-5	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999051867700445	WITHOUT_CLASSIFICATION	9.481322995546712E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9975750580408342	WITHOUT_CLASSIFICATION	0.0024249419591657294	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999707378426996	WITHOUT_CLASSIFICATION	2.9262157300416123E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999337806151292	WITHOUT_CLASSIFICATION	6.621938487084519E-5	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999479596506659	WITHOUT_CLASSIFICATION	5.204034933404217E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999998851896115	WITHOUT_CLASSIFICATION	1.1481038863586845E-7	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999640904600573	WITHOUT_CLASSIFICATION	3.590953994270624E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999910109499475	WITHOUT_CLASSIFICATION	8.989050052576853E-6	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999840814035137	WITHOUT_CLASSIFICATION	1.591859648630659E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.999992108745371	WITHOUT_CLASSIFICATION	7.891254628918561E-6	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.999737925163975	WITHOUT_CLASSIFICATION	2.620748360250982E-4	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9720830179888358	WITHOUT_CLASSIFICATION	0.0279169820111643	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999000282640776	WITHOUT_CLASSIFICATION	9.997173592233353E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9998470149755312	WITHOUT_CLASSIFICATION	1.529850244688144E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998246960217089	WITHOUT_CLASSIFICATION	1.75303978291187E-4	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999949707241234	WITHOUT_CLASSIFICATION	5.029275876669287E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998246960217089	WITHOUT_CLASSIFICATION	1.75303978291187E-4	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999908371082985	WITHOUT_CLASSIFICATION	9.16289170149556E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999705092015292	WITHOUT_CLASSIFICATION	2.9490798470701444E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999705092015292	WITHOUT_CLASSIFICATION	2.9490798470701444E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999705092015292	WITHOUT_CLASSIFICATION	2.9490798470701444E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9998997205511732	WITHOUT_CLASSIFICATION	1.0027944882672814E-4	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9998997205511732	WITHOUT_CLASSIFICATION	1.0027944882672814E-4	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999804738569119	WITHOUT_CLASSIFICATION	1.952614308807901E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999947894036718	WITHOUT_CLASSIFICATION	5.210596328132803E-6	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999230620328751	WITHOUT_CLASSIFICATION	7.69379671249377E-5	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9955861488925556	WITHOUT_CLASSIFICATION	0.004413851107444444	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999991369742578	WITHOUT_CLASSIFICATION	8.63025742189538E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999994436398473	WITHOUT_CLASSIFICATION	5.563601526985743E-7	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9998988314463153	WITHOUT_CLASSIFICATION	1.0116855368468005E-4	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999881821809415	WITHOUT_CLASSIFICATION	1.1817819058337439E-5	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9998055674599389	WITHOUT_CLASSIFICATION	1.944325400610821E-4	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999778610982215	WITHOUT_CLASSIFICATION	2.2138901778490226E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999322758372565	WITHOUT_CLASSIFICATION	6.77241627435443E-5	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999856821386368	WITHOUT_CLASSIFICATION	1.4317861363055796E-5	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999982409555596	WITHOUT_CLASSIFICATION	1.7590444404962477E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9994767376559134	WITHOUT_CLASSIFICATION	5.232623440866637E-4	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9998923101864127	WITHOUT_CLASSIFICATION	1.0768981358732462E-4	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999539733912838	WITHOUT_CLASSIFICATION	4.602660871624645E-5	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9997548710462557	WITHOUT_CLASSIFICATION	2.4512895374432717E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9994341857611336	WITHOUT_CLASSIFICATION	5.658142388663137E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9994341857611336	WITHOUT_CLASSIFICATION	5.658142388663137E-4	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9993883324801763	WITHOUT_CLASSIFICATION	6.116675198236468E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9994675596158212	WITHOUT_CLASSIFICATION	5.324403841787715E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9994675596158212	WITHOUT_CLASSIFICATION	5.324403841787715E-4	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.99974435483875	WITHOUT_CLASSIFICATION	2.5564516124991027E-4	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9994421965187595	WITHOUT_CLASSIFICATION	5.578034812405624E-4	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.995987824716876	WITHOUT_CLASSIFICATION	0.0040121752831240734	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.999509341954607	WITHOUT_CLASSIFICATION	4.906580453930818E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9998648664226433	WITHOUT_CLASSIFICATION	1.3513357735674155E-4	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9996961564541058	WITHOUT_CLASSIFICATION	3.038435458941698E-4	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9996321758525223	WITHOUT_CLASSIFICATION	3.6782414747777597E-4	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9998312034333219	WITHOUT_CLASSIFICATION	1.687965666781605E-4	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.999984183588164	WITHOUT_CLASSIFICATION	1.5816411836029298E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9993476602378798	WITHOUT_CLASSIFICATION	6.523397621201949E-4	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999005376581757	WITHOUT_CLASSIFICATION	9.946234182437954E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999875855173583	WITHOUT_CLASSIFICATION	1.2414482641600558E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9994403820963291	WITHOUT_CLASSIFICATION	5.596179036708367E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999560829657309	WITHOUT_CLASSIFICATION	4.391703426895934E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999881821809415	WITHOUT_CLASSIFICATION	1.1817819058337439E-5	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9997012107940394	WITHOUT_CLASSIFICATION	2.98789205960602E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998388675305371	WITHOUT_CLASSIFICATION	1.6113246946294834E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9995641801371282	WITHOUT_CLASSIFICATION	4.358198628718479E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9995641801371282	WITHOUT_CLASSIFICATION	4.358198628718479E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9995519290672955	WITHOUT_CLASSIFICATION	4.480709327044683E-4	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9998408820628373	WITHOUT_CLASSIFICATION	1.5911793716277708E-4	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999952783496733	WITHOUT_CLASSIFICATION	4.721650326731991E-6	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9995547886647579	WITHOUT_CLASSIFICATION	4.452113352421451E-4	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999984947587387	WITHOUT_CLASSIFICATION	1.505241261369389E-6	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999886908362076	WITHOUT_CLASSIFICATION	1.1309163792344343E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.999983619252687	WITHOUT_CLASSIFICATION	1.6380747312997298E-5	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9991162237673016	WITHOUT_CLASSIFICATION	8.83776232698467E-4	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999472096872302	WITHOUT_CLASSIFICATION	5.279031276987083E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999894351904568	WITHOUT_CLASSIFICATION	1.0564809543116252E-5	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.999730160817604	WITHOUT_CLASSIFICATION	2.698391823960683E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999239371852302	WITHOUT_CLASSIFICATION	7.60628147698223E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999468070025301	WITHOUT_CLASSIFICATION	5.319299746976342E-5	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9998890558391913	WITHOUT_CLASSIFICATION	1.109441608087002E-4	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9998908346650672	WITHOUT_CLASSIFICATION	1.091653349327751E-4	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9998720208595563	WITHOUT_CLASSIFICATION	1.2797914044379195E-4	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9993885004736689	WITHOUT_CLASSIFICATION	6.11499526331158E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999917788846605	WITHOUT_CLASSIFICATION	8.221115339505546E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999855865749432	WITHOUT_CLASSIFICATION	1.4413425056820312E-5	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9998816347189697	WITHOUT_CLASSIFICATION	1.1836528103028632E-4	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9993594277628409	WITHOUT_CLASSIFICATION	6.405722371591559E-4	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999121026345434	WITHOUT_CLASSIFICATION	8.789736545667031E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9996408036743683	WITHOUT_CLASSIFICATION	3.591963256317826E-4	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9935063155578014	WITHOUT_CLASSIFICATION	0.006493684442198604	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9997976886663332	WITHOUT_CLASSIFICATION	2.0231133366683355E-4	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9986366489193144	WITHOUT_CLASSIFICATION	0.0013633510806856073	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999741959601638	WITHOUT_CLASSIFICATION	2.5804039836184338E-5	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9998955974881429	WITHOUT_CLASSIFICATION	1.0440251185697233E-4	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999999143479187	WITHOUT_CLASSIFICATION	8.565208137073278E-8	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999944343762329	WITHOUT_CLASSIFICATION	5.565623767000852E-6	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9997355478427552	WITHOUT_CLASSIFICATION	2.6445215724477247E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9998612568673412	WITHOUT_CLASSIFICATION	1.3874313265881645E-4	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999311585603665	WITHOUT_CLASSIFICATION	6.884143963347912E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9986366489193144	WITHOUT_CLASSIFICATION	0.0013633510806856073	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999773643686508	WITHOUT_CLASSIFICATION	2.263563134913516E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999311585603665	WITHOUT_CLASSIFICATION	6.884143963347912E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9998464317643494	WITHOUT_CLASSIFICATION	1.5356823565060922E-4	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9998992008313569	WITHOUT_CLASSIFICATION	1.0079916864316442E-4	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999955096354062	WITHOUT_CLASSIFICATION	4.49036459385345E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.999929669829045	WITHOUT_CLASSIFICATION	7.033017095506457E-5	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999868813927748	WITHOUT_CLASSIFICATION	1.3118607225204792E-4	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998795079033213	WITHOUT_CLASSIFICATION	1.2049209667872623E-4	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998795079033213	WITHOUT_CLASSIFICATION	1.2049209667872623E-4	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.8378493063351795	IMPLEMENTATION	0.16215069366482057	WITHOUT_CLASSIFICATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9993293149365415	WITHOUT_CLASSIFICATION	6.706850634585368E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999820562528309	WITHOUT_CLASSIFICATION	1.794374716919868E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999820562528309	WITHOUT_CLASSIFICATION	1.794374716919868E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999997072248946	WITHOUT_CLASSIFICATION	2.9277510537426806E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999206948819528	WITHOUT_CLASSIFICATION	7.930511804721034E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9995396685445819	WITHOUT_CLASSIFICATION	4.603314554180662E-4	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999997443939612	WITHOUT_CLASSIFICATION	2.556060387500603E-7	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9997836118733775	WITHOUT_CLASSIFICATION	2.1638812662254188E-4	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.998380692218851	WITHOUT_CLASSIFICATION	0.0016193077811490501	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999991711568644	WITHOUT_CLASSIFICATION	8.288431356680289E-7	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999832093125092	WITHOUT_CLASSIFICATION	1.679068749083274E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999221053897173	WITHOUT_CLASSIFICATION	7.789461028270108E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9998953674717165	WITHOUT_CLASSIFICATION	1.0463252828352264E-4	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999087714369312	WITHOUT_CLASSIFICATION	9.122856306877417E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.999492023410085	WITHOUT_CLASSIFICATION	5.079765899148603E-4	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9998408036898359	WITHOUT_CLASSIFICATION	1.5919631016423169E-4	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9972018334596707	WITHOUT_CLASSIFICATION	0.002798166540329194	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999821854484389	WITHOUT_CLASSIFICATION	1.7814551561108848E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.8729093031325451	WITHOUT_CLASSIFICATION	0.12709069686745486	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999145324142861	WITHOUT_CLASSIFICATION	8.546758571401174E-5	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9330457957255636	WITHOUT_CLASSIFICATION	0.06695420427443642	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9987230128187365	WITHOUT_CLASSIFICATION	0.001276987181263441	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9994948541601166	WITHOUT_CLASSIFICATION	5.051458398833917E-4	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998851110098717	WITHOUT_CLASSIFICATION	1.1488899012837466E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998851110098717	WITHOUT_CLASSIFICATION	1.1488899012837466E-4	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999998065276231	WITHOUT_CLASSIFICATION	1.9347237699978927E-7	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9998388012645507	WITHOUT_CLASSIFICATION	1.6119873544925123E-4	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9994038125567564	WITHOUT_CLASSIFICATION	5.961874432436942E-4	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999471483973931	WITHOUT_CLASSIFICATION	5.2851602606825604E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999974785560521	WITHOUT_CLASSIFICATION	2.5214439478270294E-6	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9997041927519396	WITHOUT_CLASSIFICATION	2.958072480603792E-4	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998761120384195	WITHOUT_CLASSIFICATION	1.2388796158037385E-4	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999573229672742	WITHOUT_CLASSIFICATION	4.2677032725683666E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9988998686562252	WITHOUT_CLASSIFICATION	0.0011001313437747906	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9987336164860119	WITHOUT_CLASSIFICATION	0.0012663835139882073	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999916923592433	WITHOUT_CLASSIFICATION	8.307640756658885E-6	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9998466663787269	WITHOUT_CLASSIFICATION	1.5333362127310755E-4	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.999942312871086	WITHOUT_CLASSIFICATION	5.768712891384534E-5	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9998877453163927	WITHOUT_CLASSIFICATION	1.1225468360726574E-4	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9991590171403968	WITHOUT_CLASSIFICATION	8.409828596033337E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999469507003719	WITHOUT_CLASSIFICATION	5.3049299628122674E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999948856606674	WITHOUT_CLASSIFICATION	5.114339332634187E-6	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9996445292081327	WITHOUT_CLASSIFICATION	3.554707918672233E-4	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9997957176276389	WITHOUT_CLASSIFICATION	2.0428237236122702E-4	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9947325326710204	WITHOUT_CLASSIFICATION	0.005267467328979685	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9998807983655151	WITHOUT_CLASSIFICATION	1.1920163448484394E-4	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.999943398873522	WITHOUT_CLASSIFICATION	5.660112647787459E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999035712492563	WITHOUT_CLASSIFICATION	9.64287507437055E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998692729660732	WITHOUT_CLASSIFICATION	1.3072703392680028E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999234153905951	WITHOUT_CLASSIFICATION	7.658460940482747E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997295403017293	WITHOUT_CLASSIFICATION	2.704596982707527E-4	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9993824941709734	WITHOUT_CLASSIFICATION	6.175058290265998E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9998421330475783	WITHOUT_CLASSIFICATION	1.5786695242173606E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999900807889391	WITHOUT_CLASSIFICATION	9.919211060893424E-6	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9998214952288583	WITHOUT_CLASSIFICATION	1.7850477114166762E-4	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9997643625574208	WITHOUT_CLASSIFICATION	2.356374425792262E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9994408828784741	WITHOUT_CLASSIFICATION	5.591171215258646E-4	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9998021581874028	WITHOUT_CLASSIFICATION	1.9784181259724433E-4	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9992966498705822	WITHOUT_CLASSIFICATION	7.033501294176905E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998870303666114	WITHOUT_CLASSIFICATION	1.1296963338869266E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9982634665933932	WITHOUT_CLASSIFICATION	0.0017365334066068376	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.999575964806464	WITHOUT_CLASSIFICATION	4.240351935358831E-4	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9985744366316093	WITHOUT_CLASSIFICATION	0.001425563368390711	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9921058341596605	WITHOUT_CLASSIFICATION	0.007894165840339543	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999139271703006	WITHOUT_CLASSIFICATION	8.60728296994033E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9987294800316541	WITHOUT_CLASSIFICATION	0.0012705199683458487	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9987294800316541	WITHOUT_CLASSIFICATION	0.0012705199683458487	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9993620849823385	WITHOUT_CLASSIFICATION	6.379150176615848E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999532545264108	WITHOUT_CLASSIFICATION	4.674547358912265E-5	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9934098029581795	WITHOUT_CLASSIFICATION	0.006590197041820548	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999923961623449	WITHOUT_CLASSIFICATION	7.6038376551109485E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999889693360928	WITHOUT_CLASSIFICATION	1.1030663907163143E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9998266728703198	WITHOUT_CLASSIFICATION	1.7332712968009295E-4	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999343216110685	WITHOUT_CLASSIFICATION	6.567838893138551E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9955859312795526	WITHOUT_CLASSIFICATION	0.004414068720447338	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9997940851757904	WITHOUT_CLASSIFICATION	2.0591482420962491E-4	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9989983490774118	WITHOUT_CLASSIFICATION	0.0010016509225881799	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999884084037934	WITHOUT_CLASSIFICATION	1.1591596206646881E-5	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999051141053736	WITHOUT_CLASSIFICATION	9.4885894626347E-5	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9997156859827412	WITHOUT_CLASSIFICATION	2.84314017258728E-4	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998390155730053	WITHOUT_CLASSIFICATION	1.6098442699469058E-4	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999024547282566	WITHOUT_CLASSIFICATION	9.754527174350633E-5	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998314496111863	WITHOUT_CLASSIFICATION	1.6855038881363784E-4	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9997923136900904	WITHOUT_CLASSIFICATION	2.0768630990962493E-4	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999629487395834	WITHOUT_CLASSIFICATION	3.705126041660501E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999006433808637	WITHOUT_CLASSIFICATION	9.935661913623358E-5	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999822732624176	WITHOUT_CLASSIFICATION	1.7726737582407135E-4	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9998329613588876	WITHOUT_CLASSIFICATION	1.6703864111245994E-4	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9996738778454732	WITHOUT_CLASSIFICATION	3.2612215452677487E-4	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9995874417458734	WITHOUT_CLASSIFICATION	4.1255825412661064E-4	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999764348293385	WITHOUT_CLASSIFICATION	2.3565170661512597E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999481893209331	WITHOUT_CLASSIFICATION	5.1810679066880296E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999752159142339	WITHOUT_CLASSIFICATION	2.478408576611899E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999749665418853	WITHOUT_CLASSIFICATION	2.503345811466458E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.999891798110791	WITHOUT_CLASSIFICATION	1.0820188920894032E-4	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9994616393971073	WITHOUT_CLASSIFICATION	5.383606028926783E-4	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9997423229530394	WITHOUT_CLASSIFICATION	2.5767704696053306E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999739941441703	WITHOUT_CLASSIFICATION	2.600585582968171E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999398969157614	WITHOUT_CLASSIFICATION	6.010308423878892E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9931151116539204	WITHOUT_CLASSIFICATION	0.00688488834607962	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9982634665933932	WITHOUT_CLASSIFICATION	0.0017365334066068376	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.8724232430233541	WITHOUT_CLASSIFICATION	0.1275767569766459	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9992135704876601	WITHOUT_CLASSIFICATION	7.864295123398545E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9992135704876601	WITHOUT_CLASSIFICATION	7.864295123398545E-4	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999861875960708	WITHOUT_CLASSIFICATION	1.3812403929080267E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9961725344795948	WITHOUT_CLASSIFICATION	0.003827465520405313	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.992120434658006	WITHOUT_CLASSIFICATION	0.007879565341993931	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9916939679113222	WITHOUT_CLASSIFICATION	0.008306032088677669	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9925219673380528	WITHOUT_CLASSIFICATION	0.007478032661947242	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9921878872363539	WITHOUT_CLASSIFICATION	0.0078121127636461936	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9829513731545362	WITHOUT_CLASSIFICATION	0.01704862684546384	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9925919941376311	WITHOUT_CLASSIFICATION	0.007408005862368865	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.992261018080431	WITHOUT_CLASSIFICATION	0.0077389819195690076	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9831094970297558	WITHOUT_CLASSIFICATION	0.016890502970244154	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.991771684094251	WITHOUT_CLASSIFICATION	0.008228315905748917	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9962304062870609	WITHOUT_CLASSIFICATION	0.003769593712939065	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999760125295883	WITHOUT_CLASSIFICATION	2.3987470411709053E-5	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9998798674003334	WITHOUT_CLASSIFICATION	1.201325996664881E-4	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9849582651467698	WITHOUT_CLASSIFICATION	0.015041734853230305	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.992747946848205	WITHOUT_CLASSIFICATION	0.0072520531517950015	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9934715704542326	WITHOUT_CLASSIFICATION	0.006528429545767286	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9931796222202363	WITHOUT_CLASSIFICATION	0.00682037777976369	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9850980575413557	WITHOUT_CLASSIFICATION	0.014901942458644261	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9962658366772408	WITHOUT_CLASSIFICATION	0.003734163322759317	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9995316729748257	WITHOUT_CLASSIFICATION	4.683270251742907E-4	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.999946624547466	WITHOUT_CLASSIFICATION	5.337545253401832E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9998581970276716	WITHOUT_CLASSIFICATION	1.4180297232833006E-4	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999115870019574	WITHOUT_CLASSIFICATION	8.84129980425868E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.8689558473673747	WITHOUT_CLASSIFICATION	0.1310441526326253	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999174969576721	WITHOUT_CLASSIFICATION	8.250304232799448E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999108618634729	WITHOUT_CLASSIFICATION	8.913813652709915E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9992616205094226	WITHOUT_CLASSIFICATION	7.383794905775609E-4	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9998502695331132	WITHOUT_CLASSIFICATION	1.4973046688676616E-4	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9991967152148508	WITHOUT_CLASSIFICATION	8.032847851493115E-4	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9991967152148508	WITHOUT_CLASSIFICATION	8.032847851493115E-4	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999454108752112	WITHOUT_CLASSIFICATION	5.458912478894123E-5	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9975482368781629	WITHOUT_CLASSIFICATION	0.0024517631218371515	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9998109492692139	WITHOUT_CLASSIFICATION	1.890507307861316E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999548342460222	WITHOUT_CLASSIFICATION	4.516575397782805E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999115870019574	WITHOUT_CLASSIFICATION	8.84129980425868E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.8689558473673747	WITHOUT_CLASSIFICATION	0.1310441526326253	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999174969576721	WITHOUT_CLASSIFICATION	8.250304232799448E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9992616205094226	WITHOUT_CLASSIFICATION	7.383794905775609E-4	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9960439912011675	WITHOUT_CLASSIFICATION	0.003956008798832469	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999677476897127	WITHOUT_CLASSIFICATION	3.22523102871822E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999266411624561	WITHOUT_CLASSIFICATION	7.33588375438317E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9989953605033906	WITHOUT_CLASSIFICATION	0.0010046394966094052	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9980499847361933	WITHOUT_CLASSIFICATION	0.001950015263806612	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9998058386518996	WITHOUT_CLASSIFICATION	1.9416134810028795E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9971473142212094	WITHOUT_CLASSIFICATION	0.002852685778790614	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9995260644246283	WITHOUT_CLASSIFICATION	4.739355753717548E-4	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.999968313394618	WITHOUT_CLASSIFICATION	3.16866053819957E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9994129675054026	WITHOUT_CLASSIFICATION	5.870324945974168E-4	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999429997155526	WITHOUT_CLASSIFICATION	5.7000284447421275E-5	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.999971225294102	WITHOUT_CLASSIFICATION	2.877470589796509E-5	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999976569360507	WITHOUT_CLASSIFICATION	2.3430639493070453E-6	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9995998957298875	WITHOUT_CLASSIFICATION	4.0010427011244373E-4	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9987864065089296	WITHOUT_CLASSIFICATION	0.0012135934910704495	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9995365744733247	WITHOUT_CLASSIFICATION	4.6342552667528417E-4	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9998502954448072	WITHOUT_CLASSIFICATION	1.4970455519276613E-4	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9997057016018915	WITHOUT_CLASSIFICATION	2.942983981084945E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9992676028389049	WITHOUT_CLASSIFICATION	7.323971610951131E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999548342460222	WITHOUT_CLASSIFICATION	4.516575397782805E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999677476897127	WITHOUT_CLASSIFICATION	3.22523102871822E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999266411624561	WITHOUT_CLASSIFICATION	7.33588375438317E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9980499847361933	WITHOUT_CLASSIFICATION	0.001950015263806612	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9998058386518996	WITHOUT_CLASSIFICATION	1.9416134810028795E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9971473142212094	WITHOUT_CLASSIFICATION	0.002852685778790614	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9995260644246283	WITHOUT_CLASSIFICATION	4.739355753717548E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9995845684137352	WITHOUT_CLASSIFICATION	4.1543158626478467E-4	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.8548871533048031	WITHOUT_CLASSIFICATION	0.1451128466951968	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999129188285453	WITHOUT_CLASSIFICATION	8.70811714547732E-5	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999815040608655	WITHOUT_CLASSIFICATION	1.8495939134475957E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9998731986344329	WITHOUT_CLASSIFICATION	1.268013655669941E-4	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9998731986344329	WITHOUT_CLASSIFICATION	1.268013655669941E-4	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9996911857622085	WITHOUT_CLASSIFICATION	3.088142377915268E-4	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9951838472623309	WITHOUT_CLASSIFICATION	0.004816152737669114	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9992408082341163	WITHOUT_CLASSIFICATION	7.591917658835594E-4	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999391865503774	WITHOUT_CLASSIFICATION	6.081344962274854E-5	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999941706618334	WITHOUT_CLASSIFICATION	5.8293381666152E-6	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999730183432838	WITHOUT_CLASSIFICATION	2.698165671619067E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9982386268610017	WITHOUT_CLASSIFICATION	0.001761373138998229	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9997164856915005	WITHOUT_CLASSIFICATION	2.8351430849942236E-4	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999689431093045	WITHOUT_CLASSIFICATION	3.105689069545104E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9996471981478103	WITHOUT_CLASSIFICATION	3.5280185218966126E-4	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9998788713341262	WITHOUT_CLASSIFICATION	1.2112866587383458E-4	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9998654733831374	WITHOUT_CLASSIFICATION	1.3452661686264491E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999529911811906	WITHOUT_CLASSIFICATION	4.70088188093453E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999560403693069	WITHOUT_CLASSIFICATION	4.3959630693152736E-5	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9998523865881287	WITHOUT_CLASSIFICATION	1.476134118713535E-4	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9996949274416321	WITHOUT_CLASSIFICATION	3.0507255836784673E-4	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9998483178973145	WITHOUT_CLASSIFICATION	1.5168210268544892E-4	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999997451036578	WITHOUT_CLASSIFICATION	2.5489634220035945E-6	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9998365696747464	WITHOUT_CLASSIFICATION	1.6343032525356616E-4	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.999566115765289	WITHOUT_CLASSIFICATION	4.338842347109708E-4	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.6499793550040974	IMPLEMENTATION	0.35002064499590274	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9989163013610334	WITHOUT_CLASSIFICATION	0.0010836986389666286	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.999886204661375	WITHOUT_CLASSIFICATION	1.1379533862502932E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.882633459033666	IMPLEMENTATION	0.11736654096633407	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9967615254881849	WITHOUT_CLASSIFICATION	0.0032384745118151296	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9998417755086337	WITHOUT_CLASSIFICATION	1.5822449136629013E-4	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9997556729529148	WITHOUT_CLASSIFICATION	2.4432704708517676E-4	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9967615254881849	WITHOUT_CLASSIFICATION	0.0032384745118151296	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999560403693069	WITHOUT_CLASSIFICATION	4.3959630693152736E-5	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999394387233407	WITHOUT_CLASSIFICATION	6.0561276659343795E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.999866008843919	WITHOUT_CLASSIFICATION	1.339911560810844E-4	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9998080487099824	WITHOUT_CLASSIFICATION	1.9195129001753846E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999854838628344	WITHOUT_CLASSIFICATION	1.451613716566676E-5	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9998006058020011	WITHOUT_CLASSIFICATION	1.993941979989172E-4	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999844149817498	WITHOUT_CLASSIFICATION	1.5585018250082276E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9995698745517885	WITHOUT_CLASSIFICATION	4.301254482114739E-4	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9998784422052527	WITHOUT_CLASSIFICATION	1.2155779474725117E-4	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9998830090680487	WITHOUT_CLASSIFICATION	1.1699093195123166E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.999964651261995	WITHOUT_CLASSIFICATION	3.534873800507258E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999807679616215	WITHOUT_CLASSIFICATION	1.9232038378500778E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9947199668907378	WITHOUT_CLASSIFICATION	0.005280033109262237	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.999108641534744	WITHOUT_CLASSIFICATION	8.913584652560419E-4	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999989772385929	WITHOUT_CLASSIFICATION	1.0227614071504388E-6	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9996493604491016	WITHOUT_CLASSIFICATION	3.506395508984468E-4	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9881910564309123	WITHOUT_CLASSIFICATION	0.011808943569087776	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9997279629055411	WITHOUT_CLASSIFICATION	2.720370944588603E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.986576986026136	WITHOUT_CLASSIFICATION	0.013423013973864133	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9975285367432069	WITHOUT_CLASSIFICATION	0.002471463256793161	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9998550351318923	WITHOUT_CLASSIFICATION	1.449648681076942E-4	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999570259057392	WITHOUT_CLASSIFICATION	4.297409426070316E-5	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9982962671281693	WITHOUT_CLASSIFICATION	0.0017037328718306646	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9993036419863394	WITHOUT_CLASSIFICATION	6.963580136605703E-4	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999995559161152	WITHOUT_CLASSIFICATION	4.440838846708446E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999813104656242	WITHOUT_CLASSIFICATION	1.8689534375713144E-5	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9998813282852936	WITHOUT_CLASSIFICATION	1.1867171470632552E-4	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9991924195565278	WITHOUT_CLASSIFICATION	8.075804434721786E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9997199550486676	WITHOUT_CLASSIFICATION	2.800449513323581E-4	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999314368031401	WITHOUT_CLASSIFICATION	6.856319685989957E-5	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999445434680355	WITHOUT_CLASSIFICATION	5.545653196436809E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996506400717988	WITHOUT_CLASSIFICATION	3.493599282011746E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996506400717988	WITHOUT_CLASSIFICATION	3.493599282011746E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999529911811906	WITHOUT_CLASSIFICATION	4.70088188093453E-5	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.999998022191244	WITHOUT_CLASSIFICATION	1.9778087559436265E-6	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999985077746277	WITHOUT_CLASSIFICATION	1.4922253722876393E-6	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9998862562968609	WITHOUT_CLASSIFICATION	1.1374370313900965E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999535717765606	WITHOUT_CLASSIFICATION	4.642822343927904E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999535717765606	WITHOUT_CLASSIFICATION	4.642822343927904E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9994897493110182	WITHOUT_CLASSIFICATION	5.102506889817338E-4	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9977759204406816	WITHOUT_CLASSIFICATION	0.0022240795593182964	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999574050242775	WITHOUT_CLASSIFICATION	4.259497572251633E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999828190931667	WITHOUT_CLASSIFICATION	1.7180906833345803E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999588809604835	WITHOUT_CLASSIFICATION	4.1119039516650894E-5	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999957028808006	WITHOUT_CLASSIFICATION	4.297119199416659E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999944992759741	WITHOUT_CLASSIFICATION	5.500724025917868E-6	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9997747438076873	WITHOUT_CLASSIFICATION	2.2525619231275569E-4	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999980635209672	WITHOUT_CLASSIFICATION	1.93647903280154E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9997896760706881	WITHOUT_CLASSIFICATION	2.1032392931190296E-4	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999434073372515	WITHOUT_CLASSIFICATION	5.6592662748431746E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999568867827906	WITHOUT_CLASSIFICATION	4.31132172093811E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999159773113939	WITHOUT_CLASSIFICATION	8.402268860607898E-5	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999658887082198	WITHOUT_CLASSIFICATION	3.411129178025507E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9987849100927266	WITHOUT_CLASSIFICATION	0.001215089907273405	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999961851102381	WITHOUT_CLASSIFICATION	3.814889761830164E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999961851102381	WITHOUT_CLASSIFICATION	3.814889761830164E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999357545791205	WITHOUT_CLASSIFICATION	6.424542087954718E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999357545791205	WITHOUT_CLASSIFICATION	6.424542087954718E-5	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999752021239032	WITHOUT_CLASSIFICATION	2.479787609675879E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999802829094823	WITHOUT_CLASSIFICATION	1.9717090517765746E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999922116310209	WITHOUT_CLASSIFICATION	7.788368979100285E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.999980762265425	WITHOUT_CLASSIFICATION	1.9237734575003437E-5	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999768792435368	WITHOUT_CLASSIFICATION	2.3120756463138314E-5	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9994882817273253	WITHOUT_CLASSIFICATION	5.117182726746456E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9983955014893982	WITHOUT_CLASSIFICATION	0.0016044985106018828	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999568867827906	WITHOUT_CLASSIFICATION	4.31132172093811E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999159773113939	WITHOUT_CLASSIFICATION	8.402268860607898E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9998460985356543	WITHOUT_CLASSIFICATION	1.5390146434559503E-4	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999887426775775	WITHOUT_CLASSIFICATION	1.1257322422495175E-5	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999996463747244	WITHOUT_CLASSIFICATION	3.5362527561087734E-7	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.999912217594448	WITHOUT_CLASSIFICATION	8.778240555191342E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999208398364297	WITHOUT_CLASSIFICATION	7.916016357043104E-5	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9951410775228295	WITHOUT_CLASSIFICATION	0.004858922477170461	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999209016057143	WITHOUT_CLASSIFICATION	7.909839428568209E-5	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999209016057143	WITHOUT_CLASSIFICATION	7.909839428568209E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999918221011121	WITHOUT_CLASSIFICATION	8.177898887878734E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999902728782732	WITHOUT_CLASSIFICATION	9.727121726704813E-6	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9998759287824684	WITHOUT_CLASSIFICATION	1.2407121753155425E-4	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999341727287677	WITHOUT_CLASSIFICATION	6.582727123228249E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999159773113939	WITHOUT_CLASSIFICATION	8.402268860607898E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9998256155737683	WITHOUT_CLASSIFICATION	1.743844262317656E-4	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9993711852570871	WITHOUT_CLASSIFICATION	6.288147429128737E-4	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999909288341282	WITHOUT_CLASSIFICATION	9.071165871748708E-6	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999595450672116	WITHOUT_CLASSIFICATION	4.045493278842479E-5	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9994577405765139	WITHOUT_CLASSIFICATION	5.422594234861157E-4	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9991465394774518	WITHOUT_CLASSIFICATION	8.534605225481382E-4	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9998580156817717	WITHOUT_CLASSIFICATION	1.4198431822827018E-4	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999808376352057	WITHOUT_CLASSIFICATION	1.9162364794221896E-5	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999696161268764	WITHOUT_CLASSIFICATION	3.038387312354836E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9998377025551062	WITHOUT_CLASSIFICATION	1.6229744489380243E-4	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999885237764699	WITHOUT_CLASSIFICATION	1.147622353021171E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9997514757783574	WITHOUT_CLASSIFICATION	2.48524221642627E-4	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9973648196033104	WITHOUT_CLASSIFICATION	0.002635180396689718	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9998849688111802	WITHOUT_CLASSIFICATION	1.1503118881973423E-4	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9996794138835388	WITHOUT_CLASSIFICATION	3.205861164612709E-4	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9996340474054709	WITHOUT_CLASSIFICATION	3.6595259452915085E-4	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9973109725617756	WITHOUT_CLASSIFICATION	0.002689027438224421	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999995198479124	WITHOUT_CLASSIFICATION	4.80152087657546E-7	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999932206609734	WITHOUT_CLASSIFICATION	6.779339026617383E-6	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999841172574334	WITHOUT_CLASSIFICATION	1.5882742566536853E-5	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999515614433441	WITHOUT_CLASSIFICATION	4.8438556655958103E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9996366806920255	WITHOUT_CLASSIFICATION	3.633193079745612E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9993596239507275	WITHOUT_CLASSIFICATION	6.403760492725133E-4	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999823931904435	WITHOUT_CLASSIFICATION	1.7606809556516805E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999261979437515	WITHOUT_CLASSIFICATION	7.380205624851784E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998307022663296	WITHOUT_CLASSIFICATION	1.692977336703804E-4	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999349061517752	WITHOUT_CLASSIFICATION	6.50938482248111E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999985077746277	WITHOUT_CLASSIFICATION	1.4922253722876393E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9993596239507275	WITHOUT_CLASSIFICATION	6.403760492725133E-4	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999737096756759	WITHOUT_CLASSIFICATION	2.6290324324170988E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999692212825778	WITHOUT_CLASSIFICATION	3.077871742227698E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9998931019887041	WITHOUT_CLASSIFICATION	1.0689801129586357E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998254999786627	WITHOUT_CLASSIFICATION	1.7450002133723925E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998254999786627	WITHOUT_CLASSIFICATION	1.7450002133723925E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999869938991295	WITHOUT_CLASSIFICATION	1.3006100870410024E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999981980064345	WITHOUT_CLASSIFICATION	1.8019935654121318E-6	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999596854358795	WITHOUT_CLASSIFICATION	4.0314564120546046E-5	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.999998772720089	WITHOUT_CLASSIFICATION	1.2272799110342067E-6	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9998305023447087	WITHOUT_CLASSIFICATION	1.6949765529128348E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999819925447389	WITHOUT_CLASSIFICATION	1.800745526120051E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999858832238289	WITHOUT_CLASSIFICATION	1.411677617114144E-5	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9101993617413889	WITHOUT_CLASSIFICATION	0.08980063825861107	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9988404520565136	WITHOUT_CLASSIFICATION	0.0011595479434863838	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9988404520565136	WITHOUT_CLASSIFICATION	0.0011595479434863838	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.999904848370221	WITHOUT_CLASSIFICATION	9.51516297790452E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.999813513636839	WITHOUT_CLASSIFICATION	1.8648636316087608E-4	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999769751235087	WITHOUT_CLASSIFICATION	2.3024876491304457E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999574793527206	WITHOUT_CLASSIFICATION	4.252064727931848E-5	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999938016690032	WITHOUT_CLASSIFICATION	6.198330996709817E-6	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999866656860168	WITHOUT_CLASSIFICATION	1.3334313983233398E-5	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9992901170706902	WITHOUT_CLASSIFICATION	7.098829293098771E-4	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.999961789318615	WITHOUT_CLASSIFICATION	3.821068138498177E-5	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9996859961485914	WITHOUT_CLASSIFICATION	3.1400385140860506E-4	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999986159312786	WITHOUT_CLASSIFICATION	1.3840687214753195E-6	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999525756497576	WITHOUT_CLASSIFICATION	4.7424350242312595E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999641805931763	WITHOUT_CLASSIFICATION	3.5819406823706074E-5	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999942223562435	WITHOUT_CLASSIFICATION	5.777643756600962E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997012107940394	WITHOUT_CLASSIFICATION	2.98789205960602E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997012107940394	WITHOUT_CLASSIFICATION	2.98789205960602E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998505301431506	WITHOUT_CLASSIFICATION	1.4946985684935975E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9995260644246283	WITHOUT_CLASSIFICATION	4.739355753717548E-4	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999986159312786	WITHOUT_CLASSIFICATION	1.3840687214753195E-6	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999762134137791	WITHOUT_CLASSIFICATION	2.37865862209431E-5	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999734219347	WITHOUT_CLASSIFICATION	2.6578065325231693E-8	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999968865805684	WITHOUT_CLASSIFICATION	3.1134194315155703E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999917022272082	WITHOUT_CLASSIFICATION	8.297772791707903E-6	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999938761505488	WITHOUT_CLASSIFICATION	6.123849451210867E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.99999636877099	WITHOUT_CLASSIFICATION	3.6312290099720577E-6	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.999842180608351	WITHOUT_CLASSIFICATION	1.5781939164908037E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999985077746277	WITHOUT_CLASSIFICATION	1.4922253722876393E-6	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9998923101864127	WITHOUT_CLASSIFICATION	1.0768981358732462E-4	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9992597295584345	WITHOUT_CLASSIFICATION	7.402704415654676E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999881729750321	WITHOUT_CLASSIFICATION	1.182702496802362E-5	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999921416195626	WITHOUT_CLASSIFICATION	7.85838043733607E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.999955505657505	WITHOUT_CLASSIFICATION	4.4494342494913775E-5	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999981631661875	WITHOUT_CLASSIFICATION	1.8368338124302955E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999429096849887	WITHOUT_CLASSIFICATION	5.709031501142581E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9993861192324497	WITHOUT_CLASSIFICATION	6.138807675502583E-4	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999248706320408	WITHOUT_CLASSIFICATION	7.512936795923645E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9969188982130998	WITHOUT_CLASSIFICATION	0.0030811017869002907	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9998371175509944	WITHOUT_CLASSIFICATION	1.6288244900553096E-4	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.999938487037612	WITHOUT_CLASSIFICATION	6.151296238798078E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999855615984421	WITHOUT_CLASSIFICATION	1.4438401557909303E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.86333144098919	IMPLEMENTATION	0.13666855901081001	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9995235317663141	WITHOUT_CLASSIFICATION	4.7646823368582993E-4	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9996179571377667	WITHOUT_CLASSIFICATION	3.8204286223330984E-4	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999816963071555	WITHOUT_CLASSIFICATION	1.8303692844561912E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9996626067866246	WITHOUT_CLASSIFICATION	3.373932133755045E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999350054788125	WITHOUT_CLASSIFICATION	6.499452118753137E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9993253585228434	WITHOUT_CLASSIFICATION	6.746414771565675E-4	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9998024055964937	WITHOUT_CLASSIFICATION	1.9759440350624973E-4	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999315174232759	WITHOUT_CLASSIFICATION	6.848257672411565E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999869938991295	WITHOUT_CLASSIFICATION	1.3006100870410024E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9990686445181532	WITHOUT_CLASSIFICATION	9.313554818468103E-4	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.999977676956546	WITHOUT_CLASSIFICATION	2.2323043453909643E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9998981287325328	WITHOUT_CLASSIFICATION	1.0187126746714121E-4	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998565580198374	WITHOUT_CLASSIFICATION	1.4344198016261683E-4	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9992464733062407	WITHOUT_CLASSIFICATION	7.535266937592716E-4	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.999841617360865	WITHOUT_CLASSIFICATION	1.5838263913500747E-4	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999933511286042	WITHOUT_CLASSIFICATION	6.648871395848778E-6	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9903976253161354	WITHOUT_CLASSIFICATION	0.00960237468386459	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999516362677516	WITHOUT_CLASSIFICATION	4.8363732248450417E-5	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999090736387874	WITHOUT_CLASSIFICATION	9.092636121244724E-5	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998718116199438	WITHOUT_CLASSIFICATION	1.2818838005621585E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998690546735842	WITHOUT_CLASSIFICATION	1.309453264158224E-4	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999608224480954	WITHOUT_CLASSIFICATION	3.917755190464997E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994736227728945	WITHOUT_CLASSIFICATION	5.263772271054653E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999983317455161	WITHOUT_CLASSIFICATION	1.6682544838959946E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999725036529347	WITHOUT_CLASSIFICATION	2.7496347065303382E-5	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9998484019604478	WITHOUT_CLASSIFICATION	1.5159803955212722E-4	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999954199955929	WITHOUT_CLASSIFICATION	4.580004407087412E-6	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999096535368013	WITHOUT_CLASSIFICATION	9.034646319869108E-5	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9997717277299667	WITHOUT_CLASSIFICATION	2.2827227003327405E-4	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9996682625023606	WITHOUT_CLASSIFICATION	3.3173749763939993E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999220680985447	WITHOUT_CLASSIFICATION	7.793190145523363E-5	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999998541594483	WITHOUT_CLASSIFICATION	1.4584055176580948E-7	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.999934340066863	WITHOUT_CLASSIFICATION	6.565993313711722E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999846428924899	WITHOUT_CLASSIFICATION	1.535710751008365E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999846428924899	WITHOUT_CLASSIFICATION	1.535710751008365E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999846428924899	WITHOUT_CLASSIFICATION	1.535710751008365E-5	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999833222598937	WITHOUT_CLASSIFICATION	1.6677740106327965E-5	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999913951274245	WITHOUT_CLASSIFICATION	8.604872575494077E-6	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999815953355815	WITHOUT_CLASSIFICATION	1.8404664418557673E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9994949686368135	WITHOUT_CLASSIFICATION	5.050313631864405E-4	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9988741181656752	WITHOUT_CLASSIFICATION	0.0011258818343248627	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999978291998008	WITHOUT_CLASSIFICATION	2.1708001992635916E-6	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999947960415605	WITHOUT_CLASSIFICATION	5.203958439457138E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.999985734279085	WITHOUT_CLASSIFICATION	1.4265720914944984E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9995361721827042	WITHOUT_CLASSIFICATION	4.6382781729582443E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9998977232141955	WITHOUT_CLASSIFICATION	1.022767858044833E-4	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9996822428579917	WITHOUT_CLASSIFICATION	3.177571420083159E-4	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999700403378978	WITHOUT_CLASSIFICATION	2.995966210226267E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998957307278603	WITHOUT_CLASSIFICATION	1.0426927213975257E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998957307278603	WITHOUT_CLASSIFICATION	1.0426927213975257E-4	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999978008160053	WITHOUT_CLASSIFICATION	2.199183994750693E-6	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999949443807656	WITHOUT_CLASSIFICATION	5.055619234368691E-6	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.999952143641749	WITHOUT_CLASSIFICATION	4.785635825093034E-5	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999161580201691	WITHOUT_CLASSIFICATION	8.384197983084862E-5	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999720700254845	WITHOUT_CLASSIFICATION	2.7929974515474298E-5	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999817790559072	WITHOUT_CLASSIFICATION	1.8220944092759056E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9998503524968227	WITHOUT_CLASSIFICATION	1.496475031772912E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9998514493359864	WITHOUT_CLASSIFICATION	1.4855066401358888E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.99993078046868	WITHOUT_CLASSIFICATION	6.921953132008525E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9998379190067339	WITHOUT_CLASSIFICATION	1.62080993266058E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9997656908937118	WITHOUT_CLASSIFICATION	2.343091062881471E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999952919242621	WITHOUT_CLASSIFICATION	4.7080757380083625E-6	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999316421868716	WITHOUT_CLASSIFICATION	6.835781312841064E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999934169739864	WITHOUT_CLASSIFICATION	6.5830260136334194E-6	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999557035588451	WITHOUT_CLASSIFICATION	4.429644115478687E-5	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999991791296684	WITHOUT_CLASSIFICATION	8.208703315923135E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9998783644204119	WITHOUT_CLASSIFICATION	1.2163557958810881E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.997538033759271	WITHOUT_CLASSIFICATION	0.00246196624072905	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9997727557329099	WITHOUT_CLASSIFICATION	2.2724426709013032E-4	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9998269051575772	WITHOUT_CLASSIFICATION	1.7309484242275825E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9996728491183654	WITHOUT_CLASSIFICATION	3.271508816346187E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.99984146534176	WITHOUT_CLASSIFICATION	1.5853465824003905E-4	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999186506970583	WITHOUT_CLASSIFICATION	8.134930294160984E-5	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9956624151093838	WITHOUT_CLASSIFICATION	0.0043375848906161895	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.999999639483101	WITHOUT_CLASSIFICATION	3.6051689899401966E-7	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999340722499351	WITHOUT_CLASSIFICATION	6.592775006479351E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999311485623302	WITHOUT_CLASSIFICATION	6.885143766983803E-5	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9998688914979741	WITHOUT_CLASSIFICATION	1.3110850202578504E-4	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999959357949061	WITHOUT_CLASSIFICATION	4.064205093871362E-6	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999830684932608	WITHOUT_CLASSIFICATION	1.6931506739196924E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9998601785609516	WITHOUT_CLASSIFICATION	1.3982143904831898E-4	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9998927048311649	WITHOUT_CLASSIFICATION	1.0729516883502161E-4	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9997423288725277	WITHOUT_CLASSIFICATION	2.576711274723657E-4	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9996896056161995	WITHOUT_CLASSIFICATION	3.103943838004737E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999996648649989	WITHOUT_CLASSIFICATION	3.3513500111599364E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.999894978951677	WITHOUT_CLASSIFICATION	1.0502104832304427E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999827199417562	WITHOUT_CLASSIFICATION	1.7280058243785277E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999988958821006	WITHOUT_CLASSIFICATION	1.1041178994608717E-6	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999785634606856	WITHOUT_CLASSIFICATION	2.1436539314459203E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999815985162136	WITHOUT_CLASSIFICATION	1.8401483786403403E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999903733420807	WITHOUT_CLASSIFICATION	9.62665791926938E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999864125854667	WITHOUT_CLASSIFICATION	1.358741453332905E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999888519086029	WITHOUT_CLASSIFICATION	1.1148091397055831E-5	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999490280095968	WITHOUT_CLASSIFICATION	5.0971990403138906E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999985939104411	WITHOUT_CLASSIFICATION	1.4060895589392897E-6	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999963634000517	WITHOUT_CLASSIFICATION	3.6365999481318884E-6	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999574068499651	WITHOUT_CLASSIFICATION	4.2593150034778354E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999996875758557	WITHOUT_CLASSIFICATION	3.124241443975005E-7	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999997414264115	WITHOUT_CLASSIFICATION	2.5857358857027114E-7	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999980958344318	WITHOUT_CLASSIFICATION	1.9041655681339963E-6	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999971216307042	WITHOUT_CLASSIFICATION	2.878369295871095E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9993875397188827	WITHOUT_CLASSIFICATION	6.124602811172227E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9992511630880438	WITHOUT_CLASSIFICATION	7.488369119562462E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9992511630880438	WITHOUT_CLASSIFICATION	7.488369119562462E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999886978577648	WITHOUT_CLASSIFICATION	1.1302142235176643E-5	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.999962893207576	WITHOUT_CLASSIFICATION	3.7106792423875866E-5	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999225381675468	WITHOUT_CLASSIFICATION	7.74618324530978E-5	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999844077451846	WITHOUT_CLASSIFICATION	1.5592254815396355E-5	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9995821333820083	WITHOUT_CLASSIFICATION	4.178666179916309E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999919909127936	WITHOUT_CLASSIFICATION	8.00908720644812E-6	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999911585583806	WITHOUT_CLASSIFICATION	8.841441619279788E-6	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999875714053291	WITHOUT_CLASSIFICATION	1.2428594670969257E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9993872569590851	WITHOUT_CLASSIFICATION	6.127430409147324E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999892151563686	WITHOUT_CLASSIFICATION	1.0784843631368191E-5	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9981162433324455	WITHOUT_CLASSIFICATION	0.0018837566675544738	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9993135658755011	WITHOUT_CLASSIFICATION	6.864341244988409E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9979295858060381	WITHOUT_CLASSIFICATION	0.0020704141939620014	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999966448527042	WITHOUT_CLASSIFICATION	3.3551472958123186E-6	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9991389512109515	WITHOUT_CLASSIFICATION	8.610487890485419E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9996940115712549	WITHOUT_CLASSIFICATION	3.0598842874502336E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999892028471131	WITHOUT_CLASSIFICATION	1.0797152886980952E-5	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999967491526073	WITHOUT_CLASSIFICATION	3.250847392805408E-6	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9996559414032165	WITHOUT_CLASSIFICATION	3.440585967835461E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999995811908373	WITHOUT_CLASSIFICATION	4.1880916263884036E-7	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999670755409419	WITHOUT_CLASSIFICATION	3.292445905819254E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999892028471131	WITHOUT_CLASSIFICATION	1.0797152886980952E-5	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9952431629804844	WITHOUT_CLASSIFICATION	0.004756837019515538	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9952431629804844	WITHOUT_CLASSIFICATION	0.004756837019515538	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999133134081355	WITHOUT_CLASSIFICATION	8.668659186455998E-5	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9998192090409271	WITHOUT_CLASSIFICATION	1.8079095907284445E-4	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999783621668428	WITHOUT_CLASSIFICATION	2.1637833157132254E-5	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999565175013282	WITHOUT_CLASSIFICATION	4.3482498671764E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999838458081821	WITHOUT_CLASSIFICATION	1.6154191817920544E-5	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9894188199865174	IMPLEMENTATION	0.010581180013482615	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.999977404803868	WITHOUT_CLASSIFICATION	2.2595196132000472E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9917730782278581	WITHOUT_CLASSIFICATION	0.008226921772141902	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.99990359909584	WITHOUT_CLASSIFICATION	9.640090415992969E-5	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999837439047417	WITHOUT_CLASSIFICATION	1.62560952583899E-5	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999770327836669	WITHOUT_CLASSIFICATION	2.2967216333182768E-5	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9899891461592881	WITHOUT_CLASSIFICATION	0.010010853840711929	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9939736500330191	WITHOUT_CLASSIFICATION	0.0060263499669808325	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999437617395739	WITHOUT_CLASSIFICATION	5.623826042607089E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994575554546669	WITHOUT_CLASSIFICATION	5.424445453330744E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999107500191858	WITHOUT_CLASSIFICATION	8.924998081411004E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9996706568778934	WITHOUT_CLASSIFICATION	3.293431221066578E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999923865392932	WITHOUT_CLASSIFICATION	7.613460706804732E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9994561125860768	WITHOUT_CLASSIFICATION	5.438874139231634E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9993979837852568	WITHOUT_CLASSIFICATION	6.020162147433083E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9996880156450972	WITHOUT_CLASSIFICATION	3.1198435490278984E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9993050872216859	WITHOUT_CLASSIFICATION	6.949127783141766E-4	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9993060856919505	WITHOUT_CLASSIFICATION	6.939143080494615E-4	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9993080151932687	WITHOUT_CLASSIFICATION	6.919848067312352E-4	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998462474581488	WITHOUT_CLASSIFICATION	1.5375254185113203E-4	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9937265668528001	WITHOUT_CLASSIFICATION	0.0062734331471998896	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9983634035770581	WITHOUT_CLASSIFICATION	0.001636596422941959	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9993803396048018	WITHOUT_CLASSIFICATION	6.196603951982861E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9901286011114074	WITHOUT_CLASSIFICATION	0.009871398888592595	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9707554053074112	WITHOUT_CLASSIFICATION	0.029244594692588763	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9707554053074112	WITHOUT_CLASSIFICATION	0.029244594692588763	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999857080722029	WITHOUT_CLASSIFICATION	1.4291927797174745E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9757577007735584	WITHOUT_CLASSIFICATION	0.024242299226441662	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9953822569632268	WITHOUT_CLASSIFICATION	0.004617743036773146	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9994285381817869	WITHOUT_CLASSIFICATION	5.714618182131153E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999845478134873	WITHOUT_CLASSIFICATION	1.5452186512607256E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9945814317730826	WITHOUT_CLASSIFICATION	0.005418568226917417	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9953822569632268	WITHOUT_CLASSIFICATION	0.004617743036773146	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9910394489334303	WITHOUT_CLASSIFICATION	0.008960551066569733	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9997935089573994	WITHOUT_CLASSIFICATION	2.064910426005498E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997371075082353	WITHOUT_CLASSIFICATION	2.6289249176470033E-4	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9993683128165216	WITHOUT_CLASSIFICATION	6.316871834784626E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9993054407593637	WITHOUT_CLASSIFICATION	6.945592406363274E-4	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999986551107629	WITHOUT_CLASSIFICATION	1.3448892370042566E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999946756696364	WITHOUT_CLASSIFICATION	5.324330363623428E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999946756696364	WITHOUT_CLASSIFICATION	5.324330363623428E-6	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.99999541608264	WITHOUT_CLASSIFICATION	4.583917360007648E-6	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9997947752098777	WITHOUT_CLASSIFICATION	2.0522479012229772E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999717316404683	WITHOUT_CLASSIFICATION	2.826835953172547E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9996748977800739	WITHOUT_CLASSIFICATION	3.2510221992603075E-4	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9997014133428626	WITHOUT_CLASSIFICATION	2.985866571374602E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999842297531587	WITHOUT_CLASSIFICATION	1.5770246841333035E-5	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999995582219235	WITHOUT_CLASSIFICATION	4.417780764044168E-7	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9997701167952784	WITHOUT_CLASSIFICATION	2.2988320472164985E-4	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999443996542572	WITHOUT_CLASSIFICATION	5.5600345742898344E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9998895166518608	WITHOUT_CLASSIFICATION	1.1048334813916888E-4	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.999392809164119	WITHOUT_CLASSIFICATION	6.071908358809086E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9995452463695284	WITHOUT_CLASSIFICATION	4.5475363047164545E-4	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9952744511651448	WITHOUT_CLASSIFICATION	0.004725548834855134	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9997790167498484	WITHOUT_CLASSIFICATION	2.2098325015163628E-4	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999838950706321	WITHOUT_CLASSIFICATION	1.6104929367815087E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.995247047093109	WITHOUT_CLASSIFICATION	0.004752952906891035	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9986171326577163	WITHOUT_CLASSIFICATION	0.0013828673422836993	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999110522276641	WITHOUT_CLASSIFICATION	8.894777233591967E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999885823827922	WITHOUT_CLASSIFICATION	1.1417617207755243E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9998333629691514	WITHOUT_CLASSIFICATION	1.6663703084849633E-4	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9996030118698098	WITHOUT_CLASSIFICATION	3.9698813019008986E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9998333629691514	WITHOUT_CLASSIFICATION	1.6663703084849633E-4	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9991825530596322	WITHOUT_CLASSIFICATION	8.174469403678367E-4	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9996030118698098	WITHOUT_CLASSIFICATION	3.9698813019008986E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999704246890309	WITHOUT_CLASSIFICATION	2.9575310969237174E-5	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999844668682438	WITHOUT_CLASSIFICATION	1.5533131756212164E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9998059559197717	WITHOUT_CLASSIFICATION	1.940440802282656E-4	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9998883746934275	WITHOUT_CLASSIFICATION	1.1162530657238991E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999373535659163	WITHOUT_CLASSIFICATION	6.264643408371793E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999107500191858	WITHOUT_CLASSIFICATION	8.924998081411004E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999923865392932	WITHOUT_CLASSIFICATION	7.613460706804732E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9994561125860768	WITHOUT_CLASSIFICATION	5.438874139231634E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9993979837852568	WITHOUT_CLASSIFICATION	6.020162147433083E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9996880156450972	WITHOUT_CLASSIFICATION	3.1198435490278984E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9993061752563357	WITHOUT_CLASSIFICATION	6.938247436644113E-4	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9993060856919505	WITHOUT_CLASSIFICATION	6.939143080494615E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9707554053074112	WITHOUT_CLASSIFICATION	0.029244594692588763	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9707554053074112	WITHOUT_CLASSIFICATION	0.029244594692588763	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9953822569632268	WITHOUT_CLASSIFICATION	0.004617743036773146	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999845478134873	WITHOUT_CLASSIFICATION	1.5452186512607256E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9945814317730826	WITHOUT_CLASSIFICATION	0.005418568226917417	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9953822569632268	WITHOUT_CLASSIFICATION	0.004617743036773146	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9910394489334303	WITHOUT_CLASSIFICATION	0.008960551066569733	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9993058595492167	WITHOUT_CLASSIFICATION	6.941404507832651E-4	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999884904793919	WITHOUT_CLASSIFICATION	1.1509520608029557E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9998913983412503	WITHOUT_CLASSIFICATION	1.0860165874975148E-4	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9902539458036944	WITHOUT_CLASSIFICATION	0.009746054196305618	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9986506600194576	WITHOUT_CLASSIFICATION	0.0013493399805424766	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999767342114472	WITHOUT_CLASSIFICATION	2.3265788552831798E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.995118197153588	WITHOUT_CLASSIFICATION	0.00488180284641211	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997371075082353	WITHOUT_CLASSIFICATION	2.6289249176470033E-4	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9993683128165216	WITHOUT_CLASSIFICATION	6.316871834784626E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999946756696364	WITHOUT_CLASSIFICATION	5.324330363623428E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999946756696364	WITHOUT_CLASSIFICATION	5.324330363623428E-6	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9641096144687451	WITHOUT_CLASSIFICATION	0.035890385531254995	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9931699218031034	WITHOUT_CLASSIFICATION	0.0068300781968966395	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9998940402380071	WITHOUT_CLASSIFICATION	1.0595976199282235E-4	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9993054407593637	WITHOUT_CLASSIFICATION	6.945592406363274E-4	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9998962442426423	WITHOUT_CLASSIFICATION	1.0375575735758184E-4	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9992778313026056	WITHOUT_CLASSIFICATION	7.221686973944225E-4	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9998797956341671	WITHOUT_CLASSIFICATION	1.202043658329861E-4	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999672509781663	WITHOUT_CLASSIFICATION	3.274902183362887E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9998995399841931	WITHOUT_CLASSIFICATION	1.0046001580683864E-4	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999963451851259	WITHOUT_CLASSIFICATION	3.6548148740286743E-6	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9998817348780129	WITHOUT_CLASSIFICATION	1.1826512198704023E-4	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999670490945656	WITHOUT_CLASSIFICATION	3.2950905434385184E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9997490163200663	WITHOUT_CLASSIFICATION	2.5098367993361286E-4	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999961438041367	WITHOUT_CLASSIFICATION	3.856195863298327E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999678121567461	WITHOUT_CLASSIFICATION	3.2187843253922745E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999678121567461	WITHOUT_CLASSIFICATION	3.2187843253922745E-5	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9997308699104186	WITHOUT_CLASSIFICATION	2.6913008958144184E-4	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9993742985358662	WITHOUT_CLASSIFICATION	6.257014641338025E-4	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999956869613482	WITHOUT_CLASSIFICATION	4.313038651851808E-6	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999622609884774	WITHOUT_CLASSIFICATION	3.7739011522592073E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999921986259642	WITHOUT_CLASSIFICATION	7.801374035673447E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9998696171679294	WITHOUT_CLASSIFICATION	1.303828320706308E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998577053697315	WITHOUT_CLASSIFICATION	1.4229463026846104E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9998696171679294	WITHOUT_CLASSIFICATION	1.303828320706308E-4	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999701181851084	WITHOUT_CLASSIFICATION	2.9881814891688705E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997318142618932	WITHOUT_CLASSIFICATION	2.6818573810691E-4	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9998610045478099	WITHOUT_CLASSIFICATION	1.389954521901255E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9843216757974239	WITHOUT_CLASSIFICATION	0.015678324202576036	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9995512241196159	WITHOUT_CLASSIFICATION	4.487758803841243E-4	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9995512241196159	WITHOUT_CLASSIFICATION	4.487758803841243E-4	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9802964464469782	WITHOUT_CLASSIFICATION	0.019703553553021683	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999172227205118	WITHOUT_CLASSIFICATION	8.277727948819464E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9997133902869918	WITHOUT_CLASSIFICATION	2.8660971300827726E-4	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9980678134163653	WITHOUT_CLASSIFICATION	0.0019321865836347772	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9994738449210272	WITHOUT_CLASSIFICATION	5.261550789728139E-4	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9994235371879774	WITHOUT_CLASSIFICATION	5.764628120226597E-4	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9994235371879774	WITHOUT_CLASSIFICATION	5.764628120226597E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9966051918716702	WITHOUT_CLASSIFICATION	0.003394808128329821	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998810031007845	WITHOUT_CLASSIFICATION	1.1899689921551453E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998810031007845	WITHOUT_CLASSIFICATION	1.1899689921551453E-4	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9994736709679892	WITHOUT_CLASSIFICATION	5.263290320107841E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9974987650934711	WITHOUT_CLASSIFICATION	0.002501234906528951	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9980976668805264	WITHOUT_CLASSIFICATION	0.0019023331194736135	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9998281019406076	WITHOUT_CLASSIFICATION	1.7189805939240609E-4	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999009228545096	WITHOUT_CLASSIFICATION	9.907714549045085E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9998696171679294	WITHOUT_CLASSIFICATION	1.303828320706308E-4	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999114879074228	WITHOUT_CLASSIFICATION	8.851209257719099E-5	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999632287600067	WITHOUT_CLASSIFICATION	3.67712399933791E-5	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999685546302419	WITHOUT_CLASSIFICATION	3.1445369758081204E-5	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999114879074228	WITHOUT_CLASSIFICATION	8.851209257719099E-5	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999939654415931	WITHOUT_CLASSIFICATION	6.034558406875736E-6	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999958419400343	WITHOUT_CLASSIFICATION	4.15805996573567E-6	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999899990811417	WITHOUT_CLASSIFICATION	1.0000918858249517E-5	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9998529373892163	WITHOUT_CLASSIFICATION	1.4706261078368637E-4	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999997377305548	WITHOUT_CLASSIFICATION	2.622694451050905E-7	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.999880552199518	WITHOUT_CLASSIFICATION	1.1944780048208894E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999892154351484	WITHOUT_CLASSIFICATION	1.0784564851590994E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999992794047271	WITHOUT_CLASSIFICATION	7.205952729035037E-7	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9998050077228693	WITHOUT_CLASSIFICATION	1.9499227713080673E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998816257377692	WITHOUT_CLASSIFICATION	1.1837426223086276E-4	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999230451769924	WITHOUT_CLASSIFICATION	7.695482300767306E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999528561633202	WITHOUT_CLASSIFICATION	4.714383667984011E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.999775735388237	WITHOUT_CLASSIFICATION	2.242646117629042E-4	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999355799102296	WITHOUT_CLASSIFICATION	6.4420089770369E-5	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9993358462961518	WITHOUT_CLASSIFICATION	6.6415370384825E-4	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9992026674892744	WITHOUT_CLASSIFICATION	7.973325107255608E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9998940054678791	WITHOUT_CLASSIFICATION	1.0599453212084872E-4	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9990481374307347	WITHOUT_CLASSIFICATION	9.518625692653367E-4	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999588853406618	WITHOUT_CLASSIFICATION	4.1114659338267347E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9998956201918824	WITHOUT_CLASSIFICATION	1.0437980811758707E-4	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999180290040751	WITHOUT_CLASSIFICATION	8.197099592488941E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9991548967829559	WITHOUT_CLASSIFICATION	8.451032170441891E-4	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9993121627979445	WITHOUT_CLASSIFICATION	6.878372020554591E-4	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9998617882830528	WITHOUT_CLASSIFICATION	1.3821171694722577E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999321254156366	WITHOUT_CLASSIFICATION	6.787458436335478E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999293803996976	WITHOUT_CLASSIFICATION	7.061960030235605E-5	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999602101876774	WITHOUT_CLASSIFICATION	3.9789812322434885E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9998431142937798	WITHOUT_CLASSIFICATION	1.5688570622020227E-4	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9998269236603374	WITHOUT_CLASSIFICATION	1.7307633966266188E-4	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999717150096472	WITHOUT_CLASSIFICATION	2.8284990352769592E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9996407734142493	WITHOUT_CLASSIFICATION	3.5922658575077626E-4	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999445731685596	WITHOUT_CLASSIFICATION	5.5426831440327165E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9988884478256412	WITHOUT_CLASSIFICATION	0.001111552174358813	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9995764568120107	WITHOUT_CLASSIFICATION	4.235431879892495E-4	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999897210953274	WITHOUT_CLASSIFICATION	1.0278904672701044E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998013282347872	WITHOUT_CLASSIFICATION	1.9867176521278247E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998270581400388	WITHOUT_CLASSIFICATION	1.729418599611565E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998718116199438	WITHOUT_CLASSIFICATION	1.2818838005621585E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998690546735842	WITHOUT_CLASSIFICATION	1.309453264158224E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997318142618932	WITHOUT_CLASSIFICATION	2.6818573810691E-4	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999217264771214	WITHOUT_CLASSIFICATION	7.827352287855404E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999987976900641	WITHOUT_CLASSIFICATION	1.202309935981464E-6	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999907792361575	WITHOUT_CLASSIFICATION	9.220763842397362E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999998006790966	WITHOUT_CLASSIFICATION	1.993209033966158E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999998006790966	WITHOUT_CLASSIFICATION	1.993209033966158E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999945051577197	WITHOUT_CLASSIFICATION	5.494842280227617E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999945051577197	WITHOUT_CLASSIFICATION	5.494842280227617E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999945051577197	WITHOUT_CLASSIFICATION	5.494842280227617E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999337132134205	WITHOUT_CLASSIFICATION	6.628678657957762E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999337132134205	WITHOUT_CLASSIFICATION	6.628678657957762E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999377476985609	WITHOUT_CLASSIFICATION	6.225230143913816E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999377476985609	WITHOUT_CLASSIFICATION	6.225230143913816E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999975456293506	WITHOUT_CLASSIFICATION	2.454370649414622E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999968720944367	WITHOUT_CLASSIFICATION	3.127905563290484E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9991285004710307	WITHOUT_CLASSIFICATION	8.714995289693294E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9991285004710307	WITHOUT_CLASSIFICATION	8.714995289693294E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999982544204461	WITHOUT_CLASSIFICATION	1.7455795539040687E-6	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.998749204605962	WITHOUT_CLASSIFICATION	0.001250795394037978	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999661916346789	WITHOUT_CLASSIFICATION	3.3808365320985735E-5	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999440724571346	WITHOUT_CLASSIFICATION	5.59275428653874E-5	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.999626599207581	WITHOUT_CLASSIFICATION	3.734007924190398E-4	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9993830948943543	WITHOUT_CLASSIFICATION	6.169051056456078E-4	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999454463789572	WITHOUT_CLASSIFICATION	5.455362104272916E-5	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999094181212053	WITHOUT_CLASSIFICATION	9.058187879475969E-5	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999914413775433	WITHOUT_CLASSIFICATION	8.55862245679369E-6	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9992511630880438	WITHOUT_CLASSIFICATION	7.488369119562462E-4	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999680332296005	WITHOUT_CLASSIFICATION	3.196677039959032E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999422940645449	WITHOUT_CLASSIFICATION	5.770593545511885E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999893433019769	WITHOUT_CLASSIFICATION	1.0656698023097815E-5	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999285479013562	WITHOUT_CLASSIFICATION	7.145209864374487E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999066842479388	WITHOUT_CLASSIFICATION	9.331575206114002E-5	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9997012107940394	WITHOUT_CLASSIFICATION	2.98789205960602E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998900880805045	WITHOUT_CLASSIFICATION	1.0991191949548847E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999696140213635	WITHOUT_CLASSIFICATION	3.0385978636442254E-5	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999961340755467	WITHOUT_CLASSIFICATION	3.865924453300552E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9996798363385505	WITHOUT_CLASSIFICATION	3.2016366144948285E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998669804195932	WITHOUT_CLASSIFICATION	1.3301958040677053E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998669804195932	WITHOUT_CLASSIFICATION	1.3301958040677053E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998669804195932	WITHOUT_CLASSIFICATION	1.3301958040677053E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998296368306213	WITHOUT_CLASSIFICATION	1.703631693786638E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998296368306213	WITHOUT_CLASSIFICATION	1.703631693786638E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998296368306213	WITHOUT_CLASSIFICATION	1.703631693786638E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998296368306213	WITHOUT_CLASSIFICATION	1.703631693786638E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998296368306213	WITHOUT_CLASSIFICATION	1.703631693786638E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.999995130691535	WITHOUT_CLASSIFICATION	4.8693084649814405E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.999997841410675	WITHOUT_CLASSIFICATION	2.1585893249058473E-6	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9997578097772754	WITHOUT_CLASSIFICATION	2.421902227247247E-4	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999125670447083	WITHOUT_CLASSIFICATION	8.74329552916634E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999922095276388	WITHOUT_CLASSIFICATION	7.790472361114092E-6	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9998118664425497	WITHOUT_CLASSIFICATION	1.881335574503381E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9611930404323008	WITHOUT_CLASSIFICATION	0.03880695956769927	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999975767571719	WITHOUT_CLASSIFICATION	2.4232428281471557E-6	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9992196798138353	WITHOUT_CLASSIFICATION	7.803201861647859E-4	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999995392916059	WITHOUT_CLASSIFICATION	4.6070839412917067E-7	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999888612630734	WITHOUT_CLASSIFICATION	1.113873692655976E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9998072273151859	WITHOUT_CLASSIFICATION	1.9277268481404883E-4	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.999833564607414	WITHOUT_CLASSIFICATION	1.6643539258597316E-4	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999148101656434	WITHOUT_CLASSIFICATION	8.518983435657912E-5	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.999960026930926	WITHOUT_CLASSIFICATION	3.9973069073982846E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.999931090190484	WITHOUT_CLASSIFICATION	6.890980951594978E-5	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9996175790301565	WITHOUT_CLASSIFICATION	3.8242096984359623E-4	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999083446770304	WITHOUT_CLASSIFICATION	9.165532296959489E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998577053697315	WITHOUT_CLASSIFICATION	1.4229463026846104E-4	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9451028273390666	WITHOUT_CLASSIFICATION	0.054897172660933274	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999768393222976	WITHOUT_CLASSIFICATION	2.3160677702347123E-5	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9876624701542629	WITHOUT_CLASSIFICATION	0.01233752984573702	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999875289373115	WITHOUT_CLASSIFICATION	1.2471062688442873E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9991558855572509	WITHOUT_CLASSIFICATION	8.441144427492556E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9998012680015587	WITHOUT_CLASSIFICATION	1.9873199844142308E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9997775364842845	WITHOUT_CLASSIFICATION	2.2246351571559894E-4	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999151985999626	WITHOUT_CLASSIFICATION	8.480140003734001E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999920306380083	WITHOUT_CLASSIFICATION	7.96936199161122E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9997832871699633	WITHOUT_CLASSIFICATION	2.1671283003675228E-4	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999675218292807	WITHOUT_CLASSIFICATION	3.247817071924444E-5	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9995121005325603	WITHOUT_CLASSIFICATION	4.878994674396405E-4	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.994797038198016	WITHOUT_CLASSIFICATION	0.005202961801984016	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.999970753185843	WITHOUT_CLASSIFICATION	2.924681415691995E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999028195190118	WITHOUT_CLASSIFICATION	9.718048098812303E-5	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9997197600044438	WITHOUT_CLASSIFICATION	2.8023999555613303E-4	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999715996941053	WITHOUT_CLASSIFICATION	2.840030589467566E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998559676490252	WITHOUT_CLASSIFICATION	1.440323509748749E-4	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9998395121071679	WITHOUT_CLASSIFICATION	1.6048789283212625E-4	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.999994703195848	WITHOUT_CLASSIFICATION	5.29680415203089E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9981178196446983	WITHOUT_CLASSIFICATION	0.001882180355301746	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9981178196446983	WITHOUT_CLASSIFICATION	0.001882180355301746	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9991710015999207	WITHOUT_CLASSIFICATION	8.289984000792627E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9991710015999207	WITHOUT_CLASSIFICATION	8.289984000792627E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9996098485109418	WITHOUT_CLASSIFICATION	3.9015148905816076E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9996098485109418	WITHOUT_CLASSIFICATION	3.9015148905816076E-4	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999862074340758	WITHOUT_CLASSIFICATION	1.3792565924195088E-4	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9973431845454733	WITHOUT_CLASSIFICATION	0.0026568154545267226	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.999989524934944	WITHOUT_CLASSIFICATION	1.0475065055970963E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9997918463746801	WITHOUT_CLASSIFICATION	2.0815362531983076E-4	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999665926339805	WITHOUT_CLASSIFICATION	3.3407366019567716E-5	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9997287790501534	WITHOUT_CLASSIFICATION	2.71220949846542E-4	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9997859845965434	WITHOUT_CLASSIFICATION	2.14015403456641E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999866349692341	WITHOUT_CLASSIFICATION	1.3365030765855898E-5	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999994156657522	WITHOUT_CLASSIFICATION	5.843342477628658E-7	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999997173054901	WITHOUT_CLASSIFICATION	2.8269450990839577E-7	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999967159439873	WITHOUT_CLASSIFICATION	3.2840560125975565E-6	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.999978434125571	WITHOUT_CLASSIFICATION	2.1565874429072304E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.999990398258742	WITHOUT_CLASSIFICATION	9.60174125786637E-6	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999993629718311	WITHOUT_CLASSIFICATION	6.370281688701582E-7	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.999809444158247	WITHOUT_CLASSIFICATION	1.9055584175290002E-4	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999363127814992	WITHOUT_CLASSIFICATION	6.368721850090856E-5	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9988806876189333	WITHOUT_CLASSIFICATION	0.0011193123810667174	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999422793974929	WITHOUT_CLASSIFICATION	5.772060250715867E-5	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9940532816159768	WITHOUT_CLASSIFICATION	0.005946718384023185	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9992183647846602	WITHOUT_CLASSIFICATION	7.816352153397285E-4	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999642804972952	WITHOUT_CLASSIFICATION	3.571950270470495E-5	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999812923136981	WITHOUT_CLASSIFICATION	1.870768630185083E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.99998332131641	WITHOUT_CLASSIFICATION	1.6678683589967925E-5	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998891036717091	WITHOUT_CLASSIFICATION	1.1089632829081115E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998891036717091	WITHOUT_CLASSIFICATION	1.1089632829081115E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998891036717091	WITHOUT_CLASSIFICATION	1.1089632829081115E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999893502091222	WITHOUT_CLASSIFICATION	1.0649790877759396E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999893502091222	WITHOUT_CLASSIFICATION	1.0649790877759396E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998816257377692	WITHOUT_CLASSIFICATION	1.1837426223086276E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998816257377692	WITHOUT_CLASSIFICATION	1.1837426223086276E-4	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999981751871432	WITHOUT_CLASSIFICATION	1.8248128568951198E-6	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9981327014942571	WITHOUT_CLASSIFICATION	0.0018672985057429023	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9997866717047965	WITHOUT_CLASSIFICATION	2.133282952035106E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9997885647283447	WITHOUT_CLASSIFICATION	2.114352716554362E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998891036717091	WITHOUT_CLASSIFICATION	1.1089632829081115E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998891036717091	WITHOUT_CLASSIFICATION	1.1089632829081115E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998891036717091	WITHOUT_CLASSIFICATION	1.1089632829081115E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999893502091222	WITHOUT_CLASSIFICATION	1.0649790877759396E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999893502091222	WITHOUT_CLASSIFICATION	1.0649790877759396E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999893502091222	WITHOUT_CLASSIFICATION	1.0649790877759396E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998816257377692	WITHOUT_CLASSIFICATION	1.1837426223086276E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998816257377692	WITHOUT_CLASSIFICATION	1.1837426223086276E-4	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999945114539659	WITHOUT_CLASSIFICATION	5.488546034104183E-6	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999485513739	WITHOUT_CLASSIFICATION	5.1448626071797305E-8	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9928794880618059	WITHOUT_CLASSIFICATION	0.007120511938194124	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9928794880618059	WITHOUT_CLASSIFICATION	0.007120511938194124	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9928794880618059	WITHOUT_CLASSIFICATION	0.007120511938194124	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9928794880618059	WITHOUT_CLASSIFICATION	0.007120511938194124	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9928794880618059	WITHOUT_CLASSIFICATION	0.007120511938194124	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.99993244248305	WITHOUT_CLASSIFICATION	6.755751695002295E-5	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9975668092027394	WITHOUT_CLASSIFICATION	0.0024331907972606932	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9997190441624028	WITHOUT_CLASSIFICATION	2.809558375972865E-4	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9997331156607927	WITHOUT_CLASSIFICATION	2.6688433920725175E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999849603231331	WITHOUT_CLASSIFICATION	1.5039676866862292E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9832913738244192	WITHOUT_CLASSIFICATION	0.01670862617558077	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999847887758344	WITHOUT_CLASSIFICATION	1.5211224165611008E-5	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.999599343836857	WITHOUT_CLASSIFICATION	4.0065616314300143E-4	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999906810770032	WITHOUT_CLASSIFICATION	9.318922996910374E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.999977387796181	WITHOUT_CLASSIFICATION	2.26122038190406E-5	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999999828954563	WITHOUT_CLASSIFICATION	1.7104543697599578E-7	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999838764378295	WITHOUT_CLASSIFICATION	1.6123562170522795E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9997699535395995	WITHOUT_CLASSIFICATION	2.3004646040052063E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999889921858428	WITHOUT_CLASSIFICATION	1.1007814157136887E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9994846538062209	WITHOUT_CLASSIFICATION	5.153461937792419E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9994846538062209	WITHOUT_CLASSIFICATION	5.153461937792419E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9994846538062209	WITHOUT_CLASSIFICATION	5.153461937792419E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9995826708985345	WITHOUT_CLASSIFICATION	4.1732910146552254E-4	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9995826708985345	WITHOUT_CLASSIFICATION	4.1732910146552254E-4	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999996551362809	WITHOUT_CLASSIFICATION	3.4486371917527883E-7	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999232700736886	WITHOUT_CLASSIFICATION	7.672992631137678E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9996193605545332	WITHOUT_CLASSIFICATION	3.8063944546678076E-4	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9996193605545332	WITHOUT_CLASSIFICATION	3.8063944546678076E-4	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9995439445982284	WITHOUT_CLASSIFICATION	4.560554017716746E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9991115487542681	WITHOUT_CLASSIFICATION	8.884512457319861E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999842781991855	WITHOUT_CLASSIFICATION	1.572180081460585E-5	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999842781991855	WITHOUT_CLASSIFICATION	1.572180081460585E-5	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999811618819162	WITHOUT_CLASSIFICATION	1.8838118083791156E-5	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999083446770304	WITHOUT_CLASSIFICATION	9.165532296959489E-5	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9996017570167572	WITHOUT_CLASSIFICATION	3.98242983242729E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9996030353629691	WITHOUT_CLASSIFICATION	3.9696463703084363E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999077292900866	WITHOUT_CLASSIFICATION	9.227070991342352E-5	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9993946866889816	WITHOUT_CLASSIFICATION	6.053133110183468E-4	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.999787956580464	WITHOUT_CLASSIFICATION	2.120434195360569E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9985967878878238	WITHOUT_CLASSIFICATION	0.0014032121121762087	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9996751246200708	WITHOUT_CLASSIFICATION	3.248753799291785E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9993382714247621	WITHOUT_CLASSIFICATION	6.617285752379909E-4	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999734103517404	WITHOUT_CLASSIFICATION	2.658964825970824E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9998533167919252	WITHOUT_CLASSIFICATION	1.46683208074671E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9998931543676796	WITHOUT_CLASSIFICATION	1.0684563232047012E-4	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9996287909471788	WITHOUT_CLASSIFICATION	3.712090528211666E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.999514829368427	WITHOUT_CLASSIFICATION	4.8517063157305876E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9997153726280312	WITHOUT_CLASSIFICATION	2.846273719687223E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9993866730868427	WITHOUT_CLASSIFICATION	6.133269131572824E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999980233391048	WITHOUT_CLASSIFICATION	1.976660895260355E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999977969361296	WITHOUT_CLASSIFICATION	2.2030638704805397E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999989777999652	WITHOUT_CLASSIFICATION	1.02220003486857E-6	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.999998447802892	WITHOUT_CLASSIFICATION	1.5521971078837973E-6	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.999998401727746	WITHOUT_CLASSIFICATION	1.5982722540319574E-6	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999988810484219	WITHOUT_CLASSIFICATION	1.1189515780731435E-6	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999985527213325	WITHOUT_CLASSIFICATION	1.4472786674744807E-6	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999980207786701	WITHOUT_CLASSIFICATION	1.979221329928037E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999982946421305	WITHOUT_CLASSIFICATION	1.705357869460962E-6	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999985039526635	WITHOUT_CLASSIFICATION	1.496047336532438E-6	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999828777257654	WITHOUT_CLASSIFICATION	1.7122274234598783E-4	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999774163552414	WITHOUT_CLASSIFICATION	2.258364475864128E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999861683290442	WITHOUT_CLASSIFICATION	1.3831670955915463E-5	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999926469418676	WITHOUT_CLASSIFICATION	7.353058132319505E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.6396150168681313	WITHOUT_CLASSIFICATION	0.36038498313186873	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9997684573367089	WITHOUT_CLASSIFICATION	2.3154266329106376E-4	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999688206862223	WITHOUT_CLASSIFICATION	3.117931377769856E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9971028110980752	WITHOUT_CLASSIFICATION	0.0028971889019247152	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9986615553656241	WITHOUT_CLASSIFICATION	0.001338444634375877	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9986615553656241	WITHOUT_CLASSIFICATION	0.001338444634375877	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9947744863318148	WITHOUT_CLASSIFICATION	0.005225513668185262	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9971262494583455	WITHOUT_CLASSIFICATION	0.002873750541654543	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9970866674882504	WITHOUT_CLASSIFICATION	0.002913332511749586	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999996096144774	WITHOUT_CLASSIFICATION	3.9038552267165594E-7	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9996934176891646	WITHOUT_CLASSIFICATION	3.0658231083537145E-4	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.999847334628089	WITHOUT_CLASSIFICATION	1.5266537191109162E-4	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9996004344407894	WITHOUT_CLASSIFICATION	3.9956555921057086E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999996813145888	WITHOUT_CLASSIFICATION	3.18685411079587E-7	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9998841753623412	WITHOUT_CLASSIFICATION	1.1582463765876057E-4	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999172653899503	WITHOUT_CLASSIFICATION	8.273461004970896E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998922032077061	WITHOUT_CLASSIFICATION	1.0779679229385328E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998922032077061	WITHOUT_CLASSIFICATION	1.0779679229385328E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998922032077061	WITHOUT_CLASSIFICATION	1.0779679229385328E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998922032077061	WITHOUT_CLASSIFICATION	1.0779679229385328E-4	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.999021664369586	WITHOUT_CLASSIFICATION	9.783356304140182E-4	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9998970376296092	WITHOUT_CLASSIFICATION	1.0296237039079155E-4	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999207840789117	WITHOUT_CLASSIFICATION	7.921592108825331E-5	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999885144559126	WITHOUT_CLASSIFICATION	1.1485544087240605E-5	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9973157872958621	WITHOUT_CLASSIFICATION	0.0026842127041378653	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999877593898666	WITHOUT_CLASSIFICATION	1.2240610133448137E-5	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999404758417648	WITHOUT_CLASSIFICATION	5.9524158235101164E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999353702828869	WITHOUT_CLASSIFICATION	6.462971711297731E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999353702828869	WITHOUT_CLASSIFICATION	6.462971711297731E-5	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999985872994828	WITHOUT_CLASSIFICATION	1.4127005172287763E-6	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9997374369519443	WITHOUT_CLASSIFICATION	2.625630480556629E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998713711273939	WITHOUT_CLASSIFICATION	1.2862887260608634E-4	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999803593273253	WITHOUT_CLASSIFICATION	1.9640672674740157E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999803593273253	WITHOUT_CLASSIFICATION	1.9640672674740157E-5	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999828556089951	WITHOUT_CLASSIFICATION	1.7144391004786993E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999689837303924	WITHOUT_CLASSIFICATION	3.1016269607562976E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999689837303924	WITHOUT_CLASSIFICATION	3.1016269607562976E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999845861166015	WITHOUT_CLASSIFICATION	1.5413883398621892E-5	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999992535264662	WITHOUT_CLASSIFICATION	7.464735337128341E-7	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999992785227775	WITHOUT_CLASSIFICATION	7.214772225479516E-7	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9998679757869919	WITHOUT_CLASSIFICATION	1.3202421300812523E-4	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999181804740355	WITHOUT_CLASSIFICATION	8.181952596452383E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999991619235656	WITHOUT_CLASSIFICATION	8.380764343630969E-7	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9995761146826841	WITHOUT_CLASSIFICATION	4.238853173158833E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999666210795696	WITHOUT_CLASSIFICATION	3.337892043036913E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999940600614666	WITHOUT_CLASSIFICATION	5.939938533403864E-6	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.999968587701955	WITHOUT_CLASSIFICATION	3.14122980450812E-5	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.999979242368123	WITHOUT_CLASSIFICATION	2.075763187702424E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999899760006713	WITHOUT_CLASSIFICATION	1.0023999328768417E-5	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999842105067553	WITHOUT_CLASSIFICATION	1.578949324462959E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9960840089568	WITHOUT_CLASSIFICATION	0.003915991043199867	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999483466809297	WITHOUT_CLASSIFICATION	5.165331907031604E-5	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9992700962489193	WITHOUT_CLASSIFICATION	7.299037510807011E-4	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9995975735252818	WITHOUT_CLASSIFICATION	4.024264747181874E-4	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9994966036412001	WITHOUT_CLASSIFICATION	5.033963588000262E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999803510208034	WITHOUT_CLASSIFICATION	1.964897919657369E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999908601245258	WITHOUT_CLASSIFICATION	9.139875474374844E-6	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999973836130587	WITHOUT_CLASSIFICATION	2.6163869413495896E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999801622626544	WITHOUT_CLASSIFICATION	1.9837737345531678E-5	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9978520798648522	WITHOUT_CLASSIFICATION	0.0021479201351477456	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999811032325128	WITHOUT_CLASSIFICATION	1.8896767487288698E-5	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999949748663606	WITHOUT_CLASSIFICATION	5.025133639471546E-6	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999977202970274	WITHOUT_CLASSIFICATION	2.279702972630264E-6	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999526429105727	WITHOUT_CLASSIFICATION	4.73570894273187E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.999988562683648	WITHOUT_CLASSIFICATION	1.1437316351900292E-5	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999967612669648	WITHOUT_CLASSIFICATION	3.238733035205432E-5	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9993675715903978	WITHOUT_CLASSIFICATION	6.324284096021166E-4	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999176243861191	WITHOUT_CLASSIFICATION	8.237561388084279E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999324843369836	WITHOUT_CLASSIFICATION	6.751566301650259E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999548778295371	WITHOUT_CLASSIFICATION	4.512217046298816E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998941148409145	WITHOUT_CLASSIFICATION	1.0588515908552093E-4	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9992700962489193	WITHOUT_CLASSIFICATION	7.299037510807011E-4	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9992873792436322	WITHOUT_CLASSIFICATION	7.126207563676684E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999548778295371	WITHOUT_CLASSIFICATION	4.512217046298816E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998941148409145	WITHOUT_CLASSIFICATION	1.0588515908552093E-4	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999450126716929	WITHOUT_CLASSIFICATION	5.498732830709406E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998341540737284	WITHOUT_CLASSIFICATION	1.6584592627161217E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998341540737284	WITHOUT_CLASSIFICATION	1.6584592627161217E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998549677878896	WITHOUT_CLASSIFICATION	1.4503221211044178E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999712500593483	WITHOUT_CLASSIFICATION	2.874994065171764E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999928359555267	WITHOUT_CLASSIFICATION	7.164044473354348E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999932839929534	WITHOUT_CLASSIFICATION	6.716007046605576E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999669691948654	WITHOUT_CLASSIFICATION	3.303080513462281E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999709295541043	WITHOUT_CLASSIFICATION	2.9070445895761325E-5	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9997391141618677	WITHOUT_CLASSIFICATION	2.6088583813233603E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.999849608302175	WITHOUT_CLASSIFICATION	1.5039169782512341E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9992832053627119	WITHOUT_CLASSIFICATION	7.167946372881342E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999888352399909	WITHOUT_CLASSIFICATION	1.1164760009138131E-5	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9776830111240598	WITHOUT_CLASSIFICATION	0.022316988875940275	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.999966367746479	WITHOUT_CLASSIFICATION	3.363225352099702E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999790228074186	WITHOUT_CLASSIFICATION	2.097719258144624E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999381430275475	WITHOUT_CLASSIFICATION	6.185697245255659E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999381430275475	WITHOUT_CLASSIFICATION	6.185697245255659E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998758276986608	WITHOUT_CLASSIFICATION	1.2417230133927325E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998758276986608	WITHOUT_CLASSIFICATION	1.2417230133927325E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999602826854328	WITHOUT_CLASSIFICATION	3.9717314567226616E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999708494826149	WITHOUT_CLASSIFICATION	2.9150517385014287E-5	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9993339516443903	WITHOUT_CLASSIFICATION	6.66048355609734E-4	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9992700962489193	WITHOUT_CLASSIFICATION	7.299037510807011E-4	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999928359555267	WITHOUT_CLASSIFICATION	7.164044473354348E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999932839929534	WITHOUT_CLASSIFICATION	6.716007046605576E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9992832053627119	WITHOUT_CLASSIFICATION	7.167946372881342E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999888352399909	WITHOUT_CLASSIFICATION	1.1164760009138131E-5	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9992530864921048	WITHOUT_CLASSIFICATION	7.469135078952955E-4	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999324226314082	WITHOUT_CLASSIFICATION	6.757736859179965E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9996031841776941	WITHOUT_CLASSIFICATION	3.9681582230592514E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9997935104217409	WITHOUT_CLASSIFICATION	2.0648957825897737E-4	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999683031993848	WITHOUT_CLASSIFICATION	3.169680061523985E-5	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.99986813204754	WITHOUT_CLASSIFICATION	1.3186795245991625E-4	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9993991037421549	WITHOUT_CLASSIFICATION	6.008962578450732E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999511270586106	WITHOUT_CLASSIFICATION	4.887294138938097E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999802050714035	WITHOUT_CLASSIFICATION	1.979492859651417E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999973553746322	WITHOUT_CLASSIFICATION	2.644625367873223E-6	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999994866467646	WITHOUT_CLASSIFICATION	5.13353235269366E-7	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9987705693982873	WITHOUT_CLASSIFICATION	0.001229430601712627	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999135338455858	WITHOUT_CLASSIFICATION	8.646615441415665E-5	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999816618299976	WITHOUT_CLASSIFICATION	1.833817000241584E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9998757780377971	WITHOUT_CLASSIFICATION	1.2422196220284647E-4	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999860485228135	WITHOUT_CLASSIFICATION	1.395147718643552E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999430989869256	WITHOUT_CLASSIFICATION	5.6901013074381824E-5	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999863356378011	WITHOUT_CLASSIFICATION	1.366436219881695E-5	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999907693310752	WITHOUT_CLASSIFICATION	9.230668924804582E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999907693310752	WITHOUT_CLASSIFICATION	9.230668924804582E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999907693310752	WITHOUT_CLASSIFICATION	9.230668924804582E-5	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999939135652264	WITHOUT_CLASSIFICATION	6.0864347735928304E-6	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.999999903702178	WITHOUT_CLASSIFICATION	9.629782202626706E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9992712447204936	WITHOUT_CLASSIFICATION	7.287552795064085E-4	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9992712447204936	WITHOUT_CLASSIFICATION	7.287552795064085E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9992700962489193	WITHOUT_CLASSIFICATION	7.299037510807011E-4	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9992700962489193	WITHOUT_CLASSIFICATION	7.299037510807011E-4	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9992700962489193	WITHOUT_CLASSIFICATION	7.299037510807011E-4	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9992700962489193	WITHOUT_CLASSIFICATION	7.299037510807011E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9992700962489193	WITHOUT_CLASSIFICATION	7.299037510807011E-4	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9991577380834658	WITHOUT_CLASSIFICATION	8.422619165343205E-4	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9973043902366273	WITHOUT_CLASSIFICATION	0.002695609763372617	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9990112189926055	WITHOUT_CLASSIFICATION	9.887810073944201E-4	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9994134588371629	WITHOUT_CLASSIFICATION	5.865411628369645E-4	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9994783234974395	WITHOUT_CLASSIFICATION	5.216765025604648E-4	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9998408271305672	WITHOUT_CLASSIFICATION	1.5917286943288524E-4	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9982362433604874	WITHOUT_CLASSIFICATION	0.001763756639512509	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9996991476404073	WITHOUT_CLASSIFICATION	3.008523595926116E-4	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999625048147911	WITHOUT_CLASSIFICATION	3.749518520895852E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999661568015862	WITHOUT_CLASSIFICATION	3.384319841381296E-5	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999878104912553	WITHOUT_CLASSIFICATION	1.2189508744703555E-5	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999964428431626	WITHOUT_CLASSIFICATION	3.557156837438192E-6	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.99999986083252	WITHOUT_CLASSIFICATION	1.3916747991638865E-7	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999895295009981	WITHOUT_CLASSIFICATION	1.047049900190987E-5	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9995556866771753	WITHOUT_CLASSIFICATION	4.4431332282471244E-4	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999842734532807	WITHOUT_CLASSIFICATION	1.572654671938616E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999957789011975	WITHOUT_CLASSIFICATION	4.221098802493366E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998420301926537	WITHOUT_CLASSIFICATION	1.5796980734625692E-4	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999846040115535	WITHOUT_CLASSIFICATION	1.5395988446457443E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999163726157783	WITHOUT_CLASSIFICATION	8.362738422169986E-5	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999107516279	WITHOUT_CLASSIFICATION	8.924837217169716E-8	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999649559834831	WITHOUT_CLASSIFICATION	3.5044016516797524E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999209121368876	WITHOUT_CLASSIFICATION	7.908786311236795E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999209121368876	WITHOUT_CLASSIFICATION	7.908786311236795E-5	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999105081329531	WITHOUT_CLASSIFICATION	8.949186704676947E-5	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9993903575128995	WITHOUT_CLASSIFICATION	6.096424871005711E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9993903575128995	WITHOUT_CLASSIFICATION	6.096424871005711E-4	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999733313775875	WITHOUT_CLASSIFICATION	2.666862241247438E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999733313775875	WITHOUT_CLASSIFICATION	2.666862241247438E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999721826142259	WITHOUT_CLASSIFICATION	2.781738577409366E-4	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999023310251238	WITHOUT_CLASSIFICATION	9.766897487628627E-5	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999716029557406	WITHOUT_CLASSIFICATION	2.839704425932915E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9997922716767387	WITHOUT_CLASSIFICATION	2.0772832326120826E-4	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9998919652212614	WITHOUT_CLASSIFICATION	1.0803477873866282E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999859277732853	WITHOUT_CLASSIFICATION	1.4072226714684688E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999859277732853	WITHOUT_CLASSIFICATION	1.4072226714684688E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999957789011975	WITHOUT_CLASSIFICATION	4.221098802493366E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999957789011975	WITHOUT_CLASSIFICATION	4.221098802493366E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999957789011975	WITHOUT_CLASSIFICATION	4.221098802493366E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998420301926537	WITHOUT_CLASSIFICATION	1.5796980734625692E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999209121368876	WITHOUT_CLASSIFICATION	7.908786311236795E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999209121368876	WITHOUT_CLASSIFICATION	7.908786311236795E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999209121368876	WITHOUT_CLASSIFICATION	7.908786311236795E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999721826142259	WITHOUT_CLASSIFICATION	2.781738577409366E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999721826142259	WITHOUT_CLASSIFICATION	2.781738577409366E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999721826142259	WITHOUT_CLASSIFICATION	2.781738577409366E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9997922716767387	WITHOUT_CLASSIFICATION	2.0772832326120826E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9997922716767387	WITHOUT_CLASSIFICATION	2.0772832326120826E-4	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999055821383652	WITHOUT_CLASSIFICATION	9.44178616347493E-5	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999889875935825	WITHOUT_CLASSIFICATION	1.1012406417504006E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9994058599388366	WITHOUT_CLASSIFICATION	5.941400611633669E-4	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9647570153057096	IMPLEMENTATION	0.035242984694290415	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9988481281823784	WITHOUT_CLASSIFICATION	0.0011518718176215536	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9997628475842185	WITHOUT_CLASSIFICATION	2.3715241578148245E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9997628475842185	WITHOUT_CLASSIFICATION	2.3715241578148245E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999659569794742	WITHOUT_CLASSIFICATION	3.404302052579008E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999871639289337	WITHOUT_CLASSIFICATION	1.2836071066319945E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999871639289337	WITHOUT_CLASSIFICATION	1.2836071066319945E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999871639289337	WITHOUT_CLASSIFICATION	1.2836071066319945E-5	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999498843493544	WITHOUT_CLASSIFICATION	5.011565064565802E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999349753265786	WITHOUT_CLASSIFICATION	6.502467342138739E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998420301926537	WITHOUT_CLASSIFICATION	1.5796980734625692E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999721826142259	WITHOUT_CLASSIFICATION	2.781738577409366E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999721826142259	WITHOUT_CLASSIFICATION	2.781738577409366E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999871639289337	WITHOUT_CLASSIFICATION	1.2836071066319945E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999659569794742	WITHOUT_CLASSIFICATION	3.404302052579008E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999706331324286	WITHOUT_CLASSIFICATION	2.9366867571370396E-5	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9994068646071194	WITHOUT_CLASSIFICATION	5.931353928806648E-4	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999991060002972	WITHOUT_CLASSIFICATION	8.939997028167665E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999413115664657	WITHOUT_CLASSIFICATION	5.868843353434031E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9980423292579327	WITHOUT_CLASSIFICATION	0.001957670742067253	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999857445533749	WITHOUT_CLASSIFICATION	1.4255446625149343E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999956375768906	WITHOUT_CLASSIFICATION	4.3624231093945305E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9994008351392929	WITHOUT_CLASSIFICATION	5.991648607070747E-4	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999843984630755	WITHOUT_CLASSIFICATION	1.5601536924433173E-5	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9997778115257921	WITHOUT_CLASSIFICATION	2.2218847420783124E-4	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999536978076083	WITHOUT_CLASSIFICATION	4.63021923915751E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9998810109126688	WITHOUT_CLASSIFICATION	1.1898908733123397E-4	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9992690534166035	WITHOUT_CLASSIFICATION	7.309465833964374E-4	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.999849109877262	WITHOUT_CLASSIFICATION	1.5089012273791238E-4	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999462302976765	WITHOUT_CLASSIFICATION	5.3769702323526064E-5	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9997012107940394	WITHOUT_CLASSIFICATION	2.98789205960602E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.999972075204491	WITHOUT_CLASSIFICATION	2.7924795508903582E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9996031278980751	WITHOUT_CLASSIFICATION	3.9687210192480566E-4	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999988458192411	WITHOUT_CLASSIFICATION	1.1541807589136474E-6	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999957224557854	WITHOUT_CLASSIFICATION	4.2775442145773756E-6	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9995966556689923	WITHOUT_CLASSIFICATION	4.0334433100772116E-4	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999152425154327	WITHOUT_CLASSIFICATION	8.475748456734818E-5	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999119202804284	WITHOUT_CLASSIFICATION	8.807971957159886E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9990141632738897	WITHOUT_CLASSIFICATION	9.858367261102795E-4	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999934141964364	WITHOUT_CLASSIFICATION	6.585803563546712E-6	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999419307446423	WITHOUT_CLASSIFICATION	5.806925535763474E-5	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9998128088648196	WITHOUT_CLASSIFICATION	1.8719113518035624E-4	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999913238782505	WITHOUT_CLASSIFICATION	8.676121749466333E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999977086171938	WITHOUT_CLASSIFICATION	2.2913828061051603E-6	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999732244661843	WITHOUT_CLASSIFICATION	2.6775533815753283E-5	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999387955204971	WITHOUT_CLASSIFICATION	6.120447950286545E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999706331324286	WITHOUT_CLASSIFICATION	2.9366867571370396E-5	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9997456734484736	WITHOUT_CLASSIFICATION	2.543265515263578E-4	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9996914208158937	WITHOUT_CLASSIFICATION	3.085791841062671E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999908135632206	WITHOUT_CLASSIFICATION	9.186436779373757E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9972331291096893	WITHOUT_CLASSIFICATION	0.0027668708903107655	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9972331291096893	WITHOUT_CLASSIFICATION	0.0027668708903107655	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999568062701354	WITHOUT_CLASSIFICATION	4.3193729864503834E-5	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999975485404602	WITHOUT_CLASSIFICATION	2.451459539820277E-6	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999869873355134	WITHOUT_CLASSIFICATION	1.3012664486606474E-5	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999358150165825	WITHOUT_CLASSIFICATION	6.418498341749667E-5	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999746607868464	WITHOUT_CLASSIFICATION	2.5339213153504134E-5	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9997387716100317	WITHOUT_CLASSIFICATION	2.612283899683624E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999914541351195	WITHOUT_CLASSIFICATION	8.545864880505823E-6	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.999889561692472	WITHOUT_CLASSIFICATION	1.1043830752799701E-4	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999485605887766	WITHOUT_CLASSIFICATION	5.143941122338729E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999395276379802	WITHOUT_CLASSIFICATION	6.047236201971045E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.999959885405256	WITHOUT_CLASSIFICATION	4.0114594743906775E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999517524984446	WITHOUT_CLASSIFICATION	4.824750155537316E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999517524984446	WITHOUT_CLASSIFICATION	4.824750155537316E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.999958179269902	WITHOUT_CLASSIFICATION	4.182073009785323E-5	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9997458966934255	WITHOUT_CLASSIFICATION	2.541033065744376E-4	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999493196393496	WITHOUT_CLASSIFICATION	5.068036065037222E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999493196393496	WITHOUT_CLASSIFICATION	5.068036065037222E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999955218419297	WITHOUT_CLASSIFICATION	4.478158070263295E-6	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.999981247554331	WITHOUT_CLASSIFICATION	1.8752445669016996E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9990007821949187	WITHOUT_CLASSIFICATION	9.99217805081292E-4	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999872933028467	WITHOUT_CLASSIFICATION	1.2706697153298027E-5	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999827819045318	WITHOUT_CLASSIFICATION	1.7218095468149235E-5	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999896101943557	WITHOUT_CLASSIFICATION	1.0389805644377193E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9997251433411224	WITHOUT_CLASSIFICATION	2.748566588776655E-4	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999421008121258	WITHOUT_CLASSIFICATION	5.78991878743671E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999510474270117	WITHOUT_CLASSIFICATION	4.8952572988457945E-5	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.999624226507875	WITHOUT_CLASSIFICATION	3.7577349212502057E-4	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9998491825169993	WITHOUT_CLASSIFICATION	1.5081748300059503E-4	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9992167513303667	WITHOUT_CLASSIFICATION	7.832486696333628E-4	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999744391414545	WITHOUT_CLASSIFICATION	2.556085854554007E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9998988579402974	WITHOUT_CLASSIFICATION	1.0114205970255902E-4	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9997702295446603	WITHOUT_CLASSIFICATION	2.2977045533965445E-4	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9990226062912845	WITHOUT_CLASSIFICATION	9.773937087155919E-4	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.999837060999452	WITHOUT_CLASSIFICATION	1.6293900054794824E-4	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9998252187177872	WITHOUT_CLASSIFICATION	1.747812822127363E-4	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.999969546320842	WITHOUT_CLASSIFICATION	3.045367915796957E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999660881929859	WITHOUT_CLASSIFICATION	3.3911807014099714E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7777476155083052	WITHOUT_CLASSIFICATION	0.22225238449169485	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9998525139549596	WITHOUT_CLASSIFICATION	1.4748604504035708E-4	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9995015047642714	WITHOUT_CLASSIFICATION	4.984952357286299E-4	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999237914134222	WITHOUT_CLASSIFICATION	7.620858657778148E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999237758645667	WITHOUT_CLASSIFICATION	7.62241354332253E-5	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999707427116004	WITHOUT_CLASSIFICATION	2.9257288399627636E-5	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9998222342684779	WITHOUT_CLASSIFICATION	1.7776573152208385E-4	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999995226410822	WITHOUT_CLASSIFICATION	4.773589178377613E-7	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9998747319605085	WITHOUT_CLASSIFICATION	1.2526803949148042E-4	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.999993959276603	WITHOUT_CLASSIFICATION	6.040723397073091E-6	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999997506676878	WITHOUT_CLASSIFICATION	2.493323121909604E-7	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999853157472358	WITHOUT_CLASSIFICATION	1.4684252764159823E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999985017814323	WITHOUT_CLASSIFICATION	1.4982185676850127E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999985017814323	WITHOUT_CLASSIFICATION	1.4982185676850127E-6	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999901772929092	WITHOUT_CLASSIFICATION	9.822707090821958E-6	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999471227322836	WITHOUT_CLASSIFICATION	5.287726771650693E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9986940817482798	WITHOUT_CLASSIFICATION	0.0013059182517201654	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999889042017204	WITHOUT_CLASSIFICATION	1.1095798279540074E-5	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999884899669916	WITHOUT_CLASSIFICATION	1.1510033008323937E-5	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9995790673491027	WITHOUT_CLASSIFICATION	4.2093265089729125E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9981154126537364	WITHOUT_CLASSIFICATION	0.001884587346263664	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9981154126537364	WITHOUT_CLASSIFICATION	0.001884587346263664	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999381396805546	WITHOUT_CLASSIFICATION	6.186031944541713E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999729366459077	WITHOUT_CLASSIFICATION	2.70633540923382E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999968543550686	WITHOUT_CLASSIFICATION	3.1456449314388084E-6	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999560609932078	WITHOUT_CLASSIFICATION	4.3939006792254795E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9997215774233432	WITHOUT_CLASSIFICATION	2.7842257665669826E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9993389350111359	WITHOUT_CLASSIFICATION	6.610649888641281E-4	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999972218722212	WITHOUT_CLASSIFICATION	2.778127778944506E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999792971556718	WITHOUT_CLASSIFICATION	2.0702844328157116E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999852969327275	WITHOUT_CLASSIFICATION	1.4703067272449531E-5	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999558937258582	WITHOUT_CLASSIFICATION	4.410627414178764E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.999907551451943	WITHOUT_CLASSIFICATION	9.244854805706824E-5	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999234522842173	WITHOUT_CLASSIFICATION	7.65477157826001E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9997717437866066	WITHOUT_CLASSIFICATION	2.2825621339340812E-4	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999986664357874	WITHOUT_CLASSIFICATION	1.333564212516584E-6	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999677342931306	WITHOUT_CLASSIFICATION	3.226570686943557E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.999946376846759	WITHOUT_CLASSIFICATION	5.362315324082716E-5	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9995018641677326	WITHOUT_CLASSIFICATION	4.981358322674398E-4	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9987143744201488	WITHOUT_CLASSIFICATION	0.0012856255798512088	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998728922963184	WITHOUT_CLASSIFICATION	1.27107703681603E-4	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.999875883378585	WITHOUT_CLASSIFICATION	1.2411662141501443E-4	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.999822992075567	WITHOUT_CLASSIFICATION	1.770079244330301E-4	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9997688809640768	WITHOUT_CLASSIFICATION	2.311190359233307E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999872519898667	WITHOUT_CLASSIFICATION	1.2748010133335234E-5	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999892647696961	WITHOUT_CLASSIFICATION	1.0735230303885713E-5	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.999994808492821	WITHOUT_CLASSIFICATION	5.191507179073786E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999478373182333	WITHOUT_CLASSIFICATION	5.216268176673925E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.999998437429018	WITHOUT_CLASSIFICATION	1.5625709821064168E-6	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.999712570392446	WITHOUT_CLASSIFICATION	2.8742960755403173E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9998668032976351	WITHOUT_CLASSIFICATION	1.331967023648898E-4	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9977627450147326	WITHOUT_CLASSIFICATION	0.0022372549852673774	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9998247200242651	WITHOUT_CLASSIFICATION	1.752799757348959E-4	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9998505381985143	WITHOUT_CLASSIFICATION	1.494618014856728E-4	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9993874157406405	WITHOUT_CLASSIFICATION	6.125842593595492E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9997117217145635	WITHOUT_CLASSIFICATION	2.882782854365492E-4	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999777087696765	WITHOUT_CLASSIFICATION	2.229123032351814E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999979940698113	WITHOUT_CLASSIFICATION	2.0059301886553375E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999498558926481	WITHOUT_CLASSIFICATION	5.014410735187605E-5	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999990468360784	WITHOUT_CLASSIFICATION	9.531639216046108E-7	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999621422772803	WITHOUT_CLASSIFICATION	3.785772271974014E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999999491679353	WITHOUT_CLASSIFICATION	5.083206469706739E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994178355366716	WITHOUT_CLASSIFICATION	5.821644633283152E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9997705996739858	WITHOUT_CLASSIFICATION	2.2940032601419477E-4	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9992635246067235	WITHOUT_CLASSIFICATION	7.364753932765608E-4	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.999916798202735	WITHOUT_CLASSIFICATION	8.320179726496857E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9995283508826098	WITHOUT_CLASSIFICATION	4.716491173902263E-4	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.861647298237944	WITHOUT_CLASSIFICATION	0.13835270176205608	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999692212825778	WITHOUT_CLASSIFICATION	3.077871742227698E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9997012107940394	WITHOUT_CLASSIFICATION	2.98789205960602E-4	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9985912200022447	WITHOUT_CLASSIFICATION	0.0014087799977554076	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999625498109813	WITHOUT_CLASSIFICATION	3.74501890187181E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.999822960552195	WITHOUT_CLASSIFICATION	1.770394478049745E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999353693111301	WITHOUT_CLASSIFICATION	6.463068886990765E-4	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999796604606624	WITHOUT_CLASSIFICATION	2.0339539337499113E-5	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999997291844134	WITHOUT_CLASSIFICATION	2.7081558662284314E-7	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999980635209672	WITHOUT_CLASSIFICATION	1.93647903280154E-5	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9893857229155486	WITHOUT_CLASSIFICATION	0.010614277084451404	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999961146435173	WITHOUT_CLASSIFICATION	3.885356482742689E-6	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9997410395398169	WITHOUT_CLASSIFICATION	2.5896046018314216E-4	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999917531394644	WITHOUT_CLASSIFICATION	8.246860535598735E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999521513700124	WITHOUT_CLASSIFICATION	4.784862998760563E-5	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999917531394644	WITHOUT_CLASSIFICATION	8.246860535598735E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999995883955378	WITHOUT_CLASSIFICATION	4.1160446220262745E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999521513700124	WITHOUT_CLASSIFICATION	4.784862998760563E-5	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999989149678757	WITHOUT_CLASSIFICATION	1.085032124200223E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999801622626544	WITHOUT_CLASSIFICATION	1.9837737345531678E-5	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9300937894963082	IMPLEMENTATION	0.06990621050369192	WITHOUT_CLASSIFICATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.5967590156928942	IMPLEMENTATION	0.40324098430710587	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9991565849195114	WITHOUT_CLASSIFICATION	8.434150804885319E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9928794880618059	WITHOUT_CLASSIFICATION	0.007120511938194124	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9995918508656153	WITHOUT_CLASSIFICATION	4.0814913438469327E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9989550622464841	WITHOUT_CLASSIFICATION	0.0010449377535158792	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999712500593483	WITHOUT_CLASSIFICATION	2.874994065171764E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999660881929859	WITHOUT_CLASSIFICATION	3.3911807014099714E-4	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9994058599388366	WITHOUT_CLASSIFICATION	5.941400611633669E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9949354516911971	WITHOUT_CLASSIFICATION	0.005064548308802885	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999914094581939	WITHOUT_CLASSIFICATION	8.590541806024183E-6	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999939799454407	WITHOUT_CLASSIFICATION	6.020054559256341E-6	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9995385267635396	WITHOUT_CLASSIFICATION	4.614732364603181E-4	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9949585690731685	WITHOUT_CLASSIFICATION	0.005041430926831455	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999925653288827	WITHOUT_CLASSIFICATION	7.434671117316239E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999573084832198	WITHOUT_CLASSIFICATION	4.269151678014916E-5	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999174366800871	WITHOUT_CLASSIFICATION	8.25633199128292E-5	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9995720654228376	WITHOUT_CLASSIFICATION	4.279345771624362E-4	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9996866288365422	WITHOUT_CLASSIFICATION	3.133711634577694E-4	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9995425230112134	WITHOUT_CLASSIFICATION	4.574769887865549E-4	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.999871074650283	WITHOUT_CLASSIFICATION	1.2892534971689095E-4	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999694986875292	WITHOUT_CLASSIFICATION	3.050131247087961E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9997039861213574	WITHOUT_CLASSIFICATION	2.960138786427222E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999879063093458	WITHOUT_CLASSIFICATION	1.2093690654249263E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998238523917922	WITHOUT_CLASSIFICATION	1.7614760820787746E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998238523917922	WITHOUT_CLASSIFICATION	1.7614760820787746E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999910847689544	WITHOUT_CLASSIFICATION	8.915231045552035E-6	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999596468551821	WITHOUT_CLASSIFICATION	4.0353144817849246E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9993293149365415	WITHOUT_CLASSIFICATION	6.706850634585368E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.882633459033666	IMPLEMENTATION	0.11736654096633407	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.882633459033666	IMPLEMENTATION	0.11736654096633407	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.882633459033666	IMPLEMENTATION	0.11736654096633407	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.882633459033666	IMPLEMENTATION	0.11736654096633407	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999768346770952	WITHOUT_CLASSIFICATION	2.316532290488969E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998390468826576	WITHOUT_CLASSIFICATION	1.6095311734245265E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9998172878648109	WITHOUT_CLASSIFICATION	1.8271213518914863E-4	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9996908624581725	WITHOUT_CLASSIFICATION	3.091375418275439E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999996264858723	WITHOUT_CLASSIFICATION	3.735141277392149E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999972602218129	WITHOUT_CLASSIFICATION	2.739778187010095E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999972602218129	WITHOUT_CLASSIFICATION	2.739778187010095E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999986052540003	WITHOUT_CLASSIFICATION	1.3947459996609219E-6	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9997889298879162	WITHOUT_CLASSIFICATION	2.110701120837007E-4	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.8291572809531955	IMPLEMENTATION	0.17084271904680456	WITHOUT_CLASSIFICATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998516202206389	WITHOUT_CLASSIFICATION	1.4837977936117962E-4	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9998279204344097	WITHOUT_CLASSIFICATION	1.720795655903312E-4	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999993370238466	WITHOUT_CLASSIFICATION	6.629761535072757E-7	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9995873691217707	WITHOUT_CLASSIFICATION	4.1263087822936053E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999995883955378	WITHOUT_CLASSIFICATION	4.1160446220262745E-6	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999065911547709	WITHOUT_CLASSIFICATION	9.34088452291516E-5	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999995363534387	WITHOUT_CLASSIFICATION	4.6364656134231097E-7	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999967724977694	WITHOUT_CLASSIFICATION	3.227502230545294E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.99939375804071	WITHOUT_CLASSIFICATION	6.062419592901617E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999909650711197	WITHOUT_CLASSIFICATION	9.034928880354128E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999909650711197	WITHOUT_CLASSIFICATION	9.034928880354128E-6	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9997889298879162	WITHOUT_CLASSIFICATION	2.110701120837007E-4	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999627502547765	WITHOUT_CLASSIFICATION	3.724974522345683E-5	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9951150201934484	WITHOUT_CLASSIFICATION	0.00488497980655159	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999476918576446	WITHOUT_CLASSIFICATION	5.2308142355363515E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9998385882996795	WITHOUT_CLASSIFICATION	1.6141170032040071E-4	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9832608421846208	WITHOUT_CLASSIFICATION	0.016739157815379106	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999128270848208	WITHOUT_CLASSIFICATION	8.717291517919343E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999128270848208	WITHOUT_CLASSIFICATION	8.717291517919343E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999128270848208	WITHOUT_CLASSIFICATION	8.717291517919343E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999128270848208	WITHOUT_CLASSIFICATION	8.717291517919343E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999995312749695	WITHOUT_CLASSIFICATION	4.68725030376861E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999625234	WITHOUT_CLASSIFICATION	3.747656311143225E-11	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9972018334596707	WITHOUT_CLASSIFICATION	0.002798166540329194	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9998711582591777	WITHOUT_CLASSIFICATION	1.2884174082235798E-4	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999926462495735	WITHOUT_CLASSIFICATION	7.353750426520244E-6	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999980149997677	WITHOUT_CLASSIFICATION	1.9850002323889927E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9994465270708268	WITHOUT_CLASSIFICATION	5.534729291732992E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999359253214748	WITHOUT_CLASSIFICATION	6.407467852525505E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999359253214748	WITHOUT_CLASSIFICATION	6.407467852525505E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999359253214748	WITHOUT_CLASSIFICATION	6.407467852525505E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999997036116145	WITHOUT_CLASSIFICATION	2.9638838550574433E-6	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999466783855817	WITHOUT_CLASSIFICATION	5.3321614418310006E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998246960217089	WITHOUT_CLASSIFICATION	1.75303978291187E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998246960217089	WITHOUT_CLASSIFICATION	1.75303978291187E-4	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9960414034671642	WITHOUT_CLASSIFICATION	0.0039585965328358	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9773997461600051	WITHOUT_CLASSIFICATION	0.022600253839994904	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999994074993048	WITHOUT_CLASSIFICATION	5.925006951146589E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9997378657649292	WITHOUT_CLASSIFICATION	2.621342350708601E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999965080462327	WITHOUT_CLASSIFICATION	3.4919537672071075E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999965080462327	WITHOUT_CLASSIFICATION	3.4919537672071075E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999416941531366	WITHOUT_CLASSIFICATION	5.830584686342267E-5	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999941687362	WITHOUT_CLASSIFICATION	5.831263805837233E-9	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999948818605	WITHOUT_CLASSIFICATION	5.118139503190026E-9	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9994501938614402	WITHOUT_CLASSIFICATION	5.49806138559817E-4	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.991771684094251	WITHOUT_CLASSIFICATION	0.008228315905748917	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999978438124493	WITHOUT_CLASSIFICATION	2.1561875508086244E-6	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9995952340592528	WITHOUT_CLASSIFICATION	4.047659407472444E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9996706568778934	WITHOUT_CLASSIFICATION	3.293431221066578E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.999980614882794	WITHOUT_CLASSIFICATION	1.9385117205999475E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999862307320301	WITHOUT_CLASSIFICATION	1.376926796988858E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999968451101611	WITHOUT_CLASSIFICATION	3.1548898389014593E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.8905212124127665	WITHOUT_CLASSIFICATION	0.10947878758723346	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999832831848773	WITHOUT_CLASSIFICATION	1.6716815122650032E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9988998686562252	WITHOUT_CLASSIFICATION	0.0011001313437747906	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9957014283155047	WITHOUT_CLASSIFICATION	0.004298571684495386	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.999991064802564	WITHOUT_CLASSIFICATION	8.935197436031212E-6	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999609133352934	WITHOUT_CLASSIFICATION	3.908666470655619E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999518265073762	WITHOUT_CLASSIFICATION	4.8173492623811455E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9994364802136328	WITHOUT_CLASSIFICATION	5.635197863672018E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999945433873321	WITHOUT_CLASSIFICATION	5.456612667957682E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9960439912011675	WITHOUT_CLASSIFICATION	0.003956008798832469	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996506400717988	WITHOUT_CLASSIFICATION	3.493599282011746E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996506400717988	WITHOUT_CLASSIFICATION	3.493599282011746E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996506400717988	WITHOUT_CLASSIFICATION	3.493599282011746E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996506400717988	WITHOUT_CLASSIFICATION	3.493599282011746E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996506400717988	WITHOUT_CLASSIFICATION	3.493599282011746E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996506400717988	WITHOUT_CLASSIFICATION	3.493599282011746E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996506400717988	WITHOUT_CLASSIFICATION	3.493599282011746E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996506400717988	WITHOUT_CLASSIFICATION	3.493599282011746E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999922116310209	WITHOUT_CLASSIFICATION	7.788368979100285E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.999954455143558	WITHOUT_CLASSIFICATION	4.5544856442047865E-5	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999051731223312	WITHOUT_CLASSIFICATION	9.482687766879164E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999895062575447	WITHOUT_CLASSIFICATION	1.0493742455394122E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999498558926481	WITHOUT_CLASSIFICATION	5.014410735187605E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999498558926481	WITHOUT_CLASSIFICATION	5.014410735187605E-5	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.99999332424153	WITHOUT_CLASSIFICATION	6.675758469930592E-6	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999510025315902	WITHOUT_CLASSIFICATION	4.899746840979866E-5	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999547984229339	WITHOUT_CLASSIFICATION	4.520157706615564E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999688332349315	WITHOUT_CLASSIFICATION	3.116676506852906E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9998109492692139	WITHOUT_CLASSIFICATION	1.890507307861316E-4	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.999132598132234	WITHOUT_CLASSIFICATION	8.674018677660463E-4	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999959147394556	WITHOUT_CLASSIFICATION	4.085260544448842E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9995752617015841	WITHOUT_CLASSIFICATION	4.247382984160031E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9991714138707449	WITHOUT_CLASSIFICATION	8.28586129255127E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998252954334157	WITHOUT_CLASSIFICATION	1.7470456658431958E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998252954334157	WITHOUT_CLASSIFICATION	1.7470456658431958E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998252954334157	WITHOUT_CLASSIFICATION	1.7470456658431958E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999640221134528	WITHOUT_CLASSIFICATION	3.597788654727919E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999875855173583	WITHOUT_CLASSIFICATION	1.2414482641600558E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999683879911957	WITHOUT_CLASSIFICATION	3.1612008804290354E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999811484960286	WITHOUT_CLASSIFICATION	1.8851503971333147E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999186004118453	WITHOUT_CLASSIFICATION	8.139958815472921E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999837333065232	WITHOUT_CLASSIFICATION	1.626669347668829E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999870128541474	WITHOUT_CLASSIFICATION	1.2987145852526123E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998692729660732	WITHOUT_CLASSIFICATION	1.3072703392680028E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998692729660732	WITHOUT_CLASSIFICATION	1.3072703392680028E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9989953605033906	WITHOUT_CLASSIFICATION	0.0010046394966094052	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999985077746277	WITHOUT_CLASSIFICATION	1.4922253722876393E-6	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999968525129928	WITHOUT_CLASSIFICATION	3.1474870071293567E-6	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999806835449182	WITHOUT_CLASSIFICATION	1.931645508178753E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9987970258770488	WITHOUT_CLASSIFICATION	0.00120297412295123	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9987970258770488	WITHOUT_CLASSIFICATION	0.00120297412295123	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9998392039219711	WITHOUT_CLASSIFICATION	1.607960780287441E-4	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999989618543625	WITHOUT_CLASSIFICATION	1.0381456373588831E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9918046881559925	WITHOUT_CLASSIFICATION	0.008195311844007493	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9994343186854039	WITHOUT_CLASSIFICATION	5.656813145961681E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998388675305371	WITHOUT_CLASSIFICATION	1.6113246946294834E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998388675305371	WITHOUT_CLASSIFICATION	1.6113246946294834E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9991261211557164	WITHOUT_CLASSIFICATION	8.738788442835297E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9991261211557164	WITHOUT_CLASSIFICATION	8.738788442835297E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9995845684137352	WITHOUT_CLASSIFICATION	4.1543158626478467E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999535717765606	WITHOUT_CLASSIFICATION	4.642822343927904E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999933256424081	WITHOUT_CLASSIFICATION	6.674357591950884E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999884861868638	WITHOUT_CLASSIFICATION	1.1513813136261415E-5	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999838950706321	WITHOUT_CLASSIFICATION	1.6104929367815087E-5	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999979781586051	WITHOUT_CLASSIFICATION	2.0218413948940025E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999925830735129	WITHOUT_CLASSIFICATION	7.4169264871128546E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999859277732853	WITHOUT_CLASSIFICATION	1.4072226714684688E-5	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9998843146839859	WITHOUT_CLASSIFICATION	1.1568531601413896E-4	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999598790197	WITHOUT_CLASSIFICATION	4.012098022725324E-8	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997295403017293	WITHOUT_CLASSIFICATION	2.704596982707527E-4	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9998076970117199	WITHOUT_CLASSIFICATION	1.9230298828012938E-4	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999944992759741	WITHOUT_CLASSIFICATION	5.500724025917868E-6	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999603797347	WITHOUT_CLASSIFICATION	3.9620265242598E-8	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999255046344381	WITHOUT_CLASSIFICATION	7.449536556195635E-5	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9997665098115425	WITHOUT_CLASSIFICATION	2.3349018845759547E-4	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9987872541646708	WITHOUT_CLASSIFICATION	0.0012127458353291627	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999009903101282	WITHOUT_CLASSIFICATION	9.900968987181451E-5	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999614293157362	WITHOUT_CLASSIFICATION	3.857068426385952E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9949354516911971	WITHOUT_CLASSIFICATION	0.005064548308802885	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999874671749304	WITHOUT_CLASSIFICATION	1.2532825069563748E-5	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9998912155190904	WITHOUT_CLASSIFICATION	1.0878448090964447E-4	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9994244093764367	WITHOUT_CLASSIFICATION	5.75590623563202E-4	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9996753329224137	WITHOUT_CLASSIFICATION	3.2466707758624445E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999261979437515	WITHOUT_CLASSIFICATION	7.380205624851784E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999985405497342	WITHOUT_CLASSIFICATION	1.4594502657611528E-6	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999950153987407	WITHOUT_CLASSIFICATION	4.984601259337512E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9996398520230689	WITHOUT_CLASSIFICATION	3.601479769310869E-4	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9997785475786563	WITHOUT_CLASSIFICATION	2.2145242134375196E-4	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999436102645906	WITHOUT_CLASSIFICATION	5.638973540943838E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9989142266572009	WITHOUT_CLASSIFICATION	0.0010857733427991265	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9997968409586361	WITHOUT_CLASSIFICATION	2.0315904136380736E-4	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998072642470299	WITHOUT_CLASSIFICATION	1.9273575297003786E-4	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999687172767528	WITHOUT_CLASSIFICATION	3.128272324715729E-5	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999795366141403	WITHOUT_CLASSIFICATION	2.046338585971955E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9996869456902827	WITHOUT_CLASSIFICATION	3.130543097172254E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999962948108768	WITHOUT_CLASSIFICATION	3.7051891230590024E-6	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999995327934387	WITHOUT_CLASSIFICATION	4.6720656139910676E-7	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9994236120396456	WITHOUT_CLASSIFICATION	5.763879603545216E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999900807889391	WITHOUT_CLASSIFICATION	9.919211060893424E-6	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999926982827329	WITHOUT_CLASSIFICATION	7.301717267154572E-6	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999987675893981	WITHOUT_CLASSIFICATION	1.2324106018437834E-6	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9991556507885584	WITHOUT_CLASSIFICATION	8.443492114416391E-4	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994736227728945	WITHOUT_CLASSIFICATION	5.263772271054653E-4	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9989083663846051	WITHOUT_CLASSIFICATION	0.001091633615394867	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999994439588236	WITHOUT_CLASSIFICATION	5.560411764151372E-7	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999986687014657	WITHOUT_CLASSIFICATION	1.3312985343749976E-6	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999930204311176	WITHOUT_CLASSIFICATION	6.979568882412955E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999124220932037	WITHOUT_CLASSIFICATION	8.757790679627993E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999124220932037	WITHOUT_CLASSIFICATION	8.757790679627993E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999446740058432	WITHOUT_CLASSIFICATION	5.532599415684085E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999446740058432	WITHOUT_CLASSIFICATION	5.532599415684085E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9969393051917084	WITHOUT_CLASSIFICATION	0.0030606948082915193	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9969393051917084	WITHOUT_CLASSIFICATION	0.0030606948082915193	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999928926926664	WITHOUT_CLASSIFICATION	7.107307333475154E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999928926926664	WITHOUT_CLASSIFICATION	7.107307333475154E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9995596630280963	WITHOUT_CLASSIFICATION	4.40336971903749E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9995596630280963	WITHOUT_CLASSIFICATION	4.40336971903749E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9995596630280963	WITHOUT_CLASSIFICATION	4.40336971903749E-4	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9997896760706881	WITHOUT_CLASSIFICATION	2.1032392931190296E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999938293728411	WITHOUT_CLASSIFICATION	6.1706271589446614E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999938293728411	WITHOUT_CLASSIFICATION	6.1706271589446614E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999938293728411	WITHOUT_CLASSIFICATION	6.1706271589446614E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998306960405888	WITHOUT_CLASSIFICATION	1.6930395941120366E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998306960405888	WITHOUT_CLASSIFICATION	1.6930395941120366E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998306960405888	WITHOUT_CLASSIFICATION	1.6930395941120366E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9993880298926903	WITHOUT_CLASSIFICATION	6.119701073096482E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999839198707839	WITHOUT_CLASSIFICATION	1.6080129216054176E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9997358764362497	WITHOUT_CLASSIFICATION	2.641235637503449E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9997358764362497	WITHOUT_CLASSIFICATION	2.641235637503449E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9997078543172367	WITHOUT_CLASSIFICATION	2.9214568276325777E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9980573640146141	WITHOUT_CLASSIFICATION	0.0019426359853859014	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9980573640146141	WITHOUT_CLASSIFICATION	0.0019426359853859014	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9849740928154164	IMPLEMENTATION	0.015025907184583591	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998013282347872	WITHOUT_CLASSIFICATION	1.9867176521278247E-4	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999791291100107	WITHOUT_CLASSIFICATION	2.0870889989238917E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999267285318456	WITHOUT_CLASSIFICATION	7.327146815430337E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999267285318456	WITHOUT_CLASSIFICATION	7.327146815430337E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999995472319585	WITHOUT_CLASSIFICATION	4.5276804141193577E-7	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999971382384998	WITHOUT_CLASSIFICATION	2.8617615001994623E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999987864732798	WITHOUT_CLASSIFICATION	1.2135267201782279E-6	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9622075659496926	WITHOUT_CLASSIFICATION	0.037792434050307314	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999115827474716	WITHOUT_CLASSIFICATION	8.841725252837556E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999267285318456	WITHOUT_CLASSIFICATION	7.327146815430337E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999267285318456	WITHOUT_CLASSIFICATION	7.327146815430337E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999267285318456	WITHOUT_CLASSIFICATION	7.327146815430337E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999267285318456	WITHOUT_CLASSIFICATION	7.327146815430337E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999267285318456	WITHOUT_CLASSIFICATION	7.327146815430337E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999917788846605	WITHOUT_CLASSIFICATION	8.221115339505546E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998870303666114	WITHOUT_CLASSIFICATION	1.1296963338869266E-4	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999612786623409	WITHOUT_CLASSIFICATION	3.872133765924772E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999434073372515	WITHOUT_CLASSIFICATION	5.6592662748431746E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999993748182296	WITHOUT_CLASSIFICATION	6.251817703485227E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9885581823383601	WITHOUT_CLASSIFICATION	0.011441817661639908	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.998312163532796	WITHOUT_CLASSIFICATION	0.0016878364672039798	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9997404758636192	WITHOUT_CLASSIFICATION	2.595241363807263E-4	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999459685424859	WITHOUT_CLASSIFICATION	5.40314575141026E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9995607898793671	WITHOUT_CLASSIFICATION	4.3921012063280826E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999855865749432	WITHOUT_CLASSIFICATION	1.4413425056820312E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999353693111301	WITHOUT_CLASSIFICATION	6.463068886990765E-4	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999833875817717	WITHOUT_CLASSIFICATION	1.6612418228187372E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999912919511213	WITHOUT_CLASSIFICATION	8.70804887869425E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9997705243533677	WITHOUT_CLASSIFICATION	2.2947564663246863E-4	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9997249372069299	WITHOUT_CLASSIFICATION	2.750627930701379E-4	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999038196268728	WITHOUT_CLASSIFICATION	9.618037312717815E-5	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999076625568231	WITHOUT_CLASSIFICATION	9.233744317690359E-5	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999802857453752	WITHOUT_CLASSIFICATION	1.971425462478959E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999938242504139	WITHOUT_CLASSIFICATION	6.175749586043618E-6	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999863737054113	WITHOUT_CLASSIFICATION	1.3626294588651897E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999989003511419	WITHOUT_CLASSIFICATION	1.0996488580886695E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999999491679353	WITHOUT_CLASSIFICATION	5.083206469706739E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999434750451596	WITHOUT_CLASSIFICATION	5.652495484048261E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999434750451596	WITHOUT_CLASSIFICATION	5.652495484048261E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999434750451596	WITHOUT_CLASSIFICATION	5.652495484048261E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999434750451596	WITHOUT_CLASSIFICATION	5.652495484048261E-5	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.999999704870415	WITHOUT_CLASSIFICATION	2.9512958499643246E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9835645078412913	WITHOUT_CLASSIFICATION	0.01643549215870866	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998350517836321	WITHOUT_CLASSIFICATION	1.6494821636792314E-4	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998350517836321	WITHOUT_CLASSIFICATION	1.6494821636792314E-4	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999453151538381	WITHOUT_CLASSIFICATION	5.46848461618438E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999680333546273	WITHOUT_CLASSIFICATION	3.196664537278805E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999773643686508	WITHOUT_CLASSIFICATION	2.263563134913516E-5	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999977492779286	WITHOUT_CLASSIFICATION	2.2507220713998158E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999802829094823	WITHOUT_CLASSIFICATION	1.9717090517765746E-5	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9990188682154365	WITHOUT_CLASSIFICATION	9.811317845635195E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999661036963755	WITHOUT_CLASSIFICATION	3.389630362441585E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999207225307342	WITHOUT_CLASSIFICATION	7.927746926573118E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999207225307342	WITHOUT_CLASSIFICATION	7.927746926573118E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999207225307342	WITHOUT_CLASSIFICATION	7.927746926573118E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999207225307342	WITHOUT_CLASSIFICATION	7.927746926573118E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999965599030035	WITHOUT_CLASSIFICATION	3.440096996554207E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999991837084661	WITHOUT_CLASSIFICATION	8.162915339203761E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999991837084661	WITHOUT_CLASSIFICATION	8.162915339203761E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999991837084661	WITHOUT_CLASSIFICATION	8.162915339203761E-7	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9995452544947571	WITHOUT_CLASSIFICATION	4.547455052429469E-4	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9998781806562173	WITHOUT_CLASSIFICATION	1.2181934378267105E-4	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999868149869664	WITHOUT_CLASSIFICATION	1.3185013033550964E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.882633459033666	IMPLEMENTATION	0.11736654096633407	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.882633459033666	IMPLEMENTATION	0.11736654096633407	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999998658786133	WITHOUT_CLASSIFICATION	1.3412138658109828E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999999741213	WITHOUT_CLASSIFICATION	2.5878826443941925E-11	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9993728314457019	WITHOUT_CLASSIFICATION	6.271685542980045E-4	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9993728314457019	WITHOUT_CLASSIFICATION	6.271685542980045E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999353498158683	WITHOUT_CLASSIFICATION	6.465018413165571E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999353498158683	WITHOUT_CLASSIFICATION	6.465018413165571E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999997786527204	WITHOUT_CLASSIFICATION	2.2134727961368205E-7	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9970254618074632	WITHOUT_CLASSIFICATION	0.002974538192536707	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9998179656203005	WITHOUT_CLASSIFICATION	1.8203437969951263E-4	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999296636246128	WITHOUT_CLASSIFICATION	7.03363753872025E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997915861741196	WITHOUT_CLASSIFICATION	2.0841382588045846E-4	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9998830064004995	WITHOUT_CLASSIFICATION	1.1699359950043749E-4	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999820290325319	WITHOUT_CLASSIFICATION	1.7970967468086848E-4	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999998534774723	WITHOUT_CLASSIFICATION	1.4652252762121537E-7	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.999931098550528	WITHOUT_CLASSIFICATION	6.890144947210977E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999328587342494	WITHOUT_CLASSIFICATION	6.714126575052429E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999328587342494	WITHOUT_CLASSIFICATION	6.714126575052429E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999933233755419	WITHOUT_CLASSIFICATION	6.676624458060118E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999933233755419	WITHOUT_CLASSIFICATION	6.676624458060118E-6	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9775777112909568	WITHOUT_CLASSIFICATION	0.022422288709043184	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999618781333738	WITHOUT_CLASSIFICATION	3.8121866626178056E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998943038508858	WITHOUT_CLASSIFICATION	1.0569614911410869E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994575554546669	WITHOUT_CLASSIFICATION	5.424445453330744E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994575554546669	WITHOUT_CLASSIFICATION	5.424445453330744E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994575554546669	WITHOUT_CLASSIFICATION	5.424445453330744E-4	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9995557954059487	WITHOUT_CLASSIFICATION	4.44204594051205E-4	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9996782755154732	WITHOUT_CLASSIFICATION	3.2172448452673575E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9986481965172959	WITHOUT_CLASSIFICATION	0.0013518034827040763	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9996048353087239	WITHOUT_CLASSIFICATION	3.951646912760359E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9998047744342732	WITHOUT_CLASSIFICATION	1.95225565726862E-4	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999864331309453	WITHOUT_CLASSIFICATION	1.3566869054628145E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.882633459033666	IMPLEMENTATION	0.11736654096633407	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999169652646238	WITHOUT_CLASSIFICATION	8.303473537622392E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999870468811065	WITHOUT_CLASSIFICATION	1.2953118893502315E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998238523917922	WITHOUT_CLASSIFICATION	1.7614760820787746E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9980421346785199	WITHOUT_CLASSIFICATION	0.0019578653214801837	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999381418760084	WITHOUT_CLASSIFICATION	6.185812399166523E-5	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9998966621109411	WITHOUT_CLASSIFICATION	1.0333788905890773E-4	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9992129328085676	WITHOUT_CLASSIFICATION	7.87067191432486E-4	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999828711602908	WITHOUT_CLASSIFICATION	1.7128839709205865E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999802181465229	WITHOUT_CLASSIFICATION	1.9781853477052445E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999995811908373	WITHOUT_CLASSIFICATION	4.1880916263884036E-7	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9997178297791951	WITHOUT_CLASSIFICATION	2.8217022080480986E-4	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9993872241841751	WITHOUT_CLASSIFICATION	6.127758158249705E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998462474581488	WITHOUT_CLASSIFICATION	1.5375254185113203E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9993803396048018	WITHOUT_CLASSIFICATION	6.196603951982861E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9901286011114074	WITHOUT_CLASSIFICATION	0.009871398888592595	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.999969736194849	WITHOUT_CLASSIFICATION	3.026380515099762E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997371075082353	WITHOUT_CLASSIFICATION	2.6289249176470033E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997371075082353	WITHOUT_CLASSIFICATION	2.6289249176470033E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997371075082353	WITHOUT_CLASSIFICATION	2.6289249176470033E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997371075082353	WITHOUT_CLASSIFICATION	2.6289249176470033E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9998333629691514	WITHOUT_CLASSIFICATION	1.6663703084849633E-4	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999973969362538	WITHOUT_CLASSIFICATION	2.603063746308252E-6	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.999304936826636	WITHOUT_CLASSIFICATION	6.950631733640336E-4	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9993056732176708	WITHOUT_CLASSIFICATION	6.943267823291347E-4	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999487218105834	WITHOUT_CLASSIFICATION	5.127818941666749E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9993742985358662	WITHOUT_CLASSIFICATION	6.257014641338025E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999921986259642	WITHOUT_CLASSIFICATION	7.801374035673447E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999921986259642	WITHOUT_CLASSIFICATION	7.801374035673447E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999921986259642	WITHOUT_CLASSIFICATION	7.801374035673447E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999921986259642	WITHOUT_CLASSIFICATION	7.801374035673447E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999921986259642	WITHOUT_CLASSIFICATION	7.801374035673447E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999921986259642	WITHOUT_CLASSIFICATION	7.801374035673447E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999921986259642	WITHOUT_CLASSIFICATION	7.801374035673447E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997318142618932	WITHOUT_CLASSIFICATION	2.6818573810691E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997318142618932	WITHOUT_CLASSIFICATION	2.6818573810691E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997318142618932	WITHOUT_CLASSIFICATION	2.6818573810691E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997318142618932	WITHOUT_CLASSIFICATION	2.6818573810691E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9966051918716702	WITHOUT_CLASSIFICATION	0.003394808128329821	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9966051918716702	WITHOUT_CLASSIFICATION	0.003394808128329821	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999997349032359	WITHOUT_CLASSIFICATION	2.6509676410152137E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999998006790966	WITHOUT_CLASSIFICATION	1.993209033966158E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999998006790966	WITHOUT_CLASSIFICATION	1.993209033966158E-6	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9987023045867077	WITHOUT_CLASSIFICATION	0.0012976954132922634	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9997156053373288	WITHOUT_CLASSIFICATION	2.8439466267126155E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998389241100317	WITHOUT_CLASSIFICATION	1.6107588996837783E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9991558855572509	WITHOUT_CLASSIFICATION	8.441144427492556E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9991558855572509	WITHOUT_CLASSIFICATION	8.441144427492556E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999863270193565	WITHOUT_CLASSIFICATION	1.3672980643562577E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998559676490252	WITHOUT_CLASSIFICATION	1.440323509748749E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998559676490252	WITHOUT_CLASSIFICATION	1.440323509748749E-4	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999977241884767	WITHOUT_CLASSIFICATION	2.275811523351388E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9981979555790728	WITHOUT_CLASSIFICATION	0.0018020444209273052	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9995095930519712	WITHOUT_CLASSIFICATION	4.90406948028848E-4	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999993132084192	WITHOUT_CLASSIFICATION	6.867915807584032E-7	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999632858345106	WITHOUT_CLASSIFICATION	3.671416548946493E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9996751246200708	WITHOUT_CLASSIFICATION	3.248753799291785E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9997566272157044	WITHOUT_CLASSIFICATION	2.4337278429563048E-4	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999307494740362	WITHOUT_CLASSIFICATION	6.925052596381707E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998713711273939	WITHOUT_CLASSIFICATION	1.2862887260608634E-4	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9979568802301085	WITHOUT_CLASSIFICATION	0.00204311976989149	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999996096144774	WITHOUT_CLASSIFICATION	3.9038552267165594E-7	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9962051718465058	WITHOUT_CLASSIFICATION	0.0037948281534942057	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999996813145888	WITHOUT_CLASSIFICATION	3.18685411079587E-7	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999999648977334	WITHOUT_CLASSIFICATION	3.5102266710962786E-8	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998549677878896	WITHOUT_CLASSIFICATION	1.4503221211044178E-4	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999792660262817	WITHOUT_CLASSIFICATION	2.073397371831433E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999876518650794	WITHOUT_CLASSIFICATION	1.2348134920529616E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999669691948654	WITHOUT_CLASSIFICATION	3.303080513462281E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9992832053627119	WITHOUT_CLASSIFICATION	7.167946372881342E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9992832053627119	WITHOUT_CLASSIFICATION	7.167946372881342E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.999773220467112	WITHOUT_CLASSIFICATION	2.2677953288807823E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999209121368876	WITHOUT_CLASSIFICATION	7.908786311236795E-5	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999397150027965	WITHOUT_CLASSIFICATION	6.028499720351295E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999631638448743	WITHOUT_CLASSIFICATION	3.6836155125837175E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9980423292579327	WITHOUT_CLASSIFICATION	0.001957670742067253	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9980423292579327	WITHOUT_CLASSIFICATION	0.001957670742067253	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9980423292579327	WITHOUT_CLASSIFICATION	0.001957670742067253	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9994008351392929	WITHOUT_CLASSIFICATION	5.991648607070747E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9996031278980751	WITHOUT_CLASSIFICATION	3.9687210192480566E-4	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999622102358879	WITHOUT_CLASSIFICATION	3.778976411200847E-5	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999879583430415	WITHOUT_CLASSIFICATION	1.2041656958418925E-5	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9997417267348025	WITHOUT_CLASSIFICATION	2.5827326519736065E-4	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999598845010391	WITHOUT_CLASSIFICATION	4.011549896086871E-5	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999677225196143	WITHOUT_CLASSIFICATION	3.2277480385743015E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999395276379802	WITHOUT_CLASSIFICATION	6.047236201971045E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999485605887766	WITHOUT_CLASSIFICATION	5.143941122338729E-4	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999700036038897	WITHOUT_CLASSIFICATION	2.9996396110354714E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9980614572907744	WITHOUT_CLASSIFICATION	0.0019385427092255825	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9973813483102346	WITHOUT_CLASSIFICATION	0.002618651689765378	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7777476155083052	WITHOUT_CLASSIFICATION	0.22225238449169485	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9996378350990023	WITHOUT_CLASSIFICATION	3.621649009977231E-4	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999627059798799	WITHOUT_CLASSIFICATION	3.729402012020771E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999639231629169	WITHOUT_CLASSIFICATION	3.607683708306014E-5	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9998046029860354	WITHOUT_CLASSIFICATION	1.9539701396469047E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999872519898667	WITHOUT_CLASSIFICATION	1.2748010133335234E-5	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9991228364211325	WITHOUT_CLASSIFICATION	8.771635788673986E-4	IMPLEMENTATION
